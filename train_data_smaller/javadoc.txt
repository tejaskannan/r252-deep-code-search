current mb per second rate limit merge
returns total bytes written merge
returns first doc id greater provided after doc
create new binaryrange provided encoded binary range name field name must null encodedrange encoded range
creates new instance customunifiedhighlighter analyzer analyzer used field index time used multi term queries internally passageformatter custompassageformatter generates snippets forms snippet objects offsetsource offsetsource used offsets retrieval breakiteratorlocale locale use dividing text passages null localeroot used breakiterator breakiterator use dividing text passages null breakiteratorgetsentenceinstancelocale used fieldvalue original field values delimited multivalsepchar nomatchsize size text returned highlighting performed
forces offset source highlighter
highlights terms extracted provided query within content provided field name
translate custom queries queries supported unified highlighter
must called increasing offset see fieldhighlighter usage
invoked call precedingoffset1 see fieldhighlighter usage
returns breakiteratorgetsentenceinstancelocale bounded maxlen secondary boundaries found using breakiteratorgetwordinstancelocale
create collapsing top docs collector orgapacheluceneindexsorteddocvalues field accepts also orgapacheluceneindexsortedsetdocvalues field collect fail illegalstateexception document contains one value field collapsefield sort field used group documents sort sort used sort collapsed hits collapsing keeps top sorted document per collapsed key must nonnull ie want groupsort relevance use sortrelevance topn many top groups keep
transform firstpassgroupingcollectorgettopgroupsint boolean output collapsetopfielddocs collapsing needs one pass get final top docs end first pass
create collapsing top docs collector orgapacheluceneindexnumericdocvalues field accepts also orgapacheluceneindexsortednumericdocvalues field collect fail illegalstateexception document contains one value field collapsefield sort field used group documents sort sort used sort collapsed hits collapsing keeps top sorted document per collapsed key must nonnull ie want groupsort relevance use sortrelevance topn many top groups keep
returns new collapsetopdocs containing topn collapsed results across provided collapsetopdocs sorting score collapsetopfielddocs instance must sorted
need tiebreak since score sort value first compare shard index lower shard wins iff shard index use hit index
input token stream bytestreamduplicatespotter object retains trie token sequences emitduplicates true duplicate tokens emitted use duplicatesequenceattribute attribute inspect number prior sightings tokens part sequence
reset sequence detection logic avoid continuation immediately previous bytes minimum dupsequencesize bytes need added new duplicate sequences reported hit counts reset calling method
add byte sequence b next byte sequence number times byte preceding 6 bytes seen sequence only counts 255
appends separator necessary bld builder extended whether append separator 11
creates date using calendar date format specification reference 523 bld builder fields fields extended true use extended format strictiso true allow iso formats 11
returns formatter outputs fields specified method examines fields provided returns isostyle formatter best fits useful outputting lesscommon iso styles yearmonth yyyymm monthday mmdd list provided may overlapping fields dayofweek dayofmonth case style chosen based following list thus example calendar style chosen dayofmonth higher priority dayofweek monthofyear calendar date style dayofyear ordinal date style weekofweekyear week date style dayofmonth calendar date style dayofweek week date style year weekyear supported formats are extended basic fields 20050325 20050325 yearmonthofyeardayofmonth 200503 200503 yearmonthofyear 200525 200525 yeardayofmonth 2005 2005 year 0325 0325 monthofyeardayofmonth 03 03 monthofyear 03 03 dayofmonth 2005084 2005084 yeardayofyear 084 084 dayofyear 2005w125 2005w125 weekyearweekofweekyeardayofweek 2005w5 2005w5 weekyeardayofweek 2005w12 2005w12 weekyearweekofweekyear w125 w125 weekofweekyeardayofweek w12 w12 weekofweekyear w5 w5 dayofweek 102030040 102030040 hourminutesecondmilli 102030 102030 hourminutesecond 1020 1020 hourminute 10 10 hour 2030040 2030040 minutesecondmilli 2030 2030 minutesecond 20 20 minute 30040 30040 secondmilli 30 30 second 040 040 milli 1030040 1030040 hoursecondmilli 1020040 1020040 hourminutemilli 1030 1030 hoursecond 10040 10040 hourmilli 20040 20040 minutemilli plus datetime formats like datettime indicates official iso format excluded passing strictiso true method side effect input collection fields input collection modifiable field added formatter removed collection including duplicates input collection unmodifiable side effect occurs side effect processing useful need know whether fields converted formatter not achieve this pass modifiable list check empty exit fields fields get formatter for null updated method call unless unmodifiable removing fields built formatter extended true use extended format with separators strictiso true stick exactly iso8601 false include additional formats suitable formatter illegalargumentexception format fields 11
creates date using ordinal date format specification reference 522 bld builder fields fields extended true use extended format 11
creates date using calendar date format specification reference 521 bld builder fields fields extended true use extended format strictiso true allow iso formats true reduced precision 11
checks iso flag set throwing exception is fields fields strictiso true iso formats allowed 11
adds time fields builder specification reference 531 bld builder fields fields extended whether use extended format strictiso whether strict reducedprec whether date reduced precision datepresent whether date 11
build exception specific status cause
read stream
creates new specialpermision object
check current stack specialpermission access according securitymanager
extracts sorted list declared version constants class argument would normally versionclass exposed testing classescontainingversionconstants
return version elasticsearch used create index given settings illegalstateexception given index settings doesnt contain value key value indexmetadatasettingversioncreated
returns minimum compatible version based current version ie node needs least return version order communicate node running current version returned version cases smallest major version release unless current version beta rc release version returned
returns version given string representation current version argument null empty
returns minimum created index version version supports indices created lower versions cant used version also used file based serialization backwards compatibility ie serialization code used read write file formats like transaction logs cluster state index metadata
returns true iff version compatible otherwise false
location code source elasticsearch location code source elasticsearch may null
asking jar metadata throw exception tests matter configured
specified cause unrecoverable error method rethrow cause separate thread caught bubbles uncaught exception handler throwable throwable test
unwrap specified throwable looking suppressed errors errors root cause specified throwable cause root throwable optional error one found suppressed root cause tree rooted specified throwable
rethrows first exception list adds remaining suppressed list given list empty exception thrown
dont swallow exceptions allow propagate
throws specified exception null specified true returned
throws runtime exception given exceptions added suppressed given list empty exception thrown
deduplicate failures exception message index
adds new piece metadata given key provided key already present corresponding metadata replaced
parses output generatefailurexcontentxcontentbuilder params exception boolean
returns underscore case name given exception method strips elasticsearch prefixes exception names
serializes given exceptions stacktrace elements well its suppressed exceptions given output stream
adds new header given key method replace existing header header key already exists
render exception xcontent encapsulated within field object named error level details rendered depends value detailed parameter its false simple message based type message exception rendered its true detail provided including guesses root causes cause potentially stack trace method usually used exception rendered full xcontent object output parsed failurefromxcontentxcontentparser method
returns root cause exception multiple different shards caused different exceptions given exception instance orgelasticsearchelasticsearchexception empty array returned
returns true iff given class registered exception read
retrieve innermost cause exception none returns current exception
static toxcontent helper method renders orgelasticsearchelasticsearchexception throwable instances xcontent delegating rendering toxcontentxcontentbuilder params innertoxcontentxcontentbuilder params throwable string string map map throwable method usually used throwable rendered part another xcontent object result parsed back using fromxcontentxcontentparser method
generate elasticsearchexception xcontentparser return original exception type ie nodeclosedexception example wraps type reason cause exception also recursively parses tree structure cause returning tree structure elasticsearchexception instances
returns root cause exception multiple different shards caused different exceptions
return detail message including message nested exception one
returns rest status code associated exception
deserializes stacktrace elements well suppressed exceptions given output stream adds given exception
returns array registered pairs handle ids exception classes pairs provided every registered exception array registered pairs handle ids exception classes
check whether exception contains exception given type either given class contains nested cause given type extype exception type look whether nested exception specified type
builds toxcontent using json xcontentbuilder compares result given json string format default stack trace exception rendered parameter errortrace forces stack trace rendered like rest api errortrace parameter set true
test values like arrays numbers ignored parsing back exception
deletes meta state directories recursively given data locations datalocations data location delete
reads state given file compares expected version actual version state
tries load latest state given datalocations tries load latest state determined states version one data directories none latest states loaded exception thrown prevent accidentally loading previous state silently omitting latest state logger logger instance datalocations datalocations try latest state null state found
writes given state given directories state written state directory value statedirname underneath given file locations created doesnt exist state serialized temporary file directory atomically moved its target filename pattern prefixversionst state state object write locations locations state written to ioexception ioexception occurs
creates new metadatastateformat instance
verifies full match syncid files allocate matching node
decision throttle decision across nodes shard make sure shard moves ignore unassigned list
cant find primary data still find replica data go ahead keep unassigned allocated today behavior relies primary corruption identified adding replica replica actually recover cause corruption identified see corruptfiletest
verifies primary data matching data nodes shard keeps unassigned allocated later on
verifies sync id match files match allocate matching node
verifies primary data data nodes shard keeps unassigned allocated later on
tests node allocate due matching throttled move shard ignored wait till throttling done
verifies sync id match files match allocate matching node
verifies still fetching data async manner replica shard moves ignore unassigned
verifies anything index creation fetch data ends called since need go try find better copy shard
verifies index creation dont go fetch data keep replica shard unassigned let shard allocator allocate it isnt copy around find anyhow
returns prioritycomparator uses routingallocation index metadata access index setting per index
writes index state method public testing purposes
loads full state includes global state indices meta state
loads index state provided index name returning null doesnt exists
writes global state without indices states
loads indices states available disk
tests node allocate to throttling and one moved ignore unassigned allocated to
tests node allocate shard to allocated it
tests node allocated to decider said no still force allocation it
tests nodes prior copies given shard return decision no allocationdecidercanforceallocateprimaryshardrouting routingnode routingallocation returns throttle decision node force allocate node
tests node returns data found null allocation id moved ignore unassigned
tests nodes prior copies given shard return throttle decision force allocate node instead throttle
tests node previously primary allocated node again
tests restoring snapshot find node shard copy allocation deciders say yes allocate node
tests node returns data shard allocation id match active allocation ids moved ignore unassigned
tests one node returns shardlockobtainfailedexception another properly loads store select second node target
tests async fetch returns data shard allocated
tests node returns data found it moved ignore unassigned
tests restoring snapshot find node shard copy allocation deciders say no still allocate node
tests nodes prior copies given shard return decision no allocationdecidercanforceallocateprimaryshardrouting routingnode routingallocation returns yes decision least one nodes force allocate one
tests restoring snapshot find node shard copy allocation deciders say throttle add ignored shards
tests restoring snapshot dont find node shard copy shard remain unassigned list allocated later
tests node returns shardlockobtainfailedexception considered valid shard copy
allocator responsible allocating given shardrouting
split list node shard states groups yesnothrottle based allocation deciders
builds map nodes corresponding allocation decisions nodes
builds list nodes matchanyshard set false nodes allocation id matching insyncallocationids added list otherwise node shard added list entries matching allocation id always front list
finds store assigned shard fetched data returns null none found
allocator responsible allocating given shardrouting
process existing recoveries replicas see need cancel find better match today better match one full sync id match compared one previous recovery
determines shard allocated least one node based allocation deciders returns best allocation decision allocating shard node ie yes least one node decided yes throttle least one node decided throttle none nodes decided yes throttle explain mode also returns nodelevel explanations second element returned tuple
takes store info nodes shard store adds node decisions leaving node explanations untouched nodes store information
returns node highest non zero byte match compared primary
process changes needed allocation based fetch result
called response handler async action fetch data verifies still working cache generation otherwise results discarded goes fills relevant data shard response failures issuing reroute end make sure another round allocations taking new data account
returns number async fetches currently ongoing
nodes fetching data
finds nodes need fetched nodes data fetch mode
fetches data relevant shard ongoing async fetches going on new ones initiated call result data ignorenodes nodes supposed ignored round since fetching async need keep around make sure add back responses fetched returned
fills shard fetched data new data nodes fresh nodeentry removes nodes longer part state
returns actual data note make sure check hasdata first use actual data
test peer reuse recovery shared recoverfromgatewayit recoverybackwardscompatibilityit indexsettings settings index test restartcluster runnable restart cluster test logger logger logging usesyncids use synced flush cant use synced bwc tests
ensure read pregenerated cluster state
allocate unassigned shards nodes if any valid copies shard already exist individual implementations makeallocationdecisionshardrouting routingallocation logger make decisions assigning shards nodes allocation allocation state container object
builds decisions nodes cluster explain api provide information allocation decisions node still waiting allocate shard eg due fetching shard data
computes returns design allocating single unassigned shard called assigned shard allocateunassigneddecisionnottaken returned
elasticsearch 20 removed several deprecated features well support lucene 3x method calls metadataindexupgradeservice makes sure indices compatible current version metadataindexupgradeservice might also update obsolete settings needed allows upgrading global custom meta data via metadataupgradercustommetadataupgraders input metadata upgrade needed upgraded metadata
loads current meta state index new cluster state checks persisted index state written disk returned run data nodes return states indices actually shard allocated current node previouslywrittenindices list indices state already written potentiallyunwrittenindices list indices state potentially written previousmetadata last meta data know of meta data indices previouslywrittenindices list persisted newmetadata new metadata iterable indices states written disk
throws iae pre 019 state detected
test really tests worst case scenario broken setting setting prevents index allocated metadata recover case ability check index local recovery disk sane successfully create indexservice also includes plugins etc
test really tests worst case scenario missing analyzer setting case ability check index local recovery disk sane successfully create indexservice also includes plugins etc
test ensures index deletion takes place node offline node rejoins cluster deletes index locally instead importing dangling index
allocates provided list dangled indices sending master node allocation
cleans dangling indices already allocated provided meta data
finds new dangling indices iterating indices trying find indices state disk part provided meta data detected dangled already
current set dangling indices
process dangling indices based provided meta data handling cleanup finding new dangling indices allocating outstanding ones
asserts cluster state contains nbtasks tasks verify given predicate
cancels locally running task using task manager api
notifies master node create new persistent task assign node
waits given persistent task comply given predicate call back listener accordingly taskid persistent task id predicate persistent task predicate evaluate timeout timeout waiting listener callback listener
executes asynchronous persistent task action using client origin set context listener wrapped ensure proper context restored
waits persistent tasks comply given predicate call back listener accordingly predicate predicate evaluate timeout timeout waiting listener callback listener
notifies master node completion persistent task failure null persistent task considered successfully completed
notifies master node state persistent task changed persistent task implementers shouldnt call method directly use allocatedpersistenttaskupdatepersistenttaskstate instead
notifies master node remove persistent task cluster state
reassigns task another node
updates task state
checks task currently present list right allocation id
adds new task builder task added id found calling getlastallocationid method
removes task
finds least loaded node satisfies selector criteria
returns node id params executed default implementation returns least loaded data node
creates allocatedpersistenttask communicating task manager
returns true cluster state changes require reassign persistent tasks happen following situations node left added routing table changed master node changed metadata changed persistent tasks changed
restarts record running persistent task cluster state id id persistent task allocationid allocation id persistent task failure reason restarting task null task completed successfully listener listener called task removed
removes persistent task id id persistent task listener listener called task removed
update state persistent task taskid id persistent task taskallocationid expected allocation id persistent task taskstate new state listener listener called task removed
evaluates cluster state tries assign tasks nodes currentstate cluster state analyze updated version cluster state
creates new assignment given persistent task taskname tasks name taskparams tasks parameters currentstate current clusterstate new assignment
creates new persistent task master node taskid tasks id taskname tasks name taskparams tasks parameters listener listener called task started
returns true persistent tasks equal previous current cluster state
updates persistent state corresponding persistent task doesnt affect status allocated task
waits given persistent task comply given predicate call back listener accordingly predicate persistent task predicate evaluate timeout timeout waiting listener callback listener
unregisters cancels locally running task using task manager notification master send upon cancellation
creates persistenttasksclusterservice single persistenttasksexecutor implemented bifunction
returns assignmentdecision whether given persistent task assigned node cluster decision depends current value setting enableassignmentdeciderclustertasksallocationenablesetting assignmentdecision
test enableassignmentdeciderclustertasksallocationenablesetting setting correctly prevents persistent tasks assigned cluster restart
format permission type name actions string
printsconfirms policy exceptions user
parses plugin policy set permissions permission formatted output users
rest handlers added plugin
create record action plain transportaction handles it supporting plain transportactions needed plain transportaction
returns providers unicast host lists zen discovery key returned map name host provider see orgelasticsearchdiscoverydiscoverymodulediscoveryhostsprovidersetting value supplier construct host provider selected use transportservice use form orgelasticsearchcommontransporttransportaddress portion orgelasticsearchclusternodediscoverynode networkservice use find publish host address current node
returns custom discovery implementations added plugin key returned map name discovery implementation see orgelasticsearchdiscoverydiscoverymodulediscoverytypesetting value supplier construct discovery threadpool use schedule ping actions transportservice use communicate nodes masterservice use submit cluster state update tasks clusterapplier use locally apply cluster state updates clustersettings use get cluster settings hostsprovider use find configured hosts pinged initial discovery
construct plugin info stream stream ioexception io exception occurred reading plugin info stream
reads plugin descriptor file path path root directory plugin plugin info ioexception io exception occurred reading plugin descriptor
construct plugin info name name plugin description description plugin version opaque version identifier plugin elasticsearchversion version elasticsearch plugin built javaversion version java plugin built classname entry point plugin extendedplugins plugins plugin extends spi hasnativecontroller whether plugin native controller
close resources opened plugin ioexception plugin failed close resources
returns components added plugin components returned implement lifecyclecomponent lifecycle managed note aid migration away guice objects returned components bound guice themselves client client make requests system clusterservice service allow watching updating cluster state threadpool service allow retrieving executor run async action resourcewatcherservice service watch changes node local files scriptservice service allow running scripts local node xcontentregistry registry extensible xcontent parsing environment environment path setting configurations nodeenvironment node environment used coordinate access data paths namedwriteableregistry registry namedwriteable object parsing
path native controller plugin native components
return platform name based os name darwinx8664 linuxx8664 windowsx8664 nix platforms moreorless uname suname m converted lower case however consistency different operating systems architecture amd64 replaced x8664 i386 x86 windows its windows followed either x86 x8664
test parse set permissions correctly simple policy
test parse set permissions correctly complex policy
test format simple permissions properly
test format unresolved permission properly
return new classloader across parent extended loaders
remove plugin specified pluginname terminal terminal use inputoutput env environment local node pluginname name plugin remove purge true plugin configuration files removed otherwise preserved ioexception io exception occurs performing file operation userexception plugin name null userexception plugin directory exist userexception plugin bin directory directory
add reader shard level results aggregation
build spec plain parsefield name name behavior plain parsefield parser registered names specified plain parsefield reader registered parsefieldgetpreferredname sure name ws namedwriteablegetwriteablename returns reader reader reads behavior internode protocol parser parser read behavior rest request
specification pipelineaggregator name name aggregation might parsed deserialized make sure name pipelineaggregationbuilder pipelineaggregator return namedwriteablegetwriteablename builderreader reader registered aggregations builder typically reference constructor takes streaminput aggregatorreader reads pipelineaggregator stream parser reads aggregation builder xcontent
specification pipelineaggregator name holds names aggregation might parsed parsefieldgetpreferredname special name readers registered name pipelineaggregationbuilder pipelineaggregator return namedwriteablegetwriteablename builderreader reader registered aggregations builder typically reference constructor takes streaminput aggregatorreader reads pipelineaggregator stream parser reads aggregation builder xcontent
add reader shard level results aggregation
specification custom suggester name holds names suggester might parsed parsefieldgetpreferredname special name request builder suggestion response readers registered name query suggestion response use namedwriteablegetwriteablename return values too builderreader reader registered suggesters builder typically reference constructor takes streaminput builderparser parser reads suggesters builder xcontent suggestionreader reader registered suggesters suggestion response typically reference constructor takes streaminput
specification custom suggester name name suggester might parsed deserialized make sure query builder suggestion response reader return name namedwriteablegetwriteablename builderreader reader registered suggesters builder typically reference constructor takes streaminput builderparser parser reads suggesters builder xcontent suggestionreader reader registered suggesters suggestion response typically reference constructor takes streaminput
returns additional persistent tasks executors added plugin
creates test environment bin config plugins directories
creates fake jar file empty class files
returns map httpservertransport suppliers see orgelasticsearchcommonnetworknetworkmodulehttptypesetting configure specific implementation
returns map transport suppliers see orgelasticsearchcommonnetworknetworkmoduletransporttypekey configure specific implementation
returns list transportinterceptor instances used intercept incoming outgoing transport internode requests must return null namedwriteableregistry registry named writeables registered threadcontext threadcontext current nodes clients threadpool used set additional headers interceptors
convenience method write plugin properties file
verify signature downloaded plugin zip signature obtained source downloaded plugin appending asc url expected plugin signed elastic signing key id d27d666cd88e42b4 zip path downloaded plugin zip urlstring url source downloade plugin zip ioexception io exception occurs reading various input streams pgpexception pgp implementation throws internal exception verification
downloads plugin returns file downloaded to
check candidate plugin jar hell installing
copies files tmpconfigdir destconfigdir files existing source destination skipped
load information plugin verify installed errors
downloads zip url method also validates downloaded plugin zip via following means official plugin download sha512 checksum validate integrity downloaded zip also download armored signature validate authenticity downloaded zip nonofficial plugin download sha512 checksum fallback sha1 checksum validate integrity downloaded zip terminal terminal log messages urlstring url plugin zip tmpdir temporary directory write downloaded files officialplugin true plugin official plugin path downloaded plugin zip ioexception io exception occurs download reading files resources pgpexception exception occurs verifying downloaded zip signature userexception checksum validation fails
returns official plugin names look similar pluginid
moves plugin directory final destination
sets attributes path iff posix attributes supported
installs plugin tmproot plugins dir plugin bin dir andor config dir moved
returns url elasticsearch plugin maven
moves bin config directories plugin exist
returns url official elasticsearch plugin
copies files tmpbindir destbindir along permissions dest dirs parent
constructs new pluginservice settings settings system modulesdirectory directory modules exist in null modules loaded filesystem pluginsdirectory directory plugins exist in null plugins loaded filesystem classpathplugins plugins exist classpath loaded
reloads lucene spi implementations using new classloader method must called new classloader created register services use
returns classes injected guice plugins extend lifecyclecomponent
extracts installed plugin directories provided rootpath rootpath path plugins installed list plugin paths installed rootpath ioexception io exception occurred reading directories
verify given plugin compatible current elasticsearch installation
mark analysisprovider requiring indexs settings
defines azureunicasthostsprovider testing purpose able resolve network addresses azure instances running host different ports
register existing node azure node exposing address details htrough nodename name node
construct customnameresolver
value gce hostname type discover appropriate host resolved gce metadata customnameresolverresolveifpossiblestring
attempts scattergather request expects unique responses per subrequest
run request receives predictably randomized number deprecation warnings rerunning backtoback helps ensure warnings maintained across requests
exception handler exceptions associated specific channel exception exception
options request valid rest endpoint verify 200 http response code returned response allow header includes list valid http methods endpoint see hrefhttpstoolsietforghtmlrfc2616section92http11 92 options
test post request indexsettings matches update settings handler indexsettings returns 405 error see hrefhttpsgithubcomelasticelasticsearchissues17853issue 17853 information
requests valid rest endpoint using unsupported http method verify 405 http response code returned response allow header includes list valid http methods endpoint see hrefhttpstoolsietforghtmlrfc2616section1046http11 1046 405 method allowed
test niohttpservertransport supports expect 100continue http header interruptedexception client communication server interrupted
test niohttpservertransport responds 100continue expectation large contentlength 413 status interruptedexception client communication server interrupted
construct new pipelining handler handler used downstream http decodingaggregation logger logging unexpected errors maxeventsheld maximum number channel events retained prior aborting channel connection required events cannot queue indefinitely
turns given bytesreference bytebuf note returned bytebuf reference internal pages bytesreference dont free bytes reference bytebuf goes scope
returns whether input origin allowed configuration true origin allowed otherwise false
returns http response headers added cors preflight response httpheaders http response headers added
creates new builder instance origin passed in origins origin used builder
specifies preflight response headers added preflight response niocorsconfigbuilder support method chaining
creates new builder instance allowing origin wildcard origin
creates new builder instance allowing origin matches pattern pattern pattern match incoming origins
builds niocorsconfig settings specified previous method calls niocorsconfig configured corsconfig instance
specifies headers returned cors accesscontrolallowheaders response header client specifies headers request example calling xhrsetrequestheadermycustomheader somevalue server receive header name accesscontrolrequestheaders preflight request server decide allows header sent real request remember preflight real request request asking server allow request headers headers added preflight accesscontrolallowheaders response header niocorsconfigbuilder support method chaining
disables cors support niocorsconfigbuilder support method chaining
creates niocorsconfigbuilder instance specified origin niocorsconfigbuilder support method chaining
making preflight request client perform two request inefficient setting set cors accesscontrolmaxage response header enables caching preflight response specified time time preflight request made max maximum time seconds preflight response may cached niocorsconfigbuilder support method chaining
returns http response headers added cors preflight response intermediary like load balancer might require cors preflight request certain headers set enables headers added values must dynamically created http response created example date response header accomplished using callable call method invoked http response created name name http header valuegenerator callable invoked http response creation type value callable return niocorsconfigbuilder support method chaining
sole constructor value value returned call method invoked
create niocorsconfigbuilder instance specified pattern origin pattern regular expression pattern match incoming origins on niocorsconfigbuilder configured origin pattern
returns http response headers added cors preflight response intermediary like load balancer might require cors preflight request certain headers set enables headers added name name http header value values http header type values iterable contains niocorsconfigbuilder support method chaining
specifies allowed set http request methods returned cors accesscontrolrequestmethod response header methods httpmethods allowed niocorsconfigbuilder support method chaining
specifies cors request rejected its invalid processing cors headers set request processed may always desired setting check origin valid valid processing take place error returned calling client niocorsconfigbuilder support method chaining
web browsers may set origin request header null resource loaded local file system calling method enable successful cors response wildcard cors response header accesscontrolalloworigin niocorsconfigbuilder support method chaining
returns http response headers added cors preflight response intermediary like load balancer might require cors preflight request certain headers set enables headers added name name http header values values http header niocorsconfigbuilder support method chaining
default cookies included cors requests method enable cookies added cors requests calling method set cors accesscontrolallowcredentials response header true please note cookie support needs enabled client side well client needs optin send cookies calling xhrwithcredentials true default value withcredentials false case cookies sent setting true included cookies cross origin requests niocorsconfigbuilder support method chaining
creates new instance specified niocorsconfig
construct new pipelining handler handler used downstream http decodingaggregation logger logging unexpected errors maxeventsheld maximum number channel events retained prior aborting channel connection required events cannot queue indefinitely
test netty4httpservertransport supports expect 100continue http header interruptedexception client communication server interrupted
test netty4httpservertransport responds 100continue expectation large contentlength 413 status interruptedexception client communication server interrupted
returns whether input origin allowed configuration true origin allowed otherwise false
returns http response headers added cors preflight response httpheaders http response headers added
creates new builder instance origin passed in origins origin used builder
specifies preflight response headers added preflight response netty4corsconfigbuilder support method chaining
creates new builder instance allowing origin wildcard origin
creates new builder instance allowing origin matches pattern pattern pattern match incoming origins
builds netty4corsconfig settings specified previous method calls netty4corsconfig configured corsconfig instance
specifies headers returned cors accesscontrolallowheaders response header client specifies headers request example calling xhrsetrequestheadermycustomheader somevalue server receive header name accesscontrolrequestheaders preflight request server decide allows header sent real request remember preflight real request request asking server allow request headers headers added preflight accesscontrolallowheaders response header netty4corsconfigbuilder support method chaining
disables cors support netty4corsconfigbuilder support method chaining
creates netty4corsconfigbuilder instance specified origin netty4corsconfigbuilder support method chaining
making preflight request client perform two request inefficient setting set cors accesscontrolmaxage response header enables caching preflight response specified time time preflight request made max maximum time seconds preflight response may cached netty4corsconfigbuilder support method chaining
returns http response headers added cors preflight response intermediary like load balancer might require cors preflight request certain headers set enables headers added values must dynamically created http response created example date response header accomplished using callable call method invoked http response created name name http header valuegenerator callable invoked http response creation type value callable return netty4corsconfigbuilder support method chaining
sole constructor value value returned call method invoked
create netty4corsconfigbuilder instance specified pattern origin pattern regular expression pattern match incoming origins on netty4corsconfigbuilder configured origin pattern
returns http response headers added cors preflight response intermediary like load balancer might require cors preflight request certain headers set enables headers added name name http header value values http header type values iterable contains netty4corsconfigbuilder support method chaining
specifies allowed set http request methods returned cors accesscontrolrequestmethod response header methods httpmethods allowed netty4corsconfigbuilder support method chaining
specifies cors request rejected its invalid processing cors headers set request processed may always desired setting check origin valid valid processing take place error returned calling client netty4corsconfigbuilder support method chaining
web browsers may set origin request header null resource loaded local file system calling method enable successful cors response wildcard cors response header accesscontrolalloworigin netty4corsconfigbuilder support method chaining
returns http response headers added cors preflight response intermediary like load balancer might require cors preflight request certain headers set enables headers added name name http header values values http header netty4corsconfigbuilder support method chaining
default cookies included cors requests method enable cookies added cors requests calling method set cors accesscontrolallowcredentials response header true please note cookie support needs enabled client side well client needs optin send cookies calling xhrwithcredentials true default value withcredentials false case cookies sent setting true included cookies cross origin requests netty4corsconfigbuilder support method chaining
creates new instance specified netty4corsconfig
like assertacessisdenied bulk requests since entire request failed individual ones
test tries truncate larger files index trigger leftovers recovery target happens recovery last chunk file transferred replica throw exception make sure recovery fails leave half baked files target later allow full recovery ensure still recover dont run corruptions
resolve given index names index ids creating new index ids new indices repository
reads instance repositorydata xcontent loading snapshots indices metadata
writes snapshots metadata related indices metadata xcontent omitting incompatible snapshots
returns immutable collection snapshot ids repository active incompatible snapshots
remove snapshot remove indices longer exist repository due deletion snapshot
resolve index name index id specific repository throwing exception index could resolved
returns snapshotstate given snapshot returns null state snapshot
returns immutable collection snapshot ids snapshots contain given index
resolve given index names index ids
reads incompatible snapshot ids xcontent loading new instance repositorydata created invoking instance plus incompatible snapshots read xcontent
add snapshot indices repository returns new instance snapshot already exists repository data method throws illegalargumentexception
writes incompatible snapshot ids xcontent
constructs new register repository request cause repository registration cause name repository name type repository type verify verify repository creation
unregisters repository cluster method called master node removes repository information cluster metadata request unregister repository request listener unregister repository listener
registers new repository cluster method called master node tries create new repository master successful adds new repository cluster metadata request register repository request listener register repository listener
sets repository settings settings repository settings request
creates repository holder
returns registered repository method called master node repositoryname repository name registered repository repositorymissingexception repository name isnt registered
checks new repositories appeared disappeared cluster metadata updates current list repositories accordingly event cluster changed event
creates new unregister repository request cause repository unregistration cause name repository name
creates new repository adds list registered repositories repository name different types settings already exists closed replaced new repository repository name exists type settings new repository ignored repositorymetadata new repository metadata true new repository added false ignored
closes given repository
constructs shared file system repository
parse read settings available azureclient namespace settings settings parse named configurations
parse settings single client
azure enumerationresults response
retrieves object name derived paths named pathx 0 x 10 counterpart objectspathsstring
decline path like httphostportbucket 10 derived paths like httphostportbucketpath0 httphostportbucketpath0path1 httphostportbucketpath0path1path2 etc
azure error httpsdocsmicrosoftcomenusrestapistorageservicesstatusanderrorcodes2
builds default request handlers
creates azurestoragefixture custom endpoint
test given string starts specified prefix ignoring upperlower case str string check prefix prefix look javalangstringstartswith
updates settings building clients client cache cleared future client requests use new refreshed settings clientssettings settings new clients old settings
creates cloudblobclient invocation using current client settings cloudblobclient thread safe settings change therefore instance cacheable reused inside thread logically coupled ops operationcontext used specify proxy new context required call
extract blob name uri like httpsmyserviceazurenetcontainerpathtomyfile remove container part first part path gives pathtomyfile uri uri parse blob name relative container
makes sure url white listed points local file system matches one root path pathrepo
constructs readonly urlbased repository
method registers 3 snapshotrestore repositories repositoryfs fs repository used create snapshots repositoryurl url repository used restore snapshots created using previous repository uses urlfixture restore snapshots http repositoryfile similar previous repository using file prefix instead http
creates urlfixture
delete shard snapshot snapshotid snapshot id shardid shard id
loads information shard snapshot
checks snapshot file already exists list blobs fileinfo file check blobs list blobs true file exists list blobs
snapshot individual file fileinfo file snapshotted
bwc layer ensure update snapshots metadata corresponding hashes compare them new logic storefilemetadata reads entire si segmentsn files strengthen comparison files persegment percommit level
maintains single lazy instance blobstore
constructs new context shard shard snapshotted snapshotid snapshot id indexid id index snapshotted snapshotstatus snapshot status report progress
configures ratelimiter based repository global settings repositorysettings repository settings setting setting use configure rate limiter defaultrate default limiting rate rate limiter null throttling needed
constructs new restore context shard shard restore snapshotid snapshot id indexid id index restored snapshotshardid shard snapshot data restored recoverystate recovery state report progress
get latest snapshot index blob id snapshot index blobs named indexn n next version number index blob written individual indexn blob written never overwritten highest numbered indexn blob latest one contains current snapshots repository package private testing
constructs new blobstorerepository metadata metadata repository including name settings globalsettings settings node repository object created
finds next available blob number blobs list blobs repository next available blob number
create snapshot index commit point snapshotindexcommit snapshot commit point
delete shard snapshot
writes incompatible snapshot ids list incompatiblesnapshots blob repository package private testing
restores file asynchronous method upon completion operation latch getting counted failures added failures list fileinfo file restored
maintains single lazy instance blobcontainer
loads available snapshots repository blobs list blobs repository tuple blobstoreindexshardsnapshots last snapshot index generation
performs restore operation
writes new index file shard removes unreferenced files repository need really careful handling index files case failures make sure dont index file points files deleted snapshots list active snapshots container filelistgeneration generation number snapshot index file blobs list blobs container reason reason explaining shard index file written
writes blob resolving blob name using blobname method blob compressed checksum written required obj object serialized blobcontainer blob container name blob name
reads blob specified name without resolving blobname using using blobname method blobcontainer blob container blobname blob name
codec codec name blobnameformat format blobname stringformat format reader prototype object deserialize xcontent compress true content compressed
codec codec name blobnameformat format blobname stringformat format reader prototype object deserialize xcontent compress true content compressed xcontenttype content type used write operations
writes blob atomic manner resolving blob name using blobname method blob compressed checksum written required atomic move might inefficient repositories also cannot override existing files obj object serialized blobcontainer blob container name blob name
blobnameformat format blobname stringformatlocale string object format reader prototype object deserialize objects type
reads parses blob given name applying name translation using link blobname method blobcontainer blob container name name translated parsed blob object
create repository random name
create environment random pathhome pathrepo
restoring snapshot contains multiple files must succeed even files already exist shards store
refreshes settings amazons3 clients clears cache existing clients new clients build using new settings old clients usable released release destroyed instead returned cache
attempts retrieve client name cache client exist created
implementation ignores failifalreadyexists flag s3 api way enforce due weak consistency model
uploads blob using multipart upload requests
returns number parts size partsize needed reach totalsize along size last or unique part totalsize total size partsize part size tuple containing number parts fill totalsize size last part
uploads blob using single upload request
constructs canned acl string
retrieves object name derives paths named pathx 0 x 10 counterpart objectspathsstring
decline path like httphostportbucket 10 derived paths like httphostportbucketpath0 httphostportbucketpath0path1 httphostportbucketpath0path1path2 etc
s3 error httpsdocsawsamazoncomamazons3latestapierrorresponseshtml
s3 deleteresult response
builds default request handlers
s3 listbucketresult response
creates amazons3fixture
constructs s3 backed repository
creates new s3blobstore random settings blobstore uses mockamazons3 client
load client settings given settings note always least return client named default
parse settings single client
call client needed anymore
executes provided operation store
locates keytab file environment verifies exists expects keytab file exist configdirrepositoryhdfskrb5keytab
performs twophase leading namenode transition namenode id transition standby namenode id transition active configuration client configuration haadmin tool ioexception event raised exception namenode failover
get given setting repository settings throwing repositoryexception setting exist empty
generates given number googlecloudstorageclientsettings along settings build
generates random googlecredential along corresponding service account file provided byte array
generates random googlecloudstorageclientsettings along settings build
loads service account file corresponding given client name file defined client null credential returned settings settings clientname client name serviceaccountcredentials use given client null service account defined
uploads blob using resumable upload method multiple requests independently retried case failure see httpscloudgooglecomstoragedocsjsonapiv1howtosresumableupload blobinfo info blob uploaded inputstream stream containing blob data failifalreadyexists whether throw filealreadyexistsexception given blob already exists
return true iff given bucket exists bucketname name bucket true iff bucket exists
deletes multiple blobs specific bucket using batch request blobnames names blobs delete
deletes blob specific bucket blobname name blob
returns javaioinputstream given blob name blobname name blob inputstream used read blobs content
writes blob specific bucket inputstream content blob written blobsize expected size blob written failifalreadyexists whether throw filealreadyexistsexception given blob already exists
uploads blob using multipart upload method a single multipartrelated request containing data metadata request gziped see httpscloudgooglecomstoragedocsjsonapiv1howtosmultipartupload blobinfo info blob uploaded inputstream stream containing blob data blobsize size failifalreadyexists whether throw filealreadyexistsexception given blob already exists
list blobs specific bucket names prefixed path base path blobs list path removed names blobs returned prefix prefix blobs list map blob names metadata
returns true blob exists specific bucket blobname name blob true iff blob exists
storage bucket json representation defined httpscloudgooglecomstoragedocsjsonapiv1bucketresource
storage error json representation
builds json response
storage object json representation defined httpscloudgooglecomstoragedocsjsonapiv1objectsresource
builds default request handlers
creates googlecloudstoragefixture
pins tls trust certificates and importantly overrides connection urls case custom endpoint setting connections dont fully honor setting bugs sdk default connection factory opens new connection request required storage instance threadsafe
refreshes client settings clears client cache subsequent calls googlecloudstorageserviceclient return new clients constructed using parameter settings clientssettings new settings used building clients subsequent requests
attempts retrieve client cache client exist created latest settings populate cache returned instance cached calling code instead use possibly updated instance requested calling method clientname name client settings used create client cached client storage instance used manage objects blobs
creates client used manage google cloud storage objects client threadsafe clientname name client settings use including secure settings clientsettings name client settings use including secure settings new client storage instance used manage objects blobs
converts timeout values settings timeout value google cloud sdk
converts array strings array paths adding additional child specified
returns index paths
tries lock given shards id shard lock required perform kind write operation shards data directory like deleting files creating new index writer recover different shard instance it shard lock acquired shardlockobtainfailedexception thrown shardid shard id lock locktimeoutms lock timeout milliseconds shard lock call shardlockclose release lock
tries lock local shards given index shard locks cant acquired shardlockobtainfailedexception thrown previously acquired locks released index index lock shards locktimeoutms long wait acquiring indices shard locks shardlock instances index ioexception ioexception occurs
returns shard paths excluding custom shard path note shards allocated one returned paths returned array may contain paths nonexisting directories indexsettingshascustomdatapath resolvecustomlocationindexsettings shardid
returns currently lock shards note shard ids return contain valid index uuid
returns array nodepaths
best effort ensure actually write permissions write data directories prevents disasters nodes started wrong username etc
resolves existing paths indexfoldername datapathsnodesnodeidindices
deletes shard data directory iff shards locks successfully acquired shardid id shard delete delete ioexception ioexception occurs
acquires releases writelock files given shard paths writelock file assumed shard paths index directory used elasticsearch lockobtainfailedexception locks could acquired
find shards index returning map nodepath number shards path index index filter shards map nodepath count shards index path ioexception ioexception occurs
tries find allocated shards given index current node note methods prone raceconditions filesystem layer since might see directories created concurrently its traversing index index filter shards set shard ids ioexception ioexception occurs
returns folder names datapathsnodesnodeidindices folder
resolve custom path indexs shard uses indexmetadatasettingdatapath setting determine root path index indexsettings settings index
deletes indexes data directory recursively iff indexes shards locks successfully acquired indexes shard directories cant locked non shards deleted index index delete locktimeoutms long wait acquiring indices shard locks indexsettings settings index deleted ioexception shards data directories cant locked deleted
deletes indexes data directory recursively note method assumes shard lock acquired index index delete indexsettings settings index deleted
scans node paths loads existing metadata file found new meta data generated persisted nodepaths
deletes shard data directory note method assumes shard lock acquired method also attempt acquire write locks shards paths deleting data best effort lock released deletion happens order allow folder deleted lock shards lock ioexception ioexception occurs elasticsearchexception writelock acquirable
method tries write empty file moves using atomic move operation method throws illegalstateexception operation supported filesystem test executed data directories method cleans files even case error
returns array nodes data locations illegalstateexception node configured store local locations
return directory names nodesnodeidindices directory given node path nodepath path directories could indices given node path ioexception io exception occurs traversing filesystem
returns unique uuid describing node uuid persistent data folder node remains across restarts
returns nodepathpath shard
ensure configured temp directory valid directory
asserts two environments equivalent things environment cares ie setting object may contain different setting
checks specified url pointing local file system does resolves specified url list configured repository roots specified url doesnt match roots returns null
data location cluster name sub directory used upgrade old data paths new ones include cluster name used write files removed es 60
read stream
plugins custom settings
lines procselfcgroup file represents control groups elasticsearch process belongs line file represents control group hierarchy form d first field representing hierarchy id second field representing commaseparated list subsystems bound hierarchy last field representing control group lines procselfcgroup ioexception io exception occurs reading procselfcgroup
reads file containing single line path path file read single line ioexception io exception occurs reading file
returns amount free physical memory bytes
map control groups elasticsearch process belongs note map control groups vary subsystem subsystem additionally map cached running process reclassified map subsystems control group elasticsearch process ioexception io exception occurs reading procselfcgroup
cpu time statistics tasks elasticsearch control group controlgroup control group elasticsearch process cpuacct subsystem cpu time statistics ioexception io exception occurs reading cpustat control group
returns lines cpustat control group elasticsearch process belongs cpu subsystem lines represent cpu time statistics form nrperiods d nrthrottled d throttledtime d nrperiods number period intervals specified cpucfsperiodus elapsed nrthrottled number times tasks given control group throttled throttledtime total time nanoseconds tasks given control group throttled controlgroup control group elasticsearch process belongs cpu subsystem lines cpustat ioexception io exception occurs reading cpustat control group
basic cgroup stats basic cgroup stats null io exception occurred reading cgroup stats
system load averages array windows method returns null linux method returns 1 5 15minute load averages macos method return 1minute load average available system load averages null
returns line cpuacctusage control group elasticsearch process belongs cpuacct subsystem line represents total cpu time nanoseconds consumed tasks control group controlgroup control group elasticsearch process belongs cpuacct subsystem line cpuacctusage ioexception io exception occurs reading cpuacctusage control group
checks cgroup stats available checking existence procselfcgroup sysfscgroupcpu sysfscgroupcpuacct sysfscgroupmemory true stats available otherwise false
returns total amount swap space bytes
returns line memorylimitinbytes control group elasticsearch process belongs memory subsystem line represents maximum amount user memory including file cache controlgroup control group elasticsearch process belongs memory subsystem line memorylimitinbytes ioexception io exception occurs reading memorylimitinbytes control group
line procloadavg first three fields load averages averaged 1 5 15 minutes fourth field two numbers separated slash first number currently runnable scheduling entities second number scheduling entities system fifth field pid recently created process line procloadavg null
returns given method operatingsystemmxbean null method found unavailable
returns line cpucfsquotaus control group elasticsearch process belongs cpu subsystem line represents total time microseconds tasks control group run one period specified cpucfsperiodus controlgroup control group elasticsearch process belongs cpu subsystem line cpucfsquotaus ioexception io exception occurs reading cpucfsquotaus control group
returns line cpucfsperiodus control group elasticsearch process belongs cpu subsystem line represents period time microseconds frequently control groups access cpu resources reallocated controlgroup control group elasticsearch process belongs cpu subsystem line cpucfsperiodus ioexception io exception occurs reading cpucfsperiodus control group
returns amount free swap space bytes
returns total amount physical memory bytes
returns line memoryusageinbytes control group elasticsearch process belongs memory subsystem line represents total current memory usage processes cgroup in bytes controlgroup control group elasticsearch process belongs memory subsystem line memoryusageinbytes ioexception io exception occurs reading memoryusageinbytes control group
take large value intended positive overflowed return longmaxvalue instead negative number
read stream
read stream
returns given method unixoperatingsystemmxbean null method found unavailable
returns size in bytes virtual memory guaranteed available running process
returns cpu time in milliseconds used process java virtual machine running 1 supported
returns maximum number file descriptors allowed system 1 supported
returns number opened file descriptors associated current process 1 supported
returns given method operatingsystemmxbean null method found unavailable
returns heap usage percent 1 signals unknown
resolves gc type memory pool name javalangmanagementmemorypoolmxbeangetname
runs command given args output found terminal command created found command
prints help message command terminal
parses options command args executes it
construct command specified command description runnable execute main invoked description command description beforemain beforemain runnable
executes command errors thrown
wipes input output
configures logging without elasticsearch configuration files based system property esloggerlevel only such logging written console
constructs new user exception specified exit status message underlying cause exitcode exit code msg message cause underlying cause
constructs userexception exit status message show user
prints message terminal verbosity level without newline
prompt yes answer user method loop y n or default empty value entered
construct multicommand specified command description runnable execute main invoked description multicommand description beforemain beforemain runnable
construct command specified command description runnable execute main invoked commands constructed constructor must take ownership configuring logging description command description beforemain beforemain runnable
create environment command use overrideable tests
ensure given setting exists reading system properties already set
orgelasticsearchxpackcoreschedulerschedulerengineschedulenextscheduledtimeafterlong long respect license expiry date
calculates delay next trigger time now valid time bracket respect expirationdate delay 0 now time bracket delay start time bracket now passed valid time bracket delay null expirationdate license expiry date milliseconds current time milliseconds time delay
parses license json format instance license licensedefinition licenses definition xcontenttype content type license
method chooses license type randomly type null however randomly choose trial basic types types selfgenerated
determine graph exploration enabled exploration disabled license expired mode not operationmodeplatinum operationmodetrial true long license valid otherwise false
determine watcher available based current license watcher available license active hasnt expired one following types operationmodestandard operationmodeplatinum operationmodegold operationmodetrial true long license valid otherwise false
determine upgrade api enabled upgrade api available license types except operationmodemissing true long license valid otherwise false
determine document level security dls field level security fls enabled dls fls disabled mode not operationmodeplatinum operationmodetrial note consider state license security suddenly leak information true enable dls fls otherwise false
whether custom role providers allowed based license operationmode
determine current license allows retention indices modified users non operationmodebasic license update retention period note consider state license change remembered fix license true user allowed modify retention otherwise false
true auditing enabled
beats allowed long active license type trial standard gold platinum true long valid license
type realms enabled based license operationmode
updates current state license change features available mode mode type current license active true current license exists within allowed usage period false expired missing mostrecenttrialversion cluster has point commenced trial recent version that may null never generated trial license cluster recent trial prior metadata tracked 61
true ip filtering enabled
determine jdbc support enabled jdbc available operationmodeplatinum operationmodetrial licences
true authentication authorization enabled indicate realms available allowedrealmtype enabled realms
determine machine learning enabled machine learning disabled license expired mode not operationmodeplatinum operationmodetrial true long license valid otherwise false
logstash allowed long active license type trial standard gold platinum true long valid license
extract list remote cluster aliases list index names remote index names form clusteraliasindexname clusteralias extracted index name represents remote index indices collection index names remote cluster names
remote cluster license info method invoked instance represents failing license check remote cluster license info
checks specified clusters license compatibility specified callback invoked clusters licensecompatible otherwise specified callback invoked first cluster licensecompatible clusteraliases cluster aliases check listener callback
constructs error message license incompatibility feature name feature initiated remote cluster license check remoteclusterlicenseinfo remote cluster license info cluster failed license check error message representing license incompatibility
constructs remote cluster license checker specified license predicate checking license compatibility predicate need check active license state handled remote cluster license checker client client predicate license predicate
creates license state given license type active state checks given method returns expected
checks ack message going from license type to license type todo check actual messages number them copied previous license tests
registers new license cluster master operation installs new license master provided valid
notifies registered licensees license state change andor new active license based license currentlicensesmetadata additionally schedules license expiry notifications event callbacks relative current licenses expiry
remove license cluster state metadata
global block orgelasticsearchgatewaygatewayservicestatenotrecoveredblock notify licensees issue autogenerated license license installedissued yet
masteronly operation generate onetime global self generated license self generated license generated stored current cluster state metadata existing license cluster currently basic license expiration date new basic license expiration date generated
verifies license content signature using packaged public key license verify true valid false otherwise
sets license license license builder
exception thrown feature action requires valid license license expired feature accessible expiredfeaturemetadata exceptions rest header
checks signature self generated license older version needs recreated new key
one license displayed per feature selected license latest expirydate licenses feature licenses sorted latest issuedate
returns encrypted private key file content provided passphrase
read public key file content
decrypts provided encrypteddata passphrase
returns encrypted public key file content provided passphrase
encrypts provided data passphrase
read encrypted private key file content provided passphrase
current licenses status
returns true license autogenerated by license plugin false otherwise
operation mode license computed license type license mode file
returns builder converts pre 20 licenses new license format
sets operation mode file watcher license initializes file watcher license type allows override operation mode file
returns true iff license production licnese
generates signature licensespec signature structure version magic pubkeydigest signedlicensecontent signed license
implements hashcode map string arrays map string arrays doest work hashcode
implements equals map string arrays map string arrays used xpack protocol classes doest work equal
write given user inner authenticateduser
compare fields
compare fields
equality test
total number input records read processed record count date parse error records count order record count records missing fields counted still written total number input records read long
compare fields
compare fields embedded anomaly records if any
compare fields embedded anomaly records if any
parse categorizationanalyzer configuration custom parser needed due complexity format many elements able specified either name builtin element object containing custom definition
method used unit tests production code config always parsed fragment
builds job job
set wall clock time last data upload lastdatatime wall clock time
overridden equality test
returns default description given detector detector detector default description requested default description
appends given stringbuilder default description given detector detector detector default description requested sb stringbuilder append
overridden equality test
gets limit number examples stored per category limit null set
maximum size model mb anomaly detector drop new samples prevent model using memory set memory limit null set
parse date object given current parser field name parser current xcontentparser fieldname fields preferred name utilized exception parsed date object ioexception xcontentparser
lists indices types compared equality sorted first test could fail simply indices types lists different orders
lists indices types compared equality sorted first test could fail simply indices types lists different orders
set source watch
deletes users every test case test adds any
reenables watcher every test case test disables it one does
tests run administrative user use esshieldrunasuser become less privileged user
check connected cluster named elasticsearch
create index index docs
parse script configured given settings
helper method throw exception one type script specified
build scripts following xcontent structure id source lang options option0 option1 params param0 param1 example source return mathlogdocpopularity paramsmultiplier lang painless params multiplier 1000 note lang options params included specified also handles templates special way scriptcontenttypeoption option provided scripttypeinline specified template preserved raw field source query lang options option0 option1 params param0 param1
since inline scripts accept code rather id must also able handle template parsing hence need custom parsing code templates consist either string json object json object discovered content type option must also saved compiler option
validates parameters creates script defaultlang default lang compiletime constant must provided runtime way case legacy default language used previously stored queries
constructor script requires use compiler options type scripttype lang language script scripttype scripttypeinline scripttypestored scripts null specified access scripts stored part stored scripts deprecated api idorcode id script scripttype scripttypestored code script scripttype scripttypeinline options map compiler options script scripttype scripttypeinline null otherwise params userdefined params bound script execution
set id type stored script
creates script read input stream
parse xcontent script following formats parsed simple format defaults scripttypeinline compiler options userdefined params example return mathlogdocpopularity 100 complex format scripttype idorcode required lang options params required exactly one id source must specified id source lang options option0 option1 params param0 param1 example source return mathlogdocpopularity paramsmultiplier lang painless params multiplier 1000 also handles templates special way complexly formatted query specified another complex json object query assumed template format preserved source query lang options option0 option1 params param0 param1 parser xcontentparser used defaultlang default language use language specified default language isnt necessarily one defined scriptdefaultscriptlang due backwards compatibility requirements related stored queries using previously default languages parsed script
check whether many compilations within last minute throwing circuit breaking exception so variant token bucket algorithm httpsenwikipediaorgwikitokenbucket thought bucket water every time bucket checked water added proportional amount time elapsed since last time checked enough water removed request allowed enough water request denied like normal bucket water added overflows bucket extra watercapacity discarded never water bucket size bucket
configures maximum script compilations per five minute window newrate new expected maximum number compilations per five minute window
compiles script using given context compiled script may used construct instances script given context
calling getname
standard constructor id unique identifier type readwritten stream parsefield specifies name used parse input queries defaultenabled whether scripttype run default
reads int input stream converts scripttype scripttype read stream throws illegalstateexception scripttype found based id
return score current document
set current document run script next
doc lookup lucene segment script created for
recommended test anyway
returns json version exception debugging
create new scriptexception message short simple summary happened compile error must null cause underlying cause exception must null scriptstack implementationspecific stacktrace error script must null empty though avoided possible script identifier script failed must null lang scripting engine language painless must null nullpointerexception parameters null
deserializes scriptexception streaminput
ensure script stack immutable
test elements present json output
ensure round trip serialization
ensure parameters null
returns method given name throws exception multiple found
construct context related instance compiled classes
write xcontent scriptmetadata following format written storedscriptsourcetoxcontentxcontentbuilder params storedscriptsourcetoxcontentxcontentbuilder params
delete script existing stored scripts based userspecified id id userspecified id use look up
parse xcontent scriptmetadata following format parsed storedscriptsourcefromxcontentxcontentparser boolean storedscriptsourcefromxcontentxcontentparser boolean loading source prior 60 multiple scripts using old namespace id format langid found id different languages error occur
convenience method build return new scriptmetadata adding specified stored script
add new script existing stored scripts based userspecified id script id already exists overwritten id userspecified id use look up source userspecified stored script data held storedscriptsource
convenience method build return new scriptmetadata deleting specified stored script
standard storedscriptsource constructor lang language compile script with must null source source source compile with must null options compiler options compiled with must null use empty map represent options
validates parameters creates storedscriptsource ignoreempty specify true ignoreempty empty source check allow empty templates loaded backwards compatibility allow empty templates loaded backwards compatibility
write xcontent storedscriptsource following format written script lang source options option0 option1 note source parameter also handle templates written complex json
writes storedscriptsource stream write lang source options parameters
since stored scripts accept templates rather scripts must also able handle template parsing hence need custom parsing source templates consist either string json object json object discovered content type option must also saved compiler option
reads storedscriptsource stream version 53 read lang source options parameters versions prior 53 source parameter read bytes reference
parse xcontent storedscriptsource following formats parsed simple script format compiler options userdefined params example script return mathlogdocpopularity 100 format requires lang specified using deprecated stored script namespace as url parameter put request see scriptmetadata information stored script namespaces complex script format using new stored script namespace lang source required options optional script lang source options option0 option1 example script lang painless source return mathlogdocpopularity paramsmultiplier use source may also substituted code backcompat 53 55 format example script lang code options option0 option1 note source parameter also handle template parsing including complex json object content content request parsed described above parsed storedscriptsource
converts parseexception compiletime linktime scriptexception
hack filter scripts must return booleans instead doubles expression do see httpsgithubcomelasticelasticsearchissues26429
parses restrequest body returns multisearchtemplaterequest
actual search response null failure
actual failure message null failure
simplicity create minimal response already dedicated test class search response parsing serialization
note cant rely normal equals hashcode checks since searchresponse doesnt currently implement equals hashcode instead compare template outputs equality perform sanity checks search response instances
compile template string in case mustache object later reused execution fill missing parameter values templatesource string representing template compile compiled template object later execution
template compiled template object wrapper
test parsing multisearchtemplateresponse inner failures dont support asserting xcontent equivalence given exceptions parsed back original class run usual abstractxcontenttestcasetestfromxcontent without failures test failures disable asserting xcontent equivalence end
test template expressed single escaped string
test template contain conditional clause case beginning string
test template contain conditional clause case end string
sets many search requests specified multi search requests allowed ran concurrently
add search template request execute note order important search response returned order search requests
add search template request execute note order important search response returned order search requests
compile time function extracts name variable tojsonvariablenametojson
creates xcontentparser given string replacing single quote double quotes
note checking equality xcontent parsing omit two parts request simulate option since parameter included requests xcontent its instead used determine request endpoint random searchrequest since component affects request parameters also isnt captured requests xcontent
httpswwwietforgrfcrfc4627txt unicode characters may placed within quotation marks except characters must escaped quotation mark reverse solidus control characters u0000 u001f
enables explanation hit score computed disabled default
enables profiling query disabled default
adds deleterequest list actions execute
adds framed data binary format
sets number shard copies must active proceeding write see replicationrequestwaitforactiveshardsactiveshardcount details
timeout wait index operation cant performed immediately defaults 1m
adds updaterequest list actions execute
adds framed data binary format
adds updaterequest list actions execute
timeout wait index operation cant performed immediately defaults 1m
adds indexrequest list actions execute follows behavior indexrequest for example id provided one generated usage create flag
adds deleterequest list actions execute
adds indexrequest list actions execute follows behavior indexrequest for example id provided one generated usage create flag
adds new rescorer rescorer rescorer configuration window rescore window chaining
separated list routing values control shards search executed on
set enable scrolling search request specified timeout
adds generic sort builder orgelasticsearchsearchsortsortbuilders
document types execute search against defaults executed types
sets filter executed query executed affect search hits not aggregations filter always executed last filtering mechanism
adds docvalue based field load return field stored recommended use non analyzed numeric fields name field get docvalue
sets indices search executed on
clears rescorers builder sets first one use multiple rescore windows use addrescorerorgelasticsearchsearchrescorerescorerbuilder int rescorer rescorer configuration chaining
orgelasticsearchsearchsearchhit returned version
indicates whether response contain stored source every hit
routing values control shards search executed on
adds aggregation search operation
sets minimum score docs filtered out
set sort values indicates docs request search after
clears rescorers builder chaining
set enable scrolling search request specified timeout
sets boost specific index receive query executed it index index apply boost indexboost boost apply index
indicate source returned every hit include andor exclude set include simple wildcard elements include optional include optionally wildcarded pattern filter returned source exclude optional exclude optionally wildcarded pattern filter returned source
indicate source returned every hit include andor exclude set include simple wildcard elements includes optional list include optionally wildcarded pattern filter returned source excludes optional list exclude optionally wildcarded pattern filter returned source
sets preference execute search defaults randomize across shards set local prefer local shards custom value guarantees order used across different requests
clears rescorers builder sets first one use multiple rescore windows use addrescorerorgelasticsearchsearchrescorerescorerbuilder int rescorer rescorer configuration window rescore window chaining
adds aggregation search operation
sets source request searchsourcebuilder
index start search from defaults 0
adds script based field load return field stored recommended use non analyzed numeric fields name name represent value return hit script script use
search type execute defaults orgelasticsearchactionsearchsearchtypedefault
optional timeout control long search allowed take
applies sorting controls scores tracked well defaults false
specifies type requested indices ignore wildcard indices expressions example indices dont exist
stats groups request aggregated under
sets request use request cache not assuming for example now used never cached default not set null default index level setting request cache enabled not
number search hits return defaults 10
adds new rescorer rescorer rescorer configuration chaining
string representation search type execute defaults orgelasticsearchactionsearchsearchtypedefault one dfsquerythenfetchdfsquerythenfetch dfsqueryandfetchdfsqueryandfetch querythenfetchquerythenfetch queryandfetchqueryandfetch
optional document count upon collecting search query early terminate
adds sort given field name sort ordering field name field order sort ordering
constructs new search source builder search query orgelasticsearchindexqueryquerybuilders
adds stored field load return note must stored part search request none specified source document return
query profiled defaults false
delegates orgelasticsearchsearchbuildersearchsourcebuildersuggestsuggestbuilder
stats groups request aggregated under
orgelasticsearchsearchsearchhit returned explanation hit ranking
set enable scrolling search request
sets fields load return part search request none specified source document returned
ask shard check whether inactive reduces indexing buffer so
shard calls indexingdelete op
called indexshard record estimated bytes written translog operation
ask shard refresh background free heap
tests index structure creation fails relocation new node shard stuck properly failed
deletes index assigned node method cleans disk folders relating index deal inmemory structures call removeindexindex indexremovalreason string
creates new mapper service given index order administrative work like mapping updates should not used document parsing result exception note returned mapperservice closed unneeded
creates new pending delete shard
method verifies given metadata holds sane values create indexservice method tries update meta data created indexservice given metadataupdate different given metadata method throw exception creation update fails created indexservice registered closed immediately
deletes shard already acquired shard lock reason reason shard deletion lock lock shard delete indexsettings shards index settings ioexception ioexception occurs
cache something calculated shard level shard shard item part reader reader shard used invalidate cache changes cachekey key thing cached within shard loader loads data cache needed contents cache result calling loader
creates new indexservice without registering
processes pending deletes given index method acquire locks given index process pending deletes index pending deletes might occur os doesnt allow deletion files used different process ie windows files might still open virus scanner shared filesystem replica might closed primary deleted causing problems delete calls schedule deletes later index index process pending deletes timeout timeout used processing pending deletes
returns indexservice specified index exists otherwise indexnotfoundexception thrown
clears caches given shard id shard still allocated node
loads cache result computing needed executing query phase otherwise deserializing cached value searchcontextqueryresult contexts query result combination load compute allows single load operation cause requests key wait till loaded reuse cache
shard request cached all
adds pending delete given index
checks changes adding removing indices shards allowed illegalstateexception changes allowed
creates new pending delete index
method deletes shard contents disk given shard id method fail shard deleting prevented candeleteshardcontentshardid indexsettings shards lock acquired data nodes deleted shard last shard folder index method attempt remove index folder well reason reason shard deletion shardid shards id delete clusterstate required access indexes settings etc ioexception ioexception occurs
returns sharddeletioncheckresult signaling whether shards content given shard deleted shardid shard delete indexsettings shardss relevant indexsettings required access indexes settings etc
deletes index store trying acquire shards locks index method delete metadata index even actual shards cant locked package private testing
adds pending delete given index shard
verify contents disk given index deleted not delete contents method assumes index already deleted cluster state andor explicitly index tombstones index index make sure deleted disk clusterstate clusterstate ensure index part indexmetadata index loaded disk
creates new indexservice given metadata indexmetadata index metadata create index builtinlisteners list builtin lifecycle indexeventlistener used along side perindex listeners resourcealreadyexistsexception index already exists
returns indexservice specified index exists otherwise returns null
method returns true current node allowed delete given index case index deleted metadata allocation local node index isnt shared file system index index check whether deletion allowed indexsettings indexsettings given index true index deleted node
clear entries belong given index
get usage statistics given shard
test checks edge case where node index lets call uuid 1 deleted so tombstone entry exist cluster state created new index uuid 2 shutdown node comes back online look tombstones deletions proceed trying delete uuid 1 throw errors index still exists cluster state case ensuring tombstones name current valid indices dont cause confusion trying delete index exists see httpsgithubcomelasticelasticsearchissues18054
tests teh mapperservice created indicesservicecreateindexmapperserviceindexmetadata contains custom types similarities registered plugins
read stream
issues cache clear waits 30 seconds field data breaker cleared
returns true nodes used noop breaker
reset breaker settings back defaults
relocate shard block cluster state processing relocation target node activate shard
test safely concurrently index get stats test inspired serialization issue arose due race getting doc stats heavy indexing race could lead deleted docs negative would serialized variablelength long since serialization negative longs using variablelength format unsupported orgelasticsearchcommoniostreamstreamoutputwritevlonglong stream would become corrupted here want test continue get stats indexing
closes current recovery target waits certain timeout resources freed returns true resetting recovery successful false recovery target already cancelled failed marked done
creates new recovery target object represents recovery provided shard indexshard local shard want recover sourcenode source node recovery recover listener called recovery completedfailed ensureclusterstateversioncallback callback ensure current node least cluster state provided version necessary primary relocation new primary knows ongoing replica recoveries replicating documents see recoverysourcehandler
renames temporary files true name potentially overriding existing files
implementation recoverytargethandler
mark current recovery done
creates orgapachelucenestoreindexoutput given file name note indexoutput actually point temporary file note use getopenindexoutputstring filename retrieve indexoutput later stage
fail recovery call listener e exception encapsulating failure sendshardfailure indicates whether notify master shard failure
cancel recovery calling method clean temporary files release store unless object use in case cleaned ongoing users call decref cancellablethreads used threads interrupted
remove orgapachelucenestoreindexoutput given file callers responsibility close
fail recovery given id if found remove recovery collection id id recovery fail e exception reason failure sendshardfailure true shard failed message sent master
cancel recovery given id if found remove recovery collection
gets recoverytarget given id recoverystatus returned its ref count already incremented make sure its safe use however must call recoverytargetdecref done it typically using method trywithresources clause returns null recovery found
mark recovery given id done if found
important recoverytargettryincref successfully called status
cancel ongoing recoveries given shard reason reason cancellation shardid shardid cancel recoveries true recovery cancelled
resets recovery performs recovery restart currently recovering index shard indexshardperformrecoveryrestart newly created recoverytarget
starts new recovery given shard source node state id new recovery
similar getrecoverylong throws exception recovery found
returns recovery source node only nonnull peer recovery
percent bytes recovered total files bytes to be recovered
percent recovered ie reused files total files recovered
total bytes files recovered potentially yet done
number file recovered excluding ongoing files
total number bytes th shard
total number files recovered potentially yet done
returns elapsed time millis 0 timer started
total number bytes recovered far including existing reused
construct request starting peer recovery shardid shard id recover targetallocationid allocation id target shard sourcenode source node remover targetnode target node recover metadatasnapshot lucene metadata primaryrelocation whether recovery primary relocation recoveryid recovery id startingseqno starting sequence number
initialize request specified relocation recoveryid recovery id relocation shardid shard id relocation primarycontext primary context
performs recovery local engine target
send given snapshots operations sequence number greater specified staring sequence number handlers target node operations bulked single request depending operation count limit sizeinbytes limit startingseqno sequence number operations sequence number greater sent requiredseqnorangestart lower sequence number required range endingseqno upper bound sequence number range sent inclusive snapshot translog snapshot replay operations local checkpoint target total number operations sent ioexception io exception occurred reading translog snapshot
perform phase two recovery process phase two uses snapshot current translog without acquiring write lock however translog snapshot pointintime view translog sends translog operation target node replayed new shard startingseqno sequence number start recovery from sequencenumbersunassignedseqno ops sent requiredseqnorangestart lower sequence number required range ending endingseqno endingseqno highest sequence number sent snapshot snapshot translog local checkpoint target
perform phase1 recovery operations indexcommit snapshot performed commit operations files fsyncd effectively allowed index recovery phases done phase1 examines segment files target node copies segments missing segments size checksum reused
determines source translog ready sequencenumberbased peer recovery main condition source translog contains operations local checkpoint target already know translog contains contain ops source local checkpoint stop check there true source ready sequencenumberbased recovery ioexception io exception occurred reading translog snapshot
tests scenario recovery target successfully sends recovery request source channel gets closed source working recovery process
obtains snapshot store metadata recovery target recoverytarget target recovery snapshot store metadata
get starting sequence number sequencenumberbased request recoverytarget target recovery starting sequence number sequencenumbersunassignedseqno obtaining starting sequence number failed
prepare start recovery request recoverytarget target recovery start recovery request
test makes sure infinite loop flushing the condition shouldperiodicallyflush eventually false peerrecovery primary sends fullybaked index commit
adds recovery source handler
blocking version syncedflushservicesendpresyncrequestslist clusterstate shardid actionlistener
blocking version syncedflushserviceattemptsyncedflushshardid actionlistener
send presync requests started copies given shard
returns number flight operations primary 1 upon error
utility method perform synced flush shards multiple indices see attemptsyncedflushshardid actionlistener details
failure constructor
total number successful shards
array shard failures
success constructor
test breaker correctly redistributes different breaker case request breaker borrows space fielddata breaker
validate child settings valid
checks whether parent breaker tripped
allows register custom circuit breaker warning overwrite existing custom breaker name
tests plugins register preconfigured token filters vary behavior based elasticsearch version lucene version vary based version all
tests plugins register preconfigured token filters vary behavior based elasticsearch version lucene version vary based version all
tests plugins register preconfigured char filters vary behavior based elasticsearch version lucene version vary based version all
loads hunspell dictionary given local locale locale hunspell dictionary loaded nodesettings node level settings env node environment from conf path resolved loaded hunspell dictionary exception loading fails due io errors malformed dictionary files
scans hunspell directory loads found dictionaries
returns hunspell dictionary given locale locale name locale
hunspell dictionary directory may contain settingsyml holds dictionary specific settings default values settings defined given default settings dir directory dictionary defaults default settings dictionary resolved settings
creates new global scope analysis provider without index specific settings settings provider itself used get default instance analysis factory without binding index environment nodes environment load resources persistent storage name name analysis component new provider instance ioexception ioexception occurs illegalargumentexception provider requires analysis settings ie requiresanalysissettings returns true
get pre built analyzer name fallback default one name analyzer name defaultanalyzer default analyzer name found
map containing preconfigured token filters available installing plugin map name token filter class lucene tokenfilterfactory emulating lucene plain tokenfilterfactory null test look name lucene plain tokenfilterfactory right hand side void
map containing preconfigured tokenizers available installing plugin map name token filter class lucene tokenizerfactory emulating lucene plain tokenizerfactory null test look name lucene plain tokenizerfactory right hand side void
checks cluster state matches internal state indicesclusterstateservice instance state cluster state used matching
finds routing source node peer recovery return null found note method expects shard routing require peer recovery use shardroutingrecoverysource check needed not
deletes indices with shard data event cluster change event
returns shard specified id exists otherwise returns null
removes shard entries failed shards cache longer allocated node master sends shard failures shards marked actively allocated node dont actually exist node resends shard failures shards still marked allocated node previously failed state new cluster state
notifies master shards dont exist supposed active node state new cluster state
removes shards currently loaded indicesservice disappeared routing table current node method delete shard data state new cluster state
removes indices shards allocated node delete shard data wait enough shard copies exist cluster deleting shard data triggered orgelasticsearchindicesstoreindicesstore event cluster changed event
rare cases possible nodes gets instruction replace replica shard thats postrecovery new initializing primary allocation id happen batching cluster states include starting replica closing indices opening allocating primary shard node question node clean its initializing replica replace new initializing primary
test ensures node joins brand new cluster different cluster uuid different cluster previously part of inmemory index data structures removed disk contents indices remain later imported dangling indices normally first cluster state update node receives new cluster would contain cluster block would cause inmemory structures removed see indicesclusterstateserviceapplyclusterstateclusterchangedevent case node joined cluster state updates behind would received cluster block case still need remove inmemory structures ensuring data remains disk test executes particular scenario
prepares settings gathering elasticsearch system properties optionally loading configuration settings input custom settings use overwritten settings configuration file properties map properties keyvalue pairs usually commandline configpath path config directory use null indicate default settings environment tuple
finish preparing settings replacing forced settings defaults need added
checks settings values make sure old prompt settings deprecated 600 check removed 800
initializes builder given input settings applies settings specified map these settings typically come command line output settings builder apply input default settings input input settings essettings map apply settings
prepares settings gathering elasticsearch system properties setting defaults
test add appropriate mock services plugins added heavy test testing component weve broken past important
rank copy data according adaptive replica selection formula c3 paper httpswwwusenixorgsystemfilesconferencensdi15nsdi15papersureshpdf
optionally return nodestatistics given nodeid response information exists given node returns empty optional node found
returns map node id ranking nodes based adaptive replica formula
creates new circuitbreakerservice based settings provided breakertypekey
constructs clusterinfoservice may mocked tests
start node node already started method noop
adds default node name given setting doesnt already exist given setting node name already set new copy default node name set
get custom name resolvers list based discovery plugins list discoveryplugins discovery plugins list
hook validating node network services started cluster service started network service starts accepting incoming network requests context bootstrap context node boundtransportaddress network addresses node bound publishing
writes file logs dir containing ports given transport type
creates new searchservice method overwritten tests inject mock implementations
constructor provided use unit tests xcontentparser may available
constant time equality check char arrays avoid potential timing attacks
decodes provided byte utf8 char done avoiding conversions string provided byte modified method caller needs take care clearing value sensitive
constant time equality check strings avoid potential timing attacks
encodes provided char utf8 byte done avoiding conversions string provided char modified method caller needs take care clearing value sensitive
tests char contains sequence characters match prefix like stringstartswithstring require conversion char string
create new ewma given alpha initialavg smaller alpha means new data points less weight high alpha means older data points lower influence
create value indication explicit choice value setting value explicit true value passed conscious decision false using kind default
provides secure source randomness acts exactly similar get returning new securerandom
provides reproducible source randomness seeded long seed settings key setting settings settings containing seed setting setting access seed reproducible source randomness
provides source randomness reproducible running elasticsearch test suite otherwise produces nonreproducible source randomness reproducible sources randomness created system property testsseed set security policy allows reading system property otherwise nonreproducible sources randomness created source randomness illegalstateexception running tests able acquire instance random randomizedcontext tests running testsseed set
puts lower numberoflongbytes l array starting index pos
determine whether taskinfo array built time set false using stopwatch millions intervals task info structure consume excessive memory default true
return informative string describing tasks performed custom reporting call gettaskinfo use task info directly
return name last task
return array data tasks performed
start named task results undefined stop timing methods called without invoking method taskname name task start stop
stop current task results undefined timing methods called without invoking least one pair start stop methods start
return string table describing tasks performed custom reporting call gettaskinfo use task info directly
return time taken last task
determine name package given class eg javalang javalangstring class clazz class package name empty string class defined default package
creates new fieldmemorystats instance
creates new fieldmemorystats instance stream
adds merges given field memory stats stats instance
generates xcontent given builder fields stats instance builder builder generated key top level key stats object rawkey raw byte key fields byte sizes readablekey readable key fields byte sizes
split string first occurrence delimiter include delimiter result tosplit string split delimiter split string two element array index 0 delimiter index 1 delimiter neither element includes delimiter null delimiter wasnt found given input string
format double value single decimal points trimming trailing 0
trim occurrences supplied leading character given string str string check leadingcharacter leading character trimmed trimmed string
take string delimited list convert string array a single delimiter consists one character still considered single delimiter string rather bunch potential delimiter characters contrast tokenizetostringarray str input string delimiter delimiter elements this single delimiter rather bunch individual delimiter characters charstodelete set characters delete useful deleting unwanted line breaks eg rnf delete new lines line feeds string array tokens list tokenizetostringarray
return substringbeginindex endindex impervious string length
split specified string commas array string split array split values stringsplitstring
convenience method convert csv string list set note suppress duplicates str input string set string entries list
convenience method return collection delimited eg csv string eg useful tostring implementations coll collection display delim delimiter use probably prefix string start element suffix string end element delimited string
convenience method return string array delimited eg csv string eg useful tostring implementations arr array display delim delimiter use probably delimited string
replace occurrences substring within string another string instring string examine oldpattern string replace newpattern string insert string replacements
splits backslash escaped string separator current backslash escaping supported n t r b f escaped java string characters following backslash produced verbatim c c string split separator separator split decode decode backslash escaping
check whether given charsequence actual text specifically returns true string null length greater 0 contains least one nonwhitespace character stringutilshastextnull false stringutilshastext false stringutilshastext false stringutilshastext12345 true stringutilshastext 12345 true str charsequence check may null true charsequence null length greater 0 contain whitespace javalangcharacteriswhitespace
tokenize specified string commas set trimming whitespace ignoring empty tokens string tokenize set tokens
return string json representation provided toxcontent wraps output anonymous object needed allows control whether outputted json needs pretty printed human readable
tokenizes specified string collection using specified delimiters token delimiters method trims whitespace tokens ignores empty tokens string tokenize delimiters token delimiters supplier collection supplier type collection tokens javautilstringtokenizer
copy given collection string array collection must contain string elements only collection collection copy string array null passedin collection null
delete character given string instring original string charstodelete set characters delete eg azn delete as zs new lines resulting string
truncates string length less length backtracks throw high surrogates
test whether given string matches given substring given index str original string or stringbuilder index index original string start matching substring substring match given index
array consists zero one element all return empty array usually used everything
tokenize given string string array via stringtokenizer trims tokens omits empty tokens the given delimiters string supposed consist number delimiter characters characters used separate tokens delimiter always single character multicharacter delimiters consider using delimitedlisttostringarray string tokenize delimiters delimiter characters assembled string each characters individually considered delimiter array tokens javautilstringtokenizer javalangstringtrim delimitedlisttostringarray
match string given pattern supporting following simple pattern styles xxx xxx xxx xxxyyy matches with arbitrary number pattern parts well direct equality pattern pattern match str string match whether string matches given pattern
add sequence validation errors accumulating validation errors errors errors add
return long n stores throws exception stored value cannot converted long stores exact value
converts byte array long arr byte array convert long long converter
return long stringvalue stores throws exception stored value cannot converted long stores exact value coerce false
return byte n stores throws exception stored value cannot converted byte stores exact value
returns true value neither nan infinite
return short n stores throws exception stored value cannot converted short stores exact value
converts int byte array val int convert byte array byte array converted
converts long byte array val long convert byte array byte array converted
converts int byte array val int convert byte array byte array converted
test rounded values always greater equal last rounded value date increasing example covers interval around 20111030t0210000100 time zone cet interval 2700000ms
test dst end interval rounding cet 25 october 2015 030000 clocks turned backward 1 hour 25 october 2015 020000 local standard time
tests dst transition overlaps day roundings
test dayintervalrounding interval 12h time zone shift
special test intervals dont fit evenly rounding interval case interval crosses dst transition point rounding local time land dst gap results wrong utc rounding values
test dst start offset fitting interval eg asiakathmandu adding 15min 19860101t000000 interval 19860101t0015000545 19860101t0020000545 5min long
randomized test orgelasticsearchcommonroundingroundingtimeintervalrounding random interval time zone offsets
test dst start interval rounding cet 27 march 2016 020000 clocks turned forward 1 hour 27 march 2016 030000 local daylight time
test timeintervalrounding interval 12h time zone shift
test 10025 strict local utc conversion cause joda exceptions dst start
test time zone whose days overlap clocks set back across midnight end dst
randomized test timeunitrounding test uses random datetimeunit zoneid often 50 time chooses test dates exactly close offset changes eg dst chosen time zone rounds test date performs various checks rounding unit interval defined this assumptions tested described assertintervallong long long rounding zoneid
even nasty go transition selected time zone one third cases stay there otherwise go half unit back forth
perform number assertions checks orgelasticsearchcommonroundingroundingtimeunitrounding intervals rounded expected low end rounding interval unrounded date interval checked rounding nextroundingvalue expected upper end rounding interval rounding rounding instance
test half day rounding intervals scrossing dst
special test dst switch 9491
returns true iff sequence chars one truefalse text sequence check offset offset start length length check
returns false text false 0 off no else true kept provide automatic upgrades pre 60 indices use parsebooleanstring boolean instead
returns true sequence chars one truefalseonoffyesno01 text sequence check offset offset start length length check kept provide automatic upgrades pre 60 indices use isbooleanchar int int instead
returns false text false 0 off no else true kept provide automatic upgrades pre 60 indices use parsebooleanstring boolean instead
parses char representation boolean value boolean true iff sequence chars true false iff sequence chars false provided default value iff either text null length 0 illegalargumentexception string cannot parsed boolean
parses string representation boolean value boolean true iff provided value true false iff provided value false illegalargumentexception string cannot parsed boolean
returns false text false 0 off no else true kept provide automatic upgrades pre 60 indices use parsebooleanchar int int boolean instead
value text parse defaultvalue default value return provided value null see parsebooleanstring
fieldname match field fieldname field name match parsefield deprecationhandler called fieldname deprecated true fieldname matches acceptable names parsefield
return new parsefield field names deprecated replaced allreplacedwith
name primary name field returned getpreferredname deprecatednames names field deprecated accepted strict matching used
returns base64 encoded version version 40 compatible uuid defined here httpwwwietforgrfcrfc4122txt
returns base64 encoded version version 40 compatible uuid randomly initialized given javautilrandom instance defined here httpwwwietforgrfcrfc4122txt
returns string representation current timevalue note method might produce fractional time values ex 16m cannot parsed method like timevalueparsestring string string
scale d m checking overflow short name make code readable
parses provided string ratiovalue string either percentage format eg 735 floatingpoint ratio format eg 0735
scale d m checking overflow short name make code readable
parse provided string memory size method either accepts absolute values 42 default assumed unit byte 2mb percentages heap size heap 1g 10 parsed 100mb
parses given distance converts specified unit distance string defining distance value unit defaultunit unit assumed none defined unit result parsed distance
parse distance given string distance string defining distance defaultunit distanceunit assumed unit provided first argument parsed distance
converts given distance given distanceunit given distanceunit distance distance convert unit convert distance unit distance convert given distance converted distance given unit
write distanceunit streamoutput streamoutput write
convert string distanceunit unit name unit unit matching given name illegalargumentexception unit matches given name
converts distance value given specific distanceunit value equal specified value distanceunit unit unit result converted distance
parses suffix given distance string return corresponding distanceunit distance string representing distance defaultunit default unit use unit provided string unit given distance
read distanceunit streaminput streaminput read distanceunit distanceunit read streaminput ioexception unit read streaminput illegalargumentexception matching distanceunit found
string representation value guaranteed able parsed using parsebytessizevaluestring bytesizevalue string unlike tostring method output fractional rounded values method preferred serialising value json
read stream
test ensures aware accidental reordering distance unit ordinals since equality eg circleshapebuilder hashcode serialization rely
copy contents given reader string closes reader done reader copy string copied ioexception case io errors
copy contents given string given output writer closes write done string copy writer copy ioexception case io errors
copy contents given inputstream given outputstream closes streams done stream copy stream copy number bytes copied ioexception case io errors
copy contents given byte array given outputstream closes stream done byte array copy outputstream copy ioexception case io errors
copy contents given reader given writer closes done reader copy writer copy number characters copied ioexception case io errors
returns array files given directory
returns true iff one files exists otherwise false
check directory exists directory readable current user
returns array files given directory matching
appends path given base strips n elements path strip 0
returns array files given directory matching glob
check whether file denoted given path hidden practice check file name starts dot preferred filesishiddenpath depend operating system
returns inputstream given url url protocol file jar host port
deletes subdirectories given path recursively javalangillegalargumentexception given path directory
returns path uri works like pathsget remember almost never used usually resolve path existing one
tries resolve given path list available roots path starts one listed roots returned back method otherwise null returned
read file channel byte buffer starting certain position channel channel read channelposition position read dest destination javaniobytebuffer put data total bytes read 1 attempt made read past eof method always tries read bytes fit destination byte buffer
writes part byte array javaniochannelswritablebytechannel source byte array copy offset start copying offset length many bytes copy channel target writablebytechannel
read length bytes position file channel eofexception thrown attempt read beyond end file channel channel read channelposition position read dest destination byte array put data destoffset offset dest read length number bytes read
writes javaniobytebuffer javaniochannelswritablebytechannel bytebuffer source buffer channel channel write
read file channel byte buffer starting certain position eofexception thrown attempt read beyond end file channel channel read channelposition position read dest destination javaniobytebuffer put data
read length bytes position file channel channel channel read channelposition position read dest destination byte array put data destoffset offset dest read length number bytes read total bytes read 1 attempt made read past eof method always tries read bytes fit destination byte buffer
read length bytes position file channel
flushes internal bytes buffer ioexception io error occurs
writes portion string str string offset start writing characters len number characters write ioexception io error occurs
writes specified character sequence csq character sequence ioexception io error occurs
replaced setoutputoutputstream
sets output stream use writing writer closed examplecode writer writer new utf8streamwritersetoutputstreamout code equivalent writes faster code writer writer new javaiooutputstreamwriterout utf8 code output stream utf8 writer illegalstateexception writer reused close closed reset reset
writes character given 31bits unicode code 31 bits unicode character written ioexception io error occurs
writes single character method supports 16bits character surrogates c char character written possibly surrogate ioexception io error occurs
closes reset resets writer reuse ioexception io error occurs
flushes stream stream saved characters various write methods buffer write immediately intended destination then destination another character byte stream flush it thus one flush invocation flush buffers chain writers outputstreams ioexception io error occurs
writes portion array characters cbuf array characters offset start writing characters len number characters write ioexception io error occurs
returns releasable implementation orgelasticsearchcommonbytesbytesreference represents current state bytes stream
writes string array nullable string writes 0 empty string
write optional namedwriteable stream
writes namedwriteable current stream first writing name object
writes collection generic objects via writer
writes string array nullable string writes false
write map ktype keys vtype mapstring string map outwritemapmap streamoutputwritestring streamoutputwritestring keywriter key writer valuewriter value writer
write timevalue stream
writes array bytes b bytes write
writes long variablelength format without first checking negative package private testing use writevlonglong instead
writes list writeable objects
writes given geopoint stream
write map ktype keys vtype lists mapstring liststring map outwritemapoflistsmap streamoutputwritestring streamoutputwritestring keywriter key writer valuewriter value writer
write optional timevalue stream
writes int four bytes
writes list streamable objects
writes long variablelength format writes one ten bytes values remapped sliding sign bit lsb encoded unsigned number eg 0 0 1 1 1 2 longminvalue 1 longmaxvalue 2 numbers small absolute value small encoding numbers known nonnegative use writevlonglong
writes nonnegative long variablelength format writes one ten bytes smaller values take fewer bytes negative numbers use ten bytes trip assertions if running tests prefer writelonglong writezlonglong negative numbers
write map stream consistent order make sure every map generated bytes order same method compatible streaminputreadmap streaminputreadgenericvalue method handle map keys order maps contained within map
write optional plain datetimezone stream
writes int variablelength format writes one five bytes smaller values take fewer bytes negative numbers always use 5 bytes therefore better serialized using writeint
set features stream see streamoutputhasfeaturestring features features stream
writes list strings
writes enumset type e serialized based its ordinal value
writes optional bytes reference including length header use need differentiate null empty bytes references use writebytesreferencebytesreference streaminputreadbytesreference not
notice serialization map stream map stream map maybe different keyvalue orders maybe different stream order want keep stream map stream map stream order stream use writemapwithconsistentorder
writes long eight bytes
writes bytes reference including length header
writes specified array stream using specified writer element array method seen writer version streaminputreadarraywriteablereader intfunction length array encoded variablelength integer first written stream elements array written stream writer writer used write individual elements array array type elements array ioexception io exception occurs writing array
serializes potential null value
writes list namedwriteable objects
creates new entry stored registry
constructs new registry given entries
returns reader namedwriteable object identified name provided argument category
create non recycling bytesstreamoutput initial capacity 0
creates new inputstreamstreaminput size limit input stream wrap sizelimit hard limit number bytes given input stream used internal input validation
reads optional bytes reference stream might hold actual reference underlying bytes stream use must differentiate null empty use streaminputreadbytesreference streamoutputwritebytesreferencebytesreference not
read map ktype keys vtype lists mapstring liststring map inreadmapoflistsstreaminputreadstring streaminputreadstring keyreader key reader valuereader value reader never null
reads namedwriteable current stream first reading name looking corresponding entry registry name proper object read returned default implementation throws unsupportedoperationexception streaminput doesnt hold registry use filterinputstream instead wraps stream supports namedwriteableregistry too
reads array stream using specified orgelasticsearchcommoniostreamwriteablereader read array elements stream method seen reader version streamoutputwritearraywriteablewriter object assumed stream first contains variablelength integer representing size array contains many elements read stream reader reader used read individual elements arraysupplier supplier used construct new array type elements array array read stream ioexception io exception occurs reading array
reads list namedwriteables
reads enum type e serialized based value its ordinal
reads long stored variablelength format reads one ten bytes smaller values take fewer bytes negative numbers encoded ten bytes prefer readlong readzlong negative numbers
reads four bytes returns int
reads collection objects
read list streamable objects using constructor instantiate instance expected take form listmystreamableclass list inreadstreamlistmystreamableclassnew constructor streamable instance creator never null ioexception step fails
reads enum type e serialized based value its ordinal
serializes potential null value
read optional timevalue stream returning null timevalue written
reads bytes reference stream might hold actual reference underlying bytes stream
reads bytes reference stream might hold actual reference underlying bytes stream
reads int stored variablelength format reads one five bytes smaller values take fewer bytes negative numbers always use 5 bytes therefore better serialized using readint
read timevalue stream
reads namedwriteable current stream given name assumed caller obtained name source its read stream name used looking corresponding entry registry name proper object read returned default implementation throws unsupportedoperationexception streaminput doesnt hold registry use filterinputstream instead wraps stream supports namedwriteableregistry too prefer streaminputreadnamedwriteableclass streamoutputwritenamedwriteablenamedwriteable unless compelling reason use method instead
reads vint via readvint applies basic checks ensure read array size sane method uses ensurecanreadbytesint ensure stream enough bytes read read array size
read optional plain datetimezone
reads optional namedwriteable
checks deprecated setting logs correct alternative
checks removed setting logs correct alternative
wrap two recyclers forward calls smallobjectrecycler size minsize defaultrecycler otherwise
wrap provided recycler calls recyclerobtain recyclervclose protected lock
return recycler based deque
create concurrent implementation support concurrent access concurrencylevel threads little contention
converts object value bytesref
converts value string taking special care bytesref call orgapacheluceneutilbytesrefutf8tostring
register leafreader necessary core cache key reader found later using getcorekeysforindexstring
return number tracked segments
get set core cache keys associated given index
test unmap hack detected supported lucene works around following bug httpsbugsopenjdkjavanetbrowsejdk4724038 guaranteed current status critical internal api httpopenjdkjavanetjeps260 additionally checks screw security logic around hack
returns iterable allows iterate files segments info
wait index exist timelimitmillis returns true index eventually exists false not retry directory every second least timelimitmillis
check whether one documents matching provided query
method removes files given directory referenced given segments file method open indexwriter relies index file deleter remove unreferenced files segment files newer given segments file removed forcefully prevent problems indexwriter opening potentially broken commit point leftover note method fail another indexwriter open given directory method also acquire write lock directory pruning unused files method expects existing index given directory given segments file
return scorer throws elasticsearchillegalstateexception operations given message
given scorersupplier return bits instance match documents contained set note returned bits instance must consumed order
reads segments infos given commit failing fails load
method removes lucene files given directory first try delete commit points segments files ensure broken commits corrupted indices opened future segment files cant deleted operation fails
returns number documents index referenced segmentinfos
tries extract segment reader given index reader segmentreader extracted illegalstateexception thrown
construct filterleafreader based specified base reader note base reader closed filterleafreader closed specified base reader
tries unwrap given reader first elasticsearchdirectoryreader instance found null instance found
adds given listener provided directory reader reader must contain elasticsearchdirectoryreader its hierarchy otherwise cant safely install listener illegalargumentexception reader doesnt contain elasticsearchdirectoryreader its hierarchy
test core cache key needed nrt working
initialize lookup provided segment
returns internal lucene doc id given id bytes docidsetiteratornomoredocs returned found
return null id found
return null id found pass leafreadercontext argument things still work reader wrappers hide documents still using cache key otherwise wed disable caching entirely readers
load internal doc id sequence number uid reader returning null uid wasnt found a doc id associated seqno otherwise
load primaryterm associated given docidandseqno
load internal doc id version uid reader returning null uid wasnt found a doc id version otherwise
load version uid reader returning versionsnotfound matching doc exists the version associated provided uid otherwise
test version map cache behaves properly filtered reader
test version map cache works evicted close etc
test version lookup two documents matching id
test version lookup actually works
returns true o equal this
returns terms position phrase
add multiple terms next position phrase terms may match orgapachelucenesearchphrasequerybuilderaddterm
returns relative positions terms phrase
allows specify relative position terms within phrase terms terms position position terms provided argument orgapachelucenesearchphrasequerybuilderaddterm int
returns hash code value object
potentially apply minimum match value query applied to otherwise return original query
creates new nonnested docs query indexversioncreated index version created since newer indices identify parent field efficiently
return query matches documents match given query
add existing boolean query like query priorityqueue
retrieveinterestingtermsjavaioreader string
determines passed term likely interest more like comparisons term word considered true ignored false used analysis
return query return docs like passed lucene document id docnum documentid lucene doc generate more like this query for query return docs like passed lucene document id
find words morelikethis query former result priority queue arrays one entry every word document array 6 elements elements are word string top field word comes string score word float idf value float frequency word index integer frequency word source document integer somewhat advanced routine general 1st entry array interest method exposed identify interesting words document easier method call see retrieveinterestingterms retrieveinterestingterms r reader content document fieldname field passed analyzer use analyzing content interesting words document ordered score highest scoring best entry first retrieveinterestingterms
convenience routine make easy return interesting words document advanced users call retrievetermsreader string retrieveterms directly r source document fieldname field passed analyzer use analyzing content interesting words document retrievetermsjavaioreader string setmaxqueryterms
return query return docs like passed readers added order treat multivalue fields query return docs like passed readers
return query return docs like passed fields query return docs like passed fields
adds term frequencies found tokenizing text reader map words r source text tokenized termfreqmap map terms frequencies fieldname used analyzer special perfield analysis
adds terms frequencies found vector map termfreqmap termfreqmap map terms frequencies vector list terms frequencies docfield fieldname optional field name terms skip terms
find words morelikethis query former docnum id lucene document find terms
describe parameters control more like this query formed
create like query priorityqueue
return query return docs like passed terms query return docs like passed terms
create priorityqueue wordtf map words map words keyed wordstring int objects values fieldnames array field names override defaults
creates randomscorefunction seed seed randomness salt value salt seed with ideally unique running nodeindex uidfielddata field data uid use generating consistent random values id
creates functionscorequery multiple score functions subquery query match scoremode defines different score functions combined functions scorefunctions apply combinefunction defines query function score applied minscore minimum score consider document maxboost maximum applicable boost
sets amount time entry cache expires written expireafterwrite amount time entry expires written must null must greater 0
sets amount time entry cache expires last accessed expireafteraccess amount time entry expires last accessed must null must greater 0
put entry segment key key entry add cache value value entry add cache access time entry tuple new entry existing entry one otherwise null
associates specified value specified key map map previously contained mapping key old value replaced key key specified value associated value value associated specified key
cache statistics tracking hits misses evictions taken besteffort basis meaning could outofdate midflight current cache statistics
remove entry segment key key entry remove cache onremoval callback removed entry
get entry segment expired entries returned null removed cache lru list pruned manual cacherefresh performed however caller take action using provided callback key key entry get cache access time entry isexpired test entry expired onexpiration callback entry associated key expired entry one otherwise null
relative time used track timebased evictions current relative time
remove entry segment iff future done value equal expected value key key entry remove cache value value expected associated key onremoval callback removed entry
invalidate association specified key removal notification issued invalidated entries orgelasticsearchcommoncacheremovalnotificationremovalreason invalidated key key whose mapping invalidated cache
lru sequencing keys cache supports removal sequence protected mutations cache except iteratorremove result iteration mutation undefined lruordered iterable keys cache
specified key already associated value or mapped null attempts compute value using given mapping function enters map unless null load method given key invoked once use different cacheloader implementations key concurrently may result first loader function called second returned result provided first including exceptions thrown execution first key key whose associated value returned computed nonexistent loader function compute value given key current existing computed nonnull value associated specified key executionexception thrown loader throws exception returns null value
force outstanding sizebased timebased evictions occur
lru sequencing values cache sequence protected mutations cache except iteratorremove result iteration mutation undefined lruordered iterable values cache
invalidate entry specified key value value provided equal value cache removal occur removal notification issued invalidated entries orgelasticsearchcommoncacheremovalnotificationremovalreason invalidated key key whose mapping invalidated cache value expected value associated key
invalidate cache entries removal notification issued invalidated entries orgelasticsearchcommoncacheremovalnotificationremovalreason invalidated
true bytes compressed lzf used elasticsearch 20
decompress provided bytesreference
uncompress provided data data detected compressed using iscompressedbytesreference nullpointerexception nullpointerexception thrown bytes null
create compressedxcontent toxcontent instance
create compressedxcontent serialized toxcontent may already compressed
return uncompressed bytes
test dont accidentally change enum ids
latest timestamp strictly utcmillis timezonegetoffsett timezonegetoffsetutcmillis t returns longmaxvalue
determine whether local instant valid instant given time zone logic taken datetimezoneconvertlocaltoutclong boolean strict mode case instead throwing illegalinstantexception costly want return flag indicating value illegal time zone
test 10025 strict local utc conversion cause joda exceptions dst start
test time zones correctly parsed bug joda 294 see httpsgithubcomjodaorgjodatimeissues373
special test dst switch 9491
test half day rounding intervals scrossing dst
test rounded values always greater equal last rounded value date increasing example covers interval around 20111030t0210000100 time zone cet interval 2700000ms
test dst end interval rounding cet 25 october 2015 030000 clocks turned backward 1 hour 25 october 2015 020000 local standard time
perform number assertions checks timeunitrounding intervals rounded expected low end rounding interval unrounded date interval checked rounding nextroundingvalue expected upper end rounding interval rounding rounding instance
tests dst transition overlaps day roundings
randomized test timeunitrounding test uses random datetimeunit datetimezone often 50 time chooses test dates exactly close offset changes eg dst chosen time zone rounds test date performs various checks rounding unit interval defined this assumptions tested described assertintervallong long long rounding datetimezone
even nasty go transition selected time zone one third cases stay there otherwise go half unit back forth
test time zone whose days overlap clocks set back across midnight end dst
special test intervals dont fit evenly rounding interval case interval crosses dst transition point rounding local time land dst gap results wrong utc rounding values
test dayintervalrounding interval 12h time zone shift
test dst start offset fitting interval eg asiakathmandu adding 15min 19860101t000000 interval 19860101t0015000545 19860101t0020000545 5min long
test timeintervalrounding interval 12h time zone shift
randomized test timeintervalrounding random interval time zone offsets
test dst start interval rounding cet 27 march 2016 020000 clocks turned forward 1 hour 27 march 2016 030000 local daylight time
equivalent wrapreleasable called multiple times without double releasing
release provided releasables ignoring exceptions success false
insert value given path path already exists replace value with value updaterapplyoldvalue newvalue allowing value updated desired
read stream
test map written multiple times trigger selfreference check collectionutilsensurenoselfreferencesobject string object
parses value given xcontentparser parser parser build value context context needed parsing new value instance drawn provided value supplier objectparserstring supplier ioexception ioexception occurs
parses value given xcontentparser parser parser build value value value fill parser context context passed along declared field parsers parsed value ioexception ioexception occurs
creates new objectparser instance name name parsers name used reference parser exceptions messages ignoreunknownfields parser ignore unknown fields generally set true parsing responses external systems never parsing requests users valuesupplier supplier creates new value instance used parser used inner object parser
get name parser
adapts array or varags setter list setter
makes sure current token type tokenfieldname field name equal provided one parsingexception token type tokenfieldname equal given field name
parsingexception unknown field found reason
parse current token depending token type following token types parsed corresponding parser methods tokenvaluestring xcontentparsertext tokenvaluenumber xcontentparsernumbervalue tokenvalueboolean xcontentparserbooleanvalue tokenvalueembeddedobject xcontentparserbinaryvalue tokenvaluenull returns null tokenstartobject xcontentparsermapordered tokenstartarray xcontentparserlistorderedmap parsingexception token none allowed values
makes sure provided token expected type parsingexception token equal expected type
method expects current field name concatenation type delimiter name ex termsfoo terms refers type registered namedxcontentregistryentry delimiter foo name object parse also expected following field name either object array xcontent structure cursor points start token structure method splits fields name extract type name parses object using xcontentparsernamedobjectclass string object method parser current xcontentparser delimiter delimiter use splits fields name objectclass object class object parse consumer something consume parsed object type object parse ioexception anything went wrong parsing type name cannot derived fields name parsingexception parser isnt positioned either startobject startarray beginning
parsingexception unknown token found reason
returns binary content builder provided content type
guesses content type based provided bytes returns corresponding xcontent content type guessed except cases effectively dont know content type rest layer move reading contenttype header instead places autodetection may needed method deprecated prevent usages spreading without specific reasons
constructs xcontent builder output result provided output stream
guesses content type based provided bytes returns corresponding xcontent guessing content type needed ideally rather know content type upfront read headers till fixed rest layer read contenttype header place guessing needed
guesses content type based provided char sequence returns corresponding xcontent content type guessed except cases effectively dont know content type rest layer move reading contenttype header instead places autodetection may needed method deprecated prevent usages spreading without specific reasons
returns orgelasticsearchcommonxcontentxcontent provided content type
guesses content type based provided bytes content type guessed except cases effectively dont know content type rest layer move reading contenttype header instead places autodetection may needed method deprecated prevent usages spreading without specific reasons
guesses content type based provided input stream without consuming it content type guessed except cases effectively dont know content type rest layer move reading contenttype header instead places autodetection may needed method deprecated prevent usages spreading without specific reasons
guesses content type based provided char sequence content type guessed except cases effectively dont know content type rest layer move reading contenttype header instead places autodetection may needed method deprecated prevent usages spreading without specific reasons
guesses content type based provided bytes content type guessed except cases effectively dont know content type rest layer move reading contenttype header instead places autodetection may needed method deprecated prevent usages spreading without specific reasons
declares field contain array elements listed type valuetype enum
attempts match given media type known xcontenttype values match done caseinsensitive manner provided media type include parameters method suitable parsing part contenttype http header method return null match found
accepts either format string equivalent xcontenttypeshortname media type optionally parameters attempts match value xcontenttype comparisons done lower case format method also supports wildcard accept application method used parse accept http header format query string parameter method return null match found
finish parsing object
pass plain biconsumer returns declare methods declare optional constructor argument see classs javadoc example order declared matters order come array passed builder order missing arguments reported user missing parameters parsed plain xcontentparser target object immediately built
creates consumer field arrived behavior targetobject hasnt built queues value otherwise applies value like plain objectparser does
call actual parsing implements bifunction conveniently integrating objectparser
set constructor argument build target object constructor arguments arrived
queue consumer well call targetobject built targetobject built fail caller applied consumer immediately
pass plain biconsumer returns declare methods declare required constructor argument see classs javadoc example order declared matters order come array passed builder order missing arguments reported user missing parameters parsed plain xcontentparser target object immediately built
build parser name name given delegate objectparser error identification use youd use object worked objectparser ignoreunknownfields parser ignore unknown fields generally set true parsing responses external systems never parsing requests users builder binary function builds object array objects parser context declare inline parser casting elements array arguments work favorite constructor objects array order declared constructorargs none null second argument value context provided parsexcontentparser object parse function constructor arguments arent defined xcontent parsing throw error use array rather map object save allocations
test ensures use classic pullparsing parser together object parser
writes binary content given byte array utf8 bytes use xcontentparsercharbuffer read value back
indicate current xcontentbuilder must write line feed n end built object applies json xcontent type effect types
creates new builder using provided xcontent output stream inclusive andor exclusive filters exclusive inclusive filters provided underlying builder first use exclusion filters remove fields check remaining fields inclusive filters make sure call close builder done with os output stream includes inclusive filters fields objects match inclusive filters written output excludes exclusive filters fields objects dont match exclusive filters written output
humanreadable flag set writes formatted unformatted version time value using date transformer long class
writes raw field value taken bytes stream use rawfieldstring inputstream xcontenttype avoid content type autodetection
write timebased value value null null value written otherwise date transformers lookup performed illegalargumentexception transformers type object
writes raw field value taken bytes stream
set human readable flag set types values written format easier read human
writes value source coming directly bytes stream
tests nonconstructor fields set time
builds object random order parses it
helper declare object parsed bytesreference
creates parser based bytes provided use createparsernamedxcontentregistry deprecationhandler bytesreference xcontenttype avoid content type autodetection
returns bytes represent xcontent output provided toxcontent object using provided xcontenttype wraps output new anonymous object according value returned toxcontentisfragment method returns
updates provided changes source key exists changes overrides one source unless maps case recursively updated it source original map updated changes changes update updated checkupdatesareunequal method check updates key that maps unequal equals check objects take time long strings true source map modified
converts given bytes map optionally ordered method relies autodetection content type use converttomapbytesreference boolean xcontenttype instead proper xcontenttype
writes raw bytes field handling cases bytes compressed tries optimize writing using xcontentbuilderrawfieldstring inputstream xcontenttype
converts given bytes map optionally ordered provided xcontenttype must nonnull
guesses content type based provided bytes content type guessed except cases effectively dont know content type rest layer move reading contenttype header instead places autodetection may needed method deprecated prevent usages spreading without specific reasons
convert string xcontent format map throws elasticsearchparseexception error note unlike converttomapbytesreference boolean doesnt automatically uncompress input
merges defaults provided second parameter content first recursive merge inner maps
writes raw bytes field handling cases bytes compressed tries optimize writing using xcontentbuilderrawfieldstring inputstream use writerawfieldstring bytesreference xcontenttype xcontentbuilder params avoid content type autodetection
convert string xcontent format map throws elasticsearchparseexception error
creates parser bytes using supplied contenttype
register parser
lookup value registry name checking name matches parsefield name name thing look up value looked up never null parsingexception named thing isnt registry name deprecated deprecated names arent supported
lookup value registry name checking name matches parsefield name name thing look up value looked null wasnt found parsingexception named thing isnt registry name deprecated deprecated names arent supported
creates new entry stored registry
parse named object throwing exception parser isnt found throws namedobjectnotfoundexception categoryclass isnt registered almost always bug throws namedobjectnotfoundexception categoryclass registered name isnt namedobjectnotfoundexception categoryclass name registered
creates new entry stored registry prefer entryentryclass parsefield checkedfunction unless need context carry around parsing
low level implementation detail xcontentgeneratorcopycurrentstructurexcontentparser
copy contents given inputstream given outputstream closes streams done stream copy stream copy number bytes copied ioexception case io errors
return long stringvalue stores throws exception stored value cannot converted long stores exact value coerce false
generalization xcontentmapvaluesteststestsharedprefixes
generalization xcontentmapvaluesteststestprefix
generalization xcontentmapvaluesteststestsupplementarycharactersinpaths
extracts raw values string int on based path provided returning single list
returns function filters document map based given include exclude rules filtermap string string details
make matches objects also match dots field names instance original simple regex foo translate foo foo
returns array string value node value node represents array corresponding array strings returned otherwise node treated commaseparated string
evaluates property name matches one given filter paths
addobject
construct new evictingqueue holds maximumsize elements maximumsize maximum number elements queue hold illegalargumentexception maximumsize less zero
add given element queue possibly forcing eviction head remainingcapacity zero element add true element added always case evictingqueue
add given elements queue possibly forcing evictions head remainingcapacity zero becomes zero execution method c collection elements add true elements added queue
wraps given map prevent adding null keys expectedelements expected number elements guaranteed cause buffer expansion inclusive
build immutable copy map construction always copies map construction prefer building hashmap hand wrapping unmodifiablemap
copyandremoveobject arbitrary number entries
remove given key map current hash table modified
return copy provided map
associate key value return new copy hash table current hash table modified
returns direct iterator keys
put operation used fluent pattern
puts entries map builder
builds new instance
returns cursor entries keyvalue pairs map iterator implemented cursor returns the cursor instance every call javautiliteratornext read current key value use cursors public fields example shown below intshortcursor c intshortmap systemoutprintlnindex cindex key ckey value cvalue index field inside cursor gives internal index inside containers implementation interpretation index depends container
remove used fluent pattern
returns direct iterator keys
returns cursor entries keyvalue pairs map iterator implemented cursor returns the cursor instance every call iteratornext read current key value use cursors public fields example shown below intshortcursor c intshortmap systemoutprintlnindex cindex key ckey value cvalue index field inside cursor gives internal index inside containers implementation interpretation index depends container
put operation used fluent pattern
puts entries map builder
remove used fluent pattern
builds new instance
returns direct iterator keys
returns direct iterator keys
immutable copy given map
construct prefix logger specified name prefix logger extended logger wrap name name prefix logger prefix prefix prefix logger
like getloggerclass orgelasticsearchcommonsettingssettings shardid string string loggername instead class
set level logger new level null logger inherit its level nearest ancestor nonnull level
get build logger prefer logmanagergetlogger
get build logger prefer logmanagergetlogger
configures logging levels loggers configured specified settings settings settings logger levels extracted
configure logging reading log4j2properties found config directory subdirectories specified environment also configure logging point logs directory specified environment environment environment reading configs logs path ioexception issue readings log4j2properties config directory userexception log4j2properties specified configs path
set system properties used configuration files specify paths file patterns log files expose three properties here eslogsbasepath base path containing log files eslogsclustername cluster name used prefix log filenames default configuration eslogsnodename node name used part log filenames only exposed nodenodenamesetting explicitly set logspath path log files settings settings extract cluster node names
configure logging without reading log4j2properties file effectively configuring status logger loggers console settings configuring loggerlevel individual loggers
registers listener status logger errors listener registered early possible ensure errors logged status logger logging configured
called log4j2 initialize converter
get build logger prefer logmanagergetlogger
get root logger prefer logmanagergetrootlogger
get build logger prefer logmanagergetlogger
remove threadcontext used add deprecation headers network responses expected only invoked nodes close method therefore outside tests threadcontext thread context owned threadpool and implicitly node illegalstateexception threadcontext unknown and presumably already unset before
creates new deprecation logger based parent logger automatically prefixes logger name deprecation starts orgelasticsearch replaces orgelasticsearch orgelasticsearchdeprecation maintain orgelasticsearch namespace
set threadcontext used add deprecation headers network responses expected only invoked nodes constructor therefore outside tests threadcontext thread context owned threadpool and implicitly node illegalstateexception threadcontext already set
assert specified string warning value equal provided warning value string representing full warning header warningvalue expected warning header true specified string expected warning value
encode string containing characters outside legal characters rfc 7230 quotedstring string encode encoded string
extracts warning value value warning header formatted according rfc 7234 is given string 299 elasticsearch600 warning value sat 25 feb 2017 102743 gmt return value method would warning value value warning header formatted according rfc 7234 extracted warning value
called log4j2 initialize converter
returns true key type membersinjector but subclass membersinjector
converts binding key value typeliteral its bit awkward pull inner type type literal
returns justintime binding key creating necessary errorsexception binding could created
attempts create justintime binding key root injector falling back ancestor injectors injector tried
looks thread local context creates and removes new context necessary
returns new justintime binding created resolving key strategies used create justintime bindings are internalizing providers requested binding provider delegate binding t converting constants implementedby providedby annotations unannotated keys the constructor raw type unannotated keys orgelasticsearchcommoninjectinternalerrorsexception binding cannot created
converts constant string binding required type binding could resolved null binding doesnt exist orgelasticsearchcommoninjectinternalerrorsexception error resolving binding
gets binding implementation first check see parent binding parent binding binding scoped use binding otherwise checks explicit binding explicit binding found looks justintime binding
creates synthetic binding provider ie binding provider binding
creates binding type annotated implementedby
creates binding injectable type given scope looks scope type none specified
indexes bindings type
creates binding type annotated providedby
returns parameter injectors null parameters
like assertinstancebindingmodule class predicate filters classes checked given annotation
configures module checks mapstring class to class bound theclass
attempts configure module asserts illegalargumentexception caught containing given messages
configures module asserts clazz bound anything
configures module ensures map exists keytype valuetype expected values bound
configures module asserts clazz bound to
configures module returns instance bound to class
configures module checks set to class bound classes may classes bound to classes
binderconverttotypes 20
binderbindlistenerorgelasticsearchcommoninjectmatchermatcher orgelasticsearchcommoninjectspitypelistener 20
binderbindscopeclass scope
returns initializable instance requires initialization
returns array parameter values
creates injector given set modules given development stage creationexception one errors occur injector construction
unsafe constructs key manually specified type
gets strategy annotation type
constructs new key derives type classs type parameter clients create empty anonymous subclass embeds type parameter anonymous classs type hierarchy reconstitute runtime despite erasure example usage binding type foo annotated bar new keybarclass
gets strategy annotation
gets key injection type annotation type
gets key injection type annotation
constructs key manually specified type
gets key injection type annotation strategy
constructs new key derives type classs type parameter clients create empty anonymous subclass embeds type parameter anonymous classs type hierarchy reconstitute runtime despite erasure example usage binding type foo annotated bar new keynew bar
gets key injection type annotation type
gets key injection type annotation type
constructs new key derives type classs type parameter clients create empty anonymous subclass embeds type parameter anonymous classs type hierarchy reconstitute runtime despite erasure example usage binding type foo new key
construct instance returns object instead t may return proxy
sets stage created injector stage stageproduction class eagerly load singletons
initialize validate everything
loads eager singletons singletons were stageproduction bindings discovered were binding singletons eager
inject everything injected method intentionally synchronized locked injecting members ie running user code things would deadlock user code build justintime binding another thread
performs creationtime injections objects require it whenever fulfilling injection depends another object requires injection inject first two instances codependent directly transitively ordering injection arbitrary
prepares member injectors injected instances prompts guice static analysis injected instances
reentrant instance registered injection injectorcreation time method ensure members injected returning
registers instance member injection step performed instance instance optionally members injected each annotated source source location injection requested inject
creates configurationexception containing messages
returns value partially computed due exception caller use collecting additional configuration problems partial value null none set type partial value specified throwing method
returns copy configuration exception specified partial value
tolerate duplicate bindings one exposes other original binding parent injector candidate exposing binding binding binding check candidate exposed binding
scopes internal factory
replaces annotation scopes instance scopes using injectors annotationtoinstance map scope annotation corresponding instance error added unscoped retuned
injector special case allow parent child injectors binding key
logger special case knows injection point injected member its binding this
creates returns injector shells current modules multiple shells returned modules contain bindernewprivatebinder private environments primary injector first returned list
initialize specified lookups either immediately injector created
returns injectors specified injection points
returns new complete members injector injection listeners registered
creates new members injector attaches injection listeners method aspects
creates creationexception containing messages
returns new complete constructor injector injection listeners registered
installs default converters primitives enums class literals
gets type types provider
returns generic form supertype example arraylist returns iterable given input iterableclass supertype superclass of interface implemented by this 20
returns resolved generic exception types thrown constructor methodorconstructor method constructor defined supertype 20
returns resolved generic type field field field defined superclass 20
returns resolved generic parameter types methodorconstructor methodorconstructor method constructor defined supertype 20
returns immutable list resolved types
constructs new type literal derives represented class type parameter clients create empty anonymous subclass embeds type parameter anonymous classs type hierarchy reconstitute runtime despite erasure
returns resolved generic return type method method method defined supertype 20
returns type super classs type parameter moretypescanonicalizetype canonical form
unsafe constructs type literal manually
creates configurationexception containing messages
returns matcher matches methods matching return types
returns matcher matches elements methods classes etc given annotation
returns matcher matches elements methods classes etc given annotation
returns new multibinder collects instances type set bound annotation
returns new multibinder collects instances type set bound binding annotation
returns new multibinder collects instances type set bound annotationtype
returns new multibinder collects instances type set bound annotation
invoked guice injectorcreation time prepare providers element set time sets size known contents evaluated get invoked
returns new multibinder collects instances type set bound annotationtype
returns new mapbinder collects entries keytype valuetype map bound binding annotation
returns new mapbinder collects entries keytype valuetype map bound annotation
returns new mapbinder collects entries keytype valuetype map bound annotation
returns new mapbinder collects entries keytype valuetype map bound annotationtype
returns new mapbinder collects entries keytype valuetype map bound binding annotation
creates two bindings one mapentry provider another v
returns new mapbinder collects entries keytype valuetype map bound annotationtype
returns instance t constructed using constructor supplied arguments
returns guice key parameter
returns unique binding annotation specified list null none illegalstateexception multiple binding annotations exist
creates constant binding namedkey property method binds properties including inherited propertiesdefaults defaults
creates constant binding namedkey entry properties
20
20
20
returns dependencies given injection points
returns looked members injector result valid lookup initialized usually happens injector created members injector throw illegalstateexception try use beforehand
sets actual members injector illegalstateexception delegate already set
returns new injection point injectable constructor type type concrete type exactly one constructor annotated literal inject noarguments constructor private configurationexception injectable constructor one injectable constructor parameters injectable constructor malformed parameter multiple binding annotations
returns static method field injection points type possibly empty set injection points set specified iteration order fields returned methods within fields supertype fields returned subtype fields similarly supertype methods returned subtype methods configurationexception malformed injection point type field multiple binding annotations exceptions configurationexceptiongetpartialvalue partial value set valid injection points
returns instance method field injection points type possibly empty set injection points set specified iteration order fields returned methods within fields supertype fields returned subtype fields similarly supertype methods returned subtype methods configurationexception malformed injection point type field multiple binding annotations exceptions configurationexceptiongetpartialvalue partial value set valid injection points
records elements executed modules
creates recording binder thats backed prototype
creates private recording binder
returns module composed elements
sets actual provider illegalstateexception delegate already set
returns new module installs modules
returns provider always provides instance necessary use application helpful several types unit tests instance instance always provided also permitted null enable aggressive testing although real life guicesupplied provider never return null
returns new parameterized type applying typearguments rawtype enclosed ownertype parameterized type
returns new instance also skips moreclassestoskip
returns calling line code selected line nearest top stack skipped
returns fieldclass methodclass constructorclass
returns type functionally equal necessarily equal according objectequalsobject objectequals
returns equivalent type thats safe use key returned type free primitive types type literals primitives return corresponding wrapper types configurationexception type contains type variable
returns true a b equal
returns true type free type variables
returns declaring class typevariable null declared class
returns generic supertype supertype example given class integerset result supertype setclass set result supertype collectionclass collection
formats member concise string javautilarraylistsize javautilarraylist javautillistremove
returns hashcode type
sets binding copy specified annotation bound key
sets binding copy specified annotation bound key
returns module creates bindings provider methods given object useful notably hrefhttpcodegooglecompgooglegingin
method method invoke return type must type key
returns string equivalent specified string first character converted uppercase stringtouppercase returned string value specified string first character nonalphabetic first character already uppercase specified string length 0 example capitalizefoo barequalsfoo bar capitalize2b 2bequals2b 2b capitalizefoo barequalsfoo bar capitalizeequals string whose first character uppercased string equivalent s first character converted uppercase nullpointerexception s null
returns true given annotation retained runtime
returns scoping annotation null isnt one
gets key given type member annotations
returns scope annotation type null none specified
returns binding annotation member null isnt one
adds error misplaced annotations type scoping annotations allowed abstract classes interfaces
returns string containing tokens converted strings necessary separated delimiter token converted charsequence using stringvalueofobject isnt charsequence already note implies null tokens appended fourcharacter string null delimiter string append every element beginning end firsttoken first object append othertokens subsequent objects append string consisting joined elements
appends contents map appendable entries separated entrydelimiter keys values separated keyvalueseparator key value converted charsequence using stringvalueofobject isnt charsequence already note implies null tokens appended fourcharacter string null appendable object append results keyvalueseparator string append every key associated value entrydelimiter string append every entry beginning end map map containing data join appendable instance passed
appends tokens appendable separated delimiter token converted charsequence using stringvalueofobject isnt charsequence already note implies null tokens appended fourcharacter string null appendable object append results delimiter string append every element beginning end tokens objects append appendable instance passed joinexception ioexception occurs
returns string containing tokens converted strings necessary separated delimiter tokens empty returns empty string token converted charsequence using stringvalueofobject isnt charsequence already note implies null tokens appended fourcharacter string null delimiter string append every element beginning end tokens objects append string consisting joined elements
appends tokens appendable separated delimiter token converted charsequence using stringvalueofobject isnt charsequence already note implies null tokens appended fourcharacter string null appendable object append results delimiter string append every element beginning end tokens objects append appendable instance passed joinexception ioexception occurs
returns string containing contents map entries separated entrydelimiter keys values separated keyvalueseparator key value converted charsequence using stringvalueofobject isnt charsequence already note implies null tokens appended fourcharacter string null keyvalueseparator string append every key associated value entrydelimiter string append every entry beginning end map map containing data join string consisting joined entries map empty map empty
appends tokens appendable separated delimiter token converted charsequence using stringvalueofobject isnt charsequence already note implies null tokens appended fourcharacter string null appendable object append results delimiter string append every element beginning end tokens objects append appendable instance passed joinexception ioexception occurs
appends tokens appendable separated delimiter token converted charsequence using stringvalueofobject isnt charsequence already note implies null tokens appended fourcharacter string null appendable object append results delimiter string append every element beginning end firsttoken first object append othertokens subsequent objects append appendable instance passed joinexception ioexception occurs
resets returns elapsed time milliseconds
returns true scope singleton loaded eagerly stage
returns instance uses source reference point newly added errors
returns value nonnull allowed null otherwise message added errorsexception thrown
returns cause throwable exactly one cause messages zero multiple messages causes null returned
returns formatted message exception specified messages
return automaton matches given pattern
match string given pattern supporting following simple pattern styles xxx xxx xxx xxxyyy matches with arbitrary number pattern parts well direct equality pattern pattern match str string match whether string matches given pattern
return automaton matches union provided patterns
match string given patterns supporting following simple pattern styles xxx xxx xxx xxxyyy matches with arbitrary number pattern parts well direct equality patterns patterns match str string match whether string matches given patterns
normalize geo point given coordinates lie within respective normalized ranges control coordinate gets normalized two flags note shift 180 applied longitude necessary order normalize properly latitude normalizing latitude longitude assumed longitude form xk360 x 180180 k meaningful application therefore x adjusted keeping k preserved point point normalize inplace normlat whether normalize latitude leave is normlon whether normalize longitude
returns true latitude actually valid latitude value
calculate size in meters quadtree cells specific level level quadtree level must greater equal zero size cells level meters
parse geopoint xcontentparser geopoint one following forms object lat latitude lon longitude string latitudelongitude geohash geohash array longitudelatitude parser xcontentparser parse value point geopoint reset values parsed new geopoint parsed parse
returns true longitude actually valid longitude value
return sortednumericdoublevalues instance returns distances list geopoints document
checks precision within range supported elasticsearch 1 12 returns precision value range throws illegalargumentexception outside range
parse geopoint represented object string array geopoint represented geohash left bottom corner geohash cell used geopoint coordinatesgeoboundingboxquerybuilderjava
normalize latitude lie within 90 90 both inclusive range note normalize longitude latitude separately normalizing latitude may necessary add shift 180 longitude purpose call normalizepointgeopoint function lat latitude normalize normalized latitude normalizepointgeopoint
calculate height in meters geohash cells specific level level geohash level must greater equal zero height cells level meters
parses value geopoint following types values supported object contain either lat lon geohash fields string expected latitude longitude format geohash array two elements first element longitude second latitude rest ignored ignorezvalue true
return distance in meters 2 latlon geo points using simple tangential plane provides faster alternative geoutilsarcdistance inaccurate distances greater 4 decimal degrees
calculate number levels needed specific precision geohash cells exceed specified size diagonal precision meters maximum size cells meters must greater equal zero levels need achieve precision
calculate height in meters quadtree cells specific level level quadtree level must greater equal zero height cells level meters
calculate size in meters geohash cells specific level level geohash level must greater equal zero size cells level meters
check point within rectangle todo move lucene rectangle class
calculate width in meters geohash cells specific level level geohash level must greater equal zero width cells level meters
calculate number levels needed specific precision quadtree cells exceed specified size diagonal precision meters maximum size cells meters must greater zero levels need achieve precision
parse precision expressed integer distance measure like 1km 10m precision expressed number 1 12 indicates length geohash used represent geo points parser xcontentparser parse value int representing precision
calculate width in meters quadtree cells specific level level quadtree level must greater equal zero width cells level meters
returns maximum distanceradius in meters point center overlapping
test enveloping polygon around max mercator bounds
compute distance two points using selected algorithm plane arc
get geodistance according given name valid values plane geodistanceplane arc geodistancearc name name geodistance geodistance
writes instance geodistance object output stream
creates geodistance instance input stream
encode lonlat geohash based long format lonlat interleaved 4 least significant bits level
encode geohash string geohash based long format
encode level specific geohash string full resolution longitude latitude
encode geohash string given level morton long
computes bounding box coordinates given geohash geohash geohash defined cell georect rectangle defining bounding box
encode existing geohash long provided precision
add geohashes cells next given geohash list geohash geohash specified cell length level given geohash neighbors list add neighbors given list
encode geohash string geohash based long format lonlat interleaved 4 least significant bits level
encode morton long value given geohash long value
convert morton encoded long geohash encoded long
calculate geohash neighbor geohash geohash geohash cell level level geohash dx delta first grid coordinate must 1 0 1 dy delta second grid coordinate must 1 0 1 geohash defined cell
encode morton long value given geohash string
invokes geoutilsparseprecision parser value generated tokengenerator supplied tokengenerator generate single field contains precision one supported formats malformed precision value error handling tested method return parsed value throws exception precision value malformed
makes closed ring current coordinates adding starting point end point effect starting end point already coordinate
add new coordinate collection coordinate coordinate add
add collection coordinates current coordinates coordinates collection coordinates add
takes input polygon returns identical one opposing orientation setting done dont expose setter orientation actual class
add collection coordinates collection coordinates array coordinates add
add new coordinate collection coordinate coordinate point
copy coordinate new array closed set true first point array repeated last element array coordinates
ctor serialized stream input
ctor list coordinates
calculate intersections line segments vertical line array edges ordered asc ycoordinate intersections edges dateline xcoordinate dateline edges set edges may intersect dateline number intersecting edges
calculate intersection line segment vertical dateline p1 startpoint line segment p2 endpoint line segment dateline xcoordinate vertical dateline position intersection open range 01 line segment intersects line segment otherwise method returns doublenan
builds array coordinates xcontentbuilder builder builder use closed repeat first point end array its already defines last element array builder
build envelope top left bottom right coordinates
read stream
read stream
compute coordinates component component arbitrary edge component coordinates array coordinates write result coordinates parameter
add new hole polygon hole linear ring defining hole coerce set true try close hole adding starting point end point
create connected list list coordinates points array point offset index first point length number points array edges
coordinates setup builder assembled polygon result consist set polygons components holds list linestrings defining polygon first set coordinates used shell polygon others defined holes within polygon method also wraps polygons dateline order fact result may contains polygons less holes defined builder self coordinates polygon
method sets component id edges ring given id shifts coordinates component according dateline edge arbitrary edge component id id apply component edges list edges edges component added could null number edges belong component
create multipolygon set coordinates primary array contains polygon turn contains array linestrings line strings represented array coordinates first linestring shell polygon others define holes within polygon factory geometryfactory use polygons definition polygons new multipolygon
whether points clockwise true anticlockwise false
validates 1 vertex tangential shared interior exterior polygon
offset index point furthest west amongst points furthest south set
close shell polygon
transforms coordinates eastern hemisphere 1800 180360 range
concatenate set points polygon component component id polygon direction direction ring points list points concatenate pointoffset index first point edges array edges write result edgeoffset index first edge result length number points use edges creates
setup whole base test class
test equality hashcode properties
test serialization deserialization test shape
test creates new shape random test shape checks equality
read stream
add shallow copy polygon multipolygon apply orientation multipolygonbuilder polygon polygon different orientation
read stream
read stream
create point 0000
decompose linestring given array coordinates vertical line dateline xaxis intercept vertical line coordinates coordinates forming linestring array linestrings given coordinate arrays
construct new linestring per geojson spec httpgeojsonorggeojsonspechtmllinestring linestring must contain two coordinates coordinates initial list coordinates illegalargumentexception less two coordinates defined
closes current linestring adding starting point end point effect starting end point already same
set radius circle radius value circles radius unit unit radius value see distanceunit
set center circle center coordinate circles center
read stream
recursive method parses arrays coordinates used define shapes parser parser read coordinatenode representing start coordinate tree ioexception thrown error occurs reading xcontentparser
parse geometries array geometrycollection parser parser read geometry geometries geometrycollection ioexception thrown error occurs reading xcontentparser
creates new parent coordinatenode children children node
creates new leaf coordinatenode coordinate coordinate node
create new shapebuilder xcontent parser parser read geoshape shapemapper document field mapper reference required spatial parameters relevant shape construction process eg orientation todo refactor place build specific parameters spatialcontext shapebuilder read parser null parsers current token null ioexception input could read
next word stream
throws exception parsed geometry type match expected shape type
next word stream
parse geometry stream tokenizer
deletes blob giving name ignoring blob exist blobname name blob delete ioexception blob exists could deleted
reads blob content input stream writes container new blob given name using atomic write operation implementation supports it blobcontainer implementation provide specific implementation writeblobatomicstring inputstream long writeblobstring inputstream long boolean method used method assumes container already contain blob blobname blob name already exists operation fail ioexception thrown blobname name blob write contents input stream to inputstream input stream retrieve bytes write blob blobsize size blob written bytes implementation dependent whether value used writing blob repository failifalreadyexists whether throw filealreadyexistsexception given blob already exists filealreadyexistsexception failifalreadyexists true blob name already exists ioexception input stream could read target blob could written to
operation supported urlblobcontainer
operation supported urlblobcontainer
constructs new urlblobcontainer blobstore blob store blobpath blob path container path url container
operation supported urlblobcontainer
operation supported urlblobcontainer
builds url using base url specified path path relative path base url path
operation supported url blob store
constructs new readonly urlbased blob store following settings supported buffersize size read buffer defaults 100kb settings settings path base url
adjust instant displayoffset adjust offset might added datetimeformatterprinttoappendable long chronology using time zone
adjust instant displayoffset adjust offset might added datetimeformatterprinttoappendable long chronology using time zone
parses joda based pattern including named ones similar built joda iso ones
return bytes ref composed bytes direct byte buffer bytes copied bytes ref
returns array byte buffers given bytesreference
writes bytes directly output stream
returns bytesreference composed provided bytebuffers
convert xcontentbuilder bytesreference method closes builder fields may added
returns compact array given bytesreference returned array wont copied unless necessary need modify returned array use bytesrefdeepcopyofreferencetobytesref instead
returns bytesrefiterator bytesreference method allows access internal pages reference without copying them use care bytesrefiterator
compares two references using given int function
first value hit
parse text potentially contains date math milliseconds since epoch examples 201411182y substracts two years input date nowm rounds current time minute granularity supported rounding units y year m month w week beginning monday d day hh hour m minute second text input supplier retrieve current date milliseconds needed additions roundup result rounded timezone optional timezone applied returning milliseconds since epoch parsed date milliseconds since epoch
configure specific time zone date formatter zoneid zoneid formatter shoulduse new formatter parsers switched specified timezone
configure defaults missing values parser return new compound date formatter
name breaker
method used trip breaker
number aggregated used bytes far
add number bytes tripping circuit breaker aggregated estimates limit automatically trips breaker memory limit set 0 never trip breaker limit set 0 still used aggregate estimations bytes number bytes add breaker number used bytes far
number bytes added breaker trips
add exact number bytes checking tripping circuit breaker bypasses overheadconstant multiplication bytes number bytes add breaker number used bytes far
number times breaker tripped
constant multiplier breaker uses aggregations
create circuit breaker break number estimated bytes grows limit estimations multiplied given overheadconstant uses given oldbreaker initialize starting offset limit circuit breaker limit overheadconstant constant multiplier byte estimations oldbreaker previous circuit breaker inherit used value starting offset
create circuit breaker break number estimated bytes grows limit estimations multiplied given overheadconstant uses given oldbreaker initialize starting offset settings settings configure breaker parent parent circuit breaker service delegate tripped breakers name name breaker oldbreaker previous circuit breaker inherit used value starting offset
add number bytes tripping circuit breaker aggregated estimates limit automatically trips breaker memory limit set 0 never trip breaker limit set 0 still used aggregate estimations bytes number bytes add breaker number used bytes far
name breaker
number aggregated used bytes far
number bytes added breaker trips
create circuit breaker break number estimated bytes grows limit estimations multiplied given overheadconstant breaker starts 0 bytes used settings settings configure breaker parent parent circuit breaker service delegate tripped breakers name name breaker
method used trip breaker delegates parent determine whether trip breaker
add exact number bytes checking tripping circuit breaker bypasses overheadconstant multiplication also check parent breaker see parent limit exceeded bytes number bytes add breaker number used bytes far
number times breaker tripped
constant multiplier breaker uses aggregations
format byte array hex string bytes input represented hex hex representation input string
compute hash murmurhash3x64128 hashing function note hashing function might used persist hashes way hashes computed changes reason needs addressed like bloomfilter murmurhashfield
test selecting name possible properly matches addresses interfaces virtual interfaces note avoid test fails interfaces addresses assigned them ignored
test ordinary addresses sort private addresses
test sort key order respects preferipv4
test private addresses sort link local addresses
test filtering ipv4ipv6 addresses
convert byte array inetaddress inetaddressgetbyaddress documented throwing checked exception if ip address illegal length replace unchecked exception use callers already know addr array length 4 16 addr raw 4byte 16byte ip address bigendian order inetaddress object created raw ip address
parse ip address prefix length using cidr notation illegalargumentexception string formatted ipaddressprefixlength illegalargumentexception ip address ipv6mapped ipv4 address illegalargumentexception prefix length 032 ipv4 addresses 0128 ipv6 addresses numberformatexception prefix length integer
convert list hextets humanreadable ipv6 address in order compression work input contain negative sentinel values place elided zeroes hextets int array eight 16bit hextets 1s
returns inetaddress given string representation this deliberately avoids nameservice lookups eg dns ipstring string containing ipv4 ipv6 string literal eg 19216801 2001db81 inetaddress representing argument illegalargumentexception argument valid ip string literal
returns string representation inetaddress suitable inclusion uri for ipv4 addresses identical inetaddressgethostaddress ipv6 addresses compresses zeroes surrounds text square brackets example 2001db81 per section 322 targetparent hrefhttptoolsietforghtmlrfc3986section322 httptoolsietforghtmlrfc3986 uri containing ipv6 string literal form http2001db818888indexhtml use either inetaddressestoaddrstring inetaddressgethostaddress method recommended inetaddresstostring ip address string literal desired inetaddresstostring prints hostname ip address string joined ip inetaddress converted uri string literal string containing urisafe string literal
returns string representation inetaddress for ipv4 addresses identical inetaddressgethostaddress ipv6 addresses output follows hrefhttptoolsietforghtmlrfc5952rfc 5952 section 4 main difference method uses zero compression javas version uses uncompressed form this method uses hexadecimal ipv6 addresses including ipv4mapped ipv6 addresses c000201 output include scope id ip inetaddress converted address string string containing textformatted ip address 100
identify mark longest run zeroes ipv6 address only runs two hextets considered case tie leftmost run wins qualifying run found hextets replaced sentinel value 1 hextets int mutable array eight 16bit hextets
resolves and deduplicates host specification
resolves bindhosts list internet addresses list contain duplicate addresses bindhosts list hosts bind to may contain special pseudohostnames local see documentation null fall back local unique set internet addresses
resolves single host specification
closes channels channels close blocking indicates block channel close
perform actual logging might throw exception things go wrong
format network interface flags
log interface configuration debug level enabled
format internet address javas default doesnt include everything useful
ensure specifying wildcard ipv6 address selects reasonable publish address
ensure specifying wildcard ipv4 address bind interfaces
ensure exception publish multicast ipv6 address
ensure bind multiple addresses
ensure specifying wildcard ipv6 address bind interfaces
ensure exception publish multicast ipv4 address
ensure cant bind multiple addresses using wildcard
ensure exception bind multicast ipv6 address
ensure specifying wildcard ipv4 address selects reasonable publish address
ensure exception bind multicast ipv4 address
returns global scope addresses interfaces up
returns addresses given interface it must marked up
returns addresses any scope interfaces up used pick publish address user set networkhost wildcard
helper getinterfaces recursively adds subinterfaces target
sorts addresses order preference used pick first one publishing remove multihoming really correct
returns sitelocal scope private addresses interfaces up
returns interfacelocal scope loopback addresses interfaces up
returns ipv4 addresses addresses
returns ipv6 addresses addresses
return interfaces and subinterfaces system
sorts address preference way code like publishing pick first one
parses ipv4 address block cidr notation pair longs representing bottom top address block cidr address block cidr notation abcdn array representing address block illegalargumentexception cidr parsed
creates scoped ipv6 address without lookups hostname null missing
round trip test code ipv4 ipv6 inetaddress contains getbyaddress getbyname methods ipv4 ipv6 unless also specify scopeid test bytes 4 32bit ipv4 16 bytes 128bit ipv6 exception error occurs interacting network address
creates address without lookups hostname null missing
adds transport implementation selected setting transporttypekey
register allocation command lives instead aptly named clustermodule transport client needs registered reader reader read stream parser parser read xcontent commandname names command parsed parsefieldgetpreferredname special name commands reader registered
creates network module custom networking classes plugged into settings settings node transportclient true transport classes allowed registered false otherwise
remove entry key hash table return associated value null entry associated key
get value associated key null key present hash table
put new key value pair hash table return value previously associated key null case insertion
given size array estimate number bytes use
change size array content indexes 0 minsize newsize preserved
constructor
compare d1 d2 pushing value doublenan bottom
return rotated view given list given distance
deeply inspects map iterable object array looking references back itself illegalargumentexception selfreference found value object evaluate looking self references messagehint string included exception message call fails provide context handler exception
returns true iff cache needs refreshed
returns currently cached object potentially refreshes cache returning
cancel current running operations future calls checkforcancel failed given reason
run interruptable capturing executing thread concurrent calls cancelstring interrupt thread causing call prematurely return interruptable code run
call throw exception operation cancelled override oncancelstring exception custom failure logic
called checkforcancel invoked operation cancelled default implementation always throws executioncancelledexception suppressing exception occurred cancellation reason reason failure supplied caller cancel suppressedexception error encountered execution operation cancelled
run interruptable capturing executing thread concurrent calls cancelstring interrupt thread causing call prematurely return interruptable code run
tests custom data paths upgraded
tests upgrade partially upgraded index crash upgrading
test method orgapacheluceneutilbytesrefhashaddorgapacheluceneutilbytesref
test method orgapacheluceneutilbytesrefhashsize
test method orgapacheluceneutilbytesrefhashgetint bytesref
dataoutputwritevlong accepts negative values written 9 bytes
dataoutputreadvlong read negative values read 9 bytes
write long littleendian format
read int littleendian format
write int littleendian format
write long littleendian format
change size array content indexes 0 minsize newsize preserved
constructor
creates complete lazyinitializable instance supplier checkedsupplier generate values served getorcompute invocations onget consumer called value newly forged stale returned getorcompute onreset consumer invoked value erased calling reset
clears value previously created calling getorcompute onreset called value next call getorcompute recreate value
creates new value thread safely
returns value created supplier value might previously created created now thread safe course
change size array content indexes 0 minsize newsize preserved
constructor
change size array content indexes 0 minsize newsize preserved
constructor
try add key return newly allocated id wasnt hash table yet 1id already present hash table
return key 0 index capacity result undefined slot unused beware content bytesref may become invalid soon close called
get id associated key
parse given locale language languagecountry languagecountryvariant either underscores hyphens may used separators consistently ie may use hyphen separate language country underscore separate country variant illegalargumentexception many parts locale string illegalargumentexception language country recognized
change size array content indexes 0 minsize newsize preserved
constructor
constructor
change size array content indexes 0 minsize newsize preserved
concatenates 2 arrays
return index value array 1 index several values within tolerance less value method return index closest value case several values close ot value guarantee index returned results undefined array sorted
constructs uri pattern
get id associated key 1 key contained hash
try add key return newly allocated id wasnt hash table yet 1id already present hash table
creates new upgrader instance settings node settings nodeenv node env operate
renames indexfoldername index folders found node paths custom path iff needsupgradeindex string true index folder custom paths renamed first followed index folders node path
moves index folder found source target
upgrades indices found nodeenv already upgraded indices ignored
grow array size larger minsize preserving content potentially reusing part provided array
resize array exact provided size
allocate new intarray size initial length array clearonresize whether values set 0 initialization resize
resize array exact provided size
allocate new floatarray size initial length array clearonresize whether values set 0 initialization resize
grow array size larger minsize preserving content potentially reusing part provided array
arraysequalsbyte byte
resize array exact provided size
resize array exact provided size
allocate new doublearray size initial length array clearonresize whether values set 0 initialization resize
grow array size larger minsize preserving content potentially reusing part provided array
return next size grow mintargetsize inspired arrayutiloversizeint int adapted play nicely paging
allocate new bytearray size initial length array clearonresize whether values set 0 initialization resize
resize array exact provided size
grow array size larger minsize preserving content potentially reusing part provided array
allocate new longarray size initial length array clearonresize whether values set 0 initialization resize
resize array exact provided size
adjust circuit breaker given delta delta negative checkbreaker false breaker adjusted without tripping data already created calling method breaker trips add delta without breaking account created data data created yet add delta breaker trips
grow array size larger minsize preserving content potentially reusing part provided array
allocate new objectarray size initial length array
arrayshashcodebyte
grow array size larger minsize preserving content potentially reusing part provided array
produces two random sets consisting elements 0 endexclusive endexclusive exclusive upper bound elements sets pair sets
assert difference two sets expected endexclusive exclusive upper bound elements either set sets pair sets elements 0 endexclusive difference difference two sets
relative complement difference specified left right set namely resulting set contains elements left set right set neither input mutated operation entirely new set returned left left set right right set type elements sets relative complement left set respect right set
relative complement difference specified left right set returned sorted set namely resulting set contains elements left set right set set sorted using natural ordering element type neither input mutated operation entirely new set returned left left set right right set type elements sets sorted relative complement left set respect right set
returns true iff countdown reached zero otherwise false
fast forwards countdown zero returns true iff count reached zero fast forward call otherwise false
decrements countdown returns true iff call reached zero otherwise false
forces adding element queue without size checks
calls futureget without checked exceptions future dereference type returned value future
calls futuregetlong timeunit without checked exceptions future dereference timeout wait unit timeout type returned value future
subclasses invoke method set result computation error throwable set state future basefuturesynccompleted call done state successfully changed throwable exception task failed with true state successfully changed error throwable error
blocks task complete timeout expires throws timeoutexception timer expires otherwise behaves like get
implementation completing task either v t set both finalstate state change running state running state return false waiting state set valid final state completed cancelled v value set result computation exception set result computation finalstate state transition to
implementation actual value retrieval return value success exception failure cancellation cancellation illegal state synchronizer invalid state
subclasses invoke method set result computation value set state future basefuturesynccompleted call done state successfully changed value value result task true state successfully changed
default basefuture implementation throws interruptedexception current thread interrupted call even value already available interruptedexception current thread interrupted call optional recommended cancellationexception
blocks completeobject throwable int successfully called throws cancellationexception task cancelled executionexception task completed error
default basefuture implementation throws interruptedexception current thread interrupted call even value already available interruptedexception current thread interrupted call optional recommended cancellationexception
tries acquire lock given key returns it lock cant acquired null returned
returns true iff caller thread holds lock given key
acquires lock given key key compared its equals method object identity lock acquired thread multiple times lock released closing returned releasable
execute blank task times times executor
return new executor automatically adjust queue size based queue throughput size number fixed threads use executing tasks initialqueuecapacity initial size executor queue minqueuesize minimum queue size queue adjusted maxqueuesize maximum queue size queue adjusted framesize number tasks stats collected adjusting queue size
return time task spent run task still running yet run returns 1
return time since task created finished running task still running yet run returns 1
adds listener future future yet completed listener notified response exception runnable submitted executorservice provided future completed listener notified immediately without forking different thread
test accounting whether thread holds releasable lock correct previously bug reentrant lock thread entered lock twice would declare hold lock exits first entrance second entrance brokenbarrierexception awaiting synchronization barrier breaks interruptedexception awaiting synchronization barrier interrupted
inspects barrier broken reason barrier broken brokenbarrierexception thrown otherwise would return gracefully brokenbarrierexception nested broken cause
queries barrier broken state note resetexception invoked barrier remain broken reset reset barrier initial state isbroken return false true one parties broke barrier due interruption timeout since construction last reset barrier action failed due exception false otherwise inspect
returns elapsed time two successive barrier executions elapsed time seconds
breaks barrier reset broken reason note call atomic respect awaitreset calls breakifbroken may context switched invoke reset prior await resets barrier initial state parties currently waiting barrier accounted for await wasnt time limited block indefinitely brokenbarrierexception empty brokenbarrierexception
resets barrier initial state parties currently waiting barrier return brokenbarrierexception note resets after breakage occurred reasons complicated carry out threads need resynchronize way choose one perform reset may preferable instead create new barrier subsequent use cause cause brokenbarrierexception
sometimes wraps runnable abstractrunnable
adds given item queue listener notified item processed
resize limit queue returning new size limit
calculate task rate fixed number tasks time took tasks measured totalnumberoftasks total number tasks measured totalframetasknanos nanoseconds tasks received rate tasks system
calculate littles law l optimal queue size particular task rate lambda targeted response time lambda arrival rate tasks nanoseconds targetedresponsetimenanos nanoseconds average targeted response rate requests optimal queue size give task rate targeted response time
overrides default behavior onafter add caveat runs lifecycle not stopped closed note guarantee wont stopped concurrently invokes onafterinlifecycle its solid attempt preventing it use rescheduling purposes next invocation would effectively cancelled immediately thats case onafterinlifecycle
abstractlifecyclerunnable must aware actual lifecycle react properly lifecycle lifecycle react logger logger use logging nullpointerexception parameter null
invokes doruninlifecycle only lifecycle stopped closed otherwise exits immediately
sets element position i given value index value new value
copies content underlying atomic array normal one
returns non null list
removes current context resets new context contains merge current headers given headers removed context restored closing returned storedcontext merge strategy headers already existing preserved unless defaults
returns transient header object null header given key
newrestorablecontextboolean wraps existing context restore storedcontext context restore
saves current thread context wraps command runnable restores context running command command already passed method returned unaltered rather wrapped twice
returns header given key null present
unwraps command previously wrapped preservecontextrunnable
like stashcontext default context set preserveresponseheaders set true response headers restore thread preserved
removes current context resets default context removed context restored closing returned storedcontext
creates new threadcontext instance settings settings read default request headers
get copy response headers never null
returns request contexts headers
returns waiting time first task queue
timeout callback might remain timer scheduling queue time might hold pointers objects result its possible run memory large number tasks executed
flattens two level iterable single iterable note precaches values outer iterable values inner one
returns bytesreference view data
one single scope added setting
cant null properties
setting contains sensitive string may sensitive string eg username password auth token etc
setting contains file reading setting opens input stream file may sensitive file eg set credentials normally plaintext
add setting builder doesnt exists source settings value added builder taken given default settings object builder settings builder fill diff source source settings object diff defaultsettings default settings object diff
returns string representation concrete setting key
returns map namespaces its values give provided settings
get setting given namespace filled prefix suffix
returns value setting falls back second provided settings object
returns raw string settings value setting present given settings object default value returned instead useful value cant parsed due invalid value access actual value
creates new setting instance key settings key setting defaultvalue default value function results string representation default value parser parser parses string representation concrete type setting validator validator validating setting properties properties setting
returns string representation concrete setting key
updates settings depend other see abstractscopedsettingsaddsettingsupdateconsumersetting setting biconsumer usage details
logs deprecation warning setting deprecated used
build updater responsible validating new values logging new value eventually setting value belongs
setting type allows validate settings type common prefix suffix instance storagebackendenabletruefalse easily added setting yet affix key settings dont support updaters box unless getconcretesettingstring used pull updater
returns new copy object backed char array closing new instance effect instance created from useful apis accept char array want safe api potentially modifying char array example try securestring copy securestringclone pass thee char external api passwordauthentication auth new passwordauthenticationusername copygetchars
returns underlying char dangerous operation array may modified used threads consumer may modify values array safety preferable use clone pass chars consumer chars needed multiple times
constant time equality avoid potential timing attacks
convert string used apis take charsequence
closes string clearing underlying char array
constructs new securestring existing string note actually secure since provided string cannot deallocated constructor allows easy compatibility new old apis use compatibility deprecated string settings new secure strings
throw exception string closed indicating something trying access data closed
possible retrieve setting names even keystore closed allows securesetting correctly determine entry exists even though cannot read thus attempting read secure setting keystore closed generate keystore closed exception rather using fallback setting
set string setting
ensure given setting name allowed illegalargumentexception setting name valid
add bootstrap seed setting may used unique secure random value node
upgrades format keystore necessary
remove given setting keystore
set file setting
encrypt keystore entries return encrypted data
decrypts underlying keystore data may called once
write keystore given config directory
loads information elasticsearch keystore provided config directory decryptchar must called reading writing entries returns null keystore exists
constructs new keystore given password
merge given secure settings one
adds settings consumer affix settings affix settings namespace associated needs available consumer order processed correctly consumer get namespace value map instead individual namespace value addaffixupdateconsumersettingaffixsetting biconsumer biconsumer
adds settings consumer predicate evaluated update time note settings registered settingsmodule changed dynamically validator additional validator applied updates setting useful add additional validation settings runtime compared startup time
returns true given key valid delete key
adds settings consumer affix settings affix settings namespace associated needs available consumer order processed correctly
archives invalid unknown settings setting recognized fails validation archived means setting prefixed value archivedsettingsprefix remains settings object used detect invalid settings via apis settings settings instance scan unknown invalid settings unknownconsumer callback unknown settings consumer receives unknown key associated value invalidconsumer callback invalid settings consumer receives invalid key associated value exception settings instance unknown invalid settings archived
validates settings registered valid settings settings validatedependencies true dependent settings validated ignoreprivatesettings true private settings ignored validation ignorearchivedsettings true archived settings ignored validation settinggetsettingsdependenciesstring
adds settings consumer accepts values two settings consumer notified one settings change provided validator succeeded note settings registered settingsmodule changed dynamically method registers compound updater useful two settings depending other consumer always provided values even one two changes
applies given settings settings consumers none them settings merged node settings applied given settings override existing node settings newsettings settings apply unmerged applied settings
returns callable runnable calls applyobject settings settings settings actually changed allows defer update later point time keeping type safety value didnt change returned runnable noop
updates target settings builder new updated deleted settings given settings builder toapply new settings apply target target settings builder updates applied to keys explicit null value toapply removed builder updates settings builder holds updates applied target type free text string allow better exceptions messages onlydynamic false settings updated otherwise dynamic settings updated set true nondynamic setting updated exception thrown true target changed otherwise false
returns setting given key null setting found
returns true setting given key final otherwise false
updates updaters value changed true iff value updated
returns settings object contains settings already set given source diff contains either default value setting settings value given default settings
validates settings valid key key setting validate settings settings validatedependencies true dependent settings validated validateinternalindex true internal index settings validated illegalargumentexception setting invalid
validates given settings running update listeners without applying it method change settings fail settings cant applied
returns value given setting
returns true setting given key dynamically updateable otherwise false
validates settings registered valid settings settings validatedependencies true dependent settings validated ignoreprivatesettings true private settings ignored validation ignorearchivedsettings true archived settings ignored validation validateinternalindex true index internal settings validated settinggetsettingsdependenciesstring
creates new propertyplaceholderhelper uses supplied prefix suffix placeholderprefix prefix denotes start placeholder placeholdersuffix suffix denotes end placeholder ignoreunresolvableplaceholders indicates whether unresolvable placeholders ignored true cause exception false
replaces placeholders format name value returned supplied placeholderresolver value value containing placeholders replaced placeholderresolver placeholderresolver use replacement supplied value placeholders replaced inline nullpointerexception value null
registers settings filter pattern allows filter certain settings instance contain sensitive information setting internal purposes only given pattern must either valid settings key simple regexp pattern
registers new setting method used plugins order expose custom settings plugin defines unless setting registered setting unusable setting never less specified node reject setting startup
sets setting provided setting key float value setting setting key value float value builder
settings filtered and key removed specified prefix
builds settings underlying uses settings based everything set builder
returns group settings given setting prefix
sets provided settings settings settings set copysecuresettings true settings including secure settings copied
retrieve secure settings settings
sets setting provided setting key int value setting setting key value int value builder
values associated setting key immutable list also automatically load separated list settingprefix merge numbered format key setting key load list defaultvalue default value use value specified commadelimited whether try parse string commadelimited value setting list values
returns setting value as int associated setting key exists returns default value provided
direct keys settings
loads settings actual string content represents using fromxcontentxcontentparser
returns fully qualified setting names contained settings object
returns setting value associated setting key exists returns default value provided
returns parsed version
returns setting value as double associated setting key exists returns default value provided
sets setting provided setting key list values setting setting key values values builder
sets setting provided setting key time value setting setting key value time value builder
loads settings url represents using fromxcontentxcontentparser note loading path doesnt allow null values incoming xcontent
returns new settings object contains setting current one filtered given settings key predicate
loads settings stream represents using fromxcontentxcontentparser
sets setting provided setting key double value setting setting key value double value builder
sets setting provided setting key long value setting setting key value long value builder
sets setting provided setting key class value key setting key clazz setting class value builder
returns settings delimited string
returns setting value as float associated setting key exists returns default value provided
checks settings builder start specified prefix setting doesnt start prefix builder appends prefix setting
sets setting provided setting key boolean value setting setting key value boolean value builder
sets setting provided setting key size value setting setting key value size value builder
sets setting group
sets setting provided setting key value key setting key value setting value builder
returns setting value as long associated setting key exists returns default value provided
read stream
read stream
index operation failed on might return null cant derived
tests docwriteresponsetoxcontentxcontentbuilder toxcontentparams doesnt include forcedrefresh unless true cant assert yaml tests not found also false there
returns rest status response based shardinfostatus
parse output innertoxcontentxcontentbuilder params method method intended called subclasses must called multiple times parse information concerning docwriteresponse objects always parses current token updates given parsing context accordingly needed immediately returns
return relative uri location document suitable use location header use relative uris permitted http11 cf httpstoolsietforghtmlrfc7231section712 routing custom routing null custom routing used relative uri location document
write document write indexdeleteupdate request
read document write indexdeleteupdate request
creates listener listens response or failure executes corresponding consumer response or failure received onresponse checked consumer response listener receives one onfailure consumer failure listener receives one type response listener listens responses invokes consumer received
notifies every given listener failure passed onfailureexception listener throws exception remaining listeners processed caught exception rethrown
converts listener biconsumer compatibility javautilconcurrentcompletablefuture api listener wrapped type response bi consumer complete wrapped listener
notifies every given listener response passed onresponseobject listener throws exception exception forwarded onfailureexception turn onfailureexception fails remaining listeners processed caught exception rethrown
calls action listeners actionlisteneronfailureexception method given exception method invoked exception thrown dorun
simple sets routing since parent used get right shard
sets query get score explanation for
explicitly specify stored fields returned explained document default nothing returned
sets routing sharding
indicate source returned include andor exclude set include simple wildcard elements include optional include optionally wildcarded pattern filter returned source exclude optional exclude optionally wildcarded pattern filter returned source
sets id get score explanation for
sets shard preference
sets type get score explanation for
indicate source returned include andor exclude set include simple wildcard elements includes optional list include optionally wildcarded pattern filter returned source excludes optional list exclude optionally wildcarded pattern filter returned source
indicates whether response contain stored source
simple sets routing since parent used get right shard
allows setting fetchsourcecontext request controlling source returned
list field names retrieve
list indices lookup
list field names retrieve
constructor name name field type type associated field issearchable whether field indexed search isaggregatable whether field aggregated on indices list indices field name defined type null indices type field nonsearchableindices list indices field searchable null field searchable indices nonaggregatableindices list indices field aggregatable null field aggregatable indices
controls shard routing request using value hash shard id
controls shard routing delete request using value hash shard id
constructs new delete request specified index type id index index get document type type document id id document
sets id document delete
id document delete
override method replicationaction storing state request object which really shouldnt do transport client goes away move away making available meantime dangerous set use deleterequest object always wrapped bulk request envelope should set
sets type document delete
type document delete
sets type versioning use defaults versiontypeinternal
controls shard routing delete request using value hash shard id
sets version cause delete operation performed matching version exists changes happened doc since then
sets type document delete
sets id document delete
returns tuple deleteresponses left element actual deleteresponse serialize right element expected deleteresponse parsing
test setting source request different available setters
returns tuple indexresponses left element actual indexresponse serialize right element expected indexresponse parsing
sets content source index
sets ingest pipeline executed indexing document
sets versioning type defaults versiontypeinternal
index map json source map index
sets document index bytes form
index map provided content type source map index
sets source
sets version cause index operation performed matching version exists changes happened doc since then
sets document source index note preferable either set using setsourceorgelasticsearchcommonxcontentxcontentbuilder using setsourcebyte xcontenttype
sets type operation perform
controls shard routing request using value hash shard id
set true force index use orgelasticsearchactionindexindexrequestoptypecreate
constructs simple document field name value pairs note number objects passed varargs method must even number also first argument pair the field name must valid string representation
sets id index document under optional set one automatically generated
constructs simple document field name value pairs note number objects passed method must even number also first argument pair the field name must valid string representation
sets document index bytes form assumed safe used different threads source source index offset offset byte array length length data xcontenttype typeformat source
sets type index document to
resolves version based operation type optype
set true force index use optypecreate
constructs new index request specific index type sourcebyte xcontenttype must set
sets ingest pipeline executed indexing document
id indexed document set automatically generated
returns stored version currently stored version versionsmatchany optype optypecreate returns versionsmatchdeleted
index map provided content type source map index
override method replicationaction storing state request object which really shouldnt do transport client goes away move away making available meantime dangerous set use indexrequest object always wrapped bulk request envelope should set
type indexed document
sets content source index note number objects passed method varargs must even number also first argument pair the field name must valid string representation
constructs new index request index type id using source index index index type type index id id document
sets string representation optypeoptype either index create
sets type indexed document
sets document index bytes form
controls shard routing request using value hash shard id
sets type operation perform
controls shard routing request using value hash shard id
sets id indexed document set automatically generated
refresh executed get operation causing operation return latest value note heavy get set true defaults false
sets preference execute search defaults randomize across shards set local prefer local shards custom value guarantees order used across different requests
index name document
type document
id document
sets preference execute search defaults randomize across shards set local prefer local shards custom value guarantees order used across different requests
explicitly specify fields returned default source field returned
refresh executed get operation causing operation return latest value note heavy get set true defaults false
sets id document fetch
sets type document fetch set null use id fetch first document matching it
sets version cause get operation performed matching version exists changes happened doc since then
sets preference execute search defaults randomize across shards set local prefer local shards custom value guarantees order used across different requests
sets versioning type defaults orgelasticsearchindexversiontypeinternal
indicates whether response contain stored source chaining
controls shard routing request using value hash shard id
indicate source returned include andor exclude set include simple wildcard elements includes optional list include optionally wildcarded pattern filter returned source excludes optional list exclude optionally wildcarded pattern filter returned source
indicate source returned include andor exclude set include simple wildcard elements include optional include optionally wildcarded pattern filter returned source exclude optional exclude optionally wildcarded pattern filter returned source
use getresponsegetsource instead
method used parse getresponse object printed xcontent using toxcontentxcontentbuilder params method forward compatibility reason method might fail tries parse field doesnt know returning result check enough information parsed return valid getresponse instance throws parsingexception otherwise case get 404 back parsed normal getresponse found set false elasticsearch exception caller method needs way figure whether got back valid get response done catching parsingexception parser xcontentparser parse response getresponse ioexception io exception occurs parsing
routing associated document
allows setting fetchsourcecontext request controlling source returned
sets preference execute search defaults randomize across shards set local prefer local shards custom value guarantees order used across different requests
constructs single get item index index name type type can null id id
constructs new get request specified index typestring idstring must set
sets id document fetch
refresh executed get operation causing operation return latest value note heavy get set true defaults false
sets type document fetch
sets preference execute search defaults randomize across shards set local prefer local shards custom value guarantees order used across different requests
controls shard routing request using value hash shard id
allows setting fetchsourcecontext request controlling source returned
explicitly specify stored fields returned default source field returned
constructs new get request specified index type id index index get document type type document id id document
sets versioning type defaults orgelasticsearchindexversiontypeinternal
read stream
test parsing simulatedocumentbaseresult inner failures dont support asserting xcontent equivalence given exceptions parsed back original class run usual abstractxcontenttestcasetestfromxcontent without failures test failures disable asserting xcontent equivalence end
set id pipeline simulate
create new builder simulatepipelinerequests
create new builder simulatepipelinerequests use simulatepipelinerequestbuilderelasticsearchclient simulatepipelineaction bytesreference xcontenttype avoid content type autodetection source bytes
enable disable verbose mode
test parsing simulatepipelineresponse inner failures dont support asserting xcontent equivalence given exceptions parsed back original class run usual abstractxcontenttestcasetestfromxcontent without failures test failures disable asserting xcontent equivalence end
create new pipeline request id source along content type source
create new pipeline request use putpipelinerequeststring bytesreference xcontenttype avoid content type autodetection
read stream
test parsing simulateprocessorresult inner failures dont support asserting xcontent equivalence given exceptions parsed back original class run usual abstractxcontenttestcasetestfromxcontent without failures test failures disable asserting xcontent equivalence end
creates new request given source content type
create new request use simulatepipelinerequestbytesreference xcontenttype attempt content autodetection
test parsing simulatedocumentverboseresult inner failures dont support asserting xcontent equivalence given exceptions parsed back original class run usual abstractxcontenttestcasetestfromxcontent without failures test failures disable asserting xcontent equivalence end
parser parser xcontent contains serialized getpipelineresponse instance getpipelineresponse read parser ioexception parsing fails
sets id pipeline delete
read stream
test behavior named analysis component isnt defined index case build defaults
test equivalent calling analyze specific index index specific value maximum token count used
test equivalent calling analyze without specific index default value maximum token count used
sets flags return stats
clears stats
document types return stats for mainly affects setindexingboolean enabled returning specific indexing stats types
utility method computes total memory adding fielddata percolatorcache segments memory index writer version map
status goes across all shards
document types return stats for mainly affects indexingboolean enabled returning specific indexing stats types
sets underlying stats flags
sets flags return stats
clears stats
sets specific search group stats retrieve stats for mainly affects search enabled
flags flags set flags supplied default flags set
sets flags return stats
sets specific search group stats retrieve stats for mainly affects search enabled
document types return stats for mainly affects flagindexing enabled returning specific indexing stats types
sets specific search group stats retrieve stats for mainly affects search enabled
clears stats
gives access package private indicesstatsresponse constructor test purpose
constructs recovery information collection indices associated shards keeps track many total shards seen many successfully processed many failed totalshards total count shards seen successfulshards count shards successfully processed failedshards count shards failed process shardrecoverystates map indices shard recovery information shardfailures list failures processing shards
sets number shard copies active creation new shrunken index return defaults activeshardcountdefault wait one shard copy the primary become active set value activeshardcountall wait shards primary replicas active returning otherwise use activeshardcountfromint set value nonnegative integer number copies per shard number replicas 1 wait desired amount shard copies become active returning index creation wait timeout value number shard copies active returning check resizeresponseisshardsacknowledged determine requisite shard copies started returning timing out waitforactiveshards number active shard copies wait
specifies type requested indices ignore wildcard indices expressions example indices dont exist
index delete
refresh request works all shards
refresh request works all shards
force merge index maxnumsegments default cause merge process merge half configured number segments
merge expunge deletes index without full merging defaults full merging false
flush performed merge defaults true
flush performed merge defaults true
merge expunge deletes index without full merge defaults full merging false
merge index maxnumsegments default cause merge process merge half configured number segments
default indicesoptions inherited broadcastoperationrequest raise exception
default indicesoptions setting indicessegmentsrequest throw exception index present
setting ignoreunavailable option prevents indexclosedexception
segments goes across all active shards
specifies type requested indices ignore wildcard indices expressions default expands wildcards open closed indices
sets indices shard stores request
set statuses filter shards get stores info on see clusterhealthstatus details defaults yellow red status shardstatuses acceptable values green yellow red all
specifies type requested indices ignore wildcard indices expressions default expands wildcards open closed indices
set statuses filter shards get stores info on shardstatuses acceptable values green yellow red all see clusterhealthstatus details
sets indices shard stores request
sets value includedefaults includedefaults value includedefaults set request
returns string value specified index setting includedefaults flag set set false getindexrequest method return value setting explicitly set index includedefaults flag set true getindexrequest method fall back return default value setting explicitly set
list query explanations
types documents query run against defaults types
constructs new validate request provided indices indices provided means run indices
indicates whether query validated shards
query validate orgelasticsearchindexqueryquerybuilders
indicates detailed information query returned orgelasticsearchindexqueryquerybuilders
indicates whether query rewritten primitive queries
types documents query run against defaults types
specifies type requested indices ignore deal wildcard indices expressions example indices dont exist indicesoptions desired behaviour regarding indices ignore wildcard indices expressions request
sets number shard copies active indices opening return defaults activeshardcountdefault wait one shard copy the primary become active set value activeshardcountall wait shards primary replicas active returning otherwise use activeshardcountfromint set value nonnegative integer number copies per shard number replicas 1 wait desired amount shard copies become active returning indices opening wait timeout value number shard copies active returning check openindexresponseisshardsacknowledged determine requisite shard copies started returning timing out waitforactiveshards number active shard copies wait
sets indices opened indices indices opened request
sets number shard copies active indices opening return defaults activeshardcountdefault wait one shard copy the primary become active set value activeshardcountall wait shards primary replicas active returning otherwise use activeshardcountfromint set value nonnegative integer number copies per shard number replicas 1 wait desired amount shard copies become active returning indices opening wait timeout value number shard copies active returning check openindexresponseisshardsacknowledged determine requisite shard copies started returning timing out waitforactiveshards number active shard copies wait
sets indices opened indices indices opened request
indices opened indices opened
specifies type requested indices ignore deal wildcard expressions example indices dont exist current behaviour comes index names wildcard indices expressions
specifies type requested indices ignore deal wildcard expressions example indices dont exist indicesoptions desired behaviour regarding indices ignore wildcard indices expressions request
force flushing even one possibly needed
set true flush block another flush operation already running flush performed default true
adds mapping added index gets created type mapping type source mapping source xcontenttype content type mapping source
sets aliases associated index gets created
sets settings mappings single source
adds mapping added index gets created type mapping type source mapping source
sets settings mappings single source
settings create index with
specialized simplified mapping source method takes form simple properties definition field1 typestringstoretrue
allows set settings using json builder
adds alias associated index gets created
cause index creation
settings create index either json yaml format
adds custom metadata index created
sets number shard copies active index creation return defaults activeshardcountdefault wait one shard copy the primary become active set value activeshardcountall wait shards primary replicas active returning otherwise use activeshardcountfromint set value nonnegative integer number copies per shard number replicas 1 wait desired amount shard copies become active returning index creation wait timeout value number shard copies active returning check createindexresponseisshardsacknowledged determine requisite shard copies started returning timing out waitforactiveshards number active shard copies wait
settings create index with
constructs new request create index specified name settings
sets aliases associated index gets created
settings create index either jsonyamlproperties format
sets settings mappings single source
sets settings mappings single source
sets settings mappings single source
adds alias associated index gets created
sets number shard copies active index creation return defaults activeshardcountdefault wait one shard copy the primary become active set value activeshardcountall wait shards primary replicas active returning otherwise use activeshardcountfromint set value nonnegative integer number copies per shard number replicas 1 wait desired amount shard copies become active returning index creation wait timeout value number shard copies active returning check createindexresponseisshardsacknowledged determine requisite shard copies started returning timing out waitforactiveshards number active shard copies wait
sets name index created
adds mapping added index gets created type mapping type source mapping source
settings create index either jsonyamlproperties format
allows set settings using json builder
cause index creation
sets aliases associated index gets created
sets settings mappings single source
settings create index with
sets aliases associated index gets created
adds mapping added index gets created type mapping type source mapping source
sets settings mappings single source
sets settings mappings single source
adds mapping added index gets created type mapping type source mapping source xcontenttype content type source
settings create index either json yaml format
sets aliases associated index gets created
specialized simplified mapping source method takes form simple properties definition field1 typestringstoretrue
sets aliases associated index gets created
adds custom metadata index created
settings create index with
test ensures index creation adheres indexmetadatasettingwaitforactiveshards
tests manually recover failed allocation due shards moved away etc
test setting source available setters
test setting settings available setters
sets indices closed indices indices closed request
specifies type requested indices ignore wildcard indices expressions example indices dont exist indicesoptions desired behaviour regarding indices ignore indices wildcard expressions request
specifies type requested indices ignore deal wildcard expressions example indices dont exist desired behaviour regarding indices ignore wildcard indices expressions
indices closed indices closed
sets indices closed indices indices closed request
specifies type requested indices ignore deal wild wildcard expressions example indices dont exist indicesoptions desired behaviour regarding indices ignore wildcard indices expressions request
getting upgrade stats all active shards
sets index versions updated
sets index version map indices updated
sets index versions updated
upgrade ancient older major version lucene segments
upgrade request works all shards
finds indices primaries available
see upgradeonlyancientsegments
set default routing
add action request validate it
aliases use action
validate action sane called action added request actions invalid built
set index action operating on
set alias action operating on
read stream
allows read alias provided input stream
associates search routing value alias
associates index routing value alias
associates filter alias
associates filter alias
sets whether alias pointing writeindex
parses alias returns parsed representation
associates filter alias
associates routing value alias
adds alias index indices indices alias alias
adds alias index index index alias alias filterbuilder filter
adds alias index index index alias alias filter filter
removes aliases index indices indices aliases aliases
adds alias index indices indices alias alias filterbuilder filter
adds alias index index indices alias alias filter filter
adds alias index indices indices alias alias filter filter
adds alias action request action alias action
adds alias index index index alias alias
adds alias index indices indices alias alias filter filter
removes alias index index index alias alias
removes aliases index index index aliases aliases
adds alias index index index alias alias writeindex write index flag
specifies type requested indices ignore wildcard indices expressions example indices dont exist
fills alias result empty entries requested indices specific aliases requested
sets order template one template matches
sets match expression used match indices created replaced setpatternslist
settings crete index template either json yaml format
template source definition
template source definition
template source definition
adds mapping added index gets created type mapping type source mapping source
settings created index template with
cause index template creation
adds mapping added index template gets created type mapping type source mapping source xcontenttype typeformat source
sets aliases associated index gets created
sets optional version template
sets aliases associated index gets created
sets aliases associated index gets created
sets match expression used match indices created
settings crete index template either json yaml format
settings created index template with
specialized simplified mapping source method takes form simple properties definition field1 typestringstoretrue
sets aliases associated index gets created
adds mapping added index template gets created type mapping type source mapping source
template source definition
set true force creation update index template already exists fail illegalargumentexception
adds alias added index template gets created alias alias request builder
template source definition
sets name index template
cause index template creation
settings create index template either jsonyaml format
adds alias added index gets created alias metadata new alias index template creation request
settings create index template with
adds mapping added index gets created type mapping type source mapping source xcontenttype source content type
template source definition
sets aliases associated index gets created
adds mapping added index gets created type mapping type source mapping source
template source definition
settings create index template with
set true force creation update index template already exists fail illegalargumentexception
specialized simplified mapping source method takes form simple properties definition field1 typestringstoretrue
settings create index template either json yaml format
sets aliases associated index gets created
sets name index template delete
set index template name delete
sets names index templates
sets concrete index put mapping request
type mappings
type mapping type source consisting fieldproperties pairs eg field1 typestringstoretrue illegalargumentexception number source arguments divisible two mappings definition
mapping source definition
mapping source definition
sets indices put mapping operation execute on
indices mappings put
test putmappingrequestbuildfromsimplifieddefstring object rejects inputs object varargs field name properties paired correctly
returns random putmappingrequest
type mappings
mapping source definition
specialized simplified mapping source method takes form simple properties definition field1 typestringstoretrue
specifies type requested indices ignore wildcard indices expressions example indices dont exist
mapping source definition
mapping source definition
indicates whether default mapping settings returned
fields list fields retrieve mapping
indicate whether receiving node operate based local index information forward requests needed nodes running locally request raise errors running locally missing indices
sets fields retrieve
indicates whether default mapping settings returned
returns mappings specific field field field name specified getfieldmappingsrequest fieldmappingmetadata requested field null found
attribute extract object extracted object group attributeclassname stream current tokenstream includeattributes filtering attributes mapkey value
add name char filter used tokenizer
add char filter setting used top tokenizer provided
add name token filter used top tokenizer provided
add token filter setting used top tokenizer provided
instead setting analyzer sets tokenizer using custom settings used part custom analyzer
instead setting analyzer tokenizer sets normalizer name
instead setting analyzer sets tokenizer name used part custom analyzer
sets texts analyze
sets attributes include results
sets field analyzer used analyze text note requires index set
sets explain
sets analyzer name use order analyze text analyzer analyzer name
iff set true settings update add settings already set index existing settings remain unchanged
sets settings update
sets indices update settings execute
sets settings updated
sets settings updated
sets settings updated
sets settings updated either json yaml format
specifies type requested indices ignore wildcard indices expressions example indices dont exist
sets settings updated
sets indices apply settings update
sets settings updated either json yaml format
sets settings updated
sets settings updated either json yaml format
constructs new request update settings one indices
iff set true settings update add settings already set index existing settings remain unchanged
returns string value specified index setting includedefaults flag set set false getsettingsrequest method return value setting explicitly set index includedefaults flag set true getsettingsrequest method fall back return default value setting explicitly set
specifies type requested indices ignore wildcard indices expressions example indices dont exist
includedefaults set return default values normally suppressed flag specific rest client
sets number shard copies active creation new rollover index return defaults activeshardcountdefault wait one shard copy the primary become active set value activeshardcountall wait shards primary replicas active returning otherwise use activeshardcountfromint set value nonnegative integer number copies per shard number replicas 1 wait desired amount shard copies become active returning index creation wait timeout value number shard copies active returning check rolloverresponseisshardsacknowledged determine requisite shard copies started returning timing out waitforactiveshards number active shard copies wait
newly created index matches index template whose aliases contains rollover alias rollover alias point multiple indices causes indexing requests rejected avoid this make sure duplicated alias index templates creating new index
adds condition check index least numdocs
adds sizebased condition check index size least size
adds condition check index least age old
types types check exist
indicesoptions specifies resolve indices arent active ready indices wildcard expressions
indices indices check types
controls whether wildcard expressions expanded existing open indices
controls whether wildcard expressions expanded existing closed indices
set source script along content type source
set script source content type bytes
shortcut setwaitforactiveshardsactiveshardcount numerical shard count passed in instead first call activeshardcountfromint get activeshardcount
waits n number nodes use 12 exact mapping 12 12 range
sets whether request wait relocating shards retrieving cluster health status defaults false meaning operation wait relocating shards set true wait number relocating shards cluster 0
sets whether request wait initializing shards retrieving cluster health status defaults false meaning operation wait initializing shards set true wait number initializing shards cluster 0
sets number shard copies must active getting health status defaults activeshardcountnone meaning dont wait active shards set value activeshardcountall wait shards primary replicas active across indices cluster otherwise use activeshardcountfromint set value nonnegative integer total number shard copies would exist across indices cluster
sets whether request wait initializing shards retrieving cluster health status defaults false meaning operation wait initializing shards set true wait number initializing shards cluster 0
waits n number nodes use 12 exact mapping 12 12 range
sets number shard copies must active across indices getting health status defaults activeshardcountnone meaning dont wait active shards set value activeshardcountall wait shards primary replicas active across indices cluster otherwise use activeshardcountfromint set value nonnegative integer total number shard copies wait for
sets whether request wait relocating shards retrieving cluster health status defaults false meaning operation wait relocating shards set true wait number relocating shards cluster 0
xcontent parser serialization tests
allows explicitly override derived cluster health status status override status must null
build lists information node
build looking list node statistics
build stats information node
average number shards primaryreplicas across indices
returns many redundant copies data cluster holds running replicas return 0
average replication factor across indices see getreplication
average number primary shards across indices
cluster health status populated master nodes
test empty transporthttp types printed part cluster stats xcontent output
sets repository settings source repository settings request
parses repository definition repositorydefinition repository definition
sets whether repository verified creation
type repository fs shared filesystem repository type repository type request
sets repository settings settings repository settings request
sets name repository name repository name
sets repository settings settings repository settings request
sets repository settings source repository settings json yaml format xcontenttype content type source request
sets repository name name repository name builder
sets repository settings source repository settings builder
sets repository settings settings repository settings builder
sets whether repository verified creation verify true repository verified registration false otherwise builder
sets repository settings json yaml format source repository settings xcontenttype content type source builder
sets repository type type repository type builder
sets repository settings settings repository settings builder builder
sets name repository unregister name name repository
sets repository name name repository name
sets list repositories list repositories empty contains single element all registered repositories returned repositories list repositories request
sets list repositories get repositories list repositories builder
adds repositories list repositories get repositories list repositories builder
sets name repository unregister name name repository
sets repository name name repository name
sets explain flag defaults false true request include explanation addition cluster state
adds allocation commands applied cluster note empty case simply run simple reroute
sets retry failed flag defaults false true request retry allocating shards cant currently allocated due many allocation failures
sets dry run flag defaults false allowing run commands without actually applying cluster state getting resulting cluster state back
set allocation commands execute
sets explain flag collect information reroute request without executing actions similar dryrun humanreadable
sets dry run flag defaults false allowing run commands without actually applying cluster state getting resulting cluster state back
sets retry failed flag defaults false true request retry allocating shards cant currently allocated due many allocation failures
adds allocation commands applied cluster note empty case simply run simple reroute
node transport stats returned
node indices stats returned
node file system stats returned
node thread pool stats returned
node jvm stats returned
ingest statistics returned
sets request flags
discovery stats returned
node indices stats returned
node os stats returned
clears stats flags
node http stats returned
node os stats returned
indices level stats
operating system level statistics
process level statistics
thread pool level statistics
file system level stats
jvm level statistics
node http returned
adaptiveselection statistics returned
node thread pool returned
sets request flags
node os returned
ingest statistics returned
node transport returned
indices stats returned
node jvm returned
nodes circuit breaker stats returned
node file system stats returned
clears request flags
node process returned
nodes discovery stats returned
returns ordered list based modules name
returns ordered list based plugins name
information indices currently indexing buffers returned indices true want info
node jvm returned
node settings returned
information plugins returned plugins true want info request
node process returned
clears info flags
node thread pool info returned
sets return data
node os returned
information ingest returned ingest true want info
node http returned
node transport returned
jvm level information
settings node
operating system level information
process level information
systems hostname null case unknownhostexception
node os info returned
clears info flags
node indices info returned
node settings returned
node transport info returned
node thread pool info returned
node http info returned
sets return data
node ingest info returned
node os process returned
node plugins info returned
node jvm info returned
fetch task status list tasks api using its fallback get task index behavior asserts obvious stuff fetched task returns map its status
test waiting task times out wait wait running task return failures accumulated waiting
test wait completion storeresult task store results wait start waiting task accepts id task wait returns future waiting it validator validate response return task ids found
wait test task running nodes return taskid primary task
registers recording task event listeners given action mask nodes
basic is plugged in style test indexes document makes sure fetch status process goal verify large moving parts make fetching task status work fit together rather verify particular status results indexing that look transportreplicationactiontests intentionally dont use task recording mechanism used places test make sure status fetching works properly wire
asserts tasks tasks list parenttask
returns events satisfy criteria across nodes actionmasks action masks match number events satisfy criteria
resets recording task event listeners given action mask nodes
test starts nodes actions blocks nodes node actions blocked middle execution executes tasks action targets blocked node actions test verifies task actions getting executed nodes listed node filter
detailed task information returned
request wait found tasks complete
returns list tasks node
presents flat list tasks
convert task response xcontent grouping executing nodes
convert response xcontent grouping parent tasks
get tasks found request grouped parent tasks
detailed task information returned
request wait found tasks complete
called waiting task complete attempts load results task tasks index isnt index returns snapshot task taken shortly completion
send getrequest tasks index looking persisted copy task completed task itll found tasks result stored called node task node still part cluster coordinating node node longer part cluster
called plain getresponse loading task results index called node task node part cluster coordinating node node wasnt part cluster
executed coordinating node forward execution remaining work node matches requested taskidgetnodeid node isnt cluster proceed getfinishedtaskfromindextask gettaskrequest actionlistener node
executed node running task find return running task falls back getfinishedtaskfromindextask gettaskrequest actionlistener task isnt still running
request wait found tasks complete
timeout wait async actions request must take must take anywhere 0 2
set taskid look up required
set taskid look up required
request wait found tasks complete
timeout wait async actions request must take must take anywhere 0 2
set reason canceling task
node node statistics collected timestamp timestamp statistics collected sincetime timestamp collection statistics started restusage map containing counts number times rest endpoint called
sets request flags
node rest actions usage statistics returned
clears request flags
sets preference execute search defaults randomize across shards set local prefer local shards custom value guarantees order used across different requests
separated list routing values control shards search executed on
routing values control shards search executed on
specifies type requested indices ignore deal indices wildcard expressions example indices dont exist
sets indices search executed on
indices
routing values control shards search executed on
sets preference execute search defaults randomize across shards set local prefer local shards custom value guarantees order used across different requests
sets indices search executed on
separated list routing values control shards search executed on
sets whether explain allocation primary shard replica shard copy shard id see getshard
create new allocation explain request primary false first unassigned replica picked explanation replicas unassigned first assigned replica explained package private testing
returns index name shard explain null use unassigned shard see useanyunassignedshard
create new allocation explain request explain unassigned shard cluster
returns node holding replica shard explained returns null replica shard explained
sets index name shard explain
requests explain api explain already assigned replica shard currently allocated given node
returns shard id shard explain null use unassigned shard see useanyunassignedshard
sets shard id shard explain
returns true explaining primary shard shard id see getshard false explaining replica shard copy shard id null use unassigned shard see useanyunassignedshard
whether include yes decider decisions response instead no decisions
index name use finding shard explain
requests explain api explain already assigned replica shard currently allocated given node
whether primary replica explained
whether include information gathered disk information nodes cluster
shard number use finding shard explain
signal first unassigned shard used
returns unassigned info shard null shard active
returns relocating target node null shard shardroutingstaterelocating state
returns currently assigned node null shard unassigned
returns cluster disk info cluster null none available
include data
cluster state result include orgelasticsearchclusterclusterstatecustom defaults true
setmetadataboolean set indices return orgelasticsearchclustermetadataindexmetadata for defaults indices
cluster state result include orgelasticsearchclusternodediscoverynodes defaults true
cluster state result include orgelasticsearchclusterroutingroutingtable defaults true
cluster state result include orgelasticsearchclustermetadatametadata defaults true
include data
constructs new delete snapshots request repository snapshot name repository repository name snapshot snapshot name
sets snapshot name request
sets repository name repository repository name builder
sets snapshot name snapshot snapshot name builder
sets name snapshot snapshot snapshot name request
set true allow indices failed snapshot shards partially restored partial true indices failed snapshot shards partially restored request
sets repositoryspecific restore settings see repository documentation information source repositoryspecific snapshot settings request
set true restore procedure restore global cluster state global cluster state includes persistent settings index template definitions includeglobalstate true global state restored snapshot request
sets rename pattern applied restored indices indices match rename pattern renamed according renamereplacementstring rename pattern applied according javautilregexmatcherappendreplacementstringbuffer string request fail two indices renamed name renamepattern rename pattern request
sets settings addedchanged restored indices
sets list index settings index settings groups shouldnt restored snapshot
parses restore definition source restore definition request
sets list indices restored snapshot list indices supports multiindex syntax example test test42 index indices prefix test except index test42 aliases supported empty list all restore open indices snapshot indices list indices request
sets settings addedchanged restored indices
set true restore procedure restore aliases includealiases true aliases restored snapshot request
parameter set true operation wait completion restore process returning waitforcompletion true operation wait completion request
sets repositoryspecific restore settings json yaml format see repository documentation information source repositoryspecific snapshot settings xcontenttype content type source request
sets repositoryspecific restore settings see repository documentation information settings repositoryspecific snapshot settings request
sets settings addedchanged restored indices
constructs new put repository request provided repository snapshot names repository repository name snapshot snapshot name
sets repository name repository repository name request
sets settings addedchanged restored indices
sets list indices restored snapshot list indices supports multiindex syntax example test test42 index indices prefix test except index test42 aliases supported empty list all restore open indices snapshot indices list indices request
sets rename replacement see renamepatternstring information renamereplacement rename replacement
specifies type requested indices ignore deal wildcard expressions example indices dont exist indicesoptions desired behaviour regarding indices ignore wildcard indices expressions request
sets list index settings index settings groups shouldnt restored snapshot
sets repositoryspecific restore settings see repository documentation information settings repositoryspecific snapshot settings request
sets rename pattern applied restored indices indices match rename pattern renamed according setrenamereplacementstring rename pattern applied according javautilregexmatcherappendreplacementstringbuffer string request fail two indices renamed name renamepattern rename pattern builder
set true restore procedure restore global cluster state global cluster state includes persistent settings index template definitions restoreglobalstate true global state restored snapshot builder
sets list index settings index settings groups shouldnt restored snapshot
sets index settings added replaced restore source index settings xcontenttype content type source builder
sets list indices restored snapshot list indices supports multiindex syntax example test test42 index indices prefix test except index test42 aliases supported empty list all restore open indices snapshot indices list indices builder
sets repositoryspecific restore settings see repository documentation information settings repositoryspecific snapshot settings builder
sets index settings added replaced restore settings index settings builder
sets repositoryspecific restore settings see repository documentation information source repositoryspecific snapshot settings builder
sets rename replacement see setrenamepatternstring information renamereplacement rename replacement builder
set true restore procedure restore partially snapshotted indices partial true partially snapshotted indices restored builder
sets snapshot name snapshot snapshot name builder
sets list index settings index settings groups shouldnt restored snapshot
specifies type requested indices ignore deal wildcard expressions example indices dont exist indicesoptions desired behaviour regarding indices ignore wildcard indices expressions builder
sets index settings added replaced restore source index settings builder
parameter set true operation wait completion restore process returning waitforcompletion true operation wait completion builder
sets repositoryspecific restore settings json yaml format see repository documentation information source repositoryspecific snapshot settings xcontenttype content type source builder
sets index settings added replaced restore settings index settings builder
sets repository name repository repository name builder
sets repositoryspecific restore settings see repository documentation information settings repositoryspecific snapshot settings builder
set true restore procedure restore aliases restorealiases true aliases restored snapshot builder
sets repository name repository repository name builder
makes request return current snapshot builder
makes request ignore unavailable snapshots ignoreunavailable true ignore unavailable snapshots builder
adds additional snapshots list snapshots return snapshots additional snapshots builder
sets list snapshots return snapshots list snapshots builder
set false show snapshot names indices contain useful snapshots belong cloudbased repository blob read concern cost wise performance wise snapshot names indices contain retrieved single index blob repository whereas rest information requires reading snapshot metadata file snapshot requested defaults true returns information requested snapshot
constructs new get snapshots request given repository name list snapshots repository repository name snapshots list snapshots
set true ignore unavailable snapshots request
set false show snapshot names indices contain useful snapshots belong cloudbased repository blob read concern cost wise performance wise snapshot names indices contain retrieved single index blob repository whereas rest information requires reading snapshot metadata file snapshot requested defaults true returns information requested snapshot
sets repository name repository repository name request
sets list snapshots returned request
sets repositoryspecific snapshot settings see repository documentation information settings repositoryspecific snapshot settings request
set true operation wait snapshot completion returning default operation return soon snapshot initialized changed setting flag true waitforcompletion true operation wait snapshot completion request
specifies indices options like type requested indices ignore example indices dont exist indicesoptions desired behaviour regarding indices options request
sets snapshot name snapshot snapshot name
sets repositoryspecific snapshot settings see repository documentation information source repositoryspecific snapshot settings request
sets list indices included snapshot list indices supports multiindex syntax example test test42 index indices prefix test except index test42 aliases supported empty list all snapshot open indices cluster request
constructs new put repository request provided snapshot repository names repository repository name snapshot snapshot name
parses snapshot definition source snapshot definition request
sets repositoryspecific snapshot settings json yaml format see repository documentation information source repositoryspecific snapshot settings xcontenttype content type source request
returns list indices included snapshot list indices
sets repositoryspecific snapshot settings see repository documentation information settings repositoryspecific snapshot settings request
set true allow indices unavailable shards partially snapshotted partial true indices unavailable shards partially snapshotted request
sets repository name repository name request
specifies indices options like type requested indices ignore example indices dont exist desired behaviour regarding indices options
sets list indices included snapshot list indices supports multiindex syntax example test test42 index indices prefix test except index test42 aliases supported empty list all snapshot open indices cluster request
set true global state stored part snapshot includeglobalstate true global state stored request
sets repositoryspecific snapshot settings see repository documentation information settings repositoryspecific snapshot settings builder
specifies indices options like type requested indices ignore example indices dont exist indicesoptions desired behaviour regarding indices options request
set true snapshot include global cluster state includeglobalstate true snapshot include global cluster state builder
sets repositoryspecific snapshot settings yaml json format see repository documentation information source repositoryspecific snapshot settings xcontenttype content type source builder
sets repositoryspecific snapshot settings see repository documentation information settings repositoryspecific snapshot settings builder
sets repository name repository repository name builder
sets list indices included snapshot list indices supports multiindex syntax example test test42 index indices prefix test except index test42 aliases supported empty list all snapshot open indices cluster builder
sets repositoryspecific snapshot settings see repository documentation information settings repositoryspecific snapshot settings builder
sets snapshot name snapshot snapshot name builder
set true request snapshot indices unavailable shards partial true request snapshot indices unavailable shards builder
set true request wait snapshot completion returning waitforcompletion true builder
returns http status reststatusaccepted snapshot still progress reststatusok snapshot successful partially successful reststatusinternalservererror snapshot failed completely
sets repository name repository repository name builder
set true ignore unavailable snapshots instead throwing exception defaults false means unavailable snapshots cause exception thrown ignoreunavailable whether ignore unavailable snapshots builder
adds additional snapshots list snapshots return snapshots additional snapshots builder
sets list snapshots return snapshots list snapshots builder
generate snapshot state code value state code state
reads snapshot status stream input stream input deserialized snapshot status
returns list snapshot indices
set true ignore unavailable snapshots instead throwing exception defaults false means unavailable snapshots cause exception thrown ignoreunavailable whether ignore unavailable snapshots request
sets repository name repository repository name request
sets list snapshots returned request
constructs new get snapshots request given repository name list snapshots repository repository name snapshots list snapshots
sets transient settings updated survive full cluster restart
sets source containing persistent settings updated get applied cross restarts
sets source containing transient settings updated survive full cluster restart
sets transient settings updated survive full cluster restart
sets persistent settings updated get applied cross restarts
sets transient settings updated survive full cluster restart
sets persistent settings updated get applied cross restarts
sets persistent settings updated get applied cross restarts
sets source containing transient settings updated survive full cluster restart
sets persistent settings updated get applied cross restarts
sets transient settings updated survive full cluster restart
sets transient settings updated survive full cluster restart
sets source containing persistent settings updated get applied cross restarts
sets persistent settings updated get applied cross restarts
sets transient settings updated survive full cluster restart
sets persistent settings updated get applied cross restarts
partitions settings known valid versus unknown invalid resulting tuple contains known valid settings first component unknown invalid settings second component note archived settings contained settings partition included first component settings settings partition settingstype string identify settings for logging logger logger sending warnings partitioned settings
returns string value setting specified index order search first persistent settings transient settings finally default settings setting name setting get string
includedefaults set return default settings normally suppressed
index name document
type document
id document
return start stop offsets term stored skip offsets
sets artificial document term vectors requested for use docbytesreference boolean xcontenttype avoid content auto detection
return field statistics term shard skip
return term statistics term shard skip
sets preference execute search defaults randomize across shards set local prefer local shards custom value guarantees order used across different requests
constructs new term vector request document fetch provided index use typestring idstring specify document load
sets artificial document term vectors requested for
sets settings filtering terms
constructs new term vector request document fetch provided index use typestring idstring specify document load
return positions term stored skip
sets id document term vector requested for
populates request object prepopulated defaults based parser
override analyzer used field generating term vectors
return term vectors special selected fields returns term vectors fields selectedfields null
return payloads term skip
sets type document get term vector for
sets preference execute search defaults randomize across shards set local prefer local shards custom value guarantees order used across different requests
sets analyzer used field generating term vectors
sets type document
sets whether return start stop offsets term stored skip offsets
sets whether return term vectors special selected fields returns term vectors fields selectedfields null
sets index document located
sets preference execute search defaults randomize across shards set local prefer local shards custom value guarantees order used across different requests
sets whether return field statistics term shard skip
sets whether term vectors generated realtime
sets settings filtering terms
sets routing required routing isnt id based
sets whether return term statistics term shard skip
sets artificial document generate term vectors
sets whether return payloads term skip
sets id document
sets whether return positions term stored skip
headerref stores offsets per field termvectors header information bytesref termvectors stores actual term vectors bytesref
generate test documentsthe returned documents already indexed
invokes acceptbulkrequest actionlistener backs provided exception delegates results provided listener retries scheduled using classs thread pool consumer consumer apply request listener bulkrequest bulk request executed listener listener invoked bulk request finishes completes exception listener settings settings
invokes acceptbulkrequest actionlistener backs provided exception retries scheduled using classs thread pool consumer consumer apply request listener bulkrequest bulk request executed settings settings future representing bulk response returned client
completes operation without anything primary
returns request executed shard
indicates operation needs failed required mapping didnt arrive time
resets current item state prepare new execution
builds bulk shard response return user
sets request actually executed primary different request received user specifically update request translated indexing delete request
returns translog location needed synced order persist operations executed far
indicates current operation completed needs wait new mapping master
current operation executed primary specified result
returns result request executed shard
move next item execute
finishes execution current request response returned user
adds updaterequest list actions execute
adds deleterequest list actions execute
adds deleterequest list actions execute
timeout wait index operation cant performed immediately defaults 1m
adds indexrequest list actions execute follows behavior indexrequest for example id provided one generated usage create flag
adds framed data binary format
sets number shard copies must active proceeding write see replicationrequestwaitforactiveshardsactiveshardcount details
timeout wait index operation cant performed immediately defaults 1m
adds indexrequest list actions execute follows behavior indexrequest for example id provided one generated usage create flag
adds updaterequest list actions execute
adds framed data binary format
sets flush new bulk request based number actions currently added defaults 1000 set 1 disable it
closes processor flushing time enabled its shutdown remaining bulk actions flushed concurrent requests enabled returns true immediately concurrent requests enabled waits specified timeout bulk requests complete returns true specified waiting time elapses bulk requests complete false returned timeout maximum time wait bulk requests complete unit time unit timeout argument true bulk requests completed false waiting time elapsed bulk requests completed interruptedexception current thread interrupted
adds data bytes processed bulk processor
flush pending delete index requests
sets number concurrent requests allowed executed value 0 means single request allowed executed value 1 means 1 concurrent request allowed executed accumulating new bulk requests defaults 1
builds new bulk processor
adds data bytes processed bulk processor
sets custom backoff policy backoff policy defines bulk processor handle retries bulk requests internally case failed due resource constraints ie thread pool full default back exponentially orgelasticsearchactionbulkbackoffpolicyexponentialbackoff
closes processor flushing time enabled its shutdown remaining bulk actions flushed
sets flush interval flushing any bulk actions pending interval passes defaults set note setbulkactionsint setbulksizeorgelasticsearchcommonunitbytesizevalue set 1 flush interval set allowing complete async processing bulk actions
sets flush new bulk request based size actions currently added defaults 5mb set 1 disable it
failure message null fail
type action
reads bulkitemresponse xcontentparser parser xcontentparser id id assign parsed bulkitemresponse usually index item bulkresponsegetitems array
version action
read stream
index name action
id action
abort request store orgelasticsearchactionbulkbulkitemresponsefailure response index concrete index resolved request cause cause rejection may null illegalstateexception response already exists request
tests transportbulkaction evaluates alias routing values correctly dealing alias pointing multiple indices write index exits
adds framed data binary format
returns sliced bytesreference xcontenttype json byte preceding marker checked see carriage return so bytesreference sliced carriage return ignored
adds list requests executed either index delete requests
timeout wait index operation cant performed immediately defaults 1m
sets number shard copies must active proceeding write see replicationrequestwaitforactiveshardsactiveshardcount details
adds framed data binary format
adds list requests executed either index delete requests
list optional payloads associated requests order requests note elements within might null payload provided note payloads provided method return null as conserve memory overhead
adds framed data binary format
add request current bulkrequest request request add payload optional payload current bulk request
executes bulk item requests handles request execution exceptions
determines whether bulk item request executed replica replicaitemexecutionmodenormal upon normal primary execution failures replicaitemexecutionmodefailure upon primary execution failure sequence generation replicaitemexecutionmodenoop upon primary execution failure sequence generation primary execution resulted noop only possible write requests pre60 nodes
creates new bulk item result given requests result performing update operation shard
executes index operation primary shard updates mapping dynamic mappings found
anything failed execution
see frombytebyte
returns true name represents valid name one indices option false otherwise
whether aliases pointing multiple indices allowed
fail wildcard usage indices named required destructive operations
index auto created indexnotfoundexception index doesnt exist shouldnt auto created
waits specified number active shards started executing indexnames indices wait active shards activeshardcount number active shards wait returning timeout timeout value onresult function executed response requisite shards becoming active timeout whichever comes first onfailure function executed response error occurring waiting active shards
returns true iff active shard count shard routing table enough meet required shard count represented instance
returns true iff given cluster states routing table contains enough active shards given indices meet required shard count represented instance
parses active shard count given string valid values all shard copies null default value which defaults one shard copy numeric value greater equal 0 input throw illegalargumentexception
get activeshardcount instance given value value first validated ensure valid shard count throws illegalargumentexception validation fails valid values nonnegative number directly use activeshardcountdefault default value which one shard copy activeshardcountall specify shards
validates instance valid given number replicas index
returns true iff given number active shards enough meet required shard count represented instance method invoked activeshardcount objects created fromint none one
use method transport action continue run context current task
execute transport action local node returning task used track execution accepting tasklistener listens completion action
use method transport action call result creation new task associated call typical behavior
creates new listener delegate delegate listener groupsize group size
parse refresh policy string modifying string non null convenient use request parsing
parse string representation refresh policy usually request parameter
parse refresh policy string modifying string non null convenient use request parsing
request trigger refresh plain refreshpolicyimmediate wait refresh plain refreshpolicywaituntil proceed ignore refreshes entirely plain refreshpolicynone default
timeout wait index operation cant performed immediately defaults 1m
timeout wait index operation cant performed immediately defaults 1m
timeout wait index operation cant performed immediately defaults 1m
sets index
concrete index request targeted null index optional whether index property optional depends concrete implementation index property required concrete implementation use validatenonnullindex check index property set
validation exception index property hasnt set
sets index
syncs operation result translog throws shard available failure
calls response listener pending operations returned otherwise decrements pending opts counter
respond refresh occurred listener ready always called synchronized this
respond refresh occurred listener ready always called synchronized this
node failure occurred
sets number shard copies must active proceeding replication operation defaults activeshardcountdefault requires one shard copy the primary active set value activeshardcountall wait shards primary replicas active otherwise use activeshardcountfromint set value nonnegative integer total number shard copies number replicas 1
shardid shard operation executed on null shardid yet resolved
sets minimum version cluster state required next node redirect another primary used prevent redirect loops see also transportreplicationactionreroutephasedorun
creates new request resolved shard id
sets target shard id request shard id set indexdelete request resolved transport action
timeout wait index operation cant performed immediately defaults 1m
shard ids request run
checks whether perform write based required active shard count setting returns null ok proceed string describing reason stop
sends specified replica request specified node replicarequest replica request node node send request listener callback handling response failure
sets current phase task isnt null pulled method convenient way
result executing primary operation expects finalresponseifsuccessful finalfailure notnull
index level block check request execution returning null means blocks need checked
cluster level block check request execution returning null means blocks need checked
tries acquire reference indexshard perform primary operation released performing primary operation locally replication operation replica shards completed failed see replicationoperation
resolves derived values request example target shard id incoming request set request construction additional processing validation request done here indexmetadata index metadata concrete index request going operate request request resolve
test ensures replication operations adhere indexmetadatasettingwaitforactiveshards setting request using default value waitforactiveshards
transport channel needed replica operation testing
takes request sent transportreplicationaction captured returns underlying request its wrapped original cast expected type throw classcastexception request wrong type
relocating primary shard cluster state update end relocation active primary switched relocation source relocation target relocation source receives processes cluster state relocation target time span relocation source believes active primary relocation target relocation target believes active primary relocation source results replication requests sent back forth test checks replication request routed back relocation target relocation source case stale index routing table relocation target
test replica request rejected arrives shard wrong allocation id
test primary request rejected arrives shard wrong allocation id term
test throwing orgelasticsearchactionsupportreplicationtransportreplicationactionretryonreplicaexception causes retry
timeout wait index operation cant performed immediately defaults 1m
sets number shard copies must active proceeding write see replicationrequestwaitforactiveshardsactiveshardcount details
timeout wait index operation cant performed immediately defaults 1m
creates cluster state index numberofprimaries primary shards started state replicas cluster state contains numberofnodes nodes assigns primaries nodes
creates cluster state index one shard many replicas numberofreplicas primary started cluster state replicas one unassigned initializing started relocating index name index activeprimarylocal active primary coincide local node cluster state numberofreplicas number replicas
creates cluster state given indices index containing numberofprimaries started primary shards replicas cluster state contains numberofnodes nodes assigns primaries nodes
creates cluster state index one shard many replicas numberofreplicas primary started cluster state unassignedreplicas unassigned assignedreplicas one initializing started relocating index name index activeprimarylocal active primary coincide local node cluster state assignedreplicas number replicas initializing started relocating state unassignedreplicas number replicas unassigned
creates cluster state local node master node specified localnode node allnodes local node masternode node allnodes master node null master exists allnodes nodes cluster cluster state
creates cluster state several shards one replica shards started
creates cluster state index one shard replicastates replicas index name index activeprimarylocal active primary coincide local node cluster state primarystate state primary replicastates states replicas length array determines also number replicas
creates cluster state index
creates cluster state several indexes shards replicas shards started
resolve node ids concrete nodes incoming request
map responses noderesponseclass responses failednodeexceptions request associated request nodesresponses nodelevel responses never null nullpointerexception nodesresponses null newresponsebasenodesrequest list list
lazily build get map node id node response never null empty getnodes
rest status used response
match children provided task
set task lookup
rethrow task failures any
sets list action masks actions returned
specifies request executed local node rather master
timeout value case master discovered yet disconnected
allows directly call transportmasternodeactionmasteroperationmasternoderequest clusterstate actionlistener protected method
sets maximum wait acknowledgement nodes
timeout wait operation acknowledged current cluster nodes defaults 10s
sets master node timeout case master yet discovered
sets master node timeout case master yet discovered
indexing operations entail mapping changes require blocking request master node update mapping master node disrupted cannot commit cluster state changes needs retry within timeout limits retry logic implemented transportmasternodeaction tested following master failover scenario
allows set timeout timeout timeout string eg 1s request
allows set timeout timeout timeout timevalue request
parse current token update parsing context appropriately
sets number shard copies must active proceeding write see replicationrequestwaitforactiveshardsactiveshardcount details
sets whether specified doc parameter used upsert document
sets doc source update request used document exists doc includes field value pairs
indicate source returned every hit include andor exclude set include simple wildcard elements include optional include optionally wildcarded pattern filter returned source exclude optional exclude optionally wildcarded pattern filter returned source
sets doc source update request used document exists
sets doc use updates script specified
sets doc source update request used document exists
sets version cause index operation performed matching version exists changes happened doc since then
sets doc use updates script specified
sets doc use updates script specified
controls shard routing request using value hash shard id
sets doc source update request used document exists
sets doc source update request used document exists
indicates whether response contain updated source
sets index request used document exists otherwise orgelasticsearchindexenginedocumentmissingexception thrown
sets type indexed document
sets doc use updates script specified doc provided field value pairs
sets doc source update request used document exists doc includes field value pairs
sets versioning type defaults orgelasticsearchindexversiontypeinternal
sets doc use updates script specified
script execute note make sure send different script times instead use script params possible automatically compiled script script works variable ctx bound entry eg ctxsourcemycounter 1
indicate source returned include andor exclude set include simple wildcard elements includes optional list include optionally wildcarded pattern filter returned source excludes optional list exclude optionally wildcarded pattern filter returned source
sets doc use updates script specified
sets doc source update request used document exists
sets doc use updates script specified
sets number retries version conflict occurs document updated getting updating it defaults 0
sets doc source update request used document exists
sets doc use updates script specified
sets id indexed document
sets whether perform extra effort detect noop updates via docasupsert defaults true
sets doc use updates script specified doc provided field value pairs
sets whether script run case insert
returns tuple updateresponses left element actual updateresponse serialize right element expected updateresponse parsing
id indexed document
sets doc use updates script specified
sets doc source update request used document exists
sets id indexed document
controls shard routing request using value hash shard id
sets doc use updates script specified
script execute note make sure send different script times instead use script params possible automatically compiled script
update attempt detect noop defaults true chaining
script execute note make sure send different script times instead use script params possible automatically compiled script use scriptscript instead
add script parameter use scriptscript instead
sets number shard copies must active proceeding write see replicationrequestwaitforactiveshardsactiveshardcount details
sets doc use updates script specified
indicate source returned every hit include andor exclude set include simple wildcard elements include optional include optionally wildcarded pattern filter returned source exclude optional exclude optionally wildcarded pattern filter returned source
script execute note make sure send different script times instead use script params possible automatically compiled script use scriptscript instead
sets doc source update request used document exists doc includes field value pairs
controls shard routing request using value hash shard id
use script instead
sets doc source update request used document exists
sets index request used document exists otherwise orgelasticsearchindexenginedocumentmissingexception thrown
sets script parameters use script use scriptscript instead
indicate source returned include andor exclude set include simple wildcard elements includes optional list include optionally wildcarded pattern filter returned source excludes optional list exclude optionally wildcarded pattern filter returned source
script execute note make sure send different script times instead use script params possible automatically compiled script use scriptscript instead
sets doc use updates script specified doc provided field value pairs
sets doc source update request used document exists doc includes field value pairs
sets number retries version conflict occurs document updated getting updating it defaults 0
sets doc source update request used document exists
sets doc use updates script specified
use script instead
sets doc source update request used document exists
type indexed document
language script execute use scriptscript instead
script execute note make sure send different script times instead use script params possible automatically compiled script script script execute scriptlang script language scripttype script type scriptparams script parameters use scriptscript instead
sets doc use updates script specified doc provided field value pairs
sets type indexed document
indicates whether response contain updated source
sets doc source update request used document exists
sets doc use updates script specified
sets doc use updates script specified
use script instead
sets doc use updates script specified
sets doc source update request used document exists
explicitly set fetch source context request
use script instead
applies updaterequestfetchsource source updated document returned update response
prepare request merging existing document new one optionally detect noop change returns result containing new indexrequest executed primary replicas
prepare request updating existing document using script executes script returns result containing either new indexrequest deleterequest depending scripts returned op value executed primary replicas
calculate version use update request using either existing version internal versioning used get result documents version version type force
prepares update request converting index delete request update response no action event noop
execute scripted upsert existing upsert document script executed script executed new tuple operation updated source returned
calculate routing value used either included index requests routing retrieved documents routing defined
prepare request upsert executing upsert script present returning result containing new indexrequest executed primary replicas
prepares update request converting index delete request update response no action
set enable scrolling search request specified timeout
set enable scrolling search request specified timeout
scroll id use continue scrolling
set enable scrolling search request
sets threshold enforces prefilter roundtrip prefilter search shards based query rewriting number shards search request expands exceeds threshold filter roundtrip limit number shards significantly instance shard match documents based its rewrite method ie date filters mandatory match shard bounds query disjoint default 128
constructs new search request reading specified stream stream request read ioexception issue reading stream
indices
routing values control shards search executed on
source search request
sets number shard results reduced coordinating node value used protection mechanism reduce memory overhead per search request potential number shards request large
search type execute defaults searchtypedefault
sets number shard requests executed concurrently single node value used protection mechanism reduce number shard requests fired per high level search request searches hit entire cluster throttled number reduce cluster load default 5
constructs new search request provided indices given search source
set enable scrolling search request
document types execute search against defaults executed types types going away prefer filtering type
sets indices search executed on
sets request allow partial results if method called default cluster level setting
sets preference execute search defaults randomize across shards set local prefer local shards custom value guarantees order used across different requests
separated list routing values control shards search executed on
sets request use request cache not assuming for example now used never cached default not set null default index level setting request cache enabled not
executes single request queue requests request finishes another request taken queue request executed permit taken specified semaphore released request completes requests queue multisearch requests execute responses atomic array hold responses corresponding search request slot responsecounter incremented response listener listener attached multisearch request
reset iterator mark skippable skip
creates plainsharditerator instance iterates subset given shards given shardid shardid shard id group shards shards iterate
profiling enabled returns object containing profile results shard profiling enabled return null profile results empty map
failed number shards search executed on
test parsing multisearchresponse inner failures dont support asserting xcontent equivalence given exceptions parsed back original class run usual abstractxcontenttestcasetestfromxcontent without failures test failures disable asserting xcontent equivalence end
returns profile results search response including shards empty map returned profiling enabled profile results
clears rescorers builder sets first one use multiple rescore windows use addrescorerorgelasticsearchsearchrescorerescorerbuilder int rescorer rescorer configuration window rescore window chaining
set enable scrolling search request specified timeout
indicates whether response contain stored source every hit
indicates total hit count query tracked defaults true
routing values control shards search executed on
adds aggregation search operation
adds generic sort builder orgelasticsearchsearchsortsortbuilders
sets minimum score docs filtered out
document types execute search against defaults executed types types going away prefer filtering field
adds stored fields load return note must stored part search request disable stored fields entirely source metadata fields use storedfieldnone
orgelasticsearchsearchsearchhit returned version
set enable scrolling search request specified timeout
sets boost specific index receive query executed it index index apply boost indexboost boost apply index
adds sort given field name sort ordering field name field order sort ordering
indicate source returned every hit include andor exclude set include simple wildcard elements include optional include optionally wildcarded pattern filter returned source exclude optional exclude optionally wildcarded pattern filter returned source
adds stored fields load return note must stored part search request disable stored fields entirely source metadata fields use storedfieldnone use searchrequestbuilderstoredfieldsstring instead
sets number shard requests executed concurrently single node value used protection mechanism reduce number shard requests fired per high level search request searches hit entire cluster throttled number reduce cluster load default 5
sets preference execute search defaults randomize across shards set local prefer local shards custom value guarantees order used across different requests
adds new rescorer rescorer rescorer configuration chaining
adds stored field load return note must stored part search request
index start search from defaults 0
set sort values indicates docs request search after
separated list routing values control shards search executed on
search type execute defaults orgelasticsearchactionsearchsearchtypedefault
optional timeout control long search allowed take
sets source request searchsourcebuilder
sets request allow partial results if method called default cluster level setting
specifies type requested indices ignore wildcard indices expressions example indices dont exist
stats groups request aggregated under
delegates searchsourcebuildersuggestsuggestbuilder
number search hits return defaults 10
adds new rescorer rescorer rescorer configuration window rescore window chaining
indicate source returned every hit include andor exclude set include simple wildcard elements includes optional list include optionally wildcarded pattern filter returned source excludes optional list exclude optionally wildcarded pattern filter returned source
sets threshold enforces prefilter roundtrip prefilter search shards based query rewriting number shards search request expands exceeds threshold filter roundtrip limit number shards significantly instance shard match documents based its rewrite method ie date filters mandatory match shard bounds query disjoint default 128
adds script based field load return field stored recommended use non analyzed numeric fields name name represent value return hit script script use
string representation search type execute defaults searchtypedefault one dfsquerythenfetchdfsquerythenfetch dfsqueryandfetchdfsqueryandfetch querythenfetchquerythenfetch queryandfetchqueryandfetch
optional document count upon collecting search query early terminate
query profiled defaults false
sets request use request cache not assuming for example now used never cached default not set null default index level setting request cache enabled not
constructs new search source builder search query orgelasticsearchindexqueryquerybuilders
sets indices search executed on
clears rescorers builder sets first one use multiple rescore windows use addrescorerorgelasticsearchsearchrescorerescorerbuilder int rescorer rescorer configuration chaining
stats groups request aggregated under
orgelasticsearchsearchsearchhit returned explanation hit ranking
set enable scrolling search request
applies sorting controls scores tracked well defaults false
adds aggregation search operation
clears rescorers builder chaining
sets filter executed query executed affect search hits not aggregations filter always executed last filtering mechanism
adds docvalue based field load return field stored recommended use non analyzed numeric fields name field get docvalue
sets number shard results reduced coordinating node value used protection mechanism reduce memory overhead per search request potential number shards request large
returns new arraysearchphaseresults instance might return instance reduces search responses incrementally
builds array potential null elements docs load
creates new queryphaseresultconsumer controller controller instance reduce query response objects expectedresultsize expected number query results corresponds number shards queried buffersize size reduce buffer buffer size smaller number expected results buffer used incrementally reduce aggregation results shards responded
enriches search hits completion suggestion hits sorteddocs using fetchresultsarr merges suggestions aggregations profile results expects sorteddocs top search docs across shards optionally followed top suggest docs named completion suggestion ordered suggestion name
reduces given query results consumes aggregations profile results queryresults list nonnull query shard results bufferedaggs list precollected buffered aggregations list nonnull aggregations consumed nonnull query results bufferedtopdocs list precollected buffered top docs list nonnull top docs consumed nonnull query results numreducephases number nonfinal reduce phases applied query results querysearchresultconsumeaggs querysearchresultconsumeprofileresult
constructor settings node settings reducecontextfunction function builds context reduce internalaggregation
returns score doc array top n search docs across shards followed top suggest docs named completion suggestion across shards one named completion suggestion specified request suggest docs named suggestion ordered suggestion name note order sorted score docs depends shard index result array merge process needs disambiguate result oder obtain stable results shard index index result result array must same ignorefrom whether ignore sort hits shard result enabled scroll search retrieves hits length size query phase results search phase results obtain sort docs bufferedtopdocs preconsumed buffered top docs topdocsstats top docs stats fill offset search results top docs size number hits return merged top docs
performs intermediate reduce phase aggregations instance reduce phase never prune information relevant final reduce step final reduce see reduceaggslist list reducecontext
forcefully counts operation executes provided runnable expected operations executed
sets result given array index runs countdown
escalates failure via searchphasecontextonshardfailureint searchshardtarget exception runs countdown
actual failure message null failure
actual search response null failure
releases shard targets used docsidstoload
search shard target failure occurred on
builds long took execute search
method collects nodes remote clusters asynchronously scroll ids references remote cluster otherwise action listener invoked immediately function based given discovery nodes
method called search phase failed ensure relevant search contexts resources released method also notify listener sends back failure user exception exception explaining causing phase failure
main entry point search method starts search execution initial phase
builds long took execute search
add search request execute note order important search response returned order search requests ignoreindices set search request indicesoptions multi search request used if set
add search request execute note order important search response returned order search requests
specifies type requested indices ignore deal wildcard indices expressions example indices dont exist invoke method invoking addsearchrequestbuilder
sets many search requests specified multi search requests allowed ran concurrently
set enable scrolling search request
parse search scroll request request body provided rest layer values already set also found parsing overridden
returns true iff search request inner hits needs field collapsing
releases search context given context id node given connection connected to orgelasticsearchsearchqueryquerysearchresultgetrequestid orgelasticsearchsearchfetchfetchsearchresultgetrequestid
add search request execute note order important search response returned order search requests
add search request execute note order important search response returned order search requests
sets many search requests specified multi search requests allowed ran concurrently
constructs search type based internal id
string representation search type execute defaults searchtypedefault one dfsquerythenfetchdfsquerythenfetch dfsqueryandfetchdfsqueryandfetch querythenfetchquerythenfetch queryandfetchqueryandfetch
returns connection given node provided cluster cluster alias null node resolved local cluster clusteralias cluster alias node resolve node node resolve connection given node belonging cluster provided alias
used transportsearchaction send expand queries field collapsing
minimal set dont include search hits aggregations suggest etc make test simpler
shardtotalfailures section makes impossible directly compare xcontent failures parsed searchresponse wrapped extra elasticsearchexception client side this special test case compare top level fields equality subsections xcontent equivalence independently
instantiates new search time provider absolute start time real clock time used resolving index expressions include dates relative start time start search operation according relative clock total time search operation took measured provided relative clock relative start time absolutestartmillis absolute start time milliseconds since epoch relativestartnanos relative start time nanoseconds relativecurrentnanosprovider provides current relative time
clears caches given shard id shard still allocated node
return shard provided id throw exception doesnt exist
return shard provided id null shard
creates new queryshardcontext context types set yet types required set via queryshardcontextsettypesstring passing null indexreader return valid context however wont able make indexreaderspecific optimizations rewriting containing range queries
read stream
construct index module index specified index settings index module contains extension points plugins via orgelasticsearchpluginspluginsserviceonindexmoduleindexmodule indexsettings index settings analysisregistry analysis registry enginefactory engine factory indexstorefactories available store types
registers given similarity given name function takes parameters settings similarity version elasticsearch index created scriptservice scriptbased similarities name name similarityprovider similarity similarityprovider register
forces certain query cache use instead default one set query caching disabled indexqueriescacheenabled given provider used note set indexquerycacheenabledsetting
adds searchoperationlistener index listeners added maintained entire index lifecycle node index closed deleted listeners go scope note index might created node multiple times instance last shard index relocated another node internal representation destroyed includes registered listeners node holds least one shard index modules reloaded listeners registered again listeners cant unregistered stay alive entire time index allocated node
adds indexeventlistener index listeners added maintained entire index lifecycle node index closed deleted listeners go scope note index might created node multiple times instance last shard index relocated another node internal representation destroyed includes registered listeners node holds least one shard index modules reloaded listeners registered again listeners cant unregistered stay alive entire time index allocated node
creates new mapper service administrative work like mapping updates should not used document parsing result exception
sets orgelasticsearchindexindexmoduleindexsearcherwrapperfactory called indexservice fully constructed note method called per index multiple wrappers supported
adds setting its consumer index
adds setting its consumer validator index
adds indexingoperationlistener index listeners added maintained entire index lifecycle node index closed deleted listeners go scope note index might created node multiple times instance last shard index relocated another node internal representation destroyed includes registered listeners node holds least one shard index modules reloaded listeners registered again listeners cant unregistered stay alive entire time index allocated node
builds sort order settings index returns null index sort
tests explicit request makes blockuntilrefresh return doesnt check blockuntilrefresh doesnt return explicit refresh interval 1 dont kind control refresh happen own
updates settings index metadata notifies registered settings consumers new settings iff least one setting changed true iff setting updated otherwise false
creates new indexsettings instance given node settings merged settings metadata index level settings overwrite node settings indexmetadata index metadata settings object associated nodesettings nodes settings index allocated on
constructs new index component index name settings
construct custom message
expert directly set maximum number merge threads simultaneous merges allowed
sets random aliases provided createindexrequest
returns settings instance include random values orgelasticsearchclustermetadataindexmetadatasettingnumberofshards orgelasticsearchclustermetadataindexmetadatasettingnumberofreplicas
adds random mapping fields provided xcontentbuilder
returns random createindexrequest randomizes index name aliases mappings settings associated index
executes registered async actions notifies listener its done value passed listener always null list registered actions cleared method returns
inorder true spans clause must order clauses must nonoverlapping defaults true
read stream
add span clause current list clauses
constructs new spangapquerybuilder term query fieldname name field width width gap introduced
initialclause initial span query clause slop controls maximum number intervening unmatched positions permitted
read stream
explicitly set analyzer use defaults use explicit mapping config field or set default search analyzer
read stream
sets type text query
sets whether format based failures ignored
tiebreaker bestmatch disjunction queries orqueries tie breaker capability allows documents match one query clause in case one field scored better documents match best fields without confusing better case two distinct matches multiple fields a tiebreaker value 10 interpreted signal score queries mostmatch queries matching query clauses considered scoring type
adds field run multi match against
constructs new text query
sets whether transpositions supported fuzzy queries default metric used fuzzy queries determine match dameraulevenshtein distance formula supports transpositions setting transposition false switch classic levenshtein distance set dameraulevenshtein distance metric used
tiebreaker bestmatch disjunction queries orqueries tie breaker capability allows documents match one query clause in case one field scored better documents match best fields without confusing better case two distinct matches multiple fields a tiebreaker value 10 interpreted signal score queries mostmatch queries matching query clauses considered scoring type
sets fuzziness used evaluated fuzzy query type defaults auto
sets operator use using boolean query defaults or
set cutoff value 01 or absolute number 1 representing maximum threshold terms document frequency considered low frequency term
add several fields run query specific boost
set phrase slop evaluated phrase query type
set cutoff value 01 or absolute number 1 representing maximum threshold terms document frequency considered low frequency term
using fuzzy prefix type query number term expansions use defaults unbounded recommended set reasonable value faster execution
sets type text query
adds field run multi match specific boost
use tiebreaker 10f disable dismax query select appropriate type
sets whether query builder ignore unmapped fields and run matchnodocsquery place query throw exception field unmapped
specify whether ignore validation errors bounding boxes set coerce set false otherwise calling method effect
create new bounding box query fieldname name index field containing geo coordinates operate on
parses bounding box returns bottom top left right coordinates
sets type executing geo bounding box either memory indexed defaults memory
read stream
adds top left point top top latitude left left longitude bottom bottom latitude right right longitude
bwc parse type type name
adds points single geohash geohash geohash computing bounding box
termquery random field name value optional random boost queryname
visible testing purposes
sets minimum match parameter using special syntax for example supporting percentage boolquerybuilderminimumshouldmatchint
adds clause should matched returned documents boolean query must clauses one should clauses must match document booleanquery match null value allowed minimumshouldmatchint
adds query must not appear matching documents null value allowed
adds query must appear matching documents contribute scoring null value allowed
specifies minimum number optional should boolean clauses must satisfied default optional clauses necessary match unless required clauses method used specified number clauses required use method totally independent specifying specific clauses required or prohibited number compared number matching optional clauses minimumshouldmatch number optional clauses must match
adds query must appear matching documents contribute scoring null value allowed
read stream
boolean query contains negative must not clauses booleanquery enhanced matchalldocsquery order act pure exclude default true
resolves combined ored value given list regular expression flags given flags must follow following syntax flagname flagname flagname one following intersection complement empty anystring interval none all example intersectioncomplementempty flags string representing list regular expression flags combined ored value flags
dismaxquerybuilder random inner queries
constructor provided use unit tests queryshardcontext may available
read stream
whether fail return result query run field supported binarynumeric fields
whether include input documents defaults false
read stream
sets maximum word length words ignored defaults unbounded 0
number terms must match generated query expressed common syntax minimum match defaults 30 orgelasticsearchcommonlucenesearchqueriescalculateminshouldmatchint string
sets field names used generating more like this query fields field names used generating more like this query liketexts text use generating more like this query likeitems documents use generating more like this query
analyzer used analyze text defaults analyzer associated field
sets documents terms selected from
sets maximum number query terms included generated query defaults 25
sets frequency words ignored occur least many docs defaults 5
sets analyzers use given field
sets text terms selected from
sets minimum word length words ignored defaults 0
convert termvectorsrequest fetching terms document
read stream
constructor given item document request index index document located type type document id id
converts array string ids item ids ids convert new items array construct items array externally use constructor setter
set set stopwords word set considered uninteresting ignored even analyzer allows stopwords might want tell morelikethis code ignore them purposes document similarity seems reasonable assume a stop word never interesting
parses returns given item
frequency terms ignored source doc default frequency 2
constructor artificial document request present index index index used parsing doc type type used parsing doc doc document specification
sets boost factor use boosting terms defaults 0 deactivated
set maximum frequency words may still appear words appear many docs ignored defaults unbounded
sets minimum number low frequent query terms need match order produce hit
sets cutoff document frequency high low frequent terms value 01 or absolute number 1 representing maximum threshold terms document frequency considered low frequency term defaults value defaultcutofffreq
sets minimum number high frequent query terms need match order produce hit low frequent terms
constructs new common terms query
read stream
sets operator use terms high document frequency greater equal cutofffrequencyfloat defaults and
sets operator use terms low document frequency less cutofffrequencyfloat defaults and
explicitly set analyzer use defaults use explicit mapping config field or set default search analyzer
create new multi term query random type r random seed random multitermquerybuilder
create new query random type r random seed random querybuilder
read stream
fuzziness allowed crossfields phrase phraseprefix throw error
amount number clauses returned array random spantermquerybuilder field name
filter based docmapping type types going away prefer filtering field
filter filter indexed shapes intersection query shape name shape field name shape shape use filter
filter filter indexed shapes contained shape name shape field name shape shape use filter
filter filter indexed shapes intersecting shapes name shape field name shape shape use filter
helper method used add error messages existing queryvalidationexception passing null initial exception new exception created validationerrors error messages add initial exception validationexception initial exception null case new exception created queryvalidationexception added validation error message
helper method used add error messages existing queryvalidationexception passing null initial exception new exception created queryid query caused error validationerror error message add initial exception validationexception initial exception null case new exception created queryvalidationexception added validation error message
specifies whether wildcards analyzed defaults false
specifies whether query parsing lenient defaults false
specifies minimumshouldmatch apply resulting query boolean query
construct new simple query query string
specify enabled features simplequerystring defaults none specified
set suffix append field names phrase matching
sets whether transpositions supported fuzzy queries default metric used fuzzy queries determine match dameraulevenshtein distance formula supports transpositions setting transposition false switch classic levenshtein distance set dameraulevenshtein distance metric used
specify analyzer use query
read stream
add several fields run query specific boost
specify default operator query defaults or operator specified
add field run query specific boost
setting deprecated set fieldstring instead
testing serialisation only
add field run query against
specifying timezone together unmapped field throw exception
explicitly set analyzer use defaults use explicit mapping config field or set default search analyzer
read stream
sets slop factor phrase queries
sets query use case query terms available eg analysis removed them defaults zerotermsquerynone set zerotermsqueryall instead
optional field name suffix automatically try add field searched using quoted text
setting ignored
set edit distance fuzzy queries default auto
one field used query string combined queries using dis max control tie breaker it
setting deprecated set defaultfieldstring instead
set true enable escaping query string
protects toodifficult regular expression queries
read stream
optional analyzer used analyze query string phrase searches note field search quote analyzer defined it used automatically defaults smart search analyzer
setting ignored query parser splits operator only
case date field adjust fromto fields using timezone
adds field run query string against field associated default boost abstractquerybuilderdefaultboost use fieldstring float set specific boost field
add several fields run query specific boost
set true enable position increments result query defaults true set result phrase multiphrase queries aware position increments useful eg stopfilter increases position increment token follows omitted token
optional analyzer used analyze query string note field search analyzer defined it used automatically defaults smart search analyzer
sets default slop phrases zero exact phrase matches required default value zero
default field run prefix field specified relevant explicitly adding fields query string run against
use querystringquerybuildertiebreaker instead
sets whether transpositions supported fuzzy queries default metric used fuzzy queries determine match dameraulevenshtein distance formula supports transpositions setting transposition false switch classic levenshtein distance set dameraulevenshtein distance metric used
use querystringquerybuildertiebreaker instead
sets query string parser lenient parsing field values defaults index setting set defaults false
setting ignored
set true enable analysis wildcard prefix queries
sets boolean operator query parser used parse query string default mode operatoror terms without modifiers considered optional example capital hungary equal capital hungary operatorand mode terms considered conjunction mentioned query parsed capital hungary
setting ignored query parser splits operator only
set minimum prefix length fuzzy queries default 1
leading wildcards allowed not defaults true
adds field run query string specific boost
constructs new fieldmaskingspanquerybuilder given inner spanquerybuilder given field querybuilder inner spanquerybuilder fieldname field name
read stream
rewrites query builder primitive form default method return builder itself builder change identity reference must returned otherwise builder rewritten infinitely
bwc serialization parentchild innerhitbuilder used send hasparent haschild inner hits nodes pre 55
gets stored fields load return use innerhitbuildergetstoredfieldscontext instead
sets stored fields load return none specified source document returned use innerhitbuildersetstoredfieldnameslist instead
read stream
bwc serialization collapsing innerhitbuilder used send collapsing inner hits nodes pre 55
bwc serialization nested innerhitbuilder used send nested inner hits nodes pre 55
sets stored fields load return none specified source document returned
adds field load docvalue return
sets stored fields load docvalue return
rewrites given rewriteable fetches pending async tasks round rewriting again
rewrites given rewriteable primitive form rewriteables instance fetch resources remote hosts simplify optimize heavy lifting rewriteandfetchrewriteable queryrewritecontext actionlistener queryrewritecontext method rewrites rewriteable doesnt change anymore original original rewriteable rewrite context rewrite context use assertnoasynctasks true rewrite fail pending async tasks context rewrite see queryrewritecontextexecuteasyncactionsactionlistener detals ioexception ioexception occurs
rewrites element list doesnt change returns new list iff least one element list changed its rewrite otherwise given list instance returned unchanged
read stream
explicitly set analyzer use defaults use explicit mapping config field or set default search analyzer
number term expansions use
sets slop factor phrase queries
return script service allow compiling scripts
gets search analyzer given field default none present field todo remove moving defaults mappers
method fails freezecontext called context used seal methods methods call final ensure setting request cacheable freezing behaviour class cannot bypassed important trust class says request cached
gets search quote analyzer given field default none present field todo remove moving defaults mappers
returns narrowed explicit types or set types
read stream
creates query builder given query provided bytes array
creates query builder given query provided string
creates query builder given query provided bytesreference
sets regexp maxdeterminizedstates
constructs new regex query fieldname name field value regular expression
read stream
overridden ensure test run least one type present mappings geo queries execute field explicitly mapped
query returns spans little contained spans big big clause must enclose little match little little clause must contained within big match
read stream
pre amount tokens include span cant overlap exclude span values smaller 0 ignored 0 used instead
construct span query matching spans include overlap spans exclude include span query whose matches filtered exclude span query whose matches must overlap
dist amount tokens within include span cant overlap exclude span equivalent setting pre post parameter
read stream
post amount tokens include span cant overlap exclude span
dont want shuffle doc field internally testfromxcontent even though documents would functionally same bytesreference representation isnt thats compare check equality original shuffled builder
could go overboard use pregenerated indexed random document given item wed prefer simply return id content document every field
test unknown query names clauses throw error
test two queries object throws error
read stream
quote analyzer overwrite forced analyzer quoted parts query
validates maxdeterminizedstates parsed lowers allowed number determinized states
validates maxdeterminizedstates parsed lowers allowed number determinized states
test exception missing end match parameter parser
query matches documents containing terms specified prefix fieldname name field value prefix query
read stream
test filter accept array queries throws parsingexception
test multiple filter elements causes parsingexception
test missing filter element causes parsingexception
constantscorequerybuilder random boost 01f 20f
test deserialization previous released versions
throw illegalargumentexception instead npe
nestedquerybuilder random values place
failure change and value never match anything
test exceptions three types broken json missing include exclude dist prepost specified
test correct parsing dist parameter create builder prepost set value
read stream
add span clause current list clauses
read stream
big big clause must enclose little match little little clause must contained within big match
read stream
test serialize deserialize object serialization leads identical bytes representation necessary ensure use serialized bytesreference builder part cachekey shardsearchlocalrequest via searchsourcebuildercollapseorgelasticsearchsearchcollapsecollapsebuilder
implements wildcard search query supported wildcards matches character sequence including empty one matches single character note query slow needs iterate many terms order prevent extremely slow wildcardqueries wildcard term start one wildcards fieldname field name value wildcard query string
read stream
returns validation method corresponding given coerce ignoremalformed values
read stream
constructs new base term query case value assigned string internally convert bytesref termquerybuilder spantermquerybuilder string values parsed bytesref want internal representation query equal regardless whether created xcontent via java api fieldname name field value value term
score nonmaximum disjunct document multiplied weight added final score nonzero value small order 01 says 10 occurrences word lowerscored field also higher scored field good unique word lower scored field ie one higher scored field
read stream
add subquery disjunction
helper method checks object passed bytesref charbuffer converts utf8 string obj input object input object utf8 string input type bytesref charbuffer
helper method checks object passed string charbuffer converts bytesref obj input object input object bytesref representation input type string
adds boost queryname parsing abstractobjectparser passed in query builders except matchallquerybuilder matchnonequerybuilder support fields use method
parses query excluding query element wraps
returns boost query
sets boost query documents matching query in addition normal weightings score multiplied boost provided
helper method convert collection querybuilder instances lucene query instances querybuilder return null calling querybuildertoqueryqueryshardcontext method added resulting collection
returns query name query
sets query name query
sets whether query builder ignore unmapped fields and run matchnodocsquery place query throw exception field unmapped
sets validation method use geo coordinates
read stream
following fail fast never silently set map containing fields weights null refuse accept null instead
sets center point query lat latitude center lon longitude center
read stream
sets distance center query
sets center point query
sets whether query builder ignore unmapped fields and run matchnodocsquery place query throw exception field unmapped
construct new geodistancequerybuilder fieldname name indexed geo field operate distance computation on
sets center point query point center query
type geo distance calculation method use
read stream
convertlist iterable
constructor used internally serialization value termslookup variants
convert internal list values back userfriendly list integers kept asis since terms query make difference integers longs bytesrefs converted back strings
filter field based several terms matching them fieldname field name values terms
filter field based several terms matching them fieldname field name values terms
convert list way optimizes storage case elements either integers strings bytesref charbuffers useful help garbage collections usecases involve sending large terms queries elasticsearch list contain integers strings list returned string charbuffers replaced bytesrefs
sets fuzzyrewrite parameter controlling fuzzy query get rewritten
sets fuzziness used evaluated fuzzy query type defaults auto
sets whether format based failures ignored use lenient instead
read stream
sets operator use using boolean query defaults or
sets optional minimumshouldmatch value apply query
explicitly set analyzer use defaults use explicit mapping config field or set default search analyzer
sets whether format based failures ignored
sets whether transpositions supported fuzzy queries default metric used fuzzy queries determine match dameraulevenshtein distance formula supports transpositions setting transposition false switch classic levenshtein distance set dameraulevenshtein distance metric used
constructs new match query
sets query use case query terms available eg analysis removed them defaults matchqueryzerotermsquerynone set matchqueryzerotermsqueryall instead
sets length length common nonfuzzy prefix fuzzy match queries prefixlength nonnegative length prefix illegalargumentexception case prefix negative
using fuzzy prefix type query number term expansions use
set cutoff value 01 or absolute number 1 representing maximum threshold terms document frequency considered low frequency term
store query filters query query namedfilters immutable map containing named filters good callers use emptymap unmodifiablemap copy source make sure immutable
read stream
query wraps another query simply returns constant score equal query boost every document query filterbuilder query wrap constant score query
read stream
sets whether query builder ignore unmapped paths and run matchnodocsquery place query throw exception path unmapped
query matches spans queries defined matchbuilder whose end position less equal end matchbuilder inner spanquerybuilder end maximum end position match needs positive illegalargumentexception negative end positions
read stream
replace generic test superclass wrapper query expects find query field nested query throw exception anything else
case date field adjust fromto fields using timezone
read stream
case format field parse fromto fields using time format
part range query null indicates unbounded case lower bound assigned string internally convert bytesref rangequerybuilder field later parsed bytesref need internal representation query equal regardless whether created xcontent via java api
part range query null indicates unbounded
lower bound included not defaults true
query matches documents within range terms fieldname field name
upper bound included not defaults true
test checks throw unsupportedoperationexception query wrapped spanmultitermquerybuilder generate lucene multitermquery currently case rangequerybuilder target field mapped date
read stream
constructs new fuzzy query fieldname name field value value term
create new boostingquerybuilder positivequery positive query boosting query negativequery negative query boosting query
set negative boost factor
read stream
adds ids query
read stream
sets optional routing indexed shape used query indexedshaperouting indexed shape routing
defines spatial strategy used building geo shape query set strategy used one associated geo shape field mappings strategy spatial strategy use building geo shape query
sets relation query shape indexed shape relation relation shapes
sets whether query builder ignore unmapped fields and run matchnodocsquery place query throw exception field unmapped
fetches shape given id given type index getrequest getrequest containing index type id path name path field shape document shape located
sets name index indexed shape found indexedshapeindex name index indexed shape
sets path field indexed shape document shape indexedshapepath path field shape defined
read stream
creates random function score query using constructor params caller responsible randomizing fields set outside constructor
create random decay function setting constructor parameters randomly caller responsible randomizing fields
set weight applied function combining
called data node converts scorefunctionbuilder corresponding lucene function object
parses bodies kind fieldname1 origin somevalue scale somevalue multivaluemode min
read stream
read stream
convenience constructor converts parameters json parse data nodes
read stream
creates functionscore query executes provided filters functions documents match query query query defines documents functionscore query executed on filterfunctionbuilders filters functions
score mode defines results individual score functions aggregated functionscorequeryscoremode
read stream
boost mode defines combined result score functions influence final score together sub query score combinefunction
sets maximum boost applied function score
seed variant taking long value seedint
read stream
sets seed based random number generated using seed guaranteed generate random number specific doc seed seed
set field used random number generation parameter compulsory seedint seed set ignored otherwise note documents value field get score
seed variant taking string value seedint
value used instead field value documents dont field defined
read stream
sets new current nested level pushes old current nested level stack returns level
method deletes every file store contained given source meta data legacy checksum file delete pulls latest metadata snapshot store compares given snapshot snapshots inconsistent illegal state exception thrown reason reason cleanup operation logged deleted file sourcemetadata metadata used cleanup files metadata kept around ioexception ioexception occurs illegalstateexception latest snapshot store differs given one cleanup
increments refcount store instance refcounts used determine store closed safely ie soon references sure always call corresponding decref finally clause otherwise store may never closed note close simply calls decref means store really closed decref called outstanding references note close safely called multiple times alreadyclosedexception iff reference counter incremented decref tryincref
computes strong hash value small files note method used files 1mb
returns true iff given location contains index index successfully opened includes reading segment infos possible corruption markers
tries increment refcount store instance method return true iff refcount incremented successfully otherwise false refcounts used determine store closed safely ie soon references sure always call corresponding decref finally clause otherwise store may never closed note close simply calls decref means store really closed decref called outstanding references note close safely called multiple times decref incref
tries open index given location includes reading segment infos possible corruption markers index opened exception thrown
checks returns status existing index store infostream messages go see checkindexsetinfostreamprintstream
deletes corruption markers store
returns new metadatasnapshot given commit given commit null latest commit point used note method requires caller verify right access store concurrent file changes happening doubt probably want use one following readmetadatasnapshotpath shardid nodeenvironmentshardlocker logger read meta data locking indexshardsnapshotstoremetadata safely read existing shard indexshardacquirelastindexcommitboolean get indexcommit safe use freed commit index commit read snapshot null latest snapshot read directory lockdirectory true index writer lock obtained reading snapshot used started shard using store corruptindexexception lucene index corrupted caused checksum mismatch unexpected exception opening index reading segments file indexformattoooldexception lucene index old opened indexformattoonewexception lucene index new opened filenotfoundexception one files referenced commit present nosuchfileexception one files referenced commit present indexnotfoundexception commit point cant found store
repairs index using previous returned status checkindexprintstream
keeping existing unsafe commits opening engine problematic commits safe recovering time suddenly become safe future following issues happen unsafe commits kept oninit 1 replica use unsafe commit peerrecovery happens replica safe commit c1maxseqno1 unsafe commit c2maxseqno2 recovers primary c1maxseqno1 new documentseqno2 added without flushing global checkpoint advanced 2 replica recovers again use unsafe commit c2maxseqno2 gcp2 starting commit sequencedbased recovery even commit c2 contains stale operation documentwith seqno2 replicated replica 2 min translog gen recovery go backwards peerrecovery happens replica safe commit c1localcheckpoint1 recoverytransloggen1 unsafe commit c2localcheckpoint2 recoverytransloggen2 replica recovers primary keeps c2 last commit sets lasttransloggen 2 flushing new commit replica cause exception new last commit c3 recoverytransloggen1 recovery translog generation commit calculated based current local checkpoint local checkpoint c3 1 local checkpoint c2 2 3 commit without translog used recovery old index created multiplecommits introduced v62 may safe commit index snapshotted commit without translog unsafe commit policy consider snapshotted commit safe commit recovery even commit translog
marks store corrupted method writes corrupteduuid file containing given exception message store contains corrupteduuid file ismarkedcorrupted return true
reads metadatasnapshot given index locations returns empty snapshot cant read ioexception index try read corrupted
force bakes given translog generation recovery information lucene index used recovering snapshot peer file based recovery new empty translog created existing lucene index needs changed use it
loads maximum sequence number local checkpoint given lucene commit point latest provided commit commit point load seqno stats last commit store parameter null sequencenumberscommitinfo containing information last commit ioexception io exception occurred reading latest lucene commit point disk
returns segments info given commit latest commit given commit null ioexception index corrupted segments file present
decreases refcount store instance refcount drops 0 store closed incref
marks existing lucene index new history uuid used make sure existing shard recovery index using ops based recovery
checks lucene index contains history uuid marker not new one generated committed
renames given files key map value map successfully renamed files removed map inplace
returned indexoutput validates files checksum note checksums calculated default since version 480 method adds verification checksum given metadata add significant overhead
returns diff two snapshots used recovery given snapshot treated recovery target snapshot source returned diff hold list files are identical exist snapshots considered ie dont need recovered different exist snapshots identical missing files exist source target method groups file persegment files percommit files file treated identical files its group identical persegment level files segment treated identical iff all files segment checksum all files segment length the segments si files hashes byteidentical note using perfect hash function metadata transfers si file content its hash si file contains lot diagnostics including timestamp etc future might unique segment identifiers hardening method further percommit files handles similar commit composed segmentsn files well generational files like deletes xydel fieldinfo xyfnm files percommit level files commit treated identical iff all files belonging commit checksum all files belonging commit length the segments file segmentsn files hashes byteidentical note using perfect hash function metadata transfers segmentsn file content its hash note diff contain segmentsgen file file omitted recovery
returns last committed segments info store ioexception index corrupted segments file present
creates empty lucene index corresponding empty translog existing data deleted
returns segments file metadata snapshot represents null snapshot empty
read stream
return cumulative size files directory
read stream
returns true iff length checksums same otherwise false
tests retry mechanism indexing exception occurs indexing indexing request tried finally failing auto generated ids used must lead duplicate ids see httpsgithubcomelasticelasticsearchissues8788
tests corruption happens single shard replicas present make sure primary stays unassigned replicas healthy shards happens
test triggers corrupt index exception finalization size empty commit point transferred recovery dont know version segmentsn file segments take from simulates recoveries old indices even without checksums makes sure fail finalization also check primary ok without relevant checks test fails red cluster
tests corruption happens network layer primary get affected corruption happens way replica file disk stays uncorrupted
tests restoring corrupted shard fails get partial snapshot todo checksum verification snapshotting implemented test needs fixed split several parts also corrupt files actual snapshot check dont restore corrupted shard
prunes list index files latest del generation files contained
test verifies corrupt replica still get green even though listing store fails note need make sure replicas allocated data nodes replica wont sneaky allocated node doesnt corrupted replica
tests actually recover corruption primary given replica shards around
disables translog flushing specified index
enables translog flushing specified index
test acceptzvalue parameter correctly parses
test geoshapefieldtypesetstrategynamestring checks geoshapefieldtypepointsonly gets set side effect using spatialstrategyterm
parses value rounds according included flag
parses value rounds according included flag
indexoptions deprecated rejected 70
indexoptions deprecated rejected 70
rangequeryobject object boolean boolean shaperelation datetimezone datemathparser queryshardcontext without trouble relations datespecific options
termquery impl looks context determine index queried returns matchallquery matchnoquery value matches index useful aliases wildcards used aim restrict query specific indices
checks new field type valid
checks new field alias valid note method assumes new concrete fields already processed verify alias refers existing concrete field
returns list full names simple match regex like pattern full name index name
return new instance contains union instance field types provided mappers field already exists field type updated use new type given field mapper similarly alias already exists updated reference field type new mapper
returns field given field
return new context used within nested document
return new context provided path
returns array values field specified method parameter method returns empty array matching fields never returns null want actual numeric field instances back use getfields name name field string field values
try parse externalvalue clazz expected class external value null external value set value
return new context within multifields
return new context external value set
return new context provided document current document
return new context within copyto operation
add fields later fetched using getbykeyobject
removes redundant root includes objectmappernested trees avoid duplicate fields root mapper isincludeinroot true node included parent node either isincludeinroot true transitively included root chain nodes isincludeinparent returning true omb builder whose children check parentincluded true iff node child root node included root
find template returns null template could found name field name dynamictype field type give field template define one matchtype type field json document null unknown mapper builder null template field
returns best nested objectmapper instances scope specified nested docid
recursively update sub field types
nestedobjectmapperteststestmultiplelevelsincluderoot1 tests case transitive includeinparent redundant includeinroot happen chain nodes starts parent node directly connected root chain includeinparent ie includeinparent set false includeinroot set true
checks multiple levels nested includes node directly transitively included root includeinroot chain includeinparent lead duplicate fields root document
parses indexes inputs parsing acceptable format string interpreted field value input array element one object see below object input stringarray weight stringint contexts arrayobject indexing context mappings defined delegates contextmappingsaddfieldparsecontextdocument string string int map else adds inputs orgapachelucenesearchsuggestdocumentsuggestfield
postings format use fieldtype
completion prefix fuzzy query
maxinputlength maximum expected prefix length note prefixes longer truncated
acceptable inputs string interpreted field value input object input stringarray weight stringint contexts arrayobject
add context mapping field contextmappings see contextmappingsloadobject version
name completion field build
parses geopoint represented string ignores malformed geopoints needed
parses geopoint represented object array ignores malformed geopoints needed
build update parent contain given mapper intermediate fields
creates copy current field given field name boost
creates instances fields current field copied
creates mapping containing dynamically added fields returns null dynamic mappings
creates update intermediate object mappers stack parents newmapper
removes mappers exist stack part path current nameparts returns next unprocessed index nameparts
adds mappers end stack exist updates within mappers returns next unprocessed index nameparts
adds mapper update last mapper merge true new mapper merged child mappers last parent otherwise new update
factory method range queries relation relation nulls interpreted like intersects
checks conflicts field type other strict true properties must equal otherwise properties must never change index checked
checks type type other adds conflict different
extract term query created termquery recursively removing boostquery wrappers illegalargumentexception wrapped query termquery
sets null value initializes string version
build constantscoring query matches values default implementation uses constantscorequery around booleanquery whose occurshould clauses generated termquery
illegalargumentexception fielddata supported type illegalargumentexception needed order return http error 400 error occurs request see orgelasticsearchexceptionshelperstatus
returns true field aggregatable
return whether values given indexreader within range outside range cross range default implementation returns relationintersects always fine return way check whether values actually within bounds
return docvalueformat used display parse values returned fielddata api default implementation returns docvalueformatraw
constructs json path offset offset result offset number path elements included pathastextstring
validates overall structure mapping addition including whether duplicate fields present provided fields already defined different data type type mapping type use error messages objectmappers newly added object mappers fieldmappers newly added field mappers fieldaliasmappers newly added field alias mappers fullpathobjectmappers object mappers indexed full path fieldtypes field field alias mappers collected lookup structure
verifies field reference eg value copyto target field alias corresponds valid part mapping fieldmappers newly added field mappers fieldaliasmappers newly added field alias mappers fullpathobjectmappers object mappers indexed full path fieldtypes field field alias mappers collected lookup structure
documentmappermergemapping
get root mapper given class
recursively update sub field types
returns fields match given pattern pattern prefixed type fields returned type prefix
returns document mapper created including mapping update type dynamically created
return documentmapper given type using special value defaultmapping type get documentmapper default mapping
return term uniquely identifies document null type allowed
update mapping merging metadata different received stored entries
parses mappings formatted json map
given type eg long string return anonymous field mapper used search operations
encodes specified number type long variablelength byte format byte format preserves ordering means returned byte array used comparing is first bit stores sign 4 subsequent bits encode number bytes used represent long value addition first one
returns true object number decimal part
converts object double checking known types first
returns 1 0 1 value lower than equal to greater 0
test time zones correctly parsed datefieldmapper known bug joda 294 reported httpsgithubcomjodaorgjodatimeissues373
parse text field attributes addition parsefield common attributes parse analysis termvectors related settings
parse common field attributes docvalues store
possible search token count
possible get token count search response
possible search token count
count position increments token stream package private testing analyzer analyzer create token stream fieldname field name pass analyzer fieldvalue field value pass analyzer enablepositionincrements count position increments number position increments token stream ioexception tokenstream throws
position increments counted only positions counted were looking make sure we dont count tokens without increment count normal tokens one increment count funny tokens one increment one dont count final token increments rare token streams
position increments counted were looking make sure we dont count tokens without increment count normal tokens one increment count funny tokens one increment count final token increments rare token streams
merge changes coming mergewith place
parse using provided parsecontext return mapping update dynamic mappings modified mappings null mappings modified
splits provided mapper descendants object field field alias mappers
test checks multitype validation done kind validation mapping thats added see httpsgithubcomelasticelasticsearchissues29313
test coerce parameter correctly parses
test acceptzvalue parameter correctly parses
test ignoremalformed parameter correctly parses
test orientation parameter correctly parses
converts object double checking known types first
base64 ids decode prepend escape char cases could mixed numeric utf8 encoding majority cases 253256 encoded id exactly binary form
encode id storage index encoding optimized numeric base64 ids encoded much denser way utf8 would do decodeid
numeric ids fold two consecutive chars single byte use 0x0f end marker
decode indexed id back original form encodeid
returns parent objectmapper instance specified object mapper null isnt any
returns whether parent objects fields nested too
build mapping update provided sub mapping update
builds new map refresh transition called beforerefresh
removes uid pending deletes map
adds uidversion pending adds map iff map needs safe access
try prune tombstones whose timestamp less maxtimestamptoprune seqno maxseqnotoprune
called index closed
exposes translog associated given engine testing purpose
generate new sequence number return it works internalengines
global stats segments
fail engine due error engine also closed underlying store marked corrupted iff failure caused index corruption
read stream
flush engine committing segments disk truncating translog close it
returns whether leaf reader comes merge versus flush addindexes
activate throttling switches lock real lock
deactivate throttling switches lock alwaysacquirable nooplock
returns 0 case accountable null otherwise returns rambytesused
specified throwable contains fatal error throwable graph fatal error thrown callers ensure catch statements would catch error stack fatal error go uncaught handled uncaught exception handler install bootstrap specified throwable indeed contain fatal error specified message attempt logged throwing fatal error specified throwable contain fatal error method noop maybemessage message maybe log maybefatal throwable maybe contains fatal error
check whether engine failed
creates new orgelasticsearchindexengineengineconfig
returns circuit breaker service engine null none used
commits specified index writer writer index writer commit translog translog syncid sync flush id null committing synced flush ioexception io exception occurs committing specfied writer
reads current stored history id iw commit data
gets commit data indexwriter map
resolves current version document returning null found
returns many bytes currently moving indexing buffer segments disk
returns true indexing operation may already processed engine note ok rarely return true even case however false return value must always correct
closes engine without acquiring write lock called write lock hold disaster condition ie engine failed
reads current stored translog id last commit data
asserts doc index operation really doesnt exist
returns translog location version value null optional might tracked time
captures recent commit point lastcommit recent safe commit point safecommit index files capturing commit point wont released commit reference closed acquiringsafecommit captures recent safe commit point true otherwise captures recent commit point
find highest index position safe index commit whose max sequence number greater global checkpoint index commits different translog uuid filtered dont belong engine
checks deletion policy release index commits latest global checkpoint
releases index commit acquired acquireindexcommitboolean true snapshotting commit clean up
find safe commit point list existing commits based supplied global checkpoint max sequence number safe commit point global checkpoint index created v62 havent retained safe commit yet method return oldest commit commits list existing commit points globalcheckpoint persisted global checkpoint translog see translogreadglobalcheckpointpath string safe commit oldest commit safe commit found
end recovery counter decrementing stores ref ongoing recovery counter number ongoing recoveries remaining
set string representing segment part merge value representing group segments represent merge
return tuple representing sequence id given get operation first value tuple sequence number second primary term
tests close method returns engine actually guaranteed cleaned resources closed
java docs
simulates upsert update api
sequence number generator generate sequence number stall set true wait barrier referenced latch returning local checkpoint advance because stall false value expectedlocalcheckpoint set accordingly latchreference latch thread purpose stalling barrier signal thread generated new sequence number stall whether thread stall expectedlocalcheckpoint expected local checkpoint generating new sequence number sequence number generator
random test throws random exception ensures references counted released resources closed
tests age trumps size recovery trumps both
create new translog checkpoint offset current offset translog numops current number operations translog generation current translog generation minseqno current minimum sequence number operations translog maxseqno current maximum sequence number operations translog globalcheckpoint lastknown global checkpoint mintransloggeneration minimum generation referenced translog moment trimmedaboveseqno operations seq trimmedaboveseqno ignored read corresponding translog file sequencenumbersunassignedseqno used disable trimming
releases generation acquired acquiretransloggenlong
sets translog generation last index commit
acquires basis generation new snapshot translog generation above including returned generation deleted returned releasable closed
returns minimum translog generation still required system generation returned value may safely deleted readers current translog readers writer current translog writer
reads operation given position given buffer
create snapshot translog file channel
ensures given location synced written underlying storage returns true iff call caused actual sync operation otherwise false
return stats
returns minimum translog generation retained translog given location ensures transloguuid translog matches provided transloguuid location location translog minimum translog generation ioexception io exception occurred reading checkpoint translogcorruptedexception translog corrupted mismatched given uuid
returns minimum file generation referenced translog
creates new translog instance method create new transaction log unless given transloggeneration null generation null method destructive delete files translog path given generation null method tries open given translog generation generation treated last generation referenced already committed data means operations yet committed translog file referenced generation translog creation fail generation cant opened config configuration translog transloguuid translog uuid open null new translog deletionpolicy instance translogdeletionpolicy controls translog file safely deleted globalcheckpointsupplier supplier global checkpoint primarytermsupplier supplier latest value primary term owning index shard latest term value examined stored header whenever new generation rolled its guaranteed outside new generation rolled term increased guarantee allows us validate reject operation whose term higher primary term stored translog header
trims translog terms files belowterm seq aboveseqno effectively moves max visible seq checkpointtrimmedaboveseqno therefore translogsnapshot skips operations
acquires lock translog files preventing trimmed
returns number operations transaction files contain operations seq given number
writes type translog operation given stream
snapshots current transaction log allowing safely iterate snapshot snapshots fixed time updated future operations
tests whether translog generation rolled new generation test based size current generation compared configured generation threshold size true current generation rolled new generation
trims unreferenced translog generations asking translogdeletionpolicy minimum required generation
returns number operations translog files least given generation
reads type operation given stream operation must written operationwriteoperationstreamoutput operation
creates new translog specified generation filegeneration translog generation writer new translog ioexception creating translog failed
deletes files associated reader packageprivate able simulate node failures point
returns true fsync required ensure durability translogs operations its metadata
plain location sort plain location returned last write locations returned next write
returns size bytes translog files least given generation
recover translog files found disk
reads list operations written writeoperationsstreamoutput list
returns age oldest entry translog files seconds
closes translog current translog writer experienced tragic exception note case thread closes translog must already holding read lock translog acquire write lock course closing translog ex exception occurs closing translog suppressed provided exception
syncs translog
roll current translog generation new generation commit translog ioexception io exception occurred file operations
reads returns operation given location generation references still available otherwise method return null
ensures locations given stream synced written underlying storage method allows internal optimization minimize amount fsync operations multiple locations must synced returns true iff call caused actual sync operation otherwise false
adds operation transaction log operation operation add location operation translog ioexception adding operation translog resulted io exception
writes operations given iterable given output stream including size array use readoperationsstreaminput string read back
reads sequence numbers global checkpoint translog checkpoint ensures transloguuid translog matches provided transloguuid location location translog global checkpoint ioexception io exception occurred reading checkpoint translogcorruptedexception translog corrupted mismatched given uuid
returns generation current transaction log
extracts translog generation file name illegalargumentexception path doesnt match expected pattern
returns true iff given generation current generation translog
last synced checkpoint translog last synced checkpoint
gets minimum generation could contain sequence number specified sequence number current generation generation could sequence number seqno sequence number minimum generation sequence number
returns current generation translog corresponds latest uncommitted translog generation
creates new writer filegeneration generation write written initialmintransloggen minimum translog generation written first checkpoint needed solve initialization problem constructing empty translog readers current call getminfilegeneration would work initialglobalcheckpoint global checkpoint written first checkpoint
sets tragic exception tragic exception already set adds passed exception suppressed exception ex tragic exception set
reads single opertation given location
read size op ie number bytes including op size written given position
reads operation given position returns it buffer length equal number bytes reads
given file channel opens translogreader taking care checking validating file header channel translog file channel path path translog checkpoint translog checkpoint transloguuid tranlog uuid new translogreader ioexception file operations resulted io exception
reads operation given position given buffer
create translog writer specified translog file channel checkpoint translog checkpoint channel translog file channel open translog reader path path translog header header translog file
closes current reader creates new one new checkoint file channel
disables translog flushing specified index
creates new point time snapshot given snapshots snapshots always iterated inorder
marks sequence number returns true seen before
lists existing commits given index path read minimum translog generation used recoverfromtranslog
corrupts random translog file translogntlog given translog directory translog file corrupted
make sure its ok close translog snapshot multiple times
tests closing views translog fine reopen translog
tests concurrent readers writes maintain view snapshot semantics
test adds operations translog might randomly throw ioexception thing test verifies can hit exception open recover translog successfully retrieve successfully synced operations transaction log
randomly truncate bytes translog files
tests situation node crashes translog gen committed lucene translog chance clean files
tests situation node crashes translog gen committed lucene translog chance clean files
writes header latest format file channel
read translog header given path file channel
creates new translog header given uuid primary term transloguuid uuid used prevent accidental recovery transaction log belongs different engine primaryterm primary term owning index shard creating eg rolling translog file operations terms translog file enforced term
syncs translog least given offset unless already synced true call caused actual sync operation
returns true buffered operations flushed fsynced disk latest global checkpoint yet fsynced
closes writer transfers underlying file channel new immutable translogreader new translogreader ioexception file operations resulted io exception
add given bytes translog specified sequence number returns location bytes written to data bytes write seqno sequence number associated operation location bytes written ioexception writing translog resulted io exception
write checkpoint file given location given generation
show warning deleting files asking confirmation batchmode false
return set files given directory
write translog containing given translog uuid given location returns number bytes written
promotes specific replica new primary
test request failures failures seqno generation added noop translog
test ensures consistency primary replica nonappendonly eg index request id delete operation document processed original appendonly request replicas appendonly document exposed deleted primary added replica replicas treat late appendonly request regular index request
test ensures consistency primary replica late order delivery replica index operation primary followed delete operation delete operation delivered first processed replica index delayed interval even longer gc deletes cycle makes sure replica still remembers delete operation correctly ignores stale index operation
test document failures failures seqno generation added noop operation translog primary replica shards
metric implementing precisionk threshold ratings equal value considered relevant ignoreunlabeled controls unlabeled documents search hits treated set true unlabeled documents ignored neither count true false positives set false treated false positives k controls window size search results metric takes account
compute precisionatn based provided relevant document ids precision n searchresult list
joins hits rated documents using joint indexid document key
filter ratedsearchhits rating
maxrelevance maximal relevance judgment evaluation dataset unknowndocrating rating documents user hasnt supplied explicit rating for null case document skipped k search window size request use
test modifying order indexdocid make sure doesnt matter parsing xcontent
create rated request template ids parameters id unique name rated request rateddocs list document ratings params template parameters templateid templare id
assuming result ranking rank relevance probr r p p probr r 1 3 0875 1 0875 2 na na 0125 na 3 0 0 0125 0 4 1 003125 0125 000390625 err sum last column
assuming result ranking rank relevance probr r p p probr r 1 3 0875 1 0875 2 2 01875 0125 00234375 3 0 0 0078125 0 4 1 003125 0078125 000244140625 err sum last column
test metric returns 00 search results
normalize set true dcg normalized ndcg see httpsenwikipediaorgwikidiscountedcumulativegain unknowndocrating rating documents user hasnt supplied explicit rating k search window size request use
test relevant rating threshold set something larger 1 eg set 2 expect dics 02 relevant doc 3 4 relevant
sets indices search executed on
indices request
test cases retrieves six documents indexed above first part checks prec10 calculation unlabeled docs treated unrelevant average prec metric across two search use cases first one labels 4 6 documents relevant second one one relevant document
test running bad query eg one target non existing field produce error response
test assumes using ratings discountedcumulativegainteststestdcgat see details test case expected values calculated
test multiple indices work setting indices options possible works expected
test relevant rating threshold set something larger 1 eg set 2 expect dics 02 relevant first relevant doc third ranking position rr 13
create searchhits testing starting dociid from docid to search hits index also need provided
assuming docs ranked following order rank relevance 2relevance 1 log2rank 1 2relevance 1 log2rank 1 1 3 70 10 70 70 2 2 30 15849625007211563 18927892607143721 3 3 70 20 35 4 0 00 2321928094887362 00 5 1 10 2584962500721156 038685280723454163 6 2 30 2807354922057604 10686215613240666 dcg 1384826362927298 sum last column
tests metric documents search result dont rating provided user rank relevance 2relevance 1 log2rank 1 2relevance 1 log2rank 1 1 3 70 10 70 2 2 30 15849625007211563 18927892607143721 3 3 70 20 35 4 na na na na 5 1 10 2584962500721156 038685280723454163 6 na na na na dcg 12779642067948913 sum last column
tests normalization works expected rated documents search hits restrict dcg calculated fourth position rank relevance 2relevance 1 log2rank 1 2relevance 1 log2rank 1 1 3 70 10 70 2 2 30 15849625007211563 18927892607143721 3 3 70 20 35 4 na na na na 5 1 10 2584962500721156 038685280723454163 6 na na na na dcg 12392789260714371 sum last column position 4
test metric returns 00 search results
compute reciprocalrank based provided relevant document ids
metric implementing mean reciprocal rank httpsenwikipediaorgwikimeanreciprocalrank relevantratingthreshold rating value document needs regarded relevant defaults 1 k search window size request use
run search action call onresponse response comes in retrying action fails exception caused rejected execution action consumes listener starts action listener consumes rigged retry failure onresponse consumes response action
cant send parsesearchrequest rest content doesnt support remove content valid addition supports content first temporary hack get better searchrequest full objectparser support delegate stuff
read stream
takes action created bulkbyscrolltask runs regard whether request sliced not request sliced ie number slices 1 worker action given runnable started local node request sliced ie number slices 1 subrequest created slice sent slices set auto class resolve specific number based characteristics source indices request auto slices may end sliced unsliced
slice search request times separate search requests slicing field note slices shallow copies request dont change them
make sure search failures get pushed back user failures whole process lose information far along process got important see failures
figures many slices request handling use
figures many slice statuses expect response
build task status values used testing negative values
blocks named executor getting thread running task blocked cyclicbarrier fills queue noop task requests use queue get esrejectedexecutionexceptions
lower queue sizes small enough bulk searches time retried
fetch status task type action fails arent exactly one type task running
executes cancellation test
read stream
set matcher size failures list depth matching hand type signatures required match actual failures list dont work
set matches number batches defaults matching integer usually dont care many batches job takes
set matcher workers portion response
record failure slice respond listener request finished
get combined statuses slice subtasks merged given list statuses
record response slice respond listener request finished
returns object tracks state sliced subtasks throws illegalstateexception task set leader task
read stream
sets task leader task slices sliced subtasks
returns object manages sending search requests throws illegalstateexception task set worker task
build status task given snapshot information running slices supported task set leader slice subtasks
sets task worker task performs search requests requestspersecond many search requests per second task make sliceid sliced task slice number task corresponds to null sliced
constructor merging many statuses slicestatuses statuses sub requests task sliced into reasoncancelled reason this task cancelled note entry slicestatuses cancelled independently task task cancelled workers should cancelled
start terminating request finished noncatastrophically refreshing modified indices proceeding finishhimexception list list boolean
send bulk request handling retries
build bifunction apply requestwrapper public testings
copies metadata hit request
start action firing initial search request
finish request failure non null request failed catastrophically exception indexingfailures indexing failures accumulated request searchfailures search failures accumulated request timedout subrequests timed out
start next scroll request lastbatchsize number requests sent last batch used calculate throttling values applied scroll returns
finish request failure non null request failed catastrophically exception
used accept ignore search hit ignored search hits excluded bulk request also fail invalid search hits like document source its required
process scroll response lastbatchstarttime time last batch started used calculate throttling delay lastbatchsize size last batch used calculate throttling delay response scroll response process
processes bulk responses accounting failures
prepare bulk request called generic thread pool preflight checks done one searchresponse delay slept uses generic thread pool reindex rare enough need thread pool thread may blocked user script
build response reindex actions
assert two task statuses equal serialization version version expected serialized
build remoteinfo defaulting values dont care test values dont hurt anything
maximum number processed documents defaults 1 meaning process documents
set initial delay rejection retrying request
version conflicts cause aborts defaults false
append short description search request stringbuilder used make tostring
set throttle request subrequests per second floatpositiveinfinity means set throttle default throttling done batches start next scroll requests way increase scrolls timeout make sure contains time might wait
timeout wait shards available bulk request
number slices task divided into defaults 1 meaning task isnt sliced subtasks
sets abortonversionconflict based restfriendly names
constructor actual use searchrequest search request execute get documents process setdefaults request set defaults search request usually set true leave false support request slicing
set total number retries attempted rejections way ask unlimited retries
set scroll timeout searchrequest
call refresh indexes weve written request ends
setup clone request information needed process slice it
task store result finished
sets number shard copies must active proceeding write see replicationrequestwaitforactiveshardsactiveshardcount details
set throttle apply matching requests subrequests per second floatpositiveinfinity means set throttle throttling done batches start next scroll requests way increase scrolls timeout make sure contains time might wait
mimicks bulk rejections retried fail anyway run retries
execute bulk retry test case total number failures random number retries attempted set testrequestgetmaxretries controled failwithrejection parameter
mimicks search timeouts
mimicks bulk indexing failures
tests cancel request throttling delay cant use canceltaskcaseconsumer needs send request uncanceled cancel specific time
mimicks bulk rejections retried eventually succeed
tests scroll response batch batch launched properly
mimicks script failures general wrongness implementers
mimicks threadpool rejecting execution task
mimicks shard search failures usually caused data node serving scroll request going down
simulate scroll response setting scroll id firing onscrollresponse method
default retry time matches say javadoc request
generates random scrollid registers test finishes check cleared subsequent calls reregister new random scroll id checked instead
initial delay rejection retrying bulk request default maxretries total backoff retrying rejections one minute per bulk request entire bulk request successful retry counter resets
number slices task divided into defaults 1 meaning task isnt sliced subtasks
number shard copies must active proceeding write see replicationrequestwaitforactiveshardsactiveshardcount details
timeout wait shards available bulk request
call refresh indexes weve written request ends
version conflicts cause action abort
set query filter source convenience method easy chaining
maximum number documents attempt
set throttle request subrequests per second floatpositiveinfinity means set throttle default throttling done batches start next scroll requests way increase scrolls timeout make sure contains time might wait
task store result finished
set source indices
total number retries attempted rejections way ask unlimited retries
set throttle apply matching requests subrequests per second floatpositiveinfinity means set throttle throttling done batches start next scroll requests way increase scrolls timeout make sure contains time might wait
test rethrottling runningslices number slices still running simulator simulate response subrequest rethrottle child requests verifier verify resulting response
overrides parents implementation much updatereindex oriented also copies things like timestampttl dont care deletion
schedule preparebulkrequestrunnable run delay throttling plugs reindexing request rescheduled again
many nanoseconds batch lastbatchsize taken perfectly throttled package private testing
apply newrequestspersecond new rate limit tasks search requests
scale back remaining delay fit new delay
perform reindex create optype create semantics
perform reindex internal versioning overwrite semantics
perform reindex external versioning refresh semantics
build restclient used reindexing remote clusters remoteinfo connection information remote cluster taskid id current task added thread name easier tracking threadcollector list collect threads created client
override simple copy behavior allow fine grained control
build characterrunautomaton represents reindexfromremote whitelist make sure doesnt whitelist world
throws actionrequestvalidationexception request tries index back index index points two indexes cannot done request validation cluster state isnt available then package private testing
furiously rethrottles delayed request make sure never run twice
script modify documents processed
setup reindexing remote cluster
set destination index
set destination index type
script modify documents processed
yank string array map emulates xcontents permissive string string array conversions
build remoteinfo defaulting values dont care test values dont hurt anything
sets common options abstractbulkbyscrollrequest requests
requestspersecond request float request null otherwise
test parsing ttl timestamp routing parent
creates hit source doesnt make remote request instead returns data files also requests always returned synchronously rather asynchronously
test parsing ttl routing parent timestamp isnt available
versions elasticsearch 210 dont support sortdoc instead need use searchtypescan scan doesnt return documents first iteration reindex doesnt like that jump start strait next iteration
wrap responseexception exception thatll preserve status code possible send back user might constant status code case use 500 instead also extract make sure include response body message user figure why remote elasticsearch service threw error back us
returns docvaluebits representing documents pointvalues value
return string representation provided values typically used scripts map execution mode terms aggs note slow
return numericdoublevalues doesnt contain value
returns docvaluebits representing documents docvalues value
returns docvaluebits representing documents values value
return string representation provided values typically used scripts map execution mode terms aggs note slow
returns docvaluebits representing documents doublevalues value
given sortednumericdoublevalues return sortednumericdocvalues instance translate double values sortable long bits using orgapacheluceneutilnumericutilsdoubletosortablelongdouble
given sortednumericdocvalues return sortednumericdoublevalues instance translate long values doubles using orgapacheluceneutilnumericutilssortablelongtodoublelong
wrap provided sortednumericdocvalues instance cast values doubles
returns docvaluebits representing documents docvalues value
return numericdocvalues instance value every document returns value values value current document missing otherwise
returns singlevalued view sortedbinarydocvalues previously wrapped singletonbinarydocvalues null
returns singlevalued view multigeopointvalues previously wrapped singletongeopointvalues null
returns singlevalued view sortednumericdoublevalues previously wrapped docvaluessingletonnumericdocvalues null
return string representation provided values typically used scripts map execution mode terms aggs note slow
wrap provided sortednumericdoublevalues instance cast values longs
return string representation provided values typically used scripts map execution mode terms aggs note slow
return numericdoublevalues instance value every document returns value values value current document missing otherwise
set docvaluecount ensure values array store least many entries
sets orgelasticsearchindexfielddataindexfielddatacachelistener passed indexfielddata creation capture oncache onremoval events setting listener method override previously set listeners illegalstateexception listener set
set size ensure values array store least many entries
set size ensure values array store least many entries
log deprecation log servers permissions permissions script calling method need prevent errors rolling log file
refresh backing array package private called longs loads dates
fetch first field value 0 millis epoch in
set size ensure values array store least many entries
constructor testing deprecation callback
set size ensure values array store least many entries
set size ensure values array store least many entries
make sure values array store least count entries
sort values stored offsets 0 count values
return missing object value according reduced type comparator
get docidset matches inner documents
set docvaluecount ensure values array store least many entries
returns numeric docvalues view raw double bits
returns numeric docvalues view raw float bits
proxy original next call estimates overhead loading next term
flush flushbuffer breaker incrementing total bytes resetting buffer
always accept term
helper checks fieldinfo throws exception definitely latlondocvaluesfield
number bytes term based length ordinal overhead
adjust circuit breaker terms loaded getting actual used either parameter if estimation worked entire set termsenum wrapped ramaccountingtermsenum termsenum terms loaded actualused actual field data memory usage
estimate loading entire term set field data 0 unavailable
determine whether blocktreetermsreaderfieldreader used estimating field data adding estimate circuit breaker can otherwise wrapping terms ramaccountingtermsenum estimated perterm basis terms terms estimated possibly wrapped termsenum terms
return true impl going smaller singlepackedordinals least 20
builds bitset documents bit one ordinals associated it every document ordinal associated method returns null
builds ordinals instance builders current state
allocate new slice return id
associates given document id current ordinal
closes builder release resources
method iterates terms given termsenum associates terms ordinal terms documents caller must exhaust returned bytesrefiterator returns values first returned value associated ordinal 1 etc
encode position given level offset idea encode level using unary coding lower bits offset higher bits
returns shared longsref instance given doc id holding ordinals associated it
build global ordinals provided indexreader
source document as string
returns bytes reference also un compress source needed
source document exists
source document as map
returns getresult based specified orgelasticsearchindexengineenginegetresult argument method basically loads specified fields associated document enginegetresult method load fields lucene index transaction log therefore isnt realtime note call must release engine searcher associated enginegetresult
decides needs done based request input always returns valid nonnull fetchsourcecontext
recovers shard its local file system store method required preknowledge shard exist disk ie previously allocated shard brand new allocation without preexisting index files transaction logs indexshard index shard instance recovery shard true shard recovered successfully false recovery ignored due concurrent modification clusters state changed due async updates store
restores shard snapshotrecoverysource associated shard routing table
recovers state shard store
recovers index given repository method restores previously created index snapshot existing initializing shard indexshard index shard instance recovery snapshot repository repository holding physical files shard recovered true shard recovered successfully false recovery ignored due concurrent modification clusters state changed due async updates
recovers state shard store
tries extract shard id reader possible possible return null
tries extract shard id reader possible possible return null
creates new empty shard starts it primary controls whether shard primary replica
creates new initializing shard shard put proper path current node id shard assigned to routing shard routing use indexmetadata indexmetadata shard including mapping listeners optional set listeners add shard
promotes replica primary incrementing its term starting needed
creates new initializing shard shard unique data path primary indicates whether primary shard ready recover empty store replica ready recover another shard
creates new initializing shard routing shard routing use shardpath path use shard data indexmetadata indexmetadata shard including mapping store optional custom store use null default file based store created indexsearcherwrapper optional wrapper used searchers globalcheckpointsyncer callback syncing global checkpoints indexeventlistener index event listener listeners optional set listeners add shard
creates new initializing shard shard put proper path supplied node id shardid shard id use primary indicates whether primary shard ready recover empty store replica ready recover another shard
creates new initializing shard shard unique data path shardid shard id use primary indicates whether primary shard ready recover empty store replica ready recover another shard listeners optional set listeners add shard
creates new initializing shard shard put proper path supplied node id shardid shard id use primary indicates whether primary shard ready recover empty store replica ready recover another shard
takes existing shard closes starts new initialing shard location listeners new listerns use newly created shard
creates new initializing shard shard put proper path current node id shard assigned to routing shard routing use indexmetadata indexmetadata shard including mapping indexsearcherwrapper optional wrapper used searchers globalcheckpointsyncer callback syncing global checkpoints listeners optional set listeners add shard
takes existing shard closes starts new initialing shard location routing shard routing use newly created shard listeners new listerns use newly created shard
recovers replica given primary
recover shard snapshot using given repository
recovers replica given primary
recovers replica give primary allow user supply custom recovery target typical usage custom recovery target assert things various stages recovery note method keeps shard indexshardstatepostrecovery doesnt start it replica recovery target shard primary recovery source shard targetsupplier supplies instance recoverytarget markasrecovering set false replica marked recovering
snapshot shard using given repository
creates new initializing shard shard unique data path shardrouting shardrouting use shard listeners optional set listeners add shard
get local knowledge global checkpoints insync allocation ids map allocation id local knowledge global checkpoint allocation id
notifies service update local checkpoint shard provided allocation id see replicationtrackerupdatelocalcheckpointstring long details allocationid allocation id shard update local checkpoint checkpoint local checkpoint shard
add listener refreshes location location listen listener refresh called true registering listener ran slots forced refresh called false otherwise
updates global checkpoint replica shard updated primary globalcheckpoint global checkpoint reason reason global checkpoint updated
marks shard recovering based recovery state fails exception recovering allowed set
schedules flush translog generation roll needed schedule one concurrently operation executed asynchronously flush thread pool
tests whether translog generation rolled new generation test based size current generation compared configured generation threshold size true current generation rolled new generation
creates new indexcommit snapshot currently running engine resources referenced commit wont freed commit snapshot closed flushfirst true index first flushed disk low level lucene commit executed
executes given flush request engine request flush request commit id
updates known allocation ids local checkpoints corresponding allocations primary relocation source primarycontext sequence number context
fails shard marks shard store corrupted e caused index corruption
checks removes translog files longer need retained see orgelasticsearchindextranslogtranslogdeletionpolicy details
upgrades shard current version lucene returns minimum segment version
gets storemetadatasnapshot current directory method safe call lifecycle index shard without worry current state engine concurrent flushes orgapacheluceneindexindexnotfoundexception index found current directory orgapacheluceneindexcorruptindexexception lucene index corrupted caused checksum mismatch unexpected exception opening index reading segments file orgapacheluceneindexindexformattoooldexception lucene index old opened orgapacheluceneindexindexformattoonewexception lucene index new opened javaiofilenotfoundexception one files referenced commit present javaniofilenosuchfileexception one files referenced commit present
acquire replica operation permit whenever shard ready indexing see acquireprimaryoperationpermitactionlistener string object given primary term lower one shardrouting actionlisteneronfailureexception method provided listener invoked illegalstateexception permit acquisition delayed listener invoked executor specified name opprimaryterm operation primary term globalcheckpoint global checkpoint associated request onpermitacquired listener permit acquisition executorondelay name executor invoke listener permit acquisition delayed debuginfo extra information useful tracing unreleased permit assertions enabled tracing capture supplied objects objecttostring value otherwise object isnt used
writes indexing changes disk opens new searcher reflecting changes throw alreadyclosedexception
returns latest cluster routing entry received shard
update local knowledge global checkpoint specified allocation id allocationid allocation id update global checkpoint globalcheckpoint global checkpoint
marks shard provided allocation id insync primary shard see replicationtrackermarkallocationidasinsyncstring long additional details allocationid allocation id shard mark insync localcheckpoint current local checkpoint shard
registers given listener invokes shard active pending refresh translog location refreshed pending refresh location registered listener invoked immediately listener listener invoke pending refresh location visible listener called true listener registered wait refresh
completes relocation operations blocked current operations drained changing state relocated provided runnable executed operations successfully blocked consumer runnable executed operations blocked illegalindexshardstateexception shard relocating due concurrent cancellation interruptedexception blocking operations interrupted
returns current recoverystate shard recovering recovering returns null recovery yet started shard recovered created via api
rolls tranlog generation cleans unneeded
called indexingmemorycontroller check whether inactivetimens passed since last indexing operation notify listeners inactive eg syncd flush happen
opens engine top existing lucene engine translog operations translog replayed bring lucene date
perform last stages recovery translog operations done note still call postrecoverystring
syncs global checkpoint replicas global checkpoint least one replica behind global checkpoint primary
changes state current shard newstate new shard state reason reason state change previous shard state
called recovery restarted network error delay
add global checkpoint listener global checkpoint current global checkpoint known listener listener fire immediately calling thread currentglobalcheckpoint current global checkpoint known listener listener listener
called shard using much heap move buffered indexeddeleted documents disk
returns whether shard relocated primary ie charge anymore replicating changes see replicationtracker
opens engine top existing lucene engine translog translog kept operations wont replayed
called recovery process shard opened engine target shard ensures right data structures set locally track local checkpoint information shard shard added replication group allocationid allocation id shard recovery initiated
called starting copy index files
returns many bytes currently moving heap disk
check recoveries pending insync true least one shard pending insync otherwise false
syncs given location underlying storage unless already synced method might return immediately without actually fsyncing location sync listener called yet unless already another thread fsyncing transaction log caller thread hijacked run fsync pending fsync operations method allows indexing threads continue indexing without blocking fsync calls ensure one thread blocking sync others continue indexing note synclistener throws exception its processed exception logged users make sure listener handles exception cases internally
tests whether engine flushed periodically test based current size translog compared configured flush threshold size true engine flushed
snapshots recent safe index commit currently running engine index files referenced index commit wont freed commitsnapshot closed
returns number heap bytes used indexing buffer shard 0 shard closed
build plain refreshlisteners shard
returns current replication group shard replication group
acquire primary operation permit whenever shard ready indexing permit directly available provided actionlistener called calling thread relocation handoff permit acquisition delayed provided actionlistener called using provided executor debuginfo extra information useful tracing unreleased permit assertions enabled tracing capture supplied objects objecttostring value otherwise object isnt used
returns true shard ignore recovery attempt made since already doingdone it
executes scheduled refresh necessary true iff engine got refreshed otherwise false
upgrade true running force merge upgrade segments written older versions apply next call indexwriterforcemerge handled mergepolicy well cascading calls made indexwriter
returns operation acquires permit synchronizes following manner waits barrier acquiring permit counts operationexecutinglatch acquires permit waits operationlatch releasing permit counts operationcompletelatch releasing permit barrier barrier wait operationexecutinglatch latch countdown acquiring permit operationlatch latch wait releasing permit operationcompletelatch latch countdown releasing permit controllable runnable acquires permit
tests threadcontext restored operation executed delayed due block
test one snapshot store various lifecycle stages
simulates scenario happens async fetching snapshot metadata gatewayservice checking index concurrently always possible without exception
test makes sure people use shard routing entry take operation permit check whether shard already promoted primary
simulating scenario happens async shard fetching gatewayserivce finishing recovery concurrently clean files always possible without exception yet bug indexshard acquired index writer lock called store its locking metadata reads
index specified shard introducing sequence number gaps indexshard shard operations number operations offset starting sequence number pair maximum sequence number whether gap introduced ioexception io exception occurs indexing shard
check accounting breaker correctly matches segments api memory usage
attempts add listener time refresh occurs background thread force refresh fast adding listeners catch situation refresh happens right listener added listener misses refresh catch next one listener wasnt able properly catch next one would fail
uses bunch threads index wait refresh nonrealtime get documents validate visible waiting regardless crazy sequence events causes refresh listener fire
number pending listeners
returns true pending listeners
fire listeners nothing list listeners null
add listener refreshes calling immediately location already visible runs listener slots forces refresh calls listener immediately well location location listen listener refresh called true registering listener ran slots forced refresh called false otherwise call listener true register listener call later false
invoke notify registered listeners updated global checkpoint globalcheckpoint updated global checkpoint
construct global checkpoint listeners collection shardid shard id global checkpoint updates listened executor executor listener notifications logger shardlevel logger
add global checkpoint listener global checkpoint current global checkpoint known listener listener asynchronously notified executor used construct collection global checkpoint listeners shard closed listener asynchronously notified executor used construct collection global checkpoint listeners listener notified one event either global checkpoint updated shard closed listener must reregister one events receive subsequent events currentglobalcheckpoint current global checkpoint known listener listener listener
parse string representation shardid back object lose index uuid information here since use tostring rest responses best reconstruct object client side
returns stats including type specific stats types null0 length nothing returned them set types provided returned all types
method tries delete leftover shards index name reused uuid different allow new shard allocated
returns datapath root shard root parent getdatapath without index name shard id
method walks nodes shard paths find data state path given shard multiple directories valid shard state exist one highest version used note method resolves custom data locations shard
wait inflight operations finish executes onblocked guarantee new operations started queues operations occurring meanwhile runs onblocked executed timeout maximum time wait inflight operations block timeunit time unit timeout argument onblocked action run block acquired type checked exception thrown onblocked interruptedexception calling thread interrupted timeoutexception timed waiting inflight operations finish indexshardclosedexception operation permit closed
construct operation permits specified shards shardid shard threadpool thread pool used execute delayed operations
acquires permit whenever permit acquisition blocked permit directly available provided actionlistener called calling thread calls blockoperationslong timeunit checkedrunnable permit acquisition delayed actionlisteneronresponseobject method called using provided executor operations longer blocked note executor used actionlisteneronfailureexception calls run directly calling thread case delays generic thread callers thus make sure actionlisteneronfailureexception method provided contains lightweight operations onacquired actionlistener invoked acquisition successful failed executorondelay executor use possibly delayed actionlisteneronresponseobject call forceexecution whether runnable force execution case gets rejected debuginfo extra information useful tracing unreleased permit assertions enabled tracing capture supplied objects objecttostring value otherwise object isnt used
obtain active operation count zero permits held even outstanding operations flight active operation count zero permits ar eheld
immediately delays operations another thread waits inflight operations finish executes onblocked guarantee new operations started delayed operations run onblocked executed operations delayed blocking forked another thread returns caller failure occurs blocking operations executing onblocked onfailure handler invoked timeout maximum time wait inflight operations block timeunit time unit timeout argument onblocked action run block acquired onfailure action run failure occurs blocking operations type checked exception thrown onblocked not thrown calling thread
list describing permit wasnt released yet description consist debuginfo supplied permit acquired plus stack traces captured permit request
returns average size bytes documents stats
configured indexsearcherwrapper instances indexsearcher provided engine searcher gets wrapped new enginesearcher instances returned otherwise provided enginesearcher returned invoked time enginesearcher requested operation for example search
increments number processed files
returns copy current indexshardsnapshotstatus method intended used coherent state indexshardsnapshotstatus needed indexshardsnapshotstatuscopy
returns information physical file given name physicalname original file name information file
returns part name file stored multiple parts part part number part name
returns size in bytes given part size in bytes given part
constructs new instance file info name file name stored blob store metadata files meta data partsize size single chunk
checks file store file fileinfo file store true file store file checksum length
serializes file info json file file info builder xcontent builder params parameters
parses shard snapshot metadata parser parser shard snapshot metadata
constructs new shard snapshot metadata snapshot metadata snapshot snapshot id indexversion index version indexfiles list files shard starttime snapshot start time time snapshot running time incrementalfilecount incremental files snapshotted incrementalsize incremental size snapshot
parses json represents file info parser parser file info
serializes shard snapshot metadata info json builder xcontent builder params parameters
returns base file name part name blobname part name base file name
writes index file shard following format files name 3 physicalname 0si length 310 checksum 1tpsg3p writtenby 510 metahash p9dsfxnmdwnlb name 2 physicalname segments2 length 150 checksum 11qjpz6 writtenby 510 metahash p9dsfwhzzwdtz name 1 physicalname 0cfe length 363 checksum er9r9g writtenby 510 name 0 physicalname 0cfs length 3354 checksum 491liz writtenby 510 name 4 physicalname segments3 length 150 checksum 134567 writtenby 510 metahash p9dsfwhzzwdtz snapshots snapshot1 files 0 1 2 3 snapshot2 files 0 1 2 4
return number tokens current document considered field
sole constructor
compute part score depend current document using initscript
parses given settings creates appropriate distribution settings settings parse normalization referred settings
parses given settings creates appropriate basicmodel settings settings parse basicmodel referred settings
parses given settings creates appropriate lambda settings settings parse normalization referred settings
parses given settings creates appropriate normalization settings settings parse normalization referred settings
parses given settings creates appropriate aftereffect settings settings parse aftereffect referred settings
convert list field names encoded optional boosts map associates field name boost fields list fields encoded optional boosts eg 035 converted map field names associated boosts
get fieldmapper associated field name null mapperservice mapper service find mapping field field name search
resolves provided pattern field name queryshardcontext return map expanded fields original boost context context query fieldorpattern field name pattern resolve weight weight field acceptalltypes whether field type added pattern expanded false allowedquerymappertypes accepted field types discarded query acceptmetadatafield whether metadata fields added pattern expanded fieldsuffix suffix name add expanded field names mapping exists name original name field kept adding suffix field name point valid field mapping
resolve field names patterns present provided map queryshardcontext returns new map containing expanded fields original boost context context query fieldsandweights map fields weights expand fieldsuffix suffix name add expanded field names mapping exists name original name field kept adding suffix field name point valid field mapping
resolves provided pattern field name queryshardcontext return map expanded fields original boost context context query fieldorpattern field name pattern resolve weight weight field acceptalltypes whether field type added pattern expanded false allowedquerymappertypes accepted field types discarded query acceptmetadatafield whether metadata fields added pattern expanded
expand phrasequery multiple fields share analyzer returns disjunctionmaxquery disjunction expanded field
creates new parser custom flags used enabledisable certain features
rethrow runtime exception unless lenient flag set returns matchnodocsquery
creates new parser custom flags used enabledisable certain features
analyze given string using analyzer constructing either prefixquery booleanquery made termquerys prefixquerys
grouptiebreaker tie breaker apply multiple fields used
rebuild phrase query slop value
defaults queryiable fields extracted mapping query terms context query shard context lenient set true cause format based failures like providing text numeric field ignored
returns true given query might match nested documents
returns true query given field might match parent documents documents nested different path
returns true query given field might match nested documents
returns true given query might match parent documents documents nested different path
checks graph analysis enabled field depending provided analyzer
creates new querybuilder using given analyzer
setup index mappings test index json builder index mappings ioexception error creating mapping json
test setup
returns stats including group specific stats groups null0 length nothing returned them set groups provided returned all groups
reads sequence number stats commit data maximum sequence number local checkpoint commitdata commit data sequence number stats
compute minimum given current minimum sequence number specified sequence number accounting fact current minimum sequence number could sequencenumbersnoopsperformed sequencenumbersunassignedseqno current minimum sequence number sequencenumbersnoopsperformed sequencenumbersunassignedseqno specified sequence number must sequencenumbersunassignedseqno minseqno current minimum sequence number seqno specified sequence number new minimum sequence number
compute maximum given current maximum sequence number specified sequence number accounting fact current maximum sequence number could sequencenumbersnoopsperformed sequencenumbersunassignedseqno current maximum sequence number sequencenumbersnoopsperformed sequencenumbersunassignedseqno specified sequence number must sequencenumbersunassignedseqno maxseqno current maximum sequence number seqno specified sequence number new maximum sequence number
called recovery process shard opened engine target shard ensures right data structures set locally track local checkpoint information shard shard added replication group allocationid allocation id shard recovery initiated
computes global checkpoint based given local checkpoints case entries preventing computation happen for example due blocking returns fallback value
returns global checkpoint shard global checkpoint
wait local checkpoint advance global checkpoint interruptedexception thread interrupted waiting
get local knowledge global checkpoints insync allocation ids map allocation id local knowledge global checkpoint allocation id
initiates relocation handoff returns corresponding primary context
notifies service update local checkpoint shard provided allocation id checkpoint lower currently known one noop allocation id tracked ignored allocationid allocation id shard update local checkpoint localcheckpoint local checkpoint shard
returns local checkpoint information tracked specific shard used tests
fails relocation handoff attempt
returns current replication group shard replication group
scans currently known local checkpoint updates global checkpoint accordingly
marks shard provided allocation id insync primary shard method block local checkpoint specified shard advances current global checkpoint allocationid allocation id shard mark insync localcheckpoint current local checkpoint shard
initialize global checkpoint service specified global checkpoint set last known global checkpoint sequencenumbersunassignedseqno shardid shard id allocationid allocation id indexsettings index settings globalcheckpoint last known global checkpoint shard sequencenumbersunassignedseqno
notifies tracker current allocation ids cluster state applyingclusterstateversion cluster state version applied updating allocation ids master insyncallocationids allocation ids currently insync shard copies routingtable shard routing table pre60allocationids allocation ids shards allocated pre60 nodes
marks relocation handoff attempt successful moves tracker replica mode
initializes global checkpoint tracker primary mode see primarymode called primary activation promotion
notify threads waiting monitor tracker threads waiting local checkpoint specific allocation id catch global checkpoint
updates global checkpoint replica shard updated primary globalcheckpoint global checkpoint reason reason global checkpoint updated
activates global checkpoint tracker primary mode see primarymode called primary relocation target primary relocation handoff primarycontext primary context used initialize state
whether shards blocking global checkpoint advancement used tests
class invariant hold every invocation public methods class java lacks implication logical operator many invariants written form a b read a implies b however
update local knowledge global checkpoint specified allocation id allocationid allocation id update global checkpoint globalcheckpoint global checkpoint
update global checkpoint replicationtrackermarkallocationidasinsyncstring long adding allocation id insync set removing pending local checkpoint update freed thread waiting local checkpoint advance could miss updating global checkpoint race waiting thread add allocation id insync set remove pending set local checkpoint updating thread executed global checkpoint update test fails without additional call replicationtrackerupdateglobalcheckpointonprimary removing allocation id pending set replicationtrackermarkallocationidasinsyncstring long even call added notifying waiters replicationtrackerupdatelocalcheckpointstring long interruptedexception main test thread interrupted waiting brokenbarrierexception barrier broken main test thread waiting
resets checkpoint specified value checkpoint local checkpoint reset tracker
moves checkpoint last consecutively processed sequence number method assumes sequence number following current checkpoint processed
return bit set provided sequence number possibly allocating new set needed seqno sequence number obtain bit set bit set corresponding provided sequence number
waits operations provided sequence number complete seqno sequence number checkpoint must advance method returns interruptedexception thread interrupted blocking condition
marks processing provided sequence number completed updates checkpoint possible seqno sequence number mark completed
initialize local checkpoint service maxseqno set last sequence number assigned sequencenumbersnoopsperformed localcheckpoint set last known local checkpoint sequencenumbersnoopsperformed maxseqno last sequence number assigned sequencenumbersnoopsperformed localcheckpoint last known local checkpoint sequencenumbersnoopsperformed
obtain position bit set corresponding provided sequence number bit set corresponding sequence number obtained via getbitsetforseqnolong seqno sequence number obtain position position bit set corresponding provided sequence number
constructs new analyzer component index name settings analyzer name indexsettings settings name index name analyzer name
returns injected name analyzer
returns registered charfilterfactory provider indexsettings registered charfilterfactory provider predefined name null charfilter registered charfilter global defined charfilter name indexsettings index settings charfilterfactory provider null
returns registered tokenizerfactory provider indexsettings registered tokenizerfactory provider predefined name null tokenizer registered tokenizer global defined tokenizer name indexsettings index settings tokenizerfactory provider null
returns settings groupname indexsettings default settings indexsettings index settings groupname tokenizertoken filterchar filter name settings
returns registered analyzer provider name null analyzer registered
creates indexlevel indexanalyzers registry using given index settings
returns registered tokenfilterfactory provider indexsettings registered tokenfilterfactory provider predefined name null tokenfilter registered tokenfilter global defined tokenfilter name indexsettings index settings tokenfilterfactory provider null
create preconfigured token filter may vary based lucene version
create preconfigured token filter may vary based elasticsearch version
create preconfigured token filter may vary all
create preconfigured token filter may vary all
null settings set settingsprefix return null illegalargumentexception reader instantiated
fetches list words specified settings file list either available key specified settingsprefix file specified settingsprefix path illegalargumentexception word list cannot found either key
create preconfigured token filter may vary based lucene version
create preconfigured token filter may vary based elasticsearch version
create preconfigured char filter may vary all
create preconfigured char filter may vary all provide access elasticsearch verison
create preconfigured tokenizer may vary based elasticsearch version name name tokenizer api create builds tokenizer multitermcomponent null tokenizer shouldnt used multiterm queries otherwise supplier tokenfilterfactory stands tokenizer multiterm queries
create preconfigured tokenizer may vary all name name tokenizer api create builds tokenizer multitermcomponent null tokenizer shouldnt used multiterm queries otherwise supplier tokenfilterfactory stands tokenizer multiterm queries
create preconfigured tokenizer may vary based lucene version name name tokenizer api create builds tokenizer multitermcomponent null tokenizer shouldnt used multiterm queries otherwise supplier tokenfilterfactory stands tokenizer multiterm queries
input source token stream collator collationkey generator
tests camelcase filter names snakecase filter names dont collide
constructor exists expose analyzers defined prebuiltanalyzers prebuiltanalyzerproviderfactory
returns number bytes required decode given char sequence encoded char sequence decoded offset initial offset length number characters number bytes required decode given char sequence
encodes input byte sequence output char sequence calling method ensure output array sufficient capacity calling getencodedlengthbyte int int inputarray byte sequence encoded inputoffset initial offset inputarray inputlength number bytes inputarray outputarray char sequence store encoded result outputoffset initial offset outputarray outputlength length output must getencodedlength
returns number chars required encode given bytes inputarray byte sequence encoded inputoffset initial offset inputarray inputlength number bytes inputarray number chars required encode number bytes
decodes input char sequence output byte sequence calling method ensure output array sufficient capacity calling getdecodedlengthchar int int inputarray char sequence decoded inputoffset initial offset inputarray inputlength number chars inputarray outputarray byte sequence store encoded result outputoffset initial offset outputarray outputlength length output must getdecodedlengthinputarray inputoffset inputlength
transcodes remaining parts string method operates sliding window looking 4 characters time i1 i i1 i2 prev previous character curr current character next next character anext next character transcoded array characters starting current position
retrieves nysiis code given string object str string encode using nysiis algorithm nysiis code string supplied
encodes object using nysiis algorithm method provided order satisfy requirements encoder interface throw encoderexception supplied object type string obj object encode object or string containing nysiis code corresponds given string encoderexception parameter supplied string illegalargumentexception character mapped
encodes string using nysiis algorithm str string object encode nysiis code corresponding string supplied illegalargumentexception character mapped
deletes index templates support wildcard notation template name passed method templates removed
deletes given indices tests cluster index name passed method indices removed
method executed test reset cluster initial state
wipes data test leave behind indices templates except exclude templates repositories
deletes repositories supports wildcard notation
removes templates except templates defined exclude
start indexing numofdocs number document index pausing set 1 limit
stop background threads
start indexing background using given number threads indexing paused numofdocs docs indexed index index name index type document type client client use numofdocs number document index pausing set 1 limit writercount number indexing threads use autostart set true start indexing soon threads created random random instance use
pausing indexing setting current document limit 0
sort versions backwards compatibility guarantees dont doesnt actually check whether versions released instead relies gradle already checked coreverifyversions long rules match rules gradle produce sensible results tuple containing versions backwards compatibility guarantees v1 versions without guranteees v2
returns random version minversion maxversion inclusive
returns random version available versions compatible given version
get released version versioncurrent
returns released version versioncurrent minor version less currents minor version
get released version version
returns first future compatible version
returns maximum version compatible given version
returns first future incompatible version
helper method return mapped random field
test adding additional object within object otherwise correct query always triggers kind parse exception specific objects cause exception hold arbitrary content declared overriding getobjectsholdingarbitrarycontent
call method check valid json string representing query test its generated json note time writing nov 2015 queries taken query dsl reference docs mirroring examples there heres queries generated take reference documentation example stick createparseablequeryjson method respective query test manually check querybuilder generates equals input json ignoring default options put manual checks assertqueryparsedfromjson method copy generated json including default options createparseablequeryjson roundtrip check json happy
checks result querybuildertoqueryqueryshardcontext given original querybuilder queryshardcontext verifies named queries boost properly handled delegates doassertlucenequeryabstractquerybuilder query searchcontext query specific checks
test wraps randomly generated query array follows queryname causes unexpected situations parser code may handled properly
generic test checks stringstostring method renders xcontent correctly
generic test creates new query test query checks equality asserts equality two queries
test ensures queries need rewritten dedicated tests queries must override method accordingly
helper method return random rewrite method
parses query provided bytes argument compares expected result provided argument querybuilder
traverses json tree valid query provided argument mutates one times adding one object within object encountered instance given following valid term query term field value foo following two mutations generated exception expected trying parse them term newfield field value foo term field newfield value foo every mutation added list results boolean flag indicating parsing exception expected mutation specific objects cause exception hold arbitrary content passed using arbitrarymarkers parameter
create random value either abstractquerytestcasebooleanfieldname abstractquerytestcaseintfieldname abstractquerytestcasedoublefieldname abstractquerytestcasestringfieldname abstractquerytestcasedatefieldname string value default
test serialization deserialization test query
test creates query querybuilder test delegates assertions made result implementing subclass
test unknown field trigger parsingexception find right position root query add marker queryname query builders support added bogus field trigger exception queries allow arbitrary field names level need override test
parses query provided string argument compares expected result provided argument querybuilder
serialize given query builder asserts equal
generic test creates new instance test instance checks equality asserts equality two queries
tests versionminimumcompatibilityversion versionutilsallreleasedversions agree list wire index compatible versions build gradle
set static default settings null prevent memory leak test framework also checks memory leaks computes size cause issues running security manager tries reflection protected sun packages
create new search context
create new index singleton node provided index settings
ensures cluster green state via cluster health api method also wait relocations useful ensure action cluster finished shards currently relocating allocated started timeout time value set orgelasticsearchactionadminclusterhealthclusterhealthrequest
helper method create list plugins without specifying generic types
create new index singleton node provided index settings
compare two maps
compare two values field name field compared
compare two lists
failure message
return instance unmapped field
random docvalueformat used aggregations compute numbers
return instance unmapped field
stops random node cluster applies given filter non non nodes applies filter
restarts node calls callback restart
restarts nodes rolling restart fashion ie restarts node time
returns transport client
builds new node given settings settings settings use defaultminmasternodes minmasternodes value use minmasternodes auto managed
returns random node applies given predicate predicate filter nodes based nodes settings nodes filtered method return null
returns node client given node
stops current nodes master node
builds new node default settings defaultminmasternodes minmasternodes value use minmasternodes auto managed
rebuilds new node object using current node settings starts
ensures least n data nodes present cluster nodes n present method stop running nodes
ensures n running less nodes n running method start additional nodes
returns set nodes least one shard given index
ensure cluster formed published nodes
returns node client random node master method fail nonmaster client available
returns node client data node cluster note use care tests rely certain nodes client
stops random data node cluster returns true node found stop false otherwise
restarts random node cluster calls callback restart
updates min master nodes setting current running cluster eligiblemasternodecount number master eligible nodes use basis min master node setting
ensure cluster formed published nodes using client specified node
returns client coordinating node
returns node client current master node note use care tests rely certain nodes client
returns suffix string based node role explicit role defined suffix empty
stops current master node forcefully
builds new node nodeid node internal id see nodeandclientnodeandclientid seed nodes random seed settings settings use reuseexisting node name already part nodes new node built method return existing one defaultminmasternodes minmasternodes value use minmasternodes auto managed
starts multiple nodes given settings returns names
returns smart node client random node cluster
closes current node already closed builds new node object using current node settings starts
returns name current master node cluster executes request via node specified vianode parameter vianode isnt specified random node picked send request to
returns iterable instances given class t across nodes cluster
restarts nodes cluster first stops nodes restarts nodes again
asserts testinstance correctly
simulates sending diffs wire
asserts changes applied correctly ie applying diffs localinstance produces object equal remotechanges instance
tests making random changes object calculating diffs changes sending diffs wire appling diffs side
creates new orgelasticsearchtestnodeconfigurationsource security configuration numofnodes number nodes proper unicast configuration can actually available sslenabled whether ssl enabled parentfolder parent folder contain configuration files need created scope scope test requiring instance securitysettingssource
returns ssl related configuration settings given location key certificate location pem certificates trusted keypath path private key used ssl password password private key protected certificatepath path pem formatted certificate encapsulating public key corresponds private key specified keypath presented incoming ssl connections trustedcertificates list pem formatted certificates trusted
tests equals hashcode methods consistent copied versions instance equal
test serialization deserialization test instance
generic test creates new instance test instance checks equality asserts equality two queries
corrupts random file random position
fail process provided message
fail process didnt detect particular violation named look like junit assertion even though isnt similar enough
make sure query names unique suffixing increasing counter
returns tuple contains randomized shardinfo value left side corresponding value right side printed toxcontent parsed back using parsing method like shardinfofromxcontentxcontentparser withshardfailures parameter indicates randomized shardinfo must must contain shard failures random random generator withshardfailures indicates generated shardinfo must contain shard failures
returns tuple containing random stored field values corresponding expected values printed via orgelasticsearchcommonxcontenttoxcontenttoxcontentxcontentbuilder toxcontentparams parsed back via orgelasticsearchcommonxcontentxcontentparserobjecttext generates values based get printed out stored fields values retrieved lucene converted via orgelasticsearchindexmappermappedfieldtypevaluefordisplayobject either strings numbers booleans random random generator xcontenttype content type used determine expected values float numbers
returns tuple contains randomized failure value left side corresponding value right side printed toxcontent parsed back using parsing method like shardinfofailurefromxcontentxcontentparser random random generator
randomly adds fields objects arrays provided builder maximum depth 5
returns random source given xcontenttype containing random number fields objects array maximum depth 5 minimum number fields per object provided argument random random generator
returns random source containing random number fields objects array maximum depth 5 random random generator
method takes input xcontent data adds random field value inner object array json object eg used test parsers handle resulting xcontent handle augmented xcontent correctly example testing lenient parsing xcontent output contains objects skipped treatment optional filtering predicate supplied checks xcontent paths excluded treatment predicate check xcontent path want insert return true path excluded paths string concatenating field names array indices eg in foo1 bar baz insert foo1bar2baz would point desired insert location exclude inserting foo1 object would user predicate like path pathendswithfoo1 dont want random insertions foo1 tree could use path pathcontainsfoo1
utility method takes xcontentparser walks xcontent structure find possible paths new object array starts used tests add random xcontent values test parsing code errors check robustness new fields path uses separated fieldnames numbers array indices similar objectpath stack passed initially empty gets pushed recursive calls example following json xcontent foo bar foo1 1 foo2 baz 3 4 foo3 foo4 foo5 buzz would return following list the empty string path root object foo11 foo3 foo3foo4
inserts keyvalue pairs xcontent passed bytesreference returns new xcontentbuilder paths argument uses separated fieldnames numbers array indices similar objectpath keyvalue arguments suppliers either return fixed random values
perform common equality hashcode checks input object original object test copyfunction function creates deep copy input object mutationfunction function creates copy input object different input one aspect output call used check equal input object
returns instance restclient pointing current test cluster creates new client method invoked first time context current test scope returned client gets automatically closed needed shouldnt closed part tests otherwise cannot reused tests anymore
verifies nodes version cluster state master cluster state
sets unsets cluster readonly mode
clears given scroll ids
waits relocations force merge indices cluster 1 segment
waits mappings provided fields exist nodes note waits current started shards checks concrete mappings
prints segments info given indices debug logging
sets clusters minimum master node make sure response acknowledge note doesnt guarantee new setting taken effect received nodes
returns settings object used createindexstring preparecreatestring friends method overwritten subclasses set defaults indices created test default returns settings object sets random number shards number shards replicas controlled specific methods
ensures cluster searchable state given indices means searchable copy shard available cluster
creates randomized index template template used pass randomized settings per index basis allows enabledisable randomization number shards replicas
returns path random directory used create temporary file system repo
asserts shards allocated nodes matching given node pattern
enables index block specified index
waits least give number document visible searchers numdocs number documents wait indexer orgelasticsearchtestbackgroundindexer supplied first checked documents indexed saves unneeded searches actual number docs seen
indexes given indexrequestbuilder instances randomly shuffles given builders either indexes blocking async fashion useful catch problems relate internal document ids index segment creations features might bug given document first last segment one document segment etc method prevents issues like randomizing index layout forcerefresh true involved indices refreshed documents indexed dummydocuments true empty dummy documents may randomly inserted document list deleted documents indexed useful produce deleted documents server side maybeflush true method may randomly execute full flushes index operations builders documents index
waits least give number document visible searchers numdocs number documents wait maxwaittime progress made time fail test maxwaittimeunit unit maxwaittime specified indexer orgelasticsearchtestbackgroundindexer supplied first checked documents indexed saves unneeded searches actual number docs seen
flush indices cluster
flushes refreshes indices cluster
waits given mapping type exists master node
creates new createindexrequestbuilder settings obtained indexsettings index created builder allowed allocate number nodes passed method method uses allocation deciders filter certain nodes allocate created index on defines allocation rules based indexroutingallocationexcludename
return mock plugins cluster use
ensures result counts expected logs results different
creates one indices asserts indices acknowledged one indices already exists method fail wipe indices created far
syntactic sugar disabling allocation indices
method used obtain settings nth node cluster nodes cluster associated ordinal number nodes started specific configurations method might called multiple times ordinal expected return value invocation words subclasses must ensure method idempotent
asserts segments sorted provided sort
waits relocating shards become active cluster reached given health status using cluster health api
returns path random directory used create temporary file system repo
tests client transport client wraps transport client client client test true client transport client wrapped transport client
waits relocations refreshes indices cluster waitforrelocation
prints current cluster state debug logging
maybe refresh force merge flush always make sure arent many flight async operations
disables index block specified index
remove customs except customs know clients understand clusterstate cluster state remove possiblyunknown customs cluster state possiblyunknown customs removed
waits nodes pending tasks
returns transport client ratio class level annotation via systemgetpropertystring available available return random ratio interval 01
restricts given index allocated n nodes using allocation deciders yet shards cant allocated node shards index remain allocated n nodes
returns client ratio configured via
syntactic sugar enabling allocation indices
returns true iff given index exists otherwise false
set static default settings null prevent memory leak test framework also checks memory leaks computes size cause issues running security manager tries reflection protected sun packages
creates indices provided argument randomly associating aliases indexes one dummy document per index refreshes new indices
generic test creates new instance test instance checks equality asserts equality two instances
randomly shuffles fields inside objects xcontentbuilder passed in recursively goes inner objects also shuffles them exceptions recursive shuffling behavior made passing names fields internally stay untouched
asserts files specified path
returns bytes represent xcontent output provided toxcontent object using provided xcontenttype wraps output new anonymous object according value returned toxcontentisfragment method returns shuffles keys make sure parsing never relies keys ordering
create copy original streamable object running bytesstreamoutput reading using provided writeablereader stream wrapped around streaminput potentially need use namedwriteableregistry needs provided although empty object streamed doesnt contain namedwriteable objects itself
creates testanalysis default analyzers configured
creates indicesmodule testing given mappers metadata mappers
long 0 longmaxvalue inclusive chosen uniformly random
returns random number temporary paths
assert two objects equals calling toxcontenttoxcontentxcontentbuilder toxcontentparams print differences arent equal
runs code block provided interval waiting assertions trip
helper method create byte array given length populated random byte values randombyte
randomly shuffles fields inside objects parsed using xcontentparser passed in recursively goes inner objects also shuffles them exceptions recursive shuffling behavior made passing names fields internally stay untouched
copywriteablewriteable namedwriteableregistry writeablereader also allows provide version argument used write read back object
compares two stack traces ignoring module which yet serialized
create copy original writeable object running bytesstreamoutput reading using provided writeablereader stream wrapped around streaminput potentially need use namedwriteableregistry needs provided although empty object streamed doesnt contain namedwriteable objects itself
builds set unique items usually youll get requested count might get less number supplier returns lots repeats make sure items properly implement equals hashcode
helper get random value certain range thats different input
creates testanalysis default analyzers configured
returns javaniofilepath pointing class path relative resource given first argument contrast getclassgetresourcegetfile method return url encoded paths parent path contains spaces nonstandard characters
returns bytes represent xcontent output provided toxcontent object using provided xcontenttype wraps output new anonymous object according value returned toxcontentisfragment method returns shuffles keys make sure parsing never relies keys ordering
compares two stack trace elements ignoring module which yet serialized
create new xcontentparser
returns size random values
creates testanalysis default analyzers configured
return consistent index settings provided index version
reset deprecation logger removing current thread context setting new thread context setnewthreadcontext set true otherwise clearing current thread context setnewthreadcontext whether attach new thread context deprecation logger
helper randomly perform consumer value
returns double value interval start end lowerinclusive set true start end otherwise start lower bound interval draw uniformly distributed random numbers end upper bound lowerinclusive whether include lower end interval
returns size random values
manually add specific shard allocations gateway keeps track
helper method return first 20 chars requests body response mockresponse inspect returns first 20 chars empty string response body configured
closes webserver also tries stop currently sleeping requests first counting respective latches
creates mockrequest incoming http request later checked test assertions
adds response response queue used request comes note every response processed response created mock response
instantiates webserver https sslcontext ssl context used encryption needclientauth clientauth used requires client side certificate
starts webserver binds arbitrary ephemeral port webserver able serve requests method returns ioexception case binding io errors
sleep specified amount time time value null
adds new header headers object name name header value value header
adds new header response name header name value header value updated mock response
statuscode status code returned response sent webserver defaults 200 updated mock response
timevalue allows specify delay anything sent back client updated mock response
body body returned response sent webserver updated mock response
timevalue allows specify delay sending headers body inject artificial latency updated mock response
returns closeaction execute actual engine note method changes state first call treats subsequent calls engine passed already closed
obtain logging levels test logging annotation testlogging test logging annotation map logger name logging level
reset logging levels state provided map map logging levels apply empty map
obtain logger given name loggername logger obtain logger
applies test logging annotation returns existing logging levels testlogging test logging annotation apply existing logging levels
append single vm option
creates random shape useful randomized testing note exercise caution using build random geometrycollections creating large random number random shapes result massive resource consumption see geoshapequeryteststestshapefilterwithrandomgeocollection following options included nearpoint create shape near provided point within create shape within provided rectangle note null override provided point st create random shape provided type shapebuilder random shape
puts longitude range 180 180
puts latitude range 90 90
assert index template missing
compares two objects recursively walking eventual maps lists encountered using arrays comparisons byte arraysequalsbyte byte
check directory exists
assert index template exists
assert index creation fully acknowledged meaning index creation cluster state update successful requisite number shard copies started returning
asserts provided bytesreferences created orgelasticsearchcommonxcontenttoxcontenttoxcontentxcontentbuilder toxcontentparams hold content comparison done parsing map comparing two keys ordering doesnt matter also binary values byte properly compared arrays comparisons
applies basic assertions searchresponse method checks shards successful shards threw exception response serializable
compares two maps recursively using arrays comparisons byte arraysequalsbyte byte
assert suggestion returns size suggestions first provided text
checks shard requests replicated broadcast request failed due cluster block replicatedbroadcastresponse response contain failed shard responses
compares two lists recursively using arrays comparisons byte arraysequalsbyte byte
run futureactionget check throws exception right type optionally checking exceptions rest status exceptionclass expected exception class status orgelasticsearchrestreststatus check for null disable check extrainfo extra information add failure message null
executes request fails request blocked specific clusterblock builder request builder expectedblock expected block
remove cluster settings
used obtain settings rest client used send rest requests
checks specific index green force selection index tests share cluster often leave indices non green state index index test
convert entity response map maps
template one automatically created xpack
waits shard initialization completed handy alternative ensuregreen relates shards cluster doesnt require know many nodesreplica are
waits cluster state updates processed cluster state updates still inprogress next test starts
clean test case
cluster tested xpack installed
logs message still running tasks reasoning tasks still running state trying bleed tests
wipe fs snapshots created one one repositories next test create repositories fresh theyll start empty isnt api delete snapshots api delete snapshot repositories leaves snapshots intact repository
tells whether particular key needs looked stash based name returns true string representation key starts false otherwise stash contains fields eventually extracted previous responses reused arguments following requests eg scrollid
goes recursively map entry replaces string value starting corresponding value retrieved stash
lookup value stash adding support special key path returns string location path object currently unstashed useful documentation testing
allows saved specific field stash keyvalue pair
retrieves value current stash stash contains fields eventually extracted previous responses reused arguments following requests eg scrollid
constructs new blacklistedpathpatternmatcher instance provided suffix pattern p suffix pattern must nonempty string
create new xcontentbuilder xcontent object underlying objectpath works objectpath instances created xcontent object nested substructures throw unsupportedoperationexception cases
returns object corresponding provided path present null otherwise
calls elasticsearch api parameters request body provided arguments saves obtained response execution context
calls elasticsearch api parameters request body provided arguments saves obtained response execution context
clears last obtained response stashed fields
calls api provided parameters body
returns body string
returns body properly parsed depending content type might string json object parsed map
get list values warning headers returned response
parses response body extracts specific value identified provided path
sniff cluster host metadata return restclientbuilder client metadata
create parameters parameterized test
execute executablesection careful log place origin failure
add single suite file set suites
tells whether features provided argument supported
parses complete set rest spec available provided directories
finds matching rest paths available ones current api based rest spec best path one exactly number placeholders replace eg indextypeid path params exactly index type id
returns supported http methods given rest parameters provided
finds best matching rest path given current parameters replaces placeholders corresponding values received arguments
parse teardownsection next field skip otherwise returns teardownsectionempty
check response contains warning headers expect
parse skipsection next field skip otherwise returns skipsectionempty
parse setupsection next field skip otherwise returns setupsectionempty
opens httpserver start listening random port
returns error message form stack traces emitted throwableprintstacktrace
checks gc disruption never blocks threads something unsafe keep retrying threads safely paused
ensures cluster healthy disruption
ensures nodes cluster connected other network disruptions may leave nodes master disconnected other orgelasticsearchclusternodeconnectionsservice eventually reconnect its handy able ensure happens faster
applies action disrupted links two sets nodes
delays requests random fixed time value delaymin delaymax random instance use randomization delay delaymin minimum delay delaymax maximum delay
resolves threads belonging given node suspends current stack trace safe threads added nodethreads suspended returns true live threads found caller expected call method live found
simulate remote error given requestid wrapped remotetransportexception requestid id corresponding captured send request failure wrap
returns requests captured far method clear captured requests list want captured requests list cleared use capturedrequests captured requests
returns requests captured far grouped target node method clear captured request list want captured requests list cleared use capturedrequestsbytargetnode captured requests grouped target node
simulate local error given requestid wrapped sendrequesttransportexception requestid id corresponding captured send request failure wrap
clears rule associated provided delegate service
build service clustersettings non null plain transportservice register clustersettings settings updates tracelogexcludesetting tracelogincludesetting
adds rule cause every send request fail new connect since rule added fail well
adds rule cause matching operations throw connecttransportexceptions
adds rule cause ignores send request simulating unresponsive node failing connect rule added
adds rule cause matching operations throw connecttransportexceptions
adds new connect behavior used creating connections given delegate service true send behavior registered addresses bound delegate service
adds new send behavior used communication given delegate service true send behavior registered addresses bound delegate service
clears rule associated provided delegate address
clears registered rules
adds node connected behavior used given delegate service true node connected behavior registered addresses bound delegate service
adds rule cause ignores send request simulating unresponsive node failing connect rule added duration amount time delay sending connecting
adds rule cause every send request fail new connect since rule added fail well
adds new get connection behavior used communication given delegate service true get connection behavior registered addresses bound delegate service
adds rule cause ignores send request simulating unresponsive node failing connect rule added
build service clustersettings non null plain transportservice register clustersettings settings updates tracelogexcludesetting tracelogincludesetting
adds rule cause ignores send request simulating unresponsive node failing connect rule added duration amount time delay sending connecting
adds random non existing field provided document associates provided value field added random position within document necessarily top level using leaf field name
returns random leaf field name
returns random field name leaf field name path refer field name using notation
generates document holds random metadata document provided map argument
checks whether provided field name safely added provided document provided field name holds path using notation make sure node tree either doesnt exist map otherwise new fields cannot added
returns randomly selected existing field name fields contained document provided argument
helper method assert equivalence two ingestdocuments doca first document compare docb second document compare
returns value contained document provided path byte array path value string base64 decode operation happen path value byte array returned path path within document dotnotation ignoremissing flag determine whether throw exception path found document byte array provided path existing illegalargumentexception path null empty invalid field doesnt exist field found provided path expected type
sets provided value provided path document non existing path element created last element list value replace existing list fieldpathtemplate resolves path dotnotation within document valuesource value source produce value put path key illegalargumentexception path null empty invalid value cannot set item identified provided path
constructor needed testing allows create new ingestdocument given provided elasticsearch metadata source ingest metadata needed ingest metadata initialized current timestamp init time makes equality comparisons impossible tests
returns value contained document provided path path path within document dotnotation clazz expected class field value ignoremissing flag determine whether throw exception path found document value provided path existing null otherwise illegalargumentexception ignoremissing false path null empty invalid field doesnt exist field found provided path expected type
thing extractmetadata mutate map
appends provided value provided path document non existing path element created path identifies list value appended existing list path identifies scalar scalar converted list provided value added newly created list supports multiple values provided forms list case values appended existing or newly created list fieldpathtemplate resolves path dotnotation within document valuesource value source produce value values append existing ones illegalargumentexception path null empty invalid
removes field identified provided path path path field removed illegalargumentexception path null empty invalid field doesnt exist
checks whether document contains value provided path path path within document dotnotation failoutofrange whether throw illegalargumentexception array accessed outside range true document contains value field false otherwise illegalargumentexception path null empty invalid
one time operation extracts metadata fields ingest document returns them metadata fields used accessible ordinary top level fields removed part call
returns value contained document provided path path path within document dotnotation clazz expected class field value value provided path existing null otherwise illegalargumentexception path null empty invalid field doesnt exist field found provided path expected type
read stream
read stream
optional version stored pipeline used determine pipeline updated replaced null supplied
optional description pipeline data gets processed pipeline
deletes pipeline specified id request
stores specified pipeline definition request
returns removes specified property specified configuration map property value isnt type string elasticsearchparseexception thrown property missing elasticsearchparseexception thrown
returns removes specified property specified configuration map property value isnt type string int elasticsearchparseexception thrown property missing default value specified elasticsearchparseexception thrown
returns removes specified property type list specified configuration map property value isnt type list elasticsearchparseexception thrown property missing elasticsearchparseexception thrown
returns removes specified property type list specified configuration map property value isnt type list elasticsearchparseexception thrown
returns removes specified property type map specified configuration map property value isnt type map elasticsearchparseexception thrown property missing elasticsearchparseexception thrown
returns removes specified optional property specified configuration map property value isnt type string elasticsearchparseexception thrown
returns removes specified property specified configuration map property value isnt type int elasticsearchparseexception thrown property missing elasticsearchparseexception thrown
returns removes specified property specified configuration map property value isnt type string elasticsearchparseexception thrown property missing default value specified elasticsearchparseexception thrown
returns removes specified property object specified configuration map
returns removes specified property type map specified configuration map property value isnt type map elasticsearchparseexception thrown
returns removes specified property specified configuration map property value isnt type string int elasticsearchparseexception thrown
read stream
parses tika throwing exception hit parsing document
dont silently dns lookups anything trappy bogus data
executes script ingest document context document ingest document passed script context ctx object
processor evaluates script ingest document context tag processors tag script script execute scriptservice scriptservice used execute script
maintain compatibility logstashfilteruseragent
test tries simulate load creating index indexing documents index created
method sets context server socket channel context called new channel accepted exception occurs time close channel context call
method attempt complete connection process channel called new channels channel produced opconnect event method returns true connection complete channel ready reads writes returns false channel yet connected method called opconnect event received true connection process complete ioexception io error occurs
method called events read write connect handled channel context handled
method handles exception uncaught select loop exception uncaught
method called niochannel registered selector called per channel context registered
method called niosocketchannel accepted receive opconnect event context registered
method handles closing niochannel context closed
create niogroup dedicated acceptors server channels handled group selectors dedicated accepting channels accepted channels handed nonserver selectors acceptorthreadfactory factory create acceptor selector threads dedicatedacceptorcount number dedicated acceptor selectors created selectorthreadfactory factory create nonacceptor selector threads selectorcount number nonacceptor selectors created eventhandlerfunction function creating event handlers ioexception occurs problem opening javanioselector
create niogroup dedicated acceptors server channels handled selectors handling child channels threadfactory factory create selector threads selectorcount number selectors created eventhandlerfunction function creating event handlers ioexception occurs problem opening javanioselector
returns boolean indicating operation fully flushed
method return array bytebuffer representing bytes index passed end buffer buffers duplicates internal buffers modifications markers bytebufferposition bytebufferlimit etc modify class index slice byte buffers
method release bytes head buffer release bytes past current index index truncated zero bytestorelease number bytes drop
method return array bytebuffer representing bytes beginning buffer index argument passed buffers duplicates internal buffers modifications markers bytebufferposition bytebufferlimit etc modify class index slice byte buffers
method return array page representing bytes beginning buffer index argument passed pages buffers duplicates internal components modifications markers bytebufferposition bytebufferlimit etc modify class additionally internally retain underlying pages pages returned method must closed index slice pages
method cleans context resources need released channel closed called selector thread ioexception channel context close
executes failed listener consistent exception handling called current selector thread listener executed exception provide listener
queues write operation directly channels buffer channel pending writes already channel flushed channel buffers safe accessed selector thread result method called selector thread channel pending writes already channel flushed writeoperation queued channels buffer
executes success listener consistent exception handling called current selector thread listener executed value provide listener
called immediately prior raw selectorselect call used implement channel registration handling queued writes work specifically processing selection key
starts selector selector run close called
queues write operation handled event loop called thread api available nonselector threads schedule writes writeoperation queued
convenience method called object normally channels enqueued selector method check selector still open open normal operation proceed selector closed attempt remove object queue removal succeeds throw illegalstateexception indicating normal operation failed object cannot removed queue object already handled selector operation proceed normally method called selector thread allow queuing occur selector thread manipulate queues internally even longer open queue queue object added objectadded objected added object type
schedules niochannel registered selector channel queued eventually registered next time event loop channel register
rethrows first exception list adds remaining suppressed list given list empty exception thrown
indexes document index docid concurrently updates document nupdates times document version updates
gets attributes supported filesystems
gets owner file way supported filesystems concept file owner
gets attributes supported posix filesystems
schedules oneshot command run given delay command run context calling thread preserve context calling thread may call threadpoolgetthreadcontextpreservecontext runnable passing method delay delay task executes executor name thread pool execute task means execute scheduler thread changes meaning scheduledfuture returned method case scheduledfuture complete command completes command command run scheduledfuture whos get return task added target thread pool throw exception task canceled added target thread pool task added target thread pool scheduledfuture cannot interact it orgelasticsearchcommonutilconcurrentesrejectedexecutionexception task cannot scheduled execution
returns true given service terminated successfully termination timed out service null method return false
get executorservice given name executor services executorexecuterunnable method run runnable given threadcontext thread queues it warning plain executorservice might throw rejectedexecutionexception submit task shutdown instead silently queue run it name name executor service obtain illegalargumentexception executor service specified name exists
returns true given pool terminated successfully termination timed out service null method return false
construct fixed executor builder settings nodelevel settings name name executor size fixed number threads queuesize size backing queue 1 unbounded prefix prefix settings keys
construct scaling executor builder settings specified key prefix name name executor core minimum number threads pool max maximum number threads pool keepalive time spare threads core threads kept alive prefix prefix settings keys
creates new rescheduling runnable schedules first execution occur interval specified runnable runnable executed periodically interval time interval executions executor executor runnable scheduled run scheduler scheduler instance use scheduling
returns implementation checks fixed interval threads invoked register unregister state longer specified max execution interval interrupts threads interval fixed interval check threads interrupt maxexecutiontime time thread execute operation relativetimesupplier supplier returns relative time scheduler scheduler able execute command fixed interval
checks whether patterns reference circular manner fail exception pattern anything considered reference another named pattern method navigate named patterns check circular reference
checks whether specific text matches defined grok expression text string match true grok expression matches text false otherwise
matches returns named captures within compiled grok expression matched within provided text text text match extract values from map containing field names respective coerced values matched
converts grok expression named regex expression named regex expression
use percolatequerybuilderstring bytesreference xcontenttype document content type avoid autodetection
creates percolator query builder instance percolating document remote index field field contains percolator query indexeddocumentindex index containing document percolate indexeddocumenttype type containing document percolate indexeddocumentid id document percolate indexeddocumentrouting routing value document percolate indexeddocumentpreference preference use fetching document percolate indexeddocumentversion expected version document percolate
sets name used identification purposes percolatordocumentslot response field multiple percolate queries specified main query
read stream
return extraction conjunction result1 result2 picking clauses look restrictive making unverified clause null doesnt match documents used 600 indices didnt use termsset query
extracts terms ranges provided query terms ranges stored percolator query used percolate querys candidate query fields query by candidate query holds terms document percolated allows percolate query ignore percolator queries know would otherwise never match extracting terms specified query also determine percolator query always going match example percolator query contains term query disjunction query candidate query matches that know entire percolator query always matches allows percolate query skip expensive memory index verification step would otherwise execute for example percolator query contains phrase query conjunction query query analyzer doesnt always extract terms specified query example boolean query clauses phrase queries longest term selected since terms likely rarest boolean querys mustnot clauses always ignored sometimes query analyzer cant always extract terms ranges sub query happens query analysis stopped unsupportedqueryexception thrown caller mark query way percolatorquery always verifies query memoryindex query query analyze indexversion create version index containing percolator queries
fails percolator contains unsupported query following queries supported 1 haschild query 2 hasparent query
dont want shuffle document field internally testfromxcontent even though documents would functionally same bytesreference representation isnt thats compare check equality original shuffled builder
return settings could used start node given zipped home directory
read stream
sets whether query builder ignore unmapped types and run matchnodocsquery place query throw exception type unmapped
test deserialization previous released versions
haschildquerybuilder random values place
read stream
sets whether query builder ignore unmapped types and run matchnodocsquery place query throw exception type unmapped
defines minimum number children required match parent considered match maximum number children required match parent considered match
read stream
sets whether query builder ignore unmapped types and run matchnodocsquery place query throw exception type unmapped
haschildquerybuilder random values place
test deserialization previous released versions
returns parent id field mapper associated parent name isparent true child name otherwise
returns parentjoinfieldmapper associated service null parentjoin field mapping
read stream
name name aggregation childtype type children documents
painlessexplainerror doesnt serialize headers still make it
interface ignores return value
lambda parameters shouldnt able mask variable already scope
interface ignores return value
tries catch different type exception
throws exception
catches superclass exception
catches exact exception
incrementing integer values
incrementing char values
incrementing def values
incrementing short values
incrementing double values
incrementing byte values
incrementing float values
incrementing long values
adds new synthetic method written must analyzed
adds new constant initializer written
headers added scriptexception structured rendering
binary compound prefix explicit cast
test without cast fail conversions would narrow
binary operators adopt return value
shift operators dont yet adopt return value compound assignment
unary operator explicit cast
binary operators dont yet adopt return value compound assignment
test even cast things arent allowed
currently adopt argument value issue separate cast
test even cast things arent allowed stuff methodhandles explicitcastarguments would otherwise allow
unary operators adopt return value
binary operators explicit cast
binary operators dont yet adopt return value compound assignment
test without cast fail conversions would narrow
shift compound assignment explicit cast
shift operators explicit cast
shift operators adopt return value
binary compound assignment explicit cast
binary operators dont yet adopt return value compound assignment
binary compound postifx explicit cast
ctor params
test scriptstack looks good implication tests build proper line numbers stack trace line numbers really 1 based character numbers
makes sure present useful error message misplaced rightcurly important funky things parser rightcurly brackets allow statements delimited end blocks
constructor settings settings initialize engine with
generates stateful factory class return script instances acts middle man scriptcontextfactoryclazz scriptcontextinstanceclazz used stateless factory used caching stateful factory act cache new script instances uses newinstance method scriptcontextstatefulfactoryclazz define factory method create new instances scriptcontextinstanceclazz loader classloader used define factory class script class context scriptcontexts semantics used define factory class factory class factory class return script instances
get type names language always contains single name language
generates factory class return script instances stateful factories uses newinstance method scriptcontextfactoryclazz define factory method create new instances scriptcontextinstanceclazz uses newfactory method create new factories scriptcontextstatefulfactoryclazz loader classloader used define factory class script class context scriptcontexts semantics used define factory class classtype type instaniated newfactory newinstance method depends whether scriptcontextstatefulfactoryclazz specified factory class factory class return script instances
creates constantcallsite
links delegate method returned callsite linked delegate method use converted types interface method using invokedynamic make delegate method call allows methodhandleastype used type conversion instead either lot code requiring many classes looked linktime
generates lambda class lambda functionmethod reference within painless script variables prefix interface considered represent values code generated lambda class variables prefix delegate considered represent values code generated within painless script interface method delegates calls delegate method lookup standard methodhandleslookup interfacemethodname name functional interface method called factorymethodtype type method linked callsite note captured types based parameters method interfacemethodtype type method representing functional interface method delegateclassname name class delegate method call delegateinvoketype type method call made static virtual interface constructor delegatemethodname name method called painless script class delegatemethodtype type method call painless script class without captured types isdelegateinterface method called owned interface value 1 delegate interface 0 otherwise note int bootstrap method cannot convert constants boolean callsite linked factory method creating lambda class implements expected functional interface lambdaconversionexception thrown illegal type conversion occurs link time
validates conversions link time currently ensures lambda method return value cannot delegate delegate method return type
defines class lambda class using compilerloader originally defined class painless script
generates factory method delegate constructors
creates classwriter used lambda class generation
generates member fields captured variables based parameters factory method array captured variable metadata generating method arguments later
converts incoming parameters name type descriptor captured argument count captured argument count type class type captured argument
generates interface method delegate call delegate method invokedynamic using delegatebootstrap type converter
creates constantcallsite return instance generated lambda class every time linked factory method called
generates constructor take captured arguments store respective member fields
creates scriptimpl previously compiled painless script script previously compiled painless script vars initial variables run script with lookup lookup allow search fields available run search script
writes dynamic binary instruction returntype lhs rhs different
encodes offset line number table offset 1 invoked instructions hit exceptions
marks new statement boundary invoked statement boundary leaf s nodes
starts new string concat size arguments pushed stack the object string concats eg stringbuilder
proxy box method use valueof instead ensure modern boxing methods used
writes dynamic call def method name method name methodtype callsite signature flavor type call params flavorspecific parameters
writes static binary instruction
declaring variables primitive types
test boxed def objects various places
simple tests returning constant value
check see class already loaded painlesslookup initially created allows whitelisted classes loaded modulesplugins without direct relationship modulesplugins classloader
standard constructor scriptclass classinterface script implement factoryclass optional classinterface create scriptclass instance statefulfactoryclass optional classinterface create factoryclass instance painlesslookup whitelist script use
runs twopass compiler generate painless script loader classloader used define script name name script source source code script settings compilersettings used compilation executable script implements specified interface subclass painlessscript
runs twopass compiler generate painless script used debugger source source code script settings compilersettings used compilation bytes compilation
called new type encountered cached type match case revert generic slower operator handling
invokedynamic bootstrap method addition ordinary parameters also take parameters defined call site initialdepth initial call site depth used exercise megamorphic fallback flavor type dynamic call and part whitelist look at args flavorspecific args take painlesslookup used compile script whitelist checking see httpsdocsoraclecomjavasespecsjvmsse7htmljvms6htmljvms65invokedynamic
creates methodhandle megamorphic call site using classvalue methodhandlesexactinvokermethodtype
called new type encountered or encountered maxdepth types call site given caching using fallback switch megamorphic cache using classvalue
slow lookup operator
slow lookup whitelist
create new constant location location script creating type type constant name name constant initializer code initialize constant called generating clinit method expected leave value constant stack generating load instruction managed caller
creates new lambda scope inside current scope like newfunctionscope except captured parameters made readonly
creates new main method scope
creates new function scope inside current scope
creates new program scope list methods parent methods
returns toplevel program scope
creates new variable throws iae variable already defined even parent reserved
looks variable scope only returns null variable exist
defines variable scope internally
checks variable exists not scope parents
accesses variable throw iae variable exist
create new locals specified return type
creates new local variable scope eg loop inside current scope
hack rethrow unknown exceptions methodhandleinvokeexact
looks handle dynamic field getter field load dynamic field load variable x type def looks like y xfield following field loads allowed whitelisted field receivers class superclasses whitelisted method named getfield receivers classsuperclassesinterfaces whitelisted method named isfield receivers classsuperclassesinterfaces the length field array the value corresponding map key named field receiver map the value list element field integer receiver list method traverses recieverclasss class hierarchy including interfaces finds matching whitelisted getter one found throws exception otherwise returns handle matching getter painlesslookup whitelist receiverclass class object retrieve field from name name field pointer matching field never returns null illegalargumentexception matching whitelisted field found
returns method handle iteration for enhanced loop receiverclass class array load value methodhandle accepts receiver first argument returns iterator
returns implementation interfaceclass calls receiverclassname like lambdametafactory dynamic type interface type known simply need lookup matching implementation method based receiver type
returns method handle normalize index array makes lists arrays stored def support negative offsets receiverclass class array store value methodhandle accepts receiver first argument index second argument returns normalized index use array loads array stores
returns method handle array store receiverclass class array store value methodhandle accepts receiver first argument index second argument value set 3rd argument return value undefined ignored
returns method handle array load receiverclass class array load value methodhandle accepts receiver first argument index second argument returns loaded value
returns method handle implementation clazz given method reference signature
looks handle dynamic field setter field store dynamic field store variable x type def looks like xfield y following field stores allowed whitelisted field receivers class superclasses whitelisted method named setfield receivers classsuperclassesinterfaces the value corresponding map key named field receiver map the value list element field integer receiver list method traverses recieverclasss class hierarchy including interfaces finds matching whitelisted setter one found throws exception otherwise returns handle matching setter painlesslookup whitelist receiverclass class object retrieve field from name name field pointer matching field never returns null illegalargumentexception matching whitelisted field found
looks handle dynamic method call lambda replacement dynamic method call variable x type def looks like xmethodargs method traverses recieverclasss class hierarchy including interfaces finds matching whitelisted method one found throws exception otherwise returns handle matching method painlesslookup whitelist methodhandleslookup callers lookup callsitetype callsites type receiverclass class object invoke method on name name method args bootstrap args passed callsite pointer matching method invoke never returns null illegalargumentexception matching whitelisted method found throwable method reference cannot converted functional interface
returns array length getter methodhandle given array type
compiles bytecode returns debugging output
test list method invocation
test loads stores map
test shortcut getters isxxxx
test loads stores list
test loads stores update script equivalent
checks b c parsed b c instead a b c nice first one needs one comparison a nonnull second one needs two
test revert megamorphic classvalue cache works expected
calls tostring integers twice
basic tests
checks specific exception class thrown boxed inside scriptexception returns it
compiles returns result script access vars compiletime parameters
uses debugger get bytecode output script compare expected bytecode passed string
uses debugger get bytecode output script compare expected bytecode pattern regular expression please try avoid
asserts scriptstack looks right
compiles returns result script access vars
script contexts used build script engine override customize script contexts available
returns appropriate method handle binary operator based promotion lhs rhs arguments
looks generic method dynamic cast receivers type compound assignment
slowly returns number o supporting dynamiccast
looks generic method dynamic cast specified type explicit assignment
slow dynamic cast casts value instance clazz based upon inspection lhs null cast takes place
forces cast class target only types differ
binary promotion
returns appropriate method handle unary shift operator based receiver lhs
unary promotion objects promoted object
slow dynamic cast casts returnvalue runtime type lhs based upon inspection lhs null cast takes place used generic fallback case compound assignment
check cant declare variable value really reserved
check cant write value readonly
check cant declare variable score really reserved
check cant write score readonly
check cant declare variable doc really reserved
check cant write doc readonly
check cant declare variable ctx really reserved
check cant write ctx readonly
creates new functionref resolve typecall whitelist painlesslookup whitelist script compiled localmethods userdefined synthetic methods generated directly script class location character number within script compiletime targetclass functional interface type implement typename left hand side method reference expression methodname right hand side method reference expression numberofcaptures number captured arguments
pick javadoc root painlessmethod
emit external link javadoc painlessfield root name root uri variable
document method
document constructor
emit external link javadoc painlessmethod root name root uri variable
anchor text painlessconstructor
emit external link javadoc painlessmethod root name root uri variable
emit painlessclass plain painlessclass primitive def emits name struct otherwise emits internal link name
pick javadoc root class
emit class type primitive array primitives emits name type otherwise emits internal link text
anchor text painlessclass
anchor text painlessfield
anchor text painlessmethod
returns true methods part runtime
adds stack trace useful information exceptions thrown painless script throwable build exception around generated scriptexception
create new location sourcename scripts name offset character offset script element
computes file name mostly important stacktraces
augments exception locations information
converts type unboxed type equivalent one exists based terminology specified part painlesslookuputility otherwise behaves identity function
converts canonical type name type based terminology specified part documentation painlesslookuputility since canonical class names subset canonical type names method safely convert canonical class name class well
checks type based terminology specified part painlesslookuputility available constant type true returned type constant type false otherwise
converts type canonical type name based terminology specified part documentation painlesslookuputility since classes subset types method safely convert class canonical class name well
converts type boxed type equivalent one exists based terminology specified part painlesslookuputility otherwise behaves identity function
converts type java type based terminology specified part painlesslookuputility type def class def array returned type equivalent object class object array otherwise behaves identity function
converts java type type based terminology specified part painlesslookuputility type object class object array returned type equivalent def class def array otherwise behaves identity function
converts list types list canonical type names string based terminology specified part documentation painlesslookuputility since classes subset types method safely convert list classes mixed list classes types list canonical type names string well
create cast original type boxed cast performed
create cast target type unboxed cast performed
create cast original type unboxed cast performed
create cast target type boxed cast performed
build tostring node optionally ends args arguments here usually function calls
build tostring expressions usually best use singlelinetostringobject multilinetostringcollection collection instead include name node default
zip two potentially uneven lists together tostring
handles writing byte code variablemethod chains given possibilities including string concatenation compound assignment regular assignment simple reads includes proper duplication chained assignments assignments also read from
standard constructor location used error tracking
inserts ecast nodes tree implicit casts also replaces nodes constant variable set nonnull value econstant new child node parent node calling method
constructor used variablemethod chains postfixes specified
writes function given classvisitor
constructor used variablemethod chains postfixes specified
writes opcodes flip negative array index meaning slots end array 0based one meaning slots start array
standard constructor location used error tracking
sums result iterable
counts number occurrences satisfy given predicate inside iterable
iterates iterable type passing item items index a counter starting zero given consumer
replace first match similar matcherreplacefirststring allows customize replacement based match
iterates collection transforming entry new value using function adding values specified collection
iterates collection calling given function item stopping first nonnull result found returning result results null defaultresult returned
iterates iterable passing item given consumer
finds first value matching predicate returns null
finds values matching predicate returns list
iterates map transforming items using supplied function collecting nonnull results
sorts map members groups determined supplied mapping function
iterates map passing item given consumer
used determine given predicate valid ie returns true items map
sorts iterable members groups determined supplied mapping function
splits items two collections based predicate first list contains items match closure expression second list dont
converts iterable collection returns original iterable already collection
iterates map transforming entry new value using function adding values specified collection
iterates contents iterable checks whether predicate valid least one element
sums result applying function item iterable
finds first entry matching predicate returns null
counts number occurrences satisfy given predicate inside map
concatenates tostring representation item iterable given string separator item
iterates map transforming entry new value using function returning list transformed values
converts iterable list returns original iterable already list
replace matches similar matcherreplaceallstring allows customize replacement based match
used determine given predicate valid ie returns true items iterable
iterates iterable transforming items using supplied function collecting nonnull results
iterates map calling given function item stopping first nonnull result found returning result results null defaultresult returned
iterates collection transforming entry new value using function returning list transformed values
finds values matching predicate returns map
standard constructor values must null
standard constructor values must null
standard constructor values must null
standard constructor values must null exception augmentedcanonicalclassname augmentedcanonicalclassname null unless method augmented described class documentation
standard constructor values must null
loads creates whitelist one many text files file paths passed array strings single class used load resources string path single text file classs classloader used lookup java reflection objects individual class constructor method field specified part whitelist text file single pass made file collect information class constructor method field validation done later point whitelists gathered merging takes place painless type name one following def painless dynamic type automatically included without need whitelisted fullyqualified java type name whitelisted java class equivalent name painless type name exception dollar symbols used part inner classes replaced symbols short java type name text final symbol specified java class short type java name may excluded using noimport token painless class parsing described later following parsed whitelist text file blank lines ignored parser comments may created starting pound symbol end newline ignored parser primitive types may specified starting class followed java type name opening bracket newline closing bracket final newline complex types may specified starting class followed fullyqualified java class name optionally followed noimport token opening bracket newline constructormethodfield specifications closing bracket final newline within complex type following may parsed constructor may specified starting opening parenthesis followed commadelimited list painless type names corresponding typeclass names equivalent java parameter types these must whitelisted well closing parenthesis newline method may specified starting painless type name return type followed java name method which also painless name method opening parenthesis commadelimited list painless type names corresponding typeclass names equivalent java parameter types these must whitelisted well closing parenthesis newline augmented method may specified starting painless type name return type followed fully qualified java name class augmented method part this class need whitelisted java name method which also painless name method opening parenthesis commadelimited list painless type names corresponding typeclass names equivalent java parameter types these must whitelisted well closing parenthesis newline a field may specified starting painless type name equivalent java type field followed java name field which painless name field newline note must onetoone correspondence painless type names java typeclass names painless type defined across multiple files java class same specified constructors methods fields merged single painless type painless dynamic type def used part constructor method field definitions appropriately parsed handled painless complex types must specified fullyqualified java class name method argument types method return types field types must specified painless type names def fullyqualified short described earlier following example used create single whitelist text file primitive types class int int complex types class mypackageexample noimport constructors int def def example def method example addint def int addexample example void example augmented example someotherclass subexample int def fields int value0 int value1 def value2
creates new instance consumer provided buffer limit
put watch cluster see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentwatcherapiputwatchhtml docs more request request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
deletes watch cluster see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentwatcherapideletewatchhtml docs more request request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
asynchronously put watch cluster see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentwatcherapiputwatchhtml docs more request request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
asynchronously deletes watch cluster see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentwatcherapideletewatchhtml docs more request request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
create random number headers generated header names either basename plus index exactly provided basename test also support multiple headers key different values
opens machine learning job asynchronously notifies listener completion open new job starts empty model open existing job recent model state automatically loaded job ready resume analysis left off new data received additional info see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentmlopenjobhtml request request containing jobid additional optional options options additional request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
deletes given machine learning job asynchronously notifies listener completion additional info see hrefhttpwwwelasticcoguideenelasticsearchreferencecurrentmldeletejobhtmlml delete job documentation request request delete job options additional request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
deletes given machine learning job additional info see hrefhttpwwwelasticcoguideenelasticsearchreferencecurrentmldeletejobhtmlml delete job documentation request request delete job options additional request options eg headers use requestoptionsdefault nothing needs customized action acknowledgement ioexception serialization issue sending request receiving response
opens machine learning job open new job starts empty model open existing job recent model state automatically loaded job ready resume analysis left off new data received additional info see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentmlopenjobhtml request request containing jobid additional optional options options additional request options eg headers use requestoptionsdefault nothing needs customized response containing job successfully opened not ioexception serialization issue sending request receiving response
creates new machine learning job asynchronously notifies listener completion additional info see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentmlputjobhtmlml put job documentation request request containing orgelasticsearchprotocolxpackmljobconfigjob settings options additional request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
creates new machine learning job additional info see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentmlputjobhtmlml put job documentation request putjobrequest containing orgelasticsearchprotocolxpackmljobconfigjob settings options additional request options eg headers use requestoptionsdefault nothing needs customized putjobresponse enclosed orgelasticsearchprotocolxpackmljobconfigjob object ioexception serialization issue sending request receiving response
parse get aliases response
wrap plain responseexception another one current stack trace used synchronous calls caller ends stack trace exception thrown
asynchronously deletes snapshot see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentmodulessnapshotshtml snapshot restore api elasticco deletesnapshotrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
gets status requested snapshots see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentmodulessnapshotshtml snapshot restore api elasticco snapshotsstatusrequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
asynchronously deletes snapshot repository see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentmodulessnapshotshtml snapshot restore api elasticco deleterepositoryrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
get snapshots see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentmodulessnapshotshtml snapshot restore api elasticco getsnapshotsrequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
deletes snapshot see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentmodulessnapshotshtml snapshot restore api elasticco deletesnapshotrequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
restores snapshot see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentmodulessnapshotshtml snapshot restore api elasticco restoresnapshotrequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
creates snapshot repository see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentmodulessnapshotshtml snapshot restore api elasticco putrepositoryrequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
asynchronously creates snapshot repository see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentmodulessnapshotshtml snapshot restore api elasticco putrepositoryrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
creates snapshot see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentmodulessnapshotshtml snapshot restore api elasticco
asynchronously restores snapshot see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentmodulessnapshotshtml snapshot restore api elasticco restoresnapshotrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
deletes snapshot repository see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentmodulessnapshotshtml snapshot restore api elasticco deleterepositoryrequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
asynchronously gets list snapshot repositories list repositories empty contains single element all registered repositories returned see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentmodulessnapshotshtml snapshot restore api elasticco getrepositoriesrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
verifies snapshot repository see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentmodulessnapshotshtml snapshot restore api elasticco verifyrepositoryrequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
asynchronously gets status requested snapshots see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentmodulessnapshotshtml snapshot restore api elasticco snapshotsstatusrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
asynchronously get snapshots see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentmodulessnapshotshtml snapshot restore api elasticco getsnapshotsrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
gets list snapshot repositories list repositories empty contains single element all registered repositories returned see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentmodulessnapshotshtml snapshot restore api elasticco getrepositoriesrequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
asynchronously verifies snapshot repository see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentmodulessnapshotshtml snapshot restore api elasticco verifyrepositoryrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
asynchronously creates snapshot see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentmodulessnapshotshtml snapshot restore api elasticco
asynchronously get existing pipeline see hrefhttpswwwelasticcoguideenelasticsearchreferencemastergetpipelineapihtml get pipeline api elasticco request request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
asynchronously delete existing pipeline see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentdeletepipelineapihtml delete pipeline api elasticco request request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
add pipeline update existing pipeline see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentputpipelineapihtml put pipeline api elasticco request request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
asynchronously simulate pipeline set documents provided request see hrefhttpswwwelasticcoguideenelasticsearchreferencemastersimulatepipelineapihtml simulate pipeline api elasticco request request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
asynchronously add pipeline update existing pipeline see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentputpipelineapihtml put pipeline api elasticco request request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
get existing pipeline see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentgetpipelineapihtml get pipeline api elasticco request request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
delete existing pipeline see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentdeletepipelineapihtml delete pipeline api elasticco request request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
simulate pipeline set documents provided request see hrefhttpswwwelasticcoguideenelasticsearchreferencemastersimulatepipelineapihtml simulate pipeline api elasticco request request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
checks given rest client provided default headers
asynchronously deletes license cluster options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
updates license cluster options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
asynchronously returns current license cluster cluster options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
deletes license cluster options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
asynchronously updates license cluster options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
converts entire response json string useful responses dont parse client side instead work string case license json
returns current license cluster options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
create plain request method http method endpoint path request without scheme host port prefix
add query string parameter name name url parameter must null value value url url parameter null parameter sent name rather namevalue illegalargumentexception parameter name already set
set portion http request elasticsearch manipulated without changing elasticsearchs behavior
set portion http request elasticsearch manipulated without changing elasticsearchs behavior
asynchronously fetch usage information xpack features cluster options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
fetch usage information xpack features cluster options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
asynchronously fetch information xpack cluster see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentinfoapihtml docs more request request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
fetch information xpack cluster see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentinfoapihtml docs more request request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
executes provided request using either sync method async variant provided functions
test cases retrieves six documents indexed checks prec10 calculation unlabeled documents treated relevant
test case checks default metrics registered usable
sets default request headers sent along request requesttime headers always overwrite default headers nullpointerexception defaultheaders header null
sets maximum timeout in milliseconds honour case multiple retries request defaultmaxretrytimeoutmillis specified illegalargumentexception maxretrytimeoutmillis greater 0
sets requestconfigcallback used customize http client configuration nullpointerexception requestconfigcallback null
creates new restclient based provided configuration
sets paths prefix every request used http client example set mypath client request become mypath endpoint essence every requests endpoint prefixed pathprefix path prefix useful elasticsearch behind proxy provides base path proxy requires paths start intended purposes supplied scenarios nullpointerexception pathprefix null illegalargumentexception pathprefix empty ends one
creates new builder instance sets hosts client send requests to illegalargumentexception nodes null empty
sets nodeselector used requests nullpointerexception provided nodeselector null
sets restclientfailurelistener notified request failure nullpointerexception failurelistener null
sets httpclientconfigcallback used customize http client configuration nullpointerexception httpclientconfigcallback null
test host selector real server and test happens calling
returns value first header specified name message one matching header message first element returned matching header message null returned
mocks synchronous request execution like executed elasticsearch
resthighlevelclient must declare following execution methods using protected modifier used subclasses implement custom logic
mocks asynchronous request execution calling mockperformrequestrequest method
asynchronously executes search using search scroll api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentsearchrequestscrollhtmlsearch scroll api elasticco searchscrollrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion use scrollasyncsearchscrollrequest requestoptions actionlistener instead
executes request using field capabilities api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentsearchfieldcapshtmlfield capabilities api elasticco fieldcapabilitiesrequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
get stored script id see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentmodulesscriptingusinghtml use scripts elasticco request request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
asynchronously executes multi search using msearch api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentsearchmultisearchhtmlmulti search api elasticco searchrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
pings remote elasticsearch cluster returns true ping succeeded false otherwise options request options eg headers use requestoptionsdefault nothing needs customized true ping succeeded false otherwise ioexception case problem sending request
executes request using explain api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentsearchexplainhtmlexplain api elasticco explainrequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
asynchronously deletes document id using delete api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentdocsdeletehtmldelete api elasticco deleterequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
asynchronously checks existence document returns true exists false otherwise see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentdocsgethtmlget api elasticco getrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
executes multi search using msearch api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentsearchmultisearchhtmlmulti search api elasticco multisearchrequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response use msearchmultisearchrequest requestoptions instead
asynchronously retrieves document id using get api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentdocsgethtmlget api elasticco getrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
asynchronously delete stored script id see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentmodulesscriptingusinghtml use scripts elasticco request request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
asynchronously executes request using multi search template api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentmultisearchtemplatehtmlmulti search template api elasticco
asynchronously executes search using search scroll api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentsearchrequestscrollhtmlsearch scroll api elasticco searchscrollrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
creates resthighlevelclient given low level restclient use perform requests list entries allow parse custom response sections added elasticsearch plugins constructor called subclasses case externally created lowlevel rest client needs provided consumer argument allows control needs done close method called also subclasses provide parsers custom response sections added elasticsearch plugins
executes request using search template api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentsearchtemplatehtmlsearch template api elasticco searchtemplaterequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
executes search using search scroll api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentsearchrequestscrollhtmlsearch scroll api elasticco searchscrollrequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response use scrollsearchscrollrequest requestoptions instead
executes multi search using msearch api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentsearchmultisearchhtmlmulti search api elasticco multisearchrequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
asynchronously updates document using update api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentdocsupdatehtmlupdate api elasticco updaterequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
asynchronously retrieves multiple documents id using multi get api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentdocsmultigethtmlmulti get api elasticco multigetrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
delete stored script id see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentmodulesscriptingusinghtml use scripts elasticco request request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
get cluster info otherwise provided sending http request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
asynchronously get stored script id see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentmodulesscriptingusinghtml use scripts elasticco request request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
asynchronously executes request using field capabilities api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentsearchfieldcapshtmlfield capabilities api elasticco fieldcapabilitiesrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
retrieves multiple documents id using multi get api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentdocsmultigethtmlmulti get api elasticco multigetrequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response use mgetmultigetrequest requestoptions instead
asynchronously executes request using ranking evaluation api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentsearchrankevalhtmlranking evaluation api elasticco rankevalrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
executes request using multi search template api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentmultisearchtemplatehtmlmulti search template api elasticco
clears one scroll ids using clear scroll api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentsearchrequestscrollhtmlclearscrollapi clear scroll api elasticco clearscrollrequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
executes request using ranking evaluation api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentsearchrankevalhtmlranking evaluation api elasticco rankevalrequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
executes search using search scroll api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentsearchrequestscrollhtmlsearch scroll api elasticco searchscrollrequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
asynchronously executes multi search using msearch api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentsearchmultisearchhtmlmulti search api elasticco searchrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion use msearchasyncmultisearchrequest requestoptions actionlistener instead
converts responseexception obtained low level rest client elasticsearchexception response body returned tries parse error returned elasticsearch response body returned anything goes wrong parsing error returns new elasticsearchstatusexception wraps original responseexception potential exception obtained parsing added returned exception suppressed exception method guaranteed throw exception eventually thrown parsing
loads returns namedxcontentregistryentry parsers provided plugins
asynchronously executes request using explain api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentsearchexplainhtmlexplain api elasticco explainrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
asynchronously index document using index api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentdocsindexhtmlindex api elasticco indexrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
asynchronously retrieves multiple documents id using multi get api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentdocsmultigethtmlmulti get api elasticco multigetrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion use mgetasyncmultigetrequest requestoptions actionlistener instead
asynchronously executes search using search api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentsearchsearchhtmlsearch api elasticco searchrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
deletes document id using delete api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentdocsdeletehtmldelete api elasticco deleterequest reuqest options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
asynchronously executes request using search template api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentsearchtemplatehtmlsearch template api elasticco
retrieves multiple documents id using multi get api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentdocsmultigethtmlmulti get api elasticco multigetrequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
asynchronously clears one scroll ids using clear scroll api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentsearchrequestscrollhtmlclearscrollapi clear scroll api elasticco clearscrollrequest reuqest options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
asserts provided plain exception contains method called somewhere stack normally case synchronous calls restclient performs synchronous calls performing asynchronous calls blocking current thread call returns take special care make sure caller shows exception use assertion make sure dont break special care
standard constructor
ensure indexrequests content type supported bulk api conforms current bulkrequests content type if its known time method get called indexrequests content type
returns contenttype given xcontenttype xcontenttype xcontenttype contenttype
remove method 70 needs tests then replaced testperformasyncwithunsupportedmethod
remove method 70 needs tests then replaced requesttests
remove method 70 needs tests then replaced requestteststestaddparameters
assert restclientselectnodes fails provided arguments message exception thrown failure
remove method 70 needs tests then replaced testperformasyncwithwrongendpoint
remove method 70 needs tests then replaced requestteststestconstructor
set httpasyncresponseconsumerfactory used create one httpasyncresponseconsumer callback per retry controls response body gets streamed nonblocking http connection client side
add provided header request
assert actual headers expected ones given original default request headers headers ignored instance case http client adding automatically defaultheaders default headers set rest client instance requestheaders request headers sent particular request actualheaders actual headers result provided default request headers ignoreheaders header keys ignored part default request headers yet part actual ones
end end test request response body exercises mock http client ability send back whatever body received
shutdown executor dont leak threads test runs
remove method 70 needs tests then replaced requestteststestaddparameters
prefer restclientperformrequestrequest
prefer restclientperformrequestrequest
verifies content httprequest thats internally created passed http client
end end test request response headers exercises mock http client ability send back whatever headers received
remove method 70 needs tests then replaced requesttests
end end test ok status codes
end end test error status codes cause exception thrown apart 404 head requests
asynchronously updates cluster wide specific settings using cluster update settings api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentclusterupdatesettingshtml cluster update settings api elasticco clusterupdatesettingsrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
get cluster wide settings using cluster get settings api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentclustergetsettingshtml cluster get settings api elasticco clustergetsettingsrequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
asynchronously get cluster health using cluster health api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentclusterhealthhtml cluster health api elasticco timeout occurred clusterhealthresponse istimedout true status reststatusrequesttimeout healthrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
updates cluster wide specific settings using cluster update settings api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentclusterupdatesettingshtml cluster update settings api elasticco clusterupdatesettingsrequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
asynchronously get cluster wide settings using cluster get settings api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentclustergetsettingshtml cluster get settings api elasticco clustergetsettingsrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
get cluster health using cluster health api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentclusterhealthhtml cluster health api elasticco timeout occurred clusterhealthresponse istimedout true status reststatusrequesttimeout healthrequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
constructor allows pass settings threadpool separately useful client proxy yet fully constructed ie dependencies available yet
build dead state host given previous dead state useful host failing before hence already failed one consecutive times failed attempts register longer wait retry host again minimum 1 minute for node failed created deadhoststatetimesupplier maximum 30 minutes for node failed 10 consecutive times previousdeadhoststate previous state host allows us increase wait till next retry attempt
build initial dead state host useful working host stops functioning needs marked dead first failure case host retried minute so timesupplier way supply current time allow unit testing
puts index template using index templates api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicestemplateshtml index templates api elasticco putindextemplaterequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
asynchronously refresh one indices using refresh api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicesrefreshhtml refresh api elasticco refreshrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
checks one aliases exist using aliases exist api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicesaliaseshtml indices aliases api elasticco getaliasesrequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request
splits index using split index api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicessplitindexhtml split index api elasticco resizerequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
asynchronously retrieve settings one indices see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicesgetsettingshtml indices get settings api elasticco getsettingsrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
initiate synced flush manually using synced flush api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicessyncedflushhtml synced flush api elasticco syncedflushrequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
checks index indices exists not see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicesexistshtml indices exists api elasticco request request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request
asynchronously shrinks index using shrink index api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicesshrinkindexhtml shrink index api elasticco resizerequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
asynchronously force merge one indices using force merge api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicesforcemergehtml force merge api elasticco forcemergerequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
asynchronously updates mappings index using put mapping api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicesputmappinghtml put mapping api elasticco putmappingrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
rolls index using rollover index api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicesrolloverindexhtml rollover index api elasticco rolloverrequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
creates index using create index api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicescreateindexhtml create index api elasticco createindexrequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
asynchronously gets one aliases using get index aliases api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicesaliaseshtml indices aliases api elasticco getaliasesrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
asynchronously updates aliases using index aliases api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicesaliaseshtml index aliases api elasticco indicesaliasesrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
retrieves field mappings index indices using get field mapping api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicesgetfieldmappinghtml get field mapping api elasticco getfieldmappingsrequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
asynchronously gets index templates using index templates api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicestemplateshtml index templates api elasticco getindextemplatesrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
asynchronously retrieves mappings index indices using get mapping api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicesgetmappinghtml get mapping api elasticco getmappingsrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
asynchronously checks one aliases exist using aliases exist api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicesaliaseshtml indices aliases api elasticco getaliasesrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
closes index using close index api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicesopenclosehtml close index api elasticco closeindexrequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
asynchronously validate potentially expensive query without executing it see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentsearchvalidatehtml validate query api elasticco validatequeryrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
asynchronously initiate synced flush manually using synced flush api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicessyncedflushhtml synced flush api elasticco syncedflushrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
flush one indices using flush api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicesflushhtml flush api elasticco flushrequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
force merge one indices using force merge api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicesforcemergehtml force merge api elasticco forcemergerequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
asynchronously checks index indices exists not see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicesexistshtml indices exists api elasticco request request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
validate potentially expensive query without executing it see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentsearchvalidatehtml validate query api elasticco validatequeryrequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
calls analyze api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicesanalyzehtmlanalyze api elasticco request request options request options eg headers use requestoptionsdefault nothing needs customized
retrieve information one indexes see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicesgetindexhtml indices get index api elasticco getindexrequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
asynchronously rolls index using rollover index api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicesrolloverindexhtml rollover index api elasticco rolloverrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
asynchronously creates index using create index api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicescreateindexhtml create index api elasticco createindexrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
deletes index using delete index api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicesdeleteindexhtml delete index api elasticco deleteindexrequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
updates specific index level settings using update indices settings api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicesupdatesettingshtml update indices settings api elasticco updatesettingsrequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
gets index templates using index templates api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicestemplateshtml index templates api elasticco getindextemplatesrequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
asynchronously retrieves field mappings index indices using get field mapping api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicesgetfieldmappinghtml get field mapping api elasticco getfieldmappingsrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
retrieves mappings index indices using get mapping api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicesgetmappinghtml get mapping api elasticco getmappingsrequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
asynchronously closes index using close index api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicesopenclosehtml close index api elasticco closeindexrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
opens index using open index api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicesopenclosehtml open index api elasticco openindexrequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
asynchronously puts index template using index templates api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicestemplateshtml index templates api elasticco putindextemplaterequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
asynchronously flush one indices using flush api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicesflushhtml flush api elasticco flushrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
asynchronously force merge one indices using force merge api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicesforcemergehtml force merge api elasticco forcemergerequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion use forcemergeasyncforcemergerequest requestoptions actionlistener instead
refresh one indices using refresh api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicesrefreshhtml refresh api elasticco refreshrequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
asynchronously calls analyze api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicesanalyzehtmlanalyze api elasticco request request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
retrieve information one indexes see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicesgetindexhtml indices get index api elasticco getindexrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
retrieve settings one indices see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicesgetsettingshtml indices get settings api elasticco getsettingsrequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
asynchronously splits index using split index api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicessplitindexhtml split index api elasticco resizerequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
shrinks index using shrink index api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicesshrinkindexhtml shrink index api elasticco resizerequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
gets one aliases using get index aliases api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicesaliaseshtml indices aliases api elasticco getaliasesrequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
asynchronously clears cache one indices using clear cache api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicesclearcachehtml clear cache api elasticco clearindicescacherequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
updates mappings index using put mapping api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicesputmappinghtml put mapping api elasticco putmappingrequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
asynchronously deletes index using delete index api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicesdeleteindexhtml delete index api elasticco deleteindexrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
asynchronously opens index using open index api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicesopenclosehtml open index api elasticco openindexrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
updates aliases using index aliases api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicesaliaseshtml index aliases api elasticco indicesaliasesrequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
force merge one indices using force merge api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicesforcemergehtml force merge api elasticco forcemergerequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response use forcemergeforcemergerequest requestoptions instead
clears cache one indices using clear cache api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicesclearcachehtml clear cache api elasticco clearindicescacherequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
asynchronously updates specific index level settings using update indices settings api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicesupdatesettingshtml update indices settings api elasticco updatesettingsrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
cancel one cluster tasks using task management api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrenttaskshtml task management api elasticco canceltasksrequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
asynchronously cancel one cluster tasks using task management api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrenttaskshtml task management api elasticco canceltasksrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
asynchronously get current tasks using task management api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrenttaskshtml task management api elasticco request request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
get current tasks using task management api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrenttaskshtml task management api elasticco request request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
test verifies dont change default value connection request timeout causes problems see httpsgithubcomelasticelasticsearchissues24069
build mutable set containing nodegethost hosts use test
shutdown executor dont leak threads test runs
sends request elasticsearch cluster client points to doesnt wait response instead provided responselistener notified upon completion failure shortcut performrequestasyncstring string map httpentity responselistener header without request body method http method endpoint path request without host port params querystring parameters responselistener responselistener notify request completed fails headers optional request headers prefer performrequestasyncrequest responselistener
returns nonempty iterator nodes used request match nodeselector living nodes match nodeselector return dead node matches nodeselector closest revived ioexception nodes available
sends request elasticsearch cluster client points to blocks request completed returns response fails throwing exception selects host provided ones roundrobin fashion failing hosts marked dead retried certain amount time minimum 1 minute maximum 30 minutes depending many times previously failed the failures later retried case failures alive nodes or dead nodes deserve retry retried one responds none does case ioexception thrown method works performing asynchronous call waiting result asynchronous call throws exception wrap rethrow stack trace attached exception contains call site attempt preserve original exception isnt always possible likely havent covered cases get original exception exceptiongetcause method http method endpoint path request without host port params querystring parameters entity body request null applicable httpasyncresponseconsumerfactory httpasyncresponseconsumerfactory used create one httpasyncresponseconsumer callback per retry controls response body gets streamed nonblocking http connection client side headers optional request headers response returned elasticsearch ioexception case problem connection aborted clientprotocolexception case http protocol error responseexception case elasticsearch responded status code indicated error prefer performrequestrequest
select nodes try sorts first one tried initially following ones previous attempt failed on package private testing
add headers provided varargs argument request exists support methods exist backwards compatibility
replaces hosts client communicates prefer setnodescollection allows set metadata use nodeselectors
add parameters map request exists support methods exist backwards compatibility
tracks one last definitive failure returns caller notifying wrapped listener
called successful request call receives argument host used successful request
sends request elasticsearch cluster client points waits corresponding response returned shortcut performrequeststring string map httpentity header without request body method http method endpoint path request without host port params querystring parameters headers optional request headers response returned elasticsearch ioexception case problem connection aborted clientprotocolexception case http protocol error responseexception case elasticsearch responded status code indicated error prefer performrequestrequest
sends request elasticsearch cluster client points waits corresponding response returned shortcut performrequeststring string map httpentity header without parameters request body method http method endpoint path request without host port headers optional request headers response returned elasticsearch ioexception case problem connection aborted clientprotocolexception case http protocol error responseexception case elasticsearch responded status code indicated error prefer performrequestrequest
sends request elasticsearch cluster client points to doesnt wait response instead provided responselistener notified upon completion failure shortcut performrequestasyncstring string map httpentity responselistener header without parameters request body method http method endpoint path request without host port responselistener responselistener notify request completed fails headers optional request headers prefer performrequestasyncrequest responselistener
called failed attempt receives argument host used failed attempt
sends request elasticsearch cluster client points to request executed asynchronously provided responselistener gets notified upon request completion failure selects host provided ones roundrobin fashion failing hosts marked dead retried certain amount time minimum 1 minute maximum 30 minutes depending many times previously failed the failures later retried case failures alive nodes or dead nodes deserve retry retried one responds none does case ioexception thrown request request perform responselistener responselistener notify request completed fails
sends request elasticsearch cluster client points waits corresponding response returned shortcut performrequeststring string map httpentity httpasyncresponseconsumerfactory header doesnt require specifying httpasyncresponseconsumerfactory instance httpasyncresponseconsumerfactory used create needed instances httpasyncresponseconsumer method http method endpoint path request without host port params querystring parameters entity body request null applicable headers optional request headers response returned elasticsearch ioexception case problem connection aborted clientprotocolexception case http protocol error responseexception case elasticsearch responded status code indicated error prefer performrequestrequest
sends request elasticsearch cluster client points to request executed asynchronously provided responselistener gets notified upon request completion failure selects host provided ones roundrobin fashion failing hosts marked dead retried certain amount time minimum 1 minute maximum 30 minutes depending many times previously failed the failures later retried case failures alive nodes or dead nodes deserve retry retried one responds none does case ioexception thrown method http method endpoint path request without host port params querystring parameters entity body request null applicable httpasyncresponseconsumerfactory httpasyncresponseconsumerfactory used create one httpasyncresponseconsumer callback per retry controls response body gets streamed nonblocking http connection client side responselistener responselistener notify request completed fails headers optional request headers prefer performrequestasyncrequest responselistener
replaces nodes client communicates
sends request elasticsearch cluster client points to doesnt wait response instead provided responselistener notified upon completion failure shortcut performrequestasyncstring string map httpentity httpasyncresponseconsumerfactory responselistener header doesnt require specifying httpasyncresponseconsumerfactory instance httpasyncresponseconsumerfactory used create needed instances httpasyncresponseconsumer method http method endpoint path request without host port params querystring parameters entity body request null applicable responselistener responselistener notify request completed fails headers optional request headers prefer performrequestasyncrequest responselistener
add headers provided varargs argument request exists support methods exist backwards compatibility
sends request elasticsearch cluster client points to blocks request completed returns response fails throwing exception selects host provided ones roundrobin fashion failing hosts marked dead retried certain amount time minimum 1 minute maximum 30 minutes depending many times previously failed the failures later retried case failures alive nodes or dead nodes deserve retry retried one responds none does case ioexception thrown method works performing asynchronous call waiting result asynchronous call throws exception wrap rethrow stack trace attached exception contains call site attempt preserve original exception isnt always possible likely havent covered cases get original exception exceptiongetcause request request perform response returned elasticsearch ioexception case problem connection aborted clientprotocolexception case http protocol error responseexception case elasticsearch responded status code indicated error
waits up timeout result request either response exception
tests sending bunch async requests works well eg timeoutexception leased pool see httpsgithubcomelasticelasticsearchissues24069
verify credentials sent first request preemptive auth enabled default provided credentials
end end test headers test explicitly real http client different ways setadd headers orgapachehttpclienthttpclient exercises test http server ability send back whatever headers received
verify credentials not sent first request preemptive auth disabled
verify credentials continue sent even 401 unauthorized response received
creates curl output given request
logs request yielded response
creates curl output given response
logs request failed
get migration assistance one indices request request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
randomize fetchsourcecontext request parameters
create plain node metadata parameters except host nullable implementations nodeselector need decide absence
requests full gc checks whether gc actually run request retries 5 times case gc run time
execute action locally returning task used track it linking tasklistener prefer method need access task listening response
execute action locally returning task used track it linking actionlistener prefer method dont need access task listening response method used implement client interface
get transportaction action throwing exceptions action isnt available
test method used generate put mapping java indices api documentation docsjavaapiadminindicesputmappingasciidoc documentation gets tested compiles runs without throwing errors runtime
single execution point all clients
establishes node connections validateinhandshake set true connection fail node returned handshake response different discovery node
adds list transport addresses used connect to node transport address represents used possible connect it unavailable automatically connected up order get list current connected nodes please see connectednodes
closes client
adds transport address used connect to node transport address represents used possible connect it unavailable automatically connected up order get list current connected nodes please see connectednodes
removes transport address list transport addresses used connect to
creates new transportclient given settings defaults plugins settings client settings defaultsettings default settings merged plugins added its additional settings plugins client plugins
test plugins provided want register namedwriteable also made known namedwriteableregistry transport client
sets sniffer instance used perform sniffing illegalstateexception sniffer already set set
sets task skipped returns true task skipped false task already started
cancels task returns true task successfully cancelled meaning wont executed execution wont effect returns false task cannot cancelled possibly already cancelled already completed
schedule sniffing run soon possible isnt already running sniffing round runs also schedule new round sniffafterfailuredelay ms
creates new builder instance providing restclient used communicate elasticsearch
sets delay sniff execution scheduled failure in milliseconds
creates sniffer based provided configuration
sets interval consecutive ordinary sniff executions milliseconds honoured sniffonfailure disabled failures consecutive sniff executions illegalargumentexception sniffintervalmillis greater 0
sets nodessniffer used read hosts default instance elasticsearchnodessniffer created provided method used change configuration elasticsearchnodessniffer provide different implementation eg case hosts need taken different source
calls elasticsearch nodes info api parses response returns found http hosts
returns defaultvalue attribute didnt come back true false come back either those throws ioexception attribute came back strange way
creates new instance elasticsearch sniffer use provided restclient fetch hosts nodes info api provided sniff request timeout value scheme restclient client used fetch hosts elasticsearch nodes info api usually instance also provided snifferbuilderrestclient hosts set client used sniff them sniffrequesttimeoutmillis sniff request timeout in milliseconds passed query string parameter elasticsearch allows halt request without failure nodes responded within timeout returned scheme scheme associate sniffed nodes as returned elasticsearch
tests sniffersniff method isolation verifies uses nodessniffer implementation retrieve nodes set when empty provided restclient instance
test behaviour bunch onfailure sniffing rounds triggered parallel run always schedule subsequent afterfailure round also onfailure round starts net scheduled round either afterfailure ordinary gets cancelled
test snifferclose shuts underlying scheduler calls idempotent also verifies next scheduled round gets cancelled
test multiple sniffing rounds mocking scheduler well nodessniffer simulates ordinary behaviour sniffer sniffing failure enabled countingnodessniffer doesnt make network connection may throw exception return nodes makes possible verify errors properly handled dont affect subsequent runs scheduling scheduler implementation submits rather scheduling tasks meaning doesnt respect requested sniff delays allowing assert requested delays requested run following one expected values
here verify order add fields document counts lexi order field means heavily accessed fields use field selector added first with load break
parse simple classpath two elements unix
make sure old unix classpath empty element implicitly cwd im looking 1x es scripts fails
parse simple classpath two elements windows
make sure bogus windows classpath element accepted javas classpath parsing accepts it therefore eclipse osgi code
make sure old windows classpath empty element implicitly cwd im looking 1x es scripts fails
spawns native controllers module environment node environment ioexception io error occurs reading module spawning native process
attempt spawn controller daemon given module spawned process remain connected jvm via stdin stdout stderr streams references streams available code outside package
cant execute processes
returns first cause guice error it multiple
method invoked elasticsearchmainstring startup elasticsearch
creates new instance
initialize native resources
add access path and files underneath it also creates directory exist policy current policy add permissions configurationname configuration name associated path for error messages only path path permissions set file permissions grant path
add access single file path policy current policy add permissions path path permissions set file permissions grant path
executes bootstrap checks node transport protocol bound nonloopback interface system property esenforcebootstrapchecks set true bootstrap checks enforced regardless whether transport protocol bound nonloopback interface context current node bootstrap context boundtransportaddress node network bindings
tests checks enforced boundtransportaddress node network bindings discoverytype discovery type true checks enforced
executes provided checks fails node enforcelimits true otherwise logs warnings system property esenforcebootstrapchecks set true bootstrap checks enforced regardless whether transport protocol bound nonloopback interface context current node boostrap context enforcelimits true checks enforced otherwise warned checks checks execute
executes provided checks fails node enforcelimits true otherwise logs warnings system property esenforcebootstrapchecks is set true bootstrap checks enforced regardless whether transport protocol bound nonloopback interface context current node boostrap context enforcelimits true checks enforced otherwise warned checks checks execute logger logger
main entry point starting elasticsearch
checks path permissions
test generated permissions
checks exact file permissions meaning path
configured dir symlink test permissions work link target
test generated permissions configured paths
adds console ctrl handler true handler correctly set javalangunsatisfiedlinkerror kernel32 library loaded native function found javalangnoclassdeffounderror library native calls missing
try install custom rule profile sandboxinit block execution
attempt drop capability execute process best effort os architecture dependent may throw throwable 0 application threads 1 entire process
try install bpf filters via seccomp prctl block execution
dont know codesources belong plugin remove permission key codebases like core testframework etc way tests fail accesscontroller blocks missing
return parsed classpath symlinks resolved destination files matching matching torealpath code proper plugin structure
add codebase url given classname codebases map class exists
returns readonly view system properties
add dynamic socketpermissions based http transport settings policy permissions instance apply dynamic socketpermissions to settings settings instance read http transport settings
sets properties codebase urls policy files look matching plugins set urls fit
return map codebase name codebase url jar codebases used es core
simple checks everything ok
adds access configurable paths
add dynamic socketpermission based transport settings policy permissions instance apply dynamic socketpermissions settings settings instance read transport settings
reads returns specified policyfile jar files listed codebases location provided policy file via system property short name eg codebasejodaconvert12jar would map full url
add dynamic socketpermission based transport settings method first check port range specified transport profile specified profilesettings fall back settings policy permissions instance apply dynamic socketpermissions settings settings instance read transport settings
adds access classpath jarsclasses jar hell scan etc
add dynamic socketpermission based http settings policy permissions instance apply dynamic socketpermissions to settings settings instance read http settings
add dynamic socketpermission specified port range policy permissions instance apply dynamic socketpermission to portrange port range
initializes securitymanager environment happen once environment configuration generating dynamic permissions filterbaddefaults true filter bad java defaults system policy
returns dynamic permissions configured paths bind ports
ensures configured directory path exists ioexception path exists directory accessible broken symbolic link
retrieves short path form specified path path path short path name or original path getting short path name fails reason
returns true user root false not dont know
retrieves short path form specified path path path short path name or original path getting short path name fails reason
test restricting privileges permissions actually works
two plugins one controller daemon one without
simplest case module controller daemon
test null location unclear whenif happens see httpsbugsopenjdkjavanetbrowsejdk8129972
test policy null codesource happen restricting privileges doprivileged even though protectiondomains ctor javadocs might make think policy wont consulted
inspect manifest sure incompatibilities
checks java specification version targetversion required resource compatible current installation
checks set urls duplicate classes urls set urls classpath checked conflicting jars output string consumer debug output sent illegalstateexception jar hell found
checks current classpath duplicate classes output string consumer debug output sent illegalstateexception jar hell found
parses classpath set urls testing classpath classpath parse typically system property javaclasspath array urls illegalstateexception classpath contains empty elements
simple driver class used eg builds returns nonzero jarhell
construct instance preimplies check apply desired permissions baddefaultpermission bad default permission wrap preimplies test applied desired permission checking bad default permission instance wraps implies desired permission
uwe schindler algorithm status exit status
creates binary response
return cors setting array origins corssetting cors allow origin setting configured user never pass null check anyway array origins set otherwise null
determine cors setting regex corresponding pattern ow null
helper decode half hexadecimal number string c ascii character hexadecimal number decode must range 09afaf hexadecimal value represented ascii character given charactermaxvalue character invalid
decodes bit url encoded browser string expected encoded per rfc 3986 section 2 encoding used javascript functions encodeuri encodeuricomponent escape example encoding in unicode u00e9 utf8 0xc3 0xa9 encoded c3a9 c3a9 essentially equivalent calling javaneturldecoder urldecoder javaneturldecoderdecodestring string except its 2x faster generates less garbage gc actually function doesnt allocate memory theres nothing decode argument returned string decode can empty charset charset use decode string should really standardcharsetsutf8 decoded string s theres nothing decode string decode null returns empty string illegalargumentexception string contains malformed escape sequence
get content request contents source param throw exception missing prefer contentorsourceparamparser withcontentorsourceparamparserornullcheckedconsumer need parser
creates new rest request path decoded constructor throw badparameterexception xcontentregistry content registry httprequest http request httpchannel http channel contenttypeheaderexception contenttype header parsed
parser contents request contents otherwise parser source parameter one otherwise throws elasticsearchparseexception use withcontentorsourceparamparserornullcheckedconsumer instead need handle absence request content gracefully
content call applyparser parser otherwise nothing
xcontenttype parsed contenttype header value null case request without valid contenttype header request without content hascontent plain text request
parser contents request body otherwise throws elasticsearchparseexception use applycontentparsercheckedconsumer want gracefully handle request doesnt contents use contentorsourceparamparser requests support specifying request body source param
returns list parameters yet consumed method returns copy callers free modify returned list list currently unconsumed parameters
get value header null found method retrieves first header value multiple values sent use getallheadervaluesstring preferred
call consumer parser contents request contents otherwise parser source parameter one otherwise null use contentorsourceparamparser throw exception back user isnt request content
get values header null header found
content request body throw exception body content type missing
creates new rest request method throw badparameterexception path cannot decoded xcontentregistry content registry httprequest http request httpchannel http channel badparameterexception parameters decoded contenttypeheaderexception contenttype header parsed
returns custom headers added method used mutate headers
add custom header
registers rest handler executed provided method path match request method get post etc path path handle eg indextypebulk handler handler actually execute deprecationmessage message log send header response logger existing deprecation logger use
registers rest handler executed provided method path match request provided deprecatedmethod deprecatedpath expected usage remove deprecation next major release controllerregisterwithdeprecatedhandlerpost forcemerge this post optimize deprecationlogger controllerregisterwithdeprecatedhandlerpost indexforcemerge this post indexoptimize deprecationlogger registered rest handler method path normal rest handler deprecated replacing deprecated rest handler deprecatedmethod deprecatedpath using same handler deprecated rest handlers without direct replacement deprecated directly using registerasdeprecatedhandler specific message method get post etc path path handle eg forcemerge handler handler actually execute deprecatedmethod get post etc deprecatedpath deprecated path handle eg optimize logger existing deprecation logger use
checks request parameters enabled settings error trace support true request parameters conflict system settings
dispatch request possible returning true response sent false otherwise
handle requests valid rest endpoint using unsupported http method 405 http response code returned response allow header includes list valid http methods endpoint see hrefhttpstoolsietforghtmlrfc2616section1046http11 1046 405 method allowed
handle requests candidate handlers return 400 bad request error
request contains content method return true contenttype header present matches xcontenttype handler supports content stream content type header newline delimited json
get valid set http methods rest request
registers rest handler executed one provided methods path match request path path handle eg indextypebulk handler handler actually execute method get post etc
handle http options requests valid rest endpoint 200 http response code returned response allow header includes list valid http methods endpoint see hrefhttpstoolsietforghtmlrfc2616section92http11 92 options
construct channel handling request request request detailederrorsenabled detailed errors reported channel illegalargumentexception parsing pretty human parameters fails
channel level bytes output reused bytes output lazily instantiated call newbytesoutput stream created gets reset call method
creates new xcontentbuilder response sent using channel builders type determined following logic request format parameter used attempt map xcontenttype format parameter http accept header checked see matched xcontenttype first attempt map fails request content type used value null value null output format falls back json
add handler additional array methods note methodhandlers allow replacing handler already existing method
add additional method handler existing path note methodhandlers allow replacing handler already existing method
requests valid rest endpoint using unsupported http method verify 405 http response code returned response allow header includes list valid http methods endpoint see hrefhttpstoolsietforghtmlrfc2616section1046http11 1046 405 method allowed
create character array characters from to starting code point inclusive ending code point inclusive never null
create deprecationresthandler encapsulates handler using deprecationlogger log deprecation warning handler rest handler deprecate its possible handler reused different name deprecationmessage message warn users use handler deprecationlogger deprecation logger nullpointerexception parameter except deprecationmessage null illegalargumentexception deprecationmessage valid header
usage logged via deprecationlogger actual response notified deprecation well
basic pass validating headers value contains expected characters according rfc5987 references httpstoolsietforghtmlrfc5987 expected used assertions idea readable usascii characters expected rest must encoded percent encoding makes checking valid character range simple value header value check true value obviously wrong
throw exception value validheadervaluestring valid header value header value check always value illegalargumentexception value validheadervaluestring valid header
build instance doesnt support responses status 201 created
build instance support responses status 201 created
parses top level query including query element wraps
create xcontent header basenodesresponse builder xcontent builder params xcontent parameters response response containing individual nodelevel responses buildnodesheaderxcontentbuilder params int int int list
automatically transform toxcontentcompatible nodeslevel response bytesrestresponse looks like nodes clustername builder xcontent builder params xcontent parameters response nodeslevel plural response never null ioexception building response causes issue
create xcontent header basenodesresponse looks like nodes total 3 successful 1 failed 2 failures prefer overload properly invokes method calling directly builder xcontent builder params xcontent parameters total total number nodes touched successful successful number responses received failed number failures effectively total successful failures failure exceptions related failed buildnodesheaderxcontentbuilder params basenodesresponse
buildrecoverytable build table recovery information suitable displaying command line request rest request response recovery status response table containing index shardid node target size recovered size percentage recovering replica
extracts required fields restrequest h parameter order support wildcards like bulk needs potentially parse configured headers aliases needs ensure everything added returned headers even hbulkbulk specified headers contained twice due matching aliases
helper method find included fieldmapping metadata typed null means type index exist field
standard listener extensions listtasksresponse supports groupbynodes
parses multiline restrequest body instantiating searchrequest line applying given consumer
parses restrequest body returns multisearchrequest
parses rest request top searchrequest preserving values overridden rest request requestcontentparser body request read method attempt read body request parameter setsize size url parameter handled udpatebyquery regular search differ here
parses rest request top searchsourcebuilder preserving values overridden rest request
get instance noopactionlistener cast appropriately
method called task manager task cancelled
reason task cancelled null hasnt cancelled
read stream
convert getresponse xcontent map easy processing return empty map task finished error hasnt yet finished didnt store result
convert geterror xcontent map easy processing return empty map task didnt finish error hasnt yet finished didnt store result
builds emptytaskid
read plain taskid stream plain taskid rather usual constructor takes plain streaminput return emptytaskid without allocating
build version task status throw wire back user localnodeid id node task running detailed information include detailed potentially slow generate data
build proper taskinfo task
removes ban specified parent task method called previously banned task finally cancelled
stores task failure
marks task cancelled returns true cancellation successful false otherwise
bans tasks specified parent task execution cancels tasks currently executing method called parent task children cancelled
cancels task returns true cancellation started successful null otherwise starting cancellation parent task task manager tries cancel children tasks current task cancellation children tasks done listener triggered
stores task result
returns cancellable task given id null task found
returns task given id null task found
marks task finished
returns list currently running tasks node
returns list currently running tasks node cancelled
unregister task
blocks calling thread waiting task vanish taskmanager
registers task without parent task
read stream
test parsing listtasksresponse inner failures dont support asserting xcontent equivalence given exceptions parsed back original class run usual abstractxcontenttestcasetestfromxcontent without failures test failures disable asserting xcontent equivalence end
test parsing listtasksresponse inner failures dont support asserting xcontent equivalence given exceptions parsed back original class run usual abstractxcontenttestcasetestfromxcontent without failures test failures disable asserting xcontent equivalence end
tests recovery index without translog statistics gather that
tests single document survives super basic smoke test
tests snapshotrestore creating snapshot restoring it takes snapshot old cluster restores old cluster sanity check new cluster upgrade test also takes snapshot new cluster restores new cluster test repository ok containing snapshot old new versions snapshots include index template routing configuration
tests single empty shard index correctly recovered empty shards often edge case
search alias contains illegal characters would prevent created 510 still searchable though
wait index green health waiting longer esresttestcaseensuregreen
test creating trial license using it interesting tests test cover starting new cluster default distribution enabling trial license test one upgrade oss distribution default distribution xpack create trial license dont do lot trial license part things tested elsewhere xpack use trial license little bit make sure works
test basic feature sql doesnt require trial license note test methods class run order might already installed trial license
waits machine learning templates created orgelasticsearchpluginsmetadataupgrader
master upgraded new version
test verifies cluster upgraded incrementally new documents eventually switch new form id 128 bit murmur3 ids rollup ids essentially hashed concatenation keys returned composite aggregation field values indexed timestamp value etc directly affect id generated dont know node get rollup task start dont know migrate first doc guaranteed old style since nodes unupgraded second third phase mixed cluster rollup task may may migrate phases two options old new document added phase last phase guaranteed new its fully upgraded cluster
constructor parses string key its name modifiers key key without leading trailing example a
copy constructor explicitly override modifier key key copy except modifier modifier modifer use copy
add keyvalue found result parsing key dissectkey value discovered value key
gets current matches pass results isvalid determine fully successful match occured map results
borrowed logstashs test cases httpsgithubcomlogstashpluginslogstashfilterdissectblobmastersrctestjavaorglogstashdissectdissectortestjava append note logstash appends delimiter separator values uses user defined separator
shared specification beats logstash ingest node
runtime errors
construction errors
entry point dissect string its parts inputstring string dissect keyvalue map results dissectexception unable dissect pair its parts
copy contents given inputstream given outputstream closes streams done stream copy stream copy number bytes copied ioexception case io errors
deletes one files directories and everything underneath it ioexception given files or subhierarchy files case directories cannot removed
closes given closeables nonnull exception passed in closing stream causes exception throws exception runtimeexception ioexception exceptions added suppressed ex existing exception add exceptions occurring close objects objects close closecloseable
closes given closeables suppressing thrown exceptions objects objects close closewhilehandlingexceptioncloseable
deletes given files suppressing thrown ioexceptions files may null ignored files paths files delete
ensure writes given file written storage device contains it isdir parameter specifies whether path sync directory needed open read ignore ioexception since filesystems operating systems support fsyncing directory regular files must open write fsync effect filetosync file fsync isdir true given file directory we open read ignore ioexceptions file systems operating systems allow fsync directory
generates random monitoringdoc given xcontenttype
generates random monitoringdocnode
generates random monitoringdoc given xcontenttype bytesreference source monitoredsystem type
generates random monitoringdoc given xcontenttype bytesreference source monitoredsystem
generates random monitoringdoc given xcontenttype bytesreference source
returns names indices monitoring collects data from array indices
indicates current collector allowed collect data iselectedmaster true current local node elected master node
creates monitoringdocnode discoverynode timestamp copying required information timestamp nodes timestamp node discoverynode monitoringdocnode instance null given discovery node null
returns value collection timeout configured current collector collection timeout null collector timeout defined
compute id format stateuuidnodeid naindexshardp r
create simple hash value used determine nodes listing changed since last report nodes nodes cluster state hash code value whose value used determine node listing changed including node restarts
asserts monitoring document provided map contains common information monitoring documents must
assert indicesstatsmonitoringdoc contains expected information
disable monitoring service local exporter
monitoring bulk api test test uses monitoring bulk api index document external application like kibana would do ensure documents correctly indexed expected information
monitoring service test test waits monitoring service collect monitoring documents checks expected documents indexed expected information
assert shardmonitoringdoc contains expected information
enable monitoring service local exporter waiting monitoring documents indexed returns
assert clusterstatsmonitoringdoc contains expected information
returns searchhit content map object
assert indexrecoverymonitoringdoc contains expected information
executes given runnable monitoring exporters ready functional ensure exporters monitoring service shut runnable executed
assert indexstatsmonitoringdoc contains expected information
asserts sourcenode information provided map monitoring document correspond current local node information
assert nodestatsmonitoringdoc contains expected information
assert two monitoringdoc equal default uses monitoringdocequalsobject monitoringdochashcode methods also checks xcontent equality
test monitoringdoc rendered using toxcontenttoxcontentxcontentbuilder toxcontentparams contain common set fields
asserts xcontent filters filteredmonitoringdoc contains common filters expected custom ones
flush exporting bulk
add documents exporting bulk
close exporting bulk
return settings exporters matter http local
exports collection monitoring documents using configured exporters
create unique watch id load watchid resource replacing variables clusters uuid clusterservice cluster service used fetch latest cluster state watchid watchs id never null key unique watch id value watch source runtimeexception watch exist
get blacklisted cluster alerts id config exporters configuration used settingsexception never null empty settingsexception unknown cluster alert id exists blacklist
test creates n threads export random number document using exporters instance
perform publishablehttpresourcedocheckrestclient docheck resource expecting delete assert returns exists given reststatus reststatusok reststatusnotfound resource resource execute resourcebasepath base endpoint eg template resourcename resource name eg template pipeline name
perform publishablehttpresourcedocheckrestclient docheck resource assert returns exists given reststatus reststatusok resource resource execute resourcebasepath base endpoint eg template resourcename resource name eg template pipeline name
perform publishablehttpresourcedocheckrestclient docheck resource throws exception assert returns error resource resource execute resourcebasepath base endpoint eg template resourcename resource name eg template pipeline name
perform publishablehttpresourcedopublishrestclient dopublish resource assert returns true given reststatus reststatusok reststatuscreated resource resource execute resourcebasepath base endpoint eg template resourcename resource name eg template pipeline name bodytype request body providers type
perform publishablehttpresourcedocheckrestclient docheck resource throws exception assert returns errpr performing delete rather common get resource resource execute resourcebasepath base endpoint eg template resourcename resource name eg template pipeline name
perform publishablehttpresourcedopublishrestclient dopublish resource assert returns false given reststatus neither reststatusok reststatuscreated resource resource execute resourcebasepath base endpoint eg template resourcename resource name eg template pipeline name bodytype request body providers type
perform publishablehttpresourcedocheckrestclient docheck resource assert returns doesnotexist given reststatus reststatusok resource resource execute resourcebasepath base endpoint eg template resourcename resource name eg template pipeline name
perform publishablehttpresourcedopublishrestclient dopublish resource throws exception assert returns false resource resource execute resourcebasepath base endpoint eg template resourcename resource name eg template pipeline name
create new securityhttpclientconfigcallback credentialsprovider credential provider usernamepassword supplied sslstrategy ssl strategy ssl tls supplied nullpointerexception sslstrategy null
get credentialsprovider added http client null
sets plain httpasyncclientbuildersetdefaultcredentialsprovidercredentialsprovider credential provider plain httpasyncclientbuildersetsslcontextsslcontext ssl context plain httpasyncclientbuildersetsslhostnameverifierhostnameverifier ssl hostname verifier httpclientbuilder client configure always httpclientbuilder
resource currently plain isdirty dirty check and necessary publish httpresource expected usage resourcecheckandpublishifdirtyclient use client resources verified client rest client make requests true resource available use false stop
invoked checkandpublishifdirtyrestclient block incase checkandpublishrestclient middle plain statechecking checking unlike isdirty checkandpublishifdirtyrestclient synchronized order prevent doubleexecution invokes checkandpublishrestclient its plain statedirty dirty client rest client make requests true resource available use false stop
create new httpresource dirty resourceownername userrecognizable name dirty whether resource dirty
check and necessary publish httpresource perform check regardless plain isdirty dirtiness update dirtiness using directly useful ever need doublecheck dirtiness without plain markdirty mark dirty mark dirty running eg asynchronously something invalidates resource resource still dirty end success still return based checks ran client rest client make requests true resource available use false stop isdirty
determine response contains watch whose value expects response like metadata xpack version 6000002 response filtered response get watcher api xcontent xcontent parser use minimumversion minimum version allowed without replaced expected last updated version true represents replaced false left alone ioexception issue occurs parsing xcontent response runtimeexception response format changed
publish missing plain watchid watch
determine current plain watchid watch exists
create new clusteralerthttpresource resourceownername userrecognizable name watchid name watch lazily loaded watch watch provider null indicates always delete watch
reach remote cluster determine usability watcher client rest client make requests never null
create watcherexistshttpresource resourceownername userrecognizable name watches watches create watcher available enabled
determine watcher exists exists exist doesnotexist response filtered response xpack info api xcontent xcontent parser use true represents used false cannot used ioexception issue occurs parsing xcontent response runtimeexception response format changed
add watches remote cluster
determine xpack installed and so watcher available and enabled used available enabled mark exists followon work performed relative watcher thing current node elected master node
logs every error fields value hits end array parser bulk response parser ioexception parsing error occurs
log obvious failures future queue replayable failures
success relative bulk responses unless its rejected outright returns 200 individual documents fail since know were making them means
create new httphost current scheme host port never null illegalstateexception host unset
set host httphost attempt parse host way host host use always this nullpointerexception host null
set port httphost specifying port 1 cause defaulted 9200 httphost built port port use always this illegalargumentexception port 1 1 65535
set scheme aka protocol httphost scheme scheme use always this nullpointerexception scheme null
create new httphost based supplied host uri partial uri used build nullpointerexception uri null illegalargumentexception issue occurs parsing uri
create new publishablehttpresource resourceownername userrecognizable name mastertimeout timeout use request baseparameters base parameters specify request dirty whether resource dirty
determine current resource replaced checked one based version or lack thereof expects response like where resourcename replaced value resourcename version 6000002 response filtered response templatename ingestpipelinename resource apis xcontent xcontent parser use resourcename name looked resource expected toplevel key minimumversion minimum version allowed without replaced expected last updated version true represents replaced false left alone ioexception issue occurs parsing xcontent response runtimeexception response format changed
determine current resourcename exists resourcebasepath endpoint provides baselevel check resource cares existence also contents client rest client make requests logger logger use status messages resourcebasepath base pathendpoint check resource eg template any resourcename name resource eg template123 resourcetype type resource eg monitoring template resourceownername userrecognizeable resource owner resourceownertype type resource owner dealt eg monitoring cluster exists response codes represent exists doesnotexist response codes represent doesnotexist never null pair containing checked response returned response response ever null none returned simplecheckforresourcerestclient logger string string string string string
upload resourcename resourcebasepath endpoint client rest client make requests logger logger use status messages resourcebasepath base pathendpoint check resource eg template resourcename name resource eg template123 body httpentity makes body request resourcetype type resource eg monitoring template resourceownername userrecognizeable resource owner resourceownertype type resource owner dealt eg monitoring cluster
create new publishablehttpresource plain isdirty dirty resourceownername userrecognizable name mastertimeout master timeout use request baseparameters base parameters specify request
determine current resourcename exists resourcebasepath endpoint version greater equal expected version provides baselevel check resource need care response beyond existence and likely need inspect contents expects responses form of resourcename version 6000002 client rest client make requests logger logger use status messages resourcebasepath base pathendpoint check resource eg template resourcename name resource eg template123 resourcetype type resource eg monitoring template resourceownername userrecognizeable resource owner resourceownertype type resource owner dealt eg monitoring cluster xcontent xcontent used parse response minimumversion minimum version allowed without replaced expected last updated version never null
determine current resourcename exists resourcebasepath endpoint provides baselevel check resource need care response beyond existence and likely need inspect contents client rest client make requests logger logger use status messages resourcebasepath base pathendpoint check resource eg template resourcename name resource eg template123 resourcetype type resource eg monitoring template resourceownername userrecognizeable resource owner resourceownertype type resource owner dealt eg monitoring cluster never null
determine current resourcename exists resourcebasepath endpoint version greater equal expected version provides baselevel check resource need care response beyond existence and likely need inspect contents expects responses form of resourcename version 6000002 client rest client make requests logger logger use status messages resourcebasepath base pathendpoint check resource eg template resourcename name resource eg template123 resourcetype type resource eg monitoring template resourceownername userrecognizeable resource owner resourceownertype type resource owner dealt eg monitoring cluster responsechecker determine resource replaced given response never null
delete resourcename using resourcebasepath endpoint note callers add ignore parameter request 404 exception therefore considered successful its found override behavior specifying valid value ignore point 404 responses result false logged failure client rest client make requests logger logger use status messages resourcebasepath base pathendpoint check resource eg template resourcename name resource eg template123 resourcetype type resource eg monitoring template resourceownername userrecognizeable resource owner resourceownertype type resource owner dealt eg monitoring cluster true successfully deleted item otherwise false
perform whatever necessary check publish publishablehttpresource client rest client make requests true resource available use false stop
create new mockhttpresource resourceownername userrecognizable name dirty starting dirtiness resource check expected response checking resource publish expected response publishing resource assumes check checkresponsedoesnotexist mastertimeout master timeout use request parameters base parameters specify request
create new mockhttpresource starts dirty resourceownername userrecognizable name check expected response checking resource publish expected response publishing resource assumes check checkresponsedoesnotexist mastertimeout master timeout use request parameters base parameters specify request
ensure response contains version plain versiononorafterversion after minimumversion response response parse true remote cluster running supported version nullpointerexception response malformed classcastexception response malformed ioexception parsing issue occurs
verify minimum version supported remote cluster not nothing done except wait does publishing aspect operation
create new versionhttpresource resourceownername userrecognizable name minimumversion minimum supported version elasticsearch
determine current plain pipelinename pipeline exists
publish current plain pipelinename pipeline
create new pipelinehttpresource resourceownername userrecognizable name mastertimeout master timeout use request pipelinename name template eg pipeline123 pipeline pipeline provider
get httpresource notified upon node failure null
get sniffer notified upon node failure null
create multihttpresource resourceownername userrecognizable name resources subresources aggregate
check publish plain resources subresources
node elected master node never check watcher send watches cluster alerts
sets plain buildersetconnecttimeoutint connect timeout plain buildersetsockettimeoutint socket timeout requestconfigbuilder request configure always requestconfigbuilder
create new timeoutrequestconfigcallback connecttimeout initial connection timeout supplied sockettimeout socket timeout supplied
get initial connection timeout null default 1 second
get socket timeout null default 10 seconds
adds resources necessary checking publishing cluster alerts config http exporters configuration resourceownername resource owner name display logging messages resources resources add too
create httpexporter config http exporters configuration sslservice ssl service used create ssl context necessary tls ssl communication listener node failure listener used notify optional sniffer resources settingsexception setting malformed
adds validator sslsetting prevent dynamic updates secure settings also exist within setting groups ssl context possible reread secure settings dynamic update cannot rebuild ssliosessionstrategy see configuresecurityrestclientbuilder config sslservice exporter configured secure settings
adds resources necessary checking publishing monitoring templates config http exporters configuration resourceownername resource owner name display logging messages resources resources add too
create httpexporter config http exporters configuration client rest client used make requests remote elasticsearch cluster sniffer optional sniffer already associated listener listener node failure listener used notify resources resource blocking http resource prevent bulks requirements met settingsexception setting malformed
create httphosts connected too config exporters configuration never null empty settingsexception setting malformed host set
create sniffer http exporters config client config http exporters configuration client rest client sniff listener node failure listener used help improve sniffing null sniffer disabled indexoutofboundsexception plain hostsetting hosts set
create multihttpresource used block bulk exporting expected resources available config http exporters configuration never null
create restclientbuilder http exporters config config http exporters configuration sslservice ssl service used create ssl context necessary tls ssl communication listener node failure listener used log node failures never null settingsexception required setting missing setting malformed
configure restclientbuilder use initial connection socket timeouts builder rest client builder configure config exporters configuration
create default parameters use bulk indexing operations config exporters configuration never null empty
determine httpexporter ready use true ready false not
configure restclientbuilder use plain credentialsprovider user authentication andor plain sslcontext ssl tls builder rest client builder configure config exporters configuration sslservice ssl service used create ssl context necessary tls ssl communication settingsexception setting causes issues
create httpexporter config http exporters configuration client rest client used make requests remote elasticsearch cluster listener node failure listener used notify optional sniffer resources settingsexception setting malformed
creates optional credentialsprovider usernamepassword use all requests user authentication config exporters configuration null username password provided otherwise credentialsprovider use settingsexception username missing password supplied
configures plain restclientbuildersetdefaultheadersheader default headers use all requests builder rest client builder configure config exporters configuration settingsexception header plain blacklistedheaders blacklisted
adds resources necessary checking publishing monitoring pipelines config http exporters configuration resourceownername resource owner name display logging messages resources resources add too
determine scheme scheme scheme http schemefromstringhttp scheme https schemefromstringhttps scheme httpscaps schemefromstringhttps https scheme scheme check never null nullpointerexception scheme null illegalargumentexception scheme supported
determine current plain templatename template exists relevant version expected monitoringtemplateutilslastupdatedversion
publish missing plain templatename template
create new templatehttpresource resourceownername userrecognizable name mastertimeout master timeout use request templatename name template eg template123 template template provider
determine cluster use watcher true use cluster alerts
elected master setup resources mapping types templates pipelines attempt run exporter resources exist create them clusterstate current cluster state templates template names exist clusterstatechange true cluster state change caused call dont block it true indicates resources ready exporter used false stop wait
install cluster alerts watches cluster asyncactions asynchronous actions added watch pendingresponses pending response countdown use track completion
create pipeline required handle past data well futureproof ingestion current documents the pipeline initially empty replaced later one translates asneeded invoked elected master node whenever eventually make backwards incompatible change need override pipeline already exists older one uses elasticsearch version alpha portion determine version last change description pipelines version 6000001
elected master require resources mapping types templates pipelines available attempt run exporter resources exist means elected masters exporter yet run monitoring cluster this one local exporter setup yet clusterstate current cluster state templates template names exist true indicates resources available exporter used false stop wait
determine localexporter ready use true ready false not
determine ingest pipeline pipelineid exists cluster appropriate minimum version clusterstate current cluster state pipelineid id pipeline check eg 3 true clusterstate contains pipeline appropriate minimum version
create new localexporter expected usage final settings settings settingsbuilderputxpackmonitoringexporterslocaltype localbuild try localexporter exporter createlocalexporterlocal settings never null
checks monitoring templates created local exporter
checks monitoring documents clusteruuid timestamp sourcenode fields belongs right data timestamped index
checks monitoring ingest pipelines created local exporter
generates basic template loosely represents monitoring template
create pipeline nothing whose description literally test version version add pipeline never null
creates monitoringbulkrequest given number monitoringbulkdoc it monitoringbulkrequest
iterate list monitoringbulkdoc create corresponding list monitoringdoc
create monitoringdoc monitoringbulkdoc bulkdoc monitoringbulkdoc monitoringdoc export
exports documents
test allow strings logstash 52 53 would submit empty id values timebased documents
creates watcher history index current version
creates watcher history index specified version
creates monitoring timestamped index using given template version
cancelstop cleaning service kill scheduled future running its possible executed concurrently onafter rescheduling code point stopped next execution if service stopped
set global retention expected used cluster settings dynamically control global retention time even current license prevents retention updates accept change need reset upgrade license they always unset it globalretention global retention use dynamically
get retention used ignore global retention license allow retention updates never null xpacklicensestateisupdateretentionallowed
reschedule cleaner service stopped
indicate given monitoredsystem system api version pair supported monitoring bulk api system monitoredsystem version system api version true supported false otherwise
combines msearch rollup live aggregations searchresponse representing union two responses response format identical nonrollup search response aka normal aggregation response msearch response returns following took228 timedoutfalse shards hits aggregations histo buckets keyasstring20170515t000000000z key1494806400000 doccount1 themax value10 took205 timedoutfalse shards hits aggregations filterhisto doccount1 histo buckets keyasstring20170514t000000000z key1494720000000 doccount1 themax value199950 histocount value10e9 would collapsed into took 228 timedout false shards hits aggregations histo buckets keyasstring 20170514t000000000z key 1494720000000 doccount 1000000000 themax value 19995 keyasstring 20170515t000000000z key 1494806400000 doccount 1 themax value 1 essentially takes conventions listed rolluprequesttranslator processes final product looks like regular aggregation response allowing reducedmerged response unrolled index msearchresponses responses msearch first response liveindex response
helper method unrolls generic multibucket agg prefer use overload consumer api source rolled aggregation wish unroll bucketfactory trifunction generates new buckets given type multibucket
unrolls multibucket aggregations eg terms histograms etc overload signature called internal methods class rather directly calling pertype methods
verifies liveonly search response essentially checks failure returns response since work
takes aggregation rollup conventions unrolls normal agg tree rolled rollup aggregation wish unroll originalagg unrolled live aggregation if exists matches current rolled aggregation count doccount rolled required aggs eg avg unrolled aggregation mimics structure base allowing reduction
translates rolluponly search response back expected convention similar combineresponsesmultisearchresponseitem internalaggregationreducecontext except deal rollup response no live response see combineresponsesmultisearchresponseitem internalaggregationreducecontext details translation conventions
takes aggregation rollup conventions unrolls normal agg tree rolled rollup aggregation wish unroll original unrolled live aggregation if exists matches current rolled aggregation unrolled aggregation mimics structure base allowing reduction
generic method help iterate subaggregation buckets recursively unroll bucket current bucket wish unroll
translates leaf aggs minmaxsumetc rollup version simple aggs like min nearly 11 copy source deserialized new object field adjusted according convention eg min agg themin min field somefield translation would be themin min field somefieldminvalue however avg metrics and potentially others future agg translated sum sum aggs one count one sum unrolling combined back single avg note also rename avg agg name distinguish empty buckets eg avg agg theavg avg field somefield translation would be theavgvalue sum field somefieldavgvalue theavgcount sum field somefieldavgcount conventions are agg type source agg named source agg field aggtypefieldnamevalue agg avgagg following additional conventions added agg type becomes sumagg instead avgagg named source namevalue additionally extra sumagg added named source namecount field field nameagg typecount metric source leaf aggregation wish translate registry registry namedwriteables simple serializedeserialize leafs easily clone translated leaf aggregation
generic method actual heavylifting translating multibucket valuesourcebuilder method called aggspecific methods eg translatedatehistogram source source aggregation wish translate filterconditions list existing filter conditions case need add particular agg registry named registry serializing leaf metrics actually used method passed downwards leaf usage factory factory closure generates new shallow clone source eg source datehistogram factory take return new datehistogramaggbuilder matching parameters deep clone however returned object wont children set type valuesourceaggbuilder working translated multibucket valuesourceaggbuilder
translates nonrollup aggregation tree rollupenabled agg tree example source aggregation may look like this post foorollupsearch aggregations thehisto datehistogram field ts interval 1d aggs themax max field foo translated aggregation looking like this post rolledfoosearch aggregations filterhisto filter bool must term rollupversion 1 term tsdatehistograminterval 1d aggregations thehisto datehistogram field tsdatehistogramtimestamp interval 1d aggregations thehistocount sum field tsdatehistogramcount themax max field foomaxvalue various conventions applied translation elucidated comments relevant method below source source aggregation translate rollupenabled version filterconditions list used track filter conditions subaggs may require registry registry containing various aggregations easily deserialize stream cloning returns fully translated aggregation tree note returns list instead single aggbuilder since aggregations eg avg may result two translated aggs sum count
translate normal datehistogram one follows rollup conventions notably adds sum metric calculate doccount bucket eg datehistogram post foorollupsearch aggregations thehisto datehistogram field ts interval day translated into post rolledfoosearch aggregations thehisto datehistogram field tsdatehistogramtimestamp interval day aggregations thehistocount sum field tsdatehistogramcount conventions are named source histogram field timestamp fielddatehistogramtimestamp add sumaggregation bucket named parent histogram namecount field timestamp fielddatehistogramcount add filter condition query type termquery field timestampfielddatehistograminterval value source interval
translate normal histogram one follows rollup conventions notably adds sum metric calculate doccount bucket conventions identical datehistogram excepting datespecific details see translatedatehistogramdatehistogramaggregationbuilder list namedwriteableregistry complete list conventions examples etc
translate normal terms agg one follows rollup conventions notably adds metadata terms sum metric calculate doccount bucket eg terms agg post foorollupsearch aggregations theterms terms field foo translated into post rolledfoosearch aggregations theterms terms field footermsvalue aggregations thetermscount sum field footermscount conventions are named source terms agg field field nametermsvalue add sumaggregation bucket named parent terms namecount field field nametermscount
find set datehistos largest granularity interval
find set histos largest interval
ensure metrics supported one job caps notion best caps metrics either supported not
ensure terms aggregation supported one job caps notion best caps terms either supported not
given aggregation tree list available job capabilities method return set best jobs searched recursively descending aggregation tree independently pruning list valid job caps branch leaf node reached branch remaining jobs sorted bestness see getcomparator implementation added global set best jobs branches evaluated final set returned calling code job bestness is briefly jobs larger compatible date interval fewer larger interval histograms fewer terms groups note final set best jobs guaranteed minimal may redundant effort due independent branches choosing jobs subsets branches source source aggregation trying find jobs jobcaps total set available job caps indexindices set best jobs total job caps
lifted estestcase s dont reuse anywhere create copy original searchsourcebuilder object running bytesstreamoutput reading using writeablereader stream wrapped around streaminput potentially need use namedwriteableregistry needs provided
check see persistenttasks cluster state contains rollup jobs interested
helper method used startstop transportactions ensure one task invoked none all end situation multiple tasks id do help prevent situation getting worse
entry point class hand method aggregation index pattern returns list rolled documents index agg aggregation response want rollup rollupindex index holds rollups job stats stats accumulator jobs task groupconfig grouping configuration job jobid id job isupgradeddocid true job using new id scheme list rolled documents derived response
called persistent task signals allocated task terminated termination task framework essentially voluntary allocated task shut inside
attempt gracefully cleanup rollup job terminated tries remove job scheduler potentially cleanup operations future
called scheduleengine cron triggers event event caused trigger
attempt stop indexer idle actively indexing indexer aborted fail exception note stopping job immediate updates persistent tasks status allocated task notice stop which may take time depending indexing cycle is method will however return soon persistent task acknowledge status update listener listener requesting stop signal completionfailure
attempt start indexer state anything stopped fail otherwise persistent tasks status updated reflect change note job started indexer necessarily run immediately occur scheduler triggers based cron listener listener started action signal completionfailure
sets internal state indexerstatestopping async job running background case onfinish called soon background job detects indexer stopped job running function called state directly set indexerstatestopped onfinish never called new state indexer stopped stopping aborting job already aborted
sets internal state indexerstatestarted previous state indexerstatestopped setting state started allows job run background maybetriggerasyncjoblong called new state indexer started indexing aborting job already aborted
creates skeleton compositeaggregationbuilder provided job config config config job composite aggregation creates rollup buckets
checks indexerstate returns false execution stopped
creates range query limits search documents appear maximum allowed time see maxboundary last processed time position current position pagination range query execute
ctr executor executor use fire first request background job job rollup job initialstate initial state indexer initialposition last indexed bucket task
triggers background job builds rollup index asynchronously iff job runs indexer started indexerstatestarted current time milliseconds used limit job complete buckets true job triggered false otherwise
sets internal state indexerstateaborting returns false async job running background case onabort called soon background job detects indexer aborted job running function called returns true onabort never called true indexer aborted false background job running abort delayed
executes rollup test case docs docs index source config rollup job execute current time milliseconds rollupconsumer consumer checks created rollup documents job
creates mappedfieldtype provided job simplicity numbers considered longs map containing created field types accessible names
read address elasticsearch suitable cli system properties
asks cli fixture start cli instance
send command assert echo
assert result connection test default implementation asserts test passes overridden check places want assert fails
shutdown connection remote cli without attempting shut remote orderly way
create echo expect jline send terminal were typing command
attempts orderly shutdown cli reporting unconsumed lines errors
tests run administrative user use essecurityrunasuser become less privileged user needed
test hijacking scroll fails test implemented rest api simple hijack scroll excercise code apis truly paranoid wed hack together something test others well
tests count index node doesnt shards index
tests count index run across multiple nodes
builds map returned header column
run sql text using format parameter specify format rather accept header
run sql text using accept header specify format rather format parameter
tests throw report transaction isolation throw sensible errors ask any
wraps csv expectedresults csv connection use executecsvquery obtain resultset connection
executes query provided csv connection supplied table name used test identification
assert given result sets potentially lenient way lenient specified type comparison column widden reach common compatible ground means promoting integer types long floating types double comparing values example nonlenient strict case comparison int tinyint would fail lenient succeed long actual value same
returns value given type either lenient fashion widened strict
test select implemented scroll query case fetch size entirely respected
test select implemented scroll query test dont retrieve records rely close clean cursor
test select implemented aggregation
properties used build connection
read address elasticsearch suitable jdbc driver system properties
support procedures return empty set databasemetadatagetproceduresstring string string
support procedures return empty set databasemetadatagetprocedurecolumnsstring string string string
tests rollup job created old cluster correctly restarted upgrade
tests single document survives super basic smoke test
todo entire class removed securityintegtestcase meant tests run real xpack
tests scrollhelperfetchallbyentityclient searchrequest actionlistener function defends scrolls broken way remote elasticsearch returns infinite results elasticsearch shouldnt past very does takes whole node makes sure defend properly
pki realm enabled checks see ssl client authentication enabled least one network communication layer
test node fails check context bootstrap context result bootstrap check
test node fails check context bootstrap context result bootstrap check
test node fails check context bootstrap context result bootstrap check
get setting setting configuration security components including defined extensions
tests run administrative user use essecurityrunasuser become less privileged user
multistage test that create new ca uses ca create 2 node certificates creates 3rd node certificate using autogenerated ca checks first 2 node certificates trust one another checks 3rd node certificate not trusted checks 3 certificates right values based command line options provided generation
gets random name valid certificate generation cases random value could match one reserved names like ca method allows us avoid issues
checks whether keys keystore trusted truststore
writes description instances given path
writes description instances given path
multistage test that creates zip pkcs12 cert autogenerated ca uses generate ca create pem certificate checks pkcs12 certificate pem certificate trust one another
parses input file retrieve certificate information file file parse collection certificate information
method handles writing certificate authority cert private key certificate authority generated invocation tool outputstream output stream write pemwriter writer pem objects info certificate authority information
returns ca certificate private key used sign certificates may specified user automatically generated terminal terminal use prompting user dn distinguished name use ca cacertpath path ca certificate null provided cakeypath path ca private key null provided prompt whether prompt user password keypass password private key present key encrypted user prompted env environment tool resolve files keysize size key bits days number days certificate valid ca cert private key
generates certificate signing requests writes specified file zip format outputfile file write output to file must already exist certinfo details use certificate signing requests
method handles collection information instance necessary generate certificate user may prompted information gathered file terminal terminal use user interaction inputfile optional file used load instance information collection certificateinformation represents instance
checks output file user specified options prompts user output file terminal terminal communicate user outputpath user specified output file may null path output file
method handles deletion file case partial write file file written writer writes contents file
generates signed certificates pem format stored zip file outputfile file certificates written to file must exist certificateinformations details creation certificates cainfo ca information sign certificates keysize size key bits days number days certificate valid
helper method read private key support prompting user key avoid passwords placed argument prompt user password encounter encrypted key path path private key password password provided user null terminal terminal use user interaction prompt whether prompt user privatekey read file
converts inetaddress objects generalnames object used represent subject alternative names
generates signed certificate using provided ca private key information ca certificate principal principal certificate commonly referred distinguished name dn subjectaltnames subject alternative names added certificate x509v3 extension may null keypair key pair associated certificate cacert ca certificate null results self signed certificate caprivkey ca private key null results self signed certificate days days certificate valid signed x509certificate
generates certificate signing request keypair key pair associated certificate generated certificate signing request principal principal certificate commonly referred distinguished name dn sanlist subject alternative names added certificate x509v3 extension may null certificate signing request
based private key algorithm privatekeygetalgorithm determines default signing algorithm used certgenutils key privatekey algorithm
generates ca certificate
generates rsa key pair provided key size in bits
creates x509 generalname use common name certificates subject alternative names extension common name name tag generalnameothername other objectid references cnoid cn attribute explicit tag 0 der encoded utf8 string name usage using cn oid subject alternative name nonstandard recognised x509tls implementations
generates signed certificate principal principal certificate commonly referred distinguished name dn subjectaltnames subject alternative names added certificate x509v3 extension may null keypair key pair associated certificate cacert ca certificate null results self signed certificate caprivkey ca private key null results self signed certificate isca whether generated certificate ca days days certificate valid signaturealgorithm algorithm used signing certificate null empty use default algorithm certgenutilsgetdefaultsignaturealgorithmprivatekey signed x509certificate
generates signed certificate using provided ca private key information ca certificate principal principal certificate commonly referred distinguished name dn subjectaltnames subject alternative names added certificate x509v3 extension may null keypair key pair associated certificate cacert ca certificate null results self signed certificate caprivkey ca private key null results self signed certificate days days certificate valid signaturealgorithm algorithm used signing certificate null empty use default algorithm certgenutilsgetdefaultsignaturealgorithmprivatekey signed x509certificate
gets random serial certificate generated securerandom
helper method read private key support prompting user key avoid passwords placed argument prompt user password encounter encrypted key path path private key password password provided user null terminal terminal use user interaction privatekey read file
method handles deletion file case partial write file file written writer writes contents file
parses input file retrieve certificate information file file parse collection certificate information
method handles writing certificate authority pkcs12 format zip file outputstream output stream write info certificate authority information terminal used prompt password if already supplied
generates certificate signing requests writes specified file zip format certinfo details use certificate signing requests
checks whether parent directories path exist offers create needed
method handles writing certificate authority pem format zip file outputstream output stream write pemwriter writer pem objects info certificate authority information includekey true write ca key pem format
method handles collection information instance necessary generate certificate user may prompted information gathered file collection certificateinformation represents instance
method handles deletion file case partial write file file written writer writes contents file
returns ca certificate private key used sign certificates may specified user automatically generated ca cert private key
generates signed certificates either pkcs12 format pem format wrapped zip file necessary output output file either zip pkcs12 writezipfile true output zip file otherwise output single pkcs12 file options current command line options certs certificates write file cainfo ca information sign certificates terminal terminal use prompting passwords
gets random name valid certificate generation cases random value could match one reserved names like ca method allows us avoid issues
writes description instances given path
returns security specific action name given incoming action name request
wildcards request treated does user privilege every possible index matches pattern or expressed differently does user privilege wildcard covers is superset of pattern
tests action responds correctly userrole some privileges checked
tests action responds correctly userrole none privileges checked
tests action names request considered matched relevant named privilege in case deleteaction indexaction satisfied indexprivilegewrite
tests request types support remote indices resolved index names local
tests request types known support remote indices successfully pass resolver
verifies behaviour tested testuserwithnorolescanperformremotesearch work requests remoteindexcapable
test mimics testuserwithnorolescanperformremotesearch except referenced index looks like remote index remote cluster name defined actually local index access denied
test mimics testuserwithnorolescannotperformlocalsearch includes local remote indices including wildcards
adds authentication scrollcontext
compares authentication stored scrollcontext current authentication cannot guarantee details authentication same things could differ include roles name authenticating or lookup realm work around compare username originating realm type
checks scrollcontext exists compares authentication object scroll context current authentication context
method used determine request executed system user even request already user associated it order user replaced system user one following conditions must true the action internal action user associated request the action internal action thread context contains noninternal action originating action threadcontext threadcontext contains headers context associated request action action name executed true system user used execute request
stashes current context executes consumer proper user based origin action method knows nothing listeners important callers ensure listeners preserve context restore appropriately
returns true thread context contains origin action authentication
verifies given user execute given request and action user doesnt appropriate privileges actionrequest elasticsearchsecurityexception thrown authentication authentication information action action request request elasticsearchsecurityexception given user allowed execute given request
performs authorization checks items within bulkshardrequest inspects bulkitemrequest items within request computes implied action items docwriterequestoptype checks whether action allowed targeted index items fail checks bulkitemrequestabortstring exception aborted denialauthentication string transportrequest string access denied exception shard level request exactly 1 index small number possible item docwriterequestoptype types number distinct authorization checks need performed small results must cached avoid adding high overhead bulk request
special handling value authorize put mapping request dynamic put mapping requests use concrete index allow permissions defined aliases requests concrete index list authorized indices need look see authorized alias
resolves necessary updates list index names provided request accordance users authorizedindices wildcards expanded phase ensure security execution decisions made fixed set index names consistent change life request provided request type allowsremoteindicesindicesrequest allows remote indices index names categorized refer resolvedindicesgetlocal local indices refer resolvedindicesgetremote remote indices categorization follows standard remoteclusterawarebuildremoteindexnamestring string remote indexname format also respects currently defined remoteclusterawaregetremoteclusternames remote clusters thus index name n considered remote ifandonlyif following true request supports remote indices n format clusterindex allowable cluster index contain wildcards separator must explicit cluster matches one remote cluster names registered within cluster case wildcards cluster portion name expanded resulting remoteindexnames added remote index list otherwise n added local index list
test direct result issue field level security permissions merged correctly improper merging resulted allow result merging permissions different roles instead properly creating union languages
test mainly make sure read default rolesyml config
retrieve list roles rolestoget null empty fetch roles
returns true safe use query cache query
populates fields set fields used query throws unsupportedoperationexception doesnt know this
adds index alias security underlying concrete index
creates address without lookups hostname null missing
ands predicates filter policy indices roles fields audit event multivalued values match filter predicate corresponding field
empty filter list field match events field missing event undefined field field value empty string singleton list empty string
requirement empty string filters match empty string fields case require automatons empty string match empty string automatonspredicatetest false automatonspredicatetest true
field missing event value filtering purposes empty string singleton stream empty string allows policy filter missing value using empty string ie ignorefiltersusers elastic filter events missing user field such anonymousaccessdenied well events elastic username
creates address without lookups hostname null missing
method determines service started based state clusterchangedevent node master not using remote indexing call remote cluster made retrieve state rules applied order service start following must true the cluster must gatewayservicestatenotrecoveredblock words gateway must recovered disk already the current node must master securityauditlog index template must exist the current audit index must exist primary shards active current audit index name determined rollover settings current time event clusterchangedevent containing date cluster state true requirements met service started
starts service state moved orgelasticsearchxpacksecurityauditindexindexaudittrailstatestarting beginning method services components initialized current node master index template stored state moved orgelasticsearchxpacksecurityauditindexindexaudittrailstatestarted returning queue messages came service started drained
atomically writes specified file line per entry specified map using specified transform convert entry line writing done atomically following sense first lines written temporary file writing succeeds temporary file moved specified path replacing file exists failure occurs existing file preserved temporary file cleaned up key type map entries value type map entries path path map map whose entries transform lines transform transform convert map entry line
prepares index creating doesnt exist updating mappings mappings date tasks executed runnable executed
returns routingtable index null index exist
resolves concrete index name alias indexmetadata instance requires supplied alias alias resolves one concrete index
return true state moves unhealthy red index state healthy nonred state
check attributes paths changed warning given terminal have
create checker given paths warn given terminal changes made
extracts rest remote address message context found returns null transport messages created rest handlers context
check whether given request allowed within current license state setup return name unlicensed feature default returns exception security available current license security enabled subclasses override method additional requirements null required features available otherwise exception sent requestor
settings nodes settings licensestate license state used determine security licensed
calls innerpreparerequestrestrequest nodeclient method checks license state license state allows auth result innerpreparerequestrestrequest nodeclient returned otherwise default error response returned indicating security licensed note implementing rest handler called license checked trip unused parameters check
refreshes current inuse metadata
creates elasticsearchsecurityexception indicates token expired client reauthenticate obtain new token format response defined hrefhttpstoolsietforghtmlrfc6750section31
create token based provided authentication metadata created token stored security index
creates elasticsearchsecurityexception indicates request contained invalid grant
method performs steps necessary invalidate token may longer used invalidateaccesstokenstring actionlistener
rotate current active key spare key created previous generatesparekey call
method performs steps necessary invalidate token may longer used process invalidation involves step needed backwards compatibility versions prior 620 step records entry indicate token given id expired second step record invalidation tokens created versions 62 step involves performing update token document setting invalidated field true
checks token stored revoked token ensure allow tokens explicitly cleared
uses refresh token refresh associated token returns new token updated expiration date listener
performs checks retrieved source returns optional exception issue
looks context see request provided header user token token validated includes authenticated decryption verification token revoked expired
gets token authorization header header begins bearer
performs actual invalidation token tokendocid id token doc invalidate listener listener notify upon completion attemptcount number attempts invalidate already tried srcprefix prefix use constructing doc update documentversion expected version document update
performs actual bwc invalidation token kicks new invalidation method usertoken token invalidate listener listener notify upon completion attemptcount number attempts invalidate already tried expirationepochmilli expiration time milliseconds since epoch
find stored refresh access tokens invalidated expired issued specified realm
creates elasticsearchsecurityexception indicates token expired client reauthenticate obtain new token format response defined hrefhttpstoolsietforghtmlrfc6750section31
performs actual refresh token retries case certain exceptions may recoverable refresh involves retrieval token document updating token document indicate document refreshed
creates new token service settings node settings clock clock used comparing timestamps client client use checking revocations
creates new key unless present newer current active key returns corresponding metadata note method doesnt modify metadata used token service see refreshmetadatatokenmetadata
reads authentication metadata given token method validate whether token expired not
tuple accesstoken refreshtokenid
prunes keys keeps latest n keys around numkeystokeep number keys keep
generates secret key based provided password salt method computationally expensive
serializes token string containing encrypted representation token
test exists in 5x want backwards compatible accept custom realms updated explicitly declare settings orgelasticsearchxpackcoresecuritysecurityextensiongetrealmsettings
creates new token based values stream
create new token existing id
method starts authentication process authentication process broken distinct operations order operations are look existing authentication lookforexistingauthenticationconsumer look user token token extraction extracttokenconsumer token authentication consumetokenauthenticationtoken user lookup run necessary consumeuseruser map lookuprunasuseruser string consumer write authentication context finishauthenticationuser
iterates realms attempts lookup run user given username consumer called regardless user found not nonnull user fail requests run user found leak names users exist using timing attack
consumes user resulted attempting authenticate token realms user null authentication fails proceed user request inspected see run functionality use run use finishauthenticationuser called otherwise try lookup run user lookuprunasuseruser string consumer
consumes authenticationtoken provided caller case null token handlenulltoken called case nonnull token realms iterated first realm returns nonnull user authenticating realm iteration stopped user passed consumeuseruser map exception caught trying authenticate token
authenticates username password provided parameters look values threadcontext authentication action action message message message resulted authenticate call token token credentials authenticated
finishes authentication process ensuring returned user enabled run user enabled one authentication successful method also ensures authentication written threadcontext
writes authentication threadcontext calls listener successful
looks see request contains existing authentication so authentication used consumer called exception thrown trying read authentication may called null value
determines whether type internal realmtype provided xpack including reservedrealm
creates realmfactory factories internal realm type excludes reservedrealm cannot created dynamically map realmtype factory
finds values specified attribute attributeid name attribute either name code friendlyname list matching attribute values may empty
content content saml message raw xml particular not base64 encoded
constructs saml specific exception consistent message regarding saml signature validation failures
converts joda datetime java instant
tests whether provided function returns true idps signing credentials elasticsearchsecurityexception saml exception matching credential found
processes provided logoutrequest extracts nameid sessionindex returns samlattributes object empty attributes list recommended binding logout for maximum interoperability httpredirect binding signature applied querystring including parameter names urlencodedbase64encodeddeflated values therefore order properly validate signature method operates raw query string elasticsearchsecurityexception saml invalid realmconfiguration
map samlattribute name configurationsetting name
spec states never happen saml bindings spec v20 wd6 section 3441 point 3 onelogin includes newlines anyway
creates saml orgopensamlsamlsaml2corelogoutresponse provided requestid
always returns null support reading saml token request orgelasticsearchxpacksecurityactionsamltransportsamlauthenticateaction
factory saml realm constructor needs initialise number components delegating samlrealm
creates saml logoutrequest single logout request provided session realm idp configuration support slo otherwise returns null samlrealmsettingsidpsinglelogout
generating x509 credentials cpu intensive slow want per class
testing test real signing tests useless signing incorrectly implemented
testing test real encryption tests useless encryption routines dont anything
randomly selects digital signature algorithm uri given private key algorithm privatekeygetalgorithm key privatekey algorithm uri
reads key pair associated certificate given algorithm key length testing ec algorithm 256 key size used others use 2048 default x509certificate signed certificate its privatekey
whether service provider signs orgopensamlsamlsaml2coreauthnrequest messages
certificate credential used send encrypted data service provider
getredirect url used handle saml logout session termination
post url used accept saml assertions authentication results
request named attribute provided part assertions specified attributeconsumingservice
constructs entitydescriptor contains single spssodescriptor
contact within organisation operates service provider
organisation operates service provider
name service use attributeconsumingservice
certificate used send encrypted data service provider
locale locale use element require xmllang attributes entityid uri service provider entity
format service provider expects incoming nameid element
certificate service provider users sign saml requests
tests user login via saml idp uses a real idp shibboleth running locally a fake ui running jvm roughly mimic kibana see httplogin httpacs a fake web browser apache http client takes following steps requests login local ui walks login process idp receives json response local ui bearer token uses token verify user details
finds target url samlresponse html form provided content
simple mapping maps thor user shibboleth realm kibanausers role could something complex unit tests rolemapping verify mapping runs ok real environment
perform requests elasticsearch kibana user user used typical saml deployment where kibana providing ui saml web sso interactions use kibana user need set password something know
verifies provided refresh token see orgelasticsearchxpacksecurityauthctokenservice used get new valid access token refresh token
submits saml assertion acs uri acs uri service providers assertionconsumerservice saml deflated base64 encoded samlresponse parameter post acs
submits shibboleth consent form provided uri consent form step shibboleth inserts login flow confirm user willing send personal details application sp logging to tuple uri sps assertionconsumerservice samlresponse post service
provides login handler fake webapp interacts elasticsearch using rest client find login page idp sends redirect page
provides assertionconsumerservice handler fake webapp interacts elasticsearch using rest client perform saml login forwards json response back client
navigates login page local in memory http ui uri login form submitted
finds target url html form within provided content
wraps httphandler trycatch block returns 500 server error exception assertionerror occurs
verifies provided access token see orgelasticsearchxpacksecurityauthctokenservice expected user expected name roles
submits shibboleth login form provided uri uri consent form submitted
processes provided saml response within provided token and valid extracts relevant attributes it orgelasticsearchelasticsearchsecurityexception saml invalid realmconfiguration
samlexceptionstring object
constructs exception distinguished via issamlexception saml specific exception used distinguish expected exceptions such saml signature failures missing attributes treated simple authentication failure with clear cause
enabling schema validation setvalidatingtrue documentbuilderfactory requires provide errorhandler implementation saxexception document attempt parse valid according specified schema
needed order initialize underlying opensaml library must called anything potentially interacts opensaml whether server code tests initialization happens within privileged block underlying apache xml security library permission check initialization happens specific context classloader opensaml loads resources jar file
constructs documentbuilder necessary features secure parserconfigurationexception one features cant set documentbuilderfactory
enabling user forces doc written security index user doc empty password special case code reserved realm
asynchronous method put user put user request without password hash treated update fail validationexception user exist password hash provided issue update request upsert document well upsert document sets enabled flag user true document already exists method modify enabled value
retrieve list users usernames null empty fetch users
async method change password native reserved user reserved user exist document created hash provided password
async method retrieve user password
asynchronous method update enabled flag user user reserved document exist document created user reserved user must exist otherwise operation fail
handles updating user already exist password change
asynchronous method create reserved user given password hash cache user cleared document indexed
method used verify username credentials stored system username username lookup user password plaintext password verify
blocking version getuser blocks user returned
tests multiple concurrent run requests authenticated successfully bug cache implementation used internal realms caused run requests fail even authentication valid run user existed issue iterating realms would failed lookups heavy concurrency requests wait existing load attempt cache original caller thrown executionexception nested nullpointerexception since loader returned null value callers would get null value unexpectedly
creates new logger detached root logger appender output log messages terminal
general purpose https call json contenttype authorization header ssl settings read settings file any user user authorization header password password authorization header requestbodysupplier supplier json string body request responsehandler handler response input stream http protocol response code
collects passwords users issues set requests fails first failed request case rerun tool redo operations passwordfn function generate prompt users password successcallback callback successful operation
validates bootstrap password local keystore making authenticate call returns silently server reachable password valid throws userexception otherwise terminal write verbose info
sets one users password using elastic superuser credentials user user whos password change password new password user
parses users file returns null users file exist
internally class try load file reason cant were lenient logging error skipping users aligned handle autoloaded files security
internally class try load file reason cant were lenient logging error skipping enries aligned handle autoloaded files security
accepts mapping user list roles
parses usersroles file returns code null usersroles file exist read file holds mapping per line form role users returned map holds entries form user roles
checks user exists given password
checks role given users role exist users passed
checks user exist users usersroles files
tests searching groups userattribute field set dn which special
tests clientside timeout asynchronous ldap sdk treated failure rather simply returning results
tests searching groups userattribute field set missing value
tests searching groups userattribute field set
creates realm provided settings rebuilds ssl service aware new realm returns realmconfig
wraps provided sessionlistener preserve threadcontext associated current thread responses headers preserved needed response output yet exist produced within realmldapsession
given username password open connection ldap bind authenticate retrieve groups map roles build user user passed listener
execution runnable already started runnable cancelled pass exception user listener
sets ldapsession using connection pool potentially holds existing connections server
sets ldapsession using following process opening new connection ldap server executes bind request using bind user executes search find dn user closes opened connection opens new connection ldap server executes bind request using found dn provided password creates new ldapsession bound connection
contract realm implementations logandreturnnull and call actionlisteneronfailureexception internal exception prevented performing authentication method tests ldap server unavailable invalid hostname null result rather exception
securely escapes username inserts template using messageformat username username insert dn template commas equals plus escaped dn distinquished name build template
iterates configured user templates attempting open attempts fail last exception kept cause thrown exception username relative name distinguished name inserted template
config configuration realm sslservice ssl service get socket factory context groupresolver resolver use find groups belonging user poolingenabled setting used determine connection pooling enabled binddn dn user used pooled connections or null perform anonymous bind healthcheckdnsupplier supplier dn query health checks threadpool thread pool used async queries execution
creates connection pool used session factory initializes health check support
method used cleanup connection pool one used
collects certificates normally trusted node contained testnodejks
test realms support user login implementation wise means first realm reject authentication attempt second realm tried one realm using common name cn login uses userid samaccountname see setupsecondaryrealm simply matter checking authenticate identifiers
method performs asynchronous ldap search operation could multiple results
method performs asynchronous ldap search operation expects one result one result found error results found null returned ldap server returns error resultcode handled actionlisteneronfailureexception failure
performs actual connection following referral given url string referral followed may contain result relevant search
method performs asynchronous ldap search operation could multiple results
method performs asynchronous ldap search operation expects one result one result found error results found null returned ldap server returns error resultcode handled actionlisteneronfailureexception failure
returns true provide searchresult successfully completed server note referrals not considered successful response purposes method
method performs asynchronous ldap search operation could multiple results
necessary fork executing runnable deadlock happen thread handles bind responses blocks bind call waiting response handle
method performs asynchronous ldap search operation could multiple results
method submits bind request one connection pool bind authentication reverted connection returned pool connection safely reused see ldapconnectionpoolbindandrevertauthentication validates bind credentials bind calls blocking bind executed ldap connection reader thread as returned ldaputilsisldapconnectionthread thread blocked interrupted something else timeout timer do call bind outside method ldaputilsmaybeforkthenbindldapconnection bindrequest threadpool abstractrunnable ldappool ldap connection pool submit bind operation bind request object bind operation threadpool threads call blocking bind operation case calling thread connection reader see ldaputilsisldapconnectionthread runnable runnable continues program flow bind operation executed thread prior bind
method submits bind request ldap connection authentication status changes connection subsequently reused validates bind credentials bind calls blocking bind executed ldap connection reader thread as returned ldaputilsisldapconnectionthread thread blocked interrupted something else timeout timer do call bind outside method ldaputilsmaybeforkthenbindldapconnection bindrequest threadpool abstractrunnable ldap ldap connection submit bind operation bind request object bind operation threadpool threads call blocking bind operation case calling thread connection reader see ldaputilsisldapconnectionthread runnable runnable continues program flow bind operation executed thread prior bind
ldapurls urls form ldap ldaps
ldap connections closed clean resources
object intended constructed ldapconnectionfactory constructor accepts logger connection log since connection instantiated frequently its best logger connection created outside reused across connections cant keep static logger class since want logger contextual ie aware settings environment
validates client kerberos ticket received peer first performs service login using keytab supports multiple principals keytab principal selected based request gss security context establishment state handled follows context established call actionlisteneronresponse tuple username outtoken peer reply context established call actionlisteneronresponse tuple username null outtoken needs sent peer negotiation never calls actionlisteneronresponse null tuple failure call actionlisteneronfailureexception decodedtoken base64 decoded kerberos ticket bytes keytabpath path service key tab file containing credentials es service krbdebug true enables jaas krb5 login module debug logs
encodes specified byte array using base64 encoding scheme outtoken byte array encoded string containing base64 encoded characters returns null outtoken null empty
performs authentication using provided keytab keytabfilepath keytab file path krbdebug true enables jaas krb5 login module debug logs authenticated logincontext instance note needs closed using logincontextlogout usage privilegedactionexception privileged action threw exception
privileged wrapper closing logincontext throw exceptions logs debug message logincontext logincontext closed
acquiring spnego mechanism credentials service based subject gssmanager gssmanager subject logged subject gsscredential particular mechanism privilegedactionexception privileged action threw exception
privileged wrapper invokes action subjectdoas perform work given subject subject subject used work action privilegedexceptionaction action performing inside subjectdoas value returned privilegedexceptionactions run method privilegedactionexception privileged action threw exception
handles gss context establishment received token passed gsscontext acceptor side returns token needs sent peer gss context establishment base64decodedticket token generated peer gsscontext instance acceptor gsscontext subject authenticated subject byte containing token sent peer null indicates token generated privilegedactionexception privileged action threw exception gsscontextacceptseccontextbyte int int
privileged wrapper closing gsscontext throw exceptions logs debug message gsscontext gsscontext disposed
handles server response returns new token sent server base64token intoken received server passed initseccontext gss negotiation base64 encoded token sent server may return null nothing sent privilegedactionexception privileged action threw exception
performs authentication using provided principal name password client principal principal name password securestring authenticated logincontext instance note needs closed logincontextlogout usage loginexception thrown problem login configuration login fails
spnego client usage needs closed order logout logincontext dispose gsscontext
gsscontext initiator side handling initiates context establishment returns base64 encoded token sent server base64 encoded token privilegedactionexception privileged action threw exception
creates spengoclient interact given service principal use close logout logincontext dispose gsscontext usage userprincipalname user principal name login client password password client serviceprincipalname service principal name client interacts with privilegedactionexception privileged action threw exception gssexception thrown gss api error occurs
creates principals exports keytab created directory dir directory key tab would created princnames principal names created path key tab file exception thrown principal keytab could created
build kerberos realm settings keytabpath key tab file path maxusersincache max users maintained cache cachettl time live cached entries enabledebugging krb5 logs removerealmname true want remove realm name username form userrealm settings kerberos realm
write content provided keytab file keytabpath path keytab file content content keytab key tab path ioexception io error occurs writing keytab file
constructs spnegohttpclientconfigcallbackhandler given principalname keytab userprincipalname user principal name keytabpath path keytab file user enabledebuglogs true enables kerberos debug logs
constructs spnegohttpclientconfigcallbackhandler given principalname password userprincipalname user principal name password password user enabledebuglogs true enables kerberos debug logs
privileged wrapper invokes action subjectdoas perform work given subject subject subject used work action privilegedexceptionaction action performing inside subjectdoas acc accesscontrolcontext tied specified subject action see subjectdoasprivilegedsubject privilegedexceptionaction accesscontrolcontext value returned privilegedexceptionactions run method privilegedactionexception
logged logincontext available attempts login returns logincontext logincontext privilegedactionexception
creates multiple principals kdc adds keytab file keytabfile keytab file add created principals keytab file exists always appends it principals principals add kdc include domain exception thrown principals keytab file could created
constructor simplekdcldapserver creates instance kdc server ldap backend server also initializes starts provided configuration stop kdc ldap server use stop workdir base directory server used locate kdcconf backendconf kdcldiff orgname org name base dn domainname domain name base dn ldiff ldap directory exception kdc ldap server initialization fails
stop simple kdc server privilegedactionexception privileged action threw exception
creates simple mapping maps users kerberos realm kerbtest role
usually principal names form userinstancerealm method removes realm part principal name kerberosrealmsettingssettingremoverealmname true else return input string principalname user principal name username removal realm
creates elasticsearchsecurityexception reststatusunauthorized cause also populates wwwauthenticate header value negotiate scheme message detail message cause nested exception args arguments message instance elasticsearchsecurityexception
extract token authorization header valid value negotiateauthheaderprefix returns kerberosauthenticationtoken authorizationheader authorization header request returns null authheader empty start value negotiateauthheaderprefix else returns valid kerberosauthenticationtoken elasticsearchsecurityexception negotiate header invalid
sets wwwauthenticate header outtoken null passed instance elasticsearchsecurityexception returns instance outtoken provided null empty appended negotiate used header value header wwwauthenticate sent peer form negotiate oyh1mihyoamk required client gss negotiation continue further ese instance elasticsearchsecurityexception status reststatusunauthorized outtoken non null empty value sent peer instance elasticsearchsecurityexception wwwauthenticate header populated
usually principal names form userinstancerealm method removes realm part principal name kerberosrealmsettingssettingremoverealmname true else return input string principalname user principal name username removal realm
formats user data expressionmodel model not nested values values simple java values keys may contain example metadata values stored model key metadatakey key key metadata object
distinguished name authenticated user applicable authentication method used otherwise null
internally class try load file reason cant were lenient logging error skippingremoving mappings aligned handle autoloaded files security
map groupdns es roles
user exists cache keyed principle name password validated hash also stored cache otherwise subclass authenticates user via doauthenticate authtoken authentication token listener called completion
indicates provided realm cache cleared store updated that is putrolemappingputrolemappingrequest actionlistener deleterolemappingdeleterolemappingrequest actionlistener called clearrealmcacheaction
loads mappings index package private unit testing
provides usage statistics store resulting map contains keys size total number mappings stored index enabled number mappings expressionrolemappingisenabled enabled
retrieves one mappings index names null setisempty empty retrieves mappings otherwise retrieves specified mappings name
test uses testclient cert trusted ssl layer trusted pki authentication realm
requests tls renegotiation means request peer performs another handshake prior continued exchange application data requested currently application mode sslexception handshake cannot initiated
uses transport client ssl disabled test connects client profile always fail nonssl transport client cannot connect ssl profile
uses transport client trusts testnode certificate test connects client profile uses testnode certificate requires client present certificate connection never work client certificate present
uses transport client custom key pair transportclient trusts testnode certificate self signed certificate test connects default profile uses truststore trust testclientclientprofile certificate requires client authentication connection always fail
node sets following profiles default testnode keypair requires client auth client testnodeclientprofile profile trusts testclient cert requires client auth noclientauth testnode keypair require client auth
uses transport client trusts testnode certificate test connects noclientauth profile uses testnode certificate require present certificate connection always succeed
uses transport client default jdk truststore truststore trusts known good public certificate authorities test connects default profile uses selfsigned certificate never trusted default truststore connection always fail
uses transport client custom key pair transportclient trusts testnode certificate self signed certificate test connects noclientauth profile uses truststore trust testclientclientprofile certificate require client authentication
uses transport client settings internal cluster transport client test connection noclientauth profile internal transport client used since connecting different profile since noclientauth profile require client authentication standard transport client connection always succeed settings default profile except port disabling client auth requirement
uses transport client trusts testnode certificate test connects default profile uses testnode certificate requires client present certificate connection never work client certificate present
uses transport client ssl disabled test connects noclientauth profile always fail nonssl transport client cannot connect ssl profile
uses transport client settings internal cluster transport client test connection client profile internal transport client used since connecting different profile client profile requires client auth trusts certificate testclientclientprofile keystore connection fail certificate presented standard transport client trusted profile
uses transport client ssl disabled test connects default profile always fail nonssl transport client cannot connect ssl profile
uses transport client default jdk truststore truststore trusts known good public certificate authorities test connects noclientauth profile uses selfsigned certificate never trusted default truststore connection always fail
uses transport client default jdk truststore truststore trusts known good public certificate authorities test connects client profile uses selfsigned certificate never trusted default truststore connection always fail
uses transport client custom key pair transportclient trusts testnode certificate self signed certificate test connects client profile set trust testclientclientprofile certificate connection always succeed
instantiates new pattern rule ruletype indicates allow block rule pattern filter pattern
intstr string containing integer def default string contain valid integer inetaddress integer
get subnets netmask decimal format ie getnetmask2552552550 returns integer cidr mask netmask network mask integer cidr mask
runs test actual class implementing custom interface implement expected marker interface specified violation parameter false clazz custom implementation outerclazz outer class load custom implementation relative interfaceclazz custom expectedinterfaceclazz marker interface violation whether actual class expected fail feature aware check ioexception io error occurs reading class
runs test actual class implementing custom interface expected marker interface clazz custom implementation outerclazz outer class load custom implementation relative interfaceclazz custom expectedinterfaceclazz marker interface ioexception io error occurs reading class
runs test actual class implementing custom interface expected marker interface clazz custom implementation outerclazz outer class load custom implementation relative interfaceclazz custom expectedinterfaceclazz marker interface ioexception io error occurs reading class
constructs representation featureaware violation name name custom class interfacename name featureaware interface expectedinterfacename name expected mixin class
loads class specified input stream checks implements featureaware custom extends appropriate mixin interface xpack class not specified callback invoked input stream callback callback invoke ioexception io exception occurs loading class hierarchy
check class directories specified arguments classes xpack implement customs extend appropriate marker interface provides mixin implementation clusterstatefeatureawaregetrequiredfeature args class directories check ioexception io exception walking class directories
cleanup tests featurespecific cleanup methods called rather using separate after annotated methods ensure welldefined cleanup order
delete left machine learning datafeeds jobs
executes api call using admin context waiting succeed
disable monitoring
delete left rollup jobs also reuses pendingtask logic ml refactor shared location
enable monitoring waits monitoring documents collected indexed monitoring indicesthis signal local exporter started ready tests
waits security template machine learning templates created metadataupgrader
waits pending tasks complete
waits machine learning templates created check version date
find memory size in bytes machine node running on takes container limits as used docker example account
calculates delay next time maintenance triggered next time 30 minutes past midnight following day plus random offset random offset added order avoid multiple clusters running maintenance tasks time cluster given name shall offset throughout life clustername cluster name used seed random offset delay next time maintenance triggered
stopping lookback closes associated job after stop call returns test ensures kill request submitted close doesnt put job failed state
check ml plugin disabled cannot create job rest handler registered
open job later gets added calendar take scheduled events account
test open job picks changes scheduled eventscalendars
validations fail fast trying update job state master node check job exists check job marked deleted check jobs version supported
visible testing
visible testing
validate stop request throws resourcenotfoundexception datafeed id datafeedid datafeedid datafeed id mlmetadata ml meta data
resolve requested datafeeds add ids one list arguments depending datafeed state request stop datafeed request mlmetadata ml metadata tasks persistent task meta data starteddatafeedids started datafeed ids added list stoppingdatafeedids stopping datafeed ids added list
validate close request throws exception conditions if job exist if job data feed feed must closed first if job opening jobid job id mlmetadata ml metadata tasks persistent tasks
resolve requested jobs add ids one list arguments depending job state opened jobs added openjobids closing jobs added closingjobids failed jobs added openjobids allowfailed set otherwise exception thrown request close job request state cluster state openjobids opened failed jobs added list closingjobids closing jobs added list
get jobs match given expression note jobid metadataall jobs returned expression jobid expression matching jobids clusterstate cluster state allownojobs false error thrown job matches jobid querypage containing matching jobs
create jobmanager
gets job matches given jobid jobid jobid clusterstate cluster state job matching given code jobid resourcenotfoundexception job matches jobid
stores job cluster state
validate char filtertokenizertoken filter names used categorization analyzer config if any validation done serverside cannot done client wont loaded appropriate analysis modulesplugins overall structure validated parse time exact names need checked separately plugins provide functionality installeduninstalled
removes temporary storage leftovers removes temp files folder might result unclean node shutdown broken clients call running jobs ioexception cleanup fails
delete temporary storage previously allocated path path temporary storage ioexception path cleaned
tries find local storage storing temporary data uniqueidentifier identifier used sub folder requestedsize maximum size required path temporary storage available null otherwise
its difficult use mocking get number calls logstatuslong mockitospy doesnt work due lambdas used datacountsreporter override method count calls
construct stating pipes expected created corresponding c process creates named pipes only one combination wanted pipes work given c process arguments constructor must carefully chosen reference corresponding c code processname name process pipes opened to must full path exe extension windows jobid job id process pipes opened process associated specific job may null empty processes associated specific job
connect pipes created c process must called corresponding c process started timeout needs long enough c process perform startup tasks precede creation named pipes many these short timeout fine however least couple seconds recommended due vagaries process scheduling way vms completely stall hypervisor actions
augments list command line arguments example built autodetectbuilder class
input stream datacountsreporter write number records bytes etc
report 1 byte read
get reference singleton native process controller nativecontroller created lazily allow time c process started connection attempted null returned tests xpackmlautodetectprocessfalse calls may throw exception initial connection c process fails
report counts regardless whether reporting boundary
increments date parse error count
increment number records written 1 increment total number fields read inputfieldcount number fields record note number processed fields by field etc actual number fields record recordtimems time record written milliseconds epoch
increments missing field count records missing fields still processed
increments order record count
log status done progressively less frequently job processes data logging every 10000 records data rate 40000 per second quickly rolls logs
add newbytes total volume processed
return true file eshomeconfigmlmodelconf
send signals make longer period sparse signals go number sparse buckets much could normal
send signals make long pause send another signal check whether counts right
test sparsity last 2 buckets create sparse bucket signal 2nd last
test sparsity last bucket create sparse bucket signal
resets counts note reset inner state eg sparse bucket detection
flush counters called end data stream
tail inputstream provided constructor handling complete log document arrives method return either endoffile detected inputstream inputstream throws exception
get process id c process whose log messages read arrive first log message logged c process log copyright message immediately startup take long arrive available instantly process starts
testing allows meddling logger read buffer size error store size
expected called infrequently
get process id c process whose log messages read arrive first log message logged c process log version number immediately startup take long arrive available instantly process starts
extracts version information copyright string assumes certain format
compare fields
updates normalized scores results
recursively merges scores returned normalization process results scoresiter iterator scores returned normalization process parent parent result parenthadbigchange whether parent big change result result updated effective normalized score given result
launches normalization process seeded quantiles state provided normalizes given results bucketspan null default used results updated normalized results quantilesstate state used seed system change normalizer
encapsulate logic deciding whether change normalized score big current logic big change change least 1 50 higher two values oldval old value normalized score newval new value normalized score true update considered big
update anomaly score field previously persisted buckets contained records
build command start normalizer process
compare fields
flush running job ensuring native process opportunity process data previously sent none left sitting buffers jobtask job task params parameters describing controls accompany flushing eg calculating interim results time control etc
request temporary storage used job jobtask job task requestedsize requested size path local storage null storage available
initiate background persistence job jobtask job task handler listener
forecast running job jobtask job task params forecast parameters
stop running job mark finished jobtask job stop restart whether job restarted persistent tasks reason reason closing job
passes data native process blocking call wont return data written process elasticsearchstatusexception thrown error conditions occur if configured field missing csv header if json data malformed cannot recover parsing if high proportion records timestamp field cannot parsed if high proportion records chronologically order jobtask job task analysisregistry registry analyzer components used build categorization analyzer necessary input data input stream xcontenttype xcontenttype input params data processing parameters handler delegate error datacount results count records fields bytes etc written
care must taken ensure method called data posted methods class call wait processing complete first expectation external calls made cleaning fatal error
closes job communicator encapsulating restart whether job restarted persistent tasks reason reason closing job
throws exception process exited
constructs autodetect process builder job job configuration filestodelete method append file objects need deleted process completes logger jobs logger
write normalizer init state file
visible testing
write ml autodetect model options emptyconffile
requests controller daemon start autodetect process
random time 1 hour added intervals tell c process perform periodic operations means many jobs certain amount staggering periodic operations given job always given staggering interval for given jvm implementation jobid id job calculate staggering interval staggering interval
set quantiles restore normalizer state any quantiles quantiles
accept request nothing write flush acknowledgement readautodetectresults params interim results generated flushid
returns epoch milli seconds
convert string record list lengthvalue encoded pair write outputstream
lower level functions write record fields individually plain writenumfieldsint must called first
lower level functions write records individually function called writefieldstring must called numfields times
convert string record array lengthvalue encoded pair write outputstream
create writer outputstream os object never close os
read json object write record array nested objects flattened field names separated eg record nested tags object namemytestmetric1tagstag1blahtag2boo time1350824400value12345678 use tagstag1 reference tag1 field nested object array fields json ignored record read fields written array array first filled empty strings never contain null gotfields boolean array element true field read number fields json doc 1 nothing read end stream reached
create reader parses mapped fields json parser json parser fieldmap map field name record array index position logger logger
cases parser doesnt recognise badly formed json document may skip end second document case lose extra record
returns null eof next token
get text representation current token unless its null nulls replaced empty strings match way rest product treats which turn shaped fact csv cannot distinguish empty string null
theres problem parser case skips first 2 records instead end first record invalid json means miss next record bad one
simple test push list records writer check output writer accepts empty strings null strings
test writefield writenumfields methods lengthencodedwriter
write ml autodetect field options outputindex stream
send flush message c autodetect process actually consists two messages one carry flush id which might processed much later fill buffers force prior messages through id flush echoed back c autodetect process complete
transform supplied control message length encoded values write outputstream number blank fields make full record deduced analysisconfig message control message write
writes control messages requested flushing job control messages need followed flush message order reach c process immediately list supported controls advance time calculate interim results params parameters describing controls accompany flushing eg calculating interim results time control etc
construct control message writer lengthencodedwriter lengthencodedwriter writer numberoffields number fields process expects record
create indexes output fields time field fields configured analysis control field time first field last control field
transform date input data write fields length encoded writer fields must copied input output function called record record written length encoded writer time transformed size number output analysis fields ie size map returned plain outputfieldindexes numberoffieldsread total number read included analysis
accessible testing only
set field index mappings must called plain datatoprocesswriterwriteinputstream categorizationanalyzer xcontenttype biconsumer finds required input indexes header sets mappings corresponding output indexes
write header header created list analysis input fields time field control field
get expected input fields ie fields must see csv header
tokenize field configured categorization store resulting list tokens csv format appropriate field record sent analytics categorizationanalyzer analyzer use convert categorization field list tokens categorizationfieldvalue value categorization field tokenized record record sent analytics
create map input index output index include time control fields infieldindexes map field name index input array
find indexes input fields header
read csv inputindex transform length encoded values pipe outputstream expected fields analysis inputindex expected time field missing csv header exception thrown
dont enforce check fields present json docs always returns true
read json inputindex transform length encoded values pipe outputstream transformation applied data timestamp expected seconds epoch fields analysisfields datadescriptions timefield missing josn inputindex exception thrown
return number missing fields
testing methods abstractdatatoprocesswriter uses concrete instances
constructs datatoprocesswriter depending data format time transformation jsondatatoprocesswriter data format json otherwise csvdatatoprocesswriter
test parsing csv nul character code point 0 u0000
test designed pick nsquared processing state consumption code size state document comparable c code create huge model 10 seconds overestimate time required avoid spurious failures due vm stalls reasonable spec laptop take around 1 second
splits bulk data streamed c process 0 characters data expected series elasticsearch bulk requests utf8 json as would uploaded public rest api separated zero bytes 0
ensure accept nan values
purpose method avoid saturating cluster state update thread lookback job churning buckets fast memory usage job changing regularly idea update established model memory associated job seconds new value received updates received delay period simply replace value originally caused update scheduled rate limits cluster state updates due established model memory changing one per job per delay period in reality updates occur rapidly lookback realtime operation limit one model size stats document per bucket mean maximum one cluster state update per job per bucket usually bucket span 5 minutes more delay delay updating established model memory
blocks flush acknowledged timeout expires whichever happens first flushid id flush request wait timeout timeout flushacknowledgement flush completed parsing finished null timeout expired
method called two places future used delayed updates shutting result processor shutting result processor its necessary anything update scheduled want update immediately despite cancelling scheduled update case its possible its already started running case method get called twice quick succession second call nothing scheduledestablishedmodelmemoryupdate reset null first call
given model snapshot get corresponding state write supplied stream multiple state documents separated using 0 written stream rule open legacy job current product version dont worry legacy document ids here jobid job id modelsnapshot model snapshot restored restorestream stream write state
starttime 0 parameter set
endtime 0 parameter set
page query result params page parameters
query calendars used job jobid job id
sort results calendarid sort sort true
starttime 0 parameter set
endtime 0 parameter set
return page influencers given job within given date range uses supplied client may run currently authenticated user jobid job id influencers requested query query
search buckets parameters bucketsquerybuilder uses internal client runs xpack user
create elasticsearch index mappings
get jobs model snapshot id
maps authorization failures querying ml indexes jobspecific authorization failures attributed ml actions works replacing action name another provided caller appending job id designed improve understandability admin applied index document level security mlanomalies indexes allow users access certain job results others example user mltest allowed see results ones job farequote then action indicesdatareadsearch unauthorized user mltest gets mapped to action clustermonitorxpackmlanomalydetectorsresultsbucketsget unauthorized user mltest job farequote exceptions related authorization returned unaltered e exception occurred getting ml data jobid job id mappedactionname outermost action name make sense user made request
get jobs model size stats
get jobs data counts jobid job id
get model snapshots job ordered descending restore priority jobid job id number snapshots size number snapshots retrieve startepochms earliest time include inclusive endepochms latest time include exclusive sortfield optional sort field name may null sortdescending sort descending order snapshotid optional snapshot id match null all
get model snapshots job ordered descending timestamp newest first jobid job id number snapshots size number snapshots retrieve
search anomaly records parameters recordsquerybuilder uses supplied client may run currently authenticated user
search buckets parameters bucketsquerybuilder uses supplied client may run currently authenticated user
get established memory usage job one order job considered established memory usage must generated least bucketsforestablishedmemorysize buckets results generated least one model size stats document low variability model bytes model size stats documents time period covered last bucketsforestablishedmemorysize buckets defined coefficient variation establishedmemorycvthreshold jobid id job established memory usage required latestbuckettimestamp latest bucket timestamp used calculation known otherwise null implying latest bucket exists results index latestmodelsizestats latest model size stats job known otherwise null supplying available avoids one search handler method succeeds passed established memory usage in bytes specified job 0 memory usage yet established errorhandler problem occurs exception passed handler
get page plain categorydefinitions given jobid uses supplied client may run currently authenticated user jobid job id augment category definition augmented grok pattern skip first n categories parameter paging size take number categories
check previously deleted job id left result categorizer state documents due failed delete left results would appear part new job cant check model state id based snapshot id timestamp unpredictable however unlikely new job would snapshot id old one job job configuration listener actionlistener
update jobs data counts stats figures jobid job update counts counts listener action response listener
execute bulk action
first time next called search performed first batch returned subsequent call return following batches note implementations possible results all first time method called empty deque returned deque next batch documents nosuchelementexception iteration elements
persist memory usage data blocking
persist quantiles async
persist list anomaly records records records persist
job data written function called commit writes datastore jobid job id
persist quantiles blocking
persist result bucket bucket influencers buckets persisted consistent id bucket bucket persist
persist memory usage data
execute bulk action
persist category definition category category persisted
persist list influencers optionally using influencers id auto generated id influencers influencers persist
persist model snapshot description
job state written calling function makes immediately searchable jobid job id
set query parameter null set
set query size parameter size null size set
sets whether interim results included includeinterim whether interim results included
query documents whose timestamp within given time range startepochms start time epoch milliseconds inclusive endepochms end time epoch milliseconds exclusive iterator
given collection strings work if any grok patterns were allowed use matches best append appropriate grok language represent finding onto supplied string builder
given collection strings grok pattern matches part all return collections bits come prefaces epilogues bit matches
first time particular field name passed simply return it second time return 2 appended third time return 3 appended etc
given category definition regex collection examples category return grok pattern match category pull likely fields extracted fields given pretty generic names unique within grok pattern provided expectation user adjust extracted field names based domain knowledge
grokpatternname name grok pattern try match must match one defined logstash fieldname name field extract match prebreak consider match its broken previous text this postbreak consider match its broken following text this
release resources held analyzer unless its global
get char filter factories configured char filter configuration element name outofthebox char filter custom definition
get tokenizer factory configured tokenizer configuration name outofthebox tokenizer custom definition
get token filter factories configured token filter configuration element name outofthebox token filter custom definition
convert config analyzer may global analyzer newly created custom analyzer case global analyzer caller must close finished it case newly created custom analyzer caller responsible closing it first tuple member analyzer second indicates whether caller responsible closing it
elasticsearch analysis functionality designed work indices categorization pretend weve got index settings
behaviour elasticsearch analyzers vary versions categorization well always use latest version text analysis settings stop classes expect associated index complaining
given field value convert list tokens using configured analyzer
verify config builder build valid config done part basic build verifies names analyzerstokenizersfilters referenced config known validity names could change time additionally done serverside rather clientside client loaded appropriate analysis modulesplugins
basically tokenise azaz09 strings also allowing underscores dots dashes middle discard tokens hex numbers begin digit
stops datafeed job true datafeed running method invocation stopped it otherwise false returned
issues recovery message appropriate prepares next report
updates tracking empty data cycles number consecutive empty data cycles reaches emptydatawarncount warning reported
reports problem different last seen problem problemmessage problem message
used license expires
used jvm killed differs stopalldatafeedsonthisnode leaves datafeed tasks started state get restarted different node
creates dataextractorfactory given datafeedjob combination
heuristic want time interval expect roughly scrollsize documents assuming data uniformly spread time totalhits documents datatimespread latesttime earliesttime want scrollsize documents chunk thus interval would scrollsize datatimespread totalhits however assuming chunk span may often lead halffilled pages empty searches beneficial take multiple that based benchmarking set 10x
processes list aggregations writes flat json document leaf aggregations supported subaggregations include multibucketsaggregation numericmetricsaggregationsinglevalue percentiles
constructs processor processes aggregations json timefield time field fields fields convert json includedoccount whether include doccount starttime buckets timestamp time discarded
write aggregated documents one bucket time batchsize keyvalue pairs written buckets written entirety check batchsize run bucket written batchsize keyvalue pairs could written function called repeatedly returns false point documents write batchsize number keyvalue pairs write true documents write call false documents write ioexception error occurs serialising json
adds leaf keyvalue returns name key added null nothing added nonfinite metric values added
format matches sample consists one xml documents root element name one document whitespace allowed them last one necessarily complete as sample could truncated it
given collection strings grok pattern matches part all return collections bits come prefaces epilogues bit matches
given collection message snippets work if any grok patterns were allowed use matches best append appropriate grok language represent finding onto supplied string builder
given chosen grok pattern collection message snippets split snippets matched section pieces it recurse find matches pieces update supplied string builder
snippets supplied begin 1 character common punctuation whitespace add last characters overall pattern remove snippets snippets input snippets modified output snippets copy input snippets whatever characters added overallpatternbuilder removed beginning
must called matchesall returns true tuple time field name grok string
build grok pattern match sample messages entirety seedpatternname pattern already determined match portion every sample message seedfieldname field name used portion every sample message seed pattern matches built grok pattern
explanation list reasons making decisions may contain items passed new reasons appended methods class samplemessages sample messages grok pattern found must match mappings updated mappings appropriate returned pattern nonnull
method attempts find grok pattern match sample messages entirety tuple time field name grok string null suitable grok pattern found
grokpatternname name grok pattern try match must match one defined logstash mappingtype data type field elasticsearch mappings fieldname name field extract match prebreak consider match its broken previous text this postbreak consider match its broken following text this
first time particular field name passed simply return it second time return 2 appended third time return 3 appended etc
rules are file must valid tsv must contain least two complete records must least two fields per record otherwise files tabs could treated tsv every tsv record except last must number fields reason last record allowed fewer fields others could truncated file sampled
format matches sample consists one json documents one must newlinedelimited documents must nonempty prevent lines containing matching
given sample values field guess appropriate index mapping field explanation list reasons choosing overall log structure list may nonempty method called method may append it fieldname name field mappings guessed fieldvalues values field mappings guessed guessed mapping compatible provided values must empty subsection index mappings appropriate field example type keyword
given one sample records find timestamp field consistently present all returned timestamp field must exist every record must timestamp format every record multiple fields meet criteria one occurred first first sample record chosen explanation list reasons choosing overall log structure list may nonempty method called method may append it samplerecords list records derived provided log sample tuple field name timestamp format one found null consistent timestamp
given sampled records guess appropriate elasticsearch mappings samplerecords sampled records map field name mapping settings
thinking longer field value spaces contains likely indexed text rather keyword
method implements simple algorithm calculating levenshtein distance
sum levenshtein distances corresponding elements two supplied lists excluding biggest difference reason biggest difference excluded sometimes theres message field much longer fields varies enormously rows skews comparison
rules are file must valid pipe separated values must contain least two complete records must least five fields per record otherwise files coincidental pipe characters could treated pipe separated every pipe separated value record except last must number fields reason last record allowed fewer fields others could truncated file sampled
sometimes elasticsearch mappings dates need include format method returns appropriate mappings settings minimum typedate possibly also format setting
parsing timestamp produce different results depending timezone parser ie textual representation define timezone
find first timestamp format matches part supplied value excluding specified number candidate formats text value returned timestamp format must exist within ignorecandidates number candidate formats exclude search timestamp format null none matches
interpret fractional seconds component date determine two things 1 separator character one colon dot 2 number digits fractional component date textual representation date fractional seconds interpreted tuple fractional second separator character number digits fractional component
find best timestamp format matching entire field value excluding specified number candidate formats text value returned timestamp format must match entirety ignorecandidates number candidate formats exclude search timestamp format null none matches
rules are file must valid csv must contain least two complete records must least two fields per record otherwise files commas could treated csv every csv record except last must number fields reason last record allowed fewer fields others could truncated file sampled
format matches sample contains least one newline least two nonblank lines
rules are file must valid semicolon separated values must contain least two complete records must least four fields per record otherwise files coincidental semicolons could treated semicolon separated every semicolon separated value record except last must number fields reason last record allowed fewer fields others could truncated file sampled
work around limitation privileged actions cannot throw checked exceptions classes wrap ioexceptions runtimeexceptions exception needs propagated back user class its nice get original ioexception rather wrapped runtimeexception however privileged calls could also possibly throw runtimeexceptions method accounts case too
use different logic input pipe case avoid danger creating regular file named pipe exist method first called file named pipe open timeout long wait named pipe exist stream opened read named pipe ioexception named pipe cannot opened
default path named pipes created nix created elsewhere subject security manager constraints windows place created directory prefix string
open named pipe created elsewhere input file named pipe open timeout long wait named pipe exist stream opened read named pipe ioexception named pipe cannot opened
logic similar opening input stream windows java cannot create regular file asked open named pipe doesnt exist file named pipe open timeout long wait named pipe exist stream opened read named pipe ioexception named pipe cannot opened
open named pipe created elsewhere output file named pipe open timeout long wait named pipe exist stream opened read named pipe ioexception named pipe cannot opened
open named pipe created elsewhere input path path named pipe open timeout long wait named pipe exist stream opened read named pipe ioexception named pipe cannot opened
open named pipe created elsewhere output path path named pipe open timeout long wait named pipe exist stream opened read named pipe ioexception named pipe cannot opened
makes index readonly its set readonly yet
returns information required upgrade action given indices indices list indices check specify all indices options wild card resolution option state current cluster state list indices upgradedreindexed
creates new upgrade check name name check settings system settings actionrequired return true work index specified name client client clusterservice cluster service types list types reindexing limited updatescript upgrade script used reindexing preupgrade action performed upgrade postupgrade action performed upgrade
perform index upgrade task task executes upgrade operation indexmetadata index metadata state current cluster state listener listener called upon completion upgrade
creates new upgrade check name name check settings system settings actionrequired return true work index specified name client client clusterservice cluster service types list types reindexing limited updatescript upgrade script used reindexing
execute client operation asynchronously try run action least privileges headers exist headers request headers ideally including security headers origin origin fall back security headers action action execute request request object action listener listener call action complete
execute client operation return response try run action least privileges headers exist headers request headers ideally including security headers origin origin fall back security headers client client used query supplier action run instance response class
executes consumer setting origin wrapping listener proper context restored
executes asynchronous action using provided client origin set context listener wrapped ensure proper context restored
stashes current context sets origin current context original context returned stored context
returns settings created xpacksettings
returns list nodes wont allow node adding xpack metadata cluster state see checkreadyforxpackcustommetadata details
checks cluster state allows node add xpack metadata cluster state throws exception otherwise check called installing xpack metadata cluster state ensure nodes part cluster able deserialize metadata note cluster state already contains xpack metadata check assumes nodes already ready receive additional xpack metadata check properly place everywhere allows install xpack cluster using rolling restart
returns path xpack codebase path
method executes search ensures stashed origin thread context created regular node client used emulate runas function
method executes search checks thread context enriched ml origin
read stream
create pipeline upgrade documents monitoringtemplateutilsoldtemplateversion description this pipeline upgrades documents version 6000001 processors expectation call either stringstostringxcontentbuilder bytesreferencebytesxcontentbuilder type type data want format request never null always endedobject lastupdatedversion
create pipeline allows documents different template versions upgraded expectation call either stringstostringxcontentbuilder bytesreferencebytesxcontentbuilder id api version eg 2 use type type data want format request never null always endedobject illegalargumentexception apiversion unrecognized pipelineids
create template nothing exist provide newer version know we created it id template identifier never null oldtemplateids oldtemplateversion
create empty pipeline description this placeholder pipeline version 6000001 processors expectation call either stringstostringxcontentbuilder bytesreferencebytesxcontentbuilder type type data want format request never null always endedobject lastupdatedversion
returns http status reststatusok monitoring bulk request successful or ignored collection disabled reststatusinternalservererror monitoring bulk request partially successful failed completely
adds monitoring document list documents indexed
parses monitoring bulk request builds list documents indexed
read stream
find monitoringindex use request indexname name index never null illegalargumentexception indexname unrecognized
configuration terms
configuration histogram
returns set aggregation builders represent configured set date histograms used rollup indexer iterate historical data
map representing config object rollupcaps aggregation object
returns set aggregation builders represent configured set metrics used rollup indexer iterate historical data
create new datehistogramgroupconfig using given configuration parameters field interval required compute date histogram rolled documents delay optional set null defines long wait rolling new documents timezone optional set null configured time zone value resolved using datetimezoneforidstring must match time zone identifier provided joda time library field name date field use date histogram required interval interval use date histogram required delay time delay optional timezone id time zone use calculate date histogram optional null utc timezone used
returns set aggregation builders represent configured set date histograms used rollup indexer iterate historical data
map representing config object rollupcaps aggregation object
tests datehistogramgroupconfig serializeddeserialized correctly timezone changed datetimezone string
map representing config object rollupcaps aggregation object
returns set aggregation builders represent configured set histograms used rollup indexer iterate historical data
constructs iteratingactionlistener delegate delegate listener call consumables finished executing consumer consumer executed consumable instance consumables instances consumed produce response ultimately sent delegate listener threadcontext thread context thread pool created listener consumablesfinishedresponse supplier maps last consumables response response sent delegate listener case last consumable returns null value delegate listener respond value perhaps concatenation results consumables
constructs iteratingactionlistener delegate delegate listener call consumables finished executing consumer consumer executed consumable instance consumables instances consumed produce response ultimately sent delegate listener threadcontext thread context thread pool created listener
returns current user information null current request authentication info
returns authentication information null current request authentication info
loads xpacksecurityextensions given class loader
returns ordered list role providers used resolve role names roledescriptor objects provider invoked order resolve role names resolved reserved native roles stores role provider represented biconsumer takes set roles resolve first parameter consume actionlistener second parameter consume implementation role provider asynchronous computation lengthy disk andor network io involved implementation responsible resolving whatever roles set roledescriptor instances successful implementation must invoke actionlisteneronresponseobject pass along resolved set role descriptors failure encountered implementation must invoke actionlisteneronfailureexception default empty list returned settings configured settings node resourcewatcherservice use watch configuration files changes
returns current user information null current request authentication info
runs consumer new context setting new version authentication compatible version provided original context provided consumer method returns original context restored
runs consumer new context provided user original context provided consumer method returns original context restored
writes authentication thread context
sets user forcefully provided user must existing user threadcontext otherwise exception thrown method package private testing
creates new security context cryptoservice null security disabled usersettingsgetuser usersettingsgetauthentication always return null
returns authentication information null current request authentication info
method fetches results given search request parses using given hit parser calls listener done
populate put privileges request using given source application name privilege name source must contain toplevel object keyed application name value applicationname object keyed privilege name value privilegename privilege object much match application privilege names nested
request trigger refresh plain refreshpolicyimmediate default wait refresh plain refreshpolicywaituntil proceed ignore refreshes entirely plain refreshpolicynone
sets realms caches evicted set caches realms evicted realms realm names
sets usernames users evicted caches set users evicted usernames usernames
sets usernames users evicted caches set users evicted usernames usernames
sets realms caches evicted set caches realms evicted realms realm names
sets roles caches evicted set roles evicted cache names role names
set roles cleared names names roles cleared builder instance
request trigger refresh plain refreshpolicyimmediate default wait refresh plain refreshpolicywaituntil proceed ignore refreshes entirely plain refreshpolicynone
populate put role request source roles name
request trigger refresh plain refreshpolicyimmediate default wait refresh plain refreshpolicywaituntil proceed ignore refreshes entirely plain refreshpolicynone
populate put role request source roles name
set username used authentication password grant
set password credentials associated user credentials used authentication resulting token user
set scope access token null scope implies default scope requested scope differs scope token tokens scope returned response
specifies grant type request currently password supported
tokenstring string representation token
string representation token invalidated value returned create token request
sets type token invalidated
request trigger refresh plain refreshpolicyimmediate default wait refresh plain refreshpolicywaituntil proceed ignore refreshes entirely plain refreshpolicynone
set whether user enabled
set username user enabled disabled must null
sets password note char passed method cleared
populate change password request source provided content type
request trigger refresh plain refreshpolicyimmediate default wait refresh plain refreshpolicywaituntil proceed ignore refreshes entirely plain refreshpolicynone
populate put user request using given source username
set username user enabled disabled must null
set whether user enabled
request trigger refresh plain refreshpolicyimmediate default wait refresh plain refreshpolicywaituntil proceed ignore refreshes entirely plain refreshpolicynone
use roledescriptorstring string indicesprivileges applicationresourceprivileges conditionalclusterprivilege string map map
generates xcontent roledescriptor instance builder xcontent builder params parameters xcontent generation directives doccreation true xcontent generated creating document security index false xcontent generated api display purposes xcontent builder ioexception error writing xcontent builder
use roledescriptorstring string indicesprivileges applicationresourceprivileges conditionalclusterprivilege string map map
read list privileges parser parser positioned xcontentparsertokenstartobject token privileges value
writes single object value builder contains provided privileges privileges grouped according conditionalclusterprivilegegetcategory categories
utility method read array conditionalclusterprivilege objects streaminput
construct new applicationprivilegedescriptor xcontent defaultapplication application name use none specified xcontent body defaultname privilege name use none specified xcontent body allowtype true accept type field for value must match doctypevalue
validates application name matches following rules consist prefix optionally followed either suffix prefix must begin lowercase ascii letter prefix contain ascii letter digits prefix must least 3 characters long suffix must contain stringsvalidfilename valid filename characters part name may contain whitespace allowwildcard true names end would match valid application name also accepted
validate provided privilege name valid throws exception otherwise illegalargumentexception name valid
validate provided name valid privilege name action name throws exception otherwise illegalargumentexception name valid
finds creates application privileges provided names element name may name stored privilege to resolved stored bespoke action pattern
checks whether role query contains queries know cant used dls role query
fall back validation verifies queries rewrite dont use client make remote calls case dls cause dead lock dls also applied remote calls example case terms query lookup cause recursive execution dls query get thread pool exhausted httpsgithubcomelasticxpluginsissues3145
test special handling fieldnames field
test filtering two vector fields
test filtering two binary dv fields
test special handling fieldnames field three fields exercise termsenum better
test filtering two stored fields double
test special handling source field
test filtering two stored fields float
test filtering index fields
test filtering two stored fields long
test filtering two sortedset dv fields
test filtering vector fields
test filtering two stored fields binary
test filtering two stored fields int
test filtering two int points
test core cache key needed nrt working
test filtering two text fields
test filtering two string fields
test filtering two stored fields string
test filtering two sorted dv fields
test filtering two numeric dv fields
test fieldnames field permitted doesnt exist segment
test filtering two sortednumeric dv fields
test fieldnames exist
test correct fieldinfos metadata
step characters provided string return resulting state 1 lead valid state
filter list characterrunautomaton defines fields retain
wrap single segment exposing subset fields
filter map characterrunautomaton defines fields retain
like computenumdocs caches results
compute number live documents method slow
allowed documents expressed query index permission null returned means document level restrictions
document field permissions index exist otherwise null returned null returned means field document level restrictions
test fieldsubsetreadertests test core cache key needed nrt working
checks permission matches provided action without looking indices used specific cases indices actions need authorized regardless indices usecase composite actions initially authorized based action name indices checked coordinating node properly authorized later shard level checking indices well
authorizes provided action provided indices given current cluster metadata
constructor enables fieldlevel security based includeexclude rules exclude rules precedence include rules
return wrapped reader exposes allowed fields
gets fieldpermissions instance corresponds granted denied parameters instance may come cache gets created instance cached
returns field permissions object corresponds merging given field permissions caches instance one found cache
determines whether permission grants specified privilege given resource applicationpermission consists sequence permission entries entry contains single applicationprivilege one resource patterns method returns true if one entries meet following criteria the entrys application interpreted automaton automatonspatternstring pattern matches application given argument interpreted raw string the applicationprivilegegetautomaton automaton defines entrys actions entirely covers automaton given argument that is argument subset entrys automaton the entrys resources interpreted automaton automatonspatternsstring set patterns entirely covers resource given argument also interpreted automaton automatonspatternstring pattern
privilegesandresources list privilege resources element list tuple containing single applicationprivilege set resources privilege applied resources treated wildcard automatonspattern
returns whether least one group encapsulated indices permissions authorized execute specified action requested indicesaliases time field andor document level security configured group also allowed fields role queries resolved
use clusterset iterable
ensures were currently start object next token start object elasticsearchparseexception current next token startobject
role mappings
builds returns automaton represent union given patterns
builds returns automaton represents given pattern
builds returns automaton represents given pattern
validate username username username validate allowreserved whether allow reserved user names settings settings may contain information reserved users null valid
wraps restrequest returns version provides filtered content
creates authenticationresult indicates realm attempted handle authentication request unsuccessful reason failure given supplied message optional exception getstatus status set statuscontinue getuser user populated
creates authenticationresult indicates supplied user successfully authenticated getstatus status set statussuccess neither getmessage message getexception exception populated user user authenticated cannot null
map realmtype collection setting objects internalrealmssettingsgetsettings
extracts realm settings global settings object returns map realmname realmsettings
realm define response headers sent failure default adds wwwauthenticate header auth scheme basic map authentication failure response headers
writes authentication context must existing authentication context illegalstateexception thrown
provides setting setting configuration internal realm type excludes reservedrealm cannot configured dynamically map realmtype collection setting objects
constructs default authentication failure handler replaced defaultauthenticationfailurehandlermap
constructs default authentication failure handler provided default response headers failureresponseheaders map header key list header values sent failure response realmgetauthenticationfailureheaders
creates instance elasticsearchsecurityexception reststatusunauthorized status also adds default failure response headers configured defaultauthenticationfailurehandler may replace existing response headers cause instance elasticsearchsecurityexception message error message cause instance elasticsearchsecurityexception asserts status reststatusunauthorized adds headers it else create new instance elasticsearchsecurityexception args error message args instance elasticsearchsecurityexception
setting setting configuration realm type
type either adtype ldaptype setting setting configuration realm type
valid set settings value type realm
hash password using openbsd bcrypt scheme modified original take securestring instead original password password hash salt salt hash perhaps generated using bcryptgensalt hashed password
decode string encoded using bcrypts base64 scheme byte array note not compatible standard mimebase64 encoding string decode maxolen maximum number bytes decode array containing decoded bytes illegalargumentexception maxolen invalid
perform enhanced key schedule step described provos mazieres a futureadaptable password scheme httpwwwopenbsdorgpapersbcryptpaperps data salt information key password information
check plaintext password matches previously hashed one modified original take securestring plaintext use constant time comparison plaintext plaintext password verify hashed previouslyhashed password true passwords match false otherwise
perform central password hashing step bcrypt scheme password password hash salt binary salt hash password logrounds binary logarithm number rounds hashing apply cdata plaintext encrypt array containing binary hashed password
look 3 bits base64encoded specified character rangechecking againt conversion table x base64encoded value decoded value x
key blowfish cipher key array containing key
generate salt use bcrypthashpw method logrounds log2 number rounds hashing apply work factor therefore increases 2logrounds random instance securerandom use encoded salt value
encode byte array using bcrypts slightlymodified base64 encoding scheme note not compatible standard mimebase64 encoding d byte array encode len number bytes encode base64encoded string exception illegalargumentexception length invalid
cycically extract word key material data string extract data offp pointer as oneentry array current offset data next word material data
initialise blowfish key schedule
blowfish encipher single 64bit block encoded two 32bit halves lr array containing two 32bit half blocks position array blocks
returns list lower case string identifiers hashing algorithm parameter combinations used password hashing identifiers used get instance appropriate hasher using resolvestring resolve
returns hasher instance appropriate algorithm associated cost indicated name name identifiers default costs bcrypt pbkdf2 return default bcrypt pbkdf2 hasher instead specific instances associated cost name name algorithm cost combination identifier hasher associated identifier
returns hasher instance used verify hash inspecting hash prefix determining algorithm used generation specific algorithm prefix determined hashernoop returned hash char array hashing algorithm deduced hasher used validation
verifies cryptographic hash data hash hashing algorithm parameterscost factoriterations salt deduced hash itself hash char array cleared verification data securestring hashed verified hash char array hash string verified true hash corresponds data false otherwise
generates array length random bytes using javasecuritysecurerandom
like stringindexof array chars
parse expressionrolemapping provided xcontent
converts expressionrolemapping xcontent compatible format handled parsestring xcontentparser
parse expressionrolemapping provided xcontent
name name expression tree within containing object used provide descriptive error messages content xcontent typically json dsl representation expression
defines field using supplied predicate
returns true named field matches any provided values
comparison number objects compares floating point either value float double otherwise compares numberstolongexact long
constructs predicate matches correctly based type provided parameter
setting setting configuration realm type
job id expressions may single job job group separated list job ids groups
given id categorizer state document extracts job id docid categorizer state document id job id null id valid
ids formed v54
compare fields
compare fields
equality test
earliestrecordtimestamp set ie null set timestamp timestamp candidate time illegalstateexception earliestrecordtimestamp already set
total number input records read processed record count date parse error records count order record count records missing fields counted still written total number input records read long
given id state document extracts job id docid state document id job id null id valid
given id quantiles document extracts job id docid quantiles document id job id null id valid
compare fields
data store id bucket influencer
compare fields embedded anomaly records if any
data store id record
compare fields embedded anomaly records if any
test fieldname one reserved names contains dots segment first reserved name fieldname containing dots represents nested fields case care top level fieldname document field name may contain dots true fieldname reserved name top level segment reserved name
updates source new values object returning new job source source job updated maxmodelmemorylimit maximum model memory allowed new job equivalent source updated
create config validating structure exact analyzertokenizerfilter names
parse categorizationanalyzer configuration cluster state custom parser needed due complexity format many elements able specified either name builtin element object containing custom definition parser strict parsing config lenient parsing cluster state
method used unit tests production code config always parsed fragment
create categorizationanalyzer mimics tokenizer filters built ml c code do default analyzer categorization ensure people upgrading previous versions get behaviour categorization jobs upgrade categorizationfilters categorization filters if any analysisconfig default categorization analyzer
returns job types compatible node running nodeversion nodeversion version node compatible job types
meant called new job created optionally validate model memory limit max limit set current version defaults missing values
call method validate job json provided user valid throws exception problems normal return implies valid
returns timestamp data accepted job latest record timestamp minus job latency datacounts job data counts timestamp data accepted job
make best estimate jobs memory footprint using information available job established model memory size best estimate otherwise assume maximum model memory limit eventually required either case fixed overhead added account memory required program code stack estimate memory requirement job bytes
return list fields set invalid set job created eg model snapshot id set job creation list fields set fields be
get input data fields mentioned job configuration namely analysis fields time field collection fields never null
builds job used existing job built opposed builddate job
builds job given createtime current version used new job created opposed build createtime time job created job
set wall clock time last data upload lastdatatime wall clock time
caseinsensitive string method works either json json etc value string representation data format
overridden equality test
check characters used field name cause problems field field name validated
returns list byfieldname overfieldname partitionfieldname null list byfieldname overfieldname partitionfieldname null
returns set byoverpartition terms
appends given stringbuilder default description given detector detector detector default description requested sb stringbuilder append
returns default description given detector detector detector default description requested default description
checks configuration valid check nonnull bucketspan latency 0 check nonnull latency maxlatency check least one detector configured check detectors configured correctly check overlappingbuckets set appropriately check multiplebucketspans set appropriately if per partition normalization configured least one detector must partition field influences used
return set fields required analysis influencer fields metric field partition field field field detector plus summary count field categorization field name job null empty strings filtered config set required analysis fields never null
creates completely random update job null random update valid given job
overridden equality test
gets limit number examples stored per category limit null set
maximum size model mb anomaly detector drop new samples prevent model using memory set memory limit null set
creates new analysislimits object validating external limitations filling missing values defaults validations check model memory limit doesnt exceed maxmodelmem setting source optional analysislimits whose explicit values copied maxmodelmemorylimit max allowed model memory limit defaultmodelmemorylimit default model memory limit used explicit value missing new analysislimits validated missing values
test analysisconfiganalysisfields method produces list analysis fields detectors
create elasticsearch mapping state state could potentially huge target document size 16mb many documents analysis elasticsearch disabled way retrieve state knowing id particular document
anomalyrecord fields added properties section mapping builder add properties builder ioexception write error
create elasticsearch mapping plain modelsnapshot all field disabled type searchable
datacounts mapping type disabled datacounts arent searchable all field disabled ioexception builder write error
modelsizestats fields added properties section mapping builder add properties builder ioexception write error
create elasticsearch mapping plain categorydefinition all field disabled document isnt meant searched ioexception builder error
creates default mapping dynamic template treats dynamically added fields keywords needed perjob term fields automatically added fields type text index mappings newly rolled indices ioexception write error
inserts meta containing useful information like version mapping template builder builder mappings ioexception write error
create elasticsearch mapping results objects buckets anomalyrecords influencer bucketinfluencer mapping custom field containing fieldvalue fields eg byfieldvalue overfieldvalue etc custom field allfieldvalues must set index settings custom field preferred usual all field fields belong all disabling all using custom field simplifies mapping fields copied custom field byfieldvalue partitionfieldvalue overfieldvalue anomalycausecorrelatedbyfieldvalue anomalycausebyfieldvalue anomalycausepartitionfieldvalue anomalycauseoverfieldvalue anomalyrecordinfluencersinfluencerfieldvalues influencerinfluencerfieldvalue ioexception write error
name alias pointing write index job jobid job id write alias
delete list model snapshots corresponding state documents modelsnapshots model snapshots delete
delete results marked interim
asynchronously delete result types buckets records influencers cutofftime cutoffepochms results time deleted listener response listener
validates datafeedconfig relation job refers datafeedconfig datafeed config job job
lists indices types compared equality sorted first test could fail simply indices types lists different orders
applies update given datafeedconfig new datafeedconfig contains update
calculates sensible default frequency given bucket span default depends bucket span 2 mins 1 min 20 mins bucket span 2 12 hours 10 mins 12 hours 1 hour datafeed aggregations default frequency closest multiple histogram interval based rules above bucketspan bucket span default frequency
lists indices types compared equality sorted first test could fail simply indices types lists different orders
checks searchresponse ok status code shard failures
combines user query time range query
returns date histogram interval epoch millis valid throws elasticsearchexception validation error
find return date histogram aggregations aggregations list aggregations histogramaggregationbuilder datehistogramaggregationbuilder
get interval histogramaggregation throw illegalstateexception histogramaggregation histogramaggregationbuilder datehistogramaggregationbuilder histogramaggregation must histogramaggregationbuilder datehistogramaggregationbuilder histogram interval
find date histogram aggfactory extract interval throws date histogram histogram sibling aggregations aggfactory aggregations factory histogram interval
expands expression set matching names example given set names foo1 foo2 bar1 bar2 expressions resolve follows foo1 foo1 bar1 bar1 foo1foo2 foo1 foo2 foo foo1 foo2 1 bar1 foo1 bar1 bar2 foo1 foo2 all bar1 bar2 foo1 foo2 expression expression resolve allownomatch false error thrown name matches expression applies wild card expressions expression wildcard setting true suppress exception sorted set matching names
creates nameresolver aliases nameset set names notfoundexceptionsupplier supplier resourcenotfoundexception used expression matches name unaliased nameresolver
surrounds double quotes given input contains nonword characters double quotes contained input escaped input non null string input contain nonword characters new string contains input surrounded double quotes otherwise
returns path parent field fieldpath nested fieldpath itself fieldpath field path path parent field code fieldpath nested fieldpath
restfriendly objectrequirenonnull
creates error message explains shard failures displays info first failure shardreason kindly asks see info logs
aligns value multiple interval rounding down value value align multiple interval interval interval multiple interval less equal value
aligns value multiple interval rounding up value value align multiple interval interval interval multiple interval greater equal value
creates formatter according given pattern pattern pattern used formatter null see datetimeformatter syntax accepted patterns defaulttimezone timezone used dates without timezone information timestampconverter illegalargumentexception pattern invalid cannot produce full timestamp eg contains date time
check given timevalue multiple baseunit
first tries parse date first long convert epoch time long number 10 digits considered time milliseconds else 10 less digits seconds fails tries parse string using datefieldmapperdefaultdatetimeformatter date string cannot parsed 1 returned epoch time milliseconds 1 date cannot parsed
checks given timevalue nonnegative multiple value baseunit 400ms valid base unit seconds 450ms invalid base unit seconds valid base unit milliseconds
checks given timevalue positive multiple value baseunit 400ms valid base unit seconds 450ms invalid base unit seconds valid base unit milliseconds
convert scheduled event detection rule rule 2 time based conditions start end event rules start end times aligned bucket span start time rounded bucket interval end time rounded up bucketspan bucket span align event detection rule
jobids mix job groups job ids id calendar id jobids list job ids job groups description optional description
creates new key configuration backed key certificate chain provided keypath path key file keypassword password key certchainpath path file containing certificate chain
tests reloading sslcontext pem key certificate used
tests reloading trust config backed pem files exception reloading exception caused truncating certificate file monitored
tests reloading keystore exception reloading exception caused truncating keystore monitored
tests reloading key config backed pem files exception reloading exception caused truncating key file monitored
creates closeablehttpclient trusts given certificates trustedcertificatepaths certificates client trusts
test reloading sslcontext whose trust config backed pem certificate files
tests reloading keystore used keymanager sslcontext
tests reloading truststore exception reloading exception caused truncating truststore monitored
tests reloading sslcontext trust store modified store used truststore for reloadable sslcontext used httpclient keystore mockwebserver
withoutprefix withprefix prefix prefix setting defined must either empty string string ending
construct settings prefixed is used read settings object configuration keys prefixedchildren settings prefix string must end ssl
create new configuration based provided parameters truststorepath path truststore truststorepassword password truststore truststorealgorithm algorithm use reading truststore
decodes othername cn certificate value der encoded subject alternative name certificate certificate cn null could parsed
construct asn1 tlv tlv could either constructed primitive entity first byte der encoding made following fields bit 8bit 7bit 6bit 5bit 4bit 3bit 2bit 1 class cf type class universal application context private cf constructed flag 1 field constructed type actually called tag asn1 indicates data type integer string construct sequence choice set tag tag identifier length length field value encoded octet string field
decode length field support length encoding 4 octets berder encoding length encoded 2 forms short form one octet bit 8 value 0 bits 71 give length long form two 127 octets only 4 supported here bit 8 first octet value 1 bits 71 give number additional length octets second following octets give length base 256 significant digit first length integer
constructed field return parser content parser construct
get value integer biginteger
converts hexadecimal string byte array
removes dsa params headers openssl adds dsa private keys information redundant ioexception ec parameter footer missing
performs key stretching manner openssl does basically kdf uses n rounds salted md5 as many times needed get necessary number key bytes httpswwwopensslorgdocsman110cryptopemwritebioprivatekeytraditionalhtml
parses der encoded dsa key dsaprivatekeyspec using minimal derparser keybytes private key raw bytes dsaprivatekeyspec ioexception der encoded key cant parsed
creates privatekey contents file supports pkcs1 pkcs8 encoded formats encrypted plaintext rsa dsa ecsecp256r1 keys keypath path key file passwordsupplier password supplier potentially encrypted password protected key private key contents file
creates privatekey contents breader contains encrypted private key encoded pkcs8 breader bufferedreader containing key file contents keypassword password encrypted password protected key privatekey ioexception file cant read generalsecurityexception private key cant generated pkcs8encodedkeyspec
creates cipher contents dekinfo header pem file rfc 1421 indicates supported algorithms defined rfc 1423 rfc 1423 defines descbs triple des ede cbc mode aes cbc mode also widely used though 3 different variants 128 192 256 bit keys dekheadervalue value dekinfo pem header password password key encrypted cipher appropriate algorithm parameters used decryption generalsecurityexception algorithm available used security provider key inappropriate cipher ioexception dekinfo pem header invalid
creates privatekey contents breader contains ec private key encoded openssl traditional format breader bufferedreader containing key file contents passwordsupplier password supplier potentially encrypted password protected key privatekey ioexception file cant read generalsecurityexception private key cant generated ecprivatekeyspec
creates privatekey contents breader contains plaintext private key encoded pkcs8 breader bufferedreader containing key file contents privatekey ioexception file cant read generalsecurityexception private key cant generated pkcs8encodedkeyspec
parses der encoded ec key ecprivatekeyspec using minimal derparser keybytes private key raw bytes ecprivatekeyspec ioexception der encoded key cant parsed
decrypts password protected contents using algorithm iv specified pem headers file pemheaders proctype dekinfo pem headers extracted key file keycontents key base64 encoded string passwordsupplier password supplier encrypted password protected key decrypted key bytes generalsecurityexception key cant decrypted ioexception pem headers missing malformed
creates privatekey contents breader contains rsa private key encoded openssl traditional format breader bufferedreader containing key file contents passwordsupplier password supplier potentially encrypted password protected key privatekey ioexception file cant read generalsecurityexception private key cant generated rsaprivatecrtkeyspec
parses der encoded private key reads algorithm identifier object oid keybytes private key raw bytes string identifier key algorithm rsa dsa ec generalsecurityexception algorithm oid parsed asn1 unknown ioexception der encoded key cant parsed
removes ec headers openssl adds ec private keys information redundant ioexception ec parameter footer missing
parses der encoded rsa key rsaprivatecrtkeyspec using minimal derparser keybytes private key raw bytes rsaprivatecrtkeyspec ioexception der encoded key cant parsed
creates privatekey contents breader contains dsa private key encoded openssl traditional format breader bufferedreader containing key file contents passwordsupplier password supplier potentially encrypted password protected key privatekey ioexception file cant read generalsecurityexception private key cant generated dsaprivatekeyspec
create new sslservice parses settings ssl contexts need created creates them caches use later
indicates whether client authentication enabled particular configuration
returns information certificate referenced ssl configuration includes certificates used identity with private key used trust excludes certificates provided jre due nature keystores may include certificates available never used ca certificate longer use server certificate unrelated host trustconfigcertificatesenvironment
creates sslcontext based provided configuration sslconfiguration configuration use context creation created sslcontext
invalidates sessions provided sslsessioncontext
create new ssliosessionstrategy based provided settings settings used identify ssl configuration used create context settings settings used identify ssl configuration typically ssl prefix empty settings return context created default configuration never null method fail ssl configuration uses orgelasticsearchcommonsettingssecuresetting orgelasticsearchcommonsettingssecuresettings closed use getsslconfigurationstring ssliosessionstrategysslconfiguration deprecated removed monitoring uses dynamic ssl settings
parses settings load sslconfiguration objects used
returns existing sslcontextholder configuration illegalargumentexception found
returns existing sslconfiguration given settings settings settings ssl configuration ssl configuration provided settings settings empty global configuration returned
creates sslcontext based provided configuration trustkey managers sslconfiguration configuration use context creation keymanager key manager use trustmanager trust manager use created sslcontext
create new sslsocketfactory based provided configuration socket factory also properly configure ciphers protocols socket created configuration ssl configuration use typically obtained getsslconfigurationstring never null
returns whether provided settings results valid configuration used server connections sslconfiguration configuration check
maps supported protocols appropriate ssl context algorithm make attempt use best algorithm possible names method taken hrefhttpdocsoraclecomjavase8docstechnotesguidessecuritystandardnameshtmljca standard algorithm name documentation java 8
creates new sslservice supports dynamic creation sslcontext instances instances created service cached monitored reloading dynamic server access cached monitored instances created initialization
returns existing sslcontextholder configuration illegalargumentexception found
creates sslengine based provided configuration sslengine used connection requires hostname verification assuming provided host port correct sslengine created method useful clients hostname verification enabled configuration ssl configuration host host remote endpoint using hostname verification match remote endpoints certificate port port remote endpoint sslengine getsslconfigurationstring
map settings prefix settings object
returns intersection supported ciphers requested ciphers method also optionally log unsupported ciphers requested illegalargumentexception supported ciphers requested ciphers
returns unique set directories need monitored based provided file paths
reloads ssl context associated configuration visible tests override needed
collects directories need monitored provided sslconfiguration instances ensures watched changes
provides list paths files back configuration
creates new sslconfiguration given settings globaldefault sslconfiguration settings contain value given aspect value global configuration used settings ssl specific settings settings ssl prefix globalsslconfiguration default configuration used fallback
creates new sslconfiguration given settings fallback configuration invoking constructor unconfigured aspects take default values settings ssl specific settings settings ssl prefix
returns information certificate referenced ssl configurations includes certificates used identity with private key used trust excludes certificates provided jre trustconfigcertificatesenvironment
creates new configuration used load key trust material keystore keystorepath path keystore file keystoretype type keystore file keystorepassword password keystore keypassword password private key keystore keystorealgorithm algorithm keystore truststorealgorithm algorithm use loading truststore
read certificatekey pairs pkcs12 container path path pkcs12 container file password password container file keypassword supplier password key key alias supplied argument function return password key returns null keypair alias read
creates x509extendedtrustmanager based provided certificates certificates certificates trust trust manager trusts provided certificates
returns x509extendedkeymanager built provided private key certificate chain
reads provided paths parses certificate objects certpaths paths pem encoded certificates environment environment resolve files against may null array certificate objects
loads truststore creates x509extendedtrustmanager truststorepath path truststore truststorepassword password truststore truststorealgorithm algorithm use truststore env environment use file resolution may null trust manager trust material store
creates keystore pem encoded certificate key file
resolves path without environment may running transport client access environment
creates x509extendedtrustmanager based trust material provided keystore
returns x509extendedkeymanager built provided keystore
merges default trust configuration provided trustconfig trustconfig trust configuration merge trustconfig represents combination trust configurations
task store result finished
sets index
loads builtin template returns source
checks versioned template exists exists checks version greater equal current version templatename name index template state cluster state
checks template given name exists matches version predicate given versionkey property mappings meta field stores version info templatename name index template state cluster state logger logger predicate predicate execute version check
filters source replaces template version property version number
loads resource classpath returns bytesreference
checks versioned template exists exists checks uptodate current version versionkey property mappings meta field stores version info templatename name index template state cluster state logger logger
parses validates source empty
loads json template resource puts provided map
returns string representation cronexpression string representation cronexpression
advance calendar particular hour paying particular attention daylight saving problems cal calendar operate hour hour set
constructs new cronexpression based specified parameter expression string representation cron expression new object represent illegalargumentexception string expression cannot parsed valid cronexpression
returns next datetime after given datetime satisfies cron expression time time since epoch 1 next time unsupported eg cron expression points time previous given time next valid time since epoch
indicates whether specified cron expression parsed valid cron expression expression expression evaluate boolean indicating whether given expression valid cron expression
specifies type requested indices ignore wildcard indices expressions example indices dont exist
optional timeout control long graph exploration allowed take
types documents graph exploration run against defaults types
routing values control shards action executed on
optional choice singlevalue field diversify sampled search results
number topmatching documents considered hop default sampleraggregationbuilderdefaultshardsamplesize small values less 50 may provide sufficient weightofevidence identify significant connections terms large values many thousands recommended loosely defined queries fuzzy queries many clauses useful signals best documents diluted irrelevant noise lowquality matches performance also typically better smaller samples less lookups required background frequencies terms found documents maxnumberofdocsperhop shardlevel sample size documents
optional number permitted docs value sampled search results must also declare field using samplediversityfield
separated list routing values control shards action executed on
optional timeout control long graph exploration allowed take
controls choice algorithm used select interesting terms default value true means terms selected based significance see significantterms aggregation rather popularity using termsaggregator value true significantterms algorithm used
add field hop look terms highly linked previous hops optionally guiding query fieldname field chosen index
adds term excluded results term term excluded
certainty threshold defines weightofevidence required term found field identified useful connection value minimum number documents contain term found samples used across shards
certainty threshold defines weightofevidence required term found field identified useful connection value minimum number documents contain term found samples used across shards
size maximum number terms returned field part hop
adds term set allowed values boost defines relative importance pursuing connections subsequent hops boost value appears part query term required term boost optional boost
graph exploration set timeout given period search operations involved hop limited remaining time available still overrun due nature best efforts timeout support timeout occurs partial results returned timeout timevalue object determines maximum length time spend exploring
add stage graph exploration hop represents stage querying elasticsearch identify terms connnected terms subsequent hop guidingquery optional choice query influences documents considered stage hop object holds settings stage graph exploration
given watch extracts decodes relevant auth header returns principal user executing watch
convert counters nested map using splitter create deeper maps nested map current configured counters
called execution finished
called execution aborted due error execution the given result reflect exactly execution failed
called execution aborted started
execute current action executes order of throttling conditional check transformation action ctx current watchs context never null
returns orgelasticsearchcommonbytesbytesreference containing toxcontent output binary format builds request provided contenttype
parse timevalue support fractional values
constructs new xcontentsource given bytes reference
decrypts provided char array returns plaintext chars chars data decrypt plaintext chars
encrypts provided char array returns encrypted values char array chars characters encrypt character array representing encrypted data
parses xcontent returns appropriate executable condition expecting following format conditiontype condition body watchid id watch parser parsing contains condition content
called whenever watch checked ie condition watch evaluated see watch executed metcondition indicates whether watchs condition met
notifies status givne actions acked current state one actions actionstatusackstatusstateackable ackable well itll change actionstatusackstatusstateacked acked when set actionstatusackstatusstateacked acked ackthrottler throttle execution action true state changed due ack false otherwise
freeze time clock preventing advancing
clock reset current time advance
active sets whether watcher inactive default
id watch id created
version sets version set running update
source source watch created xcontenttype content type source
source source watch created
sets id watch deleted
ctor found watch
ctor missing watch
starts watcher already started
stops watcher already stopped
stops watcher service already stopped
starts watcher service already started
triggerevent trigger event use
watchsource instead using existing watch use non persisted watch
recordexecution sets execution recorded history index reflected watch
sets mode given action identified id handled actionid id action actionmode mode action handled execution
ignorecondition set condition execution ignored
debug indicates whether watch execute debug mode debug mode returned watch record hold execution vars
sets id watch executed
watchsource instead using existing watch use non persisted watch
alternativeinput sets alernative input
data data associated trigger event
watchsource instead using existing watch use non persisted watch
watchsource instead using existing watch use non persisted watch
function bulk logic taking appropriate es dependencies like nodeinfo clusterstate alongside objects list deprecation checks function run checks build final list issues exist cluster nodesinfo list nodeinfo metadata objects retrieving nodelevel information nodesstats list nodestats metadata objects retrieving nodelevel information state cluster state indexnameexpressionresolver used resolve indices concrete names indices list index expressions evaluate using indexnameexpressionresolver indicesoptions options use resolving filtering indices check clustersettingschecks list clusterlevel checks nodesettingschecks list nodelevel checks indexsettingschecks list indexlevel checks run across specified concrete indices list deprecation issues found cluster
write plain cursor string serialization across xcontent
namedwriteables required deserialize cursors
read plain cursor string
find commonalities given comparison given list method applied conjunctive and disjunctive purposes or
test empty commands skipped includes commands new lines
build connection connectionstringarg connection string connect keystorelocation location keystore configure null use system keystore userexception problem information provided user
build cli
use vm options run intellij eclipse dorgjlineterminaltypexterm256color dorgjlineterminaljnafalse dorgjlineterminaljansifalse dorgjlineterminalexecfalse dorgjlineterminaldumbtrue
build terminal terminal jline terminal work enablematchbracket jline bounce cursor matching brackets disabled tests difficult predict enabled production fairly nice
constructor tests
handle exception communication server extracted method tests bubble failure
serializes search source byte array
deserializes search source byte array
collect necessary fields modifying searchsourcebuilder retrieve document
constructs new compositekeyextractor instance timezone parameter used indicate date key
named writeables needed deserialize instances plain bucketextractors
named writeables needed deserialize instances plain hitextractor
source extraction requires relative field name without parent path
extracts string either unescaped literal parameter
parses sql statement execution plan sql sql statement params list parameters statement statement parametrized logical plan
parses expression used tests
find one order by plan
convert direction string represents parses direction
create components used sql plugin
actual implementation action statically available support embedded mode
newcursor empty returns empty cursor otherwise creates new cliformattercursor wraps newcursor
ensure estimates perfect least cases
tests cliformatterformatwithheader values exactly minimum column size column names exactly minimum column size column headers longer minimum column size values longer minimum column size
tests cliformatterformatwithoutheader truncation long columns
returns random querybuilder
returns random querybuilder null
optional query dsl defined query added filter top sql query
hint many results fetch once
create new plain cliformatter formatting responses similar provided columns rows
pick good estimate buffer size needed contain rows
format provided plain sqlqueryresponse cli including header lines
serializes provided value sqlcompatible way based client mode
key must sent back sql access next page results
constructor used specifying descriptive message typically did mean instead default one withmessagestring
build marker unresolvedfunction error message function missing
build plain functiondefinition binary function aware time zone support distinct
build plain functiondefinition noargument function aware time zone support distinct
build plain functiondefinition unary function operates datetime
build plain functiondefinition unary function aware time zone support distinct
build plain functiondefinition unary function aware time zone support distinct
constructor specifying alternate functions testing
constructor clone
named writeables needed deserialize instances plain processors
constructs new aggpathinput instance action used handling cornercase results date histogram returns full date object year requires additional extraction
returns true processor defintion builds query tracks scores false otherwise used testing processordefinitioncollectfieldssqlsourcebuilder
trims trailing whitespace characters given string uses characteriswhitespacechar determine character whitespace not original string resulting string
extract substring given string using start index length extracted substring original string start starting position substring within original string 0based index position length length characters substracted substring resulting string
trims leading whitespace characters given string uses characteriswhitespacechar determine character whitespace not original string resulting string
used painless scripting
wrapper nulls around given function true nulls passed through otherwise function shortcircuited null returned
translate function name char function name reserved keyword java used internalsqlscriptutilscharacternumber
wrapper nulls around given function true nulls passed through otherwise function shortcircuited null returned
compares two expression arguments typically numbers possible otherwise returns null the arguments comparable least one null
check whether boundaries invalid upper lower not do value evaluate
build binary pyramid given list b c d using given combiner bit longer method creates balanced tree oppose plain recursive approach creates unbalanced one either left right
creates list groupby keys
test conversion long
get conversion one type another
returns true type converted type false otherwise
returns type compatible left right types one types null returns another type types numeric returns type highest precision int long float double one types string another numeric returns numeric
converts arbitrary object desired data type throws sqlillegalargumentexception conversion possible
returns true value signed false otherwise including type numeric
returns list properties nested object fields list subfield field indexed different ways null otherwise
find subclasses particular class
test class subclass node null isnt class doesnt extend abstractnodetestcase
scans class files identify classes checks subclasses node
test nodereplacechildren implementation subclass
build list arguments use calling ctor make sense ctor builds subclasses node
find longest constructor given class convention subclasses node constructor all state node constructors delegate constructor
test nodetransformpropertiesonlyjavautilfunctionfunction class implementation subclass tests implementation nodeinfo tests actual nodeinfo subclass implementations process
make argument feed subclasss ctor
make argument feed constructor tobuildclass
builds nodeinfo nodes without properties
transform properties node returning new instance n properties change
render properties node one one like foo bar baz go inside output treestring
render node tree like projectif0 filterif1 subqueryaliastest esrelationtestif2
removes query part uri
parses url provided user
build error message parse failure
parse failure response stream closed parsing complete caller must close it ioexception catastrophic failure parsing remote failure
parses generic value xcontent stream
returns string representation builder only applicable text based xcontent xcontentbuilder builder containing object converted string
translates like pattern pattern es index name expression resolver note resolver supports not notion escaping really issue since dont allow anyway pattern
translates like pattern lucene wildcard methods pays attention custom escape char gets converted used lucene escape character 0 in case every regex gets escaped followed otherwise exception thrown
converts rest column metadata jdbc column metadata
read next page results returning scroll id use fetch next page
sqlexception type exception jdbc api throw and user expects remove it need make sure types exceptions runtime otherwise thrown
converts object json representation specified jdbctype returned types needs correspond esportion classes returned typeconverterclassnameof
returns true type represents signed number false otherwise needs support params column types
converts millisecond epoc time
translates numeric jdbc type corresponding java class see javaxsqlrowsetrowsetmetadataimplgetcolumnclassname httpsdbapacheorgderbydocs105refrrefjdbc20377html
converts object val columntype type
converts millisecond epoc date
skips multiline comment starting current position i returns length comment
skips jdbc escape sequence starting current position i returns length sequence
skips line comment starting current position i returns length comment
returns number parameters specified sql query
skips string starting current position i returns length string
sqlexception type exception jdbc api throw and user expects remove it need make sure types exceptions runtime otherwise thrown
returns parameters sql statement parametrized
verify plan
check validity aggregategroupby rule needed multiple reasons 1 user might specify invalid aggregate select foo group bar 2 order byhaving might contain nongrouped attribute typically caught analyzer however wrapped function abs gets resolved because expression gets resolved little little without pushed down without analyzer modifying anything 2a also requires aggregate function 3 composite agg used group by allows ordering group keys
resolves pattern multiple separate indices
resolves names differentiating indices aliases method required since methods rely mapping tied index not alias
resolves pattern one potentially compound meaning spawns multiple indices mapping
get plain esindex mappingexception index invalid use sql
given root query or set includes root constraints find related terms start points graph navigation
step existing vertex terms looking useful connections
shuts trigger service well make sure lingering threads also need check anything final go status stopped
reload watches start scheduling state current cluster state reason reason reloading logged loadtriggeredwatches triggered watches loaded run needed reloading starting true loading newer cluster state happened parallel false otherwise
ensure watcher reloaded checking indices marked ready cluster state state current cluster state true everything good go service started
wraps abstract runnable easier supply onfailure dorun methods via lambdas ensures uncaught exception handler executing threadpool get called run code executed runnable exceptionconsumer exception handling code executed runnable fails abstractrunnable instance pass executor
start watcher service load watches background state current cluster state postwatchesloadedcallback callback triggered watches loaded successfully
reads watches watches indexalias puts memory short period time fed trigger service
stops watcher service marks services paused
reload watcher service switch state stopped started keep going state cluster state needed find local shards
stop execution watches node try reload anything still allow manual watch execution ie via execute watch api
find watch id parsed triggered node id id watch totalshardcount count primary shards current watches index index index local shard true parse watch node false otherwise
method indicate size watcher thread pool watches primarily bound io waiting execute synchronously makes sense certain minimum threadpool size means start fair number threads number cpus also need ensure number go crazy high really beefy machines still configured manually calculation follows use five times number processors 50 stick number processors node data node never need much threads return 1 here still allows execute watch locally need managing threads settings current settings number 5 number processors
reloads reloadable services watcher
event event containing new cluster state stop certain parts watcher watcher indices node checking shardrouting note easily possible execute watch api needs able execute anywhere means certain components stopped
check watcher stopped manually via stop api
clear current allocation ids already happened true existing allocation ids cleaned out false otherwise
index operation happened watcher shard doc type watcher remove watch id trigger service shardid shard id object document processed delete delete operation delete operation
check routing table changed local shards affected watchindex name concrete watches index pointing state new cluster state true routing tables changed local shards affected
returns mapping shard index shard allocation ids list idea basis consistent hashing order decide watch needs triggered locally another system indexed single watch action example shardidwatch 0 allocation ids sorted in cluster a b c d local allocation id b index position 1 store size allocation ids index position dataputshardidwatch 0 new tuple1 4
listen cluster state changes method start stop reload watcher service based cluster state information method checks local watch indices running event clusterchangedevent class containing current new cluster state
single watch operations check local trigger service trigger concrete watch watch parsing could optimized parsing happens primary shard supposed put trigger service point right dont care note parse primary otherwise failure replica parsing watch would result failing replica shardid shard id object document processed operation index operation index operation
case error ensure triggerservice leave anything behind todo configuration changes preindex postindex methods add watch could indexed todo watch might deleted triggerservice willing accept this todo could circumvented using threadlocal preindex contains watch cleared afterwards shardid shard id object document processed index index operation ex exception occured indexing
reload configuration alias pointing watch index changed index routing table index changed watchindex name concrete watches index pointing localshardrouting list local shards index event cluster changed event containing new cluster state
create mock cluster state returns specified index watch index
resolve failure reason reason extracted response body ex errormessageserrorscustomfield10004epic name required see httpsdocsatlassiancomjirarestcloud format error response body
turns v1 api contexts 2 distinct lists images links v2 api separated 2 top level fields
renders attachment slack compatible structure httpsapislackcomdocsattachmentsattachmentstructure
finds setting secure setting setting null returns null one exist differs getsetting calls allows null whereas methods throw exception note setting previously secure string reference setting object still insecure constructing new securestring char insecure setting
loads standard java mail properties settings given account settings standard settings readable therefore enabled user configure readable way method first loads smtp settings which corresponds java mail mailsmtp settings replaces readable keys official unreadable keys well use settings crea
intentionally emitting path may come information leak
build email note adding items attachments inlines called incorrect
extract id json payload know id poll
use default time sleep polls set
trigger initial report generation catch possible exceptions
create statistics single watch store local map allowing easy deletion case watch gets removed trigger service
returns statistics watches loaded trigger service set counters containing statistics
stop executiontriggering watches node try reload anything sit still
adds given job trigger service already registered job service job id newly added job replace old job the old job triggered anymore watch new watch
removes job associated given name trigger service jobname name job remove true job existed removed false otherwise
checks whether given time scheduled time schedule so scheduled time returned new scheduled time computed set otherwise the given time scheduled time 1 returned
reads contents parser create correct input parser parser containing input definition new input instance parser
empty currently queued tasks wait current executions finish number tasks removed
execute triggered watches successfully indexed triggered watches index response bulk response containing response indexing triggered watches watchesandcontext triggered watches context objects needed execution
updates persists status given watch watch missing because might deleted user execution method nothing returns without throwing exception
clears current executions sets new empty current executions needed method called watcher keeps running sealing executions would bad idea
pause execution watcher executor empty state pausing means new watch executions done unless pausing explicitely unset important watcher stopped scheduled watches accidentally get executed used need reload watcher based cluster state changes calling clearexecutionsandqueue way go number tasks removed
create tuple triggered watches corresponding contexts usable sync async processing events iterable list trigger events create two lists two linked lists contain triggered watches contexts
gets watch synchronous way async calls need built id id watch getresponse calling get api watch
calling method makes class stop accepting new executions throws exception instead addition waits certain amount time current executions finish returning maxstoptimeout maximum wait time wait current executions finish
tries put watch execution class watch current executions id id watch execution watch execution class returns true watch id already current executions class false otherwise
create bulk request triggered watches specified document type triggeredwatches list triggered watches doctype document type use either current one legacy bulk request triggered watches ioexception triggered watch could parsed json exception thrown
checks loaded watches put triggered watches index immediate execution note executing blocking call network thus potential source problems watches list watches loaded clusterstate current cluster state list triggered watches started execute somewhere else finished
creates http proxy system wide settings http proxy instance settings configured httpproxynoproxy instance
enriches config object optionally proxy information config request builder config object request request parsed http client
returns headers keys lowercased always consistent payload
write request via toxcontent filter certain parts needed expose secrets request httprequest object serialize xcontent xcontent parent outputstream builder params toxcontentparams parent write excludefield field exclude bytearrayinputstream contains serialized request ioexception ioexception triggered underlying toxcontent method
creates new input stream throws exception certain number bytes read maxbytesize maximum data read throwing exception underlying inputstream containing data
order test watches triggeredwatches indices also point alias rarely create starting watcher idea behind possible use migration helper upgrades see httpsgithubcomelasticelasticsearchmigration
get actions watch history hit source hits source list actions
create inline script using customscriptplugin inlinescript script compile run never null
hard failure exception thrown script condition
create watch specified id input actionconditions id id watch input input use watch actionconditions conditions add watch
stores specified watchrecord existing watchrecord overwritten
check everything set history store operate fully checks current watcher history index open state current cluster state true history store ready started
stores specified watchrecord specified watchrecord already stored call fail version conflict
test makes sure action encounters error subject throttling also ack status action watch remain awaitssuccessfulexecution long execution fails
extracts specified field data map alternative falls back action value
merges defaults provided second parameter content first applying function map key map value
reads new watcher search request instance specified parser
parses watch represented given source parsing sensitive data source might contain eg passwords converted secret secrets returned watch potentially hide sensitive data behind secret secret abstraction around sensitive data text security enabled cryptoservice used encrypt secrets method called user adds new watch moment on representations watch system use secrets sensitive data
method get indexmetadata index potentially behind alias name name index alias metadata metadata search name indexmetadata concrete index illegalstateexception alias points two indices indexnotfoundexception index exists
iterates properties field mappings returns predicates match form issuestrings type document type parentmap mapping read properties predicate predicate check issues issue returned predicate evaluates true list issues found fields
totally empty requests noop detect noops true true default
returns status shards currently finished snapshots method executed master node its complimentary snapshotshardsservicecurrentsnapshotshardssnapshot returns similar information already finished snapshots repositoryname repository name snapshotinfo snapshot info map shard id snapshot status
validates snapshot request request snapshot request state current cluster state
constructs new snapshot creation request repositoryname repository name snapshotname snapshot name cause cause snapshot operation
removes finished snapshot cluster state happen previous master node processed cluster state update marked snapshot finished previous master node died removing snapshot progress cluster state responsibility new master node end snapshot remove cluster state
initializes snapshotting process method used clients start snapshot makes sure snapshots currently running creates snapshot record cluster state metadata request snapshot request listener snapshot creation listener
sets list indices snapshotted indices list indices request
retrieves snapshot repository repositoryname repository name snapshotid snapshot id snapshot snapshotmissingexception snapshot found
removes record running snapshot cluster state notifies listener action complete snapshot snapshot failure exception snapshot failed listener listener notify snapshot information removed cluster state
deletes snapshot repository snapshot still running cancels snapshot first deletes repository snapshot snapshot listener listener repositorystateid unique id state repository
calculates list shards included current snapshot clusterstate cluster state indices list indices snapshotted list shard included current snapshot
set true partial snapshot allowed partial true partial snapshots allowed request
deletes snapshot repository snapshot snapshot listener listener repositorystateid unique id representing state repository time deletion began
returns list indices missing shards list indices closed shards list shard statuses list failed closed indices
deletes snapshot repository looking snapshot reference deleting snapshot still running cancels snapshot first deletes repository repositoryname repositoryname snapshotname snapshotname listener listener
set true global state stored part snapshot includeglobalstate true global state stored part snapshot request
checks repository currently use one snapshots clusterstate cluster state repository repository id true repository currently use one running snapshots
gets repositorydata given repository repositoryname repository name repository data
returns list currently running snapshots repository sorted snapshot creation date repositoryname repository name list snapshots
returns list snapshots repository sorted snapshot creation date repositoryname repository name snapshotids snapshots fetch snapshot information incompatiblesnapshotids snapshots fetch snapshot information ignoreunavailable true snapshots could read logged warning false throw error list snapshots
sets repositoryspecific snapshot settings settings snapshot settings request
sets master node timeout masternodetimeout master node timeout request
cleans shard snapshots running removed nodes event cluster changed event
check indices deleted currently snapshotted fail deleting index snapshotted with partial false makes snapshot fail
returns status currently running snapshots method executed master node repository repository id snapshots list snapshots used filter empty list means snapshots filtered list metadata currently running snapshots
sets indices options indicesoptions indices options request
starts snapshot creates snapshot repository updates snapshot metadata record list shards needs processed clusterstate cluster state snapshot snapshot meta data partial allow partial snapshots usercreatesnapshotlistener listener
removes snapshot deletion snapshotdeletionsinprogress cluster state
finalizes snapshot deletion progress current node master master previous cluster state still lingering snapshot deletion progress cluster state means old master failed could clean inprogress snapshot deletion attempt delete snapshot files remove deletion cluster state possible old master state long gc resumes tries delete snapshot already deleted current master acceptable however since old masters snapshot deletion respond error actuality snapshot deleted call get snapshots would reveal snapshot longer exists
check indices closed currently snapshotted fail closing index snapshotted with partial false makes snapshot fail
finalizes shard repository removes cluster state nonblocking method runs thread snapshot thread pool entry snapshot failure failure reason null snapshot successful
returns status shards snapshotted node belong given snapshot method executed data node snapshot snapshot map shard id snapshot status
creates shard snapshot snapshot snapshot snapshotstatus snapshot status
checks shards processed new master doesnt know
updates shard snapshot status sending updateindexshardsnapshotstatusrequest master node
checks new shards snapshotted node event cluster state changed event
updates shard status master node request update shard status request
tests shrunken index created via shrink apis subsequently snapshotted restored node shrunken index created longer part cluster
checks snapshots restored compatible version repository repository name snapshotinfo snapshot metadata
restores snapshot specified restore request request restore request listener restore listener
constructs new restore request repositoryname repositoryname snapshotname snapshotname indices list indices restore indicesoptions indices options renamepattern pattern rename indices renamereplacement replacement renamed indices settings repository specific restore settings masternodetimeout master node timeout includeglobalstate include global state restore partial allow partial restore indexsettings index settings changed restore ignoreindexsettings index settings shouldnt restored cause cause restoring snapshot
optionally updates index settings indexmetadata removing settings listed ignoresettings merging settings changesettings
check indices closed currently restored snapshot fail closing index found closing index restored makes index unusable it cannot recovered
checks repository currently use one snapshots clusterstate cluster state repository repository id true repository currently use one running snapshots
returns node id failure occurred node id
reads shard failure information stream input stream input shard failure information
serializes snapshot failure information json snapshotshardfailure snapshot failure information builder xcontent builder params additional parameters
constructs new snapshot shard failure object nodeid node failure occurred shardid shard id reason failure reason status rest status
returns snapshot failure reason null snapshot succeeded snapshot failure reason
compares two snapshots start time start times same compares two snapshots snapshot ids
gets new snapshotinfo instance snapshot incompatible current version cluster
constructs snapshot information stream input
method creates snapshotinfo internal xcontent handle xcontent written external version external xcontent display purposes need parsed
returns snapshot state null state unknown snapshot state
returns version elasticsearch snapshot created with return null state returns null snapshotstateincompatible version elasticsearch snapshot created
returns snapshot rest status
tests snapshot corrupted global state file still deleted
tests snapshot corrupted global state file still restored
test restoring index shard allocation filtering settings prevents allocation hang indefinitely
test restoring snapshot whose files cant downloaded stuck hang indefinitely
tests snapshot multiple indices including one corrupted index metadata file still used restore non corrupted indices
test ensures shard removed node perhaps due node leaving cluster returning snapshotting shard aborted store references held onto snapshot released see httpsgithubcomelasticelasticsearchissues20876
execute unrestorable test use case
constructs snapshot stream input
constructs snapshot
generate snapshot state code value state code state
filters list available indices based list selected indices availableindices list available indices selectedindices list selected indices indicesoptions ignore indices flag filtered indices
reads restore info streaminput stream input restore info
constructs new snapshot name snapshot name uuid snapshot uuid
constructs new snapshot input stream input stream
blocks io operation blob fails throws exception unblocked
eg storedfields none index score returned
test adds randomized fields json objects checks parse ensure parsing lenient forward compatibility need exclude json objects highlight fields field name since objects allow arbitrary keys the field names queries also want exclude add anything source since parsed avoid complexity excluding everything innerhits also keyed arbitrary names contain searchhits already tested elsewhere
build random search request randomsearchsourcebuilder builds random searchsourcebuilder use randomsearchsourcebuildersupplier supplier supplier supplier supplier
test adds randomized fields json objects checks parse ensure parsing lenient forward compatibility need exclude json objects highlight fields field name since objects allow arbitrary keys the field names queries also want exclude add anything source since parsed
source document map can null
source document string can null
need declare parse fields metadata field except id index type handled individually fields parsed entry fields map
returns bytes reference also uncompress source needed
sets representation might compressed
rendering inner xcontent object without leading field name way structure innertoxcontent renders fromxcontent parses correspond other
throw assertionerror still inflight contexts
returns shard index context currently executing search request used accounting coordinating node
shortcut ids load load from size phase controller handles well since result always size shards qtf
returns true iff given search source builder early terminated rewriting match none query words execution search request early terminated without executing it instance possible global aggregation part request suggest builder present
try load query results cache execute query phase directly cache cannot used
method quick rewrite query returns true query potentially match documents method false positives returns false query wont match documents current shard
query execute rewritten form
called executing main query parameters set
shortcut function see whether fetchsourcecontext says source requested
test getting allowed number docvaluefields throws exception
test getting allowed number scriptfields throws exception
return sorteddocvalues instance used sort root documents mode provided values filters rootinner documents every root document values inner documents aggregated allowed modes min max note calling returned instance docs root docs illegal returned instance evaluate current upcoming docs
return numericdoublevalues instance used sort documents mode provided values document value missingvalue returned allowed modes sum avg median min max
return binarydocvalues instance used sort root documents mode provided values filters rootinner documents every root document values inner documents aggregated none inner documents value missingvalue returned allowed modes min max note calling returned instance docs root docs illegal returned instance evaluate current upcoming docs
return sorteddocvalues instance used sort documents mode provided values allowed modes min max
return numericdocvalues instance used sort documents mode provided values document value missingvalue returned allowed modes sum avg median min max
return numericdocvalues instance used sort root documents mode provided values filters rootinner documents every root document values inner documents aggregated none inner documents value missingvalue returned allowed modes sum avg min max note calling returned instance docs root docs illegal returned instance evaluate current upcoming docs
return binarydocvalues instance used sort documents mode provided values document value missingvalue returned allowed modes min max
return numericdoublevalues instance used sort root documents mode provided values filters rootinner documents every root document values inner documents aggregated none inner documents value missingvalue returned allowed modes sum avg min max note calling returned instance docs root docs illegal returned instance evaluate current upcoming docs
case insensitive version valueofstring illegalargumentexception given string doesnt match sort mode null
constructor cancelled supplier cancellation flag supplier called segment wrapped collector
test edge case field level boosting applied field doesnt exist documents one shard issue reported httpsgithubcomelasticelasticsearchissues18710 multimatch query using fuzziness parameter boost one two fields returns document score documents placed different shard test recreates scenario checks returned scores different
returns whether collection within provided reader earlyterminated sorts sortandformats
packageprivate method tested without wire everything mapperservice etc whether rescoring phase executed
returns true provided query returns docs index order internal doc ids query query execute sf query sort
ctr reader index reader query lucene query sortandformats query sort numhits number top hits retrieve searchafter doc request search after trackmaxscore true max score tracked tracktotalhits true total number hits tracked hasfiltercollector true collector chain contains least one collector filters document
returns query total hit count query matchalldocsquery termquery reader deletions 1 otherwise
ctr collapsecontext collapsing context sortandformats query sort numhits number collapsed top hits retrieve trackmaxscore true max score tracked
ctr reader index reader query query execute tracktotalhits true total number hits tracked hasfiltercollector true collector chain contains filter
creates topdocscollectorcontext provided searchcontext hasfiltercollector true collector chain contains least one collector filters document
returns nulls top docs search results allows free memory top docs consumed illegalstateexception top docs already consumed
returns nulls aggregation search results allows free memory aggregation consumed illegalstateexception aggregations already consumed
sets finalized profiling results query shardresults finalized profile
returns nulls profiled results search potentially null result empty allows free memory profiled result consumed illegalstateexception profiled result already consumed
creates collector tree provided collectors wraps collector profiler collectors ordered list collector context
wraps collector profiler
creates multi collector provided subs
filters documents query score greater minscore minscore minimum score filter
creates collector limiting collection first numhits documents
creates collector tree provided collectors collectors ordered list collector context
creates collector throws taskcancelledexception search cancelled
filters documents based provided query
ctr delegate delegated collector maxcounthits number documents collect termination forcetermination whether collection terminated exception earlyterminationexception caught collector collectionterminatedexception otherwise
test parse rescore element either single object array
query profiled defaults false
indicate source fetched
optional timeout control long search allowed take
add aggregation perform part search
set sort values indicates docs request search after
read stream
true source suggest
sets minimum score docs filtered out
index start search from defaults 0
indicate source returned every hit include andor exclude set include simple wildcard elements includes optional list include optionally wildcarded pattern filter returned source excludes optional list exclude optionally wildcarded pattern filter returned source
applies sorting controls scores tracked well defaults false
add sort given field name name name field sort
optional terminateafter terminate search collecting terminateafter documents
add aggregation perform part search
adds field load doc values return part search request
indicates whether response contain stored source every hit
stats groups request aggregated under
rewrites search source builder primitive form eg rewriting querybuilder builder change identity reference must returned otherwise builder rewritten infinitely
indicates stored fields fetched
adds script field given name provided script name name field script script
sort values indicates docs request search after sort values searchafter must equal number sort fields query type or parsable such defaults null
sets stored fields load return part search request none specified source document returned
sets filter restrict search hits top hits aggregations slice results main query
sets search query request orgelasticsearchindexqueryquerybuilders
number search hits return defaults 10
adds sort builder
orgelasticsearchsearchsearchhit returned version associated it
adds sort given field name sort ordering name name field order sort ordering
parse xcontent searchsourcebuilder overwriting values specified xcontent use need set different defaults regular searchsourcebuilder would use fromxcontentxcontentparser boolean normal defaults parser xcontent parser checktrailingtokens true throws parsing exception extra tokens found main object
adds highlight perform part search
create shallow copy source replaced querybuilder postquerybuilder slicebuilder used rewritequeryrewritecontext copywithnewsliceslicebuilder
indicate source returned every hit include andor exclude set include simple wildcard elements include optional include optionally wildcarded pattern filter returned source exclude optional exclude optionally wildcarded pattern filter returned source
adds script field given name provided script name name field script script
sets boost specific index alias receive query executed it index index alias apply boost indexboost boost apply index
orgelasticsearchsearchsearchhit returned explanation hit ranking
sets filter executed query executed affect search hits not aggregations filter always executed last filtering mechanism
read stream
test case 5132 source filtering wildcards broken given multiple patterns httpsgithubcomelasticelasticsearchissues5132
explicitly tests cant list sortvalue list tested randomsearchafterbuilder
read stream
returns inner sortfieldtype expected sort field
make sure minscore works functions empty see httpsgithubcomelasticelasticsearchissues10253
field name field id id slice max maximum number slices
returns groupshardsiterator provided request
converts querybuilder lucene query context additional information needed build query
returns docidset per segments containing matching docs specified slice
field name field id id slice max maximum number slices
adds field name field list fields load
adds field names fieldnames list fields load
test case issue 4361 httpsgithubcomelasticelasticsearchissues4361
serialization constructor
sole constructor
parse fieldandformat xcontent
returns filter function expects source map input returns filtered map
load field values highlighting
create random highlight builder put test
create generic helper function performs work merging global highlight builder parameter potential overwrite field level default value highlightbuilderdefaultoptions making assertion value highlight builder actual value fieldoptions passed same highlightbuilder provides optional global builder parameter fieldbuilder provides optional field level parameter present overwrites global value options target field options checked
test serialization deserialization highlighter builder
mutate given highlighter builder returned one different one aspect
test unknown field name cause exception
test build outputs searchcontexthighlight similar parameters random highlightbuilder
creates random highlighter renders xcontent back new instance equal original
test unknown array fields cause exception
setup whole base test class
test ordinals order since serialization depends
test unknown field name cause exception
tagsschema produced toxcontent builder parseable adds simple json test this
create array unique strings unique eg duplicates field names would dropped fieldoptionsbuildermatchedfieldsset resulting test glitches
test parsing empty highlight empty fields blocks
test equality hashcode properties
send fields highlighted using syntax specific order highlighted chaining
read stream
transfers field options present input abstracthighlighterbuilder receiving fieldoptionsbuilder effectively overwriting existing settings targetoptionsbuilder receiving options builder highlighterbuilder highlight builder input options context needed convert querybuilder query ioexception errors parsing optional nested highlight query
adds field highlighted provided fragment size in characters provided maximum number fragments name field highlight fragmentsize size fragment characters numberoffragments maximum number fragments fragmentoffset offset start fragment start highlight
set matched fields highlight field data default null meaning named field provide list fields dont forget include name automatically included
set tag scheme encapsulates built pre post tags allowed schemes styled default schemaname tag scheme name
set encoder highlighting html default encoder name
read stream
fixes problems broken analysis chains positions offsets messed lead stringindexoutofboundsexception fastvectorhighlighter
test phrase boosting normal term matches note never pass plain highlighter doesnt support concept terms different weight based position highlightertype highlighter test
fhv spend long time highlighting degenerate documents phraselimit set default reasonably low
sets fragmenter use break text eligible highlighting option applicable using plain highlightertype highlighter permitted values simple span relating simplefragmenter simplespanfragmenter implementations respectively default span
using highlightertype fvh boundaryscannertype breakiterator setting controls locale use breakiterator defaults root
read stream
write common parameters streamoutput
using highlightertype fvh setting defines constitutes boundary highlighting its single string boundary character defined it defaults tn
set type highlighter use box supported types unified plain fvj defaults unified details different highlighter types covered reference guide
set number fragments defaults highlightbuilderdefaultnumberoffragments
forces highlighting highlight fields based source even fields stored separately
using highlightertype fvh setting controls scanner use fragment boundaries defaults simple
default fragments field ordered order highlighted text set orderscore changes order score fragments
set fragment size characters defaults highlightbuilderdefaultfragmentcharsize
using highlightertype fvh setting controls far look boundary characters defaults 20
set true cause field highlighted query matches field default false meaning terms highlighted requested fields regardless query matches specifically them
set post tags used highlighting
allows set custom options custom highlighters
using highlightertype fvh setting controls scanner use fragment boundaries defaults simple
set pre tags used highlighting
sets maximum number phrases fvh consider field doesnt also define phraselimit phraselimit maximum number phrases fvh consider chaining
sets query used highlighting instead search query
set true using highlightertype fvh want provide highlighting filter clauses query default false
sets size fragment return beginning field matches highlight field doesnt also define nomatchsize nomatchsize integer set null leave request default null chaining
test orientation parameter correctly persists across cluster restart
test indexed shape routing provided required
test ignoremalformed geoshapefieldmapper fail entire document
test case issue 6150 httpsgithubcomelasticelasticsearchissues6150
geo distance type used compute distance
point create range distance facets from points reference points
geohash geo point create range distance facets from deprecated please use pointsgeopoint points instead
sets validation method sort builder
copy constructor
constructs new distance based sort geo point like field fieldname geo point like field name points points create range distance facets from
sets nestedsortbuilder used fields inside nested object nestedsortbuilder takes path argument optional nested filter nested objects match order taken account sorting
read stream
creates new geodistancesortbuilder query held xcontentparser orgelasticsearchcommonxcontentxcontent format parser input parser state parser contained context changed side effect method call elementname sort syntax variations field name precedes xcontent object specifies parameters eg foo order asc parsing inner object field name passed via argument
point create range distance facets from lat latitude lon longitude
distance unit use defaults orgelasticsearchcommonunitdistanceunitmeters
returns nested filter nested objects match order taken account sorting set nested sort setnestedsortnestedsortbuilder retrieve getnestedsort
returns nested path sorting occurs field inside nested object default sorting field inside nested object nearest upper nested object selected nested path set nested sort setnestedsortnestedsortbuilder retrieve getnestedsort
defines distance use sorting case document contains multiple geo points possible values min max
sets nested filter nested objects match order taken account sorting set nested sort setnestedsortnestedsortbuilder retrieve getnestedsort
constructs new distance based sort geo point like field fieldname geo point like field name geohashes points create range distance facets from
sets nested path sorting occurs field inside nested object default sorting field inside nested object nearest upper nested object selected nested path set nested sort setnestedsortnestedsortbuilder retrieve getnestedsort
issue 3073
write objects fields plain streamoutput
returns nested path sorting occurs field inside nested object set nested sort setnestedsortnestedsortbuilder retrieve getnestedsort
read stream
copy constructor
sets nested filter nested objects match order taken account sorting set nested sort setnestedsortnestedsortbuilder retrieve getnestedsort
sets value field missing doc also set last first sort missing last first respectively
sets nested path sorting occurs field inside nested object default sorting field inside nested object nearest upper nested object selected nested path set nested sort setnestedsortnestedsortbuilder retrieve getnestedsort
returns nested filter nested objects match order taken account sorting set nested sort setnestedsortnestedsortbuilder retrieve getnestedsort
set type use case current field mapped index specifying type tells elasticsearch type sort values have important crossindex search sort fields exist indices only unmapped type null query execution fail one indices dont mapping current field
constructs new sort based document field fieldname field name
defines values pick case document contains multiple values targeted sort field possible values min max sum avg last two values applicable number based fields
sets nestedsortbuilder used fields inside nested object nestedsortbuilder takes path argument optional nested filter nested objects match order taken account sorting
test sort builder mode gets transfered correctly sortfield
test coercion used point gets normalized original values builder unchanged
test nested sort gets rewritten
test nested filter gets rewritten
test either set nested sort via pathfilter via nested sort builder
test sort builder nested object gets created sortfield
test sort builder order gets transfered correctly sortfield
test validation strict invalid points throw error
set order sorting
test sort builder nested object gets created sortfield
test nested sort gets rewritten
test sort builder order gets transfered correctly sortfield
test sort builder mode gets transfered correctly sortfield
test nested filter gets rewritten
test either set nested sort via pathfilter via nested sort builder
test min max mode work nonnumeric fields modes throw exception
test missing values get transfered correctly sortfield
test two syntax variations sort fieldname sort fieldname asc
test parsing random syntax variations
test array syntax variations sort fieldname fieldname2 asc
test parsing order parameter specified order field json instead reverse field render toxcontent
test passing null scoresortbuilderordersortorder illegal
return minimal value set values
create nestedsortbuilder random path filter given depth
test filters inner nested sorts get rewritten
test equality hashcode properties
test serialization test nested sort
gets nested path set nested sort setnestedsortnestedsortbuilder retrieve getnestedsort
sets nested filter nested objects match order taken account sorting set nested sort setnestedsortnestedsortbuilder retrieve getnestedsort
sets nested path sorting occurs field inside nested object sorting script needs specified set nested sort setnestedsortnestedsortbuilder retrieve getnestedsort
read stream
defines distance use sorting case document contains multiple values scriptsorttypestring set possible values restricted sortmodemin sortmodemax
constructs script sort builder given script script script use type type script either scriptsorttypestring scriptsorttypenumber
gets nested filter set nested sort setnestedsortnestedsortbuilder retrieve getnestedsort
sets nestedsortbuilder used fields inside nested object nestedsortbuilder takes path argument optional nested filter nested objects match order taken account sorting
test nested filter gets rewritten
test nested sort gets rewritten
test correct comparator sort returned based script type
test sort builder nested object gets created sortfield
test sort builder mode gets transfered correctly sortfield
test either set nested sort via pathfilter via nested sort builder
script sort type scriptsorttype work sortmodeavg sortmodemedian sortmodesum
return field type use numberfieldmappernumberfieldtype default since compatible sort modes tests require field types override this
test serialization deserialization test sort
test build outputs sortfield similar one would get parsing xcontent sort builder rendering
test creates new sort random test sort checks equality
test equality hashcode properties
build scoresortbuilder default descending sort order
check ordinals remain stable rely serialisation
public constructor field name field collapse
tests use optimization shrinking batch size shard thus integermaxvalue window doesnt oom us
build context rescorer rescorer actually performing rescore
returns true provided docs sorted score
test queryrescoremode enum ordinals names since serialization relies
returns new topdocs topn incoming one topdocs number hits already topn
modifies incoming topdocs in replacing top hits resorteds hits resorting hits
create new parser rescorer string representation reset context
creates random rescorer renders xcontent back new instance equal original
test equality hashcode properties
test serialization deserialization rescore builder
test build outputs rescorecontext properties test builder
test parsing exceptions incorrect rescorer syntax
setup whole base test class
create random shape put test
sets original query weight rescoring default 10
read stream
creates new queryrescorerbuilder instance builder query builder build rescore query
sets original query weight rescoring default 10
sets original query score mode default queryrescoremodetotal
build plain rescorecontext used actually execute rescore particular shard
convert record map timingtype times
sole constructor
timings map breakdown timing node total time node
read stream
switch new profile
sole constructor profilers instance initially wrap one queryprofiler
recursive helper finalize node dependency tree token node currently finalizing hierarchical representation tree inclusive children level
helper method add new node dependency tree initializes new list dependency tree saves query generates new queryprofilebreakdown track timings query element element profile token assigned token element profilebreakdown profile element
query run profiled need merge flat timing map dependency graph build data structure mirrors original query tree hierarchical representation profiled query tree
returns queryprofilebreakdown scoring query scoring queries eg past rewrite phase wrapped createweight follow recursive progression track dependency tree simple stack hiccup first scoring query identical last rewritten query need take special care fix query scoring query wish profile profilebreakdown query
internal helper add child current parent node childtoken child add current parent
return number times start called
start timer
stop timer
return approximation total time spent consecutive calls start stop
helper method convert profiler internalprofileshardresults serialized nodes emitted json etc profilers profilers convert results profileshardresult representing results shard
creates humanfriendly representation collector name internalbucket collectors use aggregation name tostring method makes profiled output bit nicer c collector derive name hopefully prettier name
read stream
read stream
set collector associated profiler
test verifies output reasonable simple nonnested query
tests series three nested boolean queries single leaf match query rewrite process collapse single bool tests make sure nothing catastrophic happens fairly substantial rewrite
test makes sure profile results returned profiling disabled
test simply checks make sure nothing crashes test indexes 100150 documents constructs 20100 random queries tries profile
tests boolean query children clauses
test verifies output reasonable nested query
test generates 110 random queries executes profiled nonprofiled search query basic sanity checking score hits make sure profiling doesnt interfere hits returned
begin timing query specific timing context
halt timing process add elapsed rewriting time startrewritetime must called particular context prior calling stopandaddrewritetime otherwise elapsed time negative nonsensical elapsed time
read stream
test parsing works randomly created aggregations object randomized aggregation tree test randomly chooses xcontenttype randomizes order xcontent fields randomly sets humanreadable flag rendering xcontent addrandomfields set also add random xcontent fields tests parsers lenient future additions rest responses
returns whether one parents bucketsaggregator
get value specified path aggregation path path property aggregation tree value property
reduces given aggregations single one returns it most cases assumption given aggregations type the type aggregation best efficiency implementing try reusing existing instance typically first given list save redundant object construction
write size assumption value 0 means unlimited
read size assumption value 0 means unlimited
constructs get given name name name get
read stream
read stream
registers subfactories factory subfactory responsible creation subaggregators aggregator created factory subfactories subfactories factory fluent interface
add sub aggregation aggregation
create aggregators consumed multiple buckets
rewrites underlying aggregation builders primitive form builder change identity reference must returned otherwise builder rewritten infinitely
read stream
testing
sub leaf collector sub aggregations values values scorerawaresetscorer called automatically implement scoreraware
test serialization deserialization test aggregatorfactory
generic test creates new aggregatorfactory test aggregatorfactory checks equality asserts equality two queries
generic test checks tostring method renders xcontent correctly
setup whole base test class
test serialization deserialization test aggregatorfactory
generic test creates new aggregatorfactory test aggregatorfactory checks equality asserts equality two queries
parse token type xcontentparsertokenvaluenumber xcontentparsertokenstring double cases default value returned instead
wrap given collectors single instance
subtests need complex mock overwrite
added randomly run assertions index searcher level like orgapacheluceneutillucenetestcasenewsearcherindexreader cant used also wraps indexsearchers indexreader implementations cant handle eg parallelcompositereader
create factory given aggregation builder
added randomly run assertions index reader level like orgapacheluceneutillucenetestcasewrapreaderindexreader cant used also wraps indexreader implementations cant handle eg parallelcompositereader
divides provided indexsearcher subsearcher one segment builds aggregator subsearcher filtered provided query returns reduced internalaggregation
constructs new aggregator factory name aggregation name ioexception error occurs creating factory
utility method given aggregatorfactory creates aggregators know collect bucket 0 returns aggregator collect bucket
reduces given lists addaggregation aggregationslist list aggregation reduce reduced addaggregation
constructs new aggregator name name aggregation factories factories subaggregators aggregator context aggregation context parent parent aggregator may null top level aggregators metadata metadata associated aggregator
called upon release aggregator
name aggregation
called collection document done
increment decrement number bytes allocated service request potentially trigger circuitbreakingexception number bytes allocated automatically decremented circuit breaker service closure aggregator memory returned decrement without tripping breaker performance reasons subclasses call millions times small increments instead batch larger allocations bytes number bytes register negative deregister bytes cumulative size bytes allocated aggregator service request
parent aggregator aggregator addaggregation hierarchical sense composed others more specifically bucket addaggregation define addaggregation aggregated per bucket method returns direct parent aggregator contains aggregator null none meaning aggregator top level one
current aggregation context
aggregators dont need scores make sure extend method aggregator needs them
top aggs eg datehistogram executed unmapped fields generate estimate count buckets zero sub aggregator created take estimation account used cause arrayindexoutofboundsexception
making sure multiple aggregations working field yet require different value source type still work used fail used cache valuesource field name cached value source type bytes another aggregation field required see numeric didnt work cache value sources custom key field name valuesource type theres conflict there
returns aggregation associated specified name
iterates aggregations
returns aggregations keyed aggregation name
directly write aggregations without bounding object used subaggregations non top level aggs
rewrites given aggregation primitive form aggregations instance fetch resources remote hosts simplify optimize heavy lifting rewritequeryrewritecontext method rewrites aggregation doesnt change anymore ioexception ioexception occurs
constructs new aggregation builder name aggregation name
histogram order backwards compatibility logic read bucketorder streaminput stream order data read bwcorderflag true check inreadboolean backwards compat logic reading order false skip flag order always present order read stream ioexception error reading stream
create new comparator sorting buckets multiple criteria compoundorder list bucketorders sort on order priority aggregator bucketordercomparatoraggregator
compare bucketgetkey appropriate implementation
read bucketorder streaminput stream order data read order read stream ioexception error reading stream
histogram order backwards compatibility logic write bucketorder stream order order write stream stream write order to bwcorderflag true always outwritebooleantrue backwards compat logic writing order false skip flag ioexception error writing stream
write bucketorder streamoutput order order write stream stream write order to ioexception error writing stream
creates ordering strategy sorts buckets property id unique id ordering strategy key key property sort on asc direction sort by true ascending false descending comparator determines buckets ordered
determine ordering strategy matches expected one order bucket ordering strategy check compoundorder first element check instead expected expected bucket ordering strategy true order matches false otherwise
validate bucket ordering strategy aggregator order bucket ordering strategy sort on aggregator aggregator sort unmodified bucket ordering strategy aggregationexecutionexception validation fails
create new ordering strategy sort multiple criteria compoundorder list bucketorders sort on order priority absoluteordering true add tiebreaker avoid nondeterministic ordering needed false otherwise
create new bucket ordering strategy sort subaggregation path path subaggregation sort on asc direction sort by true ascending false descending aggregationpath
parse bucketorder xcontent parser parsing xcontent contains order bucket ordering strategy ioexception error xcontent parsing error
creates new aggregation context parsed aggregator factories
counts number inner buckets inside provided internalbucket
counts number inner buckets inside provided aggregation
constructs new pipeline aggregator factory name aggregation name
make sure request using script get cached request using script get cached
make sure request using script get cached request using script get cached
make sure request using script get cached request using script get cached
make sure request using script get cached request using script get cached
make sure request using script get cached request using script get cached
make sure request using script get cached request using script get cached
make sure request using script get cached request using script get cached
make sure request using script get cached request using script get cached
make sure request using script get cached request using script get cached
test forces geoboundsaggregator resize bigarrays uses ensure resized correctly
test passing keyed filters map equivalent
make sure request using script get cached request using script get cached
make sure request using script get cached request using script get cached
make sure request using script get cached request using script get cached
make sure request using script get cached request using script get cached
make sure request using script get cached request using script get cached
read stream
read stream
read stream
number search hits return defaults 10
adds highlight perform part search
orgelasticsearchsearchsearchhit returned version associated it
add sort given field name name name field sort
adds script field given name provided script name name field script script
read stream
sets stored fields load return part search request disable stored fields entirely source metadata fields use storedfieldnone
adds sort builder
indicate source returned every hit include andor exclude set include simple wildcard elements include optional include optionally wildcarded pattern filter returned source exclude optional exclude optionally wildcarded pattern filter returned source
indicates whether response contain stored source every hit
adds sort builder
indicate source returned every hit include andor exclude set include simple wildcard elements includes optional list include optionally wildcarded pattern filter returned source excludes optional list exclude optionally wildcarded pattern filter returned source
applies sorting controls scores tracked well defaults false
adds script field given name provided script name name field script script
orgelasticsearchsearchsearchhit returned explanation hit ranking
index start search from defaults 0
adds field load doc values return part search request
indicate source fetched
adds sort given field name sort ordering name name field order sort ordering
tests tophits inside terms strictly unit test fairly common way run tophits serves good example running tophits inside another aggregation
read stream
set whether xcontent response keyed
read stream
set values compute percentiles from
expert set number significant digits values relevant using percentilesmethodhdr
expert set compression higher values improve accuracy also memory usage relevant using percentilesmethodtdigest
expert set compression higher values improve accuracy also memory usage relevant using percentilesmethodtdigest
set whether xcontent response keyed
read stream
expert set number significant digits values relevant using percentilesmethodhdr
read stream
read stream
read stream
set precision threshold higher values improve accuracy also increase memory usage
replacement values always rehashed
read stream
add k hash table associated bucket return 1 value already set new set size added
compute required precision count distinct entries would counted linear counting
encode hash 32 bits encoded hash cannot equal 0
read stream
mock script service script run looks states context variable visible executing script simply returns count equal number input internalscriptedmetrics reduced total
test explicitly added agg param honored
cannot use mockito mocking queryshardcontext case scriptrelated methods eg queryshardcontextgetlazyexecutablescript final cannot mocked
test agg param implicitly added
test uses score documents
cannot use mockito mocking queryshardcontext case scriptrelated methods eg queryshardcontextgetlazyexecutablescript final cannot mocked
without combine script states map contain list size number documents matched
test combine script sums list produced mapscript
mock script service script run looks aggs parameter verify put place internalscriptedmetric
set reduce script
set parameters available init map combine phases
read stream
set map script
set init script
set combine script
read stream
read stream
read stream
set whether wrap longitudes defaults true
read stream
read stream
read stream
read stream
read stream
read stream
return map field names data
return covariance two fields
return skewness requested field
creates results object given stream
return fied count requested field
return value two fields upper triangular matrix regardless row col location
return variance requested field
computes final covariance variance correlation
return mean requested field
base ctor
creates computes result provided stats
return correlation coefficient two fields
marshalls matrixstatsresults
return kurtosis requested field
merges descriptive statistics second data set eg per shard running computations taken from httpprodsandiagovtechlibaccesscontrolcgi2008086212pdf
updates running statistics documents field values
ctor create instance running statistics
update covariance matrix
merges two covariance matrices
per shard ctor
get variance given field
read stream
get mean given field
get correlation two fields
get distribution shape given field
get covariance two fields
get number samples given field doccount nummissing
get distribution skewness given field
get number documents
test running stats
test merging stats across observation shards
resolves topmost aggregator pointed path using given root point reference root point reference path first child aggregator root pointed path
resolves aggregator pointed path using given root point reference root point reference path aggregator pointed path starting given aggregator point reference
validates path given aggregator point reference root point reference path aggregationexecutionexception validation error
resolves value pointed path given aggregations root root root serves point reference path resolved value
sets valuetype value produced aggregation
sets field use aggregation
sets time zone use aggregation
sets script use aggregation
sets format use output aggregation
read aggregation stream serialize targetvaluetype used subclasses
read aggregation stream serializes targetvaluetype used subclasses override serializetargetvaluetype return true
read stream
sets value use aggregation finds missing value document
sets format use output aggregation
read stream
sets value use aggregation finds missing value document
sets valuetype value produced aggregation
sets field use aggregation
constructs field data context given field index field data field name field indexfielddata index field data field
get value source given configuration return value null indicates value source could built
resolve valuessourceconfig given configuration parameters
return original values source apply missing
read stream
sets valuetype value produced aggregation
sets format use output aggregation
use movingfunctionstring script string int instead
first value derivative null makes sure cusum handle
derivative date histogram time zone cet dst start
also check time zone shifts one hour eg asiakathmandu 1 jan 1986 time zone change ist npt 000000 clocks turned forward 0015 minutes
derivative date histogram time zone cet dst end
computes simple agg metric min sum etc provided values values array values compute metric metric metric builder defines kind metric returned values
generates mock histogram use testing mockbucket holds doc count key document values later used compute metrics compare real aggregation results gappiness controlled via parameters interval interval bucket keys size size mock histogram generate in buckets gapprobability probability generating empty bucket 0010 inclusive runprobability probability extending gap one created 0010 inclusive
read stream
test httpsgithubcomelasticelasticsearchissues17701
read stream
given path set buckets method return value inside agg path used extract values use pipeline aggregations eg derivative might need price bucket bucket empty configured gappolicy invoked resolve missing bucket agg series agg buckets form histogram bucket specific bucket value needs extracted from bucket present histo parameter aggpath path particular value needs extracted path point metric inside bucket gappolicy gap policy apply empty buckets found value extracted bucket found aggpath
parse string gappolicy byte enum text gappolicy string format eg ignore gappolicy enum
deserialize gappolicy input stream gappolicy enum
validates state factory makes sure factory properly configured
read stream
creates pipeline aggregator created aggregator
test first second derivative sing
test first second derivative sing
sets gap policy use aggregation
read stream
sets format use output aggregation
read stream
sets gap policy use aggregation
read stream
sets format use output aggregation
read stream
read stream
read stream
read stream
read stream
set value sigma use calculating standard deviation bounds
read stream
set percentages calculate percentiles aggregation
check dont rely percent array order iterator returns values original order
read stream
read stream
test issue 30608 following circumstances a multibucket agg first entry internal list b regular agg immediate child multibucket c regular agg name b top level listed second entry internal list d finally pipeline agg path b bucketmetrics reduction would throw class cast exception due bad subpathing test ensures fixed note test inside avgbucket package get access packageprivate doreduce needed testing
sets gap policy use aggregation
sets format use output aggregation
used serialization testing since pipeline aggs serialize named object parsed regular object name passed in
sets window size aggregation
calculate triple exponential weighted moving average alpha controls smoothing data alpha 1 retains memory past values eg random walk alpha 0 retains infinite memory past values eg series mean useful values somewhere between defaults 05 beta equivalent alpha controls smoothing trend instead data gamma equivalent alpha controls smoothing seasonality instead data finite values averaged nan null ignored values missingnullnan return value nan average based count nonnull nonnan values alpha double 01 inclusive controls data smoothing beta double 01 inclusive controls trend smoothing gamma double 01 inclusive controls seasonality smoothing period expected periodicity data multiplicative true multiplicative hw used false additive
calculate linearly weighted moving average older values linearly less important time determined position collection finite values averaged nan null ignored values missingnullnan return value nan average based count nonnull nonnan values
calculate standard deviation values using provided average finite values averaged nan null ignored values missingnullnan return value nan average based count nonnull nonnan values
version holt forecast exposed whitelisted function movingfn scripts compatibilitycode sharing existing movingavg agg removed movingavg gone
calculate doubly exponential weighted moving average alpha controls smoothing data alpha 1 retains memory past values eg random walk alpha 0 retains infinite memory past values eg series mean useful values somewhere between defaults 05 beta equivalent alpha controls smoothing trend instead data finite values averaged nan null ignored values missingnullnan return value nan average based count nonnull nonnan values alpha double 01 inclusive controls data smoothing beta double 01 inclusive controls trend smoothing
calculate exponentially weighted moving average alpha controls smoothing data alpha 1 retains memory past values eg random walk alpha 0 retains infinite memory past values eg series mean useful values somewhere between defaults 05 finite values averaged nan null ignored values missingnullnan return value nan average based count nonnull nonnan values alpha double 01 inclusive controls data smoothing
find sum window values values missingnullnan return value 00
calculate simple unweighted arithmetic moving average finite values averaged nan null ignored values missingnullnan return value nan average based count nonnull nonnan values
version holtwinters forecast exposed whitelisted function movingfn scripts compatibilitycode sharing existing movingavg agg removed movingavg gone
returns empty set predictions filled nans numpredictions number empty predictions generate
read stream
read stream
models minimizable throw exceptions
test simple moving average single value field
linearly weighted moving avg window window values compute movavg
minimizer turned on isnt enough data minimize with simply use default settings means mock histo match generated result which wont minimizer actually working since coefficients different thus generate different data simulate setting window size size histo
exponentially weighted ewma single exponential moving avg window window values compute movavg
models minimized throw exception for simple linear
simple unweighted moving average window window values compute movavg
holtlinear double exponential moving avg window window values compute movavg
holt winters triple exponential moving avg window window values compute movavg
calculates moving averages specific model target tuple based previously generated mock histogram computed values stored testvalues map type moving average model use target document field target eg count field value
read stream
read stream
sets gap policy use aggregation
read stream
sets format use output aggregation
read stream
read stream
read stream
read stream
calculates cost model eg run training data closely predictions match test data uses least absolute differences calculate error note scale free seems work fairly well practice model movavgmodel fitting train training set data given model generate predictions test test set data compare predictions cost error model
runs simulated annealing algorithm produces model new coefficients that theoretically fit data better generalizes future forecasts without overfitting model movavgmodel optimized train training set provided model predictions generated test test set data compare predictions derive cost model new minimized model theoretically better fits data
read stream
sets window size moving average window slide across series values inside window used calculate moving avg value window size window
sets number predictions returned prediction spaced intervals specified histogram eg predict 2 return two new buckets end histogram predicted values predict number predictions make
sets movavgmodel moving average model used define type moving average want use series model movavgmodel prepopulated settings
sets format use output aggregation
sets gappolicy use output aggregation
sets movavgmodel moving average model used define type moving average want use series model movavgmodel prepopulated settings
read stream
sets whether model fit data using cost minimizing algorithm minimize model fit underlying data
alpha controls smoothing data alpha 1 retains memory past values eg random walk alpha 0 retains infinite memory past values eg series mean useful values somewhere between defaults 05 alpha double 01 inclusive controls data smoothing builder continue chaining
extracts integer settings map otherwise throws exception settings map settings provided model name name parameter attempting extract defaultvalue default value used value exist map integer value extracted settings map
checks see model produce new value without actually running algo used models certain preconditions need met order shortcircuit execution valuesavailable number values current window values returns true calling next produce value false otherwise
predicts next n values series values collection numerics movingavg usually windowed numpredictions number newly generated predictions return returns array doubles since smoothing methods operate floating points
extracts boolean settings map otherwise throws exception settings map settings provided model name name parameter attempting extract defaultvalue default value used value exist map boolean value extracted settings map
returns empty set predictions filled nans numpredictions number empty predictions generate
extracts 01 inclusive double settings map otherwise throws exception settings map settings provided model name name parameter attempting extract defaultvalue default value used value exist map double value extracted settings map
read stream
alpha controls smoothing data alpha 1 retains memory past values eg random walk alpha 0 retains infinite memory past values eg series mean useful values somewhere between defaults 05 alpha double 01 inclusive controls data smoothing builder continue chaining
equivalent alpha controls smoothing trend instead data beta double 01 inclusive controls trend smoothing builder continue chaining
calculate holtlinear doubly exponential weighted moving average values collection values calculate avg numforecasts number forecasts future return returns double containing moving avg window
predicts next n values series using smoothing model generate new values unlike moving averages holtlinear forecastingprediction built algorithm prediction simply adding next prediction window repeating holtlinear extrapolate future applying trend information smoothed data values collection numerics movingavg usually windowed numpredictions number newly generated predictions return returns array doubles since smoothing methods operate floating points
alpha controls smoothing data alpha 1 retains memory past values eg random walk alpha 0 retains infinite memory past values eg series mean useful values somewhere between defaults 05 alpha double 01 inclusive controls data smoothing builder continue chaining
equivalent alpha controls smoothing trend instead data beta double 01 inclusive controls trend smoothing builder continue chaining
read stream
parse string seasonalitytype byte enum text seasonalitytype string format eg add seasonalitytype enum
predicts next n values series using smoothing model generate new values unlike moving averages holtwinters forecastingprediction built algorithm prediction simply adding next prediction window repeating holtwinters extrapolate future applying trend seasonal information smoothed data values collection numerics movingavg usually windowed numpredictions number newly generated predictions return returns array doubles since smoothing methods operate floating points
calculate doubly exponential weighted moving average values collection values calculate avg numforecasts number forecasts future return returns double containing moving avg window
deserialize seasonalitytype input stream input stream seasonalitytype enum
read stream
sets format use output aggregation
read stream
sets gappolicy use output aggregation
sets lag use calculating serial difference
target document field target eg count field value
make sure request using script get cached request using script get cached
test date histogram aggregation day interval offset extended bounds see httpsgithubcomelasticelasticsearchissues23776
script change document date values following doc 1 feb 2 mar 3 doc 2 mar 2 apr 3 doc 3 mar 15 apr 16 doc 4 apr 2 may 3 doc 5 apr 15 may 16 doc 6 apr 23 may 24
test date histogram aggregation hour interval timezone shift extended bounds see httpsgithubcomelasticelasticsearchissues12278
httpsgithubcomelasticelasticsearchissues31392 demonstrates edge case date field mapping format epochmillis lead date histogram aggregation throw error nonutc time zone daylight savings time used test added check working
jan 2 feb 2 feb 15 mar 2 mar 15 mar 23
see issue 9634 negative datehistograminterval datehistogram raise exception
dst ends local time turns back one hour 2am 4am wall time four buckets 20151025t0200000000200 20151025t0200000000100 20151025t0300000000100 20151025t0400000000100
heuristic used determine size shardside priorityqueues selecting top n terms distributed index finalsize number terms required final reduce phase numberofshards number shards queried suggested default size shardside priorityqueues
make sure request using script get cached request using script get cached
required method build child aggregations given bucket identified bucket ordinal
utility method build empty aggregations sub aggregators
collectbucketleafbucketcollector int long doesnt check doccounts needs resized
utility method collect given doc given bucket identified bucket ordinal
utility method return number documents fell given bucket identified bucket ordinal
utility method increment doc counts given bucket identified bucket ordinal
test passing keyed filters list array list stored internally sorted key also check list passed modified rather copied
make sure request using script get cached request using script get cached
subsetfreq frequency term selected sample subsetsize size selected sample typically number docs supersetfreq frequency term superset sample taken supersetsize size superset sample taken typically number docs significance score
make sure request using script get cached request using script get cached
shift buckets random offset 2interval setup 1 doc per values 1numdocs special care needs taken expecations counts first last bucket
see issue 9634 negative interval histogram raise exception
make sure request using script get cached request using script get cached
bucket bucket check assertions key expected key expectedsize expected size bucket
set offset day buckets start 6am index first 12 hours two days one day gap
read stream
creates single bucket aggregation name aggregation name doccount document count single bucket aggregations already built subaggregations associated bucket
wrap provided aggregator behaves almost collected directly
replay wrapped collector selection buckets
test case know exactly many term shard know exact error value term search 3 oneshard indices
never render null values xcontent test parse and return correct defaults
wrap provided aggregator behaves almost collected directly
set deferred collectors
replay wrapped collector selection buckets
sole constructor context search context isglobal whether collector visits documents global context
never render null values xcontent test parse and return correct defaults
make sure request using script get cached request using script get cached
test querying ranges date mapping specifying format tofrom values specified strings
make sure request using script get cached request using script get cached
test querying ranges date mapping specifying format tofrom values specified numeric value
read stream
read stream
add new range aggregation key key use range response lower bound distances inclusive upper bound distances exclusive
add new range lower bound key key use range response upper bound distances exclusive
add new range upper bound key key use range response lower bound distances inclusive
resolve strings ranges number value range ranges also sorted returned
read stream
read stream
read stream
add new range aggregation key key use range response lower bound dates inclusive upper bound dates exclusive
add new range upper bound key key use range response lower bound distances inclusive
add new range aggregation key key use range response lower bound dates inclusive upper bound dates exclusive
add new range upper bound key key use range response lower bound distances inclusive
add new range lower bound key key use range response upper bound dates exclusive
add new range upper bound key key use range response lower bound distances inclusive
add new range lower bound key key use range response upper bound dates exclusive
add new range aggregation key key use range response lower bound dates inclusive upper bound dates exclusive
add new range lower bound key key use range response upper bound dates exclusive
add new range upper bound key key use range response lower bound distances inclusive
add new range aggregation key key use range response lower bound distances inclusive upper bound distances exclusive
add new range lower bound key key use range response upper bound distances exclusive
checks invariant bucket keys always nonnull even null keys originally provided
addrangestring string string lower bound
add new range aggregation key key use range response lower bound distances inclusive upper bound distances exclusive
add new range aggregation
addrangestring string string upper bound
set max num docs returned per value
read stream
set execution hint
set max num docs returned shard
sole constructor shardsize number topscoring docs collect bucket
set deferred collectors
read stream
set max num docs returned shard
uses sampler aggregation find minimum value field top 3 scoring documents search
true explicit null bucket represent documents missing values
sets script use source
sets field use source
sets format use output aggregation
sets sortorder use sort values produced source
sets sortorder use sort values produced source
sets valuetype value produced source
visits nondeleted documents iterator fills provided queue top composite buckets extracted collection documents contain top composite bucket added provided builder null returns true queue full current leadsourcebucket produce competitive composite buckets
returns true sorteddocsproducer used optimize execution
creates new singledimensionvaluessource bigarrays big arrays object format format source fieldtype field type null source script missingbucket true explicit null bucket represents documents missing values size number values record reversemul 1 natural order sortorderasc reversed
sets interval source
vs original values source rounding round values
number composite buckets return defaults 10
sets values indicates composite bucket request aggregate after defaults null
vs original values source
sets interval source interval datehistograminterval set datehistograminterval wins
sets time zone use aggregation
creates new compositevaluessourceconfig name name source fieldtype field type null source script vs underlying valuessource format docvalueformat source order sort order associated source
sort order values source eg 1 descending 1 ascending
compares values values slot
creates collector visit composite buckets matching documents forceleadsourcevalue null leading source use value document provided collector in called composite bucket
copies current value slot
check current candidate added queue target slot candidate 1 candidate competitive
constructs composite queue specified size sources sources list compositevaluessourceconfig build composite buckets size number composite buckets keep afterkey composite key
builds compositekey slot
compares values slot1 slot2
format obj using provided docvalueformat format equals docvalueformatraw object returned numbers string bytesrefs
replay documents might contain top bucket pass top buckets deferredcollectors
first pass selects top composite buckets matching documents
replay top buckets matching documents
set separator used join pairs bucket keys
name name aggregation separator string used separate keys intersections buckets eg character keyed filters b would return intersection bucket named ab filters filters key use aggregation
get filters unmodifiable map
read stream
read stream
read stream
read stream
set whether return buckets hash array return builder calls chained
read stream internal use only
sets order buckets returned tiebreaker may added avoid nondeterministic ordering
set minimum count matching documents buckets need return builder calls chained
get interval timevalue called getintervalasdatetimeunit returned null
set extended bounds histogram buckets would also generated intervals match documents
set offset builder number milliseconds return builder calls chained
set offset builder time value return builder calls chained
set interval builder return builder calls chained interval datehistograminterval set datehistograminterval wins
set new order builder return builder calls chained tiebreaker may added avoid nondeterministic ordering
set interval builder return builder calls chained interval datehistograminterval set datehistograminterval wins
return interval date time unit applicable returns null means interval expressed fixed timevalue may accessed via getintervalastimevalue
method works almost exactly internaldatehistogramreducebucketslist reducecontext different need round keys see using highest level rounding returned across shards resolution buckets reduced together
stream stream
read stream
stream stream
read stream
parse bounds perform delayed validation returns result parsing
read stream
construct possible information
construct random extendedbounds
construct random extendedbounds preparsed form
convert extended bounds parsed one unparsed form
stream stream
read stream
build roundings computed dynamically roundings time zone dependent current implementation probably invoked tight loop array roundinginfo
read stream internal use only
set extended bounds builder buckets minbound maxbound created even documents fell buckets illegalargumentexception maxbound less minbound either bounds finite
set offset builder return builder calls chained
read stream internal use only
set interval builder return builder calls chained
set whether return buckets hash array return builder calls chained
sets order buckets returned tiebreaker may added avoid nondeterministic ordering
set minimum count matching documents buckets need return builder calls chained
set new order builder return builder calls chained tiebreaker may added avoid nondeterministic ordering
returns weight filter aggregation creating necessary done lazily weight created aggregation collects documents reducing overhead aggregation teh case documents collected note aggregations initialsed executed serial manner concurrency considerations necessary here
read stream
read stream
read stream
name name aggregation filter set filter use documents match filter fall bucket defined filter aggregation
read stream
name name aggregation filters filters use aggregation
set whether include bucket documents matching filter
set key use bucket documents matching filter
read stream
returns weights filter aggregation creating necessary done lazily weights created aggregation collects documents reducing overhead aggregation case documents collected note aggregations initialsed executed serial manner concurrency considerations necessary here
provided field type also register alias name alias
provided field type also register alias name alias
set path use nested aggregation path must match path nested object mappings specified aggregation go back root document
read stream
name name aggregation path path use nested aggregation path must match path nested object mappings
read stream
read stream
read stream
read stream
read stream
uses significant text aggregation find keywords text fields
provided field type also register alias name alias
test documents arrays text
uses significant terms aggregation find keywords text fields
provided field type also register alias name alias
uses significant terms aggregation index unmapped field
uses significant terms aggregation find keywords numeric fields
read stream
sets shardsize indicating number term buckets shard return coordinating node the node coordinates search execution higher shard size is accurate results are
control duplicate paragraphs text try filtered statistical text analysis improve results slows analysis default false
set terms include exclude aggregation results
set minimum document count terms order appear response
selects fields load source json analyze none specified indexed fieldname value assumed also name json field holding value
sets name text field subject aggregation
set minimum document count terms shard order appear response
name name aggregation fieldname name text field subject aggregation
sets size indicating many term buckets returned defaults 10
set minimum document count terms shard order appear response
set terms include exclude aggregation results
set minimum document count terms order appear response
read stream
sets shardsize indicating number term buckets shard return coordinating node the node coordinates search execution higher shard size is accurate results are
sets size indicating many term buckets returned defaults 10
expert sets execution hint aggregation
read stream
read stream
calculates google normalized distance described the google similarity distance cilibrasi vitanyi 2007 link httparxivorgpdfcs0412098v3pdf
indicates significance term sample determining percentage occurrences term found sample
calculates mutual information see information retrieval manning et al eq 1317
read stream
calculates chi2 see information retrieval manning et al eq 1319
calculates score script subsetfreq frequency term selected sample subsetsize size selected sample typically number docs supersetfreq frequency term superset sample taken supersetsize size superset sample taken typically number docs significance score
calculates significance term sample background normal distributions comparing changes frequency heart significant terms feature
get maximum global ordinal value provided valuessource 1 values source instance valuessourcebyteswithordinals
returns whether given value accepted based include exclude patterns
computes global ordinals accepted includeexclude instance
include regular expression pattern terms included exclude regular expression pattern terms excluded
read stream
returns whether given value accepted based include exclude sets
includevalues terms included excludevalues terms excluded
read stream
converts longterms doubleterms returning value specified long terms doubles
read stream
read stream
make sure request using script get cached request using script get cached
read stream
expert sets execution hint aggregation
sets shardsize indicating number term buckets shard return coordinating node the node coordinates search execution higher shard size is accurate results are
sets order buckets returned tiebreaker may added avoid nondeterministic ordering
expert set collection mode
set new order builder return builder calls chained tiebreaker may added avoid nondeterministic ordering
set minimum document count terms order appear response
sets size indicating many term buckets returned defaults 10
read stream
set minimum document count terms shard order appear response
set terms include exclude aggregation results
set whether doc count error return individual terms
read stream
internal optimization ordering internaltermsbuckets sub aggregation phase order based subaggregations need use different comparator avoid constructing buckets ordering purposes we potentially lot buckets building cause loads redundant object constructions special comparators fetch sub aggregation values directly sub aggregators bypassing bucket creation note comparator attached order still used reduce phase aggregation path determines sub aggregation use ordering asc true ascending order false descending comparator order internaltermsbuckets desired order
read stream
read stream
test equality hashcode properties
test serialization deserialization
creates random suggestion builder renders xcontent back new instance equal original
setup whole base test class
parsing method assumes leading suggest field name already parsed caller
returns integer representing type suggestion used internal serialization network class serialized namedwriteable method remains backwards compatibility
merges result another suggestion suggestion internal usage
suggestions type suggestiontype contained suggest instance
trims number options per suggest text term requested size internal usage
read stream
adds orgelasticsearchsearchsuggestsuggestionbuilder instance user defined name order suggestions added response illegalargumentexception two suggestions added name
gets global suggest text
sets text provide suggestions for suggest text required option needs set either via setter via orgelasticsearchsearchsuggestsuggestionbuildertextstring method suggest text gets analyzed suggest analyzer suggest field search analyzer analyzed token suggested terms suggested possible
read stream
suggestbuildersetglobaltextstring suggestion scope
sets maximum suggestions returned per suggest text term
internal copy constructor copies class fields second suggestionbuilder except field name
sets maximum number suggested term retrieved individual shard reduce phase top n suggestions returned based size option defaults size option setting value higher size useful order get accurate document frequency suggested terms due fact terms partitioned amongst shards shard level document frequencies suggestions may precise increasing make document frequencies precise
sets analyzer analyse suggest text with defaults search analyzer suggest field
transfers text prefix regex analyzer field size shard size settings original suggestionbuilder target suggestioncontext
creates new suggestion field field execute suggestions
setup whole base test class
test equality hashcode properties
creates random suggestion builder renders xcontent back new instance equal original
test serialization deserialization suggestion builder
returns random suggestion builder setting common options randomly
searching rare phrase shouldnt provide suggestions confidence 1 possible rechecked cutoff score reduce phase failures dont occur every time maybe two five tries dont repeat save time
test suggestion works prefix either provided via completionsuggestionbuildertextstring suggestbuildersetglobaltextstring
create randomized suggestionentry
test parse nothing restsearchactiontypedkeysparam isnt set rendering xcontent cannot find suggestion type information
sets level fuzziness used create suggestions using fuzziness instance default value fuzzinessone allows edit distance one
sets transpositions swapping one character another counts one character change two defaults true meaning uses fuzzier option counting transpositions single change
set true measurements like edit distance transpositions lengths unicode code points actual letters instead bytes default false
sets level fuzziness used create suggestions using fuzziness instance default value fuzzinessone allows edit distance one
sets maximum automaton states allowed fuzzy expansion
read stream
sets minimum length input checked fuzzy alternatives defaults 1
sets minimum length input string fuzzy suggestions returned defaulting 3
returns total inheap bytes used suggesters method cpu cost onumindexedfields fieldnamepatterns nonnull completion field name matching patterns break inheap bytes separately returned completionstats
sets regular expression pattern prefixes provide completions for
prefixstring fuzziness fuzziness
sets prefix provide completions for prefix gets analyzed suggest analyzer
regexstring full regular expression options see regexoptionsbuilder
sets query contexts completion querycontexts named query contexts see orgelasticsearchsearchsuggestcompletioncontextcategoryquerycontext orgelasticsearchsearchsuggestcompletioncontextgeoquerycontext
prefixstring full fuzzy options see fuzzyoptionsbuilder
read stream
internal copy constructor copies class fields except field set one provided first argument
duplicates filtered not defaults false
test serialization deserialization
sets maximum automaton states allowed regular expression expansion
sets regular expression syntax flags see regexpflag
read stream
result options suggestion
ctr name name suggestions size number suggestions return skipduplicates whether duplicate suggestions filtered
reduces suggestions single suggestion containing top completionsuggestiongetsize options across toreduce
exclude contexts field recursive random shuffling fromxcontent tests else equals test fail bytesreference representation isnt
test serialization deserialization
define new context mapping specific type type type context mapping either typecategory typegeo name name context mapping
verifies field paths specified contexts point fields correct mappings
parses query contexts mapper
sets querytime boost context defaults 1
sets category category required field
sets context treated prefix not defaults false
parse list categoryquerycontext using parser querycontexts accepts one following forms object categoryquerycontext string categoryquerycontext value prefixfalse boost1 array categoryquerycontext categoryquerycontext one following forms object context string boost int prefix boolean string string
create new categorycontextmapping field fieldname
loads named categorycontextmapping instance map see contextmappingsloadobject version acceptable map param path
set name field use
parse set charsequence contexts indextime acceptable formats array string string string
set name field containing geolocation use fieldname name field
parse list geoquerycontext using parser querycontexts accepts one following forms object geoquerycontext string geoquerycontext value boost1 precisionprecision neighboursprecision array geoquerycontext geoquerycontext one following forms object geo point lat double lon double precision int neighbours int context string boost int precision int neighbours int context geo point boost int precision int neighbours int string geo point see geopointstring geo point
set precision use o make suggestions meters precision distance meters
parse set charsequence contexts indextime acceptable formats array geo point stringobjectarray geo point see geopointstring geo point
set precision use o make suggestions level maximum length geohashes
sets precision level computing geohash context geo point defaults using indextime precision level
sets querytime boost context defaults 1
sets precision levels geohash cells neighbours considered defaults considering neighbours indextime precision level
sets geo point context required field
writes list objects specified defined contextmappings see contextmappingtoxcontentxcontentbuilder params
loads contextmappings configuration expected configuration list maps representing contextmapping name type
maps output context list map context mapping names values see orgelasticsearchsearchsuggestcompletioncontextcontextmappingstypedcontextfield map context names values
wraps completionquery context queries query base completion query wrap querycontexts map context mapping name collected query contexts contextenabled query
returns context mapping name
creates linear interpolation smoothing model note lambdas must sum one trigramlambda trigram lambda bigramlambda bigram lambda unigramlambda unigram lambda
read stream
note method closes tokenstream even exception awkward really caller called analyzertokenstream close it trying recursion issues try use tokenstream twice recursion
lower scores sort first scores equal later zzz terms sort first
adds candidategenerator suggester candidategenerator used draw candidates individual phrase term candidates scored
set true phrase suggester fail analyzer produces ngrams default true
sets confidence level suggester confidence level defines factor applied input phrases score used threshold suggest candidates candidates score higher threshold included result instance confidence level 10 return suggestions score higher input phrase set 00 top n candidates returned default 10
internal copy constructor copies class fields except field set one provided first argument
setup highlighting suggestions called highlight field returned suggestions wrapping changed tokens pretag posttag
sets likelihood term misspelled even term exists dictionary default 095 corresponding 5 real words misspelled
sets query used filtering suggested phrases collation
clear candidate generators
sets separator used separate terms bigram field set whitespace character used separator
sets maximum percentage terms considered misspellings order form correction method accepts float value range 01 fraction actual query terms number 1 absolute number query terms default set 10 corresponds corrections 1 misspelled term returned
read stream
sets gram size ngram model used suggester default value 1 corresponding unigrams use 2 bigrams 3 trigrams
sets explicit smoothing model used suggester default stupidbackoff
sets query used filtering suggested phrases collation
adds additional parameters collate scripts previously added parameters builder overwritten
sets whether prune suggestions collation
setup whole base test class
test creates new smoothing model random test smoothing model checks equality
test wordscorer emitted smoothing model
test serialization deserialization tested model
mutate given model returned smoothing model different
mutate given model returned smoothing model different
mutate given model returned smoothing model different
lower scores sorts first scores equal later terms zzz sort first
sets number minimal prefix characters must match order candidate suggestion defaults 1 increasing number improves suggest performance usually misspellings dont occur beginning terms
global suggest mode controls suggested terms included controls suggest text tokens terms suggested for three possible values specified missing suggest terms suggest text arent index default popular suggest terms occur docs original suggest text term always suggest matching suggest terms based tokens suggest text
minimum length suggest text term must order corrected defaults 4
sets sort suggest terms per suggest text token two possible values score sort first based score document frequency term itself frequency sort first based document frequency score term itself score depends suggester used
sets similar suggested terms least need compared original suggest text tokens value 0 1 specified value compared string distance result candidate spelling correction default 05
sets minimal threshold number documents suggested term appear in specified absolute number relative percentage number documents improve quality suggesting high frequency terms defaults 0f enabled value higher 1 specified number cannot fractional
sets string distance implementation use comparing similar suggested terms are four possible values specified internal default based dameraulevenshtein highly optimized comparing string distance terms inside index dameraulevenshtein string distance algorithm based dameraulevenshtein algorithm levenshtein string distance algorithm based levenshtein edit distance algorithm jarowinkler string distance algorithm based jarowinkler algorithm ngram string distance algorithm based character ngrams
sets maximum suggestions returned per suggest text term
sets filter analyzer applied tokens passed candidate generator filter applied original token candidates generated
sets maximum edit distance candidate suggestions order considered suggestion value 1 2 value result bad request error thrown defaults 2
sets filter analyzer applied generated tokens passed actual phrase scorer
factor used multiply size order inspect candidate suggestions improve accuracy cost performance defaults 5
read stream
gets type identifier candidategenerator
sets maximum threshold number documents suggest text token exist order corrected relative percentage number eg 04 absolute number represent document frequencies value higher 1 specified fractional specified defaults 001 used exclude high frequency terms suggested high frequency terms usually spelled correctly top also improves suggest performance
test serialization deserialization generator
test bad xcontent throws exception
create random directcandidategeneratorbuilder
creates random candidate generator renders xcontent back new instance equal original
test equality hashcode properties
creates random suggestion builder renders xcontent back new instance equal original
creates random termsuggestionbuilder
read stream
factor used multiply size order inspect candidate suggestions improve accuracy cost performance defaults 5
sets minimal threshold number documents suggested term appear in specified absolute number relative percentage number documents improve quality suggesting high frequency terms defaults 0f enabled value higher 1 specified number cannot fractional
sets string distance implementation use comparing similar suggested terms are five possible values specified internal default based dameraulevenshtein highly optimized comparing string distance terms inside index dameraulevenshtein string distance algorithm based dameraulevenshtein algorithm levenshtein string distance algorithm based levenshtein edit distance algorithm jarowinkler string distance algorithm based jarowinkler algorithm ngram string distance algorithm based character ngrams
minimum length suggest text term must order corrected defaults 4
sets number minimal prefix characters must match order candidate suggestion defaults 1 increasing number improves suggest performance usually misspellings dont occur beginning terms
internal copy constructor copies class field except field
sets maximum edit distance candidate suggestions order considered suggestion value 1 2 value result bad request error thrown defaults 2
sets sort suggest terms per suggest text token two possible values score sort first based score document frequency term itself frequency sort first based document frequency score term itself score depends suggester used
similar suggested terms least need compared original suggest text tokens value 0 1 specified value compared string distance result candidate spelling correction default 05
global suggest mode controls suggested terms included controls suggest text tokens terms suggested for three possible values specified missing suggest terms suggest text arent index default popular suggest terms occur docs original suggest text term always suggest matching suggest terms based tokens suggest text
sets maximum threshold number documents suggest text token exist order corrected relative percentage number eg 04 absolute number represent document frequencies value higher 1 specified fractional specified defaults 001 used exclude high frequency terms suggested high frequency terms usually spelled correctly top also improves suggest performance
returns object null given key value context
puts object context
true request contains suggest
schedule release resource time releasableclose called object function provided lifetime
returns filter associated listed filtering aliases list filtering aliases obtained calling metadatafilteringaliases returns null filtering required
get current usage statistics node localnode discoverynode node restactions whether include rest action usage returned statistics nodeusage representing usage statistics node
main entry point exit code 0 java version least 18 otherwise exit code 1 args args program rejected empty
prints string terminates line standard error message message print
exit vm specified status status status
exit vm specified status status status
prints string terminates line standard output message message print
prints string terminates line standard error message message print
chooses additional jvm options elasticsearch userdefinedjvmoptions list jvm options defined user list additional jvm options set
delimits specified jvm options spaces jvmoptions jvm options singleline string containing specified jvm options order appear delimited spaces
parse linedelimited jvm options specified buffered reader specified java major version valid jvm options are line starting dash treated jvm option applies versions line starting number followed treated jvm option applies matching java major version line starting number followed dash followed treated jvm option applies matching java specified major version larger java major versions line starting number followed dash followed number followed treated jvm option applies specified range matching java major versions example specified java major version 8 following jvm options accepted xxprintgcdatestamps 8xxprintgcdatestamps 8xxprintgcdatestamps 78xxprintgcdatestamps following jvm options accepted 9xlogagetracegcsafepointfilelogsgclogutctimepidtagsfilecount32filesize64m 9xlogagetracegcsafepointfilelogsgclogutctimepidtagsfilecount32filesize64m 910xlogagetracegcsafepointfilelogsgclogutctimepidtagsfilecount32filesize64m version syntax specified line matches specified jvm options jvm option callback invoked jvm option line match specified syntax jvm options invalid line callback invoked contents entire line javamajorversion java major version match jvm options br buffered reader read linedelimited jvm options jvmoptionconsumer callback accepts matching jvm options invalidlineconsumer callback accepts invalid jvm options ioexception io exception occurs reading buffered reader
main entry point exit code 0 jvm options successfully parsed otherwise exit code 1 improperly formatted line discovered line output standard error args args program consist single option path jvm options
register new resource watcher checked given frequency
clears state filewatcher making files show new
creates new file watcher given directory
utility method detect whether thread network thread typically used assertions make sure call blocking code networking threads
exception handler exceptions associated specific channel exception exception
attempts decode message provided bytes full message available null returned message ping empty bytesreference returned networkbytes read message decoded streamcorruptedexception message header format recognized tcptransporthttpontransportexception message header appears http message illegalargumentexception message length greater maximum allowed frame size dependent available memory
validates first 6 bytes message header returns length message 6 bytes available returns 1 networkbytes read length message streamcorruptedexception message header format recognized tcptransporthttpontransportexception message header appears http message illegalargumentexception message length greater maximum allowed frame size dependent available memory
sends back error response caller via given channel nodeversion caller node version features caller features channel channel send response error error return requestid request id response replies action action response replies
serializes given message bytes representation
method handles message receive part request responses
consumes bytes available network reads method returns number bytes consumed call channel channel read bytesreference bytes available consume number bytes consumed streamcorruptedexception message header format recognized tcptransporthttpontransportexception message header appears http message illegalargumentexception message length greater maximum allowed frame size dependent available memory
sends message given channel using given callbacks
writes tcp message header bytes reference requestid request id status request status protocolversion protocol version used serialize data message length payload length bytes tcpheader
sends response given channel method used send transportresponse objects back caller senderrorresponseversion set tcpchannel exception long string sending back errors caller
returns profile settings given settings object
ensures transport still started open illegalstateexception transport started open
executed received response error
parse hostnameport range spec equivalent addresses
called channel closed instance due disconnect closed socket etc
fetches shards search request remote connection used later run search remote end
collects nodes connected cluster returns passes nodeid discoverynode lookup function returns null node id found
updates list seed nodes cluster connection
ensures cluster connected cluster connected operation invoke listener immediately
get information remote nodes rendered remoteinfo requests
returns connection remote cluster preferably direct connection provided discoverynode node connected returned connection proxy connection redirects it
creates new remoteclusterconnection settings nodes settings object clusteralias configured alias cluster connect seednodes list seed nodes discover eligible nodes transportservice local nodes transport service maxnumremoteconnections maximum number connections remote cluster nodepredicate predicate filter eligible remote nodes connect
collects nodes given clusters returns passes clusteralias nodeid discoverynode function success
method updates list remote clusters its intended used update consumer settings infrastructure seeds cluster alias discovery node mapping representing remote clusters seeds nodes connectionlistener listener invoked every configured cluster connected
connects remote clusters blocking fashion called node startup establish initial connection configured seed nodes
returns connection given node given remote cluster illegalargumentexception remote cluster unknown
ensures given cluster alias connected cluster connected operation invoke listener immediately
returns client remote cluster given cluster alias exists threadpool threadpool client clusteralias cluster alias remote cluster registered illegalargumentexception given clusteralias doesnt exist
test ipv4 host default port range works
test ipv6 host port works
test ipv6 host default port works
test unbracketed ipv6 hosts configuration fail leave ambiguity
test ipv4 host port works
test ipv6 host port range works
test ipv4 host default port works
test ipv6 host default port range works
test ipv4 host port range works
test peraddress limit
disconnected given node connected nothing
connects node given connection profile node already connected method effect successful established validated exposed
returns connection given node node connected connections returned method must closed lifecycle connection maintained connection manager nodenotconnectedexception node connected connecttonodediscoverynode connectionprofile checkedbiconsumer
copy constructor using another profile base
adds number connections one types type added once numconnections number connections use pool given connection types types set types share given number connections
sets connect timeout connection profile
returns number connections per type profile might return count shared types sum connections per type might higher getnumconnections instance orgelasticsearchtransporttransportrequestoptionstypebulk shares connections orgelasticsearchtransporttransportrequestoptionstypereg return number connections method connections distinct
sets handshake timeout connection profile
creates new connectionprofile based added connections illegalstateexception orgelasticsearchtransporttransportrequestoptionstype enum missing
takes connectionprofile resolves fully specified ie nulls profile
builds connection profile dedicated single channel type use opening single use connections
returns one channels configured handle channel selected roundrobin fashion
constructs new mockchannel instance intended accepting requests serversocket associated server socket must null profile associated profile name
constructs new mockchannel instance intended handling actual incoming outgoing traffic socket client socket mut null localaddress address associated corresponding local server socket must null profile associated profile name
removes returns responsecontext instances match predicate
called transport implementation response exception received previously sent request before processing deserialization done returns appropriate response handler null found
adds new response context associates new request id new request id connectionsendrequestlong string transportrequest transportrequestoptions
writes data thin manner without actual bytes assumes actual bytes appended right content
executes highlevel handshake using given connection returns discovery node node connection established with handshake fail cluster name target node mismatches local cluster name connection connection specific node handshaketimeout handshake timeout connected node connecttransportexception connection failed illegalstateexception handshake failed
executes highlevel handshake using given connection returns discovery node node connection established with handshake fail cluster name target node doesnt match local cluster name connection connection specific node handshaketimeout handshake timeout clusternamepredicate cluster name validation predicate handshake response illegalstateexception handshake failed
registers new request handler action action request handler associated requestfactory callable used construct new instances streaming executor executor request handling executed handler handler implements request handling
registers new request handler action action request handler associated requestreader request class used construct new instances streaming executor executor request handling executed forceexecution force execution executor queue never reject cantripcircuitbreaker check request size raise exception case limit breached handler handler implements request handling
called transport implementation exception sent response incoming request
returns either real transport connection local node connection using local node optimization nodenotconnectedexception given node connected
called transport implementation request sent
called transport implementation incoming request arrives parsing happened with exception requestid action
registers new request handler action action request handler associated requestreader callable used construct new instances streaming executor executor request handling executed handler handler implements request handling
cancels timeout handling best effort avoid running it remove requestid responsehandlers make sure doesnt run
registers new request handler action action request handler associated request request class used construct new instances streaming executor executor request handling executed forceexecution force execution executor queue never reject cantripcircuitbreaker check request size raise exception case limit breached handler handler implements request handling
build service clustersettings non null plain transportservice register clustersettings settings updates tracelogexcludesetting tracelogincludesetting
establishes returns new connection given node connection maintained service its callers responsibility close connection goes scope node node connect connectionprofile connection profile use
connect specified node given connection profile node node connect connectionprofile connection profile use connecting node
called transport implementation response sent calling node
returns true iff action name starts valid prefix validactionprefixes
deserializes new instance return type stream called infra deserializing response deserialized response
implement readstreaminput instead
set reference task created request
get reference task created request defaults taskidemptytaskid meaning there parent
called handler registered via transportserviceregisterrequesthandlerstring supplier string boolean boolean transportrequesthandler transportserviceregisterrequesthandlerstring supplier string transportrequesthandler returned handler used instead passed handler default provided handler returned
awaits pending connections complete throw exception least one connections fails discoverynode node pending connections connectionfutures representing pending connections connecttimeout wait connection connecttransportexception one connections fails
groups indices per cluster splitting remote clusteralias indexname pairs remoteclusterindexseparator indices per cluster collected list returned map keyed cluster alias local indices grouped localclustergroupkey returned map mutable requestindices indices search request filter indexexists predicate test certain index alias exists local cluster map grouped remote local indices
registers instance listen updates cluster settings
creates new remoteclusteraware instance settings nodes level settings
registers proxy request handler allows forward requests given action another node used response type changes based upcoming request quite rare
registers proxy request handler allows forward requests given action another node used response type always most cases
unwraps proxy request returns original request
method ensures compression complete returns underlying bytes bytes underlying stream ioexception exception occurs writing flushing
set number available processors netty uses sizing various resources eg thread pools availableprocessors number available processors illegalstateexception available processors set previously specified value match alreadyset value
specified cause unrecoverable error method rethrow cause separate thread caught bubbles uncaught exception handler cause throwable test
turns given bytesreference bytebuf note returned bytebuf reference internal pages bytesreference dont free bytes reference bytebuf goes scope
netty wants unwelcome things like use unsafe replace private field use poorly considered buffer recycler method disables things default overridden setting corresponding system properties
creates new transport client preinstalled plugins settings settings passed transport client plugins collection additional plugins run client hostfailurelistener failure listener invoked node disconnected null
creates new transport client preinstalled plugins settings settings passed transport client plugins optional array additional plugins run client
constructs standardtokenizer filtered standardfilter lowercasefilter stopfilter snowballfilter
builds named analyzer given stop words
validates properly split fields using word delimiter filter querystring
correct offset order parts concatenation powershot synonym power
tests using keyword set keyword marker filter
verifies keywords patterns cannot specified together
tests using regular expression pattern keyword marker filter
test patternanalyzer configured nonword pattern
test patternanalyzer configured custom pattern case text tokenized
test patternanalyzer configured whitespace pattern behavior similar whitespaceanalyzer depending upon options
test patternanalyzer large document
blast random strings analyzer
creates multiplextokenfilter given input set filters
test turkish lowercasing
parses list mappingcharfilter style rules normalize char map
check deprecated name htmlstrip issues deprecation warning indices created 630
check deprecated name htmlstrip issues deprecation warning indices created since 630
use standardhtmlstripanalyzerstandardhtmlstripanalyzerchararrayset instead
check deprecated name edgengram issues deprecation warning indices created 640
check deprecated name edgengram issues deprecation warning indices created since 630
check deprecated name ngram issues deprecation warning indices created 640
check deprecated name ngram issues deprecation warning indices created since 630
parses list mappingcharfilter style rules custom byte type table
correct offset order parts concatenation powershot synonym power
tests emulates frozen elected master node unfreezes pushes cluster state nodes already following another elected master node nodes reject cluster state prevent following stale master
verify proper block applied nodes loose master
verify nodes fault detection works master re election
test cluster recovers long gc master causes nodes elect new one
test isolates master rest cluster waits new master elected restores partition verifies node agree new cluster state
test split brain occurs partial network partition see httpsgithubcomelasticelasticsearchissues2488
test cluster join issues cluster state publishing
4 node cluster mmn set 3 node one unicast endpoint one node partitions master node temporal unicast responses empty partition solved one ping response contains master node rejoining node take master node connect
adds asymmetric break master one nodes makes sure node removed form cluster node start pinging cluster reforms healed
creates new blockingclusterstatepublishresponsehandler publishingtonodes set nodes cluster state published respond
allows wait non master nodes reply publish event timeout timeout timeout true timeout expired not false otherwise
called failure obtained non master nodes node node replied publish event
called response obtained non master nodes node node replied publish event
returns list nodes didnt respond yet
creates new ackclusterstatepublishresponsehandler publishingtonodes set nodes cluster state published respond acklistener orgelasticsearchdiscoverydiscoveryacklistener notify response gotten non master nodes
test loose document whose indexing request successful randomly selected disruption scheme also collect report type indexing failures occur test superset tests run jepsen test suite exception versioned updates
test document indexed majority side partition available minority side partition healed
tests indices properly deleted even master transition between test httpsgithubcomelasticelasticsearchissues11665
test creates scenario primary shard 0 replicas relocates postrecovery target node already deleted source node search request still work
creates mock ec2 endpoint providing list started nodes describeinstances api call
build list nodes azure management api information cached using cloudazurerefreshinterval property needed setting cloudazurerefreshinterval 1 cause infinite caching setting cloudazurerefreshinterval 0 disable caching default
fullclusterstatereceivedcount number times node received full copy cluster state master incompatibleclusterstatediffreceivedcount number times node received clusterstate diff master compatibleclusterstatediffreceivedcount number times received clusterstate diffs compatible
gets next committed state process method tries batch operation getting cluster state highest possible committed states succeeds first committed state queue ie comes master
clear incoming queue committed state failed
indicates cluster state successfully processed committed state clusterstatesupersedesclusterstateed processed state marked processed well note successfully processing state indicates following master came from committed state another master failed method
mark previously added cluster state committed make available via getnextclusterstatetoprocess cluster state processed or failed supplied listener called
add incoming yet committed cluster state
mark processing given state failed committed states clusterstatesupersedesclusterstateed failed state failed well
returns pending states committed
elects new master possible nodes returning it returns null master elected
returns list next possible masters
master nodes go nodes secondary sort id
compares two candidates indicate better master higher cluster state version better 1 c1 batter candidate 1 c2
returns given nodes sorted likelihood elected master likely first nonmaster nodes removed rather put end
node node ping describes master current master node clustername cluster name node clusterstateversion current cluster state version node electmasterservicemastercandidateunrecoveredclusterversion recovered
adds ping newer previous pings node true added false ow
starts new joining thread currently active one join thread controlling started
marks given jointhread completed returns false supplied thread currently active join thread
join newly elected master true successful
returns true join thread control started currently active join thread
case follow elected master new cluster state needs elected master new cluster state version needs equal higher cluster state version first condition fails reject cluster state throw error second condition fails ignore cluster state
marks given jointhread completed makes sure another thread running starting one needed given thread currently running join thread command ignored
case follow elected master new cluster state needs elected master method checks throws exception needed
simple sanity check incoming cluster state throws exception rejections
main function join thread function guaranteed join cluster spawn new join thread upon failure so
cleans running joining thread calls rejoin
validates join request throwing failure failed
ensures joining nodes major version equal higher minclusternodeversion needed ensure master already fully operating new major version doesnt go back mixed version mode
ensures joining node version thats compatible current nodes
ensures joining node version thats compatible given version range
ensures indices compatible given node version ensure indices given metadata created newer version elasticsearch well indices newer equal minimum index compatibility version versionminimumindexcompatibilityversion illegalstateexception index incompatible given version
checks going request become master enough pending joins so node become master via clusterstate update task
utility method fail given election context cluster state thread
processes queues incoming join request note doesnt validation done before
waits enough incoming joins master eligible nodes complete master election must start accumulating joins calling method see startelectioncontext method return local node elected master failuretimeout happened exact outcome communicated via callback parameter guaranteed called requiredmasterjoins number joins master eligible needed complete election timevalue long wait failing timeout communicated via callbacks onfailure method callback result election success failure communicated calling methods object
accumulates future incoming join request pending join requests processed final steps becoming master stopelectioncontextstring called
stopped accumulating joins pending joins processed future joins processed immediately
sends three rounds pings notifying specified consumer pinging complete pings sent resolving configured unicast hosts ip address subject dns caching within jvm batch pings sent another batch pings sent half specified timevalue another batch pings sent specified timevalue pings sent carry timeout 125 times specified timevalue pinging node connection handshake performed connection timeout specified timevalue resultsconsumer callback pinging complete duration timeout various components pings
resolves list hosts list transport addresses host resolved transport address or collection addresses number ports greater one host lookups done parallel using specified executor service specified resolve timeout executorservice executor service used parallelize hostname lookups logger logger used logging messages regarding hostname lookups hosts hosts resolve limitportcounts number ports resolve should 1 nonlocal transport transportservice transport service resolvetimeout timeout returning hostname lookups list resolved transport addresses
variant pingconsumer timevalue allows separating scheduling duration duration used request level time outs useful testing
creates object clone node different object instance
tests tha node become master even though last cluster state knows contains nodes conflict joins got needs become master
tests cluster committed times out never case fail update due commit timeout ends committed anyway
test waiting publishing works correctly ie publishing times out
check enough master node responded commit change fails commit pending master nodes enough acks commit
tries marking publishing failed decision wasnt made yet true publishing failed cluster state not committed
tries commit current state decision wasnt made yet true successful
publishes cluster change event nodes least minmasternodes acknowledge change committed processed master nodes method guaranteed throw orgelasticsearchdiscoverydiscoveryfailedtocommitclusterstateexception change committed rejected exception signals something wrong happened change committed
tries marking publishing failed decision wasnt made yet true publishing failed cluster state not committed
make sure nodes clusterstate pinged pinging nodes part cluster stopped
stops pinging
generates xml response describe ec2 instances
refreshes settings amazonec2 client new client build using new settings old client usable released release destroyed instead returned cache
call client needed anymore
test networkhost ec2publicip
test networkhost ec2publicdns
test networkhost ec2
test networkhost ec2publicipv4
test networkhost ec2privatedns
test networkhost ec2privateipv4
test networkhost ec2privateip
test dont regression network host core settings networkhost local
parse settings single client
type ec2 hostname type discover appropriate host resolved ec2 metadata null cannot obtained customnameresolverresolveifpossiblestring
test multiple network interfaces networkhost gceprivateip0 networkhost gceprivateip1
test dont regression network host core settings networkhost local
utility test method test different settings gcenetworksetting tested networkhost property expected expected inetaddress null expect exception ioexception well something goes wrong
register existing node gce node nodename name node
build list nodes gce management api information cached using cloudgcerefreshinterval property needed
issue httpsgithubcomelasticelasticsearchissues16967 using multiple regions one instance all producing npe result
issue httpsgithubcomelasticelasticsearchcloudgceissues43
cluster state supersedes another state master version state higher state essence means changes cluster state also reflected current one
returns built on demand routing nodes view routing table
tests whether custom serialized criteria are the output stream must least minimum supported version custom the output stream must feature required custom if any transport client is serialize customs clients understand custom based version client features client has transport clients lenient requiring feature case send custom connected nodes always require node required feature output stream custom custom serialize type custom true custom serialized false otherwise
data input bytes localnode used set local node cluster state
marked final cluster state update tasks run master local requests use localclusterupdatetask instead
cluster state update task wasnt processed provided timeout call clusterstatetasklisteneronfailurestring exception may return null indicate timeout needed default
add given allocation decider given deciders collection erroring class name already used
interoperability transport clients older 63 need strip customs cluster state client might able deserialize clusterstate cluster state filter customs adapted cluster state
return new allocationdecider instance builtin deciders well plugins
checks shards list completed shards list shard statuses true shards completed either successfully failed false otherwise
builds predicate accept cluster state generated current rejoined master
randomly adds deletes updates repositories metadata
randomly updates index routing table cluster state
randomly updates routing table cluster state
takes existing cluster state randomly adds removes updates metadata part using randompart generator new part added prefix value used prefix randomly generated part name
randomly updates nodes cluster state
randomly adds deletes updates inprogress snapshot restore records cluster state
makes random settings changes
generates random alias
randomly add deletes updates indices metadata
randomly updates index routing table cluster state
randomly adds deletes updates index templates metadata
randomly creates removes cluster blocks
makes random metadata changes
takes existing cluster state randomly adds removes updates cluster state part using randompart generator new part added prefix value used prefix randomly generated part name
returns random global block
randomly updates persistent transient settings given metadata
returns new instance snapshotdeletionsinprogress removes given entry invoking instance
returns new instance snapshotdeletionsinprogress adds given entry invoking instance
creates simple diff without changes
read simple diff stream
creates simple diff changes
calculates diff two immutableopenintmaps diffable objects
calculates diff two maps nondiffable objects
calculates diff two immutableopenmaps nondiffable objects
calculates diff two maps diffable objects
calculates diff two immutableopenmaps diffable objects
returns new diff map given key removed modify invoking instance key exist diff map instance returned
calculates diff two immutableopenintmaps nondiffable objects
construct execution result instance correspondence tasks execution result resultingstate resulting cluster state executionresults correspondence tasks outcome
disconnects nodes except ones provided parameter
retrieve latest nodes stats calling listener complete latch used wait nodes stats complete desired
refreshes clusterinfo blocking fashion
retrieve latest indices stats calling listener complete latch used wait indices stats complete desired
create fake nodestats given node usage
timeout global timeout observer expired observer fail existing new waitfornextchange calls set null wait indefinitely
wait next cluster state satisfies statepredicate listener callback listener statepredicate predicate check whether cluster state changes relevant callback called timeoutvalue timeout waiting null global observer timeout used
sets last observed state currently applied cluster state returns
create new diskusage totalbytes 0 getfreediskaspercentage always return 1000 free
read simple diff stream
creates new clusterinfo instance leastavailablespaceusage node id disk usage mapping path least available space node mostavailablespaceusage node id disk usage mapping path available space node shardsizes shardkey size bytes mapping per shard routingtodatapath shard routing datapath mapping shardidentifierfromrouting
returns shard size given shard routing defaultvalue metric available
test basic properties clusterchangedevent class 1 make sure null values properties 2 make sure cant create clusterchangedevent null values
test whether clusterchangedevent returns correct value whether local node master based set cluster state
test custom metadata change checks
test indices created indices deleted lists two cluster states correct change indices added deleted also tests metadata equality cluster states
test indices deleted list correct previous cluster state initializedrecovered trigger use index tombstones determine deleted indices
test routing table changes checks
test index metadata change check
test nodes addedremovedchanged checks
retrieves cluster state given indices checks cluster state returns coherent data routing table metadata
returns true iff indexmetadata given index changed previous cluster state new cluster state note object reference equality test equals test
returns indices deleted event
determines whether current cluster state represents entirely new cluster either node joins cluster first time node receives cluster state update brand new cluster different uuid previous cluster happen master node elected never part cluster before
returns set custom meta data types custom metadata cluster changed previous cluster state new cluster state custom meta data types returned iff added updated removed previous current state
returns indices created event
returns true iff routing table changed given index note object reference equality test equals test
constructs new shard restore status specified state given node specified failure reason nodeid node id state restore state reason failure reason
reads restore status stream input stream input restore status
returns state corresponding state code value stat code state
creates new restore metadata snapshot snapshot state current state restore process indices list indices restored shards map shards restored current restore status
writes restore status stream output stream input
serializes single restore operation entry restore operation metadata builder xcontent builder params serialization parameters
reads restore status stream input stream input
makes sure indices waited snapshotting commences populated shards relocating initializing state
clusterhealthresponses xcontent parser
creates new clusterstatehealth instance considering current cluster state provided index names clusterstate current cluster state must null concreteindices array index names consider must null may empty
xcontent parser serialization tests
xcontent parser serialization tests
checks inactive primary shard cause cluster health go red inactive primary shard index cause cluster health red make visible existing data unavailable case index creation snapshot restore index shrinking unexceptional events cluster lifecycle cluster health turn red time primaries still initializing state go yellow instead however case exceptional events example primary shard cannot assigned node initialization fails point cluster health still turn red nb method not called active shards nonprimary shards
creates new discoverynode note version node unknown versionminimumcompatibilityversion used current version corresponds minimum version elasticsearch version communicate with higher version used node might able communicate remote node initial handshakes node versions discovered updated nodename nodes name nodeid nodes unique persistent id ephemeral id auto generated address nodes transport address attributes node attributes roles node roles version version node
creates discoverynode representing local node
creates new discoverynode note version node unknown versionminimumcompatibilityversion used current version corresponds minimum version elasticsearch version communicate with higher version used node might able communicate remote node initial handshakes node versions discovered updated id nodes unique persistent node id constructor auto generate random ephemeral id address nodes transport address attributes node attributes roles node roles version version node
creates new discoverynode note version node unknown versionminimumcompatibilityversion used current version corresponds minimum version elasticsearch version communicate with higher version used node might able communicate remote node initial handshakes node versions discovered updated nodename nodes name nodeid nodes unique persistent id ephemeralid nodes unique ephemeral id hostaddress nodes host address address nodes transport address attributes node attributes roles node roles version version node
creates new discoverynode reading stream provided argument stream ioexception error reading stream
extract node roles given settings
generates humanreadable string discovernodefilters example idid1 blahnameblah name2
checks node safely added node collection null ok error message explaining node added note method returns nonnull value calling adddiscoverynode fail exception
returns changes comparing nodes provided nodes
resolve node given id node id node discover discovered node matching given id illegalargumentexception one node matches request nodes resolved
get node address address transportaddress wanted node node identified given address null node exists
get map coordinating nodes nodes neither master data ingest nodes arranged ids map coordinating nodes arranged ids
determine given node exists node node existence verified true node exists otherwise false
get map discovered master data nodes arranged ids map discovered master data nodes arranged ids
adds disco node builder throw illegalargumentexception supplied node doesnt pass preflight checks performed validateadddiscoverynode
resolves set node descriptions concrete existing node ids descriptions resolved order local master relevant nodes node id wild card pattern matched node names attrvalue pattern attr node role master data ingest etc case value true false generic node attribute name case value treated wildcard matched node attribute values
returns true local node elected master node
returns master node null master node
update mappings synchronously master node waiting timeout method returns successfully mappings applied master node propagated data nodes
send shard failed request master node update cluster state shard local node failed
send shard failed request master node update cluster state failure shard another node means shard failed write made primary replicated shard copy shard exist anymore still entry insync set remove allocation id insync set shardid shard id shard fail allocationid allocation id shard fail primaryterm primary term associated primary shard failing shard must strictly positive markasstale whether mark failing shard stale eg removing insync set failing shard message reason failure failure underlying cause failure listener callback upon completion request
returns maximum time interval wait acknowledgements
returns maximum time interval wait request completed master node
sets master node timeout
sets acknowledgement timeout
sets indices operation needs executed
executes actual test
global block provided status
returns true iff non given clusterblocklevelmetadatawrite place clusterblockisallowreleaseresources returns false used places resources released like deletion index free resources nodes indices indices check
returns true one global blocks disable state persistence flag set
asserts current thread not cluster state update thread
asserts current stack trace not involve cluster state applier
asserts current thread cluster state update thread
current cluster state renamed appliedclusterstate
removes timeout listener updated cluster states
removes applier updated cluster states
adds cluster state listener expected removed short period time provided listener notified specific time elapsed note listener removed timeout responsibility caller
submits cluster state update task unlike submitstateupdatetaskstring object clusterstatetaskconfig clusterstatetaskexecutor clusterstatetasklistener submitted updates batched source source cluster state update task updatetask full context cluster state update task
submits batch cluster state update tasks submitted updates guaranteed processed together potentially tasks executor source source cluster state update task tasks map update tasks corresponding listeners config cluster state update task configuration executor cluster state update task executor tasks share executor executed batches executor type cluster state update task state
returns tasks pending
submits cluster state update task submitted updates batched across instance executor exact batching semantics depend underlying implementation rough guideline update task submitted pending update tasks executor update tasks executed executor single batch source source cluster state update task task state needed cluster state update task config cluster state update task configuration executor cluster state update task executor tasks share executor executed batches executor listener callback cluster state update task completes type cluster state update task state
submits batch cluster state update tasks submitted updates guaranteed processed together potentially tasks executor source source cluster state update task tasks map update tasks corresponding listeners config cluster state update task configuration executor cluster state update task executor tasks share executor executed batches executor type cluster state update task state
local node
submits cluster state update task unlike submitstateupdatetaskstring object clusterstatetaskconfig clusterstatetaskexecutor clusterstatetasklistener submitted updates batched source source cluster state update task updatetask full context cluster state update task
submits cluster state update task submitted updates batched across instance executor exact batching semantics depend underlying implementation rough guideline update task submitted pending update tasks executor update tasks executed executor single batch source source cluster state update task task state needed cluster state update task config cluster state update task configuration executor cluster state update task executor tasks share executor executed batches executor listener callback cluster state update task completes type cluster state update task state
note test work long single thread executor executing state update tasks
shards replicas indices routing table shards
builds routing table note called builder must thrown away need build new routingtable copy one youll need build new routingtablebuilder
active primary shards provided indices grouped each group single element consisting primary shard handy components expect get group iterators still want cases iterate primary shards and one shard replication group indices indices return shards replicas primary shards grouped single shard element group indexnotfoundexception index passed exists
shards replicas provided index index index return shards replicas shards matching specific index indexnotfoundexception index passed exists
shards provided shardid shard routing entries given index shard id indexnotfoundexception provided index exist shardnotfoundexception provided shard id unknown
shards provided index shard id shard routing entries given index shard id indexnotfoundexception provided index exist shardnotfoundexception provided shard id unknown
parses preference type given string
ensures changes hashfunction shard selection bwc
test asserts replicas failed execute resync operations failed marked stale
test ensures unassigned primary shard valid shard copy least one node force allocate primary shard one nodes even allocation deciders return decision allocate
updates unassigned info recovery source current unassigned shard unassignedinfo new unassigned info use recoverysource new recovery source use shard unassigned info updated
moves shard unassigned initialize state existingallocationid allocation id use null fresh allocation id generated initialized shard
mark shard started adjusts internal statistics started shard
returns one active replica shard given shard id null active replica found since replicas could possibly nodes older version es primary is return replicas highest version es
relocate shard another node adding target initializing shard well assigning it pair source relocating target initializing shards
moves assigned replica shard primary replicashard replica shard promoted primary resulting primary shard
calculates routingnodes statistics iterating shardroutings cluster ensure bookkeeping correct performance reasons called asserts method always returns true throws assertion error assertion enabled method nothing
returns active primary shard given shard id null primary found primary active
applies relevant logic handle cancelled failed shard moves shard unassigned completely removes shard if relocation target shard primary also fails initializing replicas shard active primary also promotes active replica primary if replica exists shard relocating primary also removes primary relocation target shard shard relocating replica promotes replica relocation target full initializing replica removing relocation source information possible peer recovery always done primary shard primary replica relocation target also clears relocation information source shard
cancels give shard routing nodes internal statistics cancels relocation shard relocating
creates iterator shards interleaving nodes iterator returns first shard first node first shard second node etc one shard node returned iterator resumes first node returning second shard continues shards nodes returned
returns true iff replicas active given shard routing otherwise false
removes ignores unassigned shard will ignored run added back unassigned metadata constructed again typically used allocation decision prevents shard allocated subsequent consumers api wont try allocate shard again attempt result allocation attempt
cancels relocation shard shard must relocating shard cancelling relocation
initializes current unassigned shard moves unassigned list existingallocationid allocation id use null fresh allocation id generated
unsupported operation interface use removeandignoreallocationstatus routingchangesobserver initializestring string long routingchangesobserver
moves assigned primary unassigned demotes replica used conjunction promoteactivereplicashardtoprimary active replica promoted primary
applies relevant logic start initializing shard moves initializing shard started shard relocation target also removes relocation source started shard primary relocation target also reinitializes currently initializing replicas recovery source changes started shard
removes relocation source initializing nonprimary shard allows replica shard continue recovery primary even though nonprimary relocation source failed
returns shards state unassigned shard id given shard
marks shard temporarily ignored adds ignore unassigned list used caution typically correct usage removeandignore iterator ignored unassignediteratorremoveandignoreallocationstatus routingchangesobserver isignoredempty
drains unassigned shards returns it method drain ignored shards
creates plainsharditerator instance iterates subset given shards given shardid shardid shard id group shards shards iterate
figure existing scheduled reroute good enough whether need cancel reschedule
returns number shards unassigned currently delayed
finds next closest delay expiration delayed shard nanoseconds based current time returns 0 delay negative returns 1 delayed shard found
creates unassignedinfo object based current time reason cause making shard unassigned see reason information message information cause
calculates delay left based current time in nanoseconds delay defined index settings relevant shard effectively delayed see isdelayed returns 0 delay negative calculated delay nanoseconds
returns additional failure exception details exists
returns optional details explaining reasons
reason cause making shard unassigned see reason information message information cause failure shard level failure caused shard unassigned exists unassignedtimenanos time use base delayed reassignment calculation unassignedtimemillis time unassignment used display reporting delayed allocation shard delayed due indexdelayednodelefttimeoutsetting lastallocationstatus result last allocation attempt shard
builds string representation message failure exists
verify explicitly changing value index setting delayed allocation small value kicks allocation unassigned shard even though node hosted come back
small delay timeout verify expires get green even though node hosting shard coming back
verifies delay timeout 11 index shard immediately get allocated free node node hosting leaves cluster
delayed allocation set verifies even though node free allocate unassigned shard node hosting leaves doesnt get allocated bring node back gets allocated since existed before
verify explicitly changing value index setting delayed allocation 0 kicks allocation unassigned shard even though node hosted come back
puts primary shard indexroutings initializing state
verifies delayed allocation calculation correct
verifies shard fails reason properly set details preserved
tests reroute node detected leaving cluster right unassigned meta set
unassigned meta kept shard goes initializing cleared moves started
returns total number shards within groups total number shards
constructs enw groupshardsiterator given list
returns total number shards plus number empty groups number shards empty groups
returns iterator active initializing shards ordered adaptive replica selection forumla making sure though random within active shards or missing rank initializing shards last iterate through
adjust nodes collected stats original ranking paper need adjust nodes stats cassandra sends occasional requests copies data stats updated broadcast phase elasticsearch however sort broadcasttoall behavior order prevent node gets high score never gets requests must ensure eventually returns normal score candidate serving requests adjustment takes winning nodes statistics adds average statistics nonwinning node lets say winning node queue size 10 nonwinning node queue 18 average queue size 10 18 2 14 nonwinning node statistics added queue size 14 repeated response time service times well
returns iterator active initializing shards making sure though random within active shards initializing shards last iterate through
returns shards based nodeattributes given node name node attribute node ip supports node specifications cluster api
determine shards index specific state index id index states set states listed list shards
number shards node eventually relocated
determine number shards specific state states set states counted number shards
determine shards specific state states set states listed list shards
add new shard node shard shard crate node
returns list shards match one states listed shardroutingstate states state shardroutingstate retrieve list shards match one given shardroutingstate states
initializes index restored snapshot
calculates number primary shards active state routing table number active primary shards
initializes existing index restored snapshot
adds new shard routing makes copy it reference data used index shard routing table needs created
calculates number nodes hold one shards index indexroutingtable excluding nodes node ids give excludednodes parameter excludednodes id nodes excluded number distinct nodes index least one shard allocated
calculates number primary shards routing table shardroutingstateunassigned state
initializes new empty index restored snapshot
initializes new empty index option control api not
tests new delayed reroute scheduled right delayed reroute run
puts primary shard indexroutings initializing state
reverse engineer sync aid based given indexroutingtable
relocate shard another node relocatingnodeid id node relocate shard
additional metadata shard iswas unassigned metadata kept around shard moves started
short description shard
returns true routing relocation source given routing
id uniquely identifies allocation
returns true routing allocation id another note shard routing null allocationid method returns false routing describe allocation all
cancel relocation shard shards state must set relocating
set shards state started shards state must initializing relocating relocation canceled
moves shard unassigned state
removes relocation source nonprimary shard shard state must initializing allows nonprimary shard continue recovery primary even though nonprimary relocation source failed
reinitializes replica shard giving fresh allocation id
make active shard primary unless its primary illegalshardroutingstateexception shard already primary
set unassigned primary shard nonprimary illegalshardroutingstateexception shard already replica
writes shard information streamoutput without writing index name shard id streamoutput write shard information ioexception something happens write
returns true current routing identical routing meta fields ie unassigned info
returns true routing relocation target given routing
initializes unassigned shard node existingallocationid allocation id use null fresh allocation id generated
returns shard routing representing target shard target shard routing initializing state relocatingnodeid set source node
returns recovery source given shard replica shards always recover primary peerrecoverysource recovery source null shard active
constructor internally create shard routing instances note internal flag set true either class tests visible testing
creates new allocation id finalizing relocation note expected called allocation id target shard thus needs clear relocating id
creates new allocation id shard moves relocated populating transient holder relocationid
creates new allocation id target initializing shard result relocation
creates new allocation id representing cancelled relocation note expected called allocation id source shard
tests getting allocationdecision type
tests getting allocationdecision allocationstatus
tests order values enum depend natural enum sort order sorting node decisions see abstractallocationdecisiongetnodedecisions
tests serialization deserialization
creates new routingallocation deciders allocationdeciders used make decisions routing allocations routingnodes routing nodes current cluster clusterstate cluster state rerouting currentnanotime nano time use delay allocation calculation typically systemnanotime
create routing decision including reason debug flag turned decision decision whether allowdeny allocation deciderlabel human readable label allocationdecider reason format string explanation decision params format string parameters
returns whether given node id ignored consideration allocationdeciders deciding whether allocate specified shard id node node ignored specified shard failed node triggering current round allocation since shard failed node dont want try reassign there node still part cluster shardid shard id allocated nodeid node id check true node id ignored allocation decisions false otherwise
exception present causing shard fail
failure message available explaining shard failed
prevent set insyncallocationids grow unboundedly happen example dont write primary repeatedly shut nodes active replicas use numberofreplicas 1 possible active shard copies bound insyncallocationids set
assume following scenario indexing request written primary fails replicated active replica primary instructs master fail replica acknowledging write client meanwhile node replica removed cluster deassociatedeadnodes means shardrouting replica failed its allocation id still part insync set make sure failshard request primary removes allocation id insync set
dont remove allocation id failed active primary replica promote primary
assume following scenario indexing request written primary fails replicated active replica primary instructs master fail replica acknowledging write client meanwhile primary fails unrelated reason master batches requests fail primary replica make sure allocation id primary kept insync allocation set acknowledge request client otherwise would acknowledge write made primary replica replica still considered nonstale
trim set allocation ids set grows
gets allocationdecision allocationstatus
gets allocationdecision decisiontype
tests higher prioritized primaries replicas allocated first even balanced shard allocator see httpsgithubcomelasticelasticsearchissues13249 details
get node allocator assign shard to returning null node shard assigned moved isdecisiontaken returns false invoking method throw illegalstateexception
gets sorted list individual nodelevel decisions went making ultimate decision whether allocate move shard isdecisiontaken returns false invoking method throw illegalstateexception
returns true least one node returned typeyes decision allocating shard
generates xcontent nodelevel decisions creating outer nodedecisions object serialized
generates xcontent discoverynode leaves noncritical fields
warn given disk usage low high watermark passed
gets store exception trying read store error error returns null
gets allocation id shard copy exists
decision details allocating node returns null allocation decision taken node case getnodedecision return allocationdecisionno
get shard store information node exists
applies failed shards note assigned shardrouting instances exist routing table provided parameter also applies list allocation ids remove insync set shard copies routing entries routing table instance clusterstate returned change made
internal helper cap number elements potentially long list logging elements elements log may nonnull list must null formatter function convert list elements string must null list element type commaseparated string first elements
checks replicas autoexpand feature need adapted returns updated cluster state changes necessary identical cluster changes required
removes delay markers unassigned shards based current time stamp
reroutes routing table based live nodes instance clusterstate returned change made
creates new commandsresult explanations explanation reroute actions clusterstate resulting cluster state
reset failed allocation counter unassigned shards
unassigned shards associated nodes longer part cluster potentially promoting replicas needed
applies started shards note initializing shardrouting instances exist routing table provided parameter duplicates contained instance clusterstate returned change made
provides feedback commands yes decision displayed user command applied
read routingexplanations object
write routingexplanations object
checks watermark string valid percentage byte size value watermark value given
attempts parse watermark percentage returning 1000 parsed specified lenient parameter true otherwise throwing elasticsearchparseexception watermark watermark parse percentage lenient true lenient parsing applied parsed percentage
attempts parse watermark bytesizevalue returning zero bytes parsed specified lenient parameter true otherwise throwing elasticsearchparseexception watermark watermark parse byte size settingname name setting lenient true lenient parsing applied parsed byte size value
creates new move decision decision plus adding remain decision
creates move decision rebalancing shard allowed
returns true shard allowed rebalanced another node cluster returns false otherwise getclusterrebalancedecision returns null result method meaningless rebalance decision taken isdecisiontaken returns false invoking method throw illegalstateexception
returns decision allowed rebalance shard invoking method return null canremain returns false means node allowed remain current node cluster forced attempt move shard different node opposed attempting rebalance shard better cluster balance possible moving it isdecisiontaken returns false invoking method throw illegalstateexception
gets current ranking node shard currently assigned relative nodes cluster reported nodeallocationresultgetweightranking ranking return meaningful positive integer getclusterrebalancedecision returns nonnull value otherwise 0 returned isdecisiontaken returns false invoking method throw illegalstateexception
creates move decision shard allowed remain current node canremaindecision decision whether shard allowed remain current node allocationdecision allocationdecision moving shard another node assignednode node shard move nodedecisions nodelevel decisions comprised final decision nonnull iff explain true movedecision moving shard another node
creates decision whether move shard different node form better cluster balance
creates move decision shard able remain current node shard wont forced move another node
returns decision shard allowed remain current node isdecisiontaken returns false invoking method throw illegalstateexception
returns true shard remain current node returns false otherwise isdecisiontaken returns false invoking method throw illegalstateexception
returns true shard cannot remain current node moved returns false otherwise isdecisiontaken returns false invoking method throw illegalstateexception
returns allocationdecision moving shard another node isdecisiontaken returns false invoking method throw illegalstateexception
removes allocation ids insync set shard copies routing entries routing table method called allocationservice changes routing table made
updates insync allocations routing changes made routing table
updates current metadata based changes routingchangesobserver specifically update indexmetadatagetinsyncallocationids indexmetadataprimarytermint based changes made allocation oldmetadata metadata object routing nodes changed newroutingtable routingtable object routing changes applied adapted metadata potentially original one change needed
remove allocation id shard set insync shard copies
increases primary term increaseprimaryterm called shard id
creates allocateunassigneddecision given decision assigned node any
gets remaining delay allocating replica shard node holding replica left cluster deciders waiting see node returns allocating replica elsewhere returns meaningful positive value getallocationstatus returns allocationstatusdelayedallocation isdecisiontaken returns false invoking method throw illegalstateexception
returns allocationdecision denoting result allocation attempt isdecisiontaken returns false invoking method throw illegalstateexception
returns decision given allocationstatus individual nodelevel decisions comprised final decision explain mode
gets total configured delay allocating replica shard node holding replica left cluster deciders waiting see node returns allocating replica elsewhere returns meaningful positive value getallocationstatus returns allocationstatusdelayedallocation isdecisiontaken returns false invoking method throw illegalstateexception
returns decision delayed shard allocation replica shard individual nodelevel decisions comprised final decision explain mode instances created method return allocationstatusdelayedallocation getallocationstatus
returns status unsuccessful allocation attempt value null decision taken decision decisiontypeyes isdecisiontaken returns false invoking method throw illegalstateexception
creates yes decision given individual nodelevel decisions comprised final yes decision along node id shard assigned allocation id shard available
returns throttle decision individual nodelevel decisions comprised final throttle decision explain mode
gets allocation id existing shard copy allocator assigning shard to method returns nonnull value iff gettargetnode returns nonnull value node shard assigned already shard copy insync allocation id reuse isdecisiontaken returns false invoking method throw illegalstateexception
builds internal model shards given iterable shards iterable must assigned node method skip shards state shardroutingstaterelocating since relocating shard shadow shard state shardroutingstateinitializing target node respect allocation balancing process short method recreates statusquo cluster
makes decision whether move started shard another node following rules apply movedecision return object 1 shard started decision taken movedecisionisdecisiontaken return false 2 shard allowed remain current node attempt made move shard movedecisioncanremaindecision decision type yes fields object null 3 shard allowed remain current node movedecisiongetallocationdecision populated decision moving another node movedecisionforcemove returns true movedecisiontargetnode return nonnull value otherwise assignednodeid null 4 method invoked explain mode eg cluster allocation explain apis movedecisionnodedecisions nonnull value
makes decision moving single shard different node form optimally balanced cluster method invoked cluster allocation explain api only
move started shards allocated node anymore shard moved function executes move operation minimal eligible node respect weight function shard moved shard set shardroutingstaterelocating shadow instance shard created incremented version state shardroutingstateinitializing
returns true iff weight delta two nodes defined threshold see thresholdsetting defining threshold
absolute value difference two weights
balances nodes cluster model according weight function configured threshold minimum delta weight maximum node minimum node according weightfunction weight calculated per index distribute shards evenly per index balancer tries relocate shards delta exceeds threshold default case threshold set 10 enforce gaining relocation only words relocations move weight delta closer 00
balances nodes cluster model according weight function actual balancing delegated balancebyweights
make decision allocating unassigned shard method returns two values tuple first value decision taken allocate unassigned shard second value modelnode representing node shard assigned to decision returned type typeno assigned node null
resets sorter recalculates weights per node sorts nodes weight minimal weight first
allocates given shards minimal eligible node shards index respect weight function given shards must unassigned
builds initial index ordering indices returned unbalanced first need order prevent allocations added nodes one index weight parameters global balance overrule index balance intermediate state example happen 3 nodes 3 indices 3 primary 1 replica shards first stage three nodes hold 2 shard index add another node first index balanced moving three shards two nodes new node since shards yet global balance node way average rebalance need move shards back eventually likely nodes relocated from
tries find relocation max node minimal node arbitrary shard given index balance model iff method returns true relocation already executed simulation model well cluster
utility method rejecting current allocation command based provided reason
handle case disco node cannot found routing table usually means its data node
initializes unassigned shard node removes unassigned allocation allocation routingnodes routing nodes routingnode node initialize shardrouting shard routing matched unassigned shards unassignedinfo unassigned info override recoverysource recovery source override
read stream
utility method rejecting current allocation command based provided exception
read stream
creates new cancelallocationcommand index index shard allocation canceled shardid id shard allocation canceled node id node manages shard allocation canceled
read stream
reads allocationcommands streaminput streaminput read allocationcommands read ioexception something happens read
writes allocationcommands streamoutput commands commands write streamoutput write commands ioexception something happens write
creates new set allocationcommands commands allocationcommands wrapped instance
executes wrapped commands given routingallocation allocation routingallocation apply command orgelasticsearchelasticsearchexception something happens execution
adds set commands collection commands array commands add instance allocationcommands given commands added
reads allocationcommands xcontentparser commands allocate index test shard 0 node test parser xcontentparser read commands allocationcommands read ioexception something bad happens reading stream
read stream
add decision multidecision instance decision decision add multidecision instance given decision added
returns explanation string fully formatted formats string once
creates new single decision given type type type decision explanation explanation decision explanationparams set additional parameters
given diskusage node size shard return percentage free disk shard allocated node usage diskusage node space computed shardsize size bytes shard percentage free space shard assigned node
returns size shards currently relocated node may finished transferring yet subtractshardsmovingaway true size shards moving away subtracted total size shards
returns expected shard size given shard default value provided enough information available estimate shards size
returns diskusage routingnode using average usage nodes disk usage map node node return averaged diskusage object usages map nodeid diskusage known nodes diskusage representing given node using average disk usage
returns decision whether given primary shard forcibly allocated given node method called unassigned primary shards node shard copy disk note implementations override behavior take account results canallocateshardrouting routingnode routingallocation making decision force allocation force allocation considered deciders return decisionno
tests updating sameshardallocationdeciderclusterroutingallocationsamehostsetting setting works expected
tests updating enableallocationdecider related settings works expected
returns decision whether given shard routing allocated given node default decisionalways
returns decision whether given shard routing rebalanced given allocation default decisionalways
tests typehigherthantype
shard routing passed canallocateshardrouting routingnode routingallocation initializing shard node but unassigned shard routing case want assign unassigned shard node initializing shard routing want assign initializing shard node instead started shard routing case want check relocate node relocating shard routing want relocate node instead method returns corresponding initializing shard would allocated node
test httpsgroupsgooglecomdmsgelasticsearchysyhyob8ezdfnt9vo44j
sets routing indices
concreteindexnamesclusterstate indicesoptions string index expressions options encapsulated specified request
specified string data math expression method returns resolved expression
translates provided index expression actual concrete indices properly deduplicated state cluster state containing data resolve expressions concrete indices options defines aliases indices need resolved concrete indices indexexpressions expressions resolved alias index names resolved concrete indices based cluster state indices options index expressions indexnotfoundexception one index expressions pointing missing index alias provided indices options context dont allow case final result indices resolution contains indices indices options context dont allow case illegalargumentexception one aliases resolve multiple indices provided indices options context dont allow case
translates provided index expression actual concrete indices properly deduplicated state cluster state containing data resolve expressions concrete indices options defines aliases indices need resolved concrete indices starttime start request concrete indices invoked indexexpressions expressions resolved alias index names resolved concrete indices based cluster state indices options index expressions provided indices options context dont allow case final result indices resolution contains indices indices options context dont allow case illegalargumentexception one aliases resolve multiple indices provided indices options context dont allow case
utility method allows resolve index expression corresponding single concrete index callers make sure provide proper orgelasticsearchactionsupportindicesoptions require single index result indices resolution must fact return single index using method illegalargumentexception gets thrown otherwise state cluster state containing data resolve expression concrete index request request defines alias index need resolved concrete index expression resolved alias index name illegalargumentexception index resolution lead one index concrete index obtained result index resolution
identifies whether first argument an array containing index names pattern matches indices indicesoraliases array containing index names concreteindices array containing concrete indices first argument refers true first argument pattern maps available indices false otherwise
returns true iff given expression resolves given index name otherwise false
whether specified alias index exists alias index contains datemath resolved too
concreteindicesclusterstate indicesoptions string index expressions options encapsulated specified request
translates provided index expression actual concrete indices properly deduplicated state cluster state containing data resolve expressions concrete indices options defines aliases indices need resolved concrete indices indexexpressions expressions resolved alias index names resolved concrete indices based cluster state indices options index expressions indexnotfoundexception one index expressions pointing missing index alias provided indices options context dont allow case final result indices resolution contains indices indices options context dont allow case illegalargumentexception one aliases resolve multiple indices provided indices options context dont allow case
utility method allows resolve index expression corresponding single write index state cluster state containing data resolve expression concrete index request request defines alias index need resolved concrete index expression resolved alias index name illegalargumentexception index resolution lead index leads one index write index obtained result index resolution
iterates list indices selects effective list required aliases given index only aliases given predicate tests successfully returned indices list contains nonrequired reference index null returned returns null filtering required
resolves search routing expression aliases used expressions point concrete indices aliases routing defined specified routing used routing values grouped concrete index
resolves provided cluster expression matching cluster names method supports exact wildcard matches remoteclusters aliases remote clusters clusterexpression expressions resolved cluster names resolved cluster aliases
concreteindex concrete index check routing required type type check routing required whether routing required according mapping specified index type
finds specific index aliases match specified aliases directly partially via wildcards point specified concrete indices match partially indices via wildcards aliases aliases look originalaliases original aliases user originally requested concreteindices concrete indexes index aliases must point order returned map index list alias metadata list corresponding concrete index empty aliases present index
returns indexmetadata index indexnotfoundexception metadata index found
checks least one specified aliases exists specified concrete indices wildcards supported alias names partial matches aliases names index aliases find concreteindices concrete indexes index aliases must point order returned whether least one specified aliases exists one specified concrete indices
returns indexing routing given aliasorindex resolves routing alias metadata used write index
finds mappings types concrete indices types expanded include types match glob patterns types array empty types array null all expanded types available given indices fields match provided field filter returned default predicate always returns true overridden via plugins mapperplugingetfieldfilter
validates alias filter parsing using provided orgelasticsearchindexqueryqueryshardcontext illegalargumentexception filter valid
validates alias filter parsing using provided orgelasticsearchindexqueryqueryshardcontext illegalargumentexception filter valid
validate proposed alias
allows partially validate alias without knowing index itll get applied to useful index templates containing aliases checks also possible parse alias filter via orgelasticsearchcommonxcontentxcontentparser without validating filter though illegalargumentexception alias valid
checks mappings compatibility current version
elasticsearch v60 longer supports indices created pre v50 indices created elasticsearch v50 reindexed elasticsearch 5x opened version elasticsearch
marks index upgraded dont test
checks index upgraded current version master node index need upgrade returns index metadata unchanged otherwise returns modified index metadata index cannot updated method throws exception
checks replicas autoexpand feature need adapted returns map updates maps indices updated desired number replicas map desired number replicas key indices update value allows result method directly applied routingtablebuilderupdatenumberofreplicas
updates cluster block iff setting exists given settings
delete indices cluster state
validate name index alias static rules
returns default number routing shards based number shards index default number routing shards allow index split least 10 times factor two closer number shards gets 1024 less default split operations supported
validate name index static rules cluster state
validates settings mappings shrinking index list nodes least one instance source index shards allocated
creates index cluster state waits specified number shard copies become active as specified createindexclusterstateupdaterequestwaitforactiveshards sending response listener index creation successfully applied cluster state createindexclusterstateupdateresponseisacknowledged return true otherwise return false waiting occur started shards createindexclusterstateupdateresponseisshardsacknowledged also false index creation cluster state successful requisite shard copies started timeout createindexclusterstateupdateresponseisshardsacknowledged return true otherwise operation timed out return false request index creation cluster state update request listener listener send index creation cluster state update response
returns unique alias metadata per concrete index note although alias point concrete indices alias reference may routing filters
build operation
build operation
sometimes default mapping exists actual mapping created yet introduced case want return default mapping case default mapping definitions note mapping type introduced default mapping applied actual typed mappingmetadata setting routing timestamp needed
returns source shard ids shrink given shard id shardid id target shard shrink sourceindexmetadata source index metadata numtargetshards total number shards target index set shard ids shrink given shard id
selects source shards local shard recovery might either split shrink operation shardid target shard id select source shards sourceindexmetadata source metadata numtargetshards number target shards
returns routing factor shrunk index given number target shards factor used hash function orgelasticsearchclusterroutingoperationroutinggenerateshardidindexmetadata string string guarantee consistent hashing routing documents even number shards changed ie shrunk index sourcenumberofshards total number shards source index targetnumberofshards total number shards target index routing factor shrunk index given number target shards illegalargumentexception number source shards less number target shards source shards divisible number target shards
returns source shard id split given target shard shardid id target shard split sourceindexmetadata source index metadata numtargetshards total number shards target index source shard id split
adds human readable version creation date settings method used display settings human readable format rest api
returns primary term given shard see indexmetadataprimarytermint information
sets number shards used routing used number shards index changed ie index shrunk
sets primary term given shard see indexmetadataprimarytermint information
test whether current index uuid given one returns true either na
batch method apply queued refresh operations idea try batch much possible wont create index time example updates mapping generate single cluster change event those
refreshes mappings original parsed version
test resolving all pattern null empty array all random indicesoptions
test resolving wildcard pattern matches index alias random indicesoptions
finds index templates whose index pattern matched given index name result sorted indextemplatemetadataorder descending
writes repository metadata stream output stream output
constructs new repository metadata name repository name type repository type settings repository settings
converts serialized compressed form mappings parsed map
get number tombstones purged only called build called
purge tombstone entries returns number entries purged tombstones purged number tombstones list greater input parameter maximum allowed tombstones tombstones purged list equal maximum allowed
returns true graveyard contains tombstone given index
add set deleted indexes list tombstones cluster state
add deleted index list tombstones cluster state
add list tombstones graveyard
checks nodes leave cluster autoexpandreplica functionality triggers failing shards removed nodes ensures active shards live nodes failed primary resided dead node instead one replicas live nodes first gets promoted primary autoexpansion removing replicas triggers followup step
serializes information single repository repository repository metadata builder xcontent builder params serialization parameters
returns repository given name null repository doesnt exist name name repository repository metadata
emits single ast node line column correctly set position source file must ever called typeparameters typearguments production ending least one character emitted aretheregtstoemit
object instantiation trees built illustrated following inputtree pairs new t new elist arg1 arg2 argn new int new int arraydeclarator new int 12 new int arraydeclarator arrayinit expr expr 1 2 new int3 new int arraydeclarator expr 3 new int12 new int arraydeclarator arraydeclarator expr expr 1 2 recognitionexception recognition problem occurs tokenstreamexception problem occurs generating stream tokens
consume sequence characters gt sr bsr match characters seen
true least one seen reconciled end typeparameters typearguments production returns false otherwise
true exactly one seen reconciled end typeparameters production returns false otherwise
true evenly matched current typeparameterstypearguments nested depth
declaration creation reference primitivetype variable create separate typevar tree var var list
declaration variable classinstance variable local variable method also include possible initialization
fills cache set externalresource external resource set already cache skipped externalresources set externalresource
load cached values file ioexception problems file read
calculates hashcode serializable object based content object serializable object hashcode serializable object
creates instance location resource location contenthashsum content hash sum
puts external resources cache least one external resource changed clears cache locations locations external resources
checks file cache uncheckedfilename file check timestamp timestamp file check whether specified file already checked ok
checks whether contents external configuration resources changed resources set externalresource true contents external configuration resources changed
loads content external resource location external resource location array bytes represents content external resource binary form checkstyleexception error loading occurs
loads set externalresource based locations resourcelocations locations external configuration resources set externalresource
checks whether resource location cache location resource location true resource location cache
cleans object updates cache file ioexception problems file save
serializes object output stream object object serialized outputstream serialization stream ioexception error occurs
resets cache empty except configuration hash
flushes closes output stream stream output stream ioexception problems file flush close
creates new propertycachefile instance config current configuration null filename cache file
notify listeners beginning file audit filename file audited
sets named charset charset name charset unsupportedencodingexception charset unsupported
notify listeners errors file filename audited file errors audit errors file
notify listeners audit start
notify listeners end file audit filename audited file
adds filesetcheck list filesetchecks executed process filesetcheck additional filesetcheck
check execution file filters accept starting file filename file audited true file accepted
creates new checker instance instance needs contextualized configured
returns set external configuration resource locations used file set checks filters set external configuration resource locations used file set checks filters
processes list files filesetchecks files list files process checkstyleexception error condition within checkstyle occurs noinspection prohibitedexceptionthrown
sets file extensions identify files pass filter filesetcheck extensions set file extensions missing initial character extension automatically added
clears cache
notify listeners audit end
creates child module noinspection chainofinstanceofchecks
sets cache file filename cache file ioexception problems file loading
processes file filesetchecks file file process sorted set messages logged checkstyleexception error condition within checkstyle occurs noinspection prohibitedexceptionthrown
creates new xmllogger instance sets output defined stream outputstream stream write logs to outputstreamoptions close stream closed auditfinished
outputs given event writer event event print
prints file section file errors exceptions filename file name printed opening file tag messages file messages
writes exception event print writer throwable
finds whether given argument character entity reference ent possible entity look for whether given argument character entity reference
creates new xmllogger instance sets output defined stream outputstream stream write logs to closestream close os auditfinished order fulfill demands booleanparameter idea check noinspection booleanparameter
escape entities value value escape escaped value necessary
create comment ast token depending token type singlelinecomment blockcommentbegin created token create ast detailast comment node
parses java source file file file parse options options control inclusion comment nodes detailast tree ioexception file could read checkstyleexception file valid java source file
create singleline comment token token create ast detailast singlelinecomment type
appends comment nodes existing ast traverses node ast looks hidden comment tokens appends found comment tokens nodes ast root ast root ast comment nodes
static helper method parses java source file contents contains contents file root ast checkstyleexception contents valid java source
parse text return parse tree text text parse options options control inclusion comment nodes root node parse tree checkstyleexception text valid java source
creates xpathquerygenerator instance generates suppressions filetext filetext object detailast detailast object linenumber line number columnnumber column number tabwidth length tab character generated suppressions
prints generated suppressions file file process suppressionlinecolumnnumber line column number suppression tabwidth length tab character generated suppressions ioexception file could read checkstyleexception file java source
returns length buffer stringbuilder bufferlength filenamelength messagelength lengthofallseparators severitynamelength checknamelength event audit event severitylevelnamelength length severity level name length buffer stringbuilder
returns check name without check suffix event audit event check name without check suffix
walks type members push first javadoc sentence every public static int field consumer objblock objblock class iterate members consumer first javadoc sentence consumer checkstyleexception failed parse javadoc comment
extracts first sentence html formatted text comment detailast end sentence determined symbol period exclamation mark question mark followed space end text inline tags literal converted html code ast extract first sentence first sentence inner tokentypesblockcommentbegin node null first sentence absent malformed does end period checkstyleexception javadoc comment parsed unsupported inline tag found
creates properties file java file options userspecified options checkstyleexception javadoc comment parsed
extracts first sentence html formatted text detailnode end sentence determined symbol period exclamation mark question mark followed space end text inline tags literal converted html code tree extract first sentence first sentence node null first sentence absent malformed does end endofsentence markers checkstyleexception unsupported inline tag found
concatenates html text ast javadoctokentypeshtmlelement builder append node format
converts inline code tag html form builder append inlinetag format checkstyleexception inline javadoc tag literal code tag
checks detailast public static final int field ast process true matches false otherwise
finds class body first class detailast top ast find class body objblock token found null otherwise
tokentypesproperties generator entry point args command line arguments checkstyleexception parser lexer failed io problem
configures saxparserfactory features required execution secured environments factory factory configured special features saxexception error occurs parserconfigurationexception error occurs
parses specified input source inputsource input source parse ioexception error occurs saxexception error occurs
creates new instance publicidtoresourcenamemap maps public ids dtd resource names saxexception error occurs parserconfigurationexception error occurs
returns module configurations specified file config location config file either url filename overridepropsresolver overriding properties omitignoredmodules true modules severity ignore omitted false otherwise check configurations checkstyleexception error occurs order fulfill demands booleanparameter idea check noinspection booleanparameter
returns module configurations specified input source note source wrap open byte character stream clients required close stream configsource input stream checkstyle configuration overridepropsresolver overriding properties ignoredmodulesoptions omit modules severity ignore omitted execute otherwise threadmodesettings thread mode configuration check configurations checkstyleexception error occurs noinspection weakeraccess
util method recheck attribute module module module check attributename name attribute module find true attribute present module
creates new configurationloader instance overrideprops resolver overriding properties omitignoredmodules true ignored modules omitted threadmodesettings thread mode configuration parserconfigurationexception error occurs saxexception error occurs
returns module configurations specified input source note source wrap open byte character stream clients required close stream configsource input stream checkstyle configuration overridepropsresolver overriding properties omitignoredmodules true modules severity ignore omitted false otherwise threadmodesettings thread mode configuration check configurations checkstyleexception error occurs order fulfill demands booleanparameter idea check noinspection booleanparameter weakeraccess
returns module configurations specified file config location config file either url filename overridepropsresolver overriding properties ignoredmodulesoptions omit modules severity ignore omitted execute otherwise check configurations checkstyleexception error occurs
creates new internalloader saxexception error occurs parserconfigurationexception error occurs
returns module configurations specified file config location config file either url filename overridepropsresolver overriding properties check configurations checkstyleexception error occurs
parses specified input source loading configuration information stream wrapped inside source any explicitly closed parsing responsibility caller close stream source source contains configuration data ioexception error occurs saxexception error occurs
replaces xxx style constructions given value string value corresponding data types method must remain outside inner class easier testing since inner class requires instance code copied ant httpcvsapacheorgviewcvsjakartaantsrcmainorgapachetoolsantprojecthelperjava value string scanned property references may null case method returns immediately effect props mapping string string property names values must null defaultvalue default use one properties value cannot resolved props original string properties replaced null original string null checkstyleexception string contains opening without closing noinspection methodwithmultiplereturnpoints methodonlyusedfrominnerclass
returns module configurations specified file config location config file either url filename overridepropsresolver overriding properties threadmodesettings thread mode configuration check configurations checkstyleexception error occurs
parses string containing xxx style property references two lists first list collection text fragments set string property names null entries first list indicate property reference second list code copied ant httpcvsapacheorgviewcvsjakartaantsrcmainorgapachetoolsantprojecthelperjava value text parse must null fragments list add text fragments to must null propertyrefs list add property names to must null checkstyleexception string contains opening without closing
returns module configurations specified input stream note clients required close given stream configstream input stream checkstyle configuration overridepropsresolver overriding properties omitignoredmodules true modules severity ignore omitted false otherwise check configurations checkstyleexception error occurs method provide valid system id preventing resolution external entities loadconfigurationinputsourcepropertyresolverboolean version using inputsource used instead noinspection booleanparameter
returns module configurations specified file config location config file either url filename overridepropsresolver overriding properties ignoredmodulesoptions omit modules severity ignore omitted execute otherwise threadmodesettings thread mode configuration check configurations checkstyleexception error occurs
returns module configurations specified file config location config file either url filename overridepropsresolver overriding properties omitignoredmodules true modules severity ignore omitted false otherwise threadmodesettings thread mode configuration check configurations checkstyleexception error occurs order fulfill demands booleanparameter idea check noinspection booleanparameter weakeraccess
returns module configurations specified input source note source wrap open byte character stream clients required close stream configsource input stream checkstyle configuration overridepropsresolver overriding properties ignoredmodulesoptions omit modules severity ignore omitted execute otherwise check configurations checkstyleexception error occurs
returns module configurations specified input source note source wrap open byte character stream clients required close stream configsource input stream checkstyle configuration overridepropsresolver overriding properties omitignoredmodules true modules severity ignore omitted false otherwise check configurations checkstyleexception error occurs order fulfill demands booleanparameter idea check noinspection booleanparameter
creates mapping local resources dtd ids method cant moved inner class must stay static called constructor inner class isnt static map local resources dtd ids noinspection methodonlyusedfrominnerclass
returns set external configuration resource locations used checks set checks set checks set external configuration resource locations used checks set
notify checks leaving node ast node notify aststate state ast
notify checks visiting node ast node notify for aststate state ast
method returns list checks ast node notify aststate state ast list visitors
returns filtered set localizedmessage filename path file filecontents contents file rootast root ast element detailast file filtered set messages
register check specified token name token name token check check register checkstyleexception check misconfigured
initiates walk ast ast root ast contents contents file ast generated from aststate state ast
register check given configuration check check register checkstyleexception error occurs
notify checks finished walking tree rootast root tree aststate state ast
sets cache file use checkersetcachefile instead anything now keep setter transition period option checker method completely removed checkstyle 80 see hrefhttpsgithubcomcheckstylecheckstyleissues2883issue2883 filename cache file
creates child module noinspection chainofinstanceofchecks
validates checks required tokens subset default tokens check validate checkstyleexception validation default tokens fails
returns set external configuration resource locations used filters set set external configuration resource locations used filters set
notify checks begin walking tree rootast root tree contents contents file ast generated from aststate state ast
processes node calling interested checks node uses iterative algorithm root root tree process aststate state ast
parses block comment javadoc prints tree node block comment begin string javadoc tree
parse file print parse tree text text parse options javaparseroptions control inclusion comment nodes ast file string form checkstyleexception file java source
get indentation ast node ast ast get indentation for indentation string format
print ast ast root ast node string ast
prints full ast java comments javadoc java file file java file full tree ioexception failed open file checkstyleexception error parsing file
parse file print parse tree file file print options javaparseroptions control inclusion comment nodes ast file string form ioexception file could read checkstyleexception file java source
replace control chars escaped symbols text string process processed string control chars escaped
prints full tree java comments javadoc detailast ast root detailast full tree
get string representation node token name node text line number column number node detailast node info
creates full package name package names stack full name current package
creates new packagenamesloader instance parserconfigurationexception error occurs saxexception error occurs
returns set package names compiled checkstylepackagesxml files found given class loaders classpath classloader class loader loading checkstylepackagesxml files set package names checkstyleexception error occurs
reads file provided parses package names loader packagefile file package namesloader package names loader saxexception error parsing occurs checkstyleexception unable open file
creates mapping local resources dtd ids map local resources dtd ids
creates new defaultlogger instance infostream outputstream info messages closeinfoafteruse auditfinished close infostream errorstream outputstream error messages closeerrorafteruse auditfinished close errorstream order fulfill demands booleanparameter idea check noinspection booleanparameter
creates new defaultlogger instance infostream outputstream info messages closeinfoafteruse auditfinished close infostream errorstream outputstream error messages closeerrorafteruse auditfinished close errorstream messageformatter formatter log message order fulfill demands booleanparameter idea check noinspection booleanparameter weakeraccess
creates new defaultlogger instance outputstream log infos errors outputstreamoptions close closed auditfinished
flushes output streams closes needed
creates new defaultlogger instance outputstream log infos errors closestreamsafteruse os closed auditfinished order fulfill demands booleanparameter idea check noinspection booleanparameter
creates new defaultlogger instance infostream outputstream info messages infostreamoptions close info closed auditfinished errorstream outputstream error messages errorstreamoptions close error closed auditfinished messageformatter formatter log message noinspection weakeraccess
print emacs compliant line error stream column number non zero also display it auditlistener
creates new defaultlogger instance infostream outputstream info messages infostreamoptions close info closed auditfinished errorstream outputstream error messages errorstreamoptions close error closed auditfinished
adds attribute configuration attributename name attribute value value attribute
returns unmodifiable map instance containing custom messages configuration unmodifiable map containing custom messages
instantiates defaultconfiguration name name defaultconfiguration threadmodesettings thread mode configuration
create object optional full module names case one element fullmodulename otherwise exception would thrown name name module fullmodulenames supplied full module names set instance module one element fullmodulename checkstyleexception class fails instantiate one element fullmodulename
fill shorttofull module names map modules filefilters package
creates new packageobjectfactory instance packagenames list package names use moduleclassloader class loader used load checkstyle core custom modules moduleloadoption loading option
create object help supplied map name name module map supplied map instance module found modules map ambiguous classes exist checkstyleexception class fails instantiate ambiguous classes
generate map third party checkstyle module names set fully qualified names loader class loader used load checkstyle package names map third party checkstyle module names set fully qualified names
fill shorttofull module names map checks javadoc package
searching class given name or name concatenated check existing packages returns instance class found or otherwise null name name class object created loader checkstyleexception error occurs
create object one checkstyle module names name name module instance module checkstyleexception class fails instantiate ambiguous classes
fill shorttofull module names map checks naming package
fill shorttofull module names map
fill shorttofull module names map modules checks package
fill shorttofull module names map checks regexp package
fill shorttofull module names map modules filters package
fill shorttofull module names map checks design package
fill shorttofull module names map checks blocks package
fill shorttofull module names map checks imports package
fill shorttofull module names map checks header package
fill shorttofull module names map checks whitespace package
fill shorttofull module names map checks sizes package
fill shorttofull module names map checks metrics package
creates new packageobjectfactory instance packagename package name use moduleclassloader class loader used load checkstyle core custom modules
returns simple check name full modules names map fullname name class joining simple check name
fill shorttofull module names map checks modifier package
creates new instance class given name name concatenated check name class name creates instance named class otherwise creates instance class name obtained concatenating given name package name given list package names name name class object created loader checkstyleexception error occurs
fill shorttofull module names map checks annotation package
fill shorttofull module names map modules checkstyle package
creates string joining package names class name classname name class joining packages packages names string obtained joining package names class name
creates new instance named class classname name class instantiate object created loader null checkstyleexception class fails instantiate
fill shorttofull module names map checks indentation package
returns whether specified record logged record record log true logger name package class subpackage
execution checkstyle based command line options options userspecified options filestoprocess list files whose style check number violations ioexception file could read checkstyleexception something happens processing files noinspection useofsystemoutorsystemerr
determines files process options userspecified options list files process
gets list exclusions provided command line arguments list exclusion patterns
loads properties file file properties file properties file checkstyleexception could load properties file
loops files specified checking errors exit code number errors found files args command line arguments ioexception problem files access noinspection useofsystemoutorsystemerr calltoprintstacktrace calltosystemexit
returns treewalker module configuration config configuration object treewalker module configuration
traverses specified node looking files check found files added specified list subdirectories also traversed node node process patternstoexclude list patterns exclude searching added files found files
validates user input returns value exitwithinvaliduserinputcode invalid otherwise executes checkstyle returns number violations parseresult generic access options parameters found command line options encapsulates options parameters specified command line number violations ioexception file could read checkstyleexception something happens processing files noinspection useofsystemoutorsystemerr
returns new auditlistener outputformat output stream options output stream options new auditlistener outputformat
create automaticbeanoutputstreamoptions given location outputpath output location output stream options
checks directoryfile path excluded based matches one patterns supplied path path directoryfile check patternstoexclude list patterns exclude searching added files true directoryfile matches one patterns
create output stream return systemout outputpath output location output stream ioexception might happen noinspection useofsystemoutorsystemerr
creates new instance root module control run checkstyle name name module either short name found complete package name moduleclassloader class loader used load root module new instance root module checkstyleexception module instantiated name
returns name lowercase enum name lowercase
method creates auditlistener open stream validation data must closed rootmodule default implementation checker calling auditlistenerauditfinishedauditevent format format audit listener outputlocation location output fresh new auditlistener exception ioexception provided output location found
executes required checkstyle actions based passed parameters options userspecified options filestoprocess list files whose style check number violations error level ioexception output file could found checkstyleexception properties file could loaded noinspection useofsystemoutorsystemerr
creates child nodes node nodes array parsetreeparent original parsetree parent node nodes array javadocnodeimpl nodes
gets line number parsetree node tree parsetree node line number
gets class name parsetree node removes context postfix end formats it node parsetree node whose class name formatted returned uppercased class name without word context appropriately inserted underscores
parses block comment content javadoc comment blockcomment block comment content parse tree
parses javadoc comment detailnode tree javadoccommentast detailast javadoc comment detailnode tree javadoc comment
method used get first nontight html tag encountered parsing javadoc shall eventually reflected parsestatus object returned parsejavadocasdetailnodedetailast method via instance member parsestatusfirstnontighthtmltag checks supposed process nontight html ones supposed log violation nontight javadocs utilize that javadocparser antlr recognizer instance used parse javadoc first nontight html tag one exists null otherwise
gets column number parsetree node tree parsetree node column number
logs parser errors checkstyle manner parser generate error messages special error parser generate missed close html tag case special parser prints error like no viable alternative input b n n clear error missed close html tag error messages special logged simply parse error
gets token type parsetree node javadoctokentypes class node parsetree node token type javadoctokentypes
converts parsetree that generated antlrv4 detailnode tree parsetreenode root node parsetree root detailnode tree noinspection suspiciousarraycast
creates children javadoc nodes base parsetree nodes children parentjavadocnode node parent created children parsetreenode original parsetree node array javadoc nodes
method get missed html tag generate informative error message user method doesnt concern hrefhttpswwww3orgtrhtml51syntaxhtmlvoidelementsvoid elements since forbidden close them missed html tags following tags not generate error message antlr exception noviablealtexception object catched parsing javadoc returns appropriate token html close tag missed null otherwise
adjust first line nodes javadoc indent tree detailnode tree root javadoccolumnnumber javadoc indent
gets next sibling parsetree node node parsetree node next sibling parsetree node
gets class name parsetree node removes context postfix end node parsetree node class name without context
initializes parse error message linenumber line number messagekey message key messagearguments message arguments
creates javadocnodeimpl node base parsetree node parsetree parsetree node parent detailnode parent new node index child index new node javadocnodeimpl node base parsetree node
creates root javadocnodeimpl node base parsetree root node parsetreenode parsetree root node root javadoc node
creates new suppressionfilegenerator instance sets output defined stream output stream outputstreamoptions close stream closed auditfinished
prints xml header printed before
creates new treewalkerauditevent instance filecontents contents file associated event filename file associated event localizedmessage actual message rootast root ast element detailast file
get indentation node node detailnode get indentation for indentation string format
print ast ast root ast node rootprefix prefix root node prefix prefix nodes string ast
parse file return parse tree file file parse root node parse tree ioexception file could read
parse javadoc comment detailnode tree javadoccomment javadoc comment content tree
builds error message base parseerrormessages message key arguments etc parseerrormessage parseerrormessage error message
parse block comment detailast javadoc detailnode tree blockcomment detailast detailnode tree
creates new propertiesexpander properties underlying properties use property resolution illegalargumentexception indicates null passed
initializes thread mode configuration checkerthreadsnumber checker threads number treewalkerthreadsnumber treewalker threads number
resolves module name according thread settings name original module name resolved module name
scans given path retrieves files given path path path scan pathindex index given path used log messages only list files extracted given path
retrieves matched files given scanner scanner directory scanner note directoryscannerscan must called calling method logindex log entry index used log messages list files retrieved given scanner
returns list files full path name process list files included via filesets
creates default logger task task possibly log defaultlogger instance ioexception error occurs
retrieves files defined paths list files defined via paths
returns list files full path name process list files included via filename filesets paths
sets configuration file configuration configuration file url resource use
return list listeners set task list listeners
creates new instance root module new instance root module
set class path classpath path locate classes
helper implementation perform execution checkstyleversion checkstyle compile version
scans processes files means given root module rootmodule root module process files warningcounter root modules counter warnings checkstyleversion checkstyle compile version
creates classpath created path locating classes
creates listener formatter task task running listener ioexception error occurs
creates xml logger task task possibly log xmllogger instance ioexception error occurs
create properties object based arguments specified ant task properties property expansion expansion buildexception error occurs
create content mainframe
open file load it sourcefile file open
create buttons panel buttons panel
initialise pmodel parsetree detailast parse tree
notify listeners registered interest tree structure changed event event instance lazily created using parameters passed fire method source object responsible generating event path array object identifying path parent modified items childindices array int specifies index values removed items children array object containing inserted removed changed objects eventlistenerlist
sets parse tree parsetree detailast parse tree
constructor node ast node editor text area editor lines2position list map lines
set selection
finds last position node without children detailnode detailnode node last position node without children
find start end selection positions detailnode line column detailnode detailnode node selection finds
finds last position node without children astnode detailast node last position node without children
constructor node detailnode node lines2position list map lines noinspection assignmentorreturnoffieldwithmutabletype
find start end selection positions ast line column
constructor ast ast node lines2position list map lines noinspection assignmentorreturnoffieldwithmutabletype
find start end selection positions ast line column ast detailast node selection finds
open file load file file file open checkstyleexception file parsed
get directory last loaded file directory last loaded file
get filetext file file file get filetext from filetext ioexception file could read
notifies listeners registered interest editing stopped event eventlistenerlist
notifies listeners registered interest editing canceled event eventlistenerlist
set initial value width columns table
overridden message super forward method tree since tree actually component hierarchy never receive unless forward manner
overridden return false event mouse event forwarded tree the behavior debatable really offered property returning false keyboard actions implemented terms table returning true tree would get chance something keyboard events part ok certain keys leftright tree expandcollapse table focus really move different column page updown also implemented terms table returning false also added benefit clicking outside bounds tree node still tree column select row whereas returned true wouldnt case by returning false also enforcing policy tree never editable at least key sequence tablecelleditor
expansion tree node
overridden pass new rowheight tree
creates treetable base treetablemodel treetablemodel tree table model
constructor initialise root node parsetree detailast parse tree
returns value displayed node column number node node column column number value displayed node node column number column
gets javadoc detailnode tree specified block comments blockcomment javadoc comment block comment detailnode tree
gets child detailast node specified index parent detailast node index child index child detailsast detailnode child javadoc node parsemode javawithjavadocandcomments
gets value detailast object ast detailast node column column index value specified column
return index child parent either parent child null returns 1 either parent child dont belong tree model returns 1 parent node tree obtained data source child node interested in index child parent 1 either child parent null dont belong tree model
gets value detailnode object node detailnodejavadoc node column column index value specified column
returns child parent index parent node get child from index index child child parent index
creates artificial tree root artificial tree root
returns number children parent parent node count children for number children node parent
entry point args command line arguments
updateui overridden set colors trees renderer match table
overridden set height match jtable
subclassed translate graphics last visible row drawn 00
creates new instance treetable tree table render model tree model
sets row height tree forwards row height table
treecellrenderer method overridden update visible row tablecellrenderer
finds node given row row row find related node node given row
initialise tree treetablemodel class attributes treetablemodel tree table model tree jtree component
overridden set updatinglistselectionmodel message super place defaulttreeselectionmodel alters listselectionmodel
updatinglistselectionmodel false reset selected paths selected rows list selection model
row given index selected selected paths updated counter number row
constructor initialise treetable jtreetable treetable perform updates on
creates new attributenode instance name name attribute value value attribute
determines axis iteration algorithm attribute node iterated throws unsupportedoperationexception axisnumber element axisinfo axisiterator object
returns line number attribute node line number throws unsupportedoperationexception line number
returns column number attribute node column number throws unsupportedoperationexception column number
getter method token type attribute node token type throws unsupportedoperationexception token type
returns underlying node attribute node underlying node throws unsupportedoperationexception underlying node
returns type node node kind
returns attribute value throws unsupportedoperationexception attribute node attributes namespace namespace localpart actual name attribute attribute value
returns parent never called attribute node throws unsupportedoperationexception attributes parent
returns root never called attribute node throws unsupportedoperationexception root
returns public id throws unsupportedoperationexception child class implements method used querying public id
returns boolean throws unsupportedoperationexception child class implements method used querying boolean
determines axis iteration algorithm axisnumber element axisinfo nodetest filter iterator axisiterator object
returns implementation provides fingerprints boolean
returns configuration throws unsupportedoperationexception child class implements method used querying configuration
returns atomicsequence throws unsupportedoperationexception child class implements method used querying atomicsequence
returns base uri throws unsupportedoperationexception child class implements method used querying base uri
returns boolean throws unsupportedoperationexception child class implements method used querying boolean
returns uri namespace current node uri
returns tree info tree info
sets system id throws unsupportedoperationexception child class implements method used querying systemid system id
generate id method throws unsupportedoperationexception child class implements method used querying faststringbuffer faststringbuffer
copy method throws unsupportedoperationexception child class implements method used querying receiver receiver index index location location
returns location throws unsupportedoperationexception child class implements method used querying location
returns current node children current node children
returns boolean throws unsupportedoperationexception child class implements method used querying boolean
returns prefix throws unsupportedoperationexception child class implements method used querying prefix
returns charsequence string value throws unsupportedoperationexception child class implements method used querying charsequence string value
returns system id throws unsupportedoperationexception child class implements method used querying system id
returns namespace array throws unsupportedoperationexception child class implements method used querying namespacebindings namespace array namespace array
returns true nodes same false otherwise nodeinfo node treeinfo
returns boolean throws unsupportedoperationexception child class implements method used querying boolean
returns type schema throws unsupportedoperationexception child class implements method used querying type schema
returns fingerprint throws unsupportedoperationexception child class implements method used querying fingerprint
compares current object specified order nodeinfo another nodeinfo object number representing order current object specified one
returns display name throws unsupportedoperationexception child class implements method used querying display name
creates new elementnode instance root node root tree parent node parent current node detailast reference detailast
returns line number line number
iterates children current node recursively creates new xpathnodes
returns root root
finds child element tokentypesident extracts value stores it value accessed using text attribute text attribute supported attribute
getter method token type token type
determines axis iteration algorithm throws unsupportedoperationexception case axis iterator given axisnumber axisnumber element axisinfo axisiterator object
returns type node node kind
returns attribute value throws unsupportedoperationexception case name attribute equal text namespace namespace localpart actual name attribute attribute value
returns column number column number
returns parent parent
returns attribute value throws unsupportedoperationexception root node attributes namespace namespace localpart actual name attribute attribute value
returns type node node kind
returns root tree root tree
determines axis iteration algorithm throws unsupportedoperationexception case axis iterator given axisnumber axisnumber element axisinfo axisiterator object
returns column number column number
creates new rootnode instance detailast reference detailast
returns parent parent
getter method token type token type
iterates siblings current node recursively creates new xpathnodes
returns line number line number
creates new xpathquerygenerator instance event treewalkerauditevent object tabwidth distance tab stop position
creates new xpathquerygenerator instance rootast root ast linenumber line number element query generated columnnumber column number element query generated filetext filetext object tabwidth distance tab stop position
returns child detailast element given root child element token type equals tokentypesident root detailast root ast child detailast element given root
returns column number tabs expanded ast detailast root ast column number tabs expanded
sure generated xpath query return exactly required ast element element checked uniqueness ast element tokentypesident child sibling tokentypes element supposed unique method finds detailast element unique ast detailast ast element detailast element unique
returns relative xpath query given ast element root root detailast root element ast detailast ast element relative xpath query given ast element root
returns full xpath query given ast element ast detailast ast element full xpath query given ast element
checks given detailast node matching line number column number token type ast detailast ast element true given detailast node matching
creates new xpathquerygenerator instance rootast root ast linenumber line number element query generated columnnumber column number element query generated tokentype token type element query generated filetext filetext object tabwidth distance tab stop position
returns list nodes matching defined line number column number token type list nodes matching defined line number column number token type
checks given ast element unique tokentypes among siblings ast detailast ast element given ast element unique tokentypes among siblings
returns list xpath queries nodes matching line number column number token type approach uses detailast traversal detailast means detail abstract syntax tree list xpath queries nodes matching line number column number token type
returns message bundle name resource bundle contains messages used module default implementation expects resource files named messagesproperties messagesdeproperties etc file must placed package module implementation example write comfoomycoolcheck create resource files comfoomessagesproperties comfoomessagesdeproperties etc name resource bundle contains messages used module
unit tests especially class package name classname class name module name resource bundle contains messages used module
constructs new pair line column numbers line onebased line number column zerobased column number
recursively extract fullident full fullident add ast node recurse
creates new fullident starting specified node ast node start fullident value
append specified token also recalibrate first line column ast token append
helper method log localizedmessage ast node get line id column numbers associated message key key locale message format args arguments format
severitylevel factory method securitylevelname level name ignore info etc severitylevel associated securitylevelname
creates new instance text lines make comment firstcol number first column comment lastline number last line comment lastcol number last column comment
report location c style comment startlineno starting line number startcolno starting column number use reportsinglelinecommentint int instead
returns javadoc comment specified line return value null means comment linenobefore line number check javadoc comment null none
creates new filecontents instance text contents file
checks specified position intersects single line comment startlineno starting line number startcolno starting column number endlineno ending line number endcolno ending column number true positions intersects single line comment
report location block comment startlineno starting line number startcolno starting column number endlineno ending line number endcolno ending column number
checks specified position intersects block comment startlineno starting line number startcolno starting column number endlineno ending line number endcolno ending column number true positions intersects block comment
returns specified block comment string array startlineno starting line number startcolno starting column number endlineno ending line number endcolno ending column number block comment array
creates new filecontents instance filename name file lines contents file use filecontentsfiletext instead order preserve original line breaks possible
checks specified position intersects comment startlineno starting line number startcolno starting column number endlineno ending line number endcolno ending column number true positions intersects comment
returns map c style comments key line number value comment textblock line map comments use getsinglelinecomments instead
report location single line comment startlineno starting line number startcolno starting column number
gets line number line number
add next sibling ast detailast object
set parent token parent parent token
finds line number first noncomment node ast detailast node line number noncomment node exists 1 otherwise
returns token type branch token types occur branch sorted set
returns first child token makes specified type type token type match matching token null match
clears branchtokentypes cache parents current detailast instance child count current detailast instance
gets column number column number
add previous sibling ast detailast object
returns number child nodes one level node recurse tree number child nodes
clears child count ast instance ast ast clear
returns number direct child tokens specified type type token type match number matching token
finds column number first noncomment node ast detailast node column number noncomment node exists 1 otherwise
gets last child node last child node
creates new counter level severity level events need have must nonnull
notify listeners errors file calls messagedispatcherfireerrors logged errors clears errors list filename audited file
sets file extensions identify files pass filter filesetcheck extensions set file extensions missing initial character extension automatically added illegalargumentexception argument null
copy constructor filetext make copy
compatibility constructor this constructor reconstructs text file joining lines linefeed characters process restore original line terminators therefore avoided file name file lines lines text without terminators nullpointerexception lines array null
creates new file text representation the file read using specified encoding replacing malformed input unmappable characters default replacement character file name file charsetname encoding use reading file nullpointerexception text null ioexception file could read
determine line column numbers full text pos character position full text line column numbers character
reads file using specific decoder returns content string inputfile file read decoder charset decoder files text ioexception unable open read file
find positions line breaks full text array giving first positions line
gets audit event severity level audit event severity level
creates new auditevent instance src source event filename file associated event localizedmessage actual message
recheck property try copy it modulename name moduleclass key key value value value recheck whether check property existence copy checkstyleexception property defined incorrectly
called configure every child components configuration default implementation throws checkstyleexception childconf null doesnt support children must overridden validate support children wanted childconf child components configuration checkstyleexception configuration error configurationgetchildren
register basic types jdk like boolean int string use beanutils types found javalang package cub instance convertutilsbean register types with
creates beanutilsbean configured use type converters throw conversionexception instead using default value something goes wrong configured beanutilsbean
implements configurable interface using bean introspection subclasses allowed add behaviour bean based setup completed first method finishlocalsetup finishlocalsetup called allow completion beans local setup method setupchild setupchild called configurationgetchildren child configuration configuration configurable
implements contextualizable interface using bean introspection contextualizable
register custom types jdk like uri checkstyle specific classes use beanutils none types found javalang package cub instance convertutilsbean register types with
creates new localizedmessage instance column number defaults 0 lineno line number associated message bundle name resource bundle contains error messages key key locate translation args arguments translation moduleid id module message associated sourceclass name source message custommessage optional custom message overriding default
gets translated message translated message
sets locale use localization locale locale use localization
find resourcebundle given bundle name uses classloader class emitting message sure get correct bundle bundlename bundle name resourcebundle
returns formatted custom message one configured formatted custom message null custom message
creates xpathelement instance files regular expression names filtered files checks regular expression filtered check classes message regular expression messages moduleid module id query xpath query
returns list nodes matching xpath expression given event event treewalkerauditevent object list nodes matching xpath expression given event
creates xpathelement instance files regular expression names filtered files checks regular expression filtered check classes message regular expression messages moduleid module id query xpath query
matching file name moduleid check name event event true matching
matching xpath query event event true matching
adds comment suppression tag list tags text text tag line line number tag
whether current event matches tag tags event treewalkerauditevent test match tags true event matches tag tags false otherwise
tags string matches format turning checkstyle reporting format turning reporting off text string tag line line number text
determines whether source audit event matches text tag event treewalkerauditevent check true source event matches text tag
constructs tag text text suppression line line number filter suppresswithnearbycommentfilter context illegalargumentexception unable parse expanded text
collects suppression tags comments list sorts list
appends suppressions collection comments full set suppression tags comments set comments
gets influence suppress filter influence format param format influence format parse influenceformat raw influence format text text suppression parsed influence
matching file name check name event event true matching
whether line column match event event process true line column match
constructs suppresselement file name pattern files regular expression names filtered files checks regular expression filtered check classes message regular expression messages modid id lines lines csv values ranges line number filtering columns columns csv values ranges column number filtering
tries extract suppression given line filetext filetext instance lineno line number optional suppression
creates new suppression instance text suppression text lineno suppression line number columnno suppression column number suppressiontype suppression type filter suppresswithplaintextcommentfilter context
indicates whether object equal to one suppression enumeration needed code stays consistent noinspection equalscalledonenumconstant
returns filetext instance created based given file name filename name file filetext instance
returns list suppression instances retrieved given filetext filetext filetext instance list suppression instances
checks whether suppression matches given auditevent event auditevent instance true suppression matches auditevent
finds nearest suppression instance suppress given auditevent nearest suppression suppression scope line column event suppressions suppression instance event auditevent instance suppression instance
returns suppression filters specified source source source suppressions sourcename name source filter chain suppression elements source checkstyleexception error occurs
parses specified source returns suppression loader source source suppressions sourcename name source suppression loader checkstyleexception error occurs
creates new suppressionsloader instance parserconfigurationexception error occurs saxexception error occurs
returns suppress element initialized given attributes attributes attributes xmltag specified inside suppression file suppress element saxexception error occurs
creates mapping local resources dtd ids map local resources dtd ids
returns suppression filters specified file filename name suppressions file filter chain suppression elements specified file checkstyleexception error occurs
returns suppression treewalker filters specified file filename name suppressions file set xpath suppression elements specified file checkstyleexception error occurs
returns suppression treewalker filters specified source source source suppressions sourcename name source set xpath suppression elements specified source checkstyleexception error occurs
returns xpath filter initialized given attributes attributes attributes xmltag specified inside suppression file xpath filter saxexception error occurs
collects suppression tags comments list sorts list
tags string matches format turning checkstyle reporting format turning reporting off text string tag line line number text column column number text
determines whether source audit event matches text tag event treewalkerauditevent check true source event matches text tag
appends suppressions collection comments full set suppression tags comments set comments
indicates whether object equal to one suppression enumeration needed code stays consistent noinspection equalscalledonenumconstant
constructs tag line line number column column number text text suppression tagtype on tag turns checkstyle reporting filter suppressioncommentfilter context illegalargumentexception unable parse expanded text
finds nearest comment text tag matches audit event nearest tag line column event event treewalkerauditevent match tag nearest event
compares position tag file position another tag object tag compare one negative number tag tag 0 position positive number tag tag
adds tag list tags text text tag line line number tag column column number tag reportingon true tag turns checkstyle reporting on
set regular expression specify names files suppress files name file
set regular expression specify message check suppress message message check
set regular expression specify name check suppress checks name check
constructs intrangefilter lower bound upper bound range lowerbound lower bound range upperbound upper bound range
determines whether integer matches csv integer value intvalue integer check true intvalue integer matches csv value
constructs csvfilter csv commaseparated values string value integer range integers range integers form integerinteger 110 note integers must nonnegative pattern csv string numberformatexception component substring contain parsable integer
checks block comment specified class member without modifiers blockcomment block comment start detailast membertype parent token type true block comment specified token without modifiers
node interface definition blockcomment detailast true node interface
node type definition blockcomment detailast true node class interface enum annotation
checks block comment specified token annotation blockcomment block comment start detailast tokentype parent token type true block comment specified token annotation
node constructor blockcomment detailast true node constructor
node class definition blockcomment detailast true node class
checks block comment specified token without modifiers blockcomment block comment start detailast parenttokentype parent token type nexttokentype next token type true block comment specified token without modifiers
node method declaration blockcomment detailast true node method
get next sibling node skipping comment nodes node current node next sibling
node annotation field declaration blockcomment detailast true node annotation field
node enum definition blockcomment detailast true node enum
node type member declaration blockcomment detailast true node method field constructor enum constant annotation field
checks block comment specified token modifiers blockcomment block comment start detailast tokentype parent token type true block comment specified token modifiers
node enum constant blockcomment detailast true node enum constant
node field declaration blockcomment detailast true node field
node annotation definition blockcomment detailast true node annotation
get previous sibling node skipping comments node current node previous sibling
constructs normalized relative path base directory given path basedirectory base path given path relativized path path relativize base directory relative normalized path base directory path path base directory null
puts part line matches regexp given template positions n n number matched part line template string expand linetoplaceintemplate contains expression placed string regexp expression find comment string based template filled given lines
checks whether given string valid name str string check true given string contains valid name
returns new instance class constructor invoke parameters pass constructor type constructor new instance class illegalstateexception exception occurs constructornewinstanceobject
checks whether given string valid identifier str string check true given string contains valid identifier
checks whether string contains integer value str string check true given string integer false otherwise
gets constructor targetclass targetclass constructor returned parametertypes constructor type target class object constructor targetclass illegalstateexception exception occurs classgetconstructorclass
create block comment string content content comment content detailast block comment
returns length string prefix tabs expanded tab counted number characters takes jump next tab stop inputstring input string toidx index string exclusive calculation stops tabwidth distance tab stop position length stringsubstring0 toidx tabs expanded
helper method create regular expression specific flags pattern pattern match flags flags set created regexp object illegalargumentexception unable create pattern object
checks value arg blank either null empty contains whitespace characters value string check true arg blank
returns file name without extension use method guava library reduce checkstyles dependencies external libraries fullfilename file name extension file name without extension
returns whether file extension matches meant process file file checked fileextensions files extensions empty property config makes matches all whether match
returns whether specified string contains whitespace specified index index index check line line check whether whitespace
returns base class name qualified name type fully qualified name cannot null base class name fully qualified name
resolve specified filename uri filename name os file resolved header file uri checkstyleexception failure
count lines columns in last line text text string initiallinescnt initial value lines counter initialcolumnscnt initial value columns counter entrypair first element lines counter second columns counter
validates whether passed string valid pattern not pattern string validate true pattern valid false otherwise
closes stream rethrowing ioexception illegalstateexception closeable closeable object
returns file extension given file name empty string file extension use method guava library reduce checkstyles dependencies external libraries filenamewithextension file name extension file extension given file name empty string file extension
returns length string ignoring trailing whitespace pity trim like method removed trailing whitespace line string process length string ignoring trailing whitespace
create block comment token token token object detailast blockcomment type
gets next sibling specified node node detailnode next sibling
returns name token given id id id token name get token name
returns first child token specified type detailnode javadoc ast node type token type match matching token null match
gets tag name javadoctagsection javadoctagsection get tag name from name javadoctagsections tag
get content javadoc comment javadoccommentbegin javadoc comment ast content javadoc comment
checks whether node contains node specified type among children deep level node detailnode type token type true node contains node type type among children deep level
checks javadoc comment its right place from javadoc util documentation placement comments documentation comments recognized placed immediately class interface constructor method field annotation field declarations see class example method example field example documentation comments placed body method ignored if many documentation comments per declaration statement last one recognized blockcomment block comment ast true javadoc right place hrefhttpsdocsoraclecomjavase8docstechnotestoolsunixjavadochtml javadoc util documentation
gets previous sibling specified node node detailnode previous sibling
gets next sibling specified node specified type node detailnode tokentype javadoc token type next sibling
replace control chars escaped symbols text string process processed string control chars escaped
returns id token given name name name token id get token id
checks block comment content starts javadoc comment identifier blockcommentbegin block comment ast true block comment content starts javadoc comment identifier
checks commentcontent starts javadoc comment identifier commentcontent content block comment true commentcontent starts javadoc comment identifier
gets validtags given piece javadoc textblock javadoc comment process tagtype type validtags were interested standalone validtags given javadoc
gets first child node specified node node detailnode first child
gets content block comment blockcommentbegin block comment ast content block comment
checks class default constructor clazz class check true class default constructor
checks whether class extends automaticbean nonabstract default constructor clazz class check true class may considered valid production class
checks whether class may considered checkstyle module checkstyles modules nonabstract classes either checkstyles checks file sets filters file filters treewalker filters audit listener root module clazz class check true class may considered checkstyle module
gets checkstyles modules directly recursively given packages packages collection package names use loader class loader used load checkstyle package names set checkstyles module classes ioexception attempt read class path resources failed ischeckstylemoduleclass
returns short description token given name name name token id get short description
finds first optional child token detailast root node matches given predicate root root node predicate predicate optional detailast node matches predicate
argument commentrelated type singlelinecomment blockcommentbegin blockcommentend commentcontent type token type true type commentrelated type
returns id token given name name name token id get token id
get token ids available tokentypes array token ids
creates map field name field value public int fields class cls source class unmodifiable name value map
performs action child detailast root node matches given token type root root node type token type match action action perform nodes
creates array map keys quick valuetoname lookup map map source map array map keys
gets value static instance field type int another primitive type convertible type int via widening conversion throw checked exceptions field int extracted object extract int value value field converted type int illegalstateexception field object enforcing java language access control underlying field inaccessible fieldgetintobject
returns name token given id id id token name get token name
checks ast annotated passed annotation method look imports package statements detect passed annotation check ast contains passed annotation taking account fullyqualified names ex javalangoverride override method need called twice name given ast current node annotation annotation name check true contains annotation
checks given ast annotated least one annotation matches given predicate returns ast representing first matching annotation method look imports package statements detect passed annotation ast current node predicate predicate decides annotation matches ast representing annotation
checks ast annotated passed annotation returns ast representing annotation method look imports package statements detect passed annotation check ast contains passed annotation taking account fullyqualified names ex javalangoverride override method need called twice name given ast current node annotation annotation name check ast representing annotation
checks given ast element annotated specified annotations method accepts simple fullyqualified names eg override match javalangoverride override ast type method definition annotations collection annotations look for true given ast element annotated least one specified annotations false otherwise
checks ast annotated annotation ast current node true ast contains least one annotation
gets ast holds series annotations potentially annotated ast returns null passed ast annotation holder ast current node annotation holder
returns whether scope node restricted code block code block method constructor body initializer block lambda body node node check boolean value
determines whether node local variable definition ie declared code block initializer catch parameter node node check whether aast local variable definition
returns whether node contained outer type block node node check boolean value
returns whether node directly contained within enum block node node check directly contained within enum block boolean value
returns scope surrounding block node node return scope scope surrounding block
checks whether ast node specific scope ast node check scope scope value true ast node scope
returns scope specified modifier set amods root node modifier set scope value
returns whether node directly contained within specified block node node check directly contained within specified block tokentype type token boolean value
returns value represented specified string specified type returns 0 types float double int long text string parsed type token type text constant tokentypes double value represented string argument
checks whether parameter receiver parameterdefast parameter node true parameter receiver
creates fullident given type node typeast type node fullident given type
create set class names short class names classnames array class names set class names short class names
returns whether token represents slist part else statement ast token check whether toke represent slist part else
tests whether method definition ast defines equals covariant ast method definition ast test precondition ast tokentypesmethoddef node true ast defines equals covariant
returns accessmodifier based information access modifier taken given token type tokentypesmodifiers modifierstoken token type tokentypesmodifiers accessmodifier
checks whether method void one methoddefast method node true method void one
finds subnode given node minimal line column pair node root tree search subnode minimal line column pair
retrieves names type parameters node node parameterized ast node list type parameter names
returns whether token represents else part else set ast token check whether
returns whether ast represents setter method ast ast check whether ast represents setter method
parses string argument integer long radix specified second argument characters string must digits specified radix text string containing integer representation parsed precondition text contains parsable int radix radix used parsing text type token type text constant tokentypes number represented string argument specified radix
retrieves type parameters node node parameterized ast node list type parameter names
returns whether ast represents getter method ast ast check whether ast represents getter method
checks suppression source given filename exists filename name suppressions file true suppression file exists otherwise false
whether c style comment trailing comment comment check line line comment starts true comment trailing
count regexp matches string literal pattern pattern target string literal count regexp matches
checks literal unicode chars literal string literal true literal unicode chars
checks characters string literal escaped literal current literal true characters string literal escaped
check trail comment present ast token ast current token true trail comment present ast token
check string literal contains unicode control chars literal string literal pattern regexp valid characters true string literal contains unicode control chars
reads file provided checks line separators file file processed ioexception io error occurred reading file provided
sets line separator one crlf lfcr lfcrcrlf system lineseparatorparam line separator set illegalargumentexception specified line separator one crlf lf cr lfcrcrlf system
checks whether content provided reader ends platform specific line separator randomaccessfile reader content check boolean whether content ends line separator ioexception io error occurred reading provided reader
sets tokens occurrence descendant limited limitedtokensparam list tokens ignore
log violations token ast token
log validation one violation ast current token
counts number occurrences descendant tokens ast root token descendants depth maximum depth counted descendants
checks given comment legal singleline matches pattern comment comment check true comment legal
method looks children returns list expressions strings parent ast contains children list expressions strings
returns parent given ast parent one following types annotationdef packagedef classdef enumdef enumconstantdef ctordef methoddef parameterdef variabledef annotationfielddef type literalnew literalthrows typeargument implementsclause dot child ast returns ast parent given
checks whether suppression entry position audit event occurrence position source file line line number source file event occurred column column number source file event occurred entry suppression entry true suppression entry position audit event occurrence position source file
get annotation values ast annotation token list values
method removes checkstyle prefix checkstyle check name exists checkname name check check name without prefix
returns literal string expression represented ast ast ast node expr java string represented given ast expression empty string expression complex illegalargumentexception ast invalid
checks whether suppression entry position audit event occurrence position source file line line number source file event occurred column column number source file event occurred entry suppression entry true suppression entry position audit event occurrence position source file
returns annotation values represented ast ast ast node expr annotationarrayinit list java string represented given ast expression annotation array initializer illegalargumentexception ast invalid
returns default alias source name check source name lower case dotted prefix check suffix removed sourcename source name check generally class name default alias given check
returns nth child ast node ast ast node get child index index child get nth child given ast node null none
checks suppression check given source name location last file processed event audit event whether check given name suppressed given source location
returns java identifier represented ast ast ast node ident java identifier represented given ast subtree illegalargumentexception ast invalid
returns alias source name check alias explicitly registered via registeraliasstring string alias returned otherwise default alias used sourcename source name check generally class name current alias given check
registers list source name aliases based commaseparated list sourcealias items compuppycrawltoolscheckstylecheckssizesparameternumbercheck paramnum aliaslist list commaseparated alias assignments
constructs new suppression region entry checkname source name suppressed check firstline first line suppression region firstcolumn first column suppression region lastline last line suppression region lastcolumn last column suppression region
get target annotation ast ast node get child get target annotation
logs translation file missing filepath file path filename file name
searches specific resource bundle set resource bundles bundles set resource bundles targetbundle target bundle search for guavas optional resource bundle present target bundle found
compares th specified key set key sets given translation files arranged map missing keys reported filekeys map translation files key sets keysthatmustexist set keys compare with
helper method log exception exception exception occurred file file could processed
creates resourcebundle object specific base name common files extension basename bundle base name path common path files included resource bundle extension common extension files included resource bundle
checks whether resource bundle contains file name matches file name regexp filenameregexp file name regexp true resource bundle contains file name matches file name regexp
checks existence translation files resource bundle name translation file begins base name resource bundle followed language code country variant optional ends extension suffix bundle resource bundle
validates correctness user specified language codes check languagecodes user specified language codes check
creates new translationcheck instance
checks resource files bundle consistency regarding keys files bundle must key set case error message posted giving information key misses file bundle resource bundle
checks whether user specified language code correct is contained available locales userspecifiedlanguagecode user specified language code true user specified language code correct
checks existence default translation file resource bundle bundle resource bundle
groups set files bundles files names match base name regexp pattern grouped files set files basenameregexp base name regexp pattern set resourcebundles
extracts base name the unique prefix resource bundle translation file name example messages base name messagesproperties messagesdeatproperties messagesenproperties etc filename fully qualified name translation file extracted base name
loads keys specified translation file set file translation file set object holds loaded keys
extracts path file name contains path example file nam xyzmessagesproperties method return xyz filenamewithpath file name contains path file path
returns name translation file absent resource bundle guavas optional missing translation bundle resource bundle languagecode language code name translation file absent resource bundle guavas optional missing translation
sets language codes required translations check translationcodes separated list language codes
get source file name source file name
checks method definition public static void mainstring method method definition node
whether type javalangstring typeast type check true type javalangstring
checks method name quotmainquot method methoddef node true check passed false otherwise
checks method string string param method methoddef node true check passed false otherwise
sets current package packagedef node package definition
checks return type void method methoddef node true check passed false otherwise
inner class change current class name classdef node class definition
checks method final static modifiers method methoddef node true check passed false otherwise
checks skip current param due ignoreprimitivetypes option paramdef tokentypesparameterdef parameterdef true param skipped
checks parameters method ctor method method ctor check
checks given parameter final param parameter check
puts value properties key specified noinspection useofpropertiesashashtable
method returns regular expression pattern given key name keyname key name look regular expression pattern given key name
method returns line number key detected checked properties files first filetext filetext object contains lines process keyname key name look line number first occurrence key found properties file 1 returned
checks bytes equal byte representation line separator bytes bytes array check bytes equal byte representation line separator
checks characters line around columnno correct number spaces return true following conditions must met character columnno first line character columnno separated whitespaces previous nonwhitespace character character columnno separated one whitespace previous nonwhitespace character validatecomments disabled previous text end block comment line line file examine columnno column position line examine true text columnno separated correctly previous token
examines every sibling child node violations node node start examining
get node owns tokentypesarraydeclarator arraydeclarator sequence ast tokentypesarraydeclarator arraydeclarator node owner node
gets position token place possible redundant whitespace ast node representing token position token
checks unwanted whitespace visited node ast visited node whitespacecolumnno column number possible whitespace whitespacelineno line number possible whitespace true whitespace found
gets previous node tokentypesindexop indexop token usage getpositionafter method simplified copy getarraydeclaratorpreviouselement method ast tokentypesindexop indexop node previous node text order
searches parameter node type node returns last node extended structure ast subject node type node
finds previous node text order array declarator parent type tokentypestype type ast array declarator node parent parent node previous node text order
returns proper argument getpositionafter method token tokentypesarraydeclarator arraydeclarator tokentypesrbrack rbrack tokentypesident ident array type definition literal ast tokentypesarraydeclarator arraydeclarator node previous node text order
gets leftmost token identifier ast token possibly possessing identifier leftmost token identifier
visited ast node returns node checked followed whitespace ast visited node node ast
whether token allowed multiple empty lines before ast ast check true token allowed multiple empty lines before
check token preceded javadoc comment token token check true token preceded javadoc comment
get list empty lines ast ast check list line numbers empty lines
checks token empty two previous lines multiple empty lines allowed token detailast token true token empty two lines allowmultipleemptylines false
process package ast token nexttoken next token
whether ast class member block asttype ast check true ast class member block
checks token empty preprevious line token detailast token true token empty lines before
process import ast token nexttoken next token
check token comment ast ast node true given ast comment
log violation case multiple empty lines inside constructor initialization block method ast ast check
checks token empty line before token token true token empty line before
variable definition type field variabledef variable definition true variable definition type field
checks whether token placement violates policy empty line fields detailast token analyzed true policy violated warning raised false otherwise
get list empty lines log emptylines list empty lines list empty lines log
process variable ast token nexttoken next token
checks token empty line after token token true token empty line after
checks whether empty lines within specified line range line numbering started 1 parameter values startline number first line range endline number second line range true found blank line within range false otherwise
process token representing left parentheses ast token representing left parentheses
process token representing right parentheses ast token representing right parentheses
checks semicolon empty initializer condition semicolonast detailast semicolon true semicolon empty initializer condition
test given detailast part allowed empty constructor ctor block ast detailast test parenttype token type asts parent true ast makes part allowed empty constructor block
check given ast part double brace initializer omit checking next token separated whitespace see hrefhttpsgithubcomcheckstylecheckstylepull2845 pr2845 information function needed ast ast check true omit checking next token false otherwise
whether belongs foreach parenttype parent true current token foreach token
empty block ast ast parenttype parent true block empty
check happens anoninners currenttype token nextchar next symbol true end anon inner class
tests given detailast part empty block example empty block might look like following public void mymethodint val above method body empty block ast detailast test parenttype token type asts parent match parent token type were looking match true ast makes part empty block contained match token type node
test given detailast part empty block example empty block might look like following class foo ast ast detailast test true ast makes part empty block contained match token type node
ast target check ast ast currenttype type ast true ok skip validation
checks loop empty ast ast detailast test parenttype token type asts parent true ast makes part allowed empty loop block
whether belongs cases defaults parenttype parent true current token case default tokens
array initialization currenttype current token parenttype parent token true current token inside array initialization
test given detailast part allowed empty method block ast detailast test parenttype token type asts parent true ast makes part allowed empty method block
check checked next token separated current whitespace explanation method needed identical one included shouldcheckseparationfromprevioustoken method ast current ast nextchar next character true checked next token separated whitespace false otherwise
check given ast part double brace initializer omit checking previous token separated whitespace ast ast check true omit checking previous token false otherwise
checks parens inside tokentypesexpr tokentypesquestion tokentypesmethodcall ast token check
checks token follows empty iterator ast token check whether token follows empty iterator
returns array acceptable tokens acceptabletokens
checks whether acceptabletokens contains given ast ast token check true ast acceptabletokens
checks whether tokentypesrparen closing paren tokentypestypecast ast tokentypesrparen check true ast closing paren tokentypestypecast
checks token precedes empty initializer ast token check whether token precedes empty initializer
checks parens tokentypesresourcespecification ast token check
checks parens token may contain parens eg tokentypesenumconstantdef tokentypesannotation tokentypesliteralsynchronized tokentypesliteralnew tokentypeslambda ast token check
checks parens tokentypesliteralfor ast token check
initializes sorts acceptabletokens make binary search possible
process singlegeneric ast token line line content position
checks token end generics ast token check
process nested generics ast token line line content position
generic method reference ast ast true generic method ref
returns whether specified string contains whitespace specified indices fromindex index start search from inclusive toindex index finish search exclusive line line check whether whitespaces or nothing
checks token start generics ast token check
checks whether given character valid right generic ends charafter character check checks given character valid
checks whether token followed whitespace targetast ast token line line associated ast token true ast token followed whitespace
returns length code without comments blank lines openingbrace block opening brace closingbrace block closing brace number lines code current block
check counters report violations counter method counters check ast report errors against
creates interface scopedefinition surrounding scope definition class enum etc count methods for
utility reporting maximum exceeded max maximum allowed value value actual value msg message log takes two arguments value maximum ast ast associate message
checks scope definition check method found inside scope class enum etc methoddef method analyze true method part latest scope definition counted
increments counter one supplied scope scope scope counter increment
gets value scope counter scope scope counter get value value scope counter
determine visibility modifier raise corresponding counter method methodsubtree abstractsyntaxtree
process end statement list ast token representing statement list
process start member definition ast token representing member definition
process end member definition ast token representing member definition
creates new member context ast member ast node
determine whether ignore number parameters method ast token process true overridden method number parameters ignored false otherwise
construct instance handler given indentation check abstract syntax tree parent handler indentcheck indentation check ast abstract syntax tree parent parent handler
check indentation level conditional expression
creates new instance nested structure base parents level offsets offsets parents level
adds one acceptable indentation level base class add new indentations to additions new acceptable indentation new acceptable indentation level instance
combines 2 acceptable indentation level classes base class add new indentations to addition new acceptable indentation new acceptable indentation level instance
gets list registered handler types int tokentype types
creates handlerfactory
returns true type form tokentypes handled type type tokentypes true handler registered false otherwise
create new instance handler methodcall indentcheck indentation check ast ast handle parent handler parent ast new instance
registers handler type type tokentypes handlerclass handler register type handler class object
get handler ast indentcheck indentation check ast ast handle parent handler parent ast expressionhandler ast
check indentation conditional expression
construct instance handler given indentation check abstract syntax tree parent handler indentcheck indentation check ast abstract syntax tree parent parent handler
determines if statement part else clause line true if part else false otherwise
construct instance handler given indentation check abstract syntax tree parent handler indentcheck indentation check ast abstract syntax tree parent parent handler
whether statement kind definition method class etc previoussibling statement check true statement kind definition
returns first token distributed previous statement comment comment comment check first token distributed previous statement comment
checks whether previous statement comment distributed return statement commentprevioussibling previous sibling comment true previous statement comment distributed return statement
handles comment placed within empty case block note comment placed end empty case block checkstyles limitations clearly detect user intention explanation target below case assume violation single line comment within empty case block indentation level lower indentation level next case token example case optionone violation case optiontwo prevstmt previous statement comment single line comment nextstmt next statement
get column number code starts lineno line number get column number in column number code starts
whether statement always curly brackets previoussibling statement check true statement always curly brackets
logs comment indentation level next previous statement comment comment nextstmt next statement prevstmt previous statement
handles fall through single line comment note fall through similar comments indentation level next previous statement example case optionone int somevariable 1 fall ok case optiontwo int 5 break case optionone int somevariable 1 init variable ok case optiontwo int 5 break prevstmt previous statement comment single line comment nextstmt next statement
checks current comment trailing comment comment comment check true current comment trailing comment
checks current single line comment trailing comment eg double d 314 comment singlelinecomment tokentypessinglelinecomment single line comment true current single line comment trailing comment
finds start token method call chain root root token line start token method call chain
handles comment placed within empty code block note comment placed end empty code block checkstyles limitations clearly detect user intention explanation target below case assume violation single line comment within empty code block indentation level lower indentation level closing right curly brace example a true violation comment comment check nextstmt next statement
preorder traverse abstract syntax tree find previous statement comment previous statement comment found traverse finished comment current statement previous statement comment null comment previous statement
checks comment next code statement or previous code stmt like case switch block indented level eg comment indentation level int x 10 comment different indentation level int x1 5 boolean bool true indentation level comment tokentypessinglelinecomment single line comment prevstmt previous code statement nextstmt next code statement true comment next code statement indented level
finds token begins line root root token line token begins line
whether comment might used next block multiblock structure endblockstmt end current block true comment might used next block multiblock structure
checks whether use object reference invoke objects method line root root token line true use object reference invoke objects method line
checks whether comment placed empty code block example empty code block note method treat empty case blocks prevstmt previous statement nextstmt next statement true comment placed empty code block
gets previous casetoken comment parentstatement comments parent statement previous casetoken null previous casetoken absent
whether ast node starts block root ast node check true ast node starts block
checks whether previous statement comment method call chain string concatenation statement distributed two ore lines comment comment check true previous statement distributed expression
checks current comment block trailing comment eg double d 314 comment comment double d 185 blockcomment tokentypesblockcommentbegin block comment begin true current comment block trailing comment
checks whether previous statement comment distributed throw statement commentprevioussibling previous sibling comment true previous statement comment distributed throw statement
get token start counting number lines add distance aim from checkedstatement checked statement token start counting number lines add distance aim from
checks comment indentations surrounding code eg comment ok double d 314 comment not ok double d1 50 comment comment check
returns next statement comment comment comment next statement comment
checks whether comment fall through comment example case optionone int somevariable 1 fall case optiontwo int 5 break prevstmt previous statement nextstmt next statement true comment fall through comment
count number empty lines statements startstatement start statement endstatement end statement number empty lines statements
checks whether previous statement comment distributed two lines comment comment check true previous statement comment distributed two lines
gets comments previous statement switch block comment tokentypessinglelinecomment singleline comment comments previous statement null previous statement absent
whether ast comment ast ast check true ast comment
checks whether comment placed end code block nextstmt next statement true comment placed end block
returns previous statement comment comment comment previous statement comment
get message key depending comment type comment comment process message key
checks whether case block empty nextstmt previous statement prevstmt next statement true case block empty
finds previous statement comment uses root token line searching comment comment root root token line previous statement comment null previous statement found
gets previous statement comment placed immediately case parentstatement comments parent statement comments previous statement null previous statement absent
checks whether checked statement previous line ignoring empty lines lines contain comments currentstatement current statement checkedstatement checked statement true checked statement line previous current statement ignoring empty lines lines contain comments
handles comment placed end non empty code block note single line comment placed end non empty block comment indentation level previous statement example a true int b 1 comment prevstmt previous statement comment comment check nextstmt next statement
construct instance handler given indentation check abstract syntax tree parent handler indentcheck indentation check ast abstract syntax tree parent parent handler
construct instance handler given indentation check abstract syntax tree parent handler indentcheck indentation check ast abstract syntax tree parent parent handler
check indentation parameters for loop
construct instance handler given indentation check abstract syntax tree parent handler indentcheck indentation check ast abstract syntax tree parent parent handler
construct instance handler given indentation check abstract syntax tree parent handler indentcheck indentation check ast abstract syntax tree parent parent handler
creates handler name class according ast type ast abstract syntax tree handler name class
get starting column first line starting column first line
construct instance handler given indentation check abstract syntax tree parent handler indentcheck indentation check ast abstract syntax tree parent parent handler
gets indentation level expected children indentation level expected children
construct instance handler given indentation check name abstract syntax tree parent handler indentcheck indentation check name name handler ast abstract syntax tree parent parent handler noinspection weakeraccess
get right curly brace portion expression handling right curly brace expression
check indentation level child list statements
check indentation left curly brace
check indentation right curly brace
check indent top level token
checks indentation resources parameters try resources resourcesspecast resource specification ast
construct instance handler given indentation check abstract syntax tree parent handler indentcheck indentation check ast abstract syntax tree parent parent handler
method check indentation left paren right paren method checks whether either start line method takes care line wrapping strict condition well parenast ast check subtype name used log message
method check indentation try resources children takes account forcestrictcondition value logging errors example usage would include checking try parenthesis try resources ast ast check subtype string representing child type expectedident expected indent level
construct instance handler given indentation check abstract syntax tree parent handler indentcheck indentation check ast abstract syntax tree parent parent handler
get first ast specified method call ast method call first ast specified method call
construct instance handler given indentation check abstract syntax tree parent handler indentcheck indentation check ast abstract syntax tree parent parent handler
returns method constructor name fooarg foo foobararg bar superarg super tokentypesident node method call tokentypessuperctorcall otherwise
checks ast2 chained method call starts level ast1 ends words right paren ast1 level ast2 valuemethodone argument1 methodtwo argument2 ast1 ast1 ast2 ast2 true ast2 begins level ast1 ends
first chained method call moved next line true chained class wrapped
check indentation level throws clause
gets start line method excluding annotations required current tokentypesmethoddef may always start seen httpsgithubcomcheckstylecheckstyleissues3145 mainast method definition ast start column position method
construct instance handler given indentation check abstract syntax tree parent handler indentcheck indentation check ast abstract syntax tree parent parent handler
creates handler name class according ast type ast abstract syntax tree handler name class
construct instance handler given indentation check abstract syntax tree parent handler indentcheck indentation check expr abstract syntax tree parent parent handler
construct instance handler given indentation check abstract syntax tree parent handler indentcheck indentation check ast abstract syntax tree parent parent handler
checks slist node placed line casegroup node true slist node places line casegroup node
determine expression handling block parent true does false otherwise
construct instance handler given indentation check abstract syntax tree parent handler indentcheck indentation check expr abstract syntax tree parent parent handler
construct instance handler given indentation check name abstract syntax tree parent handler indentcheck indentation check ast abstract syntax tree parent parent handler
check indentation expression synchronized on
construct instance handler given indentation check abstract syntax tree parent handler indentcheck indentation check ast abstract syntax tree parent parent handler
check indentation switch expression
construct instance handler given indentation check abstract syntax tree parent handler indentcheck indentation check ast abstract syntax tree parent parent handler
construct instance handler given indentation check abstract syntax tree parent handler indentcheck indentation check ast abstract syntax tree parent parent handler
construct instance handler given indentation check abstract syntax tree parent handler indentcheck indentation check ast abstract syntax tree parent parent handler
check indentation level conditional expression
construct instance handler given indentation check abstract syntax tree parent handler indentcheck indentation check ast abstract syntax tree parent parent handler
returns column number first nonblank char specified column specified line 1 char doesnt exist lineno number line search columnno number column search column number first nonblank char specified column specified line 1 char doesnt exist
construct instance handler given indentation check abstract syntax tree parent handler indentcheck indentation check ast abstract syntax tree parent parent handler
check indentation conditional expression
noinspection methodwithmultiplereturnpoints
construct instance handler given indentation check abstract syntax tree parent handler indentcheck indentation check ast abstract syntax tree parent parent handler
log error message line line number error found key message describes error args details message javatextmessageformat
construct instance handler given indentation check abstract syntax tree parent handler indentcheck indentation check ast abstract syntax tree parent parent handler
find set lines given subtree lines set lines add tree subtree examine allownesting whether allow nested subtrees
log indentation error ast expression caused error subtypename type expression actualindent actual indent level expression
check indentation set lines lines set lines check indentlevel indentation level firstlinematches whether first line match firstline first line whole expression
get first line given expression startline line starting tree expression find first line first line expression
searches given subtree including given node token represents first symbol subtree file ast root subtree search performed token occurs first file noinspection weakeraccess
check indentation left parenthesis parenthesis check
log child indentation error line expression caused error actualindent actual indent level expression expectedindent expected indent level expression
check indentation right parenthesis parenthesis check left parenthesis associated arparen
check indentation level expression subtree tree expression subtree check indentlevel indentation level firstlinematches whether first line match allownesting whether subtree nesting allowed
get indentation amount handler performance reasons value cached first time method called indentation amount computed stored calls stored value returned expected indentation amount noinspection weakeraccess
check indentation single line linenum number line check colnum column number starting indentlevel indentation level mustmatch whether indentation level must match
get column number start given expression expanding tabs spaces process ast expression find start column number start expression
log indentation error ast expression caused error subtypename type expression actualindent actual indent level expression expectedindent expected indent level expression
get start specified line line specified line number start specified line
construct instance handler given indentation check name abstract syntax tree parent handler indentcheck indentation check typename name handler expr abstract syntax tree parent parent handler
check indentation level modifiers
check indent level children specified parent expression parentnode parent whose children checking tokentypes token types check startindent starting indent level firstlinematches whether first line needs match allownesting whether nested children allowed
checks indentation wrapped lines including firstnode lastnode firstnode first node start examining lastnode last node examine inclusively wrappedindentlevel indentation wrapped lines use startindent indentation first line wrapped lines used ignorefirstline test first lines indentation checked not
check indentation method type
checks variabledef node array declaration variabledef current variabledef true variabledef node array declaration
construct instance handler given indentation check abstract syntax tree parent handler indentcheck indentation check ast abstract syntax tree parent parent handler
returns semicolon variable definition statement variabledef ast node type tokentypesvariabledef ast node type tokentypessemi
get column number start given expression expanding tabs spaces process ast expression find start column number start expression
returns next curnode node curnode current node next curnode node
gets next node line firstnodesonlines map unless next line case returns last line firstnodesonlines navigablemap lines first nodes node node find next node line line number next line map
checks line wrapping expressions definitions firstnode first node start examining lastnode last node examine inclusively indentlevel indentation wrapped lines use
checks line end scope handles occurrences close braces close parenthesis line lastannotationnode last node annotation node node indicating begin checking true nodes last annotation node end scope nodes false otherwise
get start specified line line specified line number start specified line
finds first nodes line puts map firstnode first node start examining lastnode last node examine inclusively navigablemap contains lines numbers key first nodes lines values
checks line wrapping expressions definitions firstnode first node start examining lastnode last node examine inclusively indentlevel indentation wrapped lines use startindent indentation first line wrapped lines used ignorefirstline test first lines indentation checked not
get start line given expression ast expression find start line start line given expression
logs warning message indentation incorrect currentnode current node probably invoked error currentindent correct indentation
builds enum value boolean val value enum instance noinspection booleanparameter
checks line wrapping annotations atnode atclause node firstnodesonlines map contains first nodes values line numbers keys indentlevel line wrapping indentation
collects classes defined source file required avoid false alarms local vs javalang classes ast class def token
perform processing import token ast import token
checks illegal instantiations classname instantiated class may may qualified fully qualified class name classname null instantiation classname ok
perform processing package token ast package token
check import statements classname name class value illegal instantiated type
processes one collected new tokens walking tree finished newtokenast new token
check type package classname class name pkgnamelen package name illegal illegal value true type package
collects new token ast new token
standard class classname class name illegal illegal value true type standard
set list ignore method names methodnames array ignored method names
checks current method ignorable due checks properties methoddef tokentypesmethoddef methoddef true method ignorable
set list illegal classes classnames array illegal exception classes
construct instance default values
sets regular expression pattern ignored strings ignorestringsregexp regular expression pattern ignored strings noinspection weakeraccess
analyses path ast root given ast occurrences token types ignoreoccurrencecontext ast node start searching towards root node whether path root node ast contains one token type ignoreoccurrencecontext
adds set tokens check interested in strrep string representation tokens interested
finds exception types current catch need till different exception types one catch parenttoken parent node types type bor list contains exception types current catch
set list illegal classes classnames array illegal exception classes
determines whether ast method definition check 0 parameters ast method definition ast true method ast method check
determines whether super literal call super method check literalsuperast ast node super literal true ast call super method check
method arguments methodcalldotast detailast true parameters found
constructs stack node method definition ast ast method definition
name method ast method ast true method name
determines whether super call overriding method ast ast node dot operator super call true super call overriding method
checks given node contains numeric constant zero expr node check true given node contains numeric constant zero
examine char literal initializing default value exprstart expression true literal initialized zero symbol
checks cases skipped assignment local variable final variables ast variable def ast true case need skipped
determine given type numeric type type code type check true its numeric type tokentypes
checks explicit initializations made false 0 0 ast token checked explicit initializations
returns ast return statement boolean literal returns true iff ast represents return truefalse ast syntax tree check ast return statement boolean literal
checks token type literal true false tokentype tokentype true iff tokentype literaltrue literalfalse
returns ast return statement boolean literal compound statement contains return statement returns true iff ast represents return truefalse return truefalse ast syntax tree check ast return statement boolean literal
token literalif else following ast token checked true token literalif else following else false
check given parameter definition multiple type catch parameterdefast parameter definition true multiple type catch false otherwise
checks whether scope node restricted specific code block node node blocktype block type true scope node restricted specific code block
determines whether enhanced forloop variable checked not ast ast compare true enhanced forloop variable checked
check variables same ast1 variable compare ast2 variable compare true variables same otherwise false
determines whether ast descendant abstract native method ast ast check true ast descendant abstract native method
check variables loop ast1 variable compare ast2 variable compare true variables loop
find class constructor enum method field defined ast variable want find scope defined ast class constructor method defined
update current scope data uninitialized variable according specific scope data scopeuninitializedvariabledata variable specific stack uninitialized variables
gets final variable candidate ast ast ast optional finalvariablecandidate ast scopestack
returns last child token makes specified type contains containtype branch ast token tested childtype token type match containtype token type present branch matching token null match
insert parameter topmost scope stack ast variable insert
insert variable topmost scope stack ast variable insert
removes final variable candidate stack ast variable remove
token casegroup another case following ast token checked true token casegroup another case following else false
update assigned variables temporary stack
checks whether variable declared outside loop used inside loop example int x int 0 j 0 j i x 5 variable variable true variable declared outside loop used inside loop
determines identifier assignment conditions assigned already assigned ident identifier candidate final local variable candidate
whether final variable candidate removed list final local variable candidates scopedata scope data variable ast variable ast true variable removed
searches final local variable candidate ast scope ast ast optional finalvariablecandidate
store uninitialized variables temporary stack future use
update current scope data uninitialized variable according whole scope data prevscopeuninitializedvariabledata variable previous stack uninitialized variables noinspection methodparameternamingconvention
checks modifiers contain verifiable type modifiers parent node modifiers true method variable verified
checks current methods return type variables type verifiable according membermodifiers option methodorvariabledef methoddef variabledef ast node true member verifiable according membermodifiers option
checks given type arguments parameters type node check
checks extends implements statement clause detailast either tokentypesextendsclause tokentypesimplementsclause
checks return type given method methoddef method check
returns true method checked false ast method def check true check method
returns true given class name one illegal classes else false classname class name check true given class name one illegal classes matches abstract class names pattern
creates new instance check
set list member modifiers of methods fields checked modifiers string contains modifiers
set list ignore method names methodnames array ignored method names noinspection weakeraccess
checks type parameters node node node check
checks current import star import eg import javautil importast tokentypesimport import true star import
checks identifier given type type node check
gets imported types hrefhttpsdocsoraclecomjavasespecsjlsse8htmljls6htmljls67 canonical name importast tokentypesimport import imported canonical types name
checks imported type as static star imports supported check type consideration type illegal due checks options puts violation it importast tokentypesimport import
checks super type implemented interfaces given type typedef class interface check
extends illegal class names set via imported short type name canonicalname hrefhttpsdocsoraclecomjavasespecsjlsse8htmljls6htmljls67 canonical name imported type
gets next node syntactical tree child current node sibling current node sibling parent current node currentnodeast current node considering subtreerootast subtree root current node bypassing current node reached root subtree method returns null
checks type given variable variabledef variable check
checks upper lower bounds given type type node check
checks type parameters parameterdef parameter list check
checks type type argumentsparameters given method parameter variable method callreference ast node check
set list illegal variable types classnames array illegal variable types noinspection weakeraccess
checks type arguments node node node check
set whether match case sensitive caseinsensitive true match case insensitive
updates format based values formatstring ignorecase
set format specified regular expression format string value orgapachecommonsbeanutilsconversionexception unable parse format
setter message property message custom message used report violations
returns directory name file in directory name
tests given detailast surrounded parentheses short ast previous sibling whose type tokentypeslparen next sibling whose type tokentypesrparen ast detailast check surrounded parentheses true ast surrounded parentheses
returns specified string chopped maxquotedlength plus ellipsis length string exceeds maxquotedlength value string potentially chop chopped string string longer maxquotedlength otherwise string
check given token type found array token types type token type tokens array token types search true type found tokens
tests given lambda node single parameter defined type surrounded parentheses ast detailast whose type tokentypeslambda true lambda single parameter defined type surrounded parentheses
find child given ast type tokentypeexpr ast parent expressions find child given ast
get variables initialized init part loop ast loop token set variables initialized loop
determines variable specific loop change inner loop body ast loop set variable name managed
get variables loop iterating part change every loop ast loop literaltokentypesliteralfor names variables change iterating part
push current variables stack paramdef foreach clause variable
push current variables stack ast definition
pops given number variables currentvariables count count variables popped currentvariables
pops variables stack ast definition
check ident parameter ast ident check
return token type passed tokentype argument found returns 1 ast root node tokentype tokentype processed token desired token found else null
determines ast valid equals method implementation ast ast check true code ast equals method
determines ast formal param type object paramnode ast check true firstchild parameter object type
determines ast valid hashcode method implementation ast ast check true code ast hashcode method
traverse tree field frames check equals method calls frame check method calls in
process classdef methoddef literalif literalfor literalwhile literaldo literalcatch literaltry ctordef enumdef enumconstantdef ast processed ast
whether field variable specified class string type objcalledon field variable specified class check classname name class check in true field variable specified class string type
check whether field declared method call case methods initialization blocks field field check objcalledon object equals method called on true field declared method call
get nearest parent frame classdef enumdef enumconstdef frame start search from nearest parent frame classdef enumdef enumconstdef
add method call current frame processed methodcall methodcall ast
determine whether equals method called field string type objcalledon object ast true object string type
looks safe token combinations argument expression branch expr argument expression true child matches set tokens false
determine whether literalnew anonymous class definition leave frame in ast literalnew ast
determine whether literalnew anonymous class definition add frame case ast literalnew ast
determine whether slist begins block determined braces ast slist ast
determine whether slist begins block determined braces add frame case ast slist ast
check whether method call violated methodcall method call check
add field fieldframe field ast field
determines whether fieldframe contains field name name field check true fieldframe contains instance field field
get field type field get type from type field
verify method call one argument methodcall methodcall detailast true method call one argument
whether field variable instance string type objcalledon field variable instance check true field variable instance string type
whether field variable string type objcalledon field variable check true field variable string type
skips inner assign portion argument expression currentast current token argument expression next relevant token
tests whether methods first parameter object methoddefast method definition ast test precondition ast tokentypesmethoddef node true ast first parameter type object
converts given ast node string representation ast node represented string string representation ast node
check ident parameter ast ident check
creates new parameter set given method ast method process
creates new set parameters store old one stack ast method process
process given modifiers appropriate given state statestaticvariabledef stateinstancevariabledef statectordef statemethoddef updates states appropriate logs violation modifierast modifiers process state current state true modifierast valid given state false otherwise
checks whether identifier references field already defined class fielddef field definition true identifier references field already defined class
checks given modifiers valid substate given state scope updates substate else logs violation modifiersast modifiers process state current state isstatevalid main state given modifiers valid
processes constructor ast constructor ast
collects tokens specific type starting current ast node ast ast node tokentype token type set tokens specific type starting current ast node
processes modifiers ast ast modifiers
gets first ast node inside block variable usage met inside block not declaration block ast node represents block variable variable checked content block variable usage met inside block not declaration return first ast node block otherwise null
gets first ast node inside for dowhile blocks variable usage met inside block not declaration block ast node represents for dowhile block variable variable checked content block variable usage met inside block not declaration return first ast node block otherwise null
checks variable operator declaration instance boolean b true b variable b declaration operator if operator ast node represents operator variable variable checked content operator true operator contains variable declaration otherwise false
returns distance variable usage child node childnode child node varident variable variable identifier currentdisttovarusage current distance variable usage distance variable usage child node
calculates distance declaration variable first usage single scope semicolonast regular node ast checked content checking variable variableidentast variable distance calculated for entry contains expression variable usage distance
processes statements usage variable detect sequence initialization methods variableusageast detailast expression uses variable named variablename variablename name considered variable true statements declaration usage variable initialization methods
checks ast node contains given element parent node ast ast ast element checked content ast node true ast element found ast node otherwise false
calculates distance declaration variable first usage multiple scopes ast regular node ast checked content checking variable variable variable distance calculated for entry contains expression variable usage distance
gets first ast node inside switch block variable usage met inside block not declaration block ast node represents switch block variable variable checked content block variable usage met inside block not declaration return first ast node block otherwise null
checks entrance variable contained ignored pattern variable variable checked content ignored pattern true variable found otherwise false
get name instance whose method called methodcallast detailast methodcall name instance
gets first ast node inside trycatchfinally blocks variable usage met inside block not declaration block ast node represents trycatchfinally block variable variable checked content block variable usage met inside block not declaration return first ast node block otherwise null
searches variable usages starting specified statement variableast variable used statementast detailast start searching from entry contains list found expressions use variable distance specified statement first found expression
finds subnode given node maximum line column pair node root tree search subnode maximum line column pair
checks case group sibling contain default switch casegroupast first case group check true default switch found
collects variable declarations ast variable token frame current frame
returns code block definition token current identifier ident ident token code block definition token current identifier null code block definition found
whether ast definition anonymous class ast ast process true ast definition anonymous class
whether set contains method definition name number parameters set set definitions ident specified method call ident ast true set contains definition name number parameters
checks whether value assigned field value assigned final field constructor block method block value assignment performed non final field ast identifier token true value assigned field
whether set contains declaration text specified ident ast declared proper position set set declarations ident specified ident ast true set contains declaration text specified ident ast declared proper position
ends parsing ast declarations framestack stack containing frametree built ast ast parsed
checks whether given instance member final modifier instancemember instance member class true given instance member final modifier
check whether frame contains given method methodtofind ast method find true method name number parameters found
find frame containing declaration frame parent frame searching in name ident ast declaration find lookformethod whether looking method name abstractframe containing declaration null
collects tokens specific type starting current ast node ast ast node tokentype token type set tokens specific type starting current ast node
checks given ident method call field name requires explicit this qualifier ast ident check
gets name nearest parent classframe name nearest parent classframe
constructor invocable via super subclasses parent parent frame ident frame name ident
checks whether field usage frame inside constructor frame frame frame field used true field usage frame inside constructor frame
collects tokens equal current token starting current ast node line number lower equal end line number ast ast node token token endlinenumber end line number set tokens equal current token starting current ast node line number lower equal end line number
checks whether user arranges this variable method constructor block own currentframe current frame ident ident token true user arranges this variable method constructor block own
checks whether overlapping method constructor argument takes place ast identifier true overlapping method constructor argument takes place
whether declaration located checked ast ast1 ident ast declaration ast2 ident ast check true declaration located checked ast
whether method definition name number parameters ident specified method call ident ast ast ast method definition compare with true method definition name number parameters method call
returns frame field declared given field used without this null otherwise ast field definition ast token parenttype type parent frame field declared given field used without this null otherwise
whether definition correspondent ident ident ident ast check ast ident ast definition check true ast correspondent ident
creates anonymous class frame parent parent frame framename name frame
returns token ends code block blocknameident block name identifier blockstarttoken token starts block token ends code block
find class frame containing declaration name ident ast declaration find lookformethod whether looking method name abstractframe containing declaration null
checks whether current variable returned method currentframe current frame ident variable ident token true current variable returned method
creates new instance classframe parent parent frame ident frame name ident
checks whether field referenced static context ident ident token true field referenced static context
checks token lambda parameter ast detailast value token checked true token lambda parameter
collects tokens specific type starting current ast node line number lower equal end line number ast ast node tokentype token type endlinenumber end line number set tokens specific type starting current ast node line number lower equal end line number
check whether frame contains given name nametofind ident ast name were looking for lookformethod whether looking method name whether found
checks whether overlapping local variable takes place ast identifier true overlapping local variable takes place
returns frame method declared given method used without this null otherwise ast ident ast name check frame method declared given method used without this null otherwise
helper method log localizedmessage ast node get line id column numbers associated message msgkey key locale message format frame class frame violation found
tests whether given ast used assignment while idiom string line line bufferedreaderreadline null process line assignment inside condition problem here assignment surrounded extra pair parentheses comparison null chance intention write line readerreadline ast assignment ast whether context assignment ast indicates idiom
tests whether provided ast one given contexts ast ast start walking towards root contextset contexts test against whether parents nodes ast match one allowed type paths
determines ast body flow control statement without braces example statement would y 0 x y leads following ast structure literalif expr test expr body need ensure ast body test ast assignment operator ast whether ast body flow control statement
checks ast comparison operator ast ast check true iff ast comparison operator
creates new lambda context places old one stack
creates new method context places old one stack ast method definition check
checks number return statements method allowed ast method def associated context
increase number return statements set context return type maxassigned maximum allowed number return statements voidreturn identifies context void
examines return statement tells context it ast return statement check
checks number return statements restore previous context ast node leave
checks overload methods grouped together separated other objectblock class interface enum object block
determines whether given ast field declaration ast ast search enclosing field declaration true ast scope field declaration
determines whether given ast valid hash code method valid hash code method considered method signature public int hashcode ast ast search enclosing hash code method definition true ast scope valid hash code method
decides whether number ast ignore list check ast ast check true number ast ignore list check
reports aast magic number includes unary operators needed ast ast node contains number report
magic number ast tree ast ast token constantdefast constant ast true magic number present
sets numbers ignore check beanutils converts numeric token list double array automatically list list numbers ignore
determines given ast node parent node given token type code ast ast search annotations type type code parent token true ast node parent given token type
sets tokens allowed magic number defined object tokens string representation tokens interested
finds constant definition contains aast ast ast constant def null ast contained constant definition
checks whether two statements line ast token current statement laststatementend linenumber last statement ended forstatementend linenumber last forloop statement ended lambdastatementend linenumber last lambda statement ended true two statements line
checks whether statement multiline ast token current statement true one statement distributed two lines
checks given semicolon different line previous ast semicolon check
checks given subtree terminated return throw or allowed break continue ast root given subtree usebreak consider break terminator usecontinue consider continue terminator true subtree terminated
checks given slist terminated return throw or allowed break continue slistast slist check usebreak consider break terminator usecontinue consider continue terminator true slist terminated
checks given terminated return throw or allowed break continue ast check usebreak consider break terminator usecontinue consider continue terminator true terminated
checks given switch terminated return throw or allowed break continue literalswitchast loop check usecontinue consider continue terminator true switch terminated
regular expression match given line checks possible match within comment pattern regular expression pattern use line line test match on lineno line number file true match found inside comment
checks given loop terminated return throw or allowed break continue ast loop check true loop terminated
determines fall case currentcase nextcase relieved appropriate comment currentcase ast case falls next case nextcase ast next case true relief comment found
checks given trycatchfinally block terminated return throw or allowed break continue ast loop check usebreak consider break terminator usecontinue consider continue terminator true trycatchfinally block terminated
checks given synchronized block terminated return throw or allowed break continue synchronizedast synchronized block check usebreak consider break terminator usecontinue consider continue terminator true synchronized block terminated
decides whether ignore ast node parameter abstract method ast ast check true ast ignored check property ignoreabstractmethods true ast parameter abstract methods
process lambda token checks whether lambda parameter shadows field note parameter lambda expression untyped antlr parses parameter identifier ast lambda token
determine specific method identified methodast single variable name aname setter recognition partially depends msettercanreturnitsclass property amethodast ast corresponding method call aname name single parameter method true false indicating method setter not
set whether ignore parameters abstract methods ignoreabstractmethods decide whether ignore parameters abstract methods
decides whether ignore ast node parameter setter method property setter method field xyz name setxyz one parameter named xyz return type void default behavior return type name class method declared allowed setsettercanreturnitsclassboolean called value true ast ast check name name ast true ast ignored check property ignoresetter true ast parameter setter method
capitalizes given property name way expect see setter name name property name capitalized property name
process variable token check whether local variable parameter shadows field store field later comparison local variables parameters ast variable token
creates new frame parent parent frame statictype static inner type class enum framename name associated frame
check current frame embedded class enum specific name classorenumname name class enum looking chain field frames true current frame embedded class enum name classornamename
determines whether ast node static method static initializer ast node check true ast static method static block
controls setter return void default behavior also return class declared asettercanreturnitsclass true setter return either void class declared false order recognized setter method otherwise already recognized setter must return void later default behavior
determines whether fieldframe contains static field field field check true fieldframe contains static field field
called process tokens tokentypesvariabledef tokentypesparameterdef ast token process type type token
decides whether ignore ast node parameter constructor ast ast check true ast ignored check property ignoreconstructorparameter true ast constructor parameter
checks whether method constructor parameter ignored ast parameter token name parameter name true parameter ignored
set whether ignore constructor parameters ignoreconstructorparameter decide whether ignore constructor parameters
determines whether fieldframe contains instance field field field check true fieldframe contains instance field field
checks whether methods native ast method definition token true methods native
checks whether method javadoc comment methoddef method definition token true method javadoc comment
checks whether class default explicit nonprivate constructor classdef class ast token true class default explicit nonprivate constructor
checks whether method overridden method overridden private abstract final static note check nothing interfaces methoddef method definition token true method overridden subclass
returns classdef enumdef token nearest given ast node searches tree towards root finds classdef enumdef node ast start node searching classdef enumdef token
checks whether token javadoc comment methoddef method definition token tokentype token type true token javadoc comment
checks whether method ignored annotations methoddef method definition token annotations set ignored annotations true method ignored annotations
checks whether method comments body has empty implementation method ok implementation empty ast method definition token true method comments body
checks given class given classdef node subclassed classdef class definition token true containing class subclassed
gets name annotation annotation get name of name annotation
called start processing class definition ast class definition node
checks class name conforms specified format ast class definition node true class name conforms specified format
checks variable definition ast variable def node check
checks extended class name conforms specified format ast class definition node true extended class name conforms specified format
checks type public typedef type definition node true type public access level modifier
check method annotation ast throws checked true method annotation
gets name annotation annotation get name of name annotation
checks number throws statements ast throws check
checks method throws exception private ast throws checked true method throws exception private
returns set modifier strings variabledef classdef ast defast ast variable class definition set modifier strings defast
gets canonical types name given tokentypestype type node type detailast tokentypestype type node canonical types name
checks current variable proper access modifier according checks options variabledef variable definition node variablename variables name true variable proper access modifier
checks whether ast annotated annotation containing passed regular expression return ast representing annotation method look imports package statements detect passed annotation check ast contains passed annotation taking account fullyqualified names ex javalangoverride override method need called twice name given variabledef tokentypesvariabledef variable def node ast representing first annotation null annotation found
returns generic type arguments token type type token iscanonicalname whether type name canonical form generic type arguments token
gets next node syntactical tree child current node sibling current node sibling parent current node currentnodeast current node considering subtreerootast subtree root current node bypassing current node reached root subtree method returns null
checks whether current field final variabledef field consideration true current field final
checks variable def ignore annotation variabledef tokentypesvariabledef variabledef true variable def ignore annotation
gets list short names classes names taken array classes canonical names canonicalclassnames canonical class names list short names classes
checks access modifier given variable proper according check puts violation it variabledef variable check
gets name type given ast tokentypestype type node type specified via canonical name canonical name returned else short types name type tokentypestype type node iscanonicalname given name canonical string representation given types name
checks whether variable belongs public members ignored variablename variables name variablescope variables scope true variable belongs public members ignored
checks current import star import eg import javautil importast tokentypesimport import true star import
returns visibility scope variable variabledef variable definition node one public private protected package
checks whether immutable field defined final class variabledef variable definition node true immutable field defined final class
checks whether variable static final modifiers variabledef variable definition node true variable static final modifiers
gets short class name given canonical name canonicalclassname canonical class name short name class
checks current field immutable final modifier either primitive type instance class known immutable such string immutablecollection guava etc classes known immutable listed visibilitymodifiercheckimmutableclasscanonicalnames variabledef field consideration true field immutable
checks imported type types canonical name specified immutableclasscanonicalnames its short name collides one immutableclassshortnames removes last one importast tokentypesimport import
returns list type parameters class names typeargs type arguments token list type parameters class names
checks whether generic type arguments immutable least one argument mutable assume whole list type arguments mutable typeargsclassnames type arguments class names true generic type arguments immutable
checks whether variable satisfies public field check variabledef variable definition node true allowed
create new classdesc instance qualifiedname qualified class namewith package declaredasfinal indicates class declared final declaredasabstract indicates class declared abstract
get qualified class name given class ast classast class get qualified class name qualified class name class
calculate qualified class namepackage class name laying inside given outer class packagename package name empty string default package outerclassqualifiedname qualified namepackage class outer class null doesnt exist classname class name qualified class namepackage class name
register outer super classes given classast given classast extending them classast class outer super classes informed nesting subclass
get super class name given class classast class super class name null super class specified
checks given super class name extend clause match super class qualified name superclassqualifiedname super class qualified name with package superclassinextendclause name extend clause true given super class name extend clause match super class qualified name false otherwise
returns true given class static false ast class definition check true given class declared static
main method gather statistics
returns true given class abstract false ast class definition check true given class declared abstract
set lines numbers repeat header check list separated list line numbers repeat header
logs warning nonmultiline lines left header regexp startheaderline header line number start headersize whole header size
returns line header line blank return regexp pattern blank line headerlineno header line number return line header
validates header compiling patterncompilestring throws illegalargumentexception header isnt valid pattern header header value validate set in order
checks code line matches required header line linenumber line number check header line line contents true line matches required header line
set lines numbers ignore header check list separated list line numbers ignore header
load header check reader readerlines headerreader delivers header check ioexception
load header file checkstyleexception file cannot loaded
set header file check against uri uri header load checkstyleexception filename empty
set charset use loading header file charset charset use loading header file unsupportedencodingexception charset unsupported
called initializing header illegalargumentexception header already set
return header lines check against header lines check against
set header check against individual lines header must separated n characters header header content check against illegalargumentexception header cannot interpreted
pushes current range value range value stack pushes token expression value expression value stack expressionvalue value expression calculated current token
pops values stack expression values stack range values pair head values stacks
sets end token coordinates start file
visits ternary operator return tokens differ processed visitconditional method expression isnt bracketed ast visited token basicbranchingfactor number branches inherently added token
finds leaf distant root ast root tree leaf
leaves try
checks saved coordinates located given token ast given token true saved coordinates located given token
leaves while do for if ternary return switch
calculates number conditional operators including inline ternary operator token ast inspected token number conditional operators hrefhttpsdocsoraclecomjavasespecsjlsse8htmljls15htmljls1523 java language specification 1523 hrefhttpsdocsoraclecomjavasespecsjlsse8htmljls15htmljls1524 java language specification 1524 hrefhttpsdocsoraclecomjavasespecsjlsse8htmljls15htmljls1525 java language specification 1525
leaves ternary operator return tokens
constructor assigns class fields valueofrange np value range valueofexpression np value expression
leaves else default case group tokens
visits if while dowhile switch tokens expression parentheses used calculation ast visited token basicbranchingfactor default number branches added
counts number case tokens subject case group token ast case group token number case tokens
process end method definition ast token type representing method definition
sets end coordinates given token endtoken token
restores previous context ast expression leave
checks violates maximum allowed complexity ast node check now
creates new instance checking check current context not
creates pushes new context
creates new context given method ast method start check
sets userexcluded regular expression classes ignore array representing regular expressions classes ignore
stores package current class check pkg package definition
visits throws clause collects exceptions throw literalthrows throws process
registers given import allows us track imported classes imp import definition
checks given class shouldnt ignored javalang candidateclassname class check true count class
adds new referenced class referencedclassname class name referenced class
adds new referenced class ast node represents referenced class
visits type ast type process
sets userexcluded classes ignore excludedclasses list classes ignore
checks given class ignored belongs excluded package candidateclassname class check true count class
create new context associated given class parentcontext parent file context classname name given class ast ast class definition
restores previous context
checks coupling less allowed not
checks given class ignored belongs excluded class regexp candidateclassname class check true count class
creates new context given class classdef class definition node
sets userexcluded packages ignore excluded packages end period also appends package name excludedpackages list packages ignore
creates new instance check defaultmax default value allowed complexity
creates new inner class context given name location classname class name ast class ast
visit annotation literal get type referenced classes context annotationast annotation ast
process end method definition ast token representing method definition
push current value stack
hook called visiting token called method definition tokens ast token visited
checks variable definition countable ast ast true variable definition countable false otherwise
checks expression countable ncss metric ast ast true expression countable false otherwise
checks token countable ncss metric ast ast true token countable
checks given class ast protected modifier classdef class ast true class protected false otherwise
checks current ast node member interface annotation subnodes ast ast node true false
process validation methods ast method ast
checks given ast redundant modifier ast ast modifiertype modifier check for
check enum constructor proper modifiers ast constructor enum
retrieves first modifier annotation modifiers ast examine first modifier null none found
checks whether enum proper modifiers ast enum definition
gets list annotations method definition methoddef method definition node list annotations
checks given class accessible public scope ast class def check true class accessible public scopefalse otherwise
process validation parameters methods definition ast method ast
checks method definition annotated with hrefhttpsdocsoraclecomjavase8docsapijavalangsafevarargshtml safevarargs annotation methoddef method definition node true false
validation interface annotation ast token ast
checks interface proper modifiers ast interface check
checks current ast node member enum ast ast node true enum member
check class constructor proper modifiers classctorast class constructor ast
checks whether annotation type takes place modifier modifier token true annotation type takes place
checks modifiers added order suggested java language specification modifiers list modifier ast tokens null order correct otherwise returns offending modifier ast
skip annotations modifier block modifieriterator iterator collection modifiers modifier next last annotation
check field interface ast field ast
check method interface ast method ast
check nested types interface ast nested type ast
checks current default statement singleline statement eg default dosomestuff literaldefault tokentypesliteraldefault default statement true current default statement singleline statement
checks current case statement singleline statement eg case 1 dosomestuff break case 2 dosomestuff break case 3 literalcase tokentypesliteralcase case statement true current case statement singleline statement
checks current dowhile statement singleline statement eg thisnotify o null literaldo tokentypesliteraldo dowhile statement true current dowhile statement singleline statement
checks current statement singleline statement eg objisvalid return true objisvalid return true statement if for while dowhile lambda else case default statements true current statement singleline statement
checks ast annotation field ast ast test true current ast part annotation field
checks current else statement singleline statement eg else dosomestuff literalelse tokentypesliteralelse else statement true current else statement singleline statement
checks current statement singleline statement eg int 0 thisnotify literalfor tokentypesliteralfor statement true current statement singleline statement
checks current statement singleline statement eg objisvalid return true literalif tokentypesliteralif statement true current statement singleline statement
checks current statement singleline statement eg objisvalid return true literalwhile tokentypesliteralwhile statement true current statement singleline statement
checks current lambda statement singleline statement eg runnable r systemoutprintlnhello world lambda tokentypeslambda lambda statement true current lambda statement singleline statement
checks current loop statement body eg valueincrementvalue 5 forint 0 10 valueincrementvalue ast ast token true current loop statement body
collects validation details ast detailast value object containing details make validation
whether right curly alone line alone option used details details validation targetsrcline string contents rcurlys line true right curly alone line alone option used
collects validation details literalif literalelse ast detailast value object containing details make validation
finds next token given one ast given node token represents next lexical item
method determines double brace initialization skipped check double brace initializations treated differently corresponding inner rcurly treated alone line even may followed another rcurly semi raising violations please note though line contain anything following right curly following else violations raised kind double brace initializations shown following example code skipped over map string map new linkedhashmap putalpha man violation details details object containing details relevant rcurly double brace initialization rcurly skipped check
constructor lcurly lcurly token whose details collected rcurly rcurly token whose details collected nexttoken token token whose details collected shouldchecklastrcurly boolean value determine check last rcurly
whether right curly alone line aloneorsingleline option used details details validation targetsrcline string contents rcurlys line true right curly alone line aloneorsingleline option used
checks definition body empty lcurly left curly true definition body empty
general validation details validation violation message empty string violation validation
checks whether block singleline format details validation true block singleline format
checks right curly alone line bracepolicy option placing right curly brace details details validation targetsrcline string contents rcurlys line true right curly alone line
collects validation details classdef method def ctordef staticinit instanceinit ast detailast value object containing details make validation
checks right curly line next statement bracepolicy option placing right curly brace details details validation true right curly alone line
checks right curly line break before rightcurly right curly token true right curly line break before
checks whether right curly line break before bracepolicy option placing right curly brace details details validation true right curly line break before
collects validation details literaltry literalcatch literalfinally ast detailast value object containing details make validation
collects validation details loops tokens ast detailast value object containing details make validation
checks whether right curly alone line details validation targetsrcline string contents rcurlys line true right curly alone line
gets slist first child ast ast detailast detailast first child tokentypesslist null otherwise
checks left curly line break after leftcurly left curly token true left curly line break after
find last token type tokentypesannotation given set modifiers modifiers detailast detailast null annotations
validate token new line position brace brace ast starttoken start token braceline content line brace
validate eol case brace brace ast braceline line content
skip tokentypesannotations first nonannotation ast detailast detailast
verifies specified left curly brace placed correctly according policy brace token left curly brace starttoken token start expression
checks slist token contains text slistast detailast value whether slist token contains text
calculates left curly corresponding block checked ast detailast value left curly corresponding block checked
checks lines array contain whitespaces only lines array lines linefrom check line number lineto check line numbers true lines contain whitespaces
setter comment format commentformat format comment orgapachecommonsbeanutilsconversionexception unable create pattern object
checks catch block empty contains comments catchast tokentypesliteralcatch literalcatch true catch block empty
checks current empty catch block verifiable according checks options exceptions variable name comment format consideration emptycatchast empty catch tokentypesliteralcatch literalcatch block commentcontent text comment true empty catch block verifiable check
gets first line comment catch block comment singleline returns fully else comment multiline returns first line catchast tokentypesliteralcatch literalcatch first line comment catch block comment found
visits catch ast node empty catch block checks according checks options exceptions variable name comment inside block matching specified regexp skips consideration else puts violation catchast tokentypesliteralcatch literalcatch
gets variables name associated exception catchast tokentypesliteralcatch literalcatch variables name associated exception
setter exceptions variable name format exceptionvariablename format exceptions variable name orgapachecommonsbeanutilsconversionexception unable create pattern object
construct file node parent parent node name name file regex flags interpretation name regex pattern
returns whether package class allowed imported algorithm checks current node result none found calls parent looking match recurse looking match clear result accessresultunknown returned inpkg package import infilename file name import forimport import check on accessresult
construct child node parent parent node strategyonmismatch strategy case matching allowdisallow rule found
checks whether rules node control access specified package file inpkg package import infilename file name import forimport import check on accessresult
parses ordering rule adds list rules rulestr string rule
tries find better matching regular expression longer matching substring wins case length lower position matching substring wins importpath full import identifier group import group trying assign import regexp regular expression import group currentbestmatch object currently best match better match if found currentbestmatch
extracts defined amount domains left side packageimport identifier firstpackagedomainscount number first package domains packagefullpath full identifier containing path package imported object string defined amount domains full identifier if full identifier less domain specified
log wrong import group order currentimportline line number current import current import importgroup import group currentgroupnumber current group number checking fullimportident full import name
checks compare two import paths import1 current import import2 previous import negative integer zero positive integer specified string greater than equal to less string ignoring case considerations
constructor initialize fields group matched group length matching length position matching position
initialise importfullpath linenumber importgroup staticimport importfullpath import full path linenumber import line number importgroup import group staticimport import static
forms import full path token current token full path null
examine order imports log violations
checks current group contains import currentgroup current group true current group contains least one import
get import valid group isstatic static import importpath full import path import valid group
creates samepackagedomainsregexp first package domains firstpackagedomainscount number first package domains packagenode package node package regexp
counts empty lines given lineno line number current import count empty lines given
setter specify list order declaration customizing user inputcustomimportorder user value
get next import group currentgroupnumber current group number next import group
constructs instance allow whether allow access localonly whether rule applied locally classname class apply rule on regexp whether class name interpreted regular expression
verifies whether class name used forimport import check result accessresult indicating whether used
set list illegal packages array illegal packages noinspection weakeraccess
set list illegal classes array illegal classes
checks import package class name must used importtext argument import keyword importtext illegal import
checks import package class name must used importtext argument import keyword importtext contains illegal package prefix equals illegal class name
checks import matches one regular expressions illegal packages illegal class names importtext argument import keyword importtext matches one regular expressions illegal packages illegal class names
process javadoc textblock return set classes referenced within textblock javadoc block parse set classes referenced javadoc block
returns list valid tags found javadoc textblock cmt javadoc block parse tagtype type tags were interested list tags
collects references made javadoc comments ast node inspect javadoc
collects details static imports ast node containing static import details
returns list references found javadoc javadoctag tag javadoc tag parse list references found tag
extracts list texts matching pattern string identifier string match pattern pattern pattern used extract texts list texts matched pattern
checks whether import unused imprt import true import unused
given type string contains eg mapentry returns top level type eg map must imported type resolve otherwise returns type asis type possibly qualified type name simple name top level type
collects details imports ast node containing import details
collects references made ident ast ident node process
matches package name exactly partially front pkg package compare with matches
construct root package node packagename name package regex flags interpretation name regex pattern strategyonmismatch strategy case matching allowdisallow rule found
creates pattern expression matches exactly child packages expression selfcontained regular expression matching full package exactly pattern
nonregex case ensure trailing subpackages ie compuppy match compuppycrawl compuppycrawltools pkg package compare with matches
returns regex suitable concatenation 1 either converting plain string regular expression handling special characters 2 enclosing input noncapturing group input already regular expression 1 concatenating nonregex package component like orggoogle regex component like component converted regex too see toregexstring 2 grouping strictly necessary a input regular expression b contains alteration character c pattern already enclosed group see example parentcomorg childcommonuncommon result pattern orgcomcommonuncommon match comcommon comuncommon orgcommon orguncommon without grouping would comorgcommonuncommon would match com orgcommon uncommon clearly undesirable adding group fixes this for simplicity grouping added regular expressions unconditionally input input string alreadyregex signals input already regular expression regex string
construct subpackage node concatenation regular expressions needs special care see ensureselfcontainedregexstring boolean details parent parent package subpackagename name current subpackage regex flags interpretation name regex pattern strategyonmismatch strategy case matching allowdisallow rule found
loads import control file inputsource source source load from uri uri source loaded root pkgimportcontrol object checkstyleexception error occurs
utility safely get attribute exist exception thrown attributes collect get attribute from name name attribute get value attribute saxexception attribute exist
constructs instance parserconfigurationexception error occurs saxexception error occurs
loads import control file file uri uri file load root pkgimportcontrol object checkstyleexception error occurs
utility get strategyonmismatch property subpackage tag attributes collect get attribute from value attribute
constructs instance import rule based given name attributes qname qualified name attributes attributes attached element created import rule saxexception error occurs
utility get strategyonmismatch property importcontrol tag attributes collect get attribute from value attribute
returns true classorstaticmember starred name package member name classorstaticmember full name member exclude current exclusion true member exclusion list
checks class static member exempt known excludes classorstaticmember class static member true except false
set name file containing import control configuration also url resource classpath cause file loaded uri uri file load illegalargumentexception error loading file
returns package text ast packagedef ast node string represents full package name
returns import text ast ast node represents import string represents importing class
compares two strings string1 first string string2 second string casesensitive whether comparison case sensitive value 0 string1 equal string2 value less 0 string1 lexicographically less string2 value greater 0 string1 lexicographically greater string2
shares processing ident import process isstatic whether token static not previous previous nonstatic current static above previous static current nonstatic under line line current import
checks whether import groups separated isstatic whether token static not true imports groups separated
finds group specified import belongs to isstatic whether token static not name import name find group number given import name
compiles list package groups order occur file packagegroups commaseparated list package namesprefixes array compiled patterns
checks whether import name wrong order name import name isstatic whether static import name true import name wrong order
extracts import container name fully qualified import name import container name type encloses static element imported example httpconstants httpheaders httpheadersnames import container names import static httpconstantscolon httpconstants import static httpheadersaddheader httpheaders import static httpheaderssetheader httpheaders import static httpheadersnamesdate httpheadersnames qualifiedimportname fully qualified import name import container name
shares processing isstatic whether token static not previous previous nonstatic current static above previous static current nonstatic under name name current import line line current import
checks whether imports group separated internally groupidx group number isstatic whether token static not line line current import true imports group separated internally
finds group specified import belongs to patterns groups check name import name find group number given import name
compares two import strings first compare container static import container type enclosing static element imported returns 0 compare qualified import name eg considered container names import static httpconstantscolon httpconstants import static httpheadersaddheader httpheaders import static httpheaderssetheader httpheaders import static httpheadersnamesdate httpheadersnames according logic httpheadersnames would come httpheaders details see hrefhttpsbugseclipseorgbugsshowbugcgiid473629c3 static imports comparison method eclipse importname1 first import name importname2 second import name casesensitive whether comparison fully qualified import names case sensitive value 0 str1 equal str2 value less 0 str less str2 container order lexicographical value greater 0 str1 greater str2 container order lexicographically
verifies whether package name used forimport import check result accessresult indicating whether used
constructs instance allow whether allow access localonly whether rule applied locally pkgname package apply rule on exactmatch whether package name must match exactly regexp whether package name interpreted regular expression
returns appropriate accessresult based whether match rule allow access matched indicates whether match appropriate accessresult
constructs instance allow whether allow access localonly whether rule applied locally only regexp whether name interpreted regular expression
determines import statement types specified package importname import name pkg package name whether package
sets list packages classes exempt check excludes contain not excludesparam list package namesfullyqualifies class names star imports ok
gets full import identifier import starred import its excluded violation logged startingdot starting import statement
checks declared class abstract not ast class definition check true given class declared abstract
checks class definition ast class definition check
check member given modifiers modifiers modifiers member check true check member
check variable definition interface interface definition variabledefast variable definition true variable definitionvariabledefast interface interface definition
gets abbreviation beginindex endindex inclusive indexes sequence consecutive uppercase characters character endindex included abbreviation last character string otherwise usually first capital next word example getabbreviationgetxmlparser 3 6 returns xml not xmlp getabbreviationparsexml 5 7 str name beginindex begin index endindex end index specified abbreviation
setter specify list abbreviations must skipped checking abbreviations separated comma allowedabbreviations string abbreviations must skipped checking abbreviation separated comma
get abbreviation illegal beginindex endindex inclusive indexes sequence consecutive uppercase characters str name beginindex begin index endindex end index abbreviation bigger required ignore list otherwise null
gets disallowed abbreviation contained given string str given string disallowed abbreviation contained given string separate string
checks ignore situation ast input detailast node true ignore situation found given input detailast node noinspection simplifiableifstatement
checks method annotation methodmodifiersast detailast nod related given method modifiers modifiers type true method annotation
gets children one level current detailast parent node node current parent node list children one level current parent node
checks variable loops one variabledef variable definition true variable loops one
checks whether method annotated override annotation ast method parameter definition token true method annotated override annotation
returns access modifier methodconstructor specified ast method interface annotation block access modifier assumed public ast token methodconstructor access modifier methodconstructor
setter access modifiers methods parameters checked accessmodifiers access modifiers methods checked
checks see text block contains inheritdoc tag javadoc javadoc ast true contains tag
recursively walks conditional expression checking left right sides checking matches logging violations cond conditional type tokentypesquestion question
retrieves left side conditional cond cond conditional type tokentypesquestion question either value another conditional
find parent holder warnings expr annotation annotation token representing expr
method looks warning matches configured expression found logs violation given ast ast location place violation warningtext warning
retrieves right side conditional cond conditional type tokentypesquestion question either value another conditional
gets suppresswarnings suppresswarnings annotation annotating ast annotation exist method return null ast ast suppresswarnings suppresswarnings annotation
logs trailing array violation one exists ast array init tokentypesannotationarrayinit annotationarrayinit
checks see trailing present required prohibited annotation annotation token
retrieves enum enum type link string string enum type enumclass enum class value string representing enum enum type
checks see elementstyle annotationelementstyle correct annotation annotation token
checks expanded style type violations annotation annotation token
checks compact array style type violations annotation annotation token
checks compact style type violations annotation annotation token
checks see closing parenthesis present required prohibited ast annotation token
look rest comment saw tag name stop see end javadoc literal start next tag anything thats whitespace characters lines lines foundbefore flag parent method currentline current line index som index
checks see text block contains deprecated tag javadoc javadoc ast true contains tag
returns name given annotation annotation annotation node annotation name
finds next node ast tree node current node node next given
checks whether annotation node node line annotation annotation node true annotation node node line
checks annotations positions code 1 checks whether annotations locations correct 2 checks whether annotations valid indentation level modifiernode modifiers node correctindentation correct indentation annotation
checks whether position annotation allowed annotation annotation token allowedpositions array allowed annotation positions true position annotation allowed
checks whether annotation correct location annotation location considered correct annotationlocationcheckallowsamelinemultipleannotations set true method also 1 checks parameterized annotation location considering value annotationlocationcheckallowsamelineparameterizedannotation 2 checks parameterless annotation location considering value annotationlocationcheckallowsamelinesingleparameterlessannotation 3 checks annotation location considering elements annotationlocationchecksinglelineannotationparents annotation annotation node hasparams whether annotation parameters true annotation correct location
checks whether annotation node node line annotation annotation node true annotation node node line
returns name given annotation annotation annotation node annotation name
checks whether scope node restricted specific code block node node blocktype block type true scope node restricted specific code block
verifies type definition required tag lineno line number type definition comment javadoc comment type definition
sets tag check tag tag check
log message line line number error found tagname javadoc tag logged tagvalue contents tag javatextmessageformat
tests first sentence contains forbidden summary fragment firstsentence string first sentence true first sentence contains forbidden summary fragment
checks node starts root root node examine true javadoc starts
finds returns first sentence ast javadoc root node first sentence
concatenates string within text html tags result javadoc string detailnode javadoc tag node java doc tag content appended result
checks period end sentence ast javadoc root node error string
creates new instance
decides whether variable name ast ignore list ast ast check true variable name ast ignore list
whether check node ast given node whether check given node
gets standalone tags given javadoc textblock javadoc comment process standalone tags given javadoc
verifies type definition specified param tag specified type parameter name lineno line number type definition tags tags javadoc comment type definition typeparamname name type parameter
verifies type definition required tag lineno line number type definition tags tags javadoc comment type definition tagname required tag name formatpattern regexp tag value
checks unused param tags type parameters tags tags javadoc comment type definition typeparamnames names type parameters
extracts type parameter name tag tag javadoc tag extract parameter name extracts type parameter name tag
whether check node ast given node whether check given node
processes javadocast tree notifying check root root javadocast tree
validates checks required javadoc tokens subset default javadoc tokens illegalstateexception validation default javadoc tokens fails
defined final javadocchecks require comment nodes true
defined final allow javadocchecks change default tokens default tokens
configurable javadoc token set used protect checks malicious users specify unacceptable javadoc token set configuration file default implementation returns checks default javadoc tokens javadoc token set check designed for javadoctokentypes
processes node calling check interested nodes root root tree process
adds set tokens check interested in strrep string representation tokens interested
whether check node ast given node whether check given node
determines given token extra html tag indicates close tag found corresponding open tag token html tag id close found htmlstack stack previous open html tags false previous open tag found token
finds index first nonwhitespace character ignoring javadoc comment start end strings well leading asterisk line javadoc comment line text scan int index relative 0 start text 1 found
performs various checks javadoc comment ast ast element documented comment source lines make javadoc comment checkfirstsentenceendingdetailast textblock checkhtmltagsdetailast textblock
returns comment text javadoc comments lines javadoc comment text string
checks first sentence ends proper punctuation method uses regular expression checks presence period question mark exclamation mark followed either whitespace html element end string method ignores atinheritdoc comments tokentypes valid atinheritdoc ast current node comment source lines make javadoc comment
checks javadoc empty comment source lines make javadoc comment
determines htmltag one require close tag tag htmltag check true htmltag single tag
trims trailing whitespace end javadoc comment string builder stringbuilder trim
checks see unclosed tags stack token represents html tag closed corresponding open tag stack tags except single tags opened pushed stack token missing close htmlstack stack opened html tags token current html tag name closed
creates instance tags list valid tags invalidtags list invalid tags
checks given position start one html tag javadoctext text javadoc comments pos position check true html tag starts given position
skips html comments text text javadoc comments frompoint start position htmlcomments position htmlcomments
creates new point instance lineno line number columnno column number
returns position next comment character skips whitespaces asterisks text search location search location next character
finds next occurrence given character text text search character character search position start search position next occurrence given character
parses text line html tags adds internal list tags text source line parse lineno source line number
parses tag return position it text source line parse lineno source line number nlines line length position start position parsing position tag
parse tag id javadoctext text javadoc comments tagstart start position tag id given tag
checks given class name loaded name name class check whether specified class loadable safeload
tries resolve class fullyspecified name name given name class class object given name null
see inner class class name name search class search currentclass class search class found null resolved classnotfoundexception error occurs
try star imports name name class search class found null resolved
try find class search package name class name class object
creates new classresolver instance loader classloader load classes with pkg name package class may belong imports set imports check class belongs
try find class matching explicit import name class name class object
setter specify order tags orders users orders
setter specify list targets check atclauses targets users targets
returns type parent node commentblock child node parent type
checks order atclauses tag section node javadoc javadoc root node
associates class object clazz class associate with
creates class info given name name name type surroundingclass name surrounding class class info given name
collects details package ast node containing package details
checks one class subclass another child class class child parent class class parent true achild subclass aparent false otherwise
converts fullident token fullident full ident convert
exception unchecked subclass runtimeexception error exception class exception check true exception unchecked false exception checked
creates new instance class information object name fullident associated new object surroundingclass name current surrounding class check check use load class
process type params if any given class enum method ast class enum method process
creates token text tokens text lineno tokens line number columnno tokens column number
processes class definition ast class definition process
returns current trees classresolver classresolver current tree
looking given name alias name given name classinfo alias exists null otherwise noinspection weakeraccess
creates new instance class name token represents name class alias classinfo class information associated alias
collects details imports ast node containing import details
common implementation logloaderror method lineno line number problem columnno column number problem msgkey message key use values values fill message out
creates new instance class information object classname token represents class name
finds collects newline nodes inside description node descriptionnode description node list newline nodes
checks description node description inline tag description description node true description node description inline tag
creates instance line line tag col column tag name name invalid tag
checks comment inline tags ignored javadocroot javadoc root node true comment inline tags ignored href httpsdocsoraclecomjavase7docstechnotestoolswindowsjavadochtmljavadoctags javadoctags
checks comment javadoc tags ignored also works custom tags block tags interpreted beginning line first instance checked javadocroot javadoc root node true comment javadoc tags ignored href httpsdocsoraclecomjavase7docstechnotestoolswindowsjavadochtmlblockandinlinetags block inline tags
checks comment single line comment blockcommentstart ast tree block comment starts true comment single line comment
sets various properties javadoc tag text tag text name tag name type type tag
returns javadoctag tag name name string name tag returns javadoctag type string representing tag nullpointerexception text null illegalargumentexception text valid tag name checked using javadoctaginfoisvalidnamestring
returns javadoctag tag text text string representing tag text returns javadoctag type string representing tag nullpointerexception text null illegalargumentexception text valid tag
tests atclause tag empty tagnode atclause tag true atclause tag empty
constructs object line line number tag column column number tag tag tag string firstarg tag argument
checks tag throws exception tag whether tag throws exception tag
checks tag contain references imported classes whether tag contain references imported classes
validates whether javadoc short circuit tag currently inherittag errors logged ast construct checked tags list javadoc tags associated construct true construct short circuit tag
returns true required type found type parameters typeparams list type parameters requiredtypename name required type true required type found type parameters
verifies documented exception throws throwslist list throws documentedclassinfo documented exception class info foundthrows previously found throws true documented exception throws
computes parameter nodes method ast method node list parameter nodes ast
checks set tags matching parameters tags tags check parent node takes parameters reportexpectedtags whether report find expected tag
calculates column number using javadoc tag matcher javadoctagmatcher found javadoc tag matcher linenumber line number javadoc tag comment startcolumnnumber column number javadoc comment beginning column number
checks set tags matching throws tags tags check throwslist throws check reportexpectedtags whether report find expected tag
checks javadoc method ast token method comment javadoc comment
computes exception nodes method ast method node list exception nodes ast
whether check node ast given node nodescope scope node whether check given node
returns scope methodconstructor specified ast method interface annotation block scope assumed public ast token methodconstructor scope methodconstructor
gets multiline javadoc tags arguments noargmultilinestart javadoc tag matcher lines comment text lines lineindex line number contains javadoc tag tagline javadoc tag line number file javadoc tags arguments
checks one return tag return tags removed supplied list tags tags check lineno line number expected tag reportexpectedtags whether report find expected tag
javadoc methoddef javadoc javadoc
returns tags javadoc comment finds throws exception param return see tags comment javadoc comment tags found
checks javadoc missing method constructor minimum line count special annotation ast tree node method constructor true method constructor doesnt need javadoc
checks given method name matches regex case skip enforcement javadoc method methoddef tokentypesmethoddef methoddef true given method name matches regex
checks missing javadoc allowed checks configuration ast tree node method constructor true method constructor doesnt need javadoc
remove parameter params collection name params collection detailast parameters paramname name parameter true parameter found removed
gets multiline javadoc tags arguments argmultilinestart javadoc tag matcher column column number javadoc tag lines comment text lines lineindex line number contains javadoc tag tagline javadoc tag line number file javadoc tags arguments
determines whether line paragraph tag previous empty line tag html tag
determines whether line empty line newline newline node true line empty line
determines whether next line empty line paragraph tag beginning newline newline node
returns nearest node node detailnode node nearest node
tests whether paragraph tag immediately followed text tag html tag true paragraph tag immediately followed text
finds returns nearest empty line javadoc node detailnode node nearest empty line javadoc
determines whether line paragraph tag first line javadoc paragraphtag paragraph tag true line paragraph tag first line javadoc
returns comment line text tag appears text tag
construct htmltag id html tag name lineno source line number tag position position within text tag closedtag tag selfclosed xhtml style incomplete tag incomplete text line comment text tag
extract block tags javadoc comment lines text comment separate lines tags extracted block
constructor name name tag value value tag position position tag comment
get linecolumn string till index source source string index index string position source representing line column index appears on
remove leading javadoc source string remove leading javadoc from given string leading javadoc characters line removed
extract inline javadoc tags given comment lines javadoc comment as lines extracted inline javadoc tags
convert array string single string lines number lines order lines joined together newlines single string
collapse whitespaces str source string given string whitespace collapsed
returns new detectoroptions instance detectoroptions instance
specifies minimum allowed number detections returns builder object val minimum allowed number detections builder object noinspection returnofinnerclass
specifies maximum allowed number detections returns builder object val maximum allowed number detections builder object noinspection returnofinnerclass
specifies suppressor use returns builder object val suppressor use current instance noinspection returnofinnerclass
specifies violation reporter returns builder object val reporting violations builder object noinspection returnofinnerclass
specifies whether ignore case matching returns builder object val whether ignore case matching builder object noinspection returnofinnerclass booleanparameter
specifies message use reporting match returns builder object val message use reporting match builder object noinspection returnofinnerclass
specifies compile flags compile regular expression returns builder object val format use matching lines builder object noinspection returnofinnerclass
specifies format use matching lines returns builder object val format use matching lines builder object noinspection returnofinnerclass
pattern use matching pattern use matching
processes set lines looking matches filetext filetext object contains lines process
check line matches lineno line number line check line line check matcher matcher use startposition position start searching from
perform processing end set lines
recursive method finds matches
detect ignore situation startline position line text file text start line column true need ignored
check stop validation ignore flag true continue
setter message property message custom message used report
displays right message linenumber line number message relates to
sets maximum number instances required pattern allowed duplicatelimit negative values mean duplicate checking positive value used limit
perform processing end set lines
method finds matches
processes entire text file looking matches filetext text process
retrieves file name given file file input file examine file name
checks given filename matches specified filenamepattern filename input file name examine true match
retrieves folder path given file file input file examine folder path checkstyleexception error getting canonical path file
retrieves string form pattern defaultstring null pattern pattern convert defaultstring result use pattern null string form pattern
checks given folderpath matches specified folderpattern folderpath input folder path examine true match
logs errors check
