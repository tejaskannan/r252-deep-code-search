current mb per second rate limit merge
returns total bytes written merge
returns first doc id greater provided after doc
create new binaryrange provided encoded binary range name field name must null encodedrange encoded range
creates new instance customunifiedhighlighter analyzer analyzer used field index time used multi term queries internally passageformatter custompassageformatter generates snippets forms snippet objects offsetsource offsetsource used offsets retrieval breakiteratorlocale locale use dividing text passages null localeroot used breakiterator breakiterator use dividing text passages null breakiteratorgetsentenceinstancelocale used fieldvalue original field values delimited multivalsepchar nomatchsize size text returned highlighting performed
forces offset source highlighter
highlights terms extracted provided query within content provided field name
translate custom queries queries supported unified highlighter
must called increasing offset see fieldhighlighter usage
invoked call precedingoffset1 see fieldhighlighter usage
returns breakiteratorgetsentenceinstancelocale bounded maxlen secondary boundaries found using breakiteratorgetwordinstancelocale
create collapsing top docs collector orgapacheluceneindexsorteddocvalues field accepts also orgapacheluceneindexsortedsetdocvalues field collect fail illegalstateexception document contains one value field collapsefield sort field used group documents sort sort used sort collapsed hits collapsing keeps top sorted document per collapsed key must nonnull ie want groupsort relevance use sortrelevance topn many top groups keep
transform firstpassgroupingcollectorgettopgroupsint boolean output collapsetopfielddocs collapsing needs one pass get final top docs end first pass
create collapsing top docs collector orgapacheluceneindexnumericdocvalues field accepts also orgapacheluceneindexsortednumericdocvalues field collect fail illegalstateexception document contains one value field collapsefield sort field used group documents sort sort used sort collapsed hits collapsing keeps top sorted document per collapsed key must nonnull ie want groupsort relevance use sortrelevance topn many top groups keep
returns new collapsetopdocs containing topn collapsed results across provided collapsetopdocs sorting score collapsetopfielddocs instance must sorted
need tiebreak since score sort value first compare shard index lower shard wins iff shard index use hit index
input token stream bytestreamduplicatespotter object retains trie token sequences emitduplicates true duplicate tokens emitted use duplicatesequenceattribute attribute inspect number prior sightings tokens part sequence
reset sequence detection logic avoid continuation immediately previous bytes minimum dupsequencesize bytes need added new duplicate sequences reported hit counts reset calling method
add byte sequence b next byte sequence number times byte preceding 6 bytes seen sequence only counts 255
appends separator necessary bld builder extended whether append separator 11
creates date using calendar date format specification reference 523 bld builder fields fields extended true use extended format strictiso true allow iso formats 11
returns formatter outputs fields specified method examines fields provided returns isostyle formatter best fits useful outputting lesscommon iso styles yearmonth yyyymm monthday mmdd list provided may overlapping fields dayofweek dayofmonth case style chosen based following list thus example calendar style chosen dayofmonth higher priority dayofweek monthofyear calendar date style dayofyear ordinal date style weekofweekyear week date style dayofmonth calendar date style dayofweek week date style year weekyear supported formats are extended basic fields 20050325 20050325 yearmonthofyeardayofmonth 200503 200503 yearmonthofyear 200525 200525 yeardayofmonth 2005 2005 year 0325 0325 monthofyeardayofmonth 03 03 monthofyear 03 03 dayofmonth 2005084 2005084 yeardayofyear 084 084 dayofyear 2005w125 2005w125 weekyearweekofweekyeardayofweek 2005w5 2005w5 weekyeardayofweek 2005w12 2005w12 weekyearweekofweekyear w125 w125 weekofweekyeardayofweek w12 w12 weekofweekyear w5 w5 dayofweek 102030040 102030040 hourminutesecondmilli 102030 102030 hourminutesecond 1020 1020 hourminute 10 10 hour 2030040 2030040 minutesecondmilli 2030 2030 minutesecond 20 20 minute 30040 30040 secondmilli 30 30 second 040 040 milli 1030040 1030040 hoursecondmilli 1020040 1020040 hourminutemilli 1030 1030 hoursecond 10040 10040 hourmilli 20040 20040 minutemilli plus datetime formats like datettime indicates official iso format excluded passing strictiso true method side effect input collection fields input collection modifiable field added formatter removed collection including duplicates input collection unmodifiable side effect occurs side effect processing useful need know whether fields converted formatter not achieve this pass modifiable list check empty exit fields fields get formatter for null updated method call unless unmodifiable removing fields built formatter extended true use extended format with separators strictiso true stick exactly iso8601 false include additional formats suitable formatter illegalargumentexception format fields 11
creates date using ordinal date format specification reference 522 bld builder fields fields extended true use extended format 11
creates date using calendar date format specification reference 521 bld builder fields fields extended true use extended format strictiso true allow iso formats true reduced precision 11
checks iso flag set throwing exception is fields fields strictiso true iso formats allowed 11
adds time fields builder specification reference 531 bld builder fields fields extended whether use extended format strictiso whether strict reducedprec whether date reduced precision datepresent whether date 11
build exception specific status cause
read stream
creates new specialpermision object
check current stack specialpermission access according securitymanager
extracts sorted list declared version constants class argument would normally versionclass exposed testing classescontainingversionconstants
return version elasticsearch used create index given settings illegalstateexception given index settings doesnt contain value key value indexmetadatasettingversioncreated
returns minimum compatible version based current version ie node needs least return version order communicate node running current version returned version cases smallest major version release unless current version beta rc release version returned
returns version given string representation current version argument null empty
returns minimum created index version version supports indices created lower versions cant used version also used file based serialization backwards compatibility ie serialization code used read write file formats like transaction logs cluster state index metadata
returns true iff version compatible otherwise false
location code source elasticsearch location code source elasticsearch may null
asking jar metadata throw exception tests matter configured
specified cause unrecoverable error method rethrow cause separate thread caught bubbles uncaught exception handler throwable throwable test
unwrap specified throwable looking suppressed errors errors root cause specified throwable cause root throwable optional error one found suppressed root cause tree rooted specified throwable
rethrows first exception list adds remaining suppressed list given list empty exception thrown
dont swallow exceptions allow propagate
throws specified exception null specified true returned
throws runtime exception given exceptions added suppressed given list empty exception thrown
deduplicate failures exception message index
adds new piece metadata given key provided key already present corresponding metadata replaced
parses output generatefailurexcontentxcontentbuilder params exception boolean
returns underscore case name given exception method strips elasticsearch prefixes exception names
serializes given exceptions stacktrace elements well its suppressed exceptions given output stream
adds new header given key method replace existing header header key already exists
render exception xcontent encapsulated within field object named error level details rendered depends value detailed parameter its false simple message based type message exception rendered its true detail provided including guesses root causes cause potentially stack trace method usually used exception rendered full xcontent object output parsed failurefromxcontentxcontentparser method
returns root cause exception multiple different shards caused different exceptions given exception instance orgelasticsearchelasticsearchexception empty array returned
returns true iff given class registered exception read
retrieve innermost cause exception none returns current exception
static toxcontent helper method renders orgelasticsearchelasticsearchexception throwable instances xcontent delegating rendering toxcontentxcontentbuilder params innertoxcontentxcontentbuilder params throwable string string map map throwable method usually used throwable rendered part another xcontent object result parsed back using fromxcontentxcontentparser method
generate elasticsearchexception xcontentparser return original exception type ie nodeclosedexception example wraps type reason cause exception also recursively parses tree structure cause returning tree structure elasticsearchexception instances
returns root cause exception multiple different shards caused different exceptions
return detail message including message nested exception one
returns rest status code associated exception
deserializes stacktrace elements well suppressed exceptions given output stream adds given exception
returns array registered pairs handle ids exception classes pairs provided every registered exception array registered pairs handle ids exception classes
check whether exception contains exception given type either given class contains nested cause given type extype exception type look whether nested exception specified type
builds toxcontent using json xcontentbuilder compares result given json string format default stack trace exception rendered parameter errortrace forces stack trace rendered like rest api errortrace parameter set true
test values like arrays numbers ignored parsing back exception
deletes meta state directories recursively given data locations datalocations data location delete
reads state given file compares expected version actual version state
tries load latest state given datalocations tries load latest state determined states version one data directories none latest states loaded exception thrown prevent accidentally loading previous state silently omitting latest state logger logger instance datalocations datalocations try latest state null state found
writes given state given directories state written state directory value statedirname underneath given file locations created doesnt exist state serialized temporary file directory atomically moved its target filename pattern prefixversionst state state object write locations locations state written to ioexception ioexception occurs
creates new metadatastateformat instance
verifies full match syncid files allocate matching node
decision throttle decision across nodes shard make sure shard moves ignore unassigned list
cant find primary data still find replica data go ahead keep unassigned allocated today behavior relies primary corruption identified adding replica replica actually recover cause corruption identified see corruptfiletest
verifies primary data matching data nodes shard keeps unassigned allocated later on
verifies sync id match files match allocate matching node
verifies primary data data nodes shard keeps unassigned allocated later on
tests node allocate due matching throttled move shard ignored wait till throttling done
verifies sync id match files match allocate matching node
verifies still fetching data async manner replica shard moves ignore unassigned
verifies anything index creation fetch data ends called since need go try find better copy shard
verifies index creation dont go fetch data keep replica shard unassigned let shard allocator allocate it isnt copy around find anyhow
returns prioritycomparator uses routingallocation index metadata access index setting per index
writes index state method public testing purposes
loads full state includes global state indices meta state
loads index state provided index name returning null doesnt exists
writes global state without indices states
loads indices states available disk
tests node allocate to throttling and one moved ignore unassigned allocated to
tests node allocate shard to allocated it
tests node allocated to decider said no still force allocation it
tests nodes prior copies given shard return decision no allocationdecidercanforceallocateprimaryshardrouting routingnode routingallocation returns throttle decision node force allocate node
tests node returns data found null allocation id moved ignore unassigned
tests nodes prior copies given shard return throttle decision force allocate node instead throttle
tests node previously primary allocated node again
tests restoring snapshot find node shard copy allocation deciders say yes allocate node
tests node returns data shard allocation id match active allocation ids moved ignore unassigned
tests one node returns shardlockobtainfailedexception another properly loads store select second node target
tests async fetch returns data shard allocated
tests node returns data found it moved ignore unassigned
tests restoring snapshot find node shard copy allocation deciders say no still allocate node
tests nodes prior copies given shard return decision no allocationdecidercanforceallocateprimaryshardrouting routingnode routingallocation returns yes decision least one nodes force allocate one
tests restoring snapshot find node shard copy allocation deciders say throttle add ignored shards
tests restoring snapshot dont find node shard copy shard remain unassigned list allocated later
tests node returns shardlockobtainfailedexception considered valid shard copy
allocator responsible allocating given shardrouting
split list node shard states groups yesnothrottle based allocation deciders
builds map nodes corresponding allocation decisions nodes
builds list nodes matchanyshard set false nodes allocation id matching insyncallocationids added list otherwise node shard added list entries matching allocation id always front list
finds store assigned shard fetched data returns null none found
allocator responsible allocating given shardrouting
process existing recoveries replicas see need cancel find better match today better match one full sync id match compared one previous recovery
determines shard allocated least one node based allocation deciders returns best allocation decision allocating shard node ie yes least one node decided yes throttle least one node decided throttle none nodes decided yes throttle explain mode also returns nodelevel explanations second element returned tuple
takes store info nodes shard store adds node decisions leaving node explanations untouched nodes store information
returns node highest non zero byte match compared primary
process changes needed allocation based fetch result
called response handler async action fetch data verifies still working cache generation otherwise results discarded goes fills relevant data shard response failures issuing reroute end make sure another round allocations taking new data account
returns number async fetches currently ongoing
nodes fetching data
finds nodes need fetched nodes data fetch mode
fetches data relevant shard ongoing async fetches going on new ones initiated call result data ignorenodes nodes supposed ignored round since fetching async need keep around make sure add back responses fetched returned
fills shard fetched data new data nodes fresh nodeentry removes nodes longer part state
returns actual data note make sure check hasdata first use actual data
test peer reuse recovery shared recoverfromgatewayit recoverybackwardscompatibilityit indexsettings settings index test restartcluster runnable restart cluster test logger logger logging usesyncids use synced flush cant use synced bwc tests
ensure read pregenerated cluster state
allocate unassigned shards nodes if any valid copies shard already exist individual implementations makeallocationdecisionshardrouting routingallocation logger make decisions assigning shards nodes allocation allocation state container object
builds decisions nodes cluster explain api provide information allocation decisions node still waiting allocate shard eg due fetching shard data
computes returns design allocating single unassigned shard called assigned shard allocateunassigneddecisionnottaken returned
elasticsearch 20 removed several deprecated features well support lucene 3x method calls metadataindexupgradeservice makes sure indices compatible current version metadataindexupgradeservice might also update obsolete settings needed allows upgrading global custom meta data via metadataupgradercustommetadataupgraders input metadata upgrade needed upgraded metadata
loads current meta state index new cluster state checks persisted index state written disk returned run data nodes return states indices actually shard allocated current node previouslywrittenindices list indices state already written potentiallyunwrittenindices list indices state potentially written previousmetadata last meta data know of meta data indices previouslywrittenindices list persisted newmetadata new metadata iterable indices states written disk
throws iae pre 019 state detected
test really tests worst case scenario broken setting setting prevents index allocated metadata recover case ability check index local recovery disk sane successfully create indexservice also includes plugins etc
test really tests worst case scenario missing analyzer setting case ability check index local recovery disk sane successfully create indexservice also includes plugins etc
test ensures index deletion takes place node offline node rejoins cluster deletes index locally instead importing dangling index
allocates provided list dangled indices sending master node allocation
cleans dangling indices already allocated provided meta data
finds new dangling indices iterating indices trying find indices state disk part provided meta data detected dangled already
current set dangling indices
process dangling indices based provided meta data handling cleanup finding new dangling indices allocating outstanding ones
asserts cluster state contains nbtasks tasks verify given predicate
cancels locally running task using task manager api
notifies master node create new persistent task assign node
waits given persistent task comply given predicate call back listener accordingly taskid persistent task id predicate persistent task predicate evaluate timeout timeout waiting listener callback listener
executes asynchronous persistent task action using client origin set context listener wrapped ensure proper context restored
waits persistent tasks comply given predicate call back listener accordingly predicate predicate evaluate timeout timeout waiting listener callback listener
notifies master node completion persistent task failure null persistent task considered successfully completed
notifies master node state persistent task changed persistent task implementers shouldnt call method directly use allocatedpersistenttaskupdatepersistenttaskstate instead
notifies master node remove persistent task cluster state
reassigns task another node
updates task state
checks task currently present list right allocation id
adds new task builder task added id found calling getlastallocationid method
removes task
finds least loaded node satisfies selector criteria
returns node id params executed default implementation returns least loaded data node
creates allocatedpersistenttask communicating task manager
returns true cluster state changes require reassign persistent tasks happen following situations node left added routing table changed master node changed metadata changed persistent tasks changed
restarts record running persistent task cluster state id id persistent task allocationid allocation id persistent task failure reason restarting task null task completed successfully listener listener called task removed
removes persistent task id id persistent task listener listener called task removed
update state persistent task taskid id persistent task taskallocationid expected allocation id persistent task taskstate new state listener listener called task removed
evaluates cluster state tries assign tasks nodes currentstate cluster state analyze updated version cluster state
creates new assignment given persistent task taskname tasks name taskparams tasks parameters currentstate current clusterstate new assignment
creates new persistent task master node taskid tasks id taskname tasks name taskparams tasks parameters listener listener called task started
returns true persistent tasks equal previous current cluster state
updates persistent state corresponding persistent task doesnt affect status allocated task
waits given persistent task comply given predicate call back listener accordingly predicate persistent task predicate evaluate timeout timeout waiting listener callback listener
unregisters cancels locally running task using task manager notification master send upon cancellation
creates persistenttasksclusterservice single persistenttasksexecutor implemented bifunction
returns assignmentdecision whether given persistent task assigned node cluster decision depends current value setting enableassignmentdeciderclustertasksallocationenablesetting assignmentdecision
test enableassignmentdeciderclustertasksallocationenablesetting setting correctly prevents persistent tasks assigned cluster restart
format permission type name actions string
printsconfirms policy exceptions user
parses plugin policy set permissions permission formatted output users
rest handlers added plugin
create record action plain transportaction handles it supporting plain transportactions needed plain transportaction
returns providers unicast host lists zen discovery key returned map name host provider see orgelasticsearchdiscoverydiscoverymodulediscoveryhostsprovidersetting value supplier construct host provider selected use transportservice use form orgelasticsearchcommontransporttransportaddress portion orgelasticsearchclusternodediscoverynode networkservice use find publish host address current node
returns custom discovery implementations added plugin key returned map name discovery implementation see orgelasticsearchdiscoverydiscoverymodulediscoverytypesetting value supplier construct discovery threadpool use schedule ping actions transportservice use communicate nodes masterservice use submit cluster state update tasks clusterapplier use locally apply cluster state updates clustersettings use get cluster settings hostsprovider use find configured hosts pinged initial discovery
construct plugin info stream stream ioexception io exception occurred reading plugin info stream
reads plugin descriptor file path path root directory plugin plugin info ioexception io exception occurred reading plugin descriptor
construct plugin info name name plugin description description plugin version opaque version identifier plugin elasticsearchversion version elasticsearch plugin built javaversion version java plugin built classname entry point plugin extendedplugins plugins plugin extends spi hasnativecontroller whether plugin native controller
close resources opened plugin ioexception plugin failed close resources
returns components added plugin components returned implement lifecyclecomponent lifecycle managed note aid migration away guice objects returned components bound guice themselves client client make requests system clusterservice service allow watching updating cluster state threadpool service allow retrieving executor run async action resourcewatcherservice service watch changes node local files scriptservice service allow running scripts local node xcontentregistry registry extensible xcontent parsing environment environment path setting configurations nodeenvironment node environment used coordinate access data paths namedwriteableregistry registry namedwriteable object parsing
path native controller plugin native components
return platform name based os name darwinx8664 linuxx8664 windowsx8664 nix platforms moreorless uname suname m converted lower case however consistency different operating systems architecture amd64 replaced x8664 i386 x86 windows its windows followed either x86 x8664
test parse set permissions correctly simple policy
test parse set permissions correctly complex policy
test format simple permissions properly
test format unresolved permission properly
return new classloader across parent extended loaders
remove plugin specified pluginname terminal terminal use inputoutput env environment local node pluginname name plugin remove purge true plugin configuration files removed otherwise preserved ioexception io exception occurs performing file operation userexception plugin name null userexception plugin directory exist userexception plugin bin directory directory
add reader shard level results aggregation
build spec plain parsefield name name behavior plain parsefield parser registered names specified plain parsefield reader registered parsefieldgetpreferredname sure name ws namedwriteablegetwriteablename returns reader reader reads behavior internode protocol parser parser read behavior rest request
specification pipelineaggregator name name aggregation might parsed deserialized make sure name pipelineaggregationbuilder pipelineaggregator return namedwriteablegetwriteablename builderreader reader registered aggregations builder typically reference constructor takes streaminput aggregatorreader reads pipelineaggregator stream parser reads aggregation builder xcontent
specification pipelineaggregator name holds names aggregation might parsed parsefieldgetpreferredname special name readers registered name pipelineaggregationbuilder pipelineaggregator return namedwriteablegetwriteablename builderreader reader registered aggregations builder typically reference constructor takes streaminput aggregatorreader reads pipelineaggregator stream parser reads aggregation builder xcontent
add reader shard level results aggregation
specification custom suggester name holds names suggester might parsed parsefieldgetpreferredname special name request builder suggestion response readers registered name query suggestion response use namedwriteablegetwriteablename return values too builderreader reader registered suggesters builder typically reference constructor takes streaminput builderparser parser reads suggesters builder xcontent suggestionreader reader registered suggesters suggestion response typically reference constructor takes streaminput
specification custom suggester name name suggester might parsed deserialized make sure query builder suggestion response reader return name namedwriteablegetwriteablename builderreader reader registered suggesters builder typically reference constructor takes streaminput builderparser parser reads suggesters builder xcontent suggestionreader reader registered suggesters suggestion response typically reference constructor takes streaminput
returns additional persistent tasks executors added plugin
creates test environment bin config plugins directories
creates fake jar file empty class files
returns map httpservertransport suppliers see orgelasticsearchcommonnetworknetworkmodulehttptypesetting configure specific implementation
returns map transport suppliers see orgelasticsearchcommonnetworknetworkmoduletransporttypekey configure specific implementation
returns list transportinterceptor instances used intercept incoming outgoing transport internode requests must return null namedwriteableregistry registry named writeables registered threadcontext threadcontext current nodes clients threadpool used set additional headers interceptors
convenience method write plugin properties file
verify signature downloaded plugin zip signature obtained source downloaded plugin appending asc url expected plugin signed elastic signing key id d27d666cd88e42b4 zip path downloaded plugin zip urlstring url source downloade plugin zip ioexception io exception occurs reading various input streams pgpexception pgp implementation throws internal exception verification
downloads plugin returns file downloaded to
check candidate plugin jar hell installing
copies files tmpconfigdir destconfigdir files existing source destination skipped
load information plugin verify installed errors
downloads zip url method also validates downloaded plugin zip via following means official plugin download sha512 checksum validate integrity downloaded zip also download armored signature validate authenticity downloaded zip nonofficial plugin download sha512 checksum fallback sha1 checksum validate integrity downloaded zip terminal terminal log messages urlstring url plugin zip tmpdir temporary directory write downloaded files officialplugin true plugin official plugin path downloaded plugin zip ioexception io exception occurs download reading files resources pgpexception exception occurs verifying downloaded zip signature userexception checksum validation fails
returns official plugin names look similar pluginid
moves plugin directory final destination
sets attributes path iff posix attributes supported
installs plugin tmproot plugins dir plugin bin dir andor config dir moved
returns url elasticsearch plugin maven
moves bin config directories plugin exist
returns url official elasticsearch plugin
copies files tmpbindir destbindir along permissions dest dirs parent
constructs new pluginservice settings settings system modulesdirectory directory modules exist in null modules loaded filesystem pluginsdirectory directory plugins exist in null plugins loaded filesystem classpathplugins plugins exist classpath loaded
reloads lucene spi implementations using new classloader method must called new classloader created register services use
returns classes injected guice plugins extend lifecyclecomponent
extracts installed plugin directories provided rootpath rootpath path plugins installed list plugin paths installed rootpath ioexception io exception occurred reading directories
verify given plugin compatible current elasticsearch installation
mark analysisprovider requiring indexs settings
defines azureunicasthostsprovider testing purpose able resolve network addresses azure instances running host different ports
register existing node azure node exposing address details htrough nodename name node
construct customnameresolver
value gce hostname type discover appropriate host resolved gce metadata customnameresolverresolveifpossiblestring
attempts scattergather request expects unique responses per subrequest
run request receives predictably randomized number deprecation warnings rerunning backtoback helps ensure warnings maintained across requests
exception handler exceptions associated specific channel exception exception
options request valid rest endpoint verify 200 http response code returned response allow header includes list valid http methods endpoint see hrefhttpstoolsietforghtmlrfc2616section92http11 92 options
test post request indexsettings matches update settings handler indexsettings returns 405 error see hrefhttpsgithubcomelasticelasticsearchissues17853issue 17853 information
requests valid rest endpoint using unsupported http method verify 405 http response code returned response allow header includes list valid http methods endpoint see hrefhttpstoolsietforghtmlrfc2616section1046http11 1046 405 method allowed
test niohttpservertransport supports expect 100continue http header interruptedexception client communication server interrupted
test niohttpservertransport responds 100continue expectation large contentlength 413 status interruptedexception client communication server interrupted
construct new pipelining handler handler used downstream http decodingaggregation logger logging unexpected errors maxeventsheld maximum number channel events retained prior aborting channel connection required events cannot queue indefinitely
turns given bytesreference bytebuf note returned bytebuf reference internal pages bytesreference dont free bytes reference bytebuf goes scope
returns whether input origin allowed configuration true origin allowed otherwise false
returns http response headers added cors preflight response httpheaders http response headers added
creates new builder instance origin passed in origins origin used builder
specifies preflight response headers added preflight response niocorsconfigbuilder support method chaining
creates new builder instance allowing origin wildcard origin
creates new builder instance allowing origin matches pattern pattern pattern match incoming origins
builds niocorsconfig settings specified previous method calls niocorsconfig configured corsconfig instance
specifies headers returned cors accesscontrolallowheaders response header client specifies headers request example calling xhrsetrequestheadermycustomheader somevalue server receive header name accesscontrolrequestheaders preflight request server decide allows header sent real request remember preflight real request request asking server allow request headers headers added preflight accesscontrolallowheaders response header niocorsconfigbuilder support method chaining
disables cors support niocorsconfigbuilder support method chaining
creates niocorsconfigbuilder instance specified origin niocorsconfigbuilder support method chaining
making preflight request client perform two request inefficient setting set cors accesscontrolmaxage response header enables caching preflight response specified time time preflight request made max maximum time seconds preflight response may cached niocorsconfigbuilder support method chaining
returns http response headers added cors preflight response intermediary like load balancer might require cors preflight request certain headers set enables headers added values must dynamically created http response created example date response header accomplished using callable call method invoked http response created name name http header valuegenerator callable invoked http response creation type value callable return niocorsconfigbuilder support method chaining
sole constructor value value returned call method invoked
create niocorsconfigbuilder instance specified pattern origin pattern regular expression pattern match incoming origins on niocorsconfigbuilder configured origin pattern
returns http response headers added cors preflight response intermediary like load balancer might require cors preflight request certain headers set enables headers added name name http header value values http header type values iterable contains niocorsconfigbuilder support method chaining
specifies allowed set http request methods returned cors accesscontrolrequestmethod response header methods httpmethods allowed niocorsconfigbuilder support method chaining
specifies cors request rejected its invalid processing cors headers set request processed may always desired setting check origin valid valid processing take place error returned calling client niocorsconfigbuilder support method chaining
web browsers may set origin request header null resource loaded local file system calling method enable successful cors response wildcard cors response header accesscontrolalloworigin niocorsconfigbuilder support method chaining
returns http response headers added cors preflight response intermediary like load balancer might require cors preflight request certain headers set enables headers added name name http header values values http header niocorsconfigbuilder support method chaining
default cookies included cors requests method enable cookies added cors requests calling method set cors accesscontrolallowcredentials response header true please note cookie support needs enabled client side well client needs optin send cookies calling xhrwithcredentials true default value withcredentials false case cookies sent setting true included cookies cross origin requests niocorsconfigbuilder support method chaining
creates new instance specified niocorsconfig
construct new pipelining handler handler used downstream http decodingaggregation logger logging unexpected errors maxeventsheld maximum number channel events retained prior aborting channel connection required events cannot queue indefinitely
test netty4httpservertransport supports expect 100continue http header interruptedexception client communication server interrupted
test netty4httpservertransport responds 100continue expectation large contentlength 413 status interruptedexception client communication server interrupted
returns whether input origin allowed configuration true origin allowed otherwise false
returns http response headers added cors preflight response httpheaders http response headers added
creates new builder instance origin passed in origins origin used builder
specifies preflight response headers added preflight response netty4corsconfigbuilder support method chaining
creates new builder instance allowing origin wildcard origin
creates new builder instance allowing origin matches pattern pattern pattern match incoming origins
builds netty4corsconfig settings specified previous method calls netty4corsconfig configured corsconfig instance
specifies headers returned cors accesscontrolallowheaders response header client specifies headers request example calling xhrsetrequestheadermycustomheader somevalue server receive header name accesscontrolrequestheaders preflight request server decide allows header sent real request remember preflight real request request asking server allow request headers headers added preflight accesscontrolallowheaders response header netty4corsconfigbuilder support method chaining
disables cors support netty4corsconfigbuilder support method chaining
creates netty4corsconfigbuilder instance specified origin netty4corsconfigbuilder support method chaining
making preflight request client perform two request inefficient setting set cors accesscontrolmaxage response header enables caching preflight response specified time time preflight request made max maximum time seconds preflight response may cached netty4corsconfigbuilder support method chaining
returns http response headers added cors preflight response intermediary like load balancer might require cors preflight request certain headers set enables headers added values must dynamically created http response created example date response header accomplished using callable call method invoked http response created name name http header valuegenerator callable invoked http response creation type value callable return netty4corsconfigbuilder support method chaining
sole constructor value value returned call method invoked
create netty4corsconfigbuilder instance specified pattern origin pattern regular expression pattern match incoming origins on netty4corsconfigbuilder configured origin pattern
returns http response headers added cors preflight response intermediary like load balancer might require cors preflight request certain headers set enables headers added name name http header value values http header type values iterable contains netty4corsconfigbuilder support method chaining
specifies allowed set http request methods returned cors accesscontrolrequestmethod response header methods httpmethods allowed netty4corsconfigbuilder support method chaining
specifies cors request rejected its invalid processing cors headers set request processed may always desired setting check origin valid valid processing take place error returned calling client netty4corsconfigbuilder support method chaining
web browsers may set origin request header null resource loaded local file system calling method enable successful cors response wildcard cors response header accesscontrolalloworigin netty4corsconfigbuilder support method chaining
returns http response headers added cors preflight response intermediary like load balancer might require cors preflight request certain headers set enables headers added name name http header values values http header netty4corsconfigbuilder support method chaining
default cookies included cors requests method enable cookies added cors requests calling method set cors accesscontrolallowcredentials response header true please note cookie support needs enabled client side well client needs optin send cookies calling xhrwithcredentials true default value withcredentials false case cookies sent setting true included cookies cross origin requests netty4corsconfigbuilder support method chaining
creates new instance specified netty4corsconfig
like assertacessisdenied bulk requests since entire request failed individual ones
test tries truncate larger files index trigger leftovers recovery target happens recovery last chunk file transferred replica throw exception make sure recovery fails leave half baked files target later allow full recovery ensure still recover dont run corruptions
resolve given index names index ids creating new index ids new indices repository
reads instance repositorydata xcontent loading snapshots indices metadata
writes snapshots metadata related indices metadata xcontent omitting incompatible snapshots
returns immutable collection snapshot ids repository active incompatible snapshots
remove snapshot remove indices longer exist repository due deletion snapshot
resolve index name index id specific repository throwing exception index could resolved
returns snapshotstate given snapshot returns null state snapshot
returns immutable collection snapshot ids snapshots contain given index
resolve given index names index ids
reads incompatible snapshot ids xcontent loading new instance repositorydata created invoking instance plus incompatible snapshots read xcontent
add snapshot indices repository returns new instance snapshot already exists repository data method throws illegalargumentexception
writes incompatible snapshot ids xcontent
constructs new register repository request cause repository registration cause name repository name type repository type verify verify repository creation
unregisters repository cluster method called master node removes repository information cluster metadata request unregister repository request listener unregister repository listener
registers new repository cluster method called master node tries create new repository master successful adds new repository cluster metadata request register repository request listener register repository listener
sets repository settings settings repository settings request
creates repository holder
returns registered repository method called master node repositoryname repository name registered repository repositorymissingexception repository name isnt registered
checks new repositories appeared disappeared cluster metadata updates current list repositories accordingly event cluster changed event
creates new unregister repository request cause repository unregistration cause name repository name
creates new repository adds list registered repositories repository name different types settings already exists closed replaced new repository repository name exists type settings new repository ignored repositorymetadata new repository metadata true new repository added false ignored
closes given repository
constructs shared file system repository
parse read settings available azureclient namespace settings settings parse named configurations
parse settings single client
azure enumerationresults response
retrieves object name derived paths named pathx 0 x 10 counterpart objectspathsstring
decline path like httphostportbucket 10 derived paths like httphostportbucketpath0 httphostportbucketpath0path1 httphostportbucketpath0path1path2 etc
azure error httpsdocsmicrosoftcomenusrestapistorageservicesstatusanderrorcodes2
builds default request handlers
creates azurestoragefixture custom endpoint
test given string starts specified prefix ignoring upperlower case str string check prefix prefix look javalangstringstartswith
updates settings building clients client cache cleared future client requests use new refreshed settings clientssettings settings new clients old settings
creates cloudblobclient invocation using current client settings cloudblobclient thread safe settings change therefore instance cacheable reused inside thread logically coupled ops operationcontext used specify proxy new context required call
extract blob name uri like httpsmyserviceazurenetcontainerpathtomyfile remove container part first part path gives pathtomyfile uri uri parse blob name relative container
makes sure url white listed points local file system matches one root path pathrepo
constructs readonly urlbased repository
method registers 3 snapshotrestore repositories repositoryfs fs repository used create snapshots repositoryurl url repository used restore snapshots created using previous repository uses urlfixture restore snapshots http repositoryfile similar previous repository using file prefix instead http
creates urlfixture
delete shard snapshot snapshotid snapshot id shardid shard id
loads information shard snapshot
checks snapshot file already exists list blobs fileinfo file check blobs list blobs true file exists list blobs
snapshot individual file fileinfo file snapshotted
bwc layer ensure update snapshots metadata corresponding hashes compare them new logic storefilemetadata reads entire si segmentsn files strengthen comparison files persegment percommit level
maintains single lazy instance blobstore
constructs new context shard shard snapshotted snapshotid snapshot id indexid id index snapshotted snapshotstatus snapshot status report progress
configures ratelimiter based repository global settings repositorysettings repository settings setting setting use configure rate limiter defaultrate default limiting rate rate limiter null throttling needed
constructs new restore context shard shard restore snapshotid snapshot id indexid id index restored snapshotshardid shard snapshot data restored recoverystate recovery state report progress
get latest snapshot index blob id snapshot index blobs named indexn n next version number index blob written individual indexn blob written never overwritten highest numbered indexn blob latest one contains current snapshots repository package private testing
constructs new blobstorerepository metadata metadata repository including name settings globalsettings settings node repository object created
finds next available blob number blobs list blobs repository next available blob number
create snapshot index commit point snapshotindexcommit snapshot commit point
delete shard snapshot
writes incompatible snapshot ids list incompatiblesnapshots blob repository package private testing
restores file asynchronous method upon completion operation latch getting counted failures added failures list fileinfo file restored
maintains single lazy instance blobcontainer
loads available snapshots repository blobs list blobs repository tuple blobstoreindexshardsnapshots last snapshot index generation
performs restore operation
writes new index file shard removes unreferenced files repository need really careful handling index files case failures make sure dont index file points files deleted snapshots list active snapshots container filelistgeneration generation number snapshot index file blobs list blobs container reason reason explaining shard index file written
writes blob resolving blob name using blobname method blob compressed checksum written required obj object serialized blobcontainer blob container name blob name
reads blob specified name without resolving blobname using using blobname method blobcontainer blob container blobname blob name
codec codec name blobnameformat format blobname stringformat format reader prototype object deserialize xcontent compress true content compressed
codec codec name blobnameformat format blobname stringformat format reader prototype object deserialize xcontent compress true content compressed xcontenttype content type used write operations
writes blob atomic manner resolving blob name using blobname method blob compressed checksum written required atomic move might inefficient repositories also cannot override existing files obj object serialized blobcontainer blob container name blob name
blobnameformat format blobname stringformatlocale string object format reader prototype object deserialize objects type
reads parses blob given name applying name translation using link blobname method blobcontainer blob container name name translated parsed blob object
create repository random name
create environment random pathhome pathrepo
restoring snapshot contains multiple files must succeed even files already exist shards store
refreshes settings amazons3 clients clears cache existing clients new clients build using new settings old clients usable released release destroyed instead returned cache
attempts retrieve client name cache client exist created
implementation ignores failifalreadyexists flag s3 api way enforce due weak consistency model
uploads blob using multipart upload requests
returns number parts size partsize needed reach totalsize along size last or unique part totalsize total size partsize part size tuple containing number parts fill totalsize size last part
uploads blob using single upload request
constructs canned acl string
retrieves object name derives paths named pathx 0 x 10 counterpart objectspathsstring
decline path like httphostportbucket 10 derived paths like httphostportbucketpath0 httphostportbucketpath0path1 httphostportbucketpath0path1path2 etc
s3 error httpsdocsawsamazoncomamazons3latestapierrorresponseshtml
s3 deleteresult response
builds default request handlers
s3 listbucketresult response
creates amazons3fixture
constructs s3 backed repository
creates new s3blobstore random settings blobstore uses mockamazons3 client
load client settings given settings note always least return client named default
parse settings single client
call client needed anymore
executes provided operation store
locates keytab file environment verifies exists expects keytab file exist configdirrepositoryhdfskrb5keytab
performs twophase leading namenode transition namenode id transition standby namenode id transition active configuration client configuration haadmin tool ioexception event raised exception namenode failover
get given setting repository settings throwing repositoryexception setting exist empty
generates given number googlecloudstorageclientsettings along settings build
generates random googlecredential along corresponding service account file provided byte array
generates random googlecloudstorageclientsettings along settings build
loads service account file corresponding given client name file defined client null credential returned settings settings clientname client name serviceaccountcredentials use given client null service account defined
uploads blob using resumable upload method multiple requests independently retried case failure see httpscloudgooglecomstoragedocsjsonapiv1howtosresumableupload blobinfo info blob uploaded inputstream stream containing blob data failifalreadyexists whether throw filealreadyexistsexception given blob already exists
return true iff given bucket exists bucketname name bucket true iff bucket exists
deletes multiple blobs specific bucket using batch request blobnames names blobs delete
deletes blob specific bucket blobname name blob
returns javaioinputstream given blob name blobname name blob inputstream used read blobs content
writes blob specific bucket inputstream content blob written blobsize expected size blob written failifalreadyexists whether throw filealreadyexistsexception given blob already exists
uploads blob using multipart upload method a single multipartrelated request containing data metadata request gziped see httpscloudgooglecomstoragedocsjsonapiv1howtosmultipartupload blobinfo info blob uploaded inputstream stream containing blob data blobsize size failifalreadyexists whether throw filealreadyexistsexception given blob already exists
list blobs specific bucket names prefixed path base path blobs list path removed names blobs returned prefix prefix blobs list map blob names metadata
returns true blob exists specific bucket blobname name blob true iff blob exists
storage bucket json representation defined httpscloudgooglecomstoragedocsjsonapiv1bucketresource
storage error json representation
builds json response
storage object json representation defined httpscloudgooglecomstoragedocsjsonapiv1objectsresource
builds default request handlers
creates googlecloudstoragefixture
pins tls trust certificates and importantly overrides connection urls case custom endpoint setting connections dont fully honor setting bugs sdk default connection factory opens new connection request required storage instance threadsafe
refreshes client settings clears client cache subsequent calls googlecloudstorageserviceclient return new clients constructed using parameter settings clientssettings new settings used building clients subsequent requests
attempts retrieve client cache client exist created latest settings populate cache returned instance cached calling code instead use possibly updated instance requested calling method clientname name client settings used create client cached client storage instance used manage objects blobs
creates client used manage google cloud storage objects client threadsafe clientname name client settings use including secure settings clientsettings name client settings use including secure settings new client storage instance used manage objects blobs
converts timeout values settings timeout value google cloud sdk
converts array strings array paths adding additional child specified
returns index paths
tries lock given shards id shard lock required perform kind write operation shards data directory like deleting files creating new index writer recover different shard instance it shard lock acquired shardlockobtainfailedexception thrown shardid shard id lock locktimeoutms lock timeout milliseconds shard lock call shardlockclose release lock
tries lock local shards given index shard locks cant acquired shardlockobtainfailedexception thrown previously acquired locks released index index lock shards locktimeoutms long wait acquiring indices shard locks shardlock instances index ioexception ioexception occurs
returns shard paths excluding custom shard path note shards allocated one returned paths returned array may contain paths nonexisting directories indexsettingshascustomdatapath resolvecustomlocationindexsettings shardid
returns currently lock shards note shard ids return contain valid index uuid
returns array nodepaths
best effort ensure actually write permissions write data directories prevents disasters nodes started wrong username etc
resolves existing paths indexfoldername datapathsnodesnodeidindices
deletes shard data directory iff shards locks successfully acquired shardid id shard delete delete ioexception ioexception occurs
acquires releases writelock files given shard paths writelock file assumed shard paths index directory used elasticsearch lockobtainfailedexception locks could acquired
find shards index returning map nodepath number shards path index index filter shards map nodepath count shards index path ioexception ioexception occurs
tries find allocated shards given index current node note methods prone raceconditions filesystem layer since might see directories created concurrently its traversing index index filter shards set shard ids ioexception ioexception occurs
returns folder names datapathsnodesnodeidindices folder
resolve custom path indexs shard uses indexmetadatasettingdatapath setting determine root path index indexsettings settings index
deletes indexes data directory recursively iff indexes shards locks successfully acquired indexes shard directories cant locked non shards deleted index index delete locktimeoutms long wait acquiring indices shard locks indexsettings settings index deleted ioexception shards data directories cant locked deleted
deletes indexes data directory recursively note method assumes shard lock acquired index index delete indexsettings settings index deleted
scans node paths loads existing metadata file found new meta data generated persisted nodepaths
deletes shard data directory note method assumes shard lock acquired method also attempt acquire write locks shards paths deleting data best effort lock released deletion happens order allow folder deleted lock shards lock ioexception ioexception occurs elasticsearchexception writelock acquirable
method tries write empty file moves using atomic move operation method throws illegalstateexception operation supported filesystem test executed data directories method cleans files even case error
returns array nodes data locations illegalstateexception node configured store local locations
return directory names nodesnodeidindices directory given node path nodepath path directories could indices given node path ioexception io exception occurs traversing filesystem
returns unique uuid describing node uuid persistent data folder node remains across restarts
returns nodepathpath shard
ensure configured temp directory valid directory
asserts two environments equivalent things environment cares ie setting object may contain different setting
checks specified url pointing local file system does resolves specified url list configured repository roots specified url doesnt match roots returns null
data location cluster name sub directory used upgrade old data paths new ones include cluster name used write files removed es 60
read stream
plugins custom settings
lines procselfcgroup file represents control groups elasticsearch process belongs line file represents control group hierarchy form d first field representing hierarchy id second field representing commaseparated list subsystems bound hierarchy last field representing control group lines procselfcgroup ioexception io exception occurs reading procselfcgroup
reads file containing single line path path file read single line ioexception io exception occurs reading file
returns amount free physical memory bytes
map control groups elasticsearch process belongs note map control groups vary subsystem subsystem additionally map cached running process reclassified map subsystems control group elasticsearch process ioexception io exception occurs reading procselfcgroup
cpu time statistics tasks elasticsearch control group controlgroup control group elasticsearch process cpuacct subsystem cpu time statistics ioexception io exception occurs reading cpustat control group
returns lines cpustat control group elasticsearch process belongs cpu subsystem lines represent cpu time statistics form nrperiods d nrthrottled d throttledtime d nrperiods number period intervals specified cpucfsperiodus elapsed nrthrottled number times tasks given control group throttled throttledtime total time nanoseconds tasks given control group throttled controlgroup control group elasticsearch process belongs cpu subsystem lines cpustat ioexception io exception occurs reading cpustat control group
basic cgroup stats basic cgroup stats null io exception occurred reading cgroup stats
system load averages array windows method returns null linux method returns 1 5 15minute load averages macos method return 1minute load average available system load averages null
returns line cpuacctusage control group elasticsearch process belongs cpuacct subsystem line represents total cpu time nanoseconds consumed tasks control group controlgroup control group elasticsearch process belongs cpuacct subsystem line cpuacctusage ioexception io exception occurs reading cpuacctusage control group
checks cgroup stats available checking existence procselfcgroup sysfscgroupcpu sysfscgroupcpuacct sysfscgroupmemory true stats available otherwise false
returns total amount swap space bytes
returns line memorylimitinbytes control group elasticsearch process belongs memory subsystem line represents maximum amount user memory including file cache controlgroup control group elasticsearch process belongs memory subsystem line memorylimitinbytes ioexception io exception occurs reading memorylimitinbytes control group
line procloadavg first three fields load averages averaged 1 5 15 minutes fourth field two numbers separated slash first number currently runnable scheduling entities second number scheduling entities system fifth field pid recently created process line procloadavg null
returns given method operatingsystemmxbean null method found unavailable
returns line cpucfsquotaus control group elasticsearch process belongs cpu subsystem line represents total time microseconds tasks control group run one period specified cpucfsperiodus controlgroup control group elasticsearch process belongs cpu subsystem line cpucfsquotaus ioexception io exception occurs reading cpucfsquotaus control group
returns line cpucfsperiodus control group elasticsearch process belongs cpu subsystem line represents period time microseconds frequently control groups access cpu resources reallocated controlgroup control group elasticsearch process belongs cpu subsystem line cpucfsperiodus ioexception io exception occurs reading cpucfsperiodus control group
returns amount free swap space bytes
returns total amount physical memory bytes
returns line memoryusageinbytes control group elasticsearch process belongs memory subsystem line represents total current memory usage processes cgroup in bytes controlgroup control group elasticsearch process belongs memory subsystem line memoryusageinbytes ioexception io exception occurs reading memoryusageinbytes control group
take large value intended positive overflowed return longmaxvalue instead negative number
read stream
read stream
returns given method unixoperatingsystemmxbean null method found unavailable
returns size in bytes virtual memory guaranteed available running process
returns cpu time in milliseconds used process java virtual machine running 1 supported
returns maximum number file descriptors allowed system 1 supported
returns number opened file descriptors associated current process 1 supported
returns given method operatingsystemmxbean null method found unavailable
returns heap usage percent 1 signals unknown
resolves gc type memory pool name javalangmanagementmemorypoolmxbeangetname
runs command given args output found terminal command created found command
prints help message command terminal
parses options command args executes it
construct command specified command description runnable execute main invoked description command description beforemain beforemain runnable
executes command errors thrown
wipes input output
configures logging without elasticsearch configuration files based system property esloggerlevel only such logging written console
constructs new user exception specified exit status message underlying cause exitcode exit code msg message cause underlying cause
constructs userexception exit status message show user
prints message terminal verbosity level without newline
prompt yes answer user method loop y n or default empty value entered
construct multicommand specified command description runnable execute main invoked description multicommand description beforemain beforemain runnable
construct command specified command description runnable execute main invoked commands constructed constructor must take ownership configuring logging description command description beforemain beforemain runnable
create environment command use overrideable tests
ensure given setting exists reading system properties already set
orgelasticsearchxpackcoreschedulerschedulerengineschedulenextscheduledtimeafterlong long respect license expiry date
calculates delay next trigger time now valid time bracket respect expirationdate delay 0 now time bracket delay start time bracket now passed valid time bracket delay null expirationdate license expiry date milliseconds current time milliseconds time delay
parses license json format instance license licensedefinition licenses definition xcontenttype content type license
method chooses license type randomly type null however randomly choose trial basic types types selfgenerated
determine graph exploration enabled exploration disabled license expired mode not operationmodeplatinum operationmodetrial true long license valid otherwise false
determine watcher available based current license watcher available license active hasnt expired one following types operationmodestandard operationmodeplatinum operationmodegold operationmodetrial true long license valid otherwise false
determine upgrade api enabled upgrade api available license types except operationmodemissing true long license valid otherwise false
determine document level security dls field level security fls enabled dls fls disabled mode not operationmodeplatinum operationmodetrial note consider state license security suddenly leak information true enable dls fls otherwise false
whether custom role providers allowed based license operationmode
determine current license allows retention indices modified users non operationmodebasic license update retention period note consider state license change remembered fix license true user allowed modify retention otherwise false
true auditing enabled
beats allowed long active license type trial standard gold platinum true long valid license
type realms enabled based license operationmode
updates current state license change features available mode mode type current license active true current license exists within allowed usage period false expired missing mostrecenttrialversion cluster has point commenced trial recent version that may null never generated trial license cluster recent trial prior metadata tracked 61
true ip filtering enabled
determine jdbc support enabled jdbc available operationmodeplatinum operationmodetrial licences
true authentication authorization enabled indicate realms available allowedrealmtype enabled realms
determine machine learning enabled machine learning disabled license expired mode not operationmodeplatinum operationmodetrial true long license valid otherwise false
logstash allowed long active license type trial standard gold platinum true long valid license
extract list remote cluster aliases list index names remote index names form clusteraliasindexname clusteralias extracted index name represents remote index indices collection index names remote cluster names
remote cluster license info method invoked instance represents failing license check remote cluster license info
checks specified clusters license compatibility specified callback invoked clusters licensecompatible otherwise specified callback invoked first cluster licensecompatible clusteraliases cluster aliases check listener callback
constructs error message license incompatibility feature name feature initiated remote cluster license check remoteclusterlicenseinfo remote cluster license info cluster failed license check error message representing license incompatibility
constructs remote cluster license checker specified license predicate checking license compatibility predicate need check active license state handled remote cluster license checker client client predicate license predicate
creates license state given license type active state checks given method returns expected
checks ack message going from license type to license type todo check actual messages number them copied previous license tests
registers new license cluster master operation installs new license master provided valid
notifies registered licensees license state change andor new active license based license currentlicensesmetadata additionally schedules license expiry notifications event callbacks relative current licenses expiry
remove license cluster state metadata
global block orgelasticsearchgatewaygatewayservicestatenotrecoveredblock notify licensees issue autogenerated license license installedissued yet
masteronly operation generate onetime global self generated license self generated license generated stored current cluster state metadata existing license cluster currently basic license expiration date new basic license expiration date generated
verifies license content signature using packaged public key license verify true valid false otherwise
sets license license license builder
exception thrown feature action requires valid license license expired feature accessible expiredfeaturemetadata exceptions rest header
checks signature self generated license older version needs recreated new key
one license displayed per feature selected license latest expirydate licenses feature licenses sorted latest issuedate
returns encrypted private key file content provided passphrase
read public key file content
decrypts provided encrypteddata passphrase
returns encrypted public key file content provided passphrase
encrypts provided data passphrase
read encrypted private key file content provided passphrase
current licenses status
returns true license autogenerated by license plugin false otherwise
operation mode license computed license type license mode file
returns builder converts pre 20 licenses new license format
sets operation mode file watcher license initializes file watcher license type allows override operation mode file
returns true iff license production licnese
generates signature licensespec signature structure version magic pubkeydigest signedlicensecontent signed license
implements hashcode map string arrays map string arrays doest work hashcode
implements equals map string arrays map string arrays used xpack protocol classes doest work equal
write given user inner authenticateduser
compare fields
compare fields
equality test
total number input records read processed record count date parse error records count order record count records missing fields counted still written total number input records read long
compare fields
compare fields embedded anomaly records if any
compare fields embedded anomaly records if any
parse categorizationanalyzer configuration custom parser needed due complexity format many elements able specified either name builtin element object containing custom definition
method used unit tests production code config always parsed fragment
builds job job
set wall clock time last data upload lastdatatime wall clock time
overridden equality test
returns default description given detector detector detector default description requested default description
appends given stringbuilder default description given detector detector detector default description requested sb stringbuilder append
overridden equality test
gets limit number examples stored per category limit null set
maximum size model mb anomaly detector drop new samples prevent model using memory set memory limit null set
parse date object given current parser field name parser current xcontentparser fieldname fields preferred name utilized exception parsed date object ioexception xcontentparser
lists indices types compared equality sorted first test could fail simply indices types lists different orders
lists indices types compared equality sorted first test could fail simply indices types lists different orders
set source watch
deletes users every test case test adds any
reenables watcher every test case test disables it one does
tests run administrative user use esshieldrunasuser become less privileged user
check connected cluster named elasticsearch
create index index docs
parse script configured given settings
helper method throw exception one type script specified
build scripts following xcontent structure id source lang options option0 option1 params param0 param1 example source return mathlogdocpopularity paramsmultiplier lang painless params multiplier 1000 note lang options params included specified also handles templates special way scriptcontenttypeoption option provided scripttypeinline specified template preserved raw field source query lang options option0 option1 params param0 param1
since inline scripts accept code rather id must also able handle template parsing hence need custom parsing code templates consist either string json object json object discovered content type option must also saved compiler option
validates parameters creates script defaultlang default lang compiletime constant must provided runtime way case legacy default language used previously stored queries
constructor script requires use compiler options type scripttype lang language script scripttype scripttypeinline scripttypestored scripts null specified access scripts stored part stored scripts deprecated api idorcode id script scripttype scripttypestored code script scripttype scripttypeinline options map compiler options script scripttype scripttypeinline null otherwise params userdefined params bound script execution
set id type stored script
creates script read input stream
parse xcontent script following formats parsed simple format defaults scripttypeinline compiler options userdefined params example return mathlogdocpopularity 100 complex format scripttype idorcode required lang options params required exactly one id source must specified id source lang options option0 option1 params param0 param1 example source return mathlogdocpopularity paramsmultiplier lang painless params multiplier 1000 also handles templates special way complexly formatted query specified another complex json object query assumed template format preserved source query lang options option0 option1 params param0 param1 parser xcontentparser used defaultlang default language use language specified default language isnt necessarily one defined scriptdefaultscriptlang due backwards compatibility requirements related stored queries using previously default languages parsed script
check whether many compilations within last minute throwing circuit breaking exception so variant token bucket algorithm httpsenwikipediaorgwikitokenbucket thought bucket water every time bucket checked water added proportional amount time elapsed since last time checked enough water removed request allowed enough water request denied like normal bucket water added overflows bucket extra watercapacity discarded never water bucket size bucket
configures maximum script compilations per five minute window newrate new expected maximum number compilations per five minute window
compiles script using given context compiled script may used construct instances script given context
calling getname
standard constructor id unique identifier type readwritten stream parsefield specifies name used parse input queries defaultenabled whether scripttype run default
reads int input stream converts scripttype scripttype read stream throws illegalstateexception scripttype found based id
return score current document
set current document run script next
doc lookup lucene segment script created for
recommended test anyway
returns json version exception debugging
create new scriptexception message short simple summary happened compile error must null cause underlying cause exception must null scriptstack implementationspecific stacktrace error script must null empty though avoided possible script identifier script failed must null lang scripting engine language painless must null nullpointerexception parameters null
deserializes scriptexception streaminput
ensure script stack immutable
test elements present json output
ensure round trip serialization
ensure parameters null
returns method given name throws exception multiple found
construct context related instance compiled classes
write xcontent scriptmetadata following format written storedscriptsourcetoxcontentxcontentbuilder params storedscriptsourcetoxcontentxcontentbuilder params
delete script existing stored scripts based userspecified id id userspecified id use look up
parse xcontent scriptmetadata following format parsed storedscriptsourcefromxcontentxcontentparser boolean storedscriptsourcefromxcontentxcontentparser boolean loading source prior 60 multiple scripts using old namespace id format langid found id different languages error occur
convenience method build return new scriptmetadata adding specified stored script
add new script existing stored scripts based userspecified id script id already exists overwritten id userspecified id use look up source userspecified stored script data held storedscriptsource
convenience method build return new scriptmetadata deleting specified stored script
standard storedscriptsource constructor lang language compile script with must null source source source compile with must null options compiler options compiled with must null use empty map represent options
validates parameters creates storedscriptsource ignoreempty specify true ignoreempty empty source check allow empty templates loaded backwards compatibility allow empty templates loaded backwards compatibility
write xcontent storedscriptsource following format written script lang source options option0 option1 note source parameter also handle templates written complex json
writes storedscriptsource stream write lang source options parameters
since stored scripts accept templates rather scripts must also able handle template parsing hence need custom parsing source templates consist either string json object json object discovered content type option must also saved compiler option
reads storedscriptsource stream version 53 read lang source options parameters versions prior 53 source parameter read bytes reference
parse xcontent storedscriptsource following formats parsed simple script format compiler options userdefined params example script return mathlogdocpopularity 100 format requires lang specified using deprecated stored script namespace as url parameter put request see scriptmetadata information stored script namespaces complex script format using new stored script namespace lang source required options optional script lang source options option0 option1 example script lang painless source return mathlogdocpopularity paramsmultiplier use source may also substituted code backcompat 53 55 format example script lang code options option0 option1 note source parameter also handle template parsing including complex json object content content request parsed described above parsed storedscriptsource
converts parseexception compiletime linktime scriptexception
hack filter scripts must return booleans instead doubles expression do see httpsgithubcomelasticelasticsearchissues26429
parses restrequest body returns multisearchtemplaterequest
actual search response null failure
actual failure message null failure
simplicity create minimal response already dedicated test class search response parsing serialization
note cant rely normal equals hashcode checks since searchresponse doesnt currently implement equals hashcode instead compare template outputs equality perform sanity checks search response instances
compile template string in case mustache object later reused execution fill missing parameter values templatesource string representing template compile compiled template object later execution
template compiled template object wrapper
test parsing multisearchtemplateresponse inner failures dont support asserting xcontent equivalence given exceptions parsed back original class run usual abstractxcontenttestcasetestfromxcontent without failures test failures disable asserting xcontent equivalence end
test template expressed single escaped string
test template contain conditional clause case beginning string
test template contain conditional clause case end string
sets many search requests specified multi search requests allowed ran concurrently
add search template request execute note order important search response returned order search requests
add search template request execute note order important search response returned order search requests
compile time function extracts name variable tojsonvariablenametojson
creates xcontentparser given string replacing single quote double quotes
note checking equality xcontent parsing omit two parts request simulate option since parameter included requests xcontent its instead used determine request endpoint random searchrequest since component affects request parameters also isnt captured requests xcontent
httpswwwietforgrfcrfc4627txt unicode characters may placed within quotation marks except characters must escaped quotation mark reverse solidus control characters u0000 u001f
enables explanation hit score computed disabled default
enables profiling query disabled default
adds deleterequest list actions execute
adds framed data binary format
sets number shard copies must active proceeding write see replicationrequestwaitforactiveshardsactiveshardcount details
timeout wait index operation cant performed immediately defaults 1m
adds updaterequest list actions execute
adds framed data binary format
adds updaterequest list actions execute
timeout wait index operation cant performed immediately defaults 1m
adds indexrequest list actions execute follows behavior indexrequest for example id provided one generated usage create flag
adds deleterequest list actions execute
adds indexrequest list actions execute follows behavior indexrequest for example id provided one generated usage create flag
adds new rescorer rescorer rescorer configuration window rescore window chaining
separated list routing values control shards search executed on
set enable scrolling search request specified timeout
adds generic sort builder orgelasticsearchsearchsortsortbuilders
document types execute search against defaults executed types
sets filter executed query executed affect search hits not aggregations filter always executed last filtering mechanism
adds docvalue based field load return field stored recommended use non analyzed numeric fields name field get docvalue
sets indices search executed on
clears rescorers builder sets first one use multiple rescore windows use addrescorerorgelasticsearchsearchrescorerescorerbuilder int rescorer rescorer configuration chaining
orgelasticsearchsearchsearchhit returned version
indicates whether response contain stored source every hit
routing values control shards search executed on
adds aggregation search operation
sets minimum score docs filtered out
set sort values indicates docs request search after
clears rescorers builder chaining
set enable scrolling search request specified timeout
sets boost specific index receive query executed it index index apply boost indexboost boost apply index
indicate source returned every hit include andor exclude set include simple wildcard elements include optional include optionally wildcarded pattern filter returned source exclude optional exclude optionally wildcarded pattern filter returned source
indicate source returned every hit include andor exclude set include simple wildcard elements includes optional list include optionally wildcarded pattern filter returned source excludes optional list exclude optionally wildcarded pattern filter returned source
sets preference execute search defaults randomize across shards set local prefer local shards custom value guarantees order used across different requests
clears rescorers builder sets first one use multiple rescore windows use addrescorerorgelasticsearchsearchrescorerescorerbuilder int rescorer rescorer configuration window rescore window chaining
adds aggregation search operation
sets source request searchsourcebuilder
index start search from defaults 0
adds script based field load return field stored recommended use non analyzed numeric fields name name represent value return hit script script use
search type execute defaults orgelasticsearchactionsearchsearchtypedefault
optional timeout control long search allowed take
applies sorting controls scores tracked well defaults false
specifies type requested indices ignore wildcard indices expressions example indices dont exist
stats groups request aggregated under
sets request use request cache not assuming for example now used never cached default not set null default index level setting request cache enabled not
number search hits return defaults 10
adds new rescorer rescorer rescorer configuration chaining
string representation search type execute defaults orgelasticsearchactionsearchsearchtypedefault one dfsquerythenfetchdfsquerythenfetch dfsqueryandfetchdfsqueryandfetch querythenfetchquerythenfetch queryandfetchqueryandfetch
optional document count upon collecting search query early terminate
adds sort given field name sort ordering field name field order sort ordering
constructs new search source builder search query orgelasticsearchindexqueryquerybuilders
adds stored field load return note must stored part search request none specified source document return
query profiled defaults false
delegates orgelasticsearchsearchbuildersearchsourcebuildersuggestsuggestbuilder
stats groups request aggregated under
orgelasticsearchsearchsearchhit returned explanation hit ranking
set enable scrolling search request
sets fields load return part search request none specified source document returned
ask shard check whether inactive reduces indexing buffer so
shard calls indexingdelete op
called indexshard record estimated bytes written translog operation
ask shard refresh background free heap
tests index structure creation fails relocation new node shard stuck properly failed
deletes index assigned node method cleans disk folders relating index deal inmemory structures call removeindexindex indexremovalreason string
creates new mapper service given index order administrative work like mapping updates should not used document parsing result exception note returned mapperservice closed unneeded
creates new pending delete shard
method verifies given metadata holds sane values create indexservice method tries update meta data created indexservice given metadataupdate different given metadata method throw exception creation update fails created indexservice registered closed immediately
deletes shard already acquired shard lock reason reason shard deletion lock lock shard delete indexsettings shards index settings ioexception ioexception occurs
cache something calculated shard level shard shard item part reader reader shard used invalidate cache changes cachekey key thing cached within shard loader loads data cache needed contents cache result calling loader
creates new indexservice without registering
processes pending deletes given index method acquire locks given index process pending deletes index pending deletes might occur os doesnt allow deletion files used different process ie windows files might still open virus scanner shared filesystem replica might closed primary deleted causing problems delete calls schedule deletes later index index process pending deletes timeout timeout used processing pending deletes
returns indexservice specified index exists otherwise indexnotfoundexception thrown
clears caches given shard id shard still allocated node
loads cache result computing needed executing query phase otherwise deserializing cached value searchcontextqueryresult contexts query result combination load compute allows single load operation cause requests key wait till loaded reuse cache
shard request cached all
adds pending delete given index
checks changes adding removing indices shards allowed illegalstateexception changes allowed
creates new pending delete index
method deletes shard contents disk given shard id method fail shard deleting prevented candeleteshardcontentshardid indexsettings shards lock acquired data nodes deleted shard last shard folder index method attempt remove index folder well reason reason shard deletion shardid shards id delete clusterstate required access indexes settings etc ioexception ioexception occurs
returns sharddeletioncheckresult signaling whether shards content given shard deleted shardid shard delete indexsettings shardss relevant indexsettings required access indexes settings etc
deletes index store trying acquire shards locks index method delete metadata index even actual shards cant locked package private testing
adds pending delete given index shard
verify contents disk given index deleted not delete contents method assumes index already deleted cluster state andor explicitly index tombstones index index make sure deleted disk clusterstate clusterstate ensure index part indexmetadata index loaded disk
creates new indexservice given metadata indexmetadata index metadata create index builtinlisteners list builtin lifecycle indexeventlistener used along side perindex listeners resourcealreadyexistsexception index already exists
returns indexservice specified index exists otherwise returns null
method returns true current node allowed delete given index case index deleted metadata allocation local node index isnt shared file system index index check whether deletion allowed indexsettings indexsettings given index true index deleted node
clear entries belong given index
get usage statistics given shard
test checks edge case where node index lets call uuid 1 deleted so tombstone entry exist cluster state created new index uuid 2 shutdown node comes back online look tombstones deletions proceed trying delete uuid 1 throw errors index still exists cluster state case ensuring tombstones name current valid indices dont cause confusion trying delete index exists see httpsgithubcomelasticelasticsearchissues18054
tests teh mapperservice created indicesservicecreateindexmapperserviceindexmetadata contains custom types similarities registered plugins
read stream
issues cache clear waits 30 seconds field data breaker cleared
returns true nodes used noop breaker
reset breaker settings back defaults
relocate shard block cluster state processing relocation target node activate shard
test safely concurrently index get stats test inspired serialization issue arose due race getting doc stats heavy indexing race could lead deleted docs negative would serialized variablelength long since serialization negative longs using variablelength format unsupported orgelasticsearchcommoniostreamstreamoutputwritevlonglong stream would become corrupted here want test continue get stats indexing
closes current recovery target waits certain timeout resources freed returns true resetting recovery successful false recovery target already cancelled failed marked done
creates new recovery target object represents recovery provided shard indexshard local shard want recover sourcenode source node recovery recover listener called recovery completedfailed ensureclusterstateversioncallback callback ensure current node least cluster state provided version necessary primary relocation new primary knows ongoing replica recoveries replicating documents see recoverysourcehandler
renames temporary files true name potentially overriding existing files
implementation recoverytargethandler
mark current recovery done
creates orgapachelucenestoreindexoutput given file name note indexoutput actually point temporary file note use getopenindexoutputstring filename retrieve indexoutput later stage
fail recovery call listener e exception encapsulating failure sendshardfailure indicates whether notify master shard failure
cancel recovery calling method clean temporary files release store unless object use in case cleaned ongoing users call decref cancellablethreads used threads interrupted
remove orgapachelucenestoreindexoutput given file callers responsibility close
fail recovery given id if found remove recovery collection id id recovery fail e exception reason failure sendshardfailure true shard failed message sent master
cancel recovery given id if found remove recovery collection
gets recoverytarget given id recoverystatus returned its ref count already incremented make sure its safe use however must call recoverytargetdecref done it typically using method trywithresources clause returns null recovery found
mark recovery given id done if found
important recoverytargettryincref successfully called status
cancel ongoing recoveries given shard reason reason cancellation shardid shardid cancel recoveries true recovery cancelled
resets recovery performs recovery restart currently recovering index shard indexshardperformrecoveryrestart newly created recoverytarget
starts new recovery given shard source node state id new recovery
similar getrecoverylong throws exception recovery found
returns recovery source node only nonnull peer recovery
percent bytes recovered total files bytes to be recovered
percent recovered ie reused files total files recovered
total bytes files recovered potentially yet done
number file recovered excluding ongoing files
total number bytes th shard
total number files recovered potentially yet done
returns elapsed time millis 0 timer started
total number bytes recovered far including existing reused
construct request starting peer recovery shardid shard id recover targetallocationid allocation id target shard sourcenode source node remover targetnode target node recover metadatasnapshot lucene metadata primaryrelocation whether recovery primary relocation recoveryid recovery id startingseqno starting sequence number
initialize request specified relocation recoveryid recovery id relocation shardid shard id relocation primarycontext primary context
performs recovery local engine target
send given snapshots operations sequence number greater specified staring sequence number handlers target node operations bulked single request depending operation count limit sizeinbytes limit startingseqno sequence number operations sequence number greater sent requiredseqnorangestart lower sequence number required range endingseqno upper bound sequence number range sent inclusive snapshot translog snapshot replay operations local checkpoint target total number operations sent ioexception io exception occurred reading translog snapshot
perform phase two recovery process phase two uses snapshot current translog without acquiring write lock however translog snapshot pointintime view translog sends translog operation target node replayed new shard startingseqno sequence number start recovery from sequencenumbersunassignedseqno ops sent requiredseqnorangestart lower sequence number required range ending endingseqno endingseqno highest sequence number sent snapshot snapshot translog local checkpoint target
perform phase1 recovery operations indexcommit snapshot performed commit operations files fsyncd effectively allowed index recovery phases done phase1 examines segment files target node copies segments missing segments size checksum reused
determines source translog ready sequencenumberbased peer recovery main condition source translog contains operations local checkpoint target already know translog contains contain ops source local checkpoint stop check there true source ready sequencenumberbased recovery ioexception io exception occurred reading translog snapshot
tests scenario recovery target successfully sends recovery request source channel gets closed source working recovery process
obtains snapshot store metadata recovery target recoverytarget target recovery snapshot store metadata
get starting sequence number sequencenumberbased request recoverytarget target recovery starting sequence number sequencenumbersunassignedseqno obtaining starting sequence number failed
prepare start recovery request recoverytarget target recovery start recovery request
test makes sure infinite loop flushing the condition shouldperiodicallyflush eventually false peerrecovery primary sends fullybaked index commit
adds recovery source handler
blocking version syncedflushservicesendpresyncrequestslist clusterstate shardid actionlistener
blocking version syncedflushserviceattemptsyncedflushshardid actionlistener
send presync requests started copies given shard
returns number flight operations primary 1 upon error
utility method perform synced flush shards multiple indices see attemptsyncedflushshardid actionlistener details
failure constructor
total number successful shards
array shard failures
success constructor
test breaker correctly redistributes different breaker case request breaker borrows space fielddata breaker
validate child settings valid
checks whether parent breaker tripped
allows register custom circuit breaker warning overwrite existing custom breaker name
tests plugins register preconfigured token filters vary behavior based elasticsearch version lucene version vary based version all
tests plugins register preconfigured token filters vary behavior based elasticsearch version lucene version vary based version all
tests plugins register preconfigured char filters vary behavior based elasticsearch version lucene version vary based version all
loads hunspell dictionary given local locale locale hunspell dictionary loaded nodesettings node level settings env node environment from conf path resolved loaded hunspell dictionary exception loading fails due io errors malformed dictionary files
scans hunspell directory loads found dictionaries
returns hunspell dictionary given locale locale name locale
hunspell dictionary directory may contain settingsyml holds dictionary specific settings default values settings defined given default settings dir directory dictionary defaults default settings dictionary resolved settings
creates new global scope analysis provider without index specific settings settings provider itself used get default instance analysis factory without binding index environment nodes environment load resources persistent storage name name analysis component new provider instance ioexception ioexception occurs illegalargumentexception provider requires analysis settings ie requiresanalysissettings returns true
get pre built analyzer name fallback default one name analyzer name defaultanalyzer default analyzer name found
map containing preconfigured token filters available installing plugin map name token filter class lucene tokenfilterfactory emulating lucene plain tokenfilterfactory null test look name lucene plain tokenfilterfactory right hand side void
map containing preconfigured tokenizers available installing plugin map name token filter class lucene tokenizerfactory emulating lucene plain tokenizerfactory null test look name lucene plain tokenizerfactory right hand side void
checks cluster state matches internal state indicesclusterstateservice instance state cluster state used matching
finds routing source node peer recovery return null found note method expects shard routing require peer recovery use shardroutingrecoverysource check needed not
deletes indices with shard data event cluster change event
returns shard specified id exists otherwise returns null
removes shard entries failed shards cache longer allocated node master sends shard failures shards marked actively allocated node dont actually exist node resends shard failures shards still marked allocated node previously failed state new cluster state
notifies master shards dont exist supposed active node state new cluster state
removes shards currently loaded indicesservice disappeared routing table current node method delete shard data state new cluster state
removes indices shards allocated node delete shard data wait enough shard copies exist cluster deleting shard data triggered orgelasticsearchindicesstoreindicesstore event cluster changed event
rare cases possible nodes gets instruction replace replica shard thats postrecovery new initializing primary allocation id happen batching cluster states include starting replica closing indices opening allocating primary shard node question node clean its initializing replica replace new initializing primary
test ensures node joins brand new cluster different cluster uuid different cluster previously part of inmemory index data structures removed disk contents indices remain later imported dangling indices normally first cluster state update node receives new cluster would contain cluster block would cause inmemory structures removed see indicesclusterstateserviceapplyclusterstateclusterchangedevent case node joined cluster state updates behind would received cluster block case still need remove inmemory structures ensuring data remains disk test executes particular scenario
prepares settings gathering elasticsearch system properties optionally loading configuration settings input custom settings use overwritten settings configuration file properties map properties keyvalue pairs usually commandline configpath path config directory use null indicate default settings environment tuple
finish preparing settings replacing forced settings defaults need added
checks settings values make sure old prompt settings deprecated 600 check removed 800
initializes builder given input settings applies settings specified map these settings typically come command line output settings builder apply input default settings input input settings essettings map apply settings
prepares settings gathering elasticsearch system properties setting defaults
test add appropriate mock services plugins added heavy test testing component weve broken past important
rank copy data according adaptive replica selection formula c3 paper httpswwwusenixorgsystemfilesconferencensdi15nsdi15papersureshpdf
optionally return nodestatistics given nodeid response information exists given node returns empty optional node found
returns map node id ranking nodes based adaptive replica formula
creates new circuitbreakerservice based settings provided breakertypekey
constructs clusterinfoservice may mocked tests
start node node already started method noop
adds default node name given setting doesnt already exist given setting node name already set new copy default node name set
get custom name resolvers list based discovery plugins list discoveryplugins discovery plugins list
hook validating node network services started cluster service started network service starts accepting incoming network requests context bootstrap context node boundtransportaddress network addresses node bound publishing
writes file logs dir containing ports given transport type
creates new searchservice method overwritten tests inject mock implementations
constructor provided use unit tests xcontentparser may available
constant time equality check char arrays avoid potential timing attacks
decodes provided byte utf8 char done avoiding conversions string provided byte modified method caller needs take care clearing value sensitive
constant time equality check strings avoid potential timing attacks
encodes provided char utf8 byte done avoiding conversions string provided char modified method caller needs take care clearing value sensitive
tests char contains sequence characters match prefix like stringstartswithstring require conversion char string
create new ewma given alpha initialavg smaller alpha means new data points less weight high alpha means older data points lower influence
create value indication explicit choice value setting value explicit true value passed conscious decision false using kind default
provides secure source randomness acts exactly similar get returning new securerandom
provides reproducible source randomness seeded long seed settings key setting settings settings containing seed setting setting access seed reproducible source randomness
provides source randomness reproducible running elasticsearch test suite otherwise produces nonreproducible source randomness reproducible sources randomness created system property testsseed set security policy allows reading system property otherwise nonreproducible sources randomness created source randomness illegalstateexception running tests able acquire instance random randomizedcontext tests running testsseed set
puts lower numberoflongbytes l array starting index pos
determine whether taskinfo array built time set false using stopwatch millions intervals task info structure consume excessive memory default true
return informative string describing tasks performed custom reporting call gettaskinfo use task info directly
return name last task
return array data tasks performed
start named task results undefined stop timing methods called without invoking method taskname name task start stop
stop current task results undefined timing methods called without invoking least one pair start stop methods start
return string table describing tasks performed custom reporting call gettaskinfo use task info directly
return time taken last task
determine name package given class eg javalang javalangstring class clazz class package name empty string class defined default package
creates new fieldmemorystats instance
creates new fieldmemorystats instance stream
adds merges given field memory stats stats instance
generates xcontent given builder fields stats instance builder builder generated key top level key stats object rawkey raw byte key fields byte sizes readablekey readable key fields byte sizes
split string first occurrence delimiter include delimiter result tosplit string split delimiter split string two element array index 0 delimiter index 1 delimiter neither element includes delimiter null delimiter wasnt found given input string
format double value single decimal points trimming trailing 0
trim occurrences supplied leading character given string str string check leadingcharacter leading character trimmed trimmed string
take string delimited list convert string array a single delimiter consists one character still considered single delimiter string rather bunch potential delimiter characters contrast tokenizetostringarray str input string delimiter delimiter elements this single delimiter rather bunch individual delimiter characters charstodelete set characters delete useful deleting unwanted line breaks eg rnf delete new lines line feeds string array tokens list tokenizetostringarray
return substringbeginindex endindex impervious string length
split specified string commas array string split array split values stringsplitstring
convenience method convert csv string list set note suppress duplicates str input string set string entries list
convenience method return collection delimited eg csv string eg useful tostring implementations coll collection display delim delimiter use probably prefix string start element suffix string end element delimited string
convenience method return string array delimited eg csv string eg useful tostring implementations arr array display delim delimiter use probably delimited string
replace occurrences substring within string another string instring string examine oldpattern string replace newpattern string insert string replacements
splits backslash escaped string separator current backslash escaping supported n t r b f escaped java string characters following backslash produced verbatim c c string split separator separator split decode decode backslash escaping
check whether given charsequence actual text specifically returns true string null length greater 0 contains least one nonwhitespace character stringutilshastextnull false stringutilshastext false stringutilshastext false stringutilshastext12345 true stringutilshastext 12345 true str charsequence check may null true charsequence null length greater 0 contain whitespace javalangcharacteriswhitespace
tokenize specified string commas set trimming whitespace ignoring empty tokens string tokenize set tokens
return string json representation provided toxcontent wraps output anonymous object needed allows control whether outputted json needs pretty printed human readable
tokenizes specified string collection using specified delimiters token delimiters method trims whitespace tokens ignores empty tokens string tokenize delimiters token delimiters supplier collection supplier type collection tokens javautilstringtokenizer
copy given collection string array collection must contain string elements only collection collection copy string array null passedin collection null
delete character given string instring original string charstodelete set characters delete eg azn delete as zs new lines resulting string
truncates string length less length backtracks throw high surrogates
test whether given string matches given substring given index str original string or stringbuilder index index original string start matching substring substring match given index
array consists zero one element all return empty array usually used everything
tokenize given string string array via stringtokenizer trims tokens omits empty tokens the given delimiters string supposed consist number delimiter characters characters used separate tokens delimiter always single character multicharacter delimiters consider using delimitedlisttostringarray string tokenize delimiters delimiter characters assembled string each characters individually considered delimiter array tokens javautilstringtokenizer javalangstringtrim delimitedlisttostringarray
match string given pattern supporting following simple pattern styles xxx xxx xxx xxxyyy matches with arbitrary number pattern parts well direct equality pattern pattern match str string match whether string matches given pattern
add sequence validation errors accumulating validation errors errors errors add
return long n stores throws exception stored value cannot converted long stores exact value
converts byte array long arr byte array convert long long converter
return long stringvalue stores throws exception stored value cannot converted long stores exact value coerce false
return byte n stores throws exception stored value cannot converted byte stores exact value
returns true value neither nan infinite
return short n stores throws exception stored value cannot converted short stores exact value
converts int byte array val int convert byte array byte array converted
converts long byte array val long convert byte array byte array converted
converts int byte array val int convert byte array byte array converted
test rounded values always greater equal last rounded value date increasing example covers interval around 20111030t0210000100 time zone cet interval 2700000ms
test dst end interval rounding cet 25 october 2015 030000 clocks turned backward 1 hour 25 october 2015 020000 local standard time
tests dst transition overlaps day roundings
test dayintervalrounding interval 12h time zone shift
special test intervals dont fit evenly rounding interval case interval crosses dst transition point rounding local time land dst gap results wrong utc rounding values
test dst start offset fitting interval eg asiakathmandu adding 15min 19860101t000000 interval 19860101t0015000545 19860101t0020000545 5min long
randomized test orgelasticsearchcommonroundingroundingtimeintervalrounding random interval time zone offsets
test dst start interval rounding cet 27 march 2016 020000 clocks turned forward 1 hour 27 march 2016 030000 local daylight time
test timeintervalrounding interval 12h time zone shift
test 10025 strict local utc conversion cause joda exceptions dst start
test time zone whose days overlap clocks set back across midnight end dst
randomized test timeunitrounding test uses random datetimeunit zoneid often 50 time chooses test dates exactly close offset changes eg dst chosen time zone rounds test date performs various checks rounding unit interval defined this assumptions tested described assertintervallong long long rounding zoneid
even nasty go transition selected time zone one third cases stay there otherwise go half unit back forth
perform number assertions checks orgelasticsearchcommonroundingroundingtimeunitrounding intervals rounded expected low end rounding interval unrounded date interval checked rounding nextroundingvalue expected upper end rounding interval rounding rounding instance
test half day rounding intervals scrossing dst
special test dst switch 9491
returns true iff sequence chars one truefalse text sequence check offset offset start length length check
returns false text false 0 off no else true kept provide automatic upgrades pre 60 indices use parsebooleanstring boolean instead
returns true sequence chars one truefalseonoffyesno01 text sequence check offset offset start length length check kept provide automatic upgrades pre 60 indices use isbooleanchar int int instead
returns false text false 0 off no else true kept provide automatic upgrades pre 60 indices use parsebooleanstring boolean instead
parses char representation boolean value boolean true iff sequence chars true false iff sequence chars false provided default value iff either text null length 0 illegalargumentexception string cannot parsed boolean
parses string representation boolean value boolean true iff provided value true false iff provided value false illegalargumentexception string cannot parsed boolean
returns false text false 0 off no else true kept provide automatic upgrades pre 60 indices use parsebooleanchar int int boolean instead
value text parse defaultvalue default value return provided value null see parsebooleanstring
fieldname match field fieldname field name match parsefield deprecationhandler called fieldname deprecated true fieldname matches acceptable names parsefield
return new parsefield field names deprecated replaced allreplacedwith
name primary name field returned getpreferredname deprecatednames names field deprecated accepted strict matching used
returns base64 encoded version version 40 compatible uuid defined here httpwwwietforgrfcrfc4122txt
returns base64 encoded version version 40 compatible uuid randomly initialized given javautilrandom instance defined here httpwwwietforgrfcrfc4122txt
returns string representation current timevalue note method might produce fractional time values ex 16m cannot parsed method like timevalueparsestring string string
scale d m checking overflow short name make code readable
parses provided string ratiovalue string either percentage format eg 735 floatingpoint ratio format eg 0735
scale d m checking overflow short name make code readable
parse provided string memory size method either accepts absolute values 42 default assumed unit byte 2mb percentages heap size heap 1g 10 parsed 100mb
parses given distance converts specified unit distance string defining distance value unit defaultunit unit assumed none defined unit result parsed distance
parse distance given string distance string defining distance defaultunit distanceunit assumed unit provided first argument parsed distance
converts given distance given distanceunit given distanceunit distance distance convert unit convert distance unit distance convert given distance converted distance given unit
write distanceunit streamoutput streamoutput write
convert string distanceunit unit name unit unit matching given name illegalargumentexception unit matches given name
converts distance value given specific distanceunit value equal specified value distanceunit unit unit result converted distance
parses suffix given distance string return corresponding distanceunit distance string representing distance defaultunit default unit use unit provided string unit given distance
read distanceunit streaminput streaminput read distanceunit distanceunit read streaminput ioexception unit read streaminput illegalargumentexception matching distanceunit found
string representation value guaranteed able parsed using parsebytessizevaluestring bytesizevalue string unlike tostring method output fractional rounded values method preferred serialising value json
read stream
test ensures aware accidental reordering distance unit ordinals since equality eg circleshapebuilder hashcode serialization rely
copy contents given reader string closes reader done reader copy string copied ioexception case io errors
copy contents given string given output writer closes write done string copy writer copy ioexception case io errors
copy contents given inputstream given outputstream closes streams done stream copy stream copy number bytes copied ioexception case io errors
copy contents given byte array given outputstream closes stream done byte array copy outputstream copy ioexception case io errors
copy contents given reader given writer closes done reader copy writer copy number characters copied ioexception case io errors
returns array files given directory
returns true iff one files exists otherwise false
check directory exists directory readable current user
returns array files given directory matching
appends path given base strips n elements path strip 0
returns array files given directory matching glob
check whether file denoted given path hidden practice check file name starts dot preferred filesishiddenpath depend operating system
returns inputstream given url url protocol file jar host port
deletes subdirectories given path recursively javalangillegalargumentexception given path directory
returns path uri works like pathsget remember almost never used usually resolve path existing one
tries resolve given path list available roots path starts one listed roots returned back method otherwise null returned
read file channel byte buffer starting certain position channel channel read channelposition position read dest destination javaniobytebuffer put data total bytes read 1 attempt made read past eof method always tries read bytes fit destination byte buffer
writes part byte array javaniochannelswritablebytechannel source byte array copy offset start copying offset length many bytes copy channel target writablebytechannel
read length bytes position file channel eofexception thrown attempt read beyond end file channel channel read channelposition position read dest destination byte array put data destoffset offset dest read length number bytes read
writes javaniobytebuffer javaniochannelswritablebytechannel bytebuffer source buffer channel channel write
read file channel byte buffer starting certain position eofexception thrown attempt read beyond end file channel channel read channelposition position read dest destination javaniobytebuffer put data
read length bytes position file channel channel channel read channelposition position read dest destination byte array put data destoffset offset dest read length number bytes read total bytes read 1 attempt made read past eof method always tries read bytes fit destination byte buffer
read length bytes position file channel
flushes internal bytes buffer ioexception io error occurs
writes portion string str string offset start writing characters len number characters write ioexception io error occurs
writes specified character sequence csq character sequence ioexception io error occurs
replaced setoutputoutputstream
sets output stream use writing writer closed examplecode writer writer new utf8streamwritersetoutputstreamout code equivalent writes faster code writer writer new javaiooutputstreamwriterout utf8 code output stream utf8 writer illegalstateexception writer reused close closed reset reset
writes character given 31bits unicode code 31 bits unicode character written ioexception io error occurs
writes single character method supports 16bits character surrogates c char character written possibly surrogate ioexception io error occurs
closes reset resets writer reuse ioexception io error occurs
flushes stream stream saved characters various write methods buffer write immediately intended destination then destination another character byte stream flush it thus one flush invocation flush buffers chain writers outputstreams ioexception io error occurs
writes portion array characters cbuf array characters offset start writing characters len number characters write ioexception io error occurs
returns releasable implementation orgelasticsearchcommonbytesbytesreference represents current state bytes stream
writes string array nullable string writes 0 empty string
write optional namedwriteable stream
writes namedwriteable current stream first writing name object
writes collection generic objects via writer
writes string array nullable string writes false
write map ktype keys vtype mapstring string map outwritemapmap streamoutputwritestring streamoutputwritestring keywriter key writer valuewriter value writer
write timevalue stream
writes array bytes b bytes write
writes long variablelength format without first checking negative package private testing use writevlonglong instead
writes list writeable objects
writes given geopoint stream
write map ktype keys vtype lists mapstring liststring map outwritemapoflistsmap streamoutputwritestring streamoutputwritestring keywriter key writer valuewriter value writer
write optional timevalue stream
writes int four bytes
writes list streamable objects
writes long variablelength format writes one ten bytes values remapped sliding sign bit lsb encoded unsigned number eg 0 0 1 1 1 2 longminvalue 1 longmaxvalue 2 numbers small absolute value small encoding numbers known nonnegative use writevlonglong
writes nonnegative long variablelength format writes one ten bytes smaller values take fewer bytes negative numbers use ten bytes trip assertions if running tests prefer writelonglong writezlonglong negative numbers
write map stream consistent order make sure every map generated bytes order same method compatible streaminputreadmap streaminputreadgenericvalue method handle map keys order maps contained within map
write optional plain datetimezone stream
writes int variablelength format writes one five bytes smaller values take fewer bytes negative numbers always use 5 bytes therefore better serialized using writeint
set features stream see streamoutputhasfeaturestring features features stream
writes list strings
writes enumset type e serialized based its ordinal value
writes optional bytes reference including length header use need differentiate null empty bytes references use writebytesreferencebytesreference streaminputreadbytesreference not
notice serialization map stream map stream map maybe different keyvalue orders maybe different stream order want keep stream map stream map stream order stream use writemapwithconsistentorder
writes long eight bytes
writes bytes reference including length header
writes specified array stream using specified writer element array method seen writer version streaminputreadarraywriteablereader intfunction length array encoded variablelength integer first written stream elements array written stream writer writer used write individual elements array array type elements array ioexception io exception occurs writing array
serializes potential null value
writes list namedwriteable objects
creates new entry stored registry
constructs new registry given entries
returns reader namedwriteable object identified name provided argument category
create non recycling bytesstreamoutput initial capacity 0
creates new inputstreamstreaminput size limit input stream wrap sizelimit hard limit number bytes given input stream used internal input validation
reads optional bytes reference stream might hold actual reference underlying bytes stream use must differentiate null empty use streaminputreadbytesreference streamoutputwritebytesreferencebytesreference not
read map ktype keys vtype lists mapstring liststring map inreadmapoflistsstreaminputreadstring streaminputreadstring keyreader key reader valuereader value reader never null
reads namedwriteable current stream first reading name looking corresponding entry registry name proper object read returned default implementation throws unsupportedoperationexception streaminput doesnt hold registry use filterinputstream instead wraps stream supports namedwriteableregistry too
reads array stream using specified orgelasticsearchcommoniostreamwriteablereader read array elements stream method seen reader version streamoutputwritearraywriteablewriter object assumed stream first contains variablelength integer representing size array contains many elements read stream reader reader used read individual elements arraysupplier supplier used construct new array type elements array array read stream ioexception io exception occurs reading array
reads list namedwriteables
reads enum type e serialized based value its ordinal
reads long stored variablelength format reads one ten bytes smaller values take fewer bytes negative numbers encoded ten bytes prefer readlong readzlong negative numbers
reads four bytes returns int
reads collection objects
read list streamable objects using constructor instantiate instance expected take form listmystreamableclass list inreadstreamlistmystreamableclassnew constructor streamable instance creator never null ioexception step fails
reads enum type e serialized based value its ordinal
serializes potential null value
read optional timevalue stream returning null timevalue written
reads bytes reference stream might hold actual reference underlying bytes stream
reads bytes reference stream might hold actual reference underlying bytes stream
reads int stored variablelength format reads one five bytes smaller values take fewer bytes negative numbers always use 5 bytes therefore better serialized using readint
read timevalue stream
reads namedwriteable current stream given name assumed caller obtained name source its read stream name used looking corresponding entry registry name proper object read returned default implementation throws unsupportedoperationexception streaminput doesnt hold registry use filterinputstream instead wraps stream supports namedwriteableregistry too prefer streaminputreadnamedwriteableclass streamoutputwritenamedwriteablenamedwriteable unless compelling reason use method instead
reads vint via readvint applies basic checks ensure read array size sane method uses ensurecanreadbytesint ensure stream enough bytes read read array size
read optional plain datetimezone
reads optional namedwriteable
checks deprecated setting logs correct alternative
checks removed setting logs correct alternative
wrap two recyclers forward calls smallobjectrecycler size minsize defaultrecycler otherwise
wrap provided recycler calls recyclerobtain recyclervclose protected lock
return recycler based deque
create concurrent implementation support concurrent access concurrencylevel threads little contention
converts object value bytesref
converts value string taking special care bytesref call orgapacheluceneutilbytesrefutf8tostring
register leafreader necessary core cache key reader found later using getcorekeysforindexstring
return number tracked segments
get set core cache keys associated given index
test unmap hack detected supported lucene works around following bug httpsbugsopenjdkjavanetbrowsejdk4724038 guaranteed current status critical internal api httpopenjdkjavanetjeps260 additionally checks screw security logic around hack
returns iterable allows iterate files segments info
wait index exist timelimitmillis returns true index eventually exists false not retry directory every second least timelimitmillis
check whether one documents matching provided query
method removes files given directory referenced given segments file method open indexwriter relies index file deleter remove unreferenced files segment files newer given segments file removed forcefully prevent problems indexwriter opening potentially broken commit point leftover note method fail another indexwriter open given directory method also acquire write lock directory pruning unused files method expects existing index given directory given segments file
return scorer throws elasticsearchillegalstateexception operations given message
given scorersupplier return bits instance match documents contained set note returned bits instance must consumed order
reads segments infos given commit failing fails load
method removes lucene files given directory first try delete commit points segments files ensure broken commits corrupted indices opened future segment files cant deleted operation fails
returns number documents index referenced segmentinfos
tries extract segment reader given index reader segmentreader extracted illegalstateexception thrown
construct filterleafreader based specified base reader note base reader closed filterleafreader closed specified base reader
tries unwrap given reader first elasticsearchdirectoryreader instance found null instance found
adds given listener provided directory reader reader must contain elasticsearchdirectoryreader its hierarchy otherwise cant safely install listener illegalargumentexception reader doesnt contain elasticsearchdirectoryreader its hierarchy
test core cache key needed nrt working
initialize lookup provided segment
returns internal lucene doc id given id bytes docidsetiteratornomoredocs returned found
return null id found
return null id found pass leafreadercontext argument things still work reader wrappers hide documents still using cache key otherwise wed disable caching entirely readers
load internal doc id sequence number uid reader returning null uid wasnt found a doc id associated seqno otherwise
load primaryterm associated given docidandseqno
load internal doc id version uid reader returning null uid wasnt found a doc id version otherwise
load version uid reader returning versionsnotfound matching doc exists the version associated provided uid otherwise
test version map cache behaves properly filtered reader
test version map cache works evicted close etc
test version lookup two documents matching id
test version lookup actually works
returns true o equal this
returns terms position phrase
add multiple terms next position phrase terms may match orgapachelucenesearchphrasequerybuilderaddterm
returns relative positions terms phrase
allows specify relative position terms within phrase terms terms position position terms provided argument orgapachelucenesearchphrasequerybuilderaddterm int
returns hash code value object
potentially apply minimum match value query applied to otherwise return original query
creates new nonnested docs query indexversioncreated index version created since newer indices identify parent field efficiently
return query matches documents match given query
add existing boolean query like query priorityqueue
retrieveinterestingtermsjavaioreader string
determines passed term likely interest more like comparisons term word considered true ignored false used analysis
return query return docs like passed lucene document id docnum documentid lucene doc generate more like this query for query return docs like passed lucene document id
find words morelikethis query former result priority queue arrays one entry every word document array 6 elements elements are word string top field word comes string score word float idf value float frequency word index integer frequency word source document integer somewhat advanced routine general 1st entry array interest method exposed identify interesting words document easier method call see retrieveinterestingterms retrieveinterestingterms r reader content document fieldname field passed analyzer use analyzing content interesting words document ordered score highest scoring best entry first retrieveinterestingterms
convenience routine make easy return interesting words document advanced users call retrievetermsreader string retrieveterms directly r source document fieldname field passed analyzer use analyzing content interesting words document retrievetermsjavaioreader string setmaxqueryterms
return query return docs like passed readers added order treat multivalue fields query return docs like passed readers
return query return docs like passed fields query return docs like passed fields
adds term frequencies found tokenizing text reader map words r source text tokenized termfreqmap map terms frequencies fieldname used analyzer special perfield analysis
adds terms frequencies found vector map termfreqmap termfreqmap map terms frequencies vector list terms frequencies docfield fieldname optional field name terms skip terms
find words morelikethis query former docnum id lucene document find terms
describe parameters control more like this query formed
create like query priorityqueue
return query return docs like passed terms query return docs like passed terms
create priorityqueue wordtf map words map words keyed wordstring int objects values fieldnames array field names override defaults
creates randomscorefunction seed seed randomness salt value salt seed with ideally unique running nodeindex uidfielddata field data uid use generating consistent random values id
creates functionscorequery multiple score functions subquery query match scoremode defines different score functions combined functions scorefunctions apply combinefunction defines query function score applied minscore minimum score consider document maxboost maximum applicable boost
sets amount time entry cache expires written expireafterwrite amount time entry expires written must null must greater 0
sets amount time entry cache expires last accessed expireafteraccess amount time entry expires last accessed must null must greater 0
put entry segment key key entry add cache value value entry add cache access time entry tuple new entry existing entry one otherwise null
associates specified value specified key map map previously contained mapping key old value replaced key key specified value associated value value associated specified key
cache statistics tracking hits misses evictions taken besteffort basis meaning could outofdate midflight current cache statistics
remove entry segment key key entry remove cache onremoval callback removed entry
get entry segment expired entries returned null removed cache lru list pruned manual cacherefresh performed however caller take action using provided callback key key entry get cache access time entry isexpired test entry expired onexpiration callback entry associated key expired entry one otherwise null
relative time used track timebased evictions current relative time
remove entry segment iff future done value equal expected value key key entry remove cache value value expected associated key onremoval callback removed entry
invalidate association specified key removal notification issued invalidated entries orgelasticsearchcommoncacheremovalnotificationremovalreason invalidated key key whose mapping invalidated cache
lru sequencing keys cache supports removal sequence protected mutations cache except iteratorremove result iteration mutation undefined lruordered iterable keys cache
specified key already associated value or mapped null attempts compute value using given mapping function enters map unless null load method given key invoked once use different cacheloader implementations key concurrently may result first loader function called second returned result provided first including exceptions thrown execution first key key whose associated value returned computed nonexistent loader function compute value given key current existing computed nonnull value associated specified key executionexception thrown loader throws exception returns null value
force outstanding sizebased timebased evictions occur
lru sequencing values cache sequence protected mutations cache except iteratorremove result iteration mutation undefined lruordered iterable values cache
invalidate entry specified key value value provided equal value cache removal occur removal notification issued invalidated entries orgelasticsearchcommoncacheremovalnotificationremovalreason invalidated key key whose mapping invalidated cache value expected value associated key
invalidate cache entries removal notification issued invalidated entries orgelasticsearchcommoncacheremovalnotificationremovalreason invalidated
true bytes compressed lzf used elasticsearch 20
decompress provided bytesreference
uncompress provided data data detected compressed using iscompressedbytesreference nullpointerexception nullpointerexception thrown bytes null
create compressedxcontent toxcontent instance
create compressedxcontent serialized toxcontent may already compressed
return uncompressed bytes
test dont accidentally change enum ids
latest timestamp strictly utcmillis timezonegetoffsett timezonegetoffsetutcmillis t returns longmaxvalue
determine whether local instant valid instant given time zone logic taken datetimezoneconvertlocaltoutclong boolean strict mode case instead throwing illegalinstantexception costly want return flag indicating value illegal time zone
test 10025 strict local utc conversion cause joda exceptions dst start
test time zones correctly parsed bug joda 294 see httpsgithubcomjodaorgjodatimeissues373
special test dst switch 9491
test half day rounding intervals scrossing dst
test rounded values always greater equal last rounded value date increasing example covers interval around 20111030t0210000100 time zone cet interval 2700000ms
test dst end interval rounding cet 25 october 2015 030000 clocks turned backward 1 hour 25 october 2015 020000 local standard time
perform number assertions checks timeunitrounding intervals rounded expected low end rounding interval unrounded date interval checked rounding nextroundingvalue expected upper end rounding interval rounding rounding instance
tests dst transition overlaps day roundings
randomized test timeunitrounding test uses random datetimeunit datetimezone often 50 time chooses test dates exactly close offset changes eg dst chosen time zone rounds test date performs various checks rounding unit interval defined this assumptions tested described assertintervallong long long rounding datetimezone
even nasty go transition selected time zone one third cases stay there otherwise go half unit back forth
test time zone whose days overlap clocks set back across midnight end dst
special test intervals dont fit evenly rounding interval case interval crosses dst transition point rounding local time land dst gap results wrong utc rounding values
test dayintervalrounding interval 12h time zone shift
test dst start offset fitting interval eg asiakathmandu adding 15min 19860101t000000 interval 19860101t0015000545 19860101t0020000545 5min long
test timeintervalrounding interval 12h time zone shift
randomized test timeintervalrounding random interval time zone offsets
test dst start interval rounding cet 27 march 2016 020000 clocks turned forward 1 hour 27 march 2016 030000 local daylight time
equivalent wrapreleasable called multiple times without double releasing
release provided releasables ignoring exceptions success false
insert value given path path already exists replace value with value updaterapplyoldvalue newvalue allowing value updated desired
read stream
test map written multiple times trigger selfreference check collectionutilsensurenoselfreferencesobject string object
parses value given xcontentparser parser parser build value context context needed parsing new value instance drawn provided value supplier objectparserstring supplier ioexception ioexception occurs
parses value given xcontentparser parser parser build value value value fill parser context context passed along declared field parsers parsed value ioexception ioexception occurs
creates new objectparser instance name name parsers name used reference parser exceptions messages ignoreunknownfields parser ignore unknown fields generally set true parsing responses external systems never parsing requests users valuesupplier supplier creates new value instance used parser used inner object parser
get name parser
adapts array or varags setter list setter
makes sure current token type tokenfieldname field name equal provided one parsingexception token type tokenfieldname equal given field name
parsingexception unknown field found reason
parse current token depending token type following token types parsed corresponding parser methods tokenvaluestring xcontentparsertext tokenvaluenumber xcontentparsernumbervalue tokenvalueboolean xcontentparserbooleanvalue tokenvalueembeddedobject xcontentparserbinaryvalue tokenvaluenull returns null tokenstartobject xcontentparsermapordered tokenstartarray xcontentparserlistorderedmap parsingexception token none allowed values
makes sure provided token expected type parsingexception token equal expected type
method expects current field name concatenation type delimiter name ex termsfoo terms refers type registered namedxcontentregistryentry delimiter foo name object parse also expected following field name either object array xcontent structure cursor points start token structure method splits fields name extract type name parses object using xcontentparsernamedobjectclass string object method parser current xcontentparser delimiter delimiter use splits fields name objectclass object class object parse consumer something consume parsed object type object parse ioexception anything went wrong parsing type name cannot derived fields name parsingexception parser isnt positioned either startobject startarray beginning
parsingexception unknown token found reason
returns binary content builder provided content type
guesses content type based provided bytes returns corresponding xcontent content type guessed except cases effectively dont know content type rest layer move reading contenttype header instead places autodetection may needed method deprecated prevent usages spreading without specific reasons
constructs xcontent builder output result provided output stream
guesses content type based provided bytes returns corresponding xcontent guessing content type needed ideally rather know content type upfront read headers till fixed rest layer read contenttype header place guessing needed
guesses content type based provided char sequence returns corresponding xcontent content type guessed except cases effectively dont know content type rest layer move reading contenttype header instead places autodetection may needed method deprecated prevent usages spreading without specific reasons
returns orgelasticsearchcommonxcontentxcontent provided content type
guesses content type based provided bytes content type guessed except cases effectively dont know content type rest layer move reading contenttype header instead places autodetection may needed method deprecated prevent usages spreading without specific reasons
guesses content type based provided input stream without consuming it content type guessed except cases effectively dont know content type rest layer move reading contenttype header instead places autodetection may needed method deprecated prevent usages spreading without specific reasons
guesses content type based provided char sequence content type guessed except cases effectively dont know content type rest layer move reading contenttype header instead places autodetection may needed method deprecated prevent usages spreading without specific reasons
guesses content type based provided bytes content type guessed except cases effectively dont know content type rest layer move reading contenttype header instead places autodetection may needed method deprecated prevent usages spreading without specific reasons
declares field contain array elements listed type valuetype enum
attempts match given media type known xcontenttype values match done caseinsensitive manner provided media type include parameters method suitable parsing part contenttype http header method return null match found
accepts either format string equivalent xcontenttypeshortname media type optionally parameters attempts match value xcontenttype comparisons done lower case format method also supports wildcard accept application method used parse accept http header format query string parameter method return null match found
finish parsing object
pass plain biconsumer returns declare methods declare optional constructor argument see classs javadoc example order declared matters order come array passed builder order missing arguments reported user missing parameters parsed plain xcontentparser target object immediately built
creates consumer field arrived behavior targetobject hasnt built queues value otherwise applies value like plain objectparser does
call actual parsing implements bifunction conveniently integrating objectparser
set constructor argument build target object constructor arguments arrived
queue consumer well call targetobject built targetobject built fail caller applied consumer immediately
pass plain biconsumer returns declare methods declare required constructor argument see classs javadoc example order declared matters order come array passed builder order missing arguments reported user missing parameters parsed plain xcontentparser target object immediately built
build parser name name given delegate objectparser error identification use youd use object worked objectparser ignoreunknownfields parser ignore unknown fields generally set true parsing responses external systems never parsing requests users builder binary function builds object array objects parser context declare inline parser casting elements array arguments work favorite constructor objects array order declared constructorargs none null second argument value context provided parsexcontentparser object parse function constructor arguments arent defined xcontent parsing throw error use array rather map object save allocations
test ensures use classic pullparsing parser together object parser
writes binary content given byte array utf8 bytes use xcontentparsercharbuffer read value back
indicate current xcontentbuilder must write line feed n end built object applies json xcontent type effect types
creates new builder using provided xcontent output stream inclusive andor exclusive filters exclusive inclusive filters provided underlying builder first use exclusion filters remove fields check remaining fields inclusive filters make sure call close builder done with os output stream includes inclusive filters fields objects match inclusive filters written output excludes exclusive filters fields objects dont match exclusive filters written output
humanreadable flag set writes formatted unformatted version time value using date transformer long class
writes raw field value taken bytes stream use rawfieldstring inputstream xcontenttype avoid content type autodetection
write timebased value value null null value written otherwise date transformers lookup performed illegalargumentexception transformers type object
writes raw field value taken bytes stream
set human readable flag set types values written format easier read human
writes value source coming directly bytes stream
tests nonconstructor fields set time
builds object random order parses it
helper declare object parsed bytesreference
creates parser based bytes provided use createparsernamedxcontentregistry deprecationhandler bytesreference xcontenttype avoid content type autodetection
returns bytes represent xcontent output provided toxcontent object using provided xcontenttype wraps output new anonymous object according value returned toxcontentisfragment method returns
updates provided changes source key exists changes overrides one source unless maps case recursively updated it source original map updated changes changes update updated checkupdatesareunequal method check updates key that maps unequal equals check objects take time long strings true source map modified
converts given bytes map optionally ordered method relies autodetection content type use converttomapbytesreference boolean xcontenttype instead proper xcontenttype
writes raw bytes field handling cases bytes compressed tries optimize writing using xcontentbuilderrawfieldstring inputstream xcontenttype
converts given bytes map optionally ordered provided xcontenttype must nonnull
guesses content type based provided bytes content type guessed except cases effectively dont know content type rest layer move reading contenttype header instead places autodetection may needed method deprecated prevent usages spreading without specific reasons
convert string xcontent format map throws elasticsearchparseexception error note unlike converttomapbytesreference boolean doesnt automatically uncompress input
merges defaults provided second parameter content first recursive merge inner maps
writes raw bytes field handling cases bytes compressed tries optimize writing using xcontentbuilderrawfieldstring inputstream use writerawfieldstring bytesreference xcontenttype xcontentbuilder params avoid content type autodetection
convert string xcontent format map throws elasticsearchparseexception error
creates parser bytes using supplied contenttype
register parser
lookup value registry name checking name matches parsefield name name thing look up value looked up never null parsingexception named thing isnt registry name deprecated deprecated names arent supported
lookup value registry name checking name matches parsefield name name thing look up value looked null wasnt found parsingexception named thing isnt registry name deprecated deprecated names arent supported
creates new entry stored registry
parse named object throwing exception parser isnt found throws namedobjectnotfoundexception categoryclass isnt registered almost always bug throws namedobjectnotfoundexception categoryclass registered name isnt namedobjectnotfoundexception categoryclass name registered
creates new entry stored registry prefer entryentryclass parsefield checkedfunction unless need context carry around parsing
low level implementation detail xcontentgeneratorcopycurrentstructurexcontentparser
copy contents given inputstream given outputstream closes streams done stream copy stream copy number bytes copied ioexception case io errors
return long stringvalue stores throws exception stored value cannot converted long stores exact value coerce false
generalization xcontentmapvaluesteststestsharedprefixes
generalization xcontentmapvaluesteststestprefix
generalization xcontentmapvaluesteststestsupplementarycharactersinpaths
extracts raw values string int on based path provided returning single list
returns function filters document map based given include exclude rules filtermap string string details
make matches objects also match dots field names instance original simple regex foo translate foo foo
returns array string value node value node represents array corresponding array strings returned otherwise node treated commaseparated string
evaluates property name matches one given filter paths
addobject
construct new evictingqueue holds maximumsize elements maximumsize maximum number elements queue hold illegalargumentexception maximumsize less zero
add given element queue possibly forcing eviction head remainingcapacity zero element add true element added always case evictingqueue
add given elements queue possibly forcing evictions head remainingcapacity zero becomes zero execution method c collection elements add true elements added queue
wraps given map prevent adding null keys expectedelements expected number elements guaranteed cause buffer expansion inclusive
build immutable copy map construction always copies map construction prefer building hashmap hand wrapping unmodifiablemap
copyandremoveobject arbitrary number entries
remove given key map current hash table modified
return copy provided map
associate key value return new copy hash table current hash table modified
returns direct iterator keys
put operation used fluent pattern
puts entries map builder
builds new instance
returns cursor entries keyvalue pairs map iterator implemented cursor returns the cursor instance every call javautiliteratornext read current key value use cursors public fields example shown below intshortcursor c intshortmap systemoutprintlnindex cindex key ckey value cvalue index field inside cursor gives internal index inside containers implementation interpretation index depends container
remove used fluent pattern
returns direct iterator keys
returns cursor entries keyvalue pairs map iterator implemented cursor returns the cursor instance every call iteratornext read current key value use cursors public fields example shown below intshortcursor c intshortmap systemoutprintlnindex cindex key ckey value cvalue index field inside cursor gives internal index inside containers implementation interpretation index depends container
put operation used fluent pattern
puts entries map builder
remove used fluent pattern
builds new instance
returns direct iterator keys
returns direct iterator keys
immutable copy given map
construct prefix logger specified name prefix logger extended logger wrap name name prefix logger prefix prefix prefix logger
like getloggerclass orgelasticsearchcommonsettingssettings shardid string string loggername instead class
set level logger new level null logger inherit its level nearest ancestor nonnull level
get build logger prefer logmanagergetlogger
get build logger prefer logmanagergetlogger
configures logging levels loggers configured specified settings settings settings logger levels extracted
configure logging reading log4j2properties found config directory subdirectories specified environment also configure logging point logs directory specified environment environment environment reading configs logs path ioexception issue readings log4j2properties config directory userexception log4j2properties specified configs path
set system properties used configuration files specify paths file patterns log files expose three properties here eslogsbasepath base path containing log files eslogsclustername cluster name used prefix log filenames default configuration eslogsnodename node name used part log filenames only exposed nodenodenamesetting explicitly set logspath path log files settings settings extract cluster node names
configure logging without reading log4j2properties file effectively configuring status logger loggers console settings configuring loggerlevel individual loggers
registers listener status logger errors listener registered early possible ensure errors logged status logger logging configured
called log4j2 initialize converter
get build logger prefer logmanagergetlogger
get root logger prefer logmanagergetrootlogger
get build logger prefer logmanagergetlogger
remove threadcontext used add deprecation headers network responses expected only invoked nodes close method therefore outside tests threadcontext thread context owned threadpool and implicitly node illegalstateexception threadcontext unknown and presumably already unset before
creates new deprecation logger based parent logger automatically prefixes logger name deprecation starts orgelasticsearch replaces orgelasticsearch orgelasticsearchdeprecation maintain orgelasticsearch namespace
set threadcontext used add deprecation headers network responses expected only invoked nodes constructor therefore outside tests threadcontext thread context owned threadpool and implicitly node illegalstateexception threadcontext already set
assert specified string warning value equal provided warning value string representing full warning header warningvalue expected warning header true specified string expected warning value
encode string containing characters outside legal characters rfc 7230 quotedstring string encode encoded string
extracts warning value value warning header formatted according rfc 7234 is given string 299 elasticsearch600 warning value sat 25 feb 2017 102743 gmt return value method would warning value value warning header formatted according rfc 7234 extracted warning value
called log4j2 initialize converter
returns true key type membersinjector but subclass membersinjector
converts binding key value typeliteral its bit awkward pull inner type type literal
returns justintime binding key creating necessary errorsexception binding could created
attempts create justintime binding key root injector falling back ancestor injectors injector tried
looks thread local context creates and removes new context necessary
returns new justintime binding created resolving key strategies used create justintime bindings are internalizing providers requested binding provider delegate binding t converting constants implementedby providedby annotations unannotated keys the constructor raw type unannotated keys orgelasticsearchcommoninjectinternalerrorsexception binding cannot created
converts constant string binding required type binding could resolved null binding doesnt exist orgelasticsearchcommoninjectinternalerrorsexception error resolving binding
gets binding implementation first check see parent binding parent binding binding scoped use binding otherwise checks explicit binding explicit binding found looks justintime binding
creates synthetic binding provider ie binding provider binding
creates binding type annotated implementedby
creates binding injectable type given scope looks scope type none specified
indexes bindings type
creates binding type annotated providedby
returns parameter injectors null parameters
like assertinstancebindingmodule class predicate filters classes checked given annotation
configures module checks mapstring class to class bound theclass
attempts configure module asserts illegalargumentexception caught containing given messages
configures module asserts clazz bound anything
configures module ensures map exists keytype valuetype expected values bound
configures module asserts clazz bound to
configures module returns instance bound to class
configures module checks set to class bound classes may classes bound to classes
binderconverttotypes 20
binderbindlistenerorgelasticsearchcommoninjectmatchermatcher orgelasticsearchcommoninjectspitypelistener 20
binderbindscopeclass scope
returns initializable instance requires initialization
returns array parameter values
creates injector given set modules given development stage creationexception one errors occur injector construction
unsafe constructs key manually specified type
gets strategy annotation type
constructs new key derives type classs type parameter clients create empty anonymous subclass embeds type parameter anonymous classs type hierarchy reconstitute runtime despite erasure example usage binding type foo annotated bar new keybarclass
gets strategy annotation
gets key injection type annotation type
gets key injection type annotation
constructs key manually specified type
gets key injection type annotation strategy
constructs new key derives type classs type parameter clients create empty anonymous subclass embeds type parameter anonymous classs type hierarchy reconstitute runtime despite erasure example usage binding type foo annotated bar new keynew bar
gets key injection type annotation type
gets key injection type annotation type
constructs new key derives type classs type parameter clients create empty anonymous subclass embeds type parameter anonymous classs type hierarchy reconstitute runtime despite erasure example usage binding type foo new key
construct instance returns object instead t may return proxy
sets stage created injector stage stageproduction class eagerly load singletons
initialize validate everything
loads eager singletons singletons were stageproduction bindings discovered were binding singletons eager
inject everything injected method intentionally synchronized locked injecting members ie running user code things would deadlock user code build justintime binding another thread
performs creationtime injections objects require it whenever fulfilling injection depends another object requires injection inject first two instances codependent directly transitively ordering injection arbitrary
prepares member injectors injected instances prompts guice static analysis injected instances
reentrant instance registered injection injectorcreation time method ensure members injected returning
registers instance member injection step performed instance instance optionally members injected each annotated source source location injection requested inject
creates configurationexception containing messages
returns value partially computed due exception caller use collecting additional configuration problems partial value null none set type partial value specified throwing method
returns copy configuration exception specified partial value
tolerate duplicate bindings one exposes other original binding parent injector candidate exposing binding binding binding check candidate exposed binding
scopes internal factory
replaces annotation scopes instance scopes using injectors annotationtoinstance map scope annotation corresponding instance error added unscoped retuned
injector special case allow parent child injectors binding key
logger special case knows injection point injected member its binding this
creates returns injector shells current modules multiple shells returned modules contain bindernewprivatebinder private environments primary injector first returned list
initialize specified lookups either immediately injector created
returns injectors specified injection points
returns new complete members injector injection listeners registered
creates new members injector attaches injection listeners method aspects
creates creationexception containing messages
returns new complete constructor injector injection listeners registered
installs default converters primitives enums class literals
gets type types provider
returns generic form supertype example arraylist returns iterable given input iterableclass supertype superclass of interface implemented by this 20
returns resolved generic exception types thrown constructor methodorconstructor method constructor defined supertype 20
returns resolved generic type field field field defined superclass 20
returns resolved generic parameter types methodorconstructor methodorconstructor method constructor defined supertype 20
returns immutable list resolved types
constructs new type literal derives represented class type parameter clients create empty anonymous subclass embeds type parameter anonymous classs type hierarchy reconstitute runtime despite erasure
returns resolved generic return type method method method defined supertype 20
returns type super classs type parameter moretypescanonicalizetype canonical form
unsafe constructs type literal manually
creates configurationexception containing messages
returns matcher matches methods matching return types
returns matcher matches elements methods classes etc given annotation
returns matcher matches elements methods classes etc given annotation
returns new multibinder collects instances type set bound annotation
returns new multibinder collects instances type set bound binding annotation
returns new multibinder collects instances type set bound annotationtype
returns new multibinder collects instances type set bound annotation
invoked guice injectorcreation time prepare providers element set time sets size known contents evaluated get invoked
returns new multibinder collects instances type set bound annotationtype
returns new mapbinder collects entries keytype valuetype map bound binding annotation
returns new mapbinder collects entries keytype valuetype map bound annotation
returns new mapbinder collects entries keytype valuetype map bound annotation
returns new mapbinder collects entries keytype valuetype map bound annotationtype
returns new mapbinder collects entries keytype valuetype map bound binding annotation
creates two bindings one mapentry provider another v
returns new mapbinder collects entries keytype valuetype map bound annotationtype
returns instance t constructed using constructor supplied arguments
returns guice key parameter
returns unique binding annotation specified list null none illegalstateexception multiple binding annotations exist
creates constant binding namedkey property method binds properties including inherited propertiesdefaults defaults
creates constant binding namedkey entry properties
20
20
20
returns dependencies given injection points
returns looked members injector result valid lookup initialized usually happens injector created members injector throw illegalstateexception try use beforehand
sets actual members injector illegalstateexception delegate already set
returns new injection point injectable constructor type type concrete type exactly one constructor annotated literal inject noarguments constructor private configurationexception injectable constructor one injectable constructor parameters injectable constructor malformed parameter multiple binding annotations
returns static method field injection points type possibly empty set injection points set specified iteration order fields returned methods within fields supertype fields returned subtype fields similarly supertype methods returned subtype methods configurationexception malformed injection point type field multiple binding annotations exceptions configurationexceptiongetpartialvalue partial value set valid injection points
returns instance method field injection points type possibly empty set injection points set specified iteration order fields returned methods within fields supertype fields returned subtype fields similarly supertype methods returned subtype methods configurationexception malformed injection point type field multiple binding annotations exceptions configurationexceptiongetpartialvalue partial value set valid injection points
records elements executed modules
creates recording binder thats backed prototype
creates private recording binder
returns module composed elements
sets actual provider illegalstateexception delegate already set
returns new module installs modules
returns provider always provides instance necessary use application helpful several types unit tests instance instance always provided also permitted null enable aggressive testing although real life guicesupplied provider never return null
returns new parameterized type applying typearguments rawtype enclosed ownertype parameterized type
returns new instance also skips moreclassestoskip
returns calling line code selected line nearest top stack skipped
returns fieldclass methodclass constructorclass
returns type functionally equal necessarily equal according objectequalsobject objectequals
returns equivalent type thats safe use key returned type free primitive types type literals primitives return corresponding wrapper types configurationexception type contains type variable
returns true a b equal
returns true type free type variables
returns declaring class typevariable null declared class
returns generic supertype supertype example given class integerset result supertype setclass set result supertype collectionclass collection
formats member concise string javautilarraylistsize javautilarraylist javautillistremove
returns hashcode type
sets binding copy specified annotation bound key
sets binding copy specified annotation bound key
returns module creates bindings provider methods given object useful notably hrefhttpcodegooglecompgooglegingin
method method invoke return type must type key
returns string equivalent specified string first character converted uppercase stringtouppercase returned string value specified string first character nonalphabetic first character already uppercase specified string length 0 example capitalizefoo barequalsfoo bar capitalize2b 2bequals2b 2b capitalizefoo barequalsfoo bar capitalizeequals string whose first character uppercased string equivalent s first character converted uppercase nullpointerexception s null
returns true given annotation retained runtime
returns scoping annotation null isnt one
gets key given type member annotations
returns scope annotation type null none specified
returns binding annotation member null isnt one
adds error misplaced annotations type scoping annotations allowed abstract classes interfaces
returns string containing tokens converted strings necessary separated delimiter token converted charsequence using stringvalueofobject isnt charsequence already note implies null tokens appended fourcharacter string null delimiter string append every element beginning end firsttoken first object append othertokens subsequent objects append string consisting joined elements
appends contents map appendable entries separated entrydelimiter keys values separated keyvalueseparator key value converted charsequence using stringvalueofobject isnt charsequence already note implies null tokens appended fourcharacter string null appendable object append results keyvalueseparator string append every key associated value entrydelimiter string append every entry beginning end map map containing data join appendable instance passed
appends tokens appendable separated delimiter token converted charsequence using stringvalueofobject isnt charsequence already note implies null tokens appended fourcharacter string null appendable object append results delimiter string append every element beginning end tokens objects append appendable instance passed joinexception ioexception occurs
returns string containing tokens converted strings necessary separated delimiter tokens empty returns empty string token converted charsequence using stringvalueofobject isnt charsequence already note implies null tokens appended fourcharacter string null delimiter string append every element beginning end tokens objects append string consisting joined elements
appends tokens appendable separated delimiter token converted charsequence using stringvalueofobject isnt charsequence already note implies null tokens appended fourcharacter string null appendable object append results delimiter string append every element beginning end tokens objects append appendable instance passed joinexception ioexception occurs
returns string containing contents map entries separated entrydelimiter keys values separated keyvalueseparator key value converted charsequence using stringvalueofobject isnt charsequence already note implies null tokens appended fourcharacter string null keyvalueseparator string append every key associated value entrydelimiter string append every entry beginning end map map containing data join string consisting joined entries map empty map empty
appends tokens appendable separated delimiter token converted charsequence using stringvalueofobject isnt charsequence already note implies null tokens appended fourcharacter string null appendable object append results delimiter string append every element beginning end tokens objects append appendable instance passed joinexception ioexception occurs
appends tokens appendable separated delimiter token converted charsequence using stringvalueofobject isnt charsequence already note implies null tokens appended fourcharacter string null appendable object append results delimiter string append every element beginning end firsttoken first object append othertokens subsequent objects append appendable instance passed joinexception ioexception occurs
resets returns elapsed time milliseconds
returns true scope singleton loaded eagerly stage
returns instance uses source reference point newly added errors
returns value nonnull allowed null otherwise message added errorsexception thrown
returns cause throwable exactly one cause messages zero multiple messages causes null returned
returns formatted message exception specified messages
return automaton matches given pattern
match string given pattern supporting following simple pattern styles xxx xxx xxx xxxyyy matches with arbitrary number pattern parts well direct equality pattern pattern match str string match whether string matches given pattern
return automaton matches union provided patterns
match string given patterns supporting following simple pattern styles xxx xxx xxx xxxyyy matches with arbitrary number pattern parts well direct equality patterns patterns match str string match whether string matches given patterns
normalize geo point given coordinates lie within respective normalized ranges control coordinate gets normalized two flags note shift 180 applied longitude necessary order normalize properly latitude normalizing latitude longitude assumed longitude form xk360 x 180180 k meaningful application therefore x adjusted keeping k preserved point point normalize inplace normlat whether normalize latitude leave is normlon whether normalize longitude
returns true latitude actually valid latitude value
calculate size in meters quadtree cells specific level level quadtree level must greater equal zero size cells level meters
parse geopoint xcontentparser geopoint one following forms object lat latitude lon longitude string latitudelongitude geohash geohash array longitudelatitude parser xcontentparser parse value point geopoint reset values parsed new geopoint parsed parse
returns true longitude actually valid longitude value
return sortednumericdoublevalues instance returns distances list geopoints document
checks precision within range supported elasticsearch 1 12 returns precision value range throws illegalargumentexception outside range
parse geopoint represented object string array geopoint represented geohash left bottom corner geohash cell used geopoint coordinatesgeoboundingboxquerybuilderjava
normalize latitude lie within 90 90 both inclusive range note normalize longitude latitude separately normalizing latitude may necessary add shift 180 longitude purpose call normalizepointgeopoint function lat latitude normalize normalized latitude normalizepointgeopoint
calculate height in meters geohash cells specific level level geohash level must greater equal zero height cells level meters
parses value geopoint following types values supported object contain either lat lon geohash fields string expected latitude longitude format geohash array two elements first element longitude second latitude rest ignored ignorezvalue true
return distance in meters 2 latlon geo points using simple tangential plane provides faster alternative geoutilsarcdistance inaccurate distances greater 4 decimal degrees
calculate number levels needed specific precision geohash cells exceed specified size diagonal precision meters maximum size cells meters must greater equal zero levels need achieve precision
calculate height in meters quadtree cells specific level level quadtree level must greater equal zero height cells level meters
calculate size in meters geohash cells specific level level geohash level must greater equal zero size cells level meters
check point within rectangle todo move lucene rectangle class
calculate width in meters geohash cells specific level level geohash level must greater equal zero width cells level meters
calculate number levels needed specific precision quadtree cells exceed specified size diagonal precision meters maximum size cells meters must greater zero levels need achieve precision
parse precision expressed integer distance measure like 1km 10m precision expressed number 1 12 indicates length geohash used represent geo points parser xcontentparser parse value int representing precision
calculate width in meters quadtree cells specific level level quadtree level must greater equal zero width cells level meters
returns maximum distanceradius in meters point center overlapping
test enveloping polygon around max mercator bounds
compute distance two points using selected algorithm plane arc
get geodistance according given name valid values plane geodistanceplane arc geodistancearc name name geodistance geodistance
writes instance geodistance object output stream
creates geodistance instance input stream
encode lonlat geohash based long format lonlat interleaved 4 least significant bits level
encode geohash string geohash based long format
encode level specific geohash string full resolution longitude latitude
encode geohash string given level morton long
computes bounding box coordinates given geohash geohash geohash defined cell georect rectangle defining bounding box
encode existing geohash long provided precision
add geohashes cells next given geohash list geohash geohash specified cell length level given geohash neighbors list add neighbors given list
encode geohash string geohash based long format lonlat interleaved 4 least significant bits level
encode morton long value given geohash long value
convert morton encoded long geohash encoded long
calculate geohash neighbor geohash geohash geohash cell level level geohash dx delta first grid coordinate must 1 0 1 dy delta second grid coordinate must 1 0 1 geohash defined cell
encode morton long value given geohash string
invokes geoutilsparseprecision parser value generated tokengenerator supplied tokengenerator generate single field contains precision one supported formats malformed precision value error handling tested method return parsed value throws exception precision value malformed
makes closed ring current coordinates adding starting point end point effect starting end point already coordinate
add new coordinate collection coordinate coordinate add
add collection coordinates current coordinates coordinates collection coordinates add
takes input polygon returns identical one opposing orientation setting done dont expose setter orientation actual class
add collection coordinates collection coordinates array coordinates add
add new coordinate collection coordinate coordinate point
copy coordinate new array closed set true first point array repeated last element array coordinates
ctor serialized stream input
ctor list coordinates
calculate intersections line segments vertical line array edges ordered asc ycoordinate intersections edges dateline xcoordinate dateline edges set edges may intersect dateline number intersecting edges
calculate intersection line segment vertical dateline p1 startpoint line segment p2 endpoint line segment dateline xcoordinate vertical dateline position intersection open range 01 line segment intersects line segment otherwise method returns doublenan
builds array coordinates xcontentbuilder builder builder use closed repeat first point end array its already defines last element array builder
build envelope top left bottom right coordinates
read stream
read stream
compute coordinates component component arbitrary edge component coordinates array coordinates write result coordinates parameter
add new hole polygon hole linear ring defining hole coerce set true try close hole adding starting point end point
create connected list list coordinates points array point offset index first point length number points array edges
coordinates setup builder assembled polygon result consist set polygons components holds list linestrings defining polygon first set coordinates used shell polygon others defined holes within polygon method also wraps polygons dateline order fact result may contains polygons less holes defined builder self coordinates polygon
method sets component id edges ring given id shifts coordinates component according dateline edge arbitrary edge component id id apply component edges list edges edges component added could null number edges belong component
create multipolygon set coordinates primary array contains polygon turn contains array linestrings line strings represented array coordinates first linestring shell polygon others define holes within polygon factory geometryfactory use polygons definition polygons new multipolygon
whether points clockwise true anticlockwise false
validates 1 vertex tangential shared interior exterior polygon
offset index point furthest west amongst points furthest south set
close shell polygon
transforms coordinates eastern hemisphere 1800 180360 range
concatenate set points polygon component component id polygon direction direction ring points list points concatenate pointoffset index first point edges array edges write result edgeoffset index first edge result length number points use edges creates
setup whole base test class
test equality hashcode properties
test serialization deserialization test shape
test creates new shape random test shape checks equality
read stream
add shallow copy polygon multipolygon apply orientation multipolygonbuilder polygon polygon different orientation
read stream
read stream
create point 0000
decompose linestring given array coordinates vertical line dateline xaxis intercept vertical line coordinates coordinates forming linestring array linestrings given coordinate arrays
construct new linestring per geojson spec httpgeojsonorggeojsonspechtmllinestring linestring must contain two coordinates coordinates initial list coordinates illegalargumentexception less two coordinates defined
closes current linestring adding starting point end point effect starting end point already same
set radius circle radius value circles radius unit unit radius value see distanceunit
set center circle center coordinate circles center
read stream
recursive method parses arrays coordinates used define shapes parser parser read coordinatenode representing start coordinate tree ioexception thrown error occurs reading xcontentparser
parse geometries array geometrycollection parser parser read geometry geometries geometrycollection ioexception thrown error occurs reading xcontentparser
creates new parent coordinatenode children children node
creates new leaf coordinatenode coordinate coordinate node
create new shapebuilder xcontent parser parser read geoshape shapemapper document field mapper reference required spatial parameters relevant shape construction process eg orientation todo refactor place build specific parameters spatialcontext shapebuilder read parser null parsers current token null ioexception input could read
next word stream
throws exception parsed geometry type match expected shape type
next word stream
parse geometry stream tokenizer
deletes blob giving name ignoring blob exist blobname name blob delete ioexception blob exists could deleted
reads blob content input stream writes container new blob given name using atomic write operation implementation supports it blobcontainer implementation provide specific implementation writeblobatomicstring inputstream long writeblobstring inputstream long boolean method used method assumes container already contain blob blobname blob name already exists operation fail ioexception thrown blobname name blob write contents input stream to inputstream input stream retrieve bytes write blob blobsize size blob written bytes implementation dependent whether value used writing blob repository failifalreadyexists whether throw filealreadyexistsexception given blob already exists filealreadyexistsexception failifalreadyexists true blob name already exists ioexception input stream could read target blob could written to
operation supported urlblobcontainer
operation supported urlblobcontainer
constructs new urlblobcontainer blobstore blob store blobpath blob path container path url container
operation supported urlblobcontainer
operation supported urlblobcontainer
builds url using base url specified path path relative path base url path
operation supported url blob store
constructs new readonly urlbased blob store following settings supported buffersize size read buffer defaults 100kb settings settings path base url
adjust instant displayoffset adjust offset might added datetimeformatterprinttoappendable long chronology using time zone
adjust instant displayoffset adjust offset might added datetimeformatterprinttoappendable long chronology using time zone
parses joda based pattern including named ones similar built joda iso ones
return bytes ref composed bytes direct byte buffer bytes copied bytes ref
returns array byte buffers given bytesreference
writes bytes directly output stream
returns bytesreference composed provided bytebuffers
convert xcontentbuilder bytesreference method closes builder fields may added
returns compact array given bytesreference returned array wont copied unless necessary need modify returned array use bytesrefdeepcopyofreferencetobytesref instead
returns bytesrefiterator bytesreference method allows access internal pages reference without copying them use care bytesrefiterator
compares two references using given int function
first value hit
parse text potentially contains date math milliseconds since epoch examples 201411182y substracts two years input date nowm rounds current time minute granularity supported rounding units y year m month w week beginning monday d day hh hour m minute second text input supplier retrieve current date milliseconds needed additions roundup result rounded timezone optional timezone applied returning milliseconds since epoch parsed date milliseconds since epoch
configure specific time zone date formatter zoneid zoneid formatter shoulduse new formatter parsers switched specified timezone
configure defaults missing values parser return new compound date formatter
name breaker
method used trip breaker
number aggregated used bytes far
add number bytes tripping circuit breaker aggregated estimates limit automatically trips breaker memory limit set 0 never trip breaker limit set 0 still used aggregate estimations bytes number bytes add breaker number used bytes far
number bytes added breaker trips
add exact number bytes checking tripping circuit breaker bypasses overheadconstant multiplication bytes number bytes add breaker number used bytes far
number times breaker tripped
constant multiplier breaker uses aggregations
create circuit breaker break number estimated bytes grows limit estimations multiplied given overheadconstant uses given oldbreaker initialize starting offset limit circuit breaker limit overheadconstant constant multiplier byte estimations oldbreaker previous circuit breaker inherit used value starting offset
create circuit breaker break number estimated bytes grows limit estimations multiplied given overheadconstant uses given oldbreaker initialize starting offset settings settings configure breaker parent parent circuit breaker service delegate tripped breakers name name breaker oldbreaker previous circuit breaker inherit used value starting offset
add number bytes tripping circuit breaker aggregated estimates limit automatically trips breaker memory limit set 0 never trip breaker limit set 0 still used aggregate estimations bytes number bytes add breaker number used bytes far
name breaker
number aggregated used bytes far
number bytes added breaker trips
create circuit breaker break number estimated bytes grows limit estimations multiplied given overheadconstant breaker starts 0 bytes used settings settings configure breaker parent parent circuit breaker service delegate tripped breakers name name breaker
method used trip breaker delegates parent determine whether trip breaker
add exact number bytes checking tripping circuit breaker bypasses overheadconstant multiplication also check parent breaker see parent limit exceeded bytes number bytes add breaker number used bytes far
number times breaker tripped
constant multiplier breaker uses aggregations
format byte array hex string bytes input represented hex hex representation input string
compute hash murmurhash3x64128 hashing function note hashing function might used persist hashes way hashes computed changes reason needs addressed like bloomfilter murmurhashfield
test selecting name possible properly matches addresses interfaces virtual interfaces note avoid test fails interfaces addresses assigned them ignored
test ordinary addresses sort private addresses
test sort key order respects preferipv4
test private addresses sort link local addresses
test filtering ipv4ipv6 addresses
convert byte array inetaddress inetaddressgetbyaddress documented throwing checked exception if ip address illegal length replace unchecked exception use callers already know addr array length 4 16 addr raw 4byte 16byte ip address bigendian order inetaddress object created raw ip address
parse ip address prefix length using cidr notation illegalargumentexception string formatted ipaddressprefixlength illegalargumentexception ip address ipv6mapped ipv4 address illegalargumentexception prefix length 032 ipv4 addresses 0128 ipv6 addresses numberformatexception prefix length integer
convert list hextets humanreadable ipv6 address in order compression work input contain negative sentinel values place elided zeroes hextets int array eight 16bit hextets 1s
returns inetaddress given string representation this deliberately avoids nameservice lookups eg dns ipstring string containing ipv4 ipv6 string literal eg 19216801 2001db81 inetaddress representing argument illegalargumentexception argument valid ip string literal
returns string representation inetaddress suitable inclusion uri for ipv4 addresses identical inetaddressgethostaddress ipv6 addresses compresses zeroes surrounds text square brackets example 2001db81 per section 322 targetparent hrefhttptoolsietforghtmlrfc3986section322 httptoolsietforghtmlrfc3986 uri containing ipv6 string literal form http2001db818888indexhtml use either inetaddressestoaddrstring inetaddressgethostaddress method recommended inetaddresstostring ip address string literal desired inetaddresstostring prints hostname ip address string joined ip inetaddress converted uri string literal string containing urisafe string literal
returns string representation inetaddress for ipv4 addresses identical inetaddressgethostaddress ipv6 addresses output follows hrefhttptoolsietforghtmlrfc5952rfc 5952 section 4 main difference method uses zero compression javas version uses uncompressed form this method uses hexadecimal ipv6 addresses including ipv4mapped ipv6 addresses c000201 output include scope id ip inetaddress converted address string string containing textformatted ip address 100
identify mark longest run zeroes ipv6 address only runs two hextets considered case tie leftmost run wins qualifying run found hextets replaced sentinel value 1 hextets int mutable array eight 16bit hextets
resolves and deduplicates host specification
resolves bindhosts list internet addresses list contain duplicate addresses bindhosts list hosts bind to may contain special pseudohostnames local see documentation null fall back local unique set internet addresses
resolves single host specification
closes channels channels close blocking indicates block channel close
perform actual logging might throw exception things go wrong
format network interface flags
log interface configuration debug level enabled
format internet address javas default doesnt include everything useful
ensure specifying wildcard ipv6 address selects reasonable publish address
ensure specifying wildcard ipv4 address bind interfaces
ensure exception publish multicast ipv6 address
ensure bind multiple addresses
ensure specifying wildcard ipv6 address bind interfaces
ensure exception publish multicast ipv4 address
ensure cant bind multiple addresses using wildcard
ensure exception bind multicast ipv6 address
ensure specifying wildcard ipv4 address selects reasonable publish address
ensure exception bind multicast ipv4 address
returns global scope addresses interfaces up
returns addresses given interface it must marked up
returns addresses any scope interfaces up used pick publish address user set networkhost wildcard
helper getinterfaces recursively adds subinterfaces target
sorts addresses order preference used pick first one publishing remove multihoming really correct
returns sitelocal scope private addresses interfaces up
returns interfacelocal scope loopback addresses interfaces up
returns ipv4 addresses addresses
returns ipv6 addresses addresses
return interfaces and subinterfaces system
sorts address preference way code like publishing pick first one
parses ipv4 address block cidr notation pair longs representing bottom top address block cidr address block cidr notation abcdn array representing address block illegalargumentexception cidr parsed
creates scoped ipv6 address without lookups hostname null missing
round trip test code ipv4 ipv6 inetaddress contains getbyaddress getbyname methods ipv4 ipv6 unless also specify scopeid test bytes 4 32bit ipv4 16 bytes 128bit ipv6 exception error occurs interacting network address
creates address without lookups hostname null missing
adds transport implementation selected setting transporttypekey
register allocation command lives instead aptly named clustermodule transport client needs registered reader reader read stream parser parser read xcontent commandname names command parsed parsefieldgetpreferredname special name commands reader registered
creates network module custom networking classes plugged into settings settings node transportclient true transport classes allowed registered false otherwise
remove entry key hash table return associated value null entry associated key
get value associated key null key present hash table
put new key value pair hash table return value previously associated key null case insertion
given size array estimate number bytes use
change size array content indexes 0 minsize newsize preserved
constructor
compare d1 d2 pushing value doublenan bottom
return rotated view given list given distance
deeply inspects map iterable object array looking references back itself illegalargumentexception selfreference found value object evaluate looking self references messagehint string included exception message call fails provide context handler exception
returns true iff cache needs refreshed
returns currently cached object potentially refreshes cache returning
cancel current running operations future calls checkforcancel failed given reason
run interruptable capturing executing thread concurrent calls cancelstring interrupt thread causing call prematurely return interruptable code run
call throw exception operation cancelled override oncancelstring exception custom failure logic
called checkforcancel invoked operation cancelled default implementation always throws executioncancelledexception suppressing exception occurred cancellation reason reason failure supplied caller cancel suppressedexception error encountered execution operation cancelled
run interruptable capturing executing thread concurrent calls cancelstring interrupt thread causing call prematurely return interruptable code run
tests custom data paths upgraded
tests upgrade partially upgraded index crash upgrading
test method orgapacheluceneutilbytesrefhashaddorgapacheluceneutilbytesref
test method orgapacheluceneutilbytesrefhashsize
test method orgapacheluceneutilbytesrefhashgetint bytesref
dataoutputwritevlong accepts negative values written 9 bytes
dataoutputreadvlong read negative values read 9 bytes
write long littleendian format
read int littleendian format
write int littleendian format
write long littleendian format
change size array content indexes 0 minsize newsize preserved
constructor
creates complete lazyinitializable instance supplier checkedsupplier generate values served getorcompute invocations onget consumer called value newly forged stale returned getorcompute onreset consumer invoked value erased calling reset
clears value previously created calling getorcompute onreset called value next call getorcompute recreate value
creates new value thread safely
returns value created supplier value might previously created created now thread safe course
change size array content indexes 0 minsize newsize preserved
constructor
change size array content indexes 0 minsize newsize preserved
constructor
try add key return newly allocated id wasnt hash table yet 1id already present hash table
return key 0 index capacity result undefined slot unused beware content bytesref may become invalid soon close called
get id associated key
parse given locale language languagecountry languagecountryvariant either underscores hyphens may used separators consistently ie may use hyphen separate language country underscore separate country variant illegalargumentexception many parts locale string illegalargumentexception language country recognized
change size array content indexes 0 minsize newsize preserved
constructor
constructor
change size array content indexes 0 minsize newsize preserved
concatenates 2 arrays
return index value array 1 index several values within tolerance less value method return index closest value case several values close ot value guarantee index returned results undefined array sorted
constructs uri pattern
get id associated key 1 key contained hash
try add key return newly allocated id wasnt hash table yet 1id already present hash table
creates new upgrader instance settings node settings nodeenv node env operate
renames indexfoldername index folders found node paths custom path iff needsupgradeindex string true index folder custom paths renamed first followed index folders node path
moves index folder found source target
upgrades indices found nodeenv already upgraded indices ignored
grow array size larger minsize preserving content potentially reusing part provided array
resize array exact provided size
allocate new intarray size initial length array clearonresize whether values set 0 initialization resize
resize array exact provided size
allocate new floatarray size initial length array clearonresize whether values set 0 initialization resize
grow array size larger minsize preserving content potentially reusing part provided array
arraysequalsbyte byte
resize array exact provided size
resize array exact provided size
allocate new doublearray size initial length array clearonresize whether values set 0 initialization resize
grow array size larger minsize preserving content potentially reusing part provided array
return next size grow mintargetsize inspired arrayutiloversizeint int adapted play nicely paging
allocate new bytearray size initial length array clearonresize whether values set 0 initialization resize
resize array exact provided size
grow array size larger minsize preserving content potentially reusing part provided array
allocate new longarray size initial length array clearonresize whether values set 0 initialization resize
resize array exact provided size
adjust circuit breaker given delta delta negative checkbreaker false breaker adjusted without tripping data already created calling method breaker trips add delta without breaking account created data data created yet add delta breaker trips
grow array size larger minsize preserving content potentially reusing part provided array
allocate new objectarray size initial length array
arrayshashcodebyte
grow array size larger minsize preserving content potentially reusing part provided array
produces two random sets consisting elements 0 endexclusive endexclusive exclusive upper bound elements sets pair sets
assert difference two sets expected endexclusive exclusive upper bound elements either set sets pair sets elements 0 endexclusive difference difference two sets
relative complement difference specified left right set namely resulting set contains elements left set right set neither input mutated operation entirely new set returned left left set right right set type elements sets relative complement left set respect right set
relative complement difference specified left right set returned sorted set namely resulting set contains elements left set right set set sorted using natural ordering element type neither input mutated operation entirely new set returned left left set right right set type elements sets sorted relative complement left set respect right set
returns true iff countdown reached zero otherwise false
fast forwards countdown zero returns true iff count reached zero fast forward call otherwise false
decrements countdown returns true iff call reached zero otherwise false
forces adding element queue without size checks
calls futureget without checked exceptions future dereference type returned value future
calls futuregetlong timeunit without checked exceptions future dereference timeout wait unit timeout type returned value future
subclasses invoke method set result computation error throwable set state future basefuturesynccompleted call done state successfully changed throwable exception task failed with true state successfully changed error throwable error
blocks task complete timeout expires throws timeoutexception timer expires otherwise behaves like get
implementation completing task either v t set both finalstate state change running state running state return false waiting state set valid final state completed cancelled v value set result computation exception set result computation finalstate state transition to
implementation actual value retrieval return value success exception failure cancellation cancellation illegal state synchronizer invalid state
subclasses invoke method set result computation value set state future basefuturesynccompleted call done state successfully changed value value result task true state successfully changed
default basefuture implementation throws interruptedexception current thread interrupted call even value already available interruptedexception current thread interrupted call optional recommended cancellationexception
blocks completeobject throwable int successfully called throws cancellationexception task cancelled executionexception task completed error
default basefuture implementation throws interruptedexception current thread interrupted call even value already available interruptedexception current thread interrupted call optional recommended cancellationexception
tries acquire lock given key returns it lock cant acquired null returned
returns true iff caller thread holds lock given key
acquires lock given key key compared its equals method object identity lock acquired thread multiple times lock released closing returned releasable
execute blank task times times executor
return new executor automatically adjust queue size based queue throughput size number fixed threads use executing tasks initialqueuecapacity initial size executor queue minqueuesize minimum queue size queue adjusted maxqueuesize maximum queue size queue adjusted framesize number tasks stats collected adjusting queue size
return time task spent run task still running yet run returns 1
return time since task created finished running task still running yet run returns 1
adds listener future future yet completed listener notified response exception runnable submitted executorservice provided future completed listener notified immediately without forking different thread
test accounting whether thread holds releasable lock correct previously bug reentrant lock thread entered lock twice would declare hold lock exits first entrance second entrance brokenbarrierexception awaiting synchronization barrier breaks interruptedexception awaiting synchronization barrier interrupted
inspects barrier broken reason barrier broken brokenbarrierexception thrown otherwise would return gracefully brokenbarrierexception nested broken cause
queries barrier broken state note resetexception invoked barrier remain broken reset reset barrier initial state isbroken return false true one parties broke barrier due interruption timeout since construction last reset barrier action failed due exception false otherwise inspect
returns elapsed time two successive barrier executions elapsed time seconds
breaks barrier reset broken reason note call atomic respect awaitreset calls breakifbroken may context switched invoke reset prior await resets barrier initial state parties currently waiting barrier accounted for await wasnt time limited block indefinitely brokenbarrierexception empty brokenbarrierexception
resets barrier initial state parties currently waiting barrier return brokenbarrierexception note resets after breakage occurred reasons complicated carry out threads need resynchronize way choose one perform reset may preferable instead create new barrier subsequent use cause cause brokenbarrierexception
sometimes wraps runnable abstractrunnable
adds given item queue listener notified item processed
resize limit queue returning new size limit
calculate task rate fixed number tasks time took tasks measured totalnumberoftasks total number tasks measured totalframetasknanos nanoseconds tasks received rate tasks system
calculate littles law l optimal queue size particular task rate lambda targeted response time lambda arrival rate tasks nanoseconds targetedresponsetimenanos nanoseconds average targeted response rate requests optimal queue size give task rate targeted response time
overrides default behavior onafter add caveat runs lifecycle not stopped closed note guarantee wont stopped concurrently invokes onafterinlifecycle its solid attempt preventing it use rescheduling purposes next invocation would effectively cancelled immediately thats case onafterinlifecycle
abstractlifecyclerunnable must aware actual lifecycle react properly lifecycle lifecycle react logger logger use logging nullpointerexception parameter null
invokes doruninlifecycle only lifecycle stopped closed otherwise exits immediately
sets element position i given value index value new value
copies content underlying atomic array normal one
returns non null list
removes current context resets new context contains merge current headers given headers removed context restored closing returned storedcontext merge strategy headers already existing preserved unless defaults
returns transient header object null header given key
newrestorablecontextboolean wraps existing context restore storedcontext context restore
saves current thread context wraps command runnable restores context running command command already passed method returned unaltered rather wrapped twice
returns header given key null present
unwraps command previously wrapped preservecontextrunnable
like stashcontext default context set preserveresponseheaders set true response headers restore thread preserved
removes current context resets default context removed context restored closing returned storedcontext
creates new threadcontext instance settings settings read default request headers
get copy response headers never null
returns request contexts headers
returns waiting time first task queue
timeout callback might remain timer scheduling queue time might hold pointers objects result its possible run memory large number tasks executed
flattens two level iterable single iterable note precaches values outer iterable values inner one
returns bytesreference view data
one single scope added setting
cant null properties
setting contains sensitive string may sensitive string eg username password auth token etc
setting contains file reading setting opens input stream file may sensitive file eg set credentials normally plaintext
add setting builder doesnt exists source settings value added builder taken given default settings object builder settings builder fill diff source source settings object diff defaultsettings default settings object diff
returns string representation concrete setting key
returns map namespaces its values give provided settings
get setting given namespace filled prefix suffix
returns value setting falls back second provided settings object
returns raw string settings value setting present given settings object default value returned instead useful value cant parsed due invalid value access actual value
creates new setting instance key settings key setting defaultvalue default value function results string representation default value parser parser parses string representation concrete type setting validator validator validating setting properties properties setting
returns string representation concrete setting key
updates settings depend other see abstractscopedsettingsaddsettingsupdateconsumersetting setting biconsumer usage details
logs deprecation warning setting deprecated used
build updater responsible validating new values logging new value eventually setting value belongs
setting type allows validate settings type common prefix suffix instance storagebackendenabletruefalse easily added setting yet affix key settings dont support updaters box unless getconcretesettingstring used pull updater
returns new copy object backed char array closing new instance effect instance created from useful apis accept char array want safe api potentially modifying char array example try securestring copy securestringclone pass thee char external api passwordauthentication auth new passwordauthenticationusername copygetchars
returns underlying char dangerous operation array may modified used threads consumer may modify values array safety preferable use clone pass chars consumer chars needed multiple times
constant time equality avoid potential timing attacks
convert string used apis take charsequence
closes string clearing underlying char array
constructs new securestring existing string note actually secure since provided string cannot deallocated constructor allows easy compatibility new old apis use compatibility deprecated string settings new secure strings
throw exception string closed indicating something trying access data closed
possible retrieve setting names even keystore closed allows securesetting correctly determine entry exists even though cannot read thus attempting read secure setting keystore closed generate keystore closed exception rather using fallback setting
set string setting
ensure given setting name allowed illegalargumentexception setting name valid
add bootstrap seed setting may used unique secure random value node
upgrades format keystore necessary
remove given setting keystore
set file setting
encrypt keystore entries return encrypted data
decrypts underlying keystore data may called once
write keystore given config directory
loads information elasticsearch keystore provided config directory decryptchar must called reading writing entries returns null keystore exists
constructs new keystore given password
merge given secure settings one
adds settings consumer affix settings affix settings namespace associated needs available consumer order processed correctly consumer get namespace value map instead individual namespace value addaffixupdateconsumersettingaffixsetting biconsumer biconsumer
adds settings consumer predicate evaluated update time note settings registered settingsmodule changed dynamically validator additional validator applied updates setting useful add additional validation settings runtime compared startup time
returns true given key valid delete key
adds settings consumer affix settings affix settings namespace associated needs available consumer order processed correctly
archives invalid unknown settings setting recognized fails validation archived means setting prefixed value archivedsettingsprefix remains settings object used detect invalid settings via apis settings settings instance scan unknown invalid settings unknownconsumer callback unknown settings consumer receives unknown key associated value invalidconsumer callback invalid settings consumer receives invalid key associated value exception settings instance unknown invalid settings archived
validates settings registered valid settings settings validatedependencies true dependent settings validated ignoreprivatesettings true private settings ignored validation ignorearchivedsettings true archived settings ignored validation settinggetsettingsdependenciesstring
adds settings consumer accepts values two settings consumer notified one settings change provided validator succeeded note settings registered settingsmodule changed dynamically method registers compound updater useful two settings depending other consumer always provided values even one two changes
applies given settings settings consumers none them settings merged node settings applied given settings override existing node settings newsettings settings apply unmerged applied settings
returns callable runnable calls applyobject settings settings settings actually changed allows defer update later point time keeping type safety value didnt change returned runnable noop
updates target settings builder new updated deleted settings given settings builder toapply new settings apply target target settings builder updates applied to keys explicit null value toapply removed builder updates settings builder holds updates applied target type free text string allow better exceptions messages onlydynamic false settings updated otherwise dynamic settings updated set true nondynamic setting updated exception thrown true target changed otherwise false
returns setting given key null setting found
returns true setting given key final otherwise false
updates updaters value changed true iff value updated
returns settings object contains settings already set given source diff contains either default value setting settings value given default settings
validates settings valid key key setting validate settings settings validatedependencies true dependent settings validated validateinternalindex true internal index settings validated illegalargumentexception setting invalid
validates given settings running update listeners without applying it method change settings fail settings cant applied
returns value given setting
returns true setting given key dynamically updateable otherwise false
validates settings registered valid settings settings validatedependencies true dependent settings validated ignoreprivatesettings true private settings ignored validation ignorearchivedsettings true archived settings ignored validation validateinternalindex true index internal settings validated settinggetsettingsdependenciesstring
creates new propertyplaceholderhelper uses supplied prefix suffix placeholderprefix prefix denotes start placeholder placeholdersuffix suffix denotes end placeholder ignoreunresolvableplaceholders indicates whether unresolvable placeholders ignored true cause exception false
replaces placeholders format name value returned supplied placeholderresolver value value containing placeholders replaced placeholderresolver placeholderresolver use replacement supplied value placeholders replaced inline nullpointerexception value null
registers settings filter pattern allows filter certain settings instance contain sensitive information setting internal purposes only given pattern must either valid settings key simple regexp pattern
registers new setting method used plugins order expose custom settings plugin defines unless setting registered setting unusable setting never less specified node reject setting startup
sets setting provided setting key float value setting setting key value float value builder
settings filtered and key removed specified prefix
builds settings underlying uses settings based everything set builder
returns group settings given setting prefix
sets provided settings settings settings set copysecuresettings true settings including secure settings copied
retrieve secure settings settings
sets setting provided setting key int value setting setting key value int value builder
values associated setting key immutable list also automatically load separated list settingprefix merge numbered format key setting key load list defaultvalue default value use value specified commadelimited whether try parse string commadelimited value setting list values
returns setting value as int associated setting key exists returns default value provided
direct keys settings
loads settings actual string content represents using fromxcontentxcontentparser
returns fully qualified setting names contained settings object
returns setting value associated setting key exists returns default value provided
returns parsed version
returns setting value as double associated setting key exists returns default value provided
sets setting provided setting key list values setting setting key values values builder
sets setting provided setting key time value setting setting key value time value builder
loads settings url represents using fromxcontentxcontentparser note loading path doesnt allow null values incoming xcontent
returns new settings object contains setting current one filtered given settings key predicate
loads settings stream represents using fromxcontentxcontentparser
sets setting provided setting key double value setting setting key value double value builder
sets setting provided setting key long value setting setting key value long value builder
sets setting provided setting key class value key setting key clazz setting class value builder
returns settings delimited string
returns setting value as float associated setting key exists returns default value provided
checks settings builder start specified prefix setting doesnt start prefix builder appends prefix setting
sets setting provided setting key boolean value setting setting key value boolean value builder
sets setting provided setting key size value setting setting key value size value builder
sets setting group
sets setting provided setting key value key setting key value setting value builder
returns setting value as long associated setting key exists returns default value provided
read stream
read stream
index operation failed on might return null cant derived
tests docwriteresponsetoxcontentxcontentbuilder toxcontentparams doesnt include forcedrefresh unless true cant assert yaml tests not found also false there
returns rest status response based shardinfostatus
parse output innertoxcontentxcontentbuilder params method method intended called subclasses must called multiple times parse information concerning docwriteresponse objects always parses current token updates given parsing context accordingly needed immediately returns
return relative uri location document suitable use location header use relative uris permitted http11 cf httpstoolsietforghtmlrfc7231section712 routing custom routing null custom routing used relative uri location document
write document write indexdeleteupdate request
read document write indexdeleteupdate request
creates listener listens response or failure executes corresponding consumer response or failure received onresponse checked consumer response listener receives one onfailure consumer failure listener receives one type response listener listens responses invokes consumer received
notifies every given listener failure passed onfailureexception listener throws exception remaining listeners processed caught exception rethrown
converts listener biconsumer compatibility javautilconcurrentcompletablefuture api listener wrapped type response bi consumer complete wrapped listener
notifies every given listener response passed onresponseobject listener throws exception exception forwarded onfailureexception turn onfailureexception fails remaining listeners processed caught exception rethrown
calls action listeners actionlisteneronfailureexception method given exception method invoked exception thrown dorun
simple sets routing since parent used get right shard
sets query get score explanation for
explicitly specify stored fields returned explained document default nothing returned
sets routing sharding
indicate source returned include andor exclude set include simple wildcard elements include optional include optionally wildcarded pattern filter returned source exclude optional exclude optionally wildcarded pattern filter returned source
sets id get score explanation for
sets shard preference
sets type get score explanation for
indicate source returned include andor exclude set include simple wildcard elements includes optional list include optionally wildcarded pattern filter returned source excludes optional list exclude optionally wildcarded pattern filter returned source
indicates whether response contain stored source
simple sets routing since parent used get right shard
allows setting fetchsourcecontext request controlling source returned
list field names retrieve
list indices lookup
list field names retrieve
constructor name name field type type associated field issearchable whether field indexed search isaggregatable whether field aggregated on indices list indices field name defined type null indices type field nonsearchableindices list indices field searchable null field searchable indices nonaggregatableindices list indices field aggregatable null field aggregatable indices
controls shard routing request using value hash shard id
controls shard routing delete request using value hash shard id
constructs new delete request specified index type id index index get document type type document id id document
sets id document delete
id document delete
override method replicationaction storing state request object which really shouldnt do transport client goes away move away making available meantime dangerous set use deleterequest object always wrapped bulk request envelope should set
sets type document delete
type document delete
sets type versioning use defaults versiontypeinternal
controls shard routing delete request using value hash shard id
sets version cause delete operation performed matching version exists changes happened doc since then
sets type document delete
sets id document delete
returns tuple deleteresponses left element actual deleteresponse serialize right element expected deleteresponse parsing
test setting source request different available setters
returns tuple indexresponses left element actual indexresponse serialize right element expected indexresponse parsing
sets content source index
sets ingest pipeline executed indexing document
sets versioning type defaults versiontypeinternal
index map json source map index
sets document index bytes form
index map provided content type source map index
sets source
sets version cause index operation performed matching version exists changes happened doc since then
sets document source index note preferable either set using setsourceorgelasticsearchcommonxcontentxcontentbuilder using setsourcebyte xcontenttype
sets type operation perform
controls shard routing request using value hash shard id
set true force index use orgelasticsearchactionindexindexrequestoptypecreate
constructs simple document field name value pairs note number objects passed varargs method must even number also first argument pair the field name must valid string representation
sets id index document under optional set one automatically generated
constructs simple document field name value pairs note number objects passed method must even number also first argument pair the field name must valid string representation
sets document index bytes form assumed safe used different threads source source index offset offset byte array length length data xcontenttype typeformat source
sets type index document to
resolves version based operation type optype
set true force index use optypecreate
constructs new index request specific index type sourcebyte xcontenttype must set
sets ingest pipeline executed indexing document
id indexed document set automatically generated
returns stored version currently stored version versionsmatchany optype optypecreate returns versionsmatchdeleted
index map provided content type source map index
override method replicationaction storing state request object which really shouldnt do transport client goes away move away making available meantime dangerous set use indexrequest object always wrapped bulk request envelope should set
type indexed document
sets content source index note number objects passed method varargs must even number also first argument pair the field name must valid string representation
constructs new index request index type id using source index index index type type index id id document
sets string representation optypeoptype either index create
sets type indexed document
sets document index bytes form
controls shard routing request using value hash shard id
sets type operation perform
controls shard routing request using value hash shard id
sets id indexed document set automatically generated
refresh executed get operation causing operation return latest value note heavy get set true defaults false
sets preference execute search defaults randomize across shards set local prefer local shards custom value guarantees order used across different requests
index name document
type document
id document
sets preference execute search defaults randomize across shards set local prefer local shards custom value guarantees order used across different requests
explicitly specify fields returned default source field returned
refresh executed get operation causing operation return latest value note heavy get set true defaults false
sets id document fetch
sets type document fetch set null use id fetch first document matching it
sets version cause get operation performed matching version exists changes happened doc since then
sets preference execute search defaults randomize across shards set local prefer local shards custom value guarantees order used across different requests
sets versioning type defaults orgelasticsearchindexversiontypeinternal
indicates whether response contain stored source chaining
controls shard routing request using value hash shard id
indicate source returned include andor exclude set include simple wildcard elements includes optional list include optionally wildcarded pattern filter returned source excludes optional list exclude optionally wildcarded pattern filter returned source
indicate source returned include andor exclude set include simple wildcard elements include optional include optionally wildcarded pattern filter returned source exclude optional exclude optionally wildcarded pattern filter returned source
use getresponsegetsource instead
method used parse getresponse object printed xcontent using toxcontentxcontentbuilder params method forward compatibility reason method might fail tries parse field doesnt know returning result check enough information parsed return valid getresponse instance throws parsingexception otherwise case get 404 back parsed normal getresponse found set false elasticsearch exception caller method needs way figure whether got back valid get response done catching parsingexception parser xcontentparser parse response getresponse ioexception io exception occurs parsing
routing associated document
allows setting fetchsourcecontext request controlling source returned
sets preference execute search defaults randomize across shards set local prefer local shards custom value guarantees order used across different requests
constructs single get item index index name type type can null id id
constructs new get request specified index typestring idstring must set
sets id document fetch
refresh executed get operation causing operation return latest value note heavy get set true defaults false
sets type document fetch
sets preference execute search defaults randomize across shards set local prefer local shards custom value guarantees order used across different requests
controls shard routing request using value hash shard id
allows setting fetchsourcecontext request controlling source returned
explicitly specify stored fields returned default source field returned
constructs new get request specified index type id index index get document type type document id id document
sets versioning type defaults orgelasticsearchindexversiontypeinternal
read stream
test parsing simulatedocumentbaseresult inner failures dont support asserting xcontent equivalence given exceptions parsed back original class run usual abstractxcontenttestcasetestfromxcontent without failures test failures disable asserting xcontent equivalence end
set id pipeline simulate
create new builder simulatepipelinerequests
create new builder simulatepipelinerequests use simulatepipelinerequestbuilderelasticsearchclient simulatepipelineaction bytesreference xcontenttype avoid content type autodetection source bytes
enable disable verbose mode
test parsing simulatepipelineresponse inner failures dont support asserting xcontent equivalence given exceptions parsed back original class run usual abstractxcontenttestcasetestfromxcontent without failures test failures disable asserting xcontent equivalence end
create new pipeline request id source along content type source
create new pipeline request use putpipelinerequeststring bytesreference xcontenttype avoid content type autodetection
read stream
test parsing simulateprocessorresult inner failures dont support asserting xcontent equivalence given exceptions parsed back original class run usual abstractxcontenttestcasetestfromxcontent without failures test failures disable asserting xcontent equivalence end
creates new request given source content type
create new request use simulatepipelinerequestbytesreference xcontenttype attempt content autodetection
test parsing simulatedocumentverboseresult inner failures dont support asserting xcontent equivalence given exceptions parsed back original class run usual abstractxcontenttestcasetestfromxcontent without failures test failures disable asserting xcontent equivalence end
parser parser xcontent contains serialized getpipelineresponse instance getpipelineresponse read parser ioexception parsing fails
sets id pipeline delete
read stream
test behavior named analysis component isnt defined index case build defaults
test equivalent calling analyze specific index index specific value maximum token count used
test equivalent calling analyze without specific index default value maximum token count used
sets flags return stats
clears stats
document types return stats for mainly affects setindexingboolean enabled returning specific indexing stats types
utility method computes total memory adding fielddata percolatorcache segments memory index writer version map
status goes across all shards
document types return stats for mainly affects indexingboolean enabled returning specific indexing stats types
sets underlying stats flags
sets flags return stats
clears stats
sets specific search group stats retrieve stats for mainly affects search enabled
flags flags set flags supplied default flags set
sets flags return stats
sets specific search group stats retrieve stats for mainly affects search enabled
document types return stats for mainly affects flagindexing enabled returning specific indexing stats types
sets specific search group stats retrieve stats for mainly affects search enabled
clears stats
gives access package private indicesstatsresponse constructor test purpose
constructs recovery information collection indices associated shards keeps track many total shards seen many successfully processed many failed totalshards total count shards seen successfulshards count shards successfully processed failedshards count shards failed process shardrecoverystates map indices shard recovery information shardfailures list failures processing shards
sets number shard copies active creation new shrunken index return defaults activeshardcountdefault wait one shard copy the primary become active set value activeshardcountall wait shards primary replicas active returning otherwise use activeshardcountfromint set value nonnegative integer number copies per shard number replicas 1 wait desired amount shard copies become active returning index creation wait timeout value number shard copies active returning check resizeresponseisshardsacknowledged determine requisite shard copies started returning timing out waitforactiveshards number active shard copies wait
specifies type requested indices ignore wildcard indices expressions example indices dont exist
index delete
refresh request works all shards
refresh request works all shards
force merge index maxnumsegments default cause merge process merge half configured number segments
merge expunge deletes index without full merging defaults full merging false
flush performed merge defaults true
flush performed merge defaults true
merge expunge deletes index without full merge defaults full merging false
merge index maxnumsegments default cause merge process merge half configured number segments
default indicesoptions inherited broadcastoperationrequest raise exception
default indicesoptions setting indicessegmentsrequest throw exception index present
setting ignoreunavailable option prevents indexclosedexception
segments goes across all active shards
specifies type requested indices ignore wildcard indices expressions default expands wildcards open closed indices
sets indices shard stores request
set statuses filter shards get stores info on see clusterhealthstatus details defaults yellow red status shardstatuses acceptable values green yellow red all
specifies type requested indices ignore wildcard indices expressions default expands wildcards open closed indices
set statuses filter shards get stores info on shardstatuses acceptable values green yellow red all see clusterhealthstatus details
sets indices shard stores request
sets value includedefaults includedefaults value includedefaults set request
returns string value specified index setting includedefaults flag set set false getindexrequest method return value setting explicitly set index includedefaults flag set true getindexrequest method fall back return default value setting explicitly set
list query explanations
types documents query run against defaults types
constructs new validate request provided indices indices provided means run indices
indicates whether query validated shards
query validate orgelasticsearchindexqueryquerybuilders
indicates detailed information query returned orgelasticsearchindexqueryquerybuilders
indicates whether query rewritten primitive queries
types documents query run against defaults types
specifies type requested indices ignore deal wildcard indices expressions example indices dont exist indicesoptions desired behaviour regarding indices ignore wildcard indices expressions request
sets number shard copies active indices opening return defaults activeshardcountdefault wait one shard copy the primary become active set value activeshardcountall wait shards primary replicas active returning otherwise use activeshardcountfromint set value nonnegative integer number copies per shard number replicas 1 wait desired amount shard copies become active returning indices opening wait timeout value number shard copies active returning check openindexresponseisshardsacknowledged determine requisite shard copies started returning timing out waitforactiveshards number active shard copies wait
sets indices opened indices indices opened request
sets number shard copies active indices opening return defaults activeshardcountdefault wait one shard copy the primary become active set value activeshardcountall wait shards primary replicas active returning otherwise use activeshardcountfromint set value nonnegative integer number copies per shard number replicas 1 wait desired amount shard copies become active returning indices opening wait timeout value number shard copies active returning check openindexresponseisshardsacknowledged determine requisite shard copies started returning timing out waitforactiveshards number active shard copies wait
sets indices opened indices indices opened request
indices opened indices opened
specifies type requested indices ignore deal wildcard expressions example indices dont exist current behaviour comes index names wildcard indices expressions
specifies type requested indices ignore deal wildcard expressions example indices dont exist indicesoptions desired behaviour regarding indices ignore wildcard indices expressions request
force flushing even one possibly needed
set true flush block another flush operation already running flush performed default true
adds mapping added index gets created type mapping type source mapping source xcontenttype content type mapping source
sets aliases associated index gets created
sets settings mappings single source
adds mapping added index gets created type mapping type source mapping source
sets settings mappings single source
settings create index with
specialized simplified mapping source method takes form simple properties definition field1 typestringstoretrue
allows set settings using json builder
adds alias associated index gets created
cause index creation
settings create index either json yaml format
adds custom metadata index created
sets number shard copies active index creation return defaults activeshardcountdefault wait one shard copy the primary become active set value activeshardcountall wait shards primary replicas active returning otherwise use activeshardcountfromint set value nonnegative integer number copies per shard number replicas 1 wait desired amount shard copies become active returning index creation wait timeout value number shard copies active returning check createindexresponseisshardsacknowledged determine requisite shard copies started returning timing out waitforactiveshards number active shard copies wait
settings create index with
constructs new request create index specified name settings
sets aliases associated index gets created
settings create index either jsonyamlproperties format
sets settings mappings single source
sets settings mappings single source
sets settings mappings single source
adds alias associated index gets created
sets number shard copies active index creation return defaults activeshardcountdefault wait one shard copy the primary become active set value activeshardcountall wait shards primary replicas active returning otherwise use activeshardcountfromint set value nonnegative integer number copies per shard number replicas 1 wait desired amount shard copies become active returning index creation wait timeout value number shard copies active returning check createindexresponseisshardsacknowledged determine requisite shard copies started returning timing out waitforactiveshards number active shard copies wait
sets name index created
adds mapping added index gets created type mapping type source mapping source
settings create index either jsonyamlproperties format
allows set settings using json builder
cause index creation
sets aliases associated index gets created
sets settings mappings single source
settings create index with
sets aliases associated index gets created
adds mapping added index gets created type mapping type source mapping source
sets settings mappings single source
sets settings mappings single source
adds mapping added index gets created type mapping type source mapping source xcontenttype content type source
settings create index either json yaml format
sets aliases associated index gets created
specialized simplified mapping source method takes form simple properties definition field1 typestringstoretrue
sets aliases associated index gets created
adds custom metadata index created
settings create index with
test ensures index creation adheres indexmetadatasettingwaitforactiveshards
tests manually recover failed allocation due shards moved away etc
test setting source available setters
test setting settings available setters
sets indices closed indices indices closed request
specifies type requested indices ignore wildcard indices expressions example indices dont exist indicesoptions desired behaviour regarding indices ignore indices wildcard expressions request
specifies type requested indices ignore deal wildcard expressions example indices dont exist desired behaviour regarding indices ignore wildcard indices expressions
indices closed indices closed
sets indices closed indices indices closed request
specifies type requested indices ignore deal wild wildcard expressions example indices dont exist indicesoptions desired behaviour regarding indices ignore wildcard indices expressions request
getting upgrade stats all active shards
sets index versions updated
sets index version map indices updated
sets index versions updated
upgrade ancient older major version lucene segments
upgrade request works all shards
finds indices primaries available
see upgradeonlyancientsegments
set default routing
add action request validate it
aliases use action
validate action sane called action added request actions invalid built
set index action operating on
set alias action operating on
read stream
allows read alias provided input stream
associates search routing value alias
associates index routing value alias
associates filter alias
associates filter alias
sets whether alias pointing writeindex
parses alias returns parsed representation
associates filter alias
associates routing value alias
adds alias index indices indices alias alias
adds alias index index index alias alias filterbuilder filter
adds alias index index index alias alias filter filter
removes aliases index indices indices aliases aliases
adds alias index indices indices alias alias filterbuilder filter
adds alias index index indices alias alias filter filter
adds alias index indices indices alias alias filter filter
adds alias action request action alias action
adds alias index index index alias alias
adds alias index indices indices alias alias filter filter
removes alias index index index alias alias
removes aliases index index index aliases aliases
adds alias index index index alias alias writeindex write index flag
specifies type requested indices ignore wildcard indices expressions example indices dont exist
fills alias result empty entries requested indices specific aliases requested
sets order template one template matches
sets match expression used match indices created replaced setpatternslist
settings crete index template either json yaml format
template source definition
template source definition
template source definition
adds mapping added index gets created type mapping type source mapping source
settings created index template with
cause index template creation
adds mapping added index template gets created type mapping type source mapping source xcontenttype typeformat source
sets aliases associated index gets created
sets optional version template
sets aliases associated index gets created
sets aliases associated index gets created
sets match expression used match indices created
settings crete index template either json yaml format
settings created index template with
specialized simplified mapping source method takes form simple properties definition field1 typestringstoretrue
sets aliases associated index gets created
adds mapping added index template gets created type mapping type source mapping source
template source definition
set true force creation update index template already exists fail illegalargumentexception
adds alias added index template gets created alias alias request builder
template source definition
sets name index template
cause index template creation
settings create index template either jsonyaml format
adds alias added index gets created alias metadata new alias index template creation request
settings create index template with
adds mapping added index gets created type mapping type source mapping source xcontenttype source content type
template source definition
sets aliases associated index gets created
adds mapping added index gets created type mapping type source mapping source
template source definition
settings create index template with
set true force creation update index template already exists fail illegalargumentexception
specialized simplified mapping source method takes form simple properties definition field1 typestringstoretrue
settings create index template either json yaml format
sets aliases associated index gets created
sets name index template delete
set index template name delete
sets names index templates
sets concrete index put mapping request
type mappings
type mapping type source consisting fieldproperties pairs eg field1 typestringstoretrue illegalargumentexception number source arguments divisible two mappings definition
mapping source definition
mapping source definition
sets indices put mapping operation execute on
indices mappings put
test putmappingrequestbuildfromsimplifieddefstring object rejects inputs object varargs field name properties paired correctly
returns random putmappingrequest
type mappings
mapping source definition
specialized simplified mapping source method takes form simple properties definition field1 typestringstoretrue
specifies type requested indices ignore wildcard indices expressions example indices dont exist
mapping source definition
mapping source definition
indicates whether default mapping settings returned
fields list fields retrieve mapping
indicate whether receiving node operate based local index information forward requests needed nodes running locally request raise errors running locally missing indices
sets fields retrieve
indicates whether default mapping settings returned
returns mappings specific field field field name specified getfieldmappingsrequest fieldmappingmetadata requested field null found
attribute extract object extracted object group attributeclassname stream current tokenstream includeattributes filtering attributes mapkey value
add name char filter used tokenizer
add char filter setting used top tokenizer provided
add name token filter used top tokenizer provided
add token filter setting used top tokenizer provided
instead setting analyzer sets tokenizer using custom settings used part custom analyzer
instead setting analyzer tokenizer sets normalizer name
instead setting analyzer sets tokenizer name used part custom analyzer
sets texts analyze
sets attributes include results
sets field analyzer used analyze text note requires index set
sets explain
sets analyzer name use order analyze text analyzer analyzer name
iff set true settings update add settings already set index existing settings remain unchanged
sets settings update
sets indices update settings execute
sets settings updated
sets settings updated
sets settings updated
sets settings updated either json yaml format
specifies type requested indices ignore wildcard indices expressions example indices dont exist
sets settings updated
sets indices apply settings update
sets settings updated either json yaml format
sets settings updated
sets settings updated either json yaml format
constructs new request update settings one indices
iff set true settings update add settings already set index existing settings remain unchanged
returns string value specified index setting includedefaults flag set set false getsettingsrequest method return value setting explicitly set index includedefaults flag set true getsettingsrequest method fall back return default value setting explicitly set
specifies type requested indices ignore wildcard indices expressions example indices dont exist
includedefaults set return default values normally suppressed flag specific rest client
sets number shard copies active creation new rollover index return defaults activeshardcountdefault wait one shard copy the primary become active set value activeshardcountall wait shards primary replicas active returning otherwise use activeshardcountfromint set value nonnegative integer number copies per shard number replicas 1 wait desired amount shard copies become active returning index creation wait timeout value number shard copies active returning check rolloverresponseisshardsacknowledged determine requisite shard copies started returning timing out waitforactiveshards number active shard copies wait
newly created index matches index template whose aliases contains rollover alias rollover alias point multiple indices causes indexing requests rejected avoid this make sure duplicated alias index templates creating new index
adds condition check index least numdocs
adds sizebased condition check index size least size
adds condition check index least age old
types types check exist
indicesoptions specifies resolve indices arent active ready indices wildcard expressions
indices indices check types
controls whether wildcard expressions expanded existing open indices
controls whether wildcard expressions expanded existing closed indices
set source script along content type source
set script source content type bytes
shortcut setwaitforactiveshardsactiveshardcount numerical shard count passed in instead first call activeshardcountfromint get activeshardcount
waits n number nodes use 12 exact mapping 12 12 range
sets whether request wait relocating shards retrieving cluster health status defaults false meaning operation wait relocating shards set true wait number relocating shards cluster 0
sets whether request wait initializing shards retrieving cluster health status defaults false meaning operation wait initializing shards set true wait number initializing shards cluster 0
sets number shard copies must active getting health status defaults activeshardcountnone meaning dont wait active shards set value activeshardcountall wait shards primary replicas active across indices cluster otherwise use activeshardcountfromint set value nonnegative integer total number shard copies would exist across indices cluster
sets whether request wait initializing shards retrieving cluster health status defaults false meaning operation wait initializing shards set true wait number initializing shards cluster 0
waits n number nodes use 12 exact mapping 12 12 range
sets number shard copies must active across indices getting health status defaults activeshardcountnone meaning dont wait active shards set value activeshardcountall wait shards primary replicas active across indices cluster otherwise use activeshardcountfromint set value nonnegative integer total number shard copies wait for
sets whether request wait relocating shards retrieving cluster health status defaults false meaning operation wait relocating shards set true wait number relocating shards cluster 0
xcontent parser serialization tests
allows explicitly override derived cluster health status status override status must null
build lists information node
build looking list node statistics
build stats information node
average number shards primaryreplicas across indices
returns many redundant copies data cluster holds running replicas return 0
average replication factor across indices see getreplication
average number primary shards across indices
cluster health status populated master nodes
test empty transporthttp types printed part cluster stats xcontent output
sets repository settings source repository settings request
parses repository definition repositorydefinition repository definition
sets whether repository verified creation
type repository fs shared filesystem repository type repository type request
sets repository settings settings repository settings request
sets name repository name repository name
sets repository settings settings repository settings request
sets repository settings source repository settings json yaml format xcontenttype content type source request
sets repository name name repository name builder
sets repository settings source repository settings builder
sets repository settings settings repository settings builder
sets whether repository verified creation verify true repository verified registration false otherwise builder
sets repository settings json yaml format source repository settings xcontenttype content type source builder
sets repository type type repository type builder
sets repository settings settings repository settings builder builder
sets name repository unregister name name repository
sets repository name name repository name
sets list repositories list repositories empty contains single element all registered repositories returned repositories list repositories request
sets list repositories get repositories list repositories builder
adds repositories list repositories get repositories list repositories builder
sets name repository unregister name name repository
sets repository name name repository name
sets explain flag defaults false true request include explanation addition cluster state
adds allocation commands applied cluster note empty case simply run simple reroute
sets retry failed flag defaults false true request retry allocating shards cant currently allocated due many allocation failures
sets dry run flag defaults false allowing run commands without actually applying cluster state getting resulting cluster state back
set allocation commands execute
sets explain flag collect information reroute request without executing actions similar dryrun humanreadable
sets dry run flag defaults false allowing run commands without actually applying cluster state getting resulting cluster state back
sets retry failed flag defaults false true request retry allocating shards cant currently allocated due many allocation failures
adds allocation commands applied cluster note empty case simply run simple reroute
node transport stats returned
node indices stats returned
node file system stats returned
node thread pool stats returned
node jvm stats returned
ingest statistics returned
sets request flags
discovery stats returned
node indices stats returned
node os stats returned
clears stats flags
node http stats returned
node os stats returned
indices level stats
operating system level statistics
process level statistics
thread pool level statistics
file system level stats
jvm level statistics
node http returned
adaptiveselection statistics returned
node thread pool returned
sets request flags
node os returned
ingest statistics returned
node transport returned
indices stats returned
node jvm returned
nodes circuit breaker stats returned
node file system stats returned
clears request flags
node process returned
nodes discovery stats returned
returns ordered list based modules name
returns ordered list based plugins name
information indices currently indexing buffers returned indices true want info
node jvm returned
node settings returned
information plugins returned plugins true want info request
node process returned
clears info flags
node thread pool info returned
sets return data
node os returned
information ingest returned ingest true want info
node http returned
node transport returned
jvm level information
settings node
operating system level information
process level information
systems hostname null case unknownhostexception
node os info returned
clears info flags
node indices info returned
node settings returned
node transport info returned
node thread pool info returned
node http info returned
sets return data
node ingest info returned
node os process returned
node plugins info returned
node jvm info returned
fetch task status list tasks api using its fallback get task index behavior asserts obvious stuff fetched task returns map its status
test waiting task times out wait wait running task return failures accumulated waiting
test wait completion storeresult task store results wait start waiting task accepts id task wait returns future waiting it validator validate response return task ids found
wait test task running nodes return taskid primary task
registers recording task event listeners given action mask nodes
basic is plugged in style test indexes document makes sure fetch status process goal verify large moving parts make fetching task status work fit together rather verify particular status results indexing that look transportreplicationactiontests intentionally dont use task recording mechanism used places test make sure status fetching works properly wire
asserts tasks tasks list parenttask
returns events satisfy criteria across nodes actionmasks action masks match number events satisfy criteria
resets recording task event listeners given action mask nodes
test starts nodes actions blocks nodes node actions blocked middle execution executes tasks action targets blocked node actions test verifies task actions getting executed nodes listed node filter
detailed task information returned
request wait found tasks complete
returns list tasks node
presents flat list tasks
convert task response xcontent grouping executing nodes
convert response xcontent grouping parent tasks
get tasks found request grouped parent tasks
detailed task information returned
request wait found tasks complete
called waiting task complete attempts load results task tasks index isnt index returns snapshot task taken shortly completion
send getrequest tasks index looking persisted copy task completed task itll found tasks result stored called node task node still part cluster coordinating node node longer part cluster
called plain getresponse loading task results index called node task node part cluster coordinating node node wasnt part cluster
executed coordinating node forward execution remaining work node matches requested taskidgetnodeid node isnt cluster proceed getfinishedtaskfromindextask gettaskrequest actionlistener node
executed node running task find return running task falls back getfinishedtaskfromindextask gettaskrequest actionlistener task isnt still running
request wait found tasks complete
timeout wait async actions request must take must take anywhere 0 2
set taskid look up required
set taskid look up required
request wait found tasks complete
timeout wait async actions request must take must take anywhere 0 2
set reason canceling task
node node statistics collected timestamp timestamp statistics collected sincetime timestamp collection statistics started restusage map containing counts number times rest endpoint called
sets request flags
node rest actions usage statistics returned
clears request flags
sets preference execute search defaults randomize across shards set local prefer local shards custom value guarantees order used across different requests
separated list routing values control shards search executed on
routing values control shards search executed on
specifies type requested indices ignore deal indices wildcard expressions example indices dont exist
sets indices search executed on
indices
routing values control shards search executed on
sets preference execute search defaults randomize across shards set local prefer local shards custom value guarantees order used across different requests
sets indices search executed on
separated list routing values control shards search executed on
sets whether explain allocation primary shard replica shard copy shard id see getshard
create new allocation explain request primary false first unassigned replica picked explanation replicas unassigned first assigned replica explained package private testing
returns index name shard explain null use unassigned shard see useanyunassignedshard
create new allocation explain request explain unassigned shard cluster
returns node holding replica shard explained returns null replica shard explained
sets index name shard explain
requests explain api explain already assigned replica shard currently allocated given node
returns shard id shard explain null use unassigned shard see useanyunassignedshard
sets shard id shard explain
returns true explaining primary shard shard id see getshard false explaining replica shard copy shard id null use unassigned shard see useanyunassignedshard
whether include yes decider decisions response instead no decisions
index name use finding shard explain
requests explain api explain already assigned replica shard currently allocated given node
whether primary replica explained
whether include information gathered disk information nodes cluster
shard number use finding shard explain
signal first unassigned shard used
returns unassigned info shard null shard active
returns relocating target node null shard shardroutingstaterelocating state
returns currently assigned node null shard unassigned
returns cluster disk info cluster null none available
include data
cluster state result include orgelasticsearchclusterclusterstatecustom defaults true
setmetadataboolean set indices return orgelasticsearchclustermetadataindexmetadata for defaults indices
cluster state result include orgelasticsearchclusternodediscoverynodes defaults true
cluster state result include orgelasticsearchclusterroutingroutingtable defaults true
cluster state result include orgelasticsearchclustermetadatametadata defaults true
include data
constructs new delete snapshots request repository snapshot name repository repository name snapshot snapshot name
sets snapshot name request
sets repository name repository repository name builder
sets snapshot name snapshot snapshot name builder
sets name snapshot snapshot snapshot name request
set true allow indices failed snapshot shards partially restored partial true indices failed snapshot shards partially restored request
sets repositoryspecific restore settings see repository documentation information source repositoryspecific snapshot settings request
set true restore procedure restore global cluster state global cluster state includes persistent settings index template definitions includeglobalstate true global state restored snapshot request
sets rename pattern applied restored indices indices match rename pattern renamed according renamereplacementstring rename pattern applied according javautilregexmatcherappendreplacementstringbuffer string request fail two indices renamed name renamepattern rename pattern request
sets settings addedchanged restored indices
sets list index settings index settings groups shouldnt restored snapshot
parses restore definition source restore definition request
sets list indices restored snapshot list indices supports multiindex syntax example test test42 index indices prefix test except index test42 aliases supported empty list all restore open indices snapshot indices list indices request
sets settings addedchanged restored indices
set true restore procedure restore aliases includealiases true aliases restored snapshot request
parameter set true operation wait completion restore process returning waitforcompletion true operation wait completion request
sets repositoryspecific restore settings json yaml format see repository documentation information source repositoryspecific snapshot settings xcontenttype content type source request
sets repositoryspecific restore settings see repository documentation information settings repositoryspecific snapshot settings request
sets settings addedchanged restored indices
constructs new put repository request provided repository snapshot names repository repository name snapshot snapshot name
sets repository name repository repository name request
sets settings addedchanged restored indices
sets list indices restored snapshot list indices supports multiindex syntax example test test42 index indices prefix test except index test42 aliases supported empty list all restore open indices snapshot indices list indices request
sets rename replacement see renamepatternstring information renamereplacement rename replacement
specifies type requested indices ignore deal wildcard expressions example indices dont exist indicesoptions desired behaviour regarding indices ignore wildcard indices expressions request
sets list index settings index settings groups shouldnt restored snapshot
sets repositoryspecific restore settings see repository documentation information settings repositoryspecific snapshot settings request
sets rename pattern applied restored indices indices match rename pattern renamed according setrenamereplacementstring rename pattern applied according javautilregexmatcherappendreplacementstringbuffer string request fail two indices renamed name renamepattern rename pattern builder
set true restore procedure restore global cluster state global cluster state includes persistent settings index template definitions restoreglobalstate true global state restored snapshot builder
sets list index settings index settings groups shouldnt restored snapshot
sets index settings added replaced restore source index settings xcontenttype content type source builder
sets list indices restored snapshot list indices supports multiindex syntax example test test42 index indices prefix test except index test42 aliases supported empty list all restore open indices snapshot indices list indices builder
sets repositoryspecific restore settings see repository documentation information settings repositoryspecific snapshot settings builder
sets index settings added replaced restore settings index settings builder
sets repositoryspecific restore settings see repository documentation information source repositoryspecific snapshot settings builder
sets rename replacement see setrenamepatternstring information renamereplacement rename replacement builder
set true restore procedure restore partially snapshotted indices partial true partially snapshotted indices restored builder
sets snapshot name snapshot snapshot name builder
sets list index settings index settings groups shouldnt restored snapshot
specifies type requested indices ignore deal wildcard expressions example indices dont exist indicesoptions desired behaviour regarding indices ignore wildcard indices expressions builder
sets index settings added replaced restore source index settings builder
parameter set true operation wait completion restore process returning waitforcompletion true operation wait completion builder
sets repositoryspecific restore settings json yaml format see repository documentation information source repositoryspecific snapshot settings xcontenttype content type source builder
sets index settings added replaced restore settings index settings builder
sets repository name repository repository name builder
sets repositoryspecific restore settings see repository documentation information settings repositoryspecific snapshot settings builder
set true restore procedure restore aliases restorealiases true aliases restored snapshot builder
sets repository name repository repository name builder
makes request return current snapshot builder
makes request ignore unavailable snapshots ignoreunavailable true ignore unavailable snapshots builder
adds additional snapshots list snapshots return snapshots additional snapshots builder
sets list snapshots return snapshots list snapshots builder
set false show snapshot names indices contain useful snapshots belong cloudbased repository blob read concern cost wise performance wise snapshot names indices contain retrieved single index blob repository whereas rest information requires reading snapshot metadata file snapshot requested defaults true returns information requested snapshot
constructs new get snapshots request given repository name list snapshots repository repository name snapshots list snapshots
set true ignore unavailable snapshots request
set false show snapshot names indices contain useful snapshots belong cloudbased repository blob read concern cost wise performance wise snapshot names indices contain retrieved single index blob repository whereas rest information requires reading snapshot metadata file snapshot requested defaults true returns information requested snapshot
sets repository name repository repository name request
sets list snapshots returned request
sets repositoryspecific snapshot settings see repository documentation information settings repositoryspecific snapshot settings request
set true operation wait snapshot completion returning default operation return soon snapshot initialized changed setting flag true waitforcompletion true operation wait snapshot completion request
specifies indices options like type requested indices ignore example indices dont exist indicesoptions desired behaviour regarding indices options request
sets snapshot name snapshot snapshot name
sets repositoryspecific snapshot settings see repository documentation information source repositoryspecific snapshot settings request
sets list indices included snapshot list indices supports multiindex syntax example test test42 index indices prefix test except index test42 aliases supported empty list all snapshot open indices cluster request
constructs new put repository request provided snapshot repository names repository repository name snapshot snapshot name
parses snapshot definition source snapshot definition request
sets repositoryspecific snapshot settings json yaml format see repository documentation information source repositoryspecific snapshot settings xcontenttype content type source request
returns list indices included snapshot list indices
sets repositoryspecific snapshot settings see repository documentation information settings repositoryspecific snapshot settings request
set true allow indices unavailable shards partially snapshotted partial true indices unavailable shards partially snapshotted request
sets repository name repository name request
specifies indices options like type requested indices ignore example indices dont exist desired behaviour regarding indices options
sets list indices included snapshot list indices supports multiindex syntax example test test42 index indices prefix test except index test42 aliases supported empty list all snapshot open indices cluster request
set true global state stored part snapshot includeglobalstate true global state stored request
sets repositoryspecific snapshot settings see repository documentation information settings repositoryspecific snapshot settings builder
specifies indices options like type requested indices ignore example indices dont exist indicesoptions desired behaviour regarding indices options request
set true snapshot include global cluster state includeglobalstate true snapshot include global cluster state builder
sets repositoryspecific snapshot settings yaml json format see repository documentation information source repositoryspecific snapshot settings xcontenttype content type source builder
sets repositoryspecific snapshot settings see repository documentation information settings repositoryspecific snapshot settings builder
sets repository name repository repository name builder
sets list indices included snapshot list indices supports multiindex syntax example test test42 index indices prefix test except index test42 aliases supported empty list all snapshot open indices cluster builder
sets repositoryspecific snapshot settings see repository documentation information settings repositoryspecific snapshot settings builder
sets snapshot name snapshot snapshot name builder
set true request snapshot indices unavailable shards partial true request snapshot indices unavailable shards builder
set true request wait snapshot completion returning waitforcompletion true builder
returns http status reststatusaccepted snapshot still progress reststatusok snapshot successful partially successful reststatusinternalservererror snapshot failed completely
sets repository name repository repository name builder
set true ignore unavailable snapshots instead throwing exception defaults false means unavailable snapshots cause exception thrown ignoreunavailable whether ignore unavailable snapshots builder
adds additional snapshots list snapshots return snapshots additional snapshots builder
sets list snapshots return snapshots list snapshots builder
generate snapshot state code value state code state
reads snapshot status stream input stream input deserialized snapshot status
returns list snapshot indices
set true ignore unavailable snapshots instead throwing exception defaults false means unavailable snapshots cause exception thrown ignoreunavailable whether ignore unavailable snapshots request
sets repository name repository repository name request
sets list snapshots returned request
constructs new get snapshots request given repository name list snapshots repository repository name snapshots list snapshots
sets transient settings updated survive full cluster restart
sets source containing persistent settings updated get applied cross restarts
sets source containing transient settings updated survive full cluster restart
sets transient settings updated survive full cluster restart
sets persistent settings updated get applied cross restarts
sets transient settings updated survive full cluster restart
sets persistent settings updated get applied cross restarts
sets persistent settings updated get applied cross restarts
sets source containing transient settings updated survive full cluster restart
sets persistent settings updated get applied cross restarts
sets transient settings updated survive full cluster restart
sets transient settings updated survive full cluster restart
sets source containing persistent settings updated get applied cross restarts
sets persistent settings updated get applied cross restarts
sets transient settings updated survive full cluster restart
sets persistent settings updated get applied cross restarts
partitions settings known valid versus unknown invalid resulting tuple contains known valid settings first component unknown invalid settings second component note archived settings contained settings partition included first component settings settings partition settingstype string identify settings for logging logger logger sending warnings partitioned settings
returns string value setting specified index order search first persistent settings transient settings finally default settings setting name setting get string
includedefaults set return default settings normally suppressed
index name document
type document
id document
return start stop offsets term stored skip offsets
sets artificial document term vectors requested for use docbytesreference boolean xcontenttype avoid content auto detection
return field statistics term shard skip
return term statistics term shard skip
sets preference execute search defaults randomize across shards set local prefer local shards custom value guarantees order used across different requests
constructs new term vector request document fetch provided index use typestring idstring specify document load
sets artificial document term vectors requested for
sets settings filtering terms
constructs new term vector request document fetch provided index use typestring idstring specify document load
return positions term stored skip
sets id document term vector requested for
populates request object prepopulated defaults based parser
override analyzer used field generating term vectors
return term vectors special selected fields returns term vectors fields selectedfields null
return payloads term skip
sets type document get term vector for
sets preference execute search defaults randomize across shards set local prefer local shards custom value guarantees order used across different requests
sets analyzer used field generating term vectors
sets type document
sets whether return start stop offsets term stored skip offsets
sets whether return term vectors special selected fields returns term vectors fields selectedfields null
sets index document located
sets preference execute search defaults randomize across shards set local prefer local shards custom value guarantees order used across different requests
sets whether return field statistics term shard skip
sets whether term vectors generated realtime
sets settings filtering terms
sets routing required routing isnt id based
sets whether return term statistics term shard skip
sets artificial document generate term vectors
sets whether return payloads term skip
sets id document
sets whether return positions term stored skip
headerref stores offsets per field termvectors header information bytesref termvectors stores actual term vectors bytesref
generate test documentsthe returned documents already indexed
invokes acceptbulkrequest actionlistener backs provided exception delegates results provided listener retries scheduled using classs thread pool consumer consumer apply request listener bulkrequest bulk request executed listener listener invoked bulk request finishes completes exception listener settings settings
invokes acceptbulkrequest actionlistener backs provided exception retries scheduled using classs thread pool consumer consumer apply request listener bulkrequest bulk request executed settings settings future representing bulk response returned client
completes operation without anything primary
returns request executed shard
indicates operation needs failed required mapping didnt arrive time
resets current item state prepare new execution
builds bulk shard response return user
sets request actually executed primary different request received user specifically update request translated indexing delete request
returns translog location needed synced order persist operations executed far
indicates current operation completed needs wait new mapping master
current operation executed primary specified result
returns result request executed shard
move next item execute
finishes execution current request response returned user
adds updaterequest list actions execute
adds deleterequest list actions execute
adds deleterequest list actions execute
timeout wait index operation cant performed immediately defaults 1m
adds indexrequest list actions execute follows behavior indexrequest for example id provided one generated usage create flag
adds framed data binary format
sets number shard copies must active proceeding write see replicationrequestwaitforactiveshardsactiveshardcount details
timeout wait index operation cant performed immediately defaults 1m
adds indexrequest list actions execute follows behavior indexrequest for example id provided one generated usage create flag
adds updaterequest list actions execute
adds framed data binary format
sets flush new bulk request based number actions currently added defaults 1000 set 1 disable it
closes processor flushing time enabled its shutdown remaining bulk actions flushed concurrent requests enabled returns true immediately concurrent requests enabled waits specified timeout bulk requests complete returns true specified waiting time elapses bulk requests complete false returned timeout maximum time wait bulk requests complete unit time unit timeout argument true bulk requests completed false waiting time elapsed bulk requests completed interruptedexception current thread interrupted
adds data bytes processed bulk processor
flush pending delete index requests
sets number concurrent requests allowed executed value 0 means single request allowed executed value 1 means 1 concurrent request allowed executed accumulating new bulk requests defaults 1
builds new bulk processor
adds data bytes processed bulk processor
sets custom backoff policy backoff policy defines bulk processor handle retries bulk requests internally case failed due resource constraints ie thread pool full default back exponentially orgelasticsearchactionbulkbackoffpolicyexponentialbackoff
closes processor flushing time enabled its shutdown remaining bulk actions flushed
sets flush interval flushing any bulk actions pending interval passes defaults set note setbulkactionsint setbulksizeorgelasticsearchcommonunitbytesizevalue set 1 flush interval set allowing complete async processing bulk actions
sets flush new bulk request based size actions currently added defaults 5mb set 1 disable it
failure message null fail
type action
reads bulkitemresponse xcontentparser parser xcontentparser id id assign parsed bulkitemresponse usually index item bulkresponsegetitems array
version action
read stream
index name action
id action
abort request store orgelasticsearchactionbulkbulkitemresponsefailure response index concrete index resolved request cause cause rejection may null illegalstateexception response already exists request
tests transportbulkaction evaluates alias routing values correctly dealing alias pointing multiple indices write index exits
adds framed data binary format
returns sliced bytesreference xcontenttype json byte preceding marker checked see carriage return so bytesreference sliced carriage return ignored
adds list requests executed either index delete requests
timeout wait index operation cant performed immediately defaults 1m
sets number shard copies must active proceeding write see replicationrequestwaitforactiveshardsactiveshardcount details
adds framed data binary format
adds list requests executed either index delete requests
list optional payloads associated requests order requests note elements within might null payload provided note payloads provided method return null as conserve memory overhead
adds framed data binary format
add request current bulkrequest request request add payload optional payload current bulk request
executes bulk item requests handles request execution exceptions
determines whether bulk item request executed replica replicaitemexecutionmodenormal upon normal primary execution failures replicaitemexecutionmodefailure upon primary execution failure sequence generation replicaitemexecutionmodenoop upon primary execution failure sequence generation primary execution resulted noop only possible write requests pre60 nodes
creates new bulk item result given requests result performing update operation shard
executes index operation primary shard updates mapping dynamic mappings found
anything failed execution
see frombytebyte
returns true name represents valid name one indices option false otherwise
whether aliases pointing multiple indices allowed
fail wildcard usage indices named required destructive operations
index auto created indexnotfoundexception index doesnt exist shouldnt auto created
waits specified number active shards started executing indexnames indices wait active shards activeshardcount number active shards wait returning timeout timeout value onresult function executed response requisite shards becoming active timeout whichever comes first onfailure function executed response error occurring waiting active shards
returns true iff active shard count shard routing table enough meet required shard count represented instance
returns true iff given cluster states routing table contains enough active shards given indices meet required shard count represented instance
parses active shard count given string valid values all shard copies null default value which defaults one shard copy numeric value greater equal 0 input throw illegalargumentexception
get activeshardcount instance given value value first validated ensure valid shard count throws illegalargumentexception validation fails valid values nonnegative number directly use activeshardcountdefault default value which one shard copy activeshardcountall specify shards
validates instance valid given number replicas index
returns true iff given number active shards enough meet required shard count represented instance method invoked activeshardcount objects created fromint none one
use method transport action continue run context current task
execute transport action local node returning task used track execution accepting tasklistener listens completion action
use method transport action call result creation new task associated call typical behavior
creates new listener delegate delegate listener groupsize group size
parse refresh policy string modifying string non null convenient use request parsing
parse string representation refresh policy usually request parameter
parse refresh policy string modifying string non null convenient use request parsing
request trigger refresh plain refreshpolicyimmediate wait refresh plain refreshpolicywaituntil proceed ignore refreshes entirely plain refreshpolicynone default
timeout wait index operation cant performed immediately defaults 1m
timeout wait index operation cant performed immediately defaults 1m
timeout wait index operation cant performed immediately defaults 1m
sets index
concrete index request targeted null index optional whether index property optional depends concrete implementation index property required concrete implementation use validatenonnullindex check index property set
validation exception index property hasnt set
sets index
syncs operation result translog throws shard available failure
calls response listener pending operations returned otherwise decrements pending opts counter
respond refresh occurred listener ready always called synchronized this
respond refresh occurred listener ready always called synchronized this
node failure occurred
sets number shard copies must active proceeding replication operation defaults activeshardcountdefault requires one shard copy the primary active set value activeshardcountall wait shards primary replicas active otherwise use activeshardcountfromint set value nonnegative integer total number shard copies number replicas 1
shardid shard operation executed on null shardid yet resolved
sets minimum version cluster state required next node redirect another primary used prevent redirect loops see also transportreplicationactionreroutephasedorun
creates new request resolved shard id
sets target shard id request shard id set indexdelete request resolved transport action
timeout wait index operation cant performed immediately defaults 1m
shard ids request run
checks whether perform write based required active shard count setting returns null ok proceed string describing reason stop
sends specified replica request specified node replicarequest replica request node node send request listener callback handling response failure
sets current phase task isnt null pulled method convenient way
result executing primary operation expects finalresponseifsuccessful finalfailure notnull
index level block check request execution returning null means blocks need checked
cluster level block check request execution returning null means blocks need checked
tries acquire reference indexshard perform primary operation released performing primary operation locally replication operation replica shards completed failed see replicationoperation
resolves derived values request example target shard id incoming request set request construction additional processing validation request done here indexmetadata index metadata concrete index request going operate request request resolve
test ensures replication operations adhere indexmetadatasettingwaitforactiveshards setting request using default value waitforactiveshards
transport channel needed replica operation testing
takes request sent transportreplicationaction captured returns underlying request its wrapped original cast expected type throw classcastexception request wrong type
relocating primary shard cluster state update end relocation active primary switched relocation source relocation target relocation source receives processes cluster state relocation target time span relocation source believes active primary relocation target relocation target believes active primary relocation source results replication requests sent back forth test checks replication request routed back relocation target relocation source case stale index routing table relocation target
test replica request rejected arrives shard wrong allocation id
test primary request rejected arrives shard wrong allocation id term
test throwing orgelasticsearchactionsupportreplicationtransportreplicationactionretryonreplicaexception causes retry
timeout wait index operation cant performed immediately defaults 1m
sets number shard copies must active proceeding write see replicationrequestwaitforactiveshardsactiveshardcount details
timeout wait index operation cant performed immediately defaults 1m
creates cluster state index numberofprimaries primary shards started state replicas cluster state contains numberofnodes nodes assigns primaries nodes
creates cluster state index one shard many replicas numberofreplicas primary started cluster state replicas one unassigned initializing started relocating index name index activeprimarylocal active primary coincide local node cluster state numberofreplicas number replicas
creates cluster state given indices index containing numberofprimaries started primary shards replicas cluster state contains numberofnodes nodes assigns primaries nodes
creates cluster state index one shard many replicas numberofreplicas primary started cluster state unassignedreplicas unassigned assignedreplicas one initializing started relocating index name index activeprimarylocal active primary coincide local node cluster state assignedreplicas number replicas initializing started relocating state unassignedreplicas number replicas unassigned
creates cluster state local node master node specified localnode node allnodes local node masternode node allnodes master node null master exists allnodes nodes cluster cluster state
creates cluster state several shards one replica shards started
creates cluster state index one shard replicastates replicas index name index activeprimarylocal active primary coincide local node cluster state primarystate state primary replicastates states replicas length array determines also number replicas
creates cluster state index
creates cluster state several indexes shards replicas shards started
resolve node ids concrete nodes incoming request
map responses noderesponseclass responses failednodeexceptions request associated request nodesresponses nodelevel responses never null nullpointerexception nodesresponses null newresponsebasenodesrequest list list
lazily build get map node id node response never null empty getnodes
rest status used response
match children provided task
set task lookup
rethrow task failures any
sets list action masks actions returned
specifies request executed local node rather master
timeout value case master discovered yet disconnected
allows directly call transportmasternodeactionmasteroperationmasternoderequest clusterstate actionlistener protected method
sets maximum wait acknowledgement nodes
timeout wait operation acknowledged current cluster nodes defaults 10s
sets master node timeout case master yet discovered
sets master node timeout case master yet discovered
indexing operations entail mapping changes require blocking request master node update mapping master node disrupted cannot commit cluster state changes needs retry within timeout limits retry logic implemented transportmasternodeaction tested following master failover scenario
allows set timeout timeout timeout string eg 1s request
allows set timeout timeout timeout timevalue request
parse current token update parsing context appropriately
sets number shard copies must active proceeding write see replicationrequestwaitforactiveshardsactiveshardcount details
sets whether specified doc parameter used upsert document
sets doc source update request used document exists doc includes field value pairs
indicate source returned every hit include andor exclude set include simple wildcard elements include optional include optionally wildcarded pattern filter returned source exclude optional exclude optionally wildcarded pattern filter returned source
sets doc source update request used document exists
sets doc use updates script specified
sets doc source update request used document exists
sets version cause index operation performed matching version exists changes happened doc since then
sets doc use updates script specified
sets doc use updates script specified
controls shard routing request using value hash shard id
sets doc source update request used document exists
sets doc source update request used document exists
indicates whether response contain updated source
sets index request used document exists otherwise orgelasticsearchindexenginedocumentmissingexception thrown
sets type indexed document
sets doc use updates script specified doc provided field value pairs
sets doc source update request used document exists doc includes field value pairs
sets versioning type defaults orgelasticsearchindexversiontypeinternal
sets doc use updates script specified
script execute note make sure send different script times instead use script params possible automatically compiled script script works variable ctx bound entry eg ctxsourcemycounter 1
indicate source returned include andor exclude set include simple wildcard elements includes optional list include optionally wildcarded pattern filter returned source excludes optional list exclude optionally wildcarded pattern filter returned source
sets doc use updates script specified
sets doc source update request used document exists
sets doc use updates script specified
sets number retries version conflict occurs document updated getting updating it defaults 0
sets doc source update request used document exists
sets doc use updates script specified
sets id indexed document
sets whether perform extra effort detect noop updates via docasupsert defaults true
sets doc use updates script specified doc provided field value pairs
sets whether script run case insert
returns tuple updateresponses left element actual updateresponse serialize right element expected updateresponse parsing
id indexed document
sets doc use updates script specified
sets doc source update request used document exists
sets id indexed document
controls shard routing request using value hash shard id
sets doc use updates script specified
script execute note make sure send different script times instead use script params possible automatically compiled script
update attempt detect noop defaults true chaining
script execute note make sure send different script times instead use script params possible automatically compiled script use scriptscript instead
add script parameter use scriptscript instead
sets number shard copies must active proceeding write see replicationrequestwaitforactiveshardsactiveshardcount details
sets doc use updates script specified
indicate source returned every hit include andor exclude set include simple wildcard elements include optional include optionally wildcarded pattern filter returned source exclude optional exclude optionally wildcarded pattern filter returned source
script execute note make sure send different script times instead use script params possible automatically compiled script use scriptscript instead
sets doc source update request used document exists doc includes field value pairs
controls shard routing request using value hash shard id
use script instead
sets doc source update request used document exists
sets index request used document exists otherwise orgelasticsearchindexenginedocumentmissingexception thrown
sets script parameters use script use scriptscript instead
indicate source returned include andor exclude set include simple wildcard elements includes optional list include optionally wildcarded pattern filter returned source excludes optional list exclude optionally wildcarded pattern filter returned source
script execute note make sure send different script times instead use script params possible automatically compiled script use scriptscript instead
sets doc use updates script specified doc provided field value pairs
sets doc source update request used document exists doc includes field value pairs
sets number retries version conflict occurs document updated getting updating it defaults 0
sets doc source update request used document exists
sets doc use updates script specified
use script instead
sets doc source update request used document exists
type indexed document
language script execute use scriptscript instead
script execute note make sure send different script times instead use script params possible automatically compiled script script script execute scriptlang script language scripttype script type scriptparams script parameters use scriptscript instead
sets doc use updates script specified doc provided field value pairs
sets type indexed document
indicates whether response contain updated source
sets doc source update request used document exists
sets doc use updates script specified
sets doc use updates script specified
use script instead
sets doc use updates script specified
sets doc source update request used document exists
explicitly set fetch source context request
use script instead
applies updaterequestfetchsource source updated document returned update response
prepare request merging existing document new one optionally detect noop change returns result containing new indexrequest executed primary replicas
prepare request updating existing document using script executes script returns result containing either new indexrequest deleterequest depending scripts returned op value executed primary replicas
calculate version use update request using either existing version internal versioning used get result documents version version type force
prepares update request converting index delete request update response no action event noop
execute scripted upsert existing upsert document script executed script executed new tuple operation updated source returned
calculate routing value used either included index requests routing retrieved documents routing defined
prepare request upsert executing upsert script present returning result containing new indexrequest executed primary replicas
prepares update request converting index delete request update response no action
set enable scrolling search request specified timeout
set enable scrolling search request specified timeout
scroll id use continue scrolling
set enable scrolling search request
sets threshold enforces prefilter roundtrip prefilter search shards based query rewriting number shards search request expands exceeds threshold filter roundtrip limit number shards significantly instance shard match documents based its rewrite method ie date filters mandatory match shard bounds query disjoint default 128
constructs new search request reading specified stream stream request read ioexception issue reading stream
indices
routing values control shards search executed on
source search request
sets number shard results reduced coordinating node value used protection mechanism reduce memory overhead per search request potential number shards request large
search type execute defaults searchtypedefault
sets number shard requests executed concurrently single node value used protection mechanism reduce number shard requests fired per high level search request searches hit entire cluster throttled number reduce cluster load default 5
constructs new search request provided indices given search source
set enable scrolling search request
document types execute search against defaults executed types types going away prefer filtering type
sets indices search executed on
sets request allow partial results if method called default cluster level setting
sets preference execute search defaults randomize across shards set local prefer local shards custom value guarantees order used across different requests
separated list routing values control shards search executed on
sets request use request cache not assuming for example now used never cached default not set null default index level setting request cache enabled not
executes single request queue requests request finishes another request taken queue request executed permit taken specified semaphore released request completes requests queue multisearch requests execute responses atomic array hold responses corresponding search request slot responsecounter incremented response listener listener attached multisearch request
reset iterator mark skippable skip
creates plainsharditerator instance iterates subset given shards given shardid shardid shard id group shards shards iterate
profiling enabled returns object containing profile results shard profiling enabled return null profile results empty map
failed number shards search executed on
test parsing multisearchresponse inner failures dont support asserting xcontent equivalence given exceptions parsed back original class run usual abstractxcontenttestcasetestfromxcontent without failures test failures disable asserting xcontent equivalence end
returns profile results search response including shards empty map returned profiling enabled profile results
clears rescorers builder sets first one use multiple rescore windows use addrescorerorgelasticsearchsearchrescorerescorerbuilder int rescorer rescorer configuration window rescore window chaining
set enable scrolling search request specified timeout
indicates whether response contain stored source every hit
indicates total hit count query tracked defaults true
routing values control shards search executed on
adds aggregation search operation
adds generic sort builder orgelasticsearchsearchsortsortbuilders
sets minimum score docs filtered out
document types execute search against defaults executed types types going away prefer filtering field
adds stored fields load return note must stored part search request disable stored fields entirely source metadata fields use storedfieldnone
orgelasticsearchsearchsearchhit returned version
set enable scrolling search request specified timeout
sets boost specific index receive query executed it index index apply boost indexboost boost apply index
adds sort given field name sort ordering field name field order sort ordering
indicate source returned every hit include andor exclude set include simple wildcard elements include optional include optionally wildcarded pattern filter returned source exclude optional exclude optionally wildcarded pattern filter returned source
adds stored fields load return note must stored part search request disable stored fields entirely source metadata fields use storedfieldnone use searchrequestbuilderstoredfieldsstring instead
sets number shard requests executed concurrently single node value used protection mechanism reduce number shard requests fired per high level search request searches hit entire cluster throttled number reduce cluster load default 5
sets preference execute search defaults randomize across shards set local prefer local shards custom value guarantees order used across different requests
adds new rescorer rescorer rescorer configuration chaining
adds stored field load return note must stored part search request
index start search from defaults 0
set sort values indicates docs request search after
separated list routing values control shards search executed on
search type execute defaults orgelasticsearchactionsearchsearchtypedefault
optional timeout control long search allowed take
sets source request searchsourcebuilder
sets request allow partial results if method called default cluster level setting
specifies type requested indices ignore wildcard indices expressions example indices dont exist
stats groups request aggregated under
delegates searchsourcebuildersuggestsuggestbuilder
number search hits return defaults 10
adds new rescorer rescorer rescorer configuration window rescore window chaining
indicate source returned every hit include andor exclude set include simple wildcard elements includes optional list include optionally wildcarded pattern filter returned source excludes optional list exclude optionally wildcarded pattern filter returned source
sets threshold enforces prefilter roundtrip prefilter search shards based query rewriting number shards search request expands exceeds threshold filter roundtrip limit number shards significantly instance shard match documents based its rewrite method ie date filters mandatory match shard bounds query disjoint default 128
adds script based field load return field stored recommended use non analyzed numeric fields name name represent value return hit script script use
string representation search type execute defaults searchtypedefault one dfsquerythenfetchdfsquerythenfetch dfsqueryandfetchdfsqueryandfetch querythenfetchquerythenfetch queryandfetchqueryandfetch
optional document count upon collecting search query early terminate
query profiled defaults false
sets request use request cache not assuming for example now used never cached default not set null default index level setting request cache enabled not
constructs new search source builder search query orgelasticsearchindexqueryquerybuilders
sets indices search executed on
clears rescorers builder sets first one use multiple rescore windows use addrescorerorgelasticsearchsearchrescorerescorerbuilder int rescorer rescorer configuration chaining
stats groups request aggregated under
orgelasticsearchsearchsearchhit returned explanation hit ranking
set enable scrolling search request
applies sorting controls scores tracked well defaults false
adds aggregation search operation
clears rescorers builder chaining
sets filter executed query executed affect search hits not aggregations filter always executed last filtering mechanism
adds docvalue based field load return field stored recommended use non analyzed numeric fields name field get docvalue
sets number shard results reduced coordinating node value used protection mechanism reduce memory overhead per search request potential number shards request large
returns new arraysearchphaseresults instance might return instance reduces search responses incrementally
builds array potential null elements docs load
creates new queryphaseresultconsumer controller controller instance reduce query response objects expectedresultsize expected number query results corresponds number shards queried buffersize size reduce buffer buffer size smaller number expected results buffer used incrementally reduce aggregation results shards responded
enriches search hits completion suggestion hits sorteddocs using fetchresultsarr merges suggestions aggregations profile results expects sorteddocs top search docs across shards optionally followed top suggest docs named completion suggestion ordered suggestion name
reduces given query results consumes aggregations profile results queryresults list nonnull query shard results bufferedaggs list precollected buffered aggregations list nonnull aggregations consumed nonnull query results bufferedtopdocs list precollected buffered top docs list nonnull top docs consumed nonnull query results numreducephases number nonfinal reduce phases applied query results querysearchresultconsumeaggs querysearchresultconsumeprofileresult
constructor settings node settings reducecontextfunction function builds context reduce internalaggregation
returns score doc array top n search docs across shards followed top suggest docs named completion suggestion across shards one named completion suggestion specified request suggest docs named suggestion ordered suggestion name note order sorted score docs depends shard index result array merge process needs disambiguate result oder obtain stable results shard index index result result array must same ignorefrom whether ignore sort hits shard result enabled scroll search retrieves hits length size query phase results search phase results obtain sort docs bufferedtopdocs preconsumed buffered top docs topdocsstats top docs stats fill offset search results top docs size number hits return merged top docs
performs intermediate reduce phase aggregations instance reduce phase never prune information relevant final reduce step final reduce see reduceaggslist list reducecontext
forcefully counts operation executes provided runnable expected operations executed
sets result given array index runs countdown
escalates failure via searchphasecontextonshardfailureint searchshardtarget exception runs countdown
actual failure message null failure
actual search response null failure
releases shard targets used docsidstoload
search shard target failure occurred on
builds long took execute search
method collects nodes remote clusters asynchronously scroll ids references remote cluster otherwise action listener invoked immediately function based given discovery nodes
method called search phase failed ensure relevant search contexts resources released method also notify listener sends back failure user exception exception explaining causing phase failure
main entry point search method starts search execution initial phase
builds long took execute search
add search request execute note order important search response returned order search requests ignoreindices set search request indicesoptions multi search request used if set
add search request execute note order important search response returned order search requests
specifies type requested indices ignore deal wildcard indices expressions example indices dont exist invoke method invoking addsearchrequestbuilder
sets many search requests specified multi search requests allowed ran concurrently
set enable scrolling search request
parse search scroll request request body provided rest layer values already set also found parsing overridden
returns true iff search request inner hits needs field collapsing
releases search context given context id node given connection connected to orgelasticsearchsearchqueryquerysearchresultgetrequestid orgelasticsearchsearchfetchfetchsearchresultgetrequestid
add search request execute note order important search response returned order search requests
add search request execute note order important search response returned order search requests
sets many search requests specified multi search requests allowed ran concurrently
constructs search type based internal id
string representation search type execute defaults searchtypedefault one dfsquerythenfetchdfsquerythenfetch dfsqueryandfetchdfsqueryandfetch querythenfetchquerythenfetch queryandfetchqueryandfetch
returns connection given node provided cluster cluster alias null node resolved local cluster clusteralias cluster alias node resolve node node resolve connection given node belonging cluster provided alias
used transportsearchaction send expand queries field collapsing
minimal set dont include search hits aggregations suggest etc make test simpler
shardtotalfailures section makes impossible directly compare xcontent failures parsed searchresponse wrapped extra elasticsearchexception client side this special test case compare top level fields equality subsections xcontent equivalence independently
instantiates new search time provider absolute start time real clock time used resolving index expressions include dates relative start time start search operation according relative clock total time search operation took measured provided relative clock relative start time absolutestartmillis absolute start time milliseconds since epoch relativestartnanos relative start time nanoseconds relativecurrentnanosprovider provides current relative time
clears caches given shard id shard still allocated node
return shard provided id throw exception doesnt exist
return shard provided id null shard
creates new queryshardcontext context types set yet types required set via queryshardcontextsettypesstring passing null indexreader return valid context however wont able make indexreaderspecific optimizations rewriting containing range queries
read stream
construct index module index specified index settings index module contains extension points plugins via orgelasticsearchpluginspluginsserviceonindexmoduleindexmodule indexsettings index settings analysisregistry analysis registry enginefactory engine factory indexstorefactories available store types
registers given similarity given name function takes parameters settings similarity version elasticsearch index created scriptservice scriptbased similarities name name similarityprovider similarity similarityprovider register
forces certain query cache use instead default one set query caching disabled indexqueriescacheenabled given provider used note set indexquerycacheenabledsetting
adds searchoperationlistener index listeners added maintained entire index lifecycle node index closed deleted listeners go scope note index might created node multiple times instance last shard index relocated another node internal representation destroyed includes registered listeners node holds least one shard index modules reloaded listeners registered again listeners cant unregistered stay alive entire time index allocated node
adds indexeventlistener index listeners added maintained entire index lifecycle node index closed deleted listeners go scope note index might created node multiple times instance last shard index relocated another node internal representation destroyed includes registered listeners node holds least one shard index modules reloaded listeners registered again listeners cant unregistered stay alive entire time index allocated node
creates new mapper service administrative work like mapping updates should not used document parsing result exception
sets orgelasticsearchindexindexmoduleindexsearcherwrapperfactory called indexservice fully constructed note method called per index multiple wrappers supported
adds setting its consumer index
adds setting its consumer validator index
adds indexingoperationlistener index listeners added maintained entire index lifecycle node index closed deleted listeners go scope note index might created node multiple times instance last shard index relocated another node internal representation destroyed includes registered listeners node holds least one shard index modules reloaded listeners registered again listeners cant unregistered stay alive entire time index allocated node
builds sort order settings index returns null index sort
tests explicit request makes blockuntilrefresh return doesnt check blockuntilrefresh doesnt return explicit refresh interval 1 dont kind control refresh happen own
updates settings index metadata notifies registered settings consumers new settings iff least one setting changed true iff setting updated otherwise false
creates new indexsettings instance given node settings merged settings metadata index level settings overwrite node settings indexmetadata index metadata settings object associated nodesettings nodes settings index allocated on
constructs new index component index name settings
construct custom message
expert directly set maximum number merge threads simultaneous merges allowed
sets random aliases provided createindexrequest
returns settings instance include random values orgelasticsearchclustermetadataindexmetadatasettingnumberofshards orgelasticsearchclustermetadataindexmetadatasettingnumberofreplicas
adds random mapping fields provided xcontentbuilder
returns random createindexrequest randomizes index name aliases mappings settings associated index
executes registered async actions notifies listener its done value passed listener always null list registered actions cleared method returns
inorder true spans clause must order clauses must nonoverlapping defaults true
read stream
add span clause current list clauses
constructs new spangapquerybuilder term query fieldname name field width width gap introduced
initialclause initial span query clause slop controls maximum number intervening unmatched positions permitted
read stream
explicitly set analyzer use defaults use explicit mapping config field or set default search analyzer
read stream
sets type text query
sets whether format based failures ignored
tiebreaker bestmatch disjunction queries orqueries tie breaker capability allows documents match one query clause in case one field scored better documents match best fields without confusing better case two distinct matches multiple fields a tiebreaker value 10 interpreted signal score queries mostmatch queries matching query clauses considered scoring type
adds field run multi match against
constructs new text query
sets whether transpositions supported fuzzy queries default metric used fuzzy queries determine match dameraulevenshtein distance formula supports transpositions setting transposition false switch classic levenshtein distance set dameraulevenshtein distance metric used
tiebreaker bestmatch disjunction queries orqueries tie breaker capability allows documents match one query clause in case one field scored better documents match best fields without confusing better case two distinct matches multiple fields a tiebreaker value 10 interpreted signal score queries mostmatch queries matching query clauses considered scoring type
sets fuzziness used evaluated fuzzy query type defaults auto
sets operator use using boolean query defaults or
set cutoff value 01 or absolute number 1 representing maximum threshold terms document frequency considered low frequency term
add several fields run query specific boost
set phrase slop evaluated phrase query type
set cutoff value 01 or absolute number 1 representing maximum threshold terms document frequency considered low frequency term
using fuzzy prefix type query number term expansions use defaults unbounded recommended set reasonable value faster execution
sets type text query
adds field run multi match specific boost
use tiebreaker 10f disable dismax query select appropriate type
sets whether query builder ignore unmapped fields and run matchnodocsquery place query throw exception field unmapped
specify whether ignore validation errors bounding boxes set coerce set false otherwise calling method effect
create new bounding box query fieldname name index field containing geo coordinates operate on
parses bounding box returns bottom top left right coordinates
sets type executing geo bounding box either memory indexed defaults memory
read stream
adds top left point top top latitude left left longitude bottom bottom latitude right right longitude
bwc parse type type name
adds points single geohash geohash geohash computing bounding box
termquery random field name value optional random boost queryname
visible testing purposes
sets minimum match parameter using special syntax for example supporting percentage boolquerybuilderminimumshouldmatchint
adds clause should matched returned documents boolean query must clauses one should clauses must match document booleanquery match null value allowed minimumshouldmatchint
adds query must not appear matching documents null value allowed
adds query must appear matching documents contribute scoring null value allowed
specifies minimum number optional should boolean clauses must satisfied default optional clauses necessary match unless required clauses method used specified number clauses required use method totally independent specifying specific clauses required or prohibited number compared number matching optional clauses minimumshouldmatch number optional clauses must match
adds query must appear matching documents contribute scoring null value allowed
read stream
boolean query contains negative must not clauses booleanquery enhanced matchalldocsquery order act pure exclude default true
resolves combined ored value given list regular expression flags given flags must follow following syntax flagname flagname flagname one following intersection complement empty anystring interval none all example intersectioncomplementempty flags string representing list regular expression flags combined ored value flags
dismaxquerybuilder random inner queries
constructor provided use unit tests queryshardcontext may available
read stream
whether fail return result query run field supported binarynumeric fields
whether include input documents defaults false
read stream
sets maximum word length words ignored defaults unbounded 0
number terms must match generated query expressed common syntax minimum match defaults 30 orgelasticsearchcommonlucenesearchqueriescalculateminshouldmatchint string
sets field names used generating more like this query fields field names used generating more like this query liketexts text use generating more like this query likeitems documents use generating more like this query
analyzer used analyze text defaults analyzer associated field
sets documents terms selected from
sets maximum number query terms included generated query defaults 25
sets frequency words ignored occur least many docs defaults 5
sets analyzers use given field
sets text terms selected from
sets minimum word length words ignored defaults 0
convert termvectorsrequest fetching terms document
read stream
constructor given item document request index index document located type type document id id
converts array string ids item ids ids convert new items array construct items array externally use constructor setter
set set stopwords word set considered uninteresting ignored even analyzer allows stopwords might want tell morelikethis code ignore them purposes document similarity seems reasonable assume a stop word never interesting
parses returns given item
frequency terms ignored source doc default frequency 2
constructor artificial document request present index index index used parsing doc type type used parsing doc doc document specification
sets boost factor use boosting terms defaults 0 deactivated
set maximum frequency words may still appear words appear many docs ignored defaults unbounded
sets minimum number low frequent query terms need match order produce hit
sets cutoff document frequency high low frequent terms value 01 or absolute number 1 representing maximum threshold terms document frequency considered low frequency term defaults value defaultcutofffreq
sets minimum number high frequent query terms need match order produce hit low frequent terms
constructs new common terms query
read stream
sets operator use terms high document frequency greater equal cutofffrequencyfloat defaults and
sets operator use terms low document frequency less cutofffrequencyfloat defaults and
explicitly set analyzer use defaults use explicit mapping config field or set default search analyzer
create new multi term query random type r random seed random multitermquerybuilder
create new query random type r random seed random querybuilder
read stream
fuzziness allowed crossfields phrase phraseprefix throw error
amount number clauses returned array random spantermquerybuilder field name
filter based docmapping type types going away prefer filtering field
filter filter indexed shapes intersection query shape name shape field name shape shape use filter
filter filter indexed shapes contained shape name shape field name shape shape use filter
filter filter indexed shapes intersecting shapes name shape field name shape shape use filter
helper method used add error messages existing queryvalidationexception passing null initial exception new exception created validationerrors error messages add initial exception validationexception initial exception null case new exception created queryvalidationexception added validation error message
helper method used add error messages existing queryvalidationexception passing null initial exception new exception created queryid query caused error validationerror error message add initial exception validationexception initial exception null case new exception created queryvalidationexception added validation error message
specifies whether wildcards analyzed defaults false
specifies whether query parsing lenient defaults false
specifies minimumshouldmatch apply resulting query boolean query
construct new simple query query string
specify enabled features simplequerystring defaults none specified
set suffix append field names phrase matching
sets whether transpositions supported fuzzy queries default metric used fuzzy queries determine match dameraulevenshtein distance formula supports transpositions setting transposition false switch classic levenshtein distance set dameraulevenshtein distance metric used
specify analyzer use query
read stream
add several fields run query specific boost
specify default operator query defaults or operator specified
add field run query specific boost
setting deprecated set fieldstring instead
testing serialisation only
add field run query against
specifying timezone together unmapped field throw exception
explicitly set analyzer use defaults use explicit mapping config field or set default search analyzer
read stream
sets slop factor phrase queries
sets query use case query terms available eg analysis removed them defaults zerotermsquerynone set zerotermsqueryall instead
optional field name suffix automatically try add field searched using quoted text
setting ignored
set edit distance fuzzy queries default auto
one field used query string combined queries using dis max control tie breaker it
setting deprecated set defaultfieldstring instead
set true enable escaping query string
protects toodifficult regular expression queries
read stream
optional analyzer used analyze query string phrase searches note field search quote analyzer defined it used automatically defaults smart search analyzer
setting ignored query parser splits operator only
case date field adjust fromto fields using timezone
adds field run query string against field associated default boost abstractquerybuilderdefaultboost use fieldstring float set specific boost field
add several fields run query specific boost
set true enable position increments result query defaults true set result phrase multiphrase queries aware position increments useful eg stopfilter increases position increment token follows omitted token
optional analyzer used analyze query string note field search analyzer defined it used automatically defaults smart search analyzer
sets default slop phrases zero exact phrase matches required default value zero
default field run prefix field specified relevant explicitly adding fields query string run against
use querystringquerybuildertiebreaker instead
sets whether transpositions supported fuzzy queries default metric used fuzzy queries determine match dameraulevenshtein distance formula supports transpositions setting transposition false switch classic levenshtein distance set dameraulevenshtein distance metric used
use querystringquerybuildertiebreaker instead
sets query string parser lenient parsing field values defaults index setting set defaults false
setting ignored
set true enable analysis wildcard prefix queries
sets boolean operator query parser used parse query string default mode operatoror terms without modifiers considered optional example capital hungary equal capital hungary operatorand mode terms considered conjunction mentioned query parsed capital hungary
setting ignored query parser splits operator only
set minimum prefix length fuzzy queries default 1
leading wildcards allowed not defaults true
adds field run query string specific boost
constructs new fieldmaskingspanquerybuilder given inner spanquerybuilder given field querybuilder inner spanquerybuilder fieldname field name
read stream
rewrites query builder primitive form default method return builder itself builder change identity reference must returned otherwise builder rewritten infinitely
bwc serialization parentchild innerhitbuilder used send hasparent haschild inner hits nodes pre 55
gets stored fields load return use innerhitbuildergetstoredfieldscontext instead
sets stored fields load return none specified source document returned use innerhitbuildersetstoredfieldnameslist instead
read stream
bwc serialization collapsing innerhitbuilder used send collapsing inner hits nodes pre 55
bwc serialization nested innerhitbuilder used send nested inner hits nodes pre 55
sets stored fields load return none specified source document returned
adds field load docvalue return
sets stored fields load docvalue return
rewrites given rewriteable fetches pending async tasks round rewriting again
rewrites given rewriteable primitive form rewriteables instance fetch resources remote hosts simplify optimize heavy lifting rewriteandfetchrewriteable queryrewritecontext actionlistener queryrewritecontext method rewrites rewriteable doesnt change anymore original original rewriteable rewrite context rewrite context use assertnoasynctasks true rewrite fail pending async tasks context rewrite see queryrewritecontextexecuteasyncactionsactionlistener detals ioexception ioexception occurs
rewrites element list doesnt change returns new list iff least one element list changed its rewrite otherwise given list instance returned unchanged
read stream
explicitly set analyzer use defaults use explicit mapping config field or set default search analyzer
number term expansions use
sets slop factor phrase queries
return script service allow compiling scripts
gets search analyzer given field default none present field todo remove moving defaults mappers
method fails freezecontext called context used seal methods methods call final ensure setting request cacheable freezing behaviour class cannot bypassed important trust class says request cached
gets search quote analyzer given field default none present field todo remove moving defaults mappers
returns narrowed explicit types or set types
read stream
creates query builder given query provided bytes array
creates query builder given query provided string
creates query builder given query provided bytesreference
sets regexp maxdeterminizedstates
constructs new regex query fieldname name field value regular expression
read stream
overridden ensure test run least one type present mappings geo queries execute field explicitly mapped
query returns spans little contained spans big big clause must enclose little match little little clause must contained within big match
read stream
pre amount tokens include span cant overlap exclude span values smaller 0 ignored 0 used instead
construct span query matching spans include overlap spans exclude include span query whose matches filtered exclude span query whose matches must overlap
dist amount tokens within include span cant overlap exclude span equivalent setting pre post parameter
read stream
post amount tokens include span cant overlap exclude span
dont want shuffle doc field internally testfromxcontent even though documents would functionally same bytesreference representation isnt thats compare check equality original shuffled builder
could go overboard use pregenerated indexed random document given item wed prefer simply return id content document every field
test unknown query names clauses throw error
test two queries object throws error
read stream
quote analyzer overwrite forced analyzer quoted parts query
validates maxdeterminizedstates parsed lowers allowed number determinized states
validates maxdeterminizedstates parsed lowers allowed number determinized states
test exception missing end match parameter parser
query matches documents containing terms specified prefix fieldname name field value prefix query
read stream
test filter accept array queries throws parsingexception
test multiple filter elements causes parsingexception
test missing filter element causes parsingexception
constantscorequerybuilder random boost 01f 20f
test deserialization previous released versions
throw illegalargumentexception instead npe
nestedquerybuilder random values place
failure change and value never match anything
test exceptions three types broken json missing include exclude dist prepost specified
test correct parsing dist parameter create builder prepost set value
read stream
add span clause current list clauses
read stream
big big clause must enclose little match little little clause must contained within big match
read stream
test serialize deserialize object serialization leads identical bytes representation necessary ensure use serialized bytesreference builder part cachekey shardsearchlocalrequest via searchsourcebuildercollapseorgelasticsearchsearchcollapsecollapsebuilder
implements wildcard search query supported wildcards matches character sequence including empty one matches single character note query slow needs iterate many terms order prevent extremely slow wildcardqueries wildcard term start one wildcards fieldname field name value wildcard query string
read stream
returns validation method corresponding given coerce ignoremalformed values
read stream
constructs new base term query case value assigned string internally convert bytesref termquerybuilder spantermquerybuilder string values parsed bytesref want internal representation query equal regardless whether created xcontent via java api fieldname name field value value term
score nonmaximum disjunct document multiplied weight added final score nonzero value small order 01 says 10 occurrences word lowerscored field also higher scored field good unique word lower scored field ie one higher scored field
read stream
add subquery disjunction
helper method checks object passed bytesref charbuffer converts utf8 string obj input object input object utf8 string input type bytesref charbuffer
helper method checks object passed string charbuffer converts bytesref obj input object input object bytesref representation input type string
adds boost queryname parsing abstractobjectparser passed in query builders except matchallquerybuilder matchnonequerybuilder support fields use method
parses query excluding query element wraps
returns boost query
sets boost query documents matching query in addition normal weightings score multiplied boost provided
helper method convert collection querybuilder instances lucene query instances querybuilder return null calling querybuildertoqueryqueryshardcontext method added resulting collection
returns query name query
sets query name query
sets whether query builder ignore unmapped fields and run matchnodocsquery place query throw exception field unmapped
sets validation method use geo coordinates
read stream
following fail fast never silently set map containing fields weights null refuse accept null instead
sets center point query lat latitude center lon longitude center
read stream
sets distance center query
sets center point query
sets whether query builder ignore unmapped fields and run matchnodocsquery place query throw exception field unmapped
construct new geodistancequerybuilder fieldname name indexed geo field operate distance computation on
sets center point query point center query
type geo distance calculation method use
read stream
convertlist iterable
constructor used internally serialization value termslookup variants
convert internal list values back userfriendly list integers kept asis since terms query make difference integers longs bytesrefs converted back strings
filter field based several terms matching them fieldname field name values terms
filter field based several terms matching them fieldname field name values terms
convert list way optimizes storage case elements either integers strings bytesref charbuffers useful help garbage collections usecases involve sending large terms queries elasticsearch list contain integers strings list returned string charbuffers replaced bytesrefs
sets fuzzyrewrite parameter controlling fuzzy query get rewritten
sets fuzziness used evaluated fuzzy query type defaults auto
sets whether format based failures ignored use lenient instead
read stream
sets operator use using boolean query defaults or
sets optional minimumshouldmatch value apply query
explicitly set analyzer use defaults use explicit mapping config field or set default search analyzer
sets whether format based failures ignored
sets whether transpositions supported fuzzy queries default metric used fuzzy queries determine match dameraulevenshtein distance formula supports transpositions setting transposition false switch classic levenshtein distance set dameraulevenshtein distance metric used
constructs new match query
sets query use case query terms available eg analysis removed them defaults matchqueryzerotermsquerynone set matchqueryzerotermsqueryall instead
sets length length common nonfuzzy prefix fuzzy match queries prefixlength nonnegative length prefix illegalargumentexception case prefix negative
using fuzzy prefix type query number term expansions use
set cutoff value 01 or absolute number 1 representing maximum threshold terms document frequency considered low frequency term
store query filters query query namedfilters immutable map containing named filters good callers use emptymap unmodifiablemap copy source make sure immutable
read stream
query wraps another query simply returns constant score equal query boost every document query filterbuilder query wrap constant score query
read stream
sets whether query builder ignore unmapped paths and run matchnodocsquery place query throw exception path unmapped
query matches spans queries defined matchbuilder whose end position less equal end matchbuilder inner spanquerybuilder end maximum end position match needs positive illegalargumentexception negative end positions
read stream
replace generic test superclass wrapper query expects find query field nested query throw exception anything else
case date field adjust fromto fields using timezone
read stream
case format field parse fromto fields using time format
part range query null indicates unbounded case lower bound assigned string internally convert bytesref rangequerybuilder field later parsed bytesref need internal representation query equal regardless whether created xcontent via java api
part range query null indicates unbounded
lower bound included not defaults true
query matches documents within range terms fieldname field name
upper bound included not defaults true
test checks throw unsupportedoperationexception query wrapped spanmultitermquerybuilder generate lucene multitermquery currently case rangequerybuilder target field mapped date
read stream
constructs new fuzzy query fieldname name field value value term
create new boostingquerybuilder positivequery positive query boosting query negativequery negative query boosting query
set negative boost factor
read stream
adds ids query
read stream
sets optional routing indexed shape used query indexedshaperouting indexed shape routing
defines spatial strategy used building geo shape query set strategy used one associated geo shape field mappings strategy spatial strategy use building geo shape query
sets relation query shape indexed shape relation relation shapes
sets whether query builder ignore unmapped fields and run matchnodocsquery place query throw exception field unmapped
fetches shape given id given type index getrequest getrequest containing index type id path name path field shape document shape located
sets name index indexed shape found indexedshapeindex name index indexed shape
sets path field indexed shape document shape indexedshapepath path field shape defined
read stream
creates random function score query using constructor params caller responsible randomizing fields set outside constructor
create random decay function setting constructor parameters randomly caller responsible randomizing fields
set weight applied function combining
called data node converts scorefunctionbuilder corresponding lucene function object
parses bodies kind fieldname1 origin somevalue scale somevalue multivaluemode min
read stream
read stream
convenience constructor converts parameters json parse data nodes
read stream
creates functionscore query executes provided filters functions documents match query query query defines documents functionscore query executed on filterfunctionbuilders filters functions
score mode defines results individual score functions aggregated functionscorequeryscoremode
read stream
boost mode defines combined result score functions influence final score together sub query score combinefunction
sets maximum boost applied function score
seed variant taking long value seedint
read stream
sets seed based random number generated using seed guaranteed generate random number specific doc seed seed
set field used random number generation parameter compulsory seedint seed set ignored otherwise note documents value field get score
seed variant taking string value seedint
value used instead field value documents dont field defined
read stream
sets new current nested level pushes old current nested level stack returns level
method deletes every file store contained given source meta data legacy checksum file delete pulls latest metadata snapshot store compares given snapshot snapshots inconsistent illegal state exception thrown reason reason cleanup operation logged deleted file sourcemetadata metadata used cleanup files metadata kept around ioexception ioexception occurs illegalstateexception latest snapshot store differs given one cleanup
increments refcount store instance refcounts used determine store closed safely ie soon references sure always call corresponding decref finally clause otherwise store may never closed note close simply calls decref means store really closed decref called outstanding references note close safely called multiple times alreadyclosedexception iff reference counter incremented decref tryincref
computes strong hash value small files note method used files 1mb
returns true iff given location contains index index successfully opened includes reading segment infos possible corruption markers
tries increment refcount store instance method return true iff refcount incremented successfully otherwise false refcounts used determine store closed safely ie soon references sure always call corresponding decref finally clause otherwise store may never closed note close simply calls decref means store really closed decref called outstanding references note close safely called multiple times decref incref
tries open index given location includes reading segment infos possible corruption markers index opened exception thrown
checks returns status existing index store infostream messages go see checkindexsetinfostreamprintstream
deletes corruption markers store
returns new metadatasnapshot given commit given commit null latest commit point used note method requires caller verify right access store concurrent file changes happening doubt probably want use one following readmetadatasnapshotpath shardid nodeenvironmentshardlocker logger read meta data locking indexshardsnapshotstoremetadata safely read existing shard indexshardacquirelastindexcommitboolean get indexcommit safe use freed commit index commit read snapshot null latest snapshot read directory lockdirectory true index writer lock obtained reading snapshot used started shard using store corruptindexexception lucene index corrupted caused checksum mismatch unexpected exception opening index reading segments file indexformattoooldexception lucene index old opened indexformattoonewexception lucene index new opened filenotfoundexception one files referenced commit present nosuchfileexception one files referenced commit present indexnotfoundexception commit point cant found store
repairs index using previous returned status checkindexprintstream
keeping existing unsafe commits opening engine problematic commits safe recovering time suddenly become safe future following issues happen unsafe commits kept oninit 1 replica use unsafe commit peerrecovery happens replica safe commit c1maxseqno1 unsafe commit c2maxseqno2 recovers primary c1maxseqno1 new documentseqno2 added without flushing global checkpoint advanced 2 replica recovers again use unsafe commit c2maxseqno2 gcp2 starting commit sequencedbased recovery even commit c2 contains stale operation documentwith seqno2 replicated replica 2 min translog gen recovery go backwards peerrecovery happens replica safe commit c1localcheckpoint1 recoverytransloggen1 unsafe commit c2localcheckpoint2 recoverytransloggen2 replica recovers primary keeps c2 last commit sets lasttransloggen 2 flushing new commit replica cause exception new last commit c3 recoverytransloggen1 recovery translog generation commit calculated based current local checkpoint local checkpoint c3 1 local checkpoint c2 2 3 commit without translog used recovery old index created multiplecommits introduced v62 may safe commit index snapshotted commit without translog unsafe commit policy consider snapshotted commit safe commit recovery even commit translog
marks store corrupted method writes corrupteduuid file containing given exception message store contains corrupteduuid file ismarkedcorrupted return true
reads metadatasnapshot given index locations returns empty snapshot cant read ioexception index try read corrupted
force bakes given translog generation recovery information lucene index used recovering snapshot peer file based recovery new empty translog created existing lucene index needs changed use it
loads maximum sequence number local checkpoint given lucene commit point latest provided commit commit point load seqno stats last commit store parameter null sequencenumberscommitinfo containing information last commit ioexception io exception occurred reading latest lucene commit point disk
returns segments info given commit latest commit given commit null ioexception index corrupted segments file present
decreases refcount store instance refcount drops 0 store closed incref
marks existing lucene index new history uuid used make sure existing shard recovery index using ops based recovery
checks lucene index contains history uuid marker not new one generated committed
renames given files key map value map successfully renamed files removed map inplace
returned indexoutput validates files checksum note checksums calculated default since version 480 method adds verification checksum given metadata add significant overhead
returns diff two snapshots used recovery given snapshot treated recovery target snapshot source returned diff hold list files are identical exist snapshots considered ie dont need recovered different exist snapshots identical missing files exist source target method groups file persegment files percommit files file treated identical files its group identical persegment level files segment treated identical iff all files segment checksum all files segment length the segments si files hashes byteidentical note using perfect hash function metadata transfers si file content its hash si file contains lot diagnostics including timestamp etc future might unique segment identifiers hardening method further percommit files handles similar commit composed segmentsn files well generational files like deletes xydel fieldinfo xyfnm files percommit level files commit treated identical iff all files belonging commit checksum all files belonging commit length the segments file segmentsn files hashes byteidentical note using perfect hash function metadata transfers segmentsn file content its hash note diff contain segmentsgen file file omitted recovery
returns last committed segments info store ioexception index corrupted segments file present
creates empty lucene index corresponding empty translog existing data deleted
returns segments file metadata snapshot represents null snapshot empty
read stream
return cumulative size files directory
read stream
returns true iff length checksums same otherwise false
tests retry mechanism indexing exception occurs indexing indexing request tried finally failing auto generated ids used must lead duplicate ids see httpsgithubcomelasticelasticsearchissues8788
tests corruption happens single shard replicas present make sure primary stays unassigned replicas healthy shards happens
test triggers corrupt index exception finalization size empty commit point transferred recovery dont know version segmentsn file segments take from simulates recoveries old indices even without checksums makes sure fail finalization also check primary ok without relevant checks test fails red cluster
tests corruption happens network layer primary get affected corruption happens way replica file disk stays uncorrupted
tests restoring corrupted shard fails get partial snapshot todo checksum verification snapshotting implemented test needs fixed split several parts also corrupt files actual snapshot check dont restore corrupted shard
prunes list index files latest del generation files contained
test verifies corrupt replica still get green even though listing store fails note need make sure replicas allocated data nodes replica wont sneaky allocated node doesnt corrupted replica
tests actually recover corruption primary given replica shards around
disables translog flushing specified index
enables translog flushing specified index
test acceptzvalue parameter correctly parses
test geoshapefieldtypesetstrategynamestring checks geoshapefieldtypepointsonly gets set side effect using spatialstrategyterm
parses value rounds according included flag
parses value rounds according included flag
indexoptions deprecated rejected 70
indexoptions deprecated rejected 70
rangequeryobject object boolean boolean shaperelation datetimezone datemathparser queryshardcontext without trouble relations datespecific options
termquery impl looks context determine index queried returns matchallquery matchnoquery value matches index useful aliases wildcards used aim restrict query specific indices
checks new field type valid
checks new field alias valid note method assumes new concrete fields already processed verify alias refers existing concrete field
returns list full names simple match regex like pattern full name index name
return new instance contains union instance field types provided mappers field already exists field type updated use new type given field mapper similarly alias already exists updated reference field type new mapper
returns field given field
return new context used within nested document
return new context provided path
returns array values field specified method parameter method returns empty array matching fields never returns null want actual numeric field instances back use getfields name name field string field values
try parse externalvalue clazz expected class external value null external value set value
return new context within multifields
return new context external value set
return new context provided document current document
return new context within copyto operation
add fields later fetched using getbykeyobject
removes redundant root includes objectmappernested trees avoid duplicate fields root mapper isincludeinroot true node included parent node either isincludeinroot true transitively included root chain nodes isincludeinparent returning true omb builder whose children check parentincluded true iff node child root node included root
find template returns null template could found name field name dynamictype field type give field template define one matchtype type field json document null unknown mapper builder null template field
returns best nested objectmapper instances scope specified nested docid
recursively update sub field types
nestedobjectmapperteststestmultiplelevelsincluderoot1 tests case transitive includeinparent redundant includeinroot happen chain nodes starts parent node directly connected root chain includeinparent ie includeinparent set false includeinroot set true
checks multiple levels nested includes node directly transitively included root includeinroot chain includeinparent lead duplicate fields root document
parses indexes inputs parsing acceptable format string interpreted field value input array element one object see below object input stringarray weight stringint contexts arrayobject indexing context mappings defined delegates contextmappingsaddfieldparsecontextdocument string string int map else adds inputs orgapachelucenesearchsuggestdocumentsuggestfield
postings format use fieldtype
completion prefix fuzzy query
maxinputlength maximum expected prefix length note prefixes longer truncated
acceptable inputs string interpreted field value input object input stringarray weight stringint contexts arrayobject
add context mapping field contextmappings see contextmappingsloadobject version
name completion field build
parses geopoint represented string ignores malformed geopoints needed
parses geopoint represented object array ignores malformed geopoints needed
build update parent contain given mapper intermediate fields
creates copy current field given field name boost
creates instances fields current field copied
creates mapping containing dynamically added fields returns null dynamic mappings
creates update intermediate object mappers stack parents newmapper
removes mappers exist stack part path current nameparts returns next unprocessed index nameparts
adds mappers end stack exist updates within mappers returns next unprocessed index nameparts
adds mapper update last mapper merge true new mapper merged child mappers last parent otherwise new update
factory method range queries relation relation nulls interpreted like intersects
checks conflicts field type other strict true properties must equal otherwise properties must never change index checked
checks type type other adds conflict different
extract term query created termquery recursively removing boostquery wrappers illegalargumentexception wrapped query termquery
sets null value initializes string version
build constantscoring query matches values default implementation uses constantscorequery around booleanquery whose occurshould clauses generated termquery
illegalargumentexception fielddata supported type illegalargumentexception needed order return http error 400 error occurs request see orgelasticsearchexceptionshelperstatus
returns true field aggregatable
return whether values given indexreader within range outside range cross range default implementation returns relationintersects always fine return way check whether values actually within bounds
return docvalueformat used display parse values returned fielddata api default implementation returns docvalueformatraw
constructs json path offset offset result offset number path elements included pathastextstring
validates overall structure mapping addition including whether duplicate fields present provided fields already defined different data type type mapping type use error messages objectmappers newly added object mappers fieldmappers newly added field mappers fieldaliasmappers newly added field alias mappers fullpathobjectmappers object mappers indexed full path fieldtypes field field alias mappers collected lookup structure
verifies field reference eg value copyto target field alias corresponds valid part mapping fieldmappers newly added field mappers fieldaliasmappers newly added field alias mappers fullpathobjectmappers object mappers indexed full path fieldtypes field field alias mappers collected lookup structure
documentmappermergemapping
get root mapper given class
recursively update sub field types
returns fields match given pattern pattern prefixed type fields returned type prefix
returns document mapper created including mapping update type dynamically created
return documentmapper given type using special value defaultmapping type get documentmapper default mapping
return term uniquely identifies document null type allowed
update mapping merging metadata different received stored entries
parses mappings formatted json map
given type eg long string return anonymous field mapper used search operations
encodes specified number type long variablelength byte format byte format preserves ordering means returned byte array used comparing is first bit stores sign 4 subsequent bits encode number bytes used represent long value addition first one
returns true object number decimal part
converts object double checking known types first
returns 1 0 1 value lower than equal to greater 0
test time zones correctly parsed datefieldmapper known bug joda 294 reported httpsgithubcomjodaorgjodatimeissues373
parse text field attributes addition parsefield common attributes parse analysis termvectors related settings
parse common field attributes docvalues store
possible search token count
possible get token count search response
possible search token count
count position increments token stream package private testing analyzer analyzer create token stream fieldname field name pass analyzer fieldvalue field value pass analyzer enablepositionincrements count position increments number position increments token stream ioexception tokenstream throws
position increments counted only positions counted were looking make sure we dont count tokens without increment count normal tokens one increment count funny tokens one increment one dont count final token increments rare token streams
position increments counted were looking make sure we dont count tokens without increment count normal tokens one increment count funny tokens one increment count final token increments rare token streams
merge changes coming mergewith place
parse using provided parsecontext return mapping update dynamic mappings modified mappings null mappings modified
splits provided mapper descendants object field field alias mappers
test checks multitype validation done kind validation mapping thats added see httpsgithubcomelasticelasticsearchissues29313
test coerce parameter correctly parses
test acceptzvalue parameter correctly parses
test ignoremalformed parameter correctly parses
test orientation parameter correctly parses
converts object double checking known types first
base64 ids decode prepend escape char cases could mixed numeric utf8 encoding majority cases 253256 encoded id exactly binary form
encode id storage index encoding optimized numeric base64 ids encoded much denser way utf8 would do decodeid
numeric ids fold two consecutive chars single byte use 0x0f end marker
decode indexed id back original form encodeid
returns parent objectmapper instance specified object mapper null isnt any
returns whether parent objects fields nested too
build mapping update provided sub mapping update
builds new map refresh transition called beforerefresh
removes uid pending deletes map
adds uidversion pending adds map iff map needs safe access
try prune tombstones whose timestamp less maxtimestamptoprune seqno maxseqnotoprune
called index closed
exposes translog associated given engine testing purpose
generate new sequence number return it works internalengines
global stats segments
fail engine due error engine also closed underlying store marked corrupted iff failure caused index corruption
read stream
flush engine committing segments disk truncating translog close it
returns whether leaf reader comes merge versus flush addindexes
activate throttling switches lock real lock
deactivate throttling switches lock alwaysacquirable nooplock
returns 0 case accountable null otherwise returns rambytesused
specified throwable contains fatal error throwable graph fatal error thrown callers ensure catch statements would catch error stack fatal error go uncaught handled uncaught exception handler install bootstrap specified throwable indeed contain fatal error specified message attempt logged throwing fatal error specified throwable contain fatal error method noop maybemessage message maybe log maybefatal throwable maybe contains fatal error
check whether engine failed
creates new orgelasticsearchindexengineengineconfig
returns circuit breaker service engine null none used
commits specified index writer writer index writer commit translog translog syncid sync flush id null committing synced flush ioexception io exception occurs committing specfied writer
reads current stored history id iw commit data
gets commit data indexwriter map
resolves current version document returning null found
returns many bytes currently moving indexing buffer segments disk
returns true indexing operation may already processed engine note ok rarely return true even case however false return value must always correct
closes engine without acquiring write lock called write lock hold disaster condition ie engine failed
reads current stored translog id last commit data
asserts doc index operation really doesnt exist
returns translog location version value null optional might tracked time
captures recent commit point lastcommit recent safe commit point safecommit index files capturing commit point wont released commit reference closed acquiringsafecommit captures recent safe commit point true otherwise captures recent commit point
find highest index position safe index commit whose max sequence number greater global checkpoint index commits different translog uuid filtered dont belong engine
checks deletion policy release index commits latest global checkpoint
releases index commit acquired acquireindexcommitboolean true snapshotting commit clean up
find safe commit point list existing commits based supplied global checkpoint max sequence number safe commit point global checkpoint index created v62 havent retained safe commit yet method return oldest commit commits list existing commit points globalcheckpoint persisted global checkpoint translog see translogreadglobalcheckpointpath string safe commit oldest commit safe commit found
end recovery counter decrementing stores ref ongoing recovery counter number ongoing recoveries remaining
set string representing segment part merge value representing group segments represent merge
return tuple representing sequence id given get operation first value tuple sequence number second primary term
tests close method returns engine actually guaranteed cleaned resources closed
java docs
simulates upsert update api
sequence number generator generate sequence number stall set true wait barrier referenced latch returning local checkpoint advance because stall false value expectedlocalcheckpoint set accordingly latchreference latch thread purpose stalling barrier signal thread generated new sequence number stall whether thread stall expectedlocalcheckpoint expected local checkpoint generating new sequence number sequence number generator
random test throws random exception ensures references counted released resources closed
tests age trumps size recovery trumps both
create new translog checkpoint offset current offset translog numops current number operations translog generation current translog generation minseqno current minimum sequence number operations translog maxseqno current maximum sequence number operations translog globalcheckpoint lastknown global checkpoint mintransloggeneration minimum generation referenced translog moment trimmedaboveseqno operations seq trimmedaboveseqno ignored read corresponding translog file sequencenumbersunassignedseqno used disable trimming
releases generation acquired acquiretransloggenlong
sets translog generation last index commit
acquires basis generation new snapshot translog generation above including returned generation deleted returned releasable closed
returns minimum translog generation still required system generation returned value may safely deleted readers current translog readers writer current translog writer
reads operation given position given buffer
create snapshot translog file channel
ensures given location synced written underlying storage returns true iff call caused actual sync operation otherwise false
return stats
returns minimum translog generation retained translog given location ensures transloguuid translog matches provided transloguuid location location translog minimum translog generation ioexception io exception occurred reading checkpoint translogcorruptedexception translog corrupted mismatched given uuid
returns minimum file generation referenced translog
creates new translog instance method create new transaction log unless given transloggeneration null generation null method destructive delete files translog path given generation null method tries open given translog generation generation treated last generation referenced already committed data means operations yet committed translog file referenced generation translog creation fail generation cant opened config configuration translog transloguuid translog uuid open null new translog deletionpolicy instance translogdeletionpolicy controls translog file safely deleted globalcheckpointsupplier supplier global checkpoint primarytermsupplier supplier latest value primary term owning index shard latest term value examined stored header whenever new generation rolled its guaranteed outside new generation rolled term increased guarantee allows us validate reject operation whose term higher primary term stored translog header
trims translog terms files belowterm seq aboveseqno effectively moves max visible seq checkpointtrimmedaboveseqno therefore translogsnapshot skips operations
acquires lock translog files preventing trimmed
returns number operations transaction files contain operations seq given number
writes type translog operation given stream
snapshots current transaction log allowing safely iterate snapshot snapshots fixed time updated future operations
tests whether translog generation rolled new generation test based size current generation compared configured generation threshold size true current generation rolled new generation
trims unreferenced translog generations asking translogdeletionpolicy minimum required generation
returns number operations translog files least given generation
reads type operation given stream operation must written operationwriteoperationstreamoutput operation
creates new translog specified generation filegeneration translog generation writer new translog ioexception creating translog failed
deletes files associated reader packageprivate able simulate node failures point
returns true fsync required ensure durability translogs operations its metadata
plain location sort plain location returned last write locations returned next write
returns size bytes translog files least given generation
recover translog files found disk
reads list operations written writeoperationsstreamoutput list
returns age oldest entry translog files seconds
closes translog current translog writer experienced tragic exception note case thread closes translog must already holding read lock translog acquire write lock course closing translog ex exception occurs closing translog suppressed provided exception
syncs translog
roll current translog generation new generation commit translog ioexception io exception occurred file operations
reads returns operation given location generation references still available otherwise method return null
ensures locations given stream synced written underlying storage method allows internal optimization minimize amount fsync operations multiple locations must synced returns true iff call caused actual sync operation otherwise false
adds operation transaction log operation operation add location operation translog ioexception adding operation translog resulted io exception
writes operations given iterable given output stream including size array use readoperationsstreaminput string read back
reads sequence numbers global checkpoint translog checkpoint ensures transloguuid translog matches provided transloguuid location location translog global checkpoint ioexception io exception occurred reading checkpoint translogcorruptedexception translog corrupted mismatched given uuid
returns generation current transaction log
extracts translog generation file name illegalargumentexception path doesnt match expected pattern
returns true iff given generation current generation translog
last synced checkpoint translog last synced checkpoint
gets minimum generation could contain sequence number specified sequence number current generation generation could sequence number seqno sequence number minimum generation sequence number
returns current generation translog corresponds latest uncommitted translog generation
creates new writer filegeneration generation write written initialmintransloggen minimum translog generation written first checkpoint needed solve initialization problem constructing empty translog readers current call getminfilegeneration would work initialglobalcheckpoint global checkpoint written first checkpoint
sets tragic exception tragic exception already set adds passed exception suppressed exception ex tragic exception set
reads single opertation given location
read size op ie number bytes including op size written given position
reads operation given position returns it buffer length equal number bytes reads
given file channel opens translogreader taking care checking validating file header channel translog file channel path path translog checkpoint translog checkpoint transloguuid tranlog uuid new translogreader ioexception file operations resulted io exception
reads operation given position given buffer
create translog writer specified translog file channel checkpoint translog checkpoint channel translog file channel open translog reader path path translog header header translog file
closes current reader creates new one new checkoint file channel
disables translog flushing specified index
creates new point time snapshot given snapshots snapshots always iterated inorder
marks sequence number returns true seen before
lists existing commits given index path read minimum translog generation used recoverfromtranslog
corrupts random translog file translogntlog given translog directory translog file corrupted
make sure its ok close translog snapshot multiple times
tests closing views translog fine reopen translog
tests concurrent readers writes maintain view snapshot semantics
test adds operations translog might randomly throw ioexception thing test verifies can hit exception open recover translog successfully retrieve successfully synced operations transaction log
randomly truncate bytes translog files
tests situation node crashes translog gen committed lucene translog chance clean files
tests situation node crashes translog gen committed lucene translog chance clean files
writes header latest format file channel
read translog header given path file channel
creates new translog header given uuid primary term transloguuid uuid used prevent accidental recovery transaction log belongs different engine primaryterm primary term owning index shard creating eg rolling translog file operations terms translog file enforced term
syncs translog least given offset unless already synced true call caused actual sync operation
returns true buffered operations flushed fsynced disk latest global checkpoint yet fsynced
closes writer transfers underlying file channel new immutable translogreader new translogreader ioexception file operations resulted io exception
add given bytes translog specified sequence number returns location bytes written to data bytes write seqno sequence number associated operation location bytes written ioexception writing translog resulted io exception
write checkpoint file given location given generation
show warning deleting files asking confirmation batchmode false
return set files given directory
write translog containing given translog uuid given location returns number bytes written
promotes specific replica new primary
test request failures failures seqno generation added noop translog
test ensures consistency primary replica nonappendonly eg index request id delete operation document processed original appendonly request replicas appendonly document exposed deleted primary added replica replicas treat late appendonly request regular index request
test ensures consistency primary replica late order delivery replica index operation primary followed delete operation delete operation delivered first processed replica index delayed interval even longer gc deletes cycle makes sure replica still remembers delete operation correctly ignores stale index operation
test document failures failures seqno generation added noop operation translog primary replica shards
metric implementing precisionk threshold ratings equal value considered relevant ignoreunlabeled controls unlabeled documents search hits treated set true unlabeled documents ignored neither count true false positives set false treated false positives k controls window size search results metric takes account
compute precisionatn based provided relevant document ids precision n searchresult list
joins hits rated documents using joint indexid document key
filter ratedsearchhits rating
maxrelevance maximal relevance judgment evaluation dataset unknowndocrating rating documents user hasnt supplied explicit rating for null case document skipped k search window size request use
test modifying order indexdocid make sure doesnt matter parsing xcontent
create rated request template ids parameters id unique name rated request rateddocs list document ratings params template parameters templateid templare id
assuming result ranking rank relevance probr r p p probr r 1 3 0875 1 0875 2 na na 0125 na 3 0 0 0125 0 4 1 003125 0125 000390625 err sum last column
assuming result ranking rank relevance probr r p p probr r 1 3 0875 1 0875 2 2 01875 0125 00234375 3 0 0 0078125 0 4 1 003125 0078125 000244140625 err sum last column
test metric returns 00 search results
normalize set true dcg normalized ndcg see httpsenwikipediaorgwikidiscountedcumulativegain unknowndocrating rating documents user hasnt supplied explicit rating k search window size request use
test relevant rating threshold set something larger 1 eg set 2 expect dics 02 relevant doc 3 4 relevant
sets indices search executed on
indices request
test cases retrieves six documents indexed above first part checks prec10 calculation unlabeled docs treated unrelevant average prec metric across two search use cases first one labels 4 6 documents relevant second one one relevant document
test running bad query eg one target non existing field produce error response
test assumes using ratings discountedcumulativegainteststestdcgat see details test case expected values calculated
test multiple indices work setting indices options possible works expected
test relevant rating threshold set something larger 1 eg set 2 expect dics 02 relevant first relevant doc third ranking position rr 13
create searchhits testing starting dociid from docid to search hits index also need provided
assuming docs ranked following order rank relevance 2relevance 1 log2rank 1 2relevance 1 log2rank 1 1 3 70 10 70 70 2 2 30 15849625007211563 18927892607143721 3 3 70 20 35 4 0 00 2321928094887362 00 5 1 10 2584962500721156 038685280723454163 6 2 30 2807354922057604 10686215613240666 dcg 1384826362927298 sum last column
tests metric documents search result dont rating provided user rank relevance 2relevance 1 log2rank 1 2relevance 1 log2rank 1 1 3 70 10 70 2 2 30 15849625007211563 18927892607143721 3 3 70 20 35 4 na na na na 5 1 10 2584962500721156 038685280723454163 6 na na na na dcg 12779642067948913 sum last column
tests normalization works expected rated documents search hits restrict dcg calculated fourth position rank relevance 2relevance 1 log2rank 1 2relevance 1 log2rank 1 1 3 70 10 70 2 2 30 15849625007211563 18927892607143721 3 3 70 20 35 4 na na na na 5 1 10 2584962500721156 038685280723454163 6 na na na na dcg 12392789260714371 sum last column position 4
test metric returns 00 search results
compute reciprocalrank based provided relevant document ids
metric implementing mean reciprocal rank httpsenwikipediaorgwikimeanreciprocalrank relevantratingthreshold rating value document needs regarded relevant defaults 1 k search window size request use
run search action call onresponse response comes in retrying action fails exception caused rejected execution action consumes listener starts action listener consumes rigged retry failure onresponse consumes response action
cant send parsesearchrequest rest content doesnt support remove content valid addition supports content first temporary hack get better searchrequest full objectparser support delegate stuff
read stream
takes action created bulkbyscrolltask runs regard whether request sliced not request sliced ie number slices 1 worker action given runnable started local node request sliced ie number slices 1 subrequest created slice sent slices set auto class resolve specific number based characteristics source indices request auto slices may end sliced unsliced
slice search request times separate search requests slicing field note slices shallow copies request dont change them
make sure search failures get pushed back user failures whole process lose information far along process got important see failures
figures many slices request handling use
figures many slice statuses expect response
build task status values used testing negative values
blocks named executor getting thread running task blocked cyclicbarrier fills queue noop task requests use queue get esrejectedexecutionexceptions
lower queue sizes small enough bulk searches time retried
fetch status task type action fails arent exactly one type task running
executes cancellation test
read stream
set matcher size failures list depth matching hand type signatures required match actual failures list dont work
set matches number batches defaults matching integer usually dont care many batches job takes
set matcher workers portion response
record failure slice respond listener request finished
get combined statuses slice subtasks merged given list statuses
record response slice respond listener request finished
returns object tracks state sliced subtasks throws illegalstateexception task set leader task
read stream
sets task leader task slices sliced subtasks
returns object manages sending search requests throws illegalstateexception task set worker task
build status task given snapshot information running slices supported task set leader slice subtasks
sets task worker task performs search requests requestspersecond many search requests per second task make sliceid sliced task slice number task corresponds to null sliced
constructor merging many statuses slicestatuses statuses sub requests task sliced into reasoncancelled reason this task cancelled note entry slicestatuses cancelled independently task task cancelled workers should cancelled
start terminating request finished noncatastrophically refreshing modified indices proceeding finishhimexception list list boolean
send bulk request handling retries
build bifunction apply requestwrapper public testings
copies metadata hit request
start action firing initial search request
finish request failure non null request failed catastrophically exception indexingfailures indexing failures accumulated request searchfailures search failures accumulated request timedout subrequests timed out
start next scroll request lastbatchsize number requests sent last batch used calculate throttling values applied scroll returns
finish request failure non null request failed catastrophically exception
used accept ignore search hit ignored search hits excluded bulk request also fail invalid search hits like document source its required
process scroll response lastbatchstarttime time last batch started used calculate throttling delay lastbatchsize size last batch used calculate throttling delay response scroll response process
processes bulk responses accounting failures
prepare bulk request called generic thread pool preflight checks done one searchresponse delay slept uses generic thread pool reindex rare enough need thread pool thread may blocked user script
build response reindex actions
assert two task statuses equal serialization version version expected serialized
build remoteinfo defaulting values dont care test values dont hurt anything
maximum number processed documents defaults 1 meaning process documents
set initial delay rejection retrying request
version conflicts cause aborts defaults false
append short description search request stringbuilder used make tostring
set throttle request subrequests per second floatpositiveinfinity means set throttle default throttling done batches start next scroll requests way increase scrolls timeout make sure contains time might wait
timeout wait shards available bulk request
number slices task divided into defaults 1 meaning task isnt sliced subtasks
sets abortonversionconflict based restfriendly names
constructor actual use searchrequest search request execute get documents process setdefaults request set defaults search request usually set true leave false support request slicing
set total number retries attempted rejections way ask unlimited retries
set scroll timeout searchrequest
call refresh indexes weve written request ends
setup clone request information needed process slice it
task store result finished
sets number shard copies must active proceeding write see replicationrequestwaitforactiveshardsactiveshardcount details
set throttle apply matching requests subrequests per second floatpositiveinfinity means set throttle throttling done batches start next scroll requests way increase scrolls timeout make sure contains time might wait
mimicks bulk rejections retried fail anyway run retries
execute bulk retry test case total number failures random number retries attempted set testrequestgetmaxretries controled failwithrejection parameter
mimicks search timeouts
mimicks bulk indexing failures
tests cancel request throttling delay cant use canceltaskcaseconsumer needs send request uncanceled cancel specific time
mimicks bulk rejections retried eventually succeed
tests scroll response batch batch launched properly
mimicks script failures general wrongness implementers
mimicks threadpool rejecting execution task
mimicks shard search failures usually caused data node serving scroll request going down
simulate scroll response setting scroll id firing onscrollresponse method
default retry time matches say javadoc request
generates random scrollid registers test finishes check cleared subsequent calls reregister new random scroll id checked instead
initial delay rejection retrying bulk request default maxretries total backoff retrying rejections one minute per bulk request entire bulk request successful retry counter resets
number slices task divided into defaults 1 meaning task isnt sliced subtasks
number shard copies must active proceeding write see replicationrequestwaitforactiveshardsactiveshardcount details
timeout wait shards available bulk request
call refresh indexes weve written request ends
version conflicts cause action abort
set query filter source convenience method easy chaining
maximum number documents attempt
set throttle request subrequests per second floatpositiveinfinity means set throttle default throttling done batches start next scroll requests way increase scrolls timeout make sure contains time might wait
task store result finished
set source indices
total number retries attempted rejections way ask unlimited retries
set throttle apply matching requests subrequests per second floatpositiveinfinity means set throttle throttling done batches start next scroll requests way increase scrolls timeout make sure contains time might wait
test rethrottling runningslices number slices still running simulator simulate response subrequest rethrottle child requests verifier verify resulting response
overrides parents implementation much updatereindex oriented also copies things like timestampttl dont care deletion
schedule preparebulkrequestrunnable run delay throttling plugs reindexing request rescheduled again
many nanoseconds batch lastbatchsize taken perfectly throttled package private testing
apply newrequestspersecond new rate limit tasks search requests
scale back remaining delay fit new delay
perform reindex create optype create semantics
perform reindex internal versioning overwrite semantics
perform reindex external versioning refresh semantics
build restclient used reindexing remote clusters remoteinfo connection information remote cluster taskid id current task added thread name easier tracking threadcollector list collect threads created client
override simple copy behavior allow fine grained control
build characterrunautomaton represents reindexfromremote whitelist make sure doesnt whitelist world
throws actionrequestvalidationexception request tries index back index index points two indexes cannot done request validation cluster state isnt available then package private testing
furiously rethrottles delayed request make sure never run twice
script modify documents processed
setup reindexing remote cluster
set destination index
set destination index type
script modify documents processed
yank string array map emulates xcontents permissive string string array conversions
build remoteinfo defaulting values dont care test values dont hurt anything
sets common options abstractbulkbyscrollrequest requests
requestspersecond request float request null otherwise
test parsing ttl timestamp routing parent
creates hit source doesnt make remote request instead returns data files also requests always returned synchronously rather asynchronously
test parsing ttl routing parent timestamp isnt available
versions elasticsearch 210 dont support sortdoc instead need use searchtypescan scan doesnt return documents first iteration reindex doesnt like that jump start strait next iteration
wrap responseexception exception thatll preserve status code possible send back user might constant status code case use 500 instead also extract make sure include response body message user figure why remote elasticsearch service threw error back us
returns docvaluebits representing documents pointvalues value
return string representation provided values typically used scripts map execution mode terms aggs note slow
return numericdoublevalues doesnt contain value
returns docvaluebits representing documents docvalues value
returns docvaluebits representing documents values value
return string representation provided values typically used scripts map execution mode terms aggs note slow
returns docvaluebits representing documents doublevalues value
given sortednumericdoublevalues return sortednumericdocvalues instance translate double values sortable long bits using orgapacheluceneutilnumericutilsdoubletosortablelongdouble
given sortednumericdocvalues return sortednumericdoublevalues instance translate long values doubles using orgapacheluceneutilnumericutilssortablelongtodoublelong
wrap provided sortednumericdocvalues instance cast values doubles
returns docvaluebits representing documents docvalues value
return numericdocvalues instance value every document returns value values value current document missing otherwise
returns singlevalued view sortedbinarydocvalues previously wrapped singletonbinarydocvalues null
returns singlevalued view multigeopointvalues previously wrapped singletongeopointvalues null
returns singlevalued view sortednumericdoublevalues previously wrapped docvaluessingletonnumericdocvalues null
return string representation provided values typically used scripts map execution mode terms aggs note slow
wrap provided sortednumericdoublevalues instance cast values longs
return string representation provided values typically used scripts map execution mode terms aggs note slow
return numericdoublevalues instance value every document returns value values value current document missing otherwise
set docvaluecount ensure values array store least many entries
sets orgelasticsearchindexfielddataindexfielddatacachelistener passed indexfielddata creation capture oncache onremoval events setting listener method override previously set listeners illegalstateexception listener set
set size ensure values array store least many entries
set size ensure values array store least many entries
log deprecation log servers permissions permissions script calling method need prevent errors rolling log file
refresh backing array package private called longs loads dates
fetch first field value 0 millis epoch in
set size ensure values array store least many entries
constructor testing deprecation callback
set size ensure values array store least many entries
set size ensure values array store least many entries
make sure values array store least count entries
sort values stored offsets 0 count values
return missing object value according reduced type comparator
get docidset matches inner documents
set docvaluecount ensure values array store least many entries
returns numeric docvalues view raw double bits
returns numeric docvalues view raw float bits
proxy original next call estimates overhead loading next term
flush flushbuffer breaker incrementing total bytes resetting buffer
always accept term
helper checks fieldinfo throws exception definitely latlondocvaluesfield
number bytes term based length ordinal overhead
adjust circuit breaker terms loaded getting actual used either parameter if estimation worked entire set termsenum wrapped ramaccountingtermsenum termsenum terms loaded actualused actual field data memory usage
estimate loading entire term set field data 0 unavailable
determine whether blocktreetermsreaderfieldreader used estimating field data adding estimate circuit breaker can otherwise wrapping terms ramaccountingtermsenum estimated perterm basis terms terms estimated possibly wrapped termsenum terms
return true impl going smaller singlepackedordinals least 20
builds bitset documents bit one ordinals associated it every document ordinal associated method returns null
builds ordinals instance builders current state
allocate new slice return id
associates given document id current ordinal
closes builder release resources
method iterates terms given termsenum associates terms ordinal terms documents caller must exhaust returned bytesrefiterator returns values first returned value associated ordinal 1 etc
encode position given level offset idea encode level using unary coding lower bits offset higher bits
returns shared longsref instance given doc id holding ordinals associated it
build global ordinals provided indexreader
source document as string
returns bytes reference also un compress source needed
source document exists
source document as map
returns getresult based specified orgelasticsearchindexengineenginegetresult argument method basically loads specified fields associated document enginegetresult method load fields lucene index transaction log therefore isnt realtime note call must release engine searcher associated enginegetresult
decides needs done based request input always returns valid nonnull fetchsourcecontext
recovers shard its local file system store method required preknowledge shard exist disk ie previously allocated shard brand new allocation without preexisting index files transaction logs indexshard index shard instance recovery shard true shard recovered successfully false recovery ignored due concurrent modification clusters state changed due async updates store
restores shard snapshotrecoverysource associated shard routing table
recovers state shard store
recovers index given repository method restores previously created index snapshot existing initializing shard indexshard index shard instance recovery snapshot repository repository holding physical files shard recovered true shard recovered successfully false recovery ignored due concurrent modification clusters state changed due async updates
recovers state shard store
tries extract shard id reader possible possible return null
tries extract shard id reader possible possible return null
creates new empty shard starts it primary controls whether shard primary replica
creates new initializing shard shard put proper path current node id shard assigned to routing shard routing use indexmetadata indexmetadata shard including mapping listeners optional set listeners add shard
promotes replica primary incrementing its term starting needed
creates new initializing shard shard unique data path primary indicates whether primary shard ready recover empty store replica ready recover another shard
creates new initializing shard routing shard routing use shardpath path use shard data indexmetadata indexmetadata shard including mapping store optional custom store use null default file based store created indexsearcherwrapper optional wrapper used searchers globalcheckpointsyncer callback syncing global checkpoints indexeventlistener index event listener listeners optional set listeners add shard
creates new initializing shard shard put proper path supplied node id shardid shard id use primary indicates whether primary shard ready recover empty store replica ready recover another shard
creates new initializing shard shard unique data path shardid shard id use primary indicates whether primary shard ready recover empty store replica ready recover another shard listeners optional set listeners add shard
creates new initializing shard shard put proper path supplied node id shardid shard id use primary indicates whether primary shard ready recover empty store replica ready recover another shard
takes existing shard closes starts new initialing shard location listeners new listerns use newly created shard
creates new initializing shard shard put proper path current node id shard assigned to routing shard routing use indexmetadata indexmetadata shard including mapping indexsearcherwrapper optional wrapper used searchers globalcheckpointsyncer callback syncing global checkpoints listeners optional set listeners add shard
takes existing shard closes starts new initialing shard location routing shard routing use newly created shard listeners new listerns use newly created shard
recovers replica given primary
recover shard snapshot using given repository
recovers replica given primary
recovers replica give primary allow user supply custom recovery target typical usage custom recovery target assert things various stages recovery note method keeps shard indexshardstatepostrecovery doesnt start it replica recovery target shard primary recovery source shard targetsupplier supplies instance recoverytarget markasrecovering set false replica marked recovering
snapshot shard using given repository
creates new initializing shard shard unique data path shardrouting shardrouting use shard listeners optional set listeners add shard
get local knowledge global checkpoints insync allocation ids map allocation id local knowledge global checkpoint allocation id
notifies service update local checkpoint shard provided allocation id see replicationtrackerupdatelocalcheckpointstring long details allocationid allocation id shard update local checkpoint checkpoint local checkpoint shard
add listener refreshes location location listen listener refresh called true registering listener ran slots forced refresh called false otherwise
updates global checkpoint replica shard updated primary globalcheckpoint global checkpoint reason reason global checkpoint updated
marks shard recovering based recovery state fails exception recovering allowed set
schedules flush translog generation roll needed schedule one concurrently operation executed asynchronously flush thread pool
tests whether translog generation rolled new generation test based size current generation compared configured generation threshold size true current generation rolled new generation
creates new indexcommit snapshot currently running engine resources referenced commit wont freed commit snapshot closed flushfirst true index first flushed disk low level lucene commit executed
executes given flush request engine request flush request commit id
updates known allocation ids local checkpoints corresponding allocations primary relocation source primarycontext sequence number context
fails shard marks shard store corrupted e caused index corruption
checks removes translog files longer need retained see orgelasticsearchindextranslogtranslogdeletionpolicy details
upgrades shard current version lucene returns minimum segment version
gets storemetadatasnapshot current directory method safe call lifecycle index shard without worry current state engine concurrent flushes orgapacheluceneindexindexnotfoundexception index found current directory orgapacheluceneindexcorruptindexexception lucene index corrupted caused checksum mismatch unexpected exception opening index reading segments file orgapacheluceneindexindexformattoooldexception lucene index old opened orgapacheluceneindexindexformattoonewexception lucene index new opened javaiofilenotfoundexception one files referenced commit present javaniofilenosuchfileexception one files referenced commit present
acquire replica operation permit whenever shard ready indexing see acquireprimaryoperationpermitactionlistener string object given primary term lower one shardrouting actionlisteneronfailureexception method provided listener invoked illegalstateexception permit acquisition delayed listener invoked executor specified name opprimaryterm operation primary term globalcheckpoint global checkpoint associated request onpermitacquired listener permit acquisition executorondelay name executor invoke listener permit acquisition delayed debuginfo extra information useful tracing unreleased permit assertions enabled tracing capture supplied objects objecttostring value otherwise object isnt used
writes indexing changes disk opens new searcher reflecting changes throw alreadyclosedexception
returns latest cluster routing entry received shard
update local knowledge global checkpoint specified allocation id allocationid allocation id update global checkpoint globalcheckpoint global checkpoint
marks shard provided allocation id insync primary shard see replicationtrackermarkallocationidasinsyncstring long additional details allocationid allocation id shard mark insync localcheckpoint current local checkpoint shard
registers given listener invokes shard active pending refresh translog location refreshed pending refresh location registered listener invoked immediately listener listener invoke pending refresh location visible listener called true listener registered wait refresh
completes relocation operations blocked current operations drained changing state relocated provided runnable executed operations successfully blocked consumer runnable executed operations blocked illegalindexshardstateexception shard relocating due concurrent cancellation interruptedexception blocking operations interrupted
returns current recoverystate shard recovering recovering returns null recovery yet started shard recovered created via api
rolls tranlog generation cleans unneeded
called indexingmemorycontroller check whether inactivetimens passed since last indexing operation notify listeners inactive eg syncd flush happen
opens engine top existing lucene engine translog operations translog replayed bring lucene date
perform last stages recovery translog operations done note still call postrecoverystring
syncs global checkpoint replicas global checkpoint least one replica behind global checkpoint primary
changes state current shard newstate new shard state reason reason state change previous shard state
called recovery restarted network error delay
add global checkpoint listener global checkpoint current global checkpoint known listener listener fire immediately calling thread currentglobalcheckpoint current global checkpoint known listener listener listener
called shard using much heap move buffered indexeddeleted documents disk
returns whether shard relocated primary ie charge anymore replicating changes see replicationtracker
opens engine top existing lucene engine translog translog kept operations wont replayed
called recovery process shard opened engine target shard ensures right data structures set locally track local checkpoint information shard shard added replication group allocationid allocation id shard recovery initiated
called starting copy index files
returns many bytes currently moving heap disk
check recoveries pending insync true least one shard pending insync otherwise false
syncs given location underlying storage unless already synced method might return immediately without actually fsyncing location sync listener called yet unless already another thread fsyncing transaction log caller thread hijacked run fsync pending fsync operations method allows indexing threads continue indexing without blocking fsync calls ensure one thread blocking sync others continue indexing note synclistener throws exception its processed exception logged users make sure listener handles exception cases internally
tests whether engine flushed periodically test based current size translog compared configured flush threshold size true engine flushed
snapshots recent safe index commit currently running engine index files referenced index commit wont freed commitsnapshot closed
returns number heap bytes used indexing buffer shard 0 shard closed
build plain refreshlisteners shard
returns current replication group shard replication group
acquire primary operation permit whenever shard ready indexing permit directly available provided actionlistener called calling thread relocation handoff permit acquisition delayed provided actionlistener called using provided executor debuginfo extra information useful tracing unreleased permit assertions enabled tracing capture supplied objects objecttostring value otherwise object isnt used
returns true shard ignore recovery attempt made since already doingdone it
executes scheduled refresh necessary true iff engine got refreshed otherwise false
upgrade true running force merge upgrade segments written older versions apply next call indexwriterforcemerge handled mergepolicy well cascading calls made indexwriter
returns operation acquires permit synchronizes following manner waits barrier acquiring permit counts operationexecutinglatch acquires permit waits operationlatch releasing permit counts operationcompletelatch releasing permit barrier barrier wait operationexecutinglatch latch countdown acquiring permit operationlatch latch wait releasing permit operationcompletelatch latch countdown releasing permit controllable runnable acquires permit
tests threadcontext restored operation executed delayed due block
test one snapshot store various lifecycle stages
simulates scenario happens async fetching snapshot metadata gatewayservice checking index concurrently always possible without exception
test makes sure people use shard routing entry take operation permit check whether shard already promoted primary
simulating scenario happens async shard fetching gatewayserivce finishing recovery concurrently clean files always possible without exception yet bug indexshard acquired index writer lock called store its locking metadata reads
index specified shard introducing sequence number gaps indexshard shard operations number operations offset starting sequence number pair maximum sequence number whether gap introduced ioexception io exception occurs indexing shard
check accounting breaker correctly matches segments api memory usage
attempts add listener time refresh occurs background thread force refresh fast adding listeners catch situation refresh happens right listener added listener misses refresh catch next one listener wasnt able properly catch next one would fail
uses bunch threads index wait refresh nonrealtime get documents validate visible waiting regardless crazy sequence events causes refresh listener fire
number pending listeners
returns true pending listeners
fire listeners nothing list listeners null
add listener refreshes calling immediately location already visible runs listener slots forces refresh calls listener immediately well location location listen listener refresh called true registering listener ran slots forced refresh called false otherwise call listener true register listener call later false
invoke notify registered listeners updated global checkpoint globalcheckpoint updated global checkpoint
construct global checkpoint listeners collection shardid shard id global checkpoint updates listened executor executor listener notifications logger shardlevel logger
add global checkpoint listener global checkpoint current global checkpoint known listener listener asynchronously notified executor used construct collection global checkpoint listeners shard closed listener asynchronously notified executor used construct collection global checkpoint listeners listener notified one event either global checkpoint updated shard closed listener must reregister one events receive subsequent events currentglobalcheckpoint current global checkpoint known listener listener listener
parse string representation shardid back object lose index uuid information here since use tostring rest responses best reconstruct object client side
returns stats including type specific stats types null0 length nothing returned them set types provided returned all types
method tries delete leftover shards index name reused uuid different allow new shard allocated
returns datapath root shard root parent getdatapath without index name shard id
method walks nodes shard paths find data state path given shard multiple directories valid shard state exist one highest version used note method resolves custom data locations shard
wait inflight operations finish executes onblocked guarantee new operations started queues operations occurring meanwhile runs onblocked executed timeout maximum time wait inflight operations block timeunit time unit timeout argument onblocked action run block acquired type checked exception thrown onblocked interruptedexception calling thread interrupted timeoutexception timed waiting inflight operations finish indexshardclosedexception operation permit closed
construct operation permits specified shards shardid shard threadpool thread pool used execute delayed operations
acquires permit whenever permit acquisition blocked permit directly available provided actionlistener called calling thread calls blockoperationslong timeunit checkedrunnable permit acquisition delayed actionlisteneronresponseobject method called using provided executor operations longer blocked note executor used actionlisteneronfailureexception calls run directly calling thread case delays generic thread callers thus make sure actionlisteneronfailureexception method provided contains lightweight operations onacquired actionlistener invoked acquisition successful failed executorondelay executor use possibly delayed actionlisteneronresponseobject call forceexecution whether runnable force execution case gets rejected debuginfo extra information useful tracing unreleased permit assertions enabled tracing capture supplied objects objecttostring value otherwise object isnt used
obtain active operation count zero permits held even outstanding operations flight active operation count zero permits ar eheld
immediately delays operations another thread waits inflight operations finish executes onblocked guarantee new operations started delayed operations run onblocked executed operations delayed blocking forked another thread returns caller failure occurs blocking operations executing onblocked onfailure handler invoked timeout maximum time wait inflight operations block timeunit time unit timeout argument onblocked action run block acquired onfailure action run failure occurs blocking operations type checked exception thrown onblocked not thrown calling thread
list describing permit wasnt released yet description consist debuginfo supplied permit acquired plus stack traces captured permit request
returns average size bytes documents stats
configured indexsearcherwrapper instances indexsearcher provided engine searcher gets wrapped new enginesearcher instances returned otherwise provided enginesearcher returned invoked time enginesearcher requested operation for example search
increments number processed files
returns copy current indexshardsnapshotstatus method intended used coherent state indexshardsnapshotstatus needed indexshardsnapshotstatuscopy
returns information physical file given name physicalname original file name information file
returns part name file stored multiple parts part part number part name
returns size in bytes given part size in bytes given part
constructs new instance file info name file name stored blob store metadata files meta data partsize size single chunk
checks file store file fileinfo file store true file store file checksum length
serializes file info json file file info builder xcontent builder params parameters
parses shard snapshot metadata parser parser shard snapshot metadata
constructs new shard snapshot metadata snapshot metadata snapshot snapshot id indexversion index version indexfiles list files shard starttime snapshot start time time snapshot running time incrementalfilecount incremental files snapshotted incrementalsize incremental size snapshot
parses json represents file info parser parser file info
serializes shard snapshot metadata info json builder xcontent builder params parameters
returns base file name part name blobname part name base file name
writes index file shard following format files name 3 physicalname 0si length 310 checksum 1tpsg3p writtenby 510 metahash p9dsfxnmdwnlb name 2 physicalname segments2 length 150 checksum 11qjpz6 writtenby 510 metahash p9dsfwhzzwdtz name 1 physicalname 0cfe length 363 checksum er9r9g writtenby 510 name 0 physicalname 0cfs length 3354 checksum 491liz writtenby 510 name 4 physicalname segments3 length 150 checksum 134567 writtenby 510 metahash p9dsfwhzzwdtz snapshots snapshot1 files 0 1 2 3 snapshot2 files 0 1 2 4
return number tokens current document considered field
sole constructor
compute part score depend current document using initscript
parses given settings creates appropriate distribution settings settings parse normalization referred settings
parses given settings creates appropriate basicmodel settings settings parse basicmodel referred settings
parses given settings creates appropriate lambda settings settings parse normalization referred settings
parses given settings creates appropriate normalization settings settings parse normalization referred settings
parses given settings creates appropriate aftereffect settings settings parse aftereffect referred settings
convert list field names encoded optional boosts map associates field name boost fields list fields encoded optional boosts eg 035 converted map field names associated boosts
get fieldmapper associated field name null mapperservice mapper service find mapping field field name search
resolves provided pattern field name queryshardcontext return map expanded fields original boost context context query fieldorpattern field name pattern resolve weight weight field acceptalltypes whether field type added pattern expanded false allowedquerymappertypes accepted field types discarded query acceptmetadatafield whether metadata fields added pattern expanded fieldsuffix suffix name add expanded field names mapping exists name original name field kept adding suffix field name point valid field mapping
resolve field names patterns present provided map queryshardcontext returns new map containing expanded fields original boost context context query fieldsandweights map fields weights expand fieldsuffix suffix name add expanded field names mapping exists name original name field kept adding suffix field name point valid field mapping
resolves provided pattern field name queryshardcontext return map expanded fields original boost context context query fieldorpattern field name pattern resolve weight weight field acceptalltypes whether field type added pattern expanded false allowedquerymappertypes accepted field types discarded query acceptmetadatafield whether metadata fields added pattern expanded
expand phrasequery multiple fields share analyzer returns disjunctionmaxquery disjunction expanded field
creates new parser custom flags used enabledisable certain features
rethrow runtime exception unless lenient flag set returns matchnodocsquery
creates new parser custom flags used enabledisable certain features
analyze given string using analyzer constructing either prefixquery booleanquery made termquerys prefixquerys
grouptiebreaker tie breaker apply multiple fields used
rebuild phrase query slop value
defaults queryiable fields extracted mapping query terms context query shard context lenient set true cause format based failures like providing text numeric field ignored
returns true given query might match nested documents
returns true query given field might match parent documents documents nested different path
returns true query given field might match nested documents
returns true given query might match parent documents documents nested different path
checks graph analysis enabled field depending provided analyzer
creates new querybuilder using given analyzer
setup index mappings test index json builder index mappings ioexception error creating mapping json
test setup
returns stats including group specific stats groups null0 length nothing returned them set groups provided returned all groups
reads sequence number stats commit data maximum sequence number local checkpoint commitdata commit data sequence number stats
compute minimum given current minimum sequence number specified sequence number accounting fact current minimum sequence number could sequencenumbersnoopsperformed sequencenumbersunassignedseqno current minimum sequence number sequencenumbersnoopsperformed sequencenumbersunassignedseqno specified sequence number must sequencenumbersunassignedseqno minseqno current minimum sequence number seqno specified sequence number new minimum sequence number
compute maximum given current maximum sequence number specified sequence number accounting fact current maximum sequence number could sequencenumbersnoopsperformed sequencenumbersunassignedseqno current maximum sequence number sequencenumbersnoopsperformed sequencenumbersunassignedseqno specified sequence number must sequencenumbersunassignedseqno maxseqno current maximum sequence number seqno specified sequence number new maximum sequence number
called recovery process shard opened engine target shard ensures right data structures set locally track local checkpoint information shard shard added replication group allocationid allocation id shard recovery initiated
computes global checkpoint based given local checkpoints case entries preventing computation happen for example due blocking returns fallback value
returns global checkpoint shard global checkpoint
wait local checkpoint advance global checkpoint interruptedexception thread interrupted waiting
get local knowledge global checkpoints insync allocation ids map allocation id local knowledge global checkpoint allocation id
initiates relocation handoff returns corresponding primary context
notifies service update local checkpoint shard provided allocation id checkpoint lower currently known one noop allocation id tracked ignored allocationid allocation id shard update local checkpoint localcheckpoint local checkpoint shard
returns local checkpoint information tracked specific shard used tests
fails relocation handoff attempt
returns current replication group shard replication group
scans currently known local checkpoint updates global checkpoint accordingly
marks shard provided allocation id insync primary shard method block local checkpoint specified shard advances current global checkpoint allocationid allocation id shard mark insync localcheckpoint current local checkpoint shard
initialize global checkpoint service specified global checkpoint set last known global checkpoint sequencenumbersunassignedseqno shardid shard id allocationid allocation id indexsettings index settings globalcheckpoint last known global checkpoint shard sequencenumbersunassignedseqno
notifies tracker current allocation ids cluster state applyingclusterstateversion cluster state version applied updating allocation ids master insyncallocationids allocation ids currently insync shard copies routingtable shard routing table pre60allocationids allocation ids shards allocated pre60 nodes
marks relocation handoff attempt successful moves tracker replica mode
initializes global checkpoint tracker primary mode see primarymode called primary activation promotion
notify threads waiting monitor tracker threads waiting local checkpoint specific allocation id catch global checkpoint
updates global checkpoint replica shard updated primary globalcheckpoint global checkpoint reason reason global checkpoint updated
activates global checkpoint tracker primary mode see primarymode called primary relocation target primary relocation handoff primarycontext primary context used initialize state
whether shards blocking global checkpoint advancement used tests
class invariant hold every invocation public methods class java lacks implication logical operator many invariants written form a b read a implies b however
update local knowledge global checkpoint specified allocation id allocationid allocation id update global checkpoint globalcheckpoint global checkpoint
update global checkpoint replicationtrackermarkallocationidasinsyncstring long adding allocation id insync set removing pending local checkpoint update freed thread waiting local checkpoint advance could miss updating global checkpoint race waiting thread add allocation id insync set remove pending set local checkpoint updating thread executed global checkpoint update test fails without additional call replicationtrackerupdateglobalcheckpointonprimary removing allocation id pending set replicationtrackermarkallocationidasinsyncstring long even call added notifying waiters replicationtrackerupdatelocalcheckpointstring long interruptedexception main test thread interrupted waiting brokenbarrierexception barrier broken main test thread waiting
resets checkpoint specified value checkpoint local checkpoint reset tracker
moves checkpoint last consecutively processed sequence number method assumes sequence number following current checkpoint processed
return bit set provided sequence number possibly allocating new set needed seqno sequence number obtain bit set bit set corresponding provided sequence number
waits operations provided sequence number complete seqno sequence number checkpoint must advance method returns interruptedexception thread interrupted blocking condition
marks processing provided sequence number completed updates checkpoint possible seqno sequence number mark completed
initialize local checkpoint service maxseqno set last sequence number assigned sequencenumbersnoopsperformed localcheckpoint set last known local checkpoint sequencenumbersnoopsperformed maxseqno last sequence number assigned sequencenumbersnoopsperformed localcheckpoint last known local checkpoint sequencenumbersnoopsperformed
obtain position bit set corresponding provided sequence number bit set corresponding sequence number obtained via getbitsetforseqnolong seqno sequence number obtain position position bit set corresponding provided sequence number
constructs new analyzer component index name settings analyzer name indexsettings settings name index name analyzer name
returns injected name analyzer
returns registered charfilterfactory provider indexsettings registered charfilterfactory provider predefined name null charfilter registered charfilter global defined charfilter name indexsettings index settings charfilterfactory provider null
returns registered tokenizerfactory provider indexsettings registered tokenizerfactory provider predefined name null tokenizer registered tokenizer global defined tokenizer name indexsettings index settings tokenizerfactory provider null
returns settings groupname indexsettings default settings indexsettings index settings groupname tokenizertoken filterchar filter name settings
returns registered analyzer provider name null analyzer registered
creates indexlevel indexanalyzers registry using given index settings
returns registered tokenfilterfactory provider indexsettings registered tokenfilterfactory provider predefined name null tokenfilter registered tokenfilter global defined tokenfilter name indexsettings index settings tokenfilterfactory provider null
create preconfigured token filter may vary based lucene version
create preconfigured token filter may vary based elasticsearch version
create preconfigured token filter may vary all
create preconfigured token filter may vary all
null settings set settingsprefix return null illegalargumentexception reader instantiated
fetches list words specified settings file list either available key specified settingsprefix file specified settingsprefix path illegalargumentexception word list cannot found either key
create preconfigured token filter may vary based lucene version
create preconfigured token filter may vary based elasticsearch version
create preconfigured char filter may vary all
create preconfigured char filter may vary all provide access elasticsearch verison
create preconfigured tokenizer may vary based elasticsearch version name name tokenizer api create builds tokenizer multitermcomponent null tokenizer shouldnt used multiterm queries otherwise supplier tokenfilterfactory stands tokenizer multiterm queries
create preconfigured tokenizer may vary all name name tokenizer api create builds tokenizer multitermcomponent null tokenizer shouldnt used multiterm queries otherwise supplier tokenfilterfactory stands tokenizer multiterm queries
create preconfigured tokenizer may vary based lucene version name name tokenizer api create builds tokenizer multitermcomponent null tokenizer shouldnt used multiterm queries otherwise supplier tokenfilterfactory stands tokenizer multiterm queries
input source token stream collator collationkey generator
tests camelcase filter names snakecase filter names dont collide
constructor exists expose analyzers defined prebuiltanalyzers prebuiltanalyzerproviderfactory
returns number bytes required decode given char sequence encoded char sequence decoded offset initial offset length number characters number bytes required decode given char sequence
encodes input byte sequence output char sequence calling method ensure output array sufficient capacity calling getencodedlengthbyte int int inputarray byte sequence encoded inputoffset initial offset inputarray inputlength number bytes inputarray outputarray char sequence store encoded result outputoffset initial offset outputarray outputlength length output must getencodedlength
returns number chars required encode given bytes inputarray byte sequence encoded inputoffset initial offset inputarray inputlength number bytes inputarray number chars required encode number bytes
decodes input char sequence output byte sequence calling method ensure output array sufficient capacity calling getdecodedlengthchar int int inputarray char sequence decoded inputoffset initial offset inputarray inputlength number chars inputarray outputarray byte sequence store encoded result outputoffset initial offset outputarray outputlength length output must getdecodedlengthinputarray inputoffset inputlength
transcodes remaining parts string method operates sliding window looking 4 characters time i1 i i1 i2 prev previous character curr current character next next character anext next character transcoded array characters starting current position
retrieves nysiis code given string object str string encode using nysiis algorithm nysiis code string supplied
encodes object using nysiis algorithm method provided order satisfy requirements encoder interface throw encoderexception supplied object type string obj object encode object or string containing nysiis code corresponds given string encoderexception parameter supplied string illegalargumentexception character mapped
encodes string using nysiis algorithm str string object encode nysiis code corresponding string supplied illegalargumentexception character mapped
deletes index templates support wildcard notation template name passed method templates removed
deletes given indices tests cluster index name passed method indices removed
method executed test reset cluster initial state
wipes data test leave behind indices templates except exclude templates repositories
deletes repositories supports wildcard notation
removes templates except templates defined exclude
start indexing numofdocs number document index pausing set 1 limit
stop background threads
start indexing background using given number threads indexing paused numofdocs docs indexed index index name index type document type client client use numofdocs number document index pausing set 1 limit writercount number indexing threads use autostart set true start indexing soon threads created random random instance use
pausing indexing setting current document limit 0
sort versions backwards compatibility guarantees dont doesnt actually check whether versions released instead relies gradle already checked coreverifyversions long rules match rules gradle produce sensible results tuple containing versions backwards compatibility guarantees v1 versions without guranteees v2
returns random version minversion maxversion inclusive
returns random version available versions compatible given version
get released version versioncurrent
returns released version versioncurrent minor version less currents minor version
get released version version
returns first future compatible version
returns maximum version compatible given version
returns first future incompatible version
helper method return mapped random field
test adding additional object within object otherwise correct query always triggers kind parse exception specific objects cause exception hold arbitrary content declared overriding getobjectsholdingarbitrarycontent
call method check valid json string representing query test its generated json note time writing nov 2015 queries taken query dsl reference docs mirroring examples there heres queries generated take reference documentation example stick createparseablequeryjson method respective query test manually check querybuilder generates equals input json ignoring default options put manual checks assertqueryparsedfromjson method copy generated json including default options createparseablequeryjson roundtrip check json happy
checks result querybuildertoqueryqueryshardcontext given original querybuilder queryshardcontext verifies named queries boost properly handled delegates doassertlucenequeryabstractquerybuilder query searchcontext query specific checks
test wraps randomly generated query array follows queryname causes unexpected situations parser code may handled properly
generic test checks stringstostring method renders xcontent correctly
generic test creates new query test query checks equality asserts equality two queries
test ensures queries need rewritten dedicated tests queries must override method accordingly
helper method return random rewrite method
parses query provided bytes argument compares expected result provided argument querybuilder
traverses json tree valid query provided argument mutates one times adding one object within object encountered instance given following valid term query term field value foo following two mutations generated exception expected trying parse them term newfield field value foo term field newfield value foo every mutation added list results boolean flag indicating parsing exception expected mutation specific objects cause exception hold arbitrary content passed using arbitrarymarkers parameter
create random value either abstractquerytestcasebooleanfieldname abstractquerytestcaseintfieldname abstractquerytestcasedoublefieldname abstractquerytestcasestringfieldname abstractquerytestcasedatefieldname string value default
test serialization deserialization test query
test creates query querybuilder test delegates assertions made result implementing subclass
test unknown field trigger parsingexception find right position root query add marker queryname query builders support added bogus field trigger exception queries allow arbitrary field names level need override test
parses query provided string argument compares expected result provided argument querybuilder
serialize given query builder asserts equal
generic test creates new instance test instance checks equality asserts equality two queries
tests versionminimumcompatibilityversion versionutilsallreleasedversions agree list wire index compatible versions build gradle
set static default settings null prevent memory leak test framework also checks memory leaks computes size cause issues running security manager tries reflection protected sun packages
create new search context
create new index singleton node provided index settings
ensures cluster green state via cluster health api method also wait relocations useful ensure action cluster finished shards currently relocating allocated started timeout time value set orgelasticsearchactionadminclusterhealthclusterhealthrequest
helper method create list plugins without specifying generic types
create new index singleton node provided index settings
compare two maps
compare two values field name field compared
compare two lists
failure message
return instance unmapped field
random docvalueformat used aggregations compute numbers
return instance unmapped field
stops random node cluster applies given filter non non nodes applies filter
restarts node calls callback restart
restarts nodes rolling restart fashion ie restarts node time
returns transport client
builds new node given settings settings settings use defaultminmasternodes minmasternodes value use minmasternodes auto managed
returns random node applies given predicate predicate filter nodes based nodes settings nodes filtered method return null
returns node client given node
stops current nodes master node
builds new node default settings defaultminmasternodes minmasternodes value use minmasternodes auto managed
rebuilds new node object using current node settings starts
ensures least n data nodes present cluster nodes n present method stop running nodes
ensures n running less nodes n running method start additional nodes
returns set nodes least one shard given index
ensure cluster formed published nodes
returns node client random node master method fail nonmaster client available
returns node client data node cluster note use care tests rely certain nodes client
stops random data node cluster returns true node found stop false otherwise
restarts random node cluster calls callback restart
updates min master nodes setting current running cluster eligiblemasternodecount number master eligible nodes use basis min master node setting
ensure cluster formed published nodes using client specified node
returns client coordinating node
returns node client current master node note use care tests rely certain nodes client
returns suffix string based node role explicit role defined suffix empty
stops current master node forcefully
builds new node nodeid node internal id see nodeandclientnodeandclientid seed nodes random seed settings settings use reuseexisting node name already part nodes new node built method return existing one defaultminmasternodes minmasternodes value use minmasternodes auto managed
starts multiple nodes given settings returns names
returns smart node client random node cluster
closes current node already closed builds new node object using current node settings starts
returns name current master node cluster executes request via node specified vianode parameter vianode isnt specified random node picked send request to
returns iterable instances given class t across nodes cluster
restarts nodes cluster first stops nodes restarts nodes again
asserts testinstance correctly
simulates sending diffs wire
asserts changes applied correctly ie applying diffs localinstance produces object equal remotechanges instance
tests making random changes object calculating diffs changes sending diffs wire appling diffs side
creates new orgelasticsearchtestnodeconfigurationsource security configuration numofnodes number nodes proper unicast configuration can actually available sslenabled whether ssl enabled parentfolder parent folder contain configuration files need created scope scope test requiring instance securitysettingssource
returns ssl related configuration settings given location key certificate location pem certificates trusted keypath path private key used ssl password password private key protected certificatepath path pem formatted certificate encapsulating public key corresponds private key specified keypath presented incoming ssl connections trustedcertificates list pem formatted certificates trusted
tests equals hashcode methods consistent copied versions instance equal
test serialization deserialization test instance
generic test creates new instance test instance checks equality asserts equality two queries
corrupts random file random position
fail process provided message
fail process didnt detect particular violation named look like junit assertion even though isnt similar enough
make sure query names unique suffixing increasing counter
returns tuple contains randomized shardinfo value left side corresponding value right side printed toxcontent parsed back using parsing method like shardinfofromxcontentxcontentparser withshardfailures parameter indicates randomized shardinfo must must contain shard failures random random generator withshardfailures indicates generated shardinfo must contain shard failures
returns tuple containing random stored field values corresponding expected values printed via orgelasticsearchcommonxcontenttoxcontenttoxcontentxcontentbuilder toxcontentparams parsed back via orgelasticsearchcommonxcontentxcontentparserobjecttext generates values based get printed out stored fields values retrieved lucene converted via orgelasticsearchindexmappermappedfieldtypevaluefordisplayobject either strings numbers booleans random random generator xcontenttype content type used determine expected values float numbers
returns tuple contains randomized failure value left side corresponding value right side printed toxcontent parsed back using parsing method like shardinfofailurefromxcontentxcontentparser random random generator
randomly adds fields objects arrays provided builder maximum depth 5
returns random source given xcontenttype containing random number fields objects array maximum depth 5 minimum number fields per object provided argument random random generator
returns random source containing random number fields objects array maximum depth 5 random random generator
method takes input xcontent data adds random field value inner object array json object eg used test parsers handle resulting xcontent handle augmented xcontent correctly example testing lenient parsing xcontent output contains objects skipped treatment optional filtering predicate supplied checks xcontent paths excluded treatment predicate check xcontent path want insert return true path excluded paths string concatenating field names array indices eg in foo1 bar baz insert foo1bar2baz would point desired insert location exclude inserting foo1 object would user predicate like path pathendswithfoo1 dont want random insertions foo1 tree could use path pathcontainsfoo1
utility method takes xcontentparser walks xcontent structure find possible paths new object array starts used tests add random xcontent values test parsing code errors check robustness new fields path uses separated fieldnames numbers array indices similar objectpath stack passed initially empty gets pushed recursive calls example following json xcontent foo bar foo1 1 foo2 baz 3 4 foo3 foo4 foo5 buzz would return following list the empty string path root object foo11 foo3 foo3foo4
inserts keyvalue pairs xcontent passed bytesreference returns new xcontentbuilder paths argument uses separated fieldnames numbers array indices similar objectpath keyvalue arguments suppliers either return fixed random values
perform common equality hashcode checks input object original object test copyfunction function creates deep copy input object mutationfunction function creates copy input object different input one aspect output call used check equal input object
returns instance restclient pointing current test cluster creates new client method invoked first time context current test scope returned client gets automatically closed needed shouldnt closed part tests otherwise cannot reused tests anymore
verifies nodes version cluster state master cluster state
sets unsets cluster readonly mode
clears given scroll ids
waits relocations force merge indices cluster 1 segment
waits mappings provided fields exist nodes note waits current started shards checks concrete mappings
prints segments info given indices debug logging
sets clusters minimum master node make sure response acknowledge note doesnt guarantee new setting taken effect received nodes
returns settings object used createindexstring preparecreatestring friends method overwritten subclasses set defaults indices created test default returns settings object sets random number shards number shards replicas controlled specific methods
ensures cluster searchable state given indices means searchable copy shard available cluster
creates randomized index template template used pass randomized settings per index basis allows enabledisable randomization number shards replicas
returns path random directory used create temporary file system repo
asserts shards allocated nodes matching given node pattern
enables index block specified index
waits least give number document visible searchers numdocs number documents wait indexer orgelasticsearchtestbackgroundindexer supplied first checked documents indexed saves unneeded searches actual number docs seen
indexes given indexrequestbuilder instances randomly shuffles given builders either indexes blocking async fashion useful catch problems relate internal document ids index segment creations features might bug given document first last segment one document segment etc method prevents issues like randomizing index layout forcerefresh true involved indices refreshed documents indexed dummydocuments true empty dummy documents may randomly inserted document list deleted documents indexed useful produce deleted documents server side maybeflush true method may randomly execute full flushes index operations builders documents index
waits least give number document visible searchers numdocs number documents wait maxwaittime progress made time fail test maxwaittimeunit unit maxwaittime specified indexer orgelasticsearchtestbackgroundindexer supplied first checked documents indexed saves unneeded searches actual number docs seen
flush indices cluster
flushes refreshes indices cluster
waits given mapping type exists master node
creates new createindexrequestbuilder settings obtained indexsettings index created builder allowed allocate number nodes passed method method uses allocation deciders filter certain nodes allocate created index on defines allocation rules based indexroutingallocationexcludename
return mock plugins cluster use
ensures result counts expected logs results different
creates one indices asserts indices acknowledged one indices already exists method fail wipe indices created far
syntactic sugar disabling allocation indices
method used obtain settings nth node cluster nodes cluster associated ordinal number nodes started specific configurations method might called multiple times ordinal expected return value invocation words subclasses must ensure method idempotent
asserts segments sorted provided sort
waits relocating shards become active cluster reached given health status using cluster health api
returns path random directory used create temporary file system repo
tests client transport client wraps transport client client client test true client transport client wrapped transport client
waits relocations refreshes indices cluster waitforrelocation
prints current cluster state debug logging
maybe refresh force merge flush always make sure arent many flight async operations
disables index block specified index
remove customs except customs know clients understand clusterstate cluster state remove possiblyunknown customs cluster state possiblyunknown customs removed
waits nodes pending tasks
returns transport client ratio class level annotation via systemgetpropertystring available available return random ratio interval 01
restricts given index allocated n nodes using allocation deciders yet shards cant allocated node shards index remain allocated n nodes
returns client ratio configured via
syntactic sugar enabling allocation indices
returns true iff given index exists otherwise false
set static default settings null prevent memory leak test framework also checks memory leaks computes size cause issues running security manager tries reflection protected sun packages
creates indices provided argument randomly associating aliases indexes one dummy document per index refreshes new indices
generic test creates new instance test instance checks equality asserts equality two instances
randomly shuffles fields inside objects xcontentbuilder passed in recursively goes inner objects also shuffles them exceptions recursive shuffling behavior made passing names fields internally stay untouched
asserts files specified path
returns bytes represent xcontent output provided toxcontent object using provided xcontenttype wraps output new anonymous object according value returned toxcontentisfragment method returns shuffles keys make sure parsing never relies keys ordering
create copy original streamable object running bytesstreamoutput reading using provided writeablereader stream wrapped around streaminput potentially need use namedwriteableregistry needs provided although empty object streamed doesnt contain namedwriteable objects itself
creates testanalysis default analyzers configured
creates indicesmodule testing given mappers metadata mappers
long 0 longmaxvalue inclusive chosen uniformly random
returns random number temporary paths
assert two objects equals calling toxcontenttoxcontentxcontentbuilder toxcontentparams print differences arent equal
runs code block provided interval waiting assertions trip
helper method create byte array given length populated random byte values randombyte
randomly shuffles fields inside objects parsed using xcontentparser passed in recursively goes inner objects also shuffles them exceptions recursive shuffling behavior made passing names fields internally stay untouched
copywriteablewriteable namedwriteableregistry writeablereader also allows provide version argument used write read back object
compares two stack traces ignoring module which yet serialized
create copy original writeable object running bytesstreamoutput reading using provided writeablereader stream wrapped around streaminput potentially need use namedwriteableregistry needs provided although empty object streamed doesnt contain namedwriteable objects itself
builds set unique items usually youll get requested count might get less number supplier returns lots repeats make sure items properly implement equals hashcode
helper get random value certain range thats different input
creates testanalysis default analyzers configured
returns javaniofilepath pointing class path relative resource given first argument contrast getclassgetresourcegetfile method return url encoded paths parent path contains spaces nonstandard characters
returns bytes represent xcontent output provided toxcontent object using provided xcontenttype wraps output new anonymous object according value returned toxcontentisfragment method returns shuffles keys make sure parsing never relies keys ordering
compares two stack trace elements ignoring module which yet serialized
create new xcontentparser
returns size random values
creates testanalysis default analyzers configured
return consistent index settings provided index version
reset deprecation logger removing current thread context setting new thread context setnewthreadcontext set true otherwise clearing current thread context setnewthreadcontext whether attach new thread context deprecation logger
helper randomly perform consumer value
returns double value interval start end lowerinclusive set true start end otherwise start lower bound interval draw uniformly distributed random numbers end upper bound lowerinclusive whether include lower end interval
returns size random values
manually add specific shard allocations gateway keeps track
helper method return first 20 chars requests body response mockresponse inspect returns first 20 chars empty string response body configured
closes webserver also tries stop currently sleeping requests first counting respective latches
creates mockrequest incoming http request later checked test assertions
adds response response queue used request comes note every response processed response created mock response
instantiates webserver https sslcontext ssl context used encryption needclientauth clientauth used requires client side certificate
starts webserver binds arbitrary ephemeral port webserver able serve requests method returns ioexception case binding io errors
sleep specified amount time time value null
adds new header headers object name name header value value header
adds new header response name header name value header value updated mock response
statuscode status code returned response sent webserver defaults 200 updated mock response
timevalue allows specify delay anything sent back client updated mock response
body body returned response sent webserver updated mock response
timevalue allows specify delay sending headers body inject artificial latency updated mock response
returns closeaction execute actual engine note method changes state first call treats subsequent calls engine passed already closed
obtain logging levels test logging annotation testlogging test logging annotation map logger name logging level
reset logging levels state provided map map logging levels apply empty map
obtain logger given name loggername logger obtain logger
applies test logging annotation returns existing logging levels testlogging test logging annotation apply existing logging levels
append single vm option
creates random shape useful randomized testing note exercise caution using build random geometrycollections creating large random number random shapes result massive resource consumption see geoshapequeryteststestshapefilterwithrandomgeocollection following options included nearpoint create shape near provided point within create shape within provided rectangle note null override provided point st create random shape provided type shapebuilder random shape
puts longitude range 180 180
puts latitude range 90 90
assert index template missing
compares two objects recursively walking eventual maps lists encountered using arrays comparisons byte arraysequalsbyte byte
check directory exists
assert index template exists
assert index creation fully acknowledged meaning index creation cluster state update successful requisite number shard copies started returning
asserts provided bytesreferences created orgelasticsearchcommonxcontenttoxcontenttoxcontentxcontentbuilder toxcontentparams hold content comparison done parsing map comparing two keys ordering doesnt matter also binary values byte properly compared arrays comparisons
applies basic assertions searchresponse method checks shards successful shards threw exception response serializable
compares two maps recursively using arrays comparisons byte arraysequalsbyte byte
assert suggestion returns size suggestions first provided text
checks shard requests replicated broadcast request failed due cluster block replicatedbroadcastresponse response contain failed shard responses
compares two lists recursively using arrays comparisons byte arraysequalsbyte byte
run futureactionget check throws exception right type optionally checking exceptions rest status exceptionclass expected exception class status orgelasticsearchrestreststatus check for null disable check extrainfo extra information add failure message null
executes request fails request blocked specific clusterblock builder request builder expectedblock expected block
remove cluster settings
used obtain settings rest client used send rest requests
checks specific index green force selection index tests share cluster often leave indices non green state index index test
convert entity response map maps
template one automatically created xpack
waits shard initialization completed handy alternative ensuregreen relates shards cluster doesnt require know many nodesreplica are
waits cluster state updates processed cluster state updates still inprogress next test starts
clean test case
cluster tested xpack installed
logs message still running tasks reasoning tasks still running state trying bleed tests
wipe fs snapshots created one one repositories next test create repositories fresh theyll start empty isnt api delete snapshots api delete snapshot repositories leaves snapshots intact repository
tells whether particular key needs looked stash based name returns true string representation key starts false otherwise stash contains fields eventually extracted previous responses reused arguments following requests eg scrollid
goes recursively map entry replaces string value starting corresponding value retrieved stash
lookup value stash adding support special key path returns string location path object currently unstashed useful documentation testing
allows saved specific field stash keyvalue pair
retrieves value current stash stash contains fields eventually extracted previous responses reused arguments following requests eg scrollid
constructs new blacklistedpathpatternmatcher instance provided suffix pattern p suffix pattern must nonempty string
create new xcontentbuilder xcontent object underlying objectpath works objectpath instances created xcontent object nested substructures throw unsupportedoperationexception cases
returns object corresponding provided path present null otherwise
calls elasticsearch api parameters request body provided arguments saves obtained response execution context
calls elasticsearch api parameters request body provided arguments saves obtained response execution context
clears last obtained response stashed fields
calls api provided parameters body
returns body string
returns body properly parsed depending content type might string json object parsed map
get list values warning headers returned response
parses response body extracts specific value identified provided path
sniff cluster host metadata return restclientbuilder client metadata
create parameters parameterized test
execute executablesection careful log place origin failure
add single suite file set suites
tells whether features provided argument supported
parses complete set rest spec available provided directories
finds matching rest paths available ones current api based rest spec best path one exactly number placeholders replace eg indextypeid path params exactly index type id
returns supported http methods given rest parameters provided
finds best matching rest path given current parameters replaces placeholders corresponding values received arguments
parse teardownsection next field skip otherwise returns teardownsectionempty
check response contains warning headers expect
parse skipsection next field skip otherwise returns skipsectionempty
parse setupsection next field skip otherwise returns setupsectionempty
opens httpserver start listening random port
returns error message form stack traces emitted throwableprintstacktrace
checks gc disruption never blocks threads something unsafe keep retrying threads safely paused
ensures cluster healthy disruption
ensures nodes cluster connected other network disruptions may leave nodes master disconnected other orgelasticsearchclusternodeconnectionsservice eventually reconnect its handy able ensure happens faster
applies action disrupted links two sets nodes
delays requests random fixed time value delaymin delaymax random instance use randomization delay delaymin minimum delay delaymax maximum delay
resolves threads belonging given node suspends current stack trace safe threads added nodethreads suspended returns true live threads found caller expected call method live found
simulate remote error given requestid wrapped remotetransportexception requestid id corresponding captured send request failure wrap
returns requests captured far method clear captured requests list want captured requests list cleared use capturedrequests captured requests
returns requests captured far grouped target node method clear captured request list want captured requests list cleared use capturedrequestsbytargetnode captured requests grouped target node
simulate local error given requestid wrapped sendrequesttransportexception requestid id corresponding captured send request failure wrap
clears rule associated provided delegate service
build service clustersettings non null plain transportservice register clustersettings settings updates tracelogexcludesetting tracelogincludesetting
adds rule cause every send request fail new connect since rule added fail well
adds rule cause matching operations throw connecttransportexceptions
adds rule cause ignores send request simulating unresponsive node failing connect rule added
adds rule cause matching operations throw connecttransportexceptions
adds new connect behavior used creating connections given delegate service true send behavior registered addresses bound delegate service
adds new send behavior used communication given delegate service true send behavior registered addresses bound delegate service
clears rule associated provided delegate address
clears registered rules
adds node connected behavior used given delegate service true node connected behavior registered addresses bound delegate service
adds rule cause ignores send request simulating unresponsive node failing connect rule added duration amount time delay sending connecting
adds rule cause every send request fail new connect since rule added fail well
adds new get connection behavior used communication given delegate service true get connection behavior registered addresses bound delegate service
adds rule cause ignores send request simulating unresponsive node failing connect rule added
build service clustersettings non null plain transportservice register clustersettings settings updates tracelogexcludesetting tracelogincludesetting
adds rule cause ignores send request simulating unresponsive node failing connect rule added duration amount time delay sending connecting
adds random non existing field provided document associates provided value field added random position within document necessarily top level using leaf field name
returns random leaf field name
returns random field name leaf field name path refer field name using notation
generates document holds random metadata document provided map argument
checks whether provided field name safely added provided document provided field name holds path using notation make sure node tree either doesnt exist map otherwise new fields cannot added
returns randomly selected existing field name fields contained document provided argument
helper method assert equivalence two ingestdocuments doca first document compare docb second document compare
returns value contained document provided path byte array path value string base64 decode operation happen path value byte array returned path path within document dotnotation ignoremissing flag determine whether throw exception path found document byte array provided path existing illegalargumentexception path null empty invalid field doesnt exist field found provided path expected type
sets provided value provided path document non existing path element created last element list value replace existing list fieldpathtemplate resolves path dotnotation within document valuesource value source produce value put path key illegalargumentexception path null empty invalid value cannot set item identified provided path
constructor needed testing allows create new ingestdocument given provided elasticsearch metadata source ingest metadata needed ingest metadata initialized current timestamp init time makes equality comparisons impossible tests
returns value contained document provided path path path within document dotnotation clazz expected class field value ignoremissing flag determine whether throw exception path found document value provided path existing null otherwise illegalargumentexception ignoremissing false path null empty invalid field doesnt exist field found provided path expected type
thing extractmetadata mutate map
appends provided value provided path document non existing path element created path identifies list value appended existing list path identifies scalar scalar converted list provided value added newly created list supports multiple values provided forms list case values appended existing or newly created list fieldpathtemplate resolves path dotnotation within document valuesource value source produce value values append existing ones illegalargumentexception path null empty invalid
removes field identified provided path path path field removed illegalargumentexception path null empty invalid field doesnt exist
checks whether document contains value provided path path path within document dotnotation failoutofrange whether throw illegalargumentexception array accessed outside range true document contains value field false otherwise illegalargumentexception path null empty invalid
one time operation extracts metadata fields ingest document returns them metadata fields used accessible ordinary top level fields removed part call
returns value contained document provided path path path within document dotnotation clazz expected class field value value provided path existing null otherwise illegalargumentexception path null empty invalid field doesnt exist field found provided path expected type
read stream
read stream
optional version stored pipeline used determine pipeline updated replaced null supplied
optional description pipeline data gets processed pipeline
deletes pipeline specified id request
stores specified pipeline definition request
returns removes specified property specified configuration map property value isnt type string elasticsearchparseexception thrown property missing elasticsearchparseexception thrown
returns removes specified property specified configuration map property value isnt type string int elasticsearchparseexception thrown property missing default value specified elasticsearchparseexception thrown
returns removes specified property type list specified configuration map property value isnt type list elasticsearchparseexception thrown property missing elasticsearchparseexception thrown
returns removes specified property type list specified configuration map property value isnt type list elasticsearchparseexception thrown
returns removes specified property type map specified configuration map property value isnt type map elasticsearchparseexception thrown property missing elasticsearchparseexception thrown
returns removes specified optional property specified configuration map property value isnt type string elasticsearchparseexception thrown
returns removes specified property specified configuration map property value isnt type int elasticsearchparseexception thrown property missing elasticsearchparseexception thrown
returns removes specified property specified configuration map property value isnt type string elasticsearchparseexception thrown property missing default value specified elasticsearchparseexception thrown
returns removes specified property object specified configuration map
returns removes specified property type map specified configuration map property value isnt type map elasticsearchparseexception thrown
returns removes specified property specified configuration map property value isnt type string int elasticsearchparseexception thrown
read stream
parses tika throwing exception hit parsing document
dont silently dns lookups anything trappy bogus data
executes script ingest document context document ingest document passed script context ctx object
processor evaluates script ingest document context tag processors tag script script execute scriptservice scriptservice used execute script
maintain compatibility logstashfilteruseragent
test tries simulate load creating index indexing documents index created
method sets context server socket channel context called new channel accepted exception occurs time close channel context call
method attempt complete connection process channel called new channels channel produced opconnect event method returns true connection complete channel ready reads writes returns false channel yet connected method called opconnect event received true connection process complete ioexception io error occurs
method called events read write connect handled channel context handled
method handles exception uncaught select loop exception uncaught
method called niochannel registered selector called per channel context registered
method called niosocketchannel accepted receive opconnect event context registered
method handles closing niochannel context closed
create niogroup dedicated acceptors server channels handled group selectors dedicated accepting channels accepted channels handed nonserver selectors acceptorthreadfactory factory create acceptor selector threads dedicatedacceptorcount number dedicated acceptor selectors created selectorthreadfactory factory create nonacceptor selector threads selectorcount number nonacceptor selectors created eventhandlerfunction function creating event handlers ioexception occurs problem opening javanioselector
create niogroup dedicated acceptors server channels handled selectors handling child channels threadfactory factory create selector threads selectorcount number selectors created eventhandlerfunction function creating event handlers ioexception occurs problem opening javanioselector
returns boolean indicating operation fully flushed
method return array bytebuffer representing bytes index passed end buffer buffers duplicates internal buffers modifications markers bytebufferposition bytebufferlimit etc modify class index slice byte buffers
method release bytes head buffer release bytes past current index index truncated zero bytestorelease number bytes drop
method return array bytebuffer representing bytes beginning buffer index argument passed buffers duplicates internal buffers modifications markers bytebufferposition bytebufferlimit etc modify class index slice byte buffers
method return array page representing bytes beginning buffer index argument passed pages buffers duplicates internal components modifications markers bytebufferposition bytebufferlimit etc modify class additionally internally retain underlying pages pages returned method must closed index slice pages
method cleans context resources need released channel closed called selector thread ioexception channel context close
executes failed listener consistent exception handling called current selector thread listener executed exception provide listener
queues write operation directly channels buffer channel pending writes already channel flushed channel buffers safe accessed selector thread result method called selector thread channel pending writes already channel flushed writeoperation queued channels buffer
executes success listener consistent exception handling called current selector thread listener executed value provide listener
called immediately prior raw selectorselect call used implement channel registration handling queued writes work specifically processing selection key
starts selector selector run close called
queues write operation handled event loop called thread api available nonselector threads schedule writes writeoperation queued
convenience method called object normally channels enqueued selector method check selector still open open normal operation proceed selector closed attempt remove object queue removal succeeds throw illegalstateexception indicating normal operation failed object cannot removed queue object already handled selector operation proceed normally method called selector thread allow queuing occur selector thread manipulate queues internally even longer open queue queue object added objectadded objected added object type
schedules niochannel registered selector channel queued eventually registered next time event loop channel register
rethrows first exception list adds remaining suppressed list given list empty exception thrown
indexes document index docid concurrently updates document nupdates times document version updates
gets attributes supported filesystems
gets owner file way supported filesystems concept file owner
gets attributes supported posix filesystems
schedules oneshot command run given delay command run context calling thread preserve context calling thread may call threadpoolgetthreadcontextpreservecontext runnable passing method delay delay task executes executor name thread pool execute task means execute scheduler thread changes meaning scheduledfuture returned method case scheduledfuture complete command completes command command run scheduledfuture whos get return task added target thread pool throw exception task canceled added target thread pool task added target thread pool scheduledfuture cannot interact it orgelasticsearchcommonutilconcurrentesrejectedexecutionexception task cannot scheduled execution
returns true given service terminated successfully termination timed out service null method return false
get executorservice given name executor services executorexecuterunnable method run runnable given threadcontext thread queues it warning plain executorservice might throw rejectedexecutionexception submit task shutdown instead silently queue run it name name executor service obtain illegalargumentexception executor service specified name exists
returns true given pool terminated successfully termination timed out service null method return false
construct fixed executor builder settings nodelevel settings name name executor size fixed number threads queuesize size backing queue 1 unbounded prefix prefix settings keys
construct scaling executor builder settings specified key prefix name name executor core minimum number threads pool max maximum number threads pool keepalive time spare threads core threads kept alive prefix prefix settings keys
creates new rescheduling runnable schedules first execution occur interval specified runnable runnable executed periodically interval time interval executions executor executor runnable scheduled run scheduler scheduler instance use scheduling
returns implementation checks fixed interval threads invoked register unregister state longer specified max execution interval interrupts threads interval fixed interval check threads interrupt maxexecutiontime time thread execute operation relativetimesupplier supplier returns relative time scheduler scheduler able execute command fixed interval
checks whether patterns reference circular manner fail exception pattern anything considered reference another named pattern method navigate named patterns check circular reference
checks whether specific text matches defined grok expression text string match true grok expression matches text false otherwise
matches returns named captures within compiled grok expression matched within provided text text text match extract values from map containing field names respective coerced values matched
converts grok expression named regex expression named regex expression
use percolatequerybuilderstring bytesreference xcontenttype document content type avoid autodetection
creates percolator query builder instance percolating document remote index field field contains percolator query indexeddocumentindex index containing document percolate indexeddocumenttype type containing document percolate indexeddocumentid id document percolate indexeddocumentrouting routing value document percolate indexeddocumentpreference preference use fetching document percolate indexeddocumentversion expected version document percolate
sets name used identification purposes percolatordocumentslot response field multiple percolate queries specified main query
read stream
return extraction conjunction result1 result2 picking clauses look restrictive making unverified clause null doesnt match documents used 600 indices didnt use termsset query
extracts terms ranges provided query terms ranges stored percolator query used percolate querys candidate query fields query by candidate query holds terms document percolated allows percolate query ignore percolator queries know would otherwise never match extracting terms specified query also determine percolator query always going match example percolator query contains term query disjunction query candidate query matches that know entire percolator query always matches allows percolate query skip expensive memory index verification step would otherwise execute for example percolator query contains phrase query conjunction query query analyzer doesnt always extract terms specified query example boolean query clauses phrase queries longest term selected since terms likely rarest boolean querys mustnot clauses always ignored sometimes query analyzer cant always extract terms ranges sub query happens query analysis stopped unsupportedqueryexception thrown caller mark query way percolatorquery always verifies query memoryindex query query analyze indexversion create version index containing percolator queries
fails percolator contains unsupported query following queries supported 1 haschild query 2 hasparent query
dont want shuffle document field internally testfromxcontent even though documents would functionally same bytesreference representation isnt thats compare check equality original shuffled builder
return settings could used start node given zipped home directory
read stream
sets whether query builder ignore unmapped types and run matchnodocsquery place query throw exception type unmapped
test deserialization previous released versions
haschildquerybuilder random values place
read stream
sets whether query builder ignore unmapped types and run matchnodocsquery place query throw exception type unmapped
defines minimum number children required match parent considered match maximum number children required match parent considered match
read stream
sets whether query builder ignore unmapped types and run matchnodocsquery place query throw exception type unmapped
haschildquerybuilder random values place
test deserialization previous released versions
returns parent id field mapper associated parent name isparent true child name otherwise
returns parentjoinfieldmapper associated service null parentjoin field mapping
read stream
name name aggregation childtype type children documents
painlessexplainerror doesnt serialize headers still make it
interface ignores return value
lambda parameters shouldnt able mask variable already scope
interface ignores return value
tries catch different type exception
throws exception
catches superclass exception
catches exact exception
incrementing integer values
incrementing char values
incrementing def values
incrementing short values
incrementing double values
incrementing byte values
incrementing float values
incrementing long values
adds new synthetic method written must analyzed
adds new constant initializer written
headers added scriptexception structured rendering
binary compound prefix explicit cast
test without cast fail conversions would narrow
binary operators adopt return value
shift operators dont yet adopt return value compound assignment
unary operator explicit cast
binary operators dont yet adopt return value compound assignment
test even cast things arent allowed
currently adopt argument value issue separate cast
test even cast things arent allowed stuff methodhandles explicitcastarguments would otherwise allow
unary operators adopt return value
binary operators explicit cast
binary operators dont yet adopt return value compound assignment
test without cast fail conversions would narrow
shift compound assignment explicit cast
shift operators explicit cast
shift operators adopt return value
binary compound assignment explicit cast
binary operators dont yet adopt return value compound assignment
binary compound postifx explicit cast
ctor params
test scriptstack looks good implication tests build proper line numbers stack trace line numbers really 1 based character numbers
makes sure present useful error message misplaced rightcurly important funky things parser rightcurly brackets allow statements delimited end blocks
constructor settings settings initialize engine with
generates stateful factory class return script instances acts middle man scriptcontextfactoryclazz scriptcontextinstanceclazz used stateless factory used caching stateful factory act cache new script instances uses newinstance method scriptcontextstatefulfactoryclazz define factory method create new instances scriptcontextinstanceclazz loader classloader used define factory class script class context scriptcontexts semantics used define factory class factory class factory class return script instances
get type names language always contains single name language
generates factory class return script instances stateful factories uses newinstance method scriptcontextfactoryclazz define factory method create new instances scriptcontextinstanceclazz uses newfactory method create new factories scriptcontextstatefulfactoryclazz loader classloader used define factory class script class context scriptcontexts semantics used define factory class classtype type instaniated newfactory newinstance method depends whether scriptcontextstatefulfactoryclazz specified factory class factory class return script instances
creates constantcallsite
links delegate method returned callsite linked delegate method use converted types interface method using invokedynamic make delegate method call allows methodhandleastype used type conversion instead either lot code requiring many classes looked linktime
generates lambda class lambda functionmethod reference within painless script variables prefix interface considered represent values code generated lambda class variables prefix delegate considered represent values code generated within painless script interface method delegates calls delegate method lookup standard methodhandleslookup interfacemethodname name functional interface method called factorymethodtype type method linked callsite note captured types based parameters method interfacemethodtype type method representing functional interface method delegateclassname name class delegate method call delegateinvoketype type method call made static virtual interface constructor delegatemethodname name method called painless script class delegatemethodtype type method call painless script class without captured types isdelegateinterface method called owned interface value 1 delegate interface 0 otherwise note int bootstrap method cannot convert constants boolean callsite linked factory method creating lambda class implements expected functional interface lambdaconversionexception thrown illegal type conversion occurs link time
validates conversions link time currently ensures lambda method return value cannot delegate delegate method return type
defines class lambda class using compilerloader originally defined class painless script
generates factory method delegate constructors
creates classwriter used lambda class generation
generates member fields captured variables based parameters factory method array captured variable metadata generating method arguments later
converts incoming parameters name type descriptor captured argument count captured argument count type class type captured argument
generates interface method delegate call delegate method invokedynamic using delegatebootstrap type converter
creates constantcallsite return instance generated lambda class every time linked factory method called
generates constructor take captured arguments store respective member fields
creates scriptimpl previously compiled painless script script previously compiled painless script vars initial variables run script with lookup lookup allow search fields available run search script
writes dynamic binary instruction returntype lhs rhs different
encodes offset line number table offset 1 invoked instructions hit exceptions
marks new statement boundary invoked statement boundary leaf s nodes
starts new string concat size arguments pushed stack the object string concats eg stringbuilder
proxy box method use valueof instead ensure modern boxing methods used
writes dynamic call def method name method name methodtype callsite signature flavor type call params flavorspecific parameters
writes static binary instruction
declaring variables primitive types
test boxed def objects various places
simple tests returning constant value
check see class already loaded painlesslookup initially created allows whitelisted classes loaded modulesplugins without direct relationship modulesplugins classloader
standard constructor scriptclass classinterface script implement factoryclass optional classinterface create scriptclass instance statefulfactoryclass optional classinterface create factoryclass instance painlesslookup whitelist script use
runs twopass compiler generate painless script loader classloader used define script name name script source source code script settings compilersettings used compilation executable script implements specified interface subclass painlessscript
runs twopass compiler generate painless script used debugger source source code script settings compilersettings used compilation bytes compilation
called new type encountered cached type match case revert generic slower operator handling
invokedynamic bootstrap method addition ordinary parameters also take parameters defined call site initialdepth initial call site depth used exercise megamorphic fallback flavor type dynamic call and part whitelist look at args flavorspecific args take painlesslookup used compile script whitelist checking see httpsdocsoraclecomjavasespecsjvmsse7htmljvms6htmljvms65invokedynamic
creates methodhandle megamorphic call site using classvalue methodhandlesexactinvokermethodtype
called new type encountered or encountered maxdepth types call site given caching using fallback switch megamorphic cache using classvalue
slow lookup operator
slow lookup whitelist
create new constant location location script creating type type constant name name constant initializer code initialize constant called generating clinit method expected leave value constant stack generating load instruction managed caller
creates new lambda scope inside current scope like newfunctionscope except captured parameters made readonly
creates new main method scope
creates new function scope inside current scope
creates new program scope list methods parent methods
returns toplevel program scope
creates new variable throws iae variable already defined even parent reserved
looks variable scope only returns null variable exist
defines variable scope internally
checks variable exists not scope parents
accesses variable throw iae variable exist
create new locals specified return type
creates new local variable scope eg loop inside current scope
hack rethrow unknown exceptions methodhandleinvokeexact
looks handle dynamic field getter field load dynamic field load variable x type def looks like y xfield following field loads allowed whitelisted field receivers class superclasses whitelisted method named getfield receivers classsuperclassesinterfaces whitelisted method named isfield receivers classsuperclassesinterfaces the length field array the value corresponding map key named field receiver map the value list element field integer receiver list method traverses recieverclasss class hierarchy including interfaces finds matching whitelisted getter one found throws exception otherwise returns handle matching getter painlesslookup whitelist receiverclass class object retrieve field from name name field pointer matching field never returns null illegalargumentexception matching whitelisted field found
returns method handle iteration for enhanced loop receiverclass class array load value methodhandle accepts receiver first argument returns iterator
returns implementation interfaceclass calls receiverclassname like lambdametafactory dynamic type interface type known simply need lookup matching implementation method based receiver type
returns method handle normalize index array makes lists arrays stored def support negative offsets receiverclass class array store value methodhandle accepts receiver first argument index second argument returns normalized index use array loads array stores
returns method handle array store receiverclass class array store value methodhandle accepts receiver first argument index second argument value set 3rd argument return value undefined ignored
returns method handle array load receiverclass class array load value methodhandle accepts receiver first argument index second argument returns loaded value
returns method handle implementation clazz given method reference signature
looks handle dynamic field setter field store dynamic field store variable x type def looks like xfield y following field stores allowed whitelisted field receivers class superclasses whitelisted method named setfield receivers classsuperclassesinterfaces the value corresponding map key named field receiver map the value list element field integer receiver list method traverses recieverclasss class hierarchy including interfaces finds matching whitelisted setter one found throws exception otherwise returns handle matching setter painlesslookup whitelist receiverclass class object retrieve field from name name field pointer matching field never returns null illegalargumentexception matching whitelisted field found
looks handle dynamic method call lambda replacement dynamic method call variable x type def looks like xmethodargs method traverses recieverclasss class hierarchy including interfaces finds matching whitelisted method one found throws exception otherwise returns handle matching method painlesslookup whitelist methodhandleslookup callers lookup callsitetype callsites type receiverclass class object invoke method on name name method args bootstrap args passed callsite pointer matching method invoke never returns null illegalargumentexception matching whitelisted method found throwable method reference cannot converted functional interface
returns array length getter methodhandle given array type
compiles bytecode returns debugging output
test list method invocation
test loads stores map
test shortcut getters isxxxx
test loads stores list
test loads stores update script equivalent
checks b c parsed b c instead a b c nice first one needs one comparison a nonnull second one needs two
test revert megamorphic classvalue cache works expected
calls tostring integers twice
basic tests
checks specific exception class thrown boxed inside scriptexception returns it
compiles returns result script access vars compiletime parameters
uses debugger get bytecode output script compare expected bytecode passed string
uses debugger get bytecode output script compare expected bytecode pattern regular expression please try avoid
asserts scriptstack looks right
compiles returns result script access vars
script contexts used build script engine override customize script contexts available
returns appropriate method handle binary operator based promotion lhs rhs arguments
looks generic method dynamic cast receivers type compound assignment
slowly returns number o supporting dynamiccast
looks generic method dynamic cast specified type explicit assignment
slow dynamic cast casts value instance clazz based upon inspection lhs null cast takes place
forces cast class target only types differ
binary promotion
returns appropriate method handle unary shift operator based receiver lhs
unary promotion objects promoted object
slow dynamic cast casts returnvalue runtime type lhs based upon inspection lhs null cast takes place used generic fallback case compound assignment
check cant declare variable value really reserved
check cant write value readonly
check cant declare variable score really reserved
check cant write score readonly
check cant declare variable doc really reserved
check cant write doc readonly
check cant declare variable ctx really reserved
check cant write ctx readonly
creates new functionref resolve typecall whitelist painlesslookup whitelist script compiled localmethods userdefined synthetic methods generated directly script class location character number within script compiletime targetclass functional interface type implement typename left hand side method reference expression methodname right hand side method reference expression numberofcaptures number captured arguments
pick javadoc root painlessmethod
emit external link javadoc painlessfield root name root uri variable
document method
document constructor
emit external link javadoc painlessmethod root name root uri variable
anchor text painlessconstructor
emit external link javadoc painlessmethod root name root uri variable
emit painlessclass plain painlessclass primitive def emits name struct otherwise emits internal link name
pick javadoc root class
emit class type primitive array primitives emits name type otherwise emits internal link text
anchor text painlessclass
anchor text painlessfield
anchor text painlessmethod
returns true methods part runtime
adds stack trace useful information exceptions thrown painless script throwable build exception around generated scriptexception
create new location sourcename scripts name offset character offset script element
computes file name mostly important stacktraces
augments exception locations information
converts type unboxed type equivalent one exists based terminology specified part painlesslookuputility otherwise behaves identity function
converts canonical type name type based terminology specified part documentation painlesslookuputility since canonical class names subset canonical type names method safely convert canonical class name class well
checks type based terminology specified part painlesslookuputility available constant type true returned type constant type false otherwise
converts type canonical type name based terminology specified part documentation painlesslookuputility since classes subset types method safely convert class canonical class name well
converts type boxed type equivalent one exists based terminology specified part painlesslookuputility otherwise behaves identity function
converts type java type based terminology specified part painlesslookuputility type def class def array returned type equivalent object class object array otherwise behaves identity function
converts java type type based terminology specified part painlesslookuputility type object class object array returned type equivalent def class def array otherwise behaves identity function
converts list types list canonical type names string based terminology specified part documentation painlesslookuputility since classes subset types method safely convert list classes mixed list classes types list canonical type names string well
create cast original type boxed cast performed
create cast target type unboxed cast performed
create cast original type unboxed cast performed
create cast target type boxed cast performed
build tostring node optionally ends args arguments here usually function calls
build tostring expressions usually best use singlelinetostringobject multilinetostringcollection collection instead include name node default
zip two potentially uneven lists together tostring
handles writing byte code variablemethod chains given possibilities including string concatenation compound assignment regular assignment simple reads includes proper duplication chained assignments assignments also read from
standard constructor location used error tracking
inserts ecast nodes tree implicit casts also replaces nodes constant variable set nonnull value econstant new child node parent node calling method
constructor used variablemethod chains postfixes specified
writes function given classvisitor
constructor used variablemethod chains postfixes specified
writes opcodes flip negative array index meaning slots end array 0based one meaning slots start array
standard constructor location used error tracking
sums result iterable
counts number occurrences satisfy given predicate inside iterable
iterates iterable type passing item items index a counter starting zero given consumer
replace first match similar matcherreplacefirststring allows customize replacement based match
iterates collection transforming entry new value using function adding values specified collection
iterates collection calling given function item stopping first nonnull result found returning result results null defaultresult returned
iterates iterable passing item given consumer
finds first value matching predicate returns null
finds values matching predicate returns list
iterates map transforming items using supplied function collecting nonnull results
sorts map members groups determined supplied mapping function
iterates map passing item given consumer
used determine given predicate valid ie returns true items map
sorts iterable members groups determined supplied mapping function
splits items two collections based predicate first list contains items match closure expression second list dont
converts iterable collection returns original iterable already collection
iterates map transforming entry new value using function adding values specified collection
iterates contents iterable checks whether predicate valid least one element
sums result applying function item iterable
finds first entry matching predicate returns null
counts number occurrences satisfy given predicate inside map
concatenates tostring representation item iterable given string separator item
iterates map transforming entry new value using function returning list transformed values
converts iterable list returns original iterable already list
replace matches similar matcherreplaceallstring allows customize replacement based match
used determine given predicate valid ie returns true items iterable
iterates iterable transforming items using supplied function collecting nonnull results
iterates map calling given function item stopping first nonnull result found returning result results null defaultresult returned
iterates collection transforming entry new value using function returning list transformed values
finds values matching predicate returns map
standard constructor values must null
standard constructor values must null
standard constructor values must null
standard constructor values must null exception augmentedcanonicalclassname augmentedcanonicalclassname null unless method augmented described class documentation
standard constructor values must null
loads creates whitelist one many text files file paths passed array strings single class used load resources string path single text file classs classloader used lookup java reflection objects individual class constructor method field specified part whitelist text file single pass made file collect information class constructor method field validation done later point whitelists gathered merging takes place painless type name one following def painless dynamic type automatically included without need whitelisted fullyqualified java type name whitelisted java class equivalent name painless type name exception dollar symbols used part inner classes replaced symbols short java type name text final symbol specified java class short type java name may excluded using noimport token painless class parsing described later following parsed whitelist text file blank lines ignored parser comments may created starting pound symbol end newline ignored parser primitive types may specified starting class followed java type name opening bracket newline closing bracket final newline complex types may specified starting class followed fullyqualified java class name optionally followed noimport token opening bracket newline constructormethodfield specifications closing bracket final newline within complex type following may parsed constructor may specified starting opening parenthesis followed commadelimited list painless type names corresponding typeclass names equivalent java parameter types these must whitelisted well closing parenthesis newline method may specified starting painless type name return type followed java name method which also painless name method opening parenthesis commadelimited list painless type names corresponding typeclass names equivalent java parameter types these must whitelisted well closing parenthesis newline augmented method may specified starting painless type name return type followed fully qualified java name class augmented method part this class need whitelisted java name method which also painless name method opening parenthesis commadelimited list painless type names corresponding typeclass names equivalent java parameter types these must whitelisted well closing parenthesis newline a field may specified starting painless type name equivalent java type field followed java name field which painless name field newline note must onetoone correspondence painless type names java typeclass names painless type defined across multiple files java class same specified constructors methods fields merged single painless type painless dynamic type def used part constructor method field definitions appropriately parsed handled painless complex types must specified fullyqualified java class name method argument types method return types field types must specified painless type names def fullyqualified short described earlier following example used create single whitelist text file primitive types class int int complex types class mypackageexample noimport constructors int def def example def method example addint def int addexample example void example augmented example someotherclass subexample int def fields int value0 int value1 def value2
creates new instance consumer provided buffer limit
put watch cluster see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentwatcherapiputwatchhtml docs more request request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
deletes watch cluster see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentwatcherapideletewatchhtml docs more request request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
asynchronously put watch cluster see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentwatcherapiputwatchhtml docs more request request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
asynchronously deletes watch cluster see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentwatcherapideletewatchhtml docs more request request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
create random number headers generated header names either basename plus index exactly provided basename test also support multiple headers key different values
opens machine learning job asynchronously notifies listener completion open new job starts empty model open existing job recent model state automatically loaded job ready resume analysis left off new data received additional info see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentmlopenjobhtml request request containing jobid additional optional options options additional request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
deletes given machine learning job asynchronously notifies listener completion additional info see hrefhttpwwwelasticcoguideenelasticsearchreferencecurrentmldeletejobhtmlml delete job documentation request request delete job options additional request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
deletes given machine learning job additional info see hrefhttpwwwelasticcoguideenelasticsearchreferencecurrentmldeletejobhtmlml delete job documentation request request delete job options additional request options eg headers use requestoptionsdefault nothing needs customized action acknowledgement ioexception serialization issue sending request receiving response
opens machine learning job open new job starts empty model open existing job recent model state automatically loaded job ready resume analysis left off new data received additional info see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentmlopenjobhtml request request containing jobid additional optional options options additional request options eg headers use requestoptionsdefault nothing needs customized response containing job successfully opened not ioexception serialization issue sending request receiving response
creates new machine learning job asynchronously notifies listener completion additional info see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentmlputjobhtmlml put job documentation request request containing orgelasticsearchprotocolxpackmljobconfigjob settings options additional request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
creates new machine learning job additional info see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentmlputjobhtmlml put job documentation request putjobrequest containing orgelasticsearchprotocolxpackmljobconfigjob settings options additional request options eg headers use requestoptionsdefault nothing needs customized putjobresponse enclosed orgelasticsearchprotocolxpackmljobconfigjob object ioexception serialization issue sending request receiving response
parse get aliases response
wrap plain responseexception another one current stack trace used synchronous calls caller ends stack trace exception thrown
asynchronously deletes snapshot see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentmodulessnapshotshtml snapshot restore api elasticco deletesnapshotrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
gets status requested snapshots see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentmodulessnapshotshtml snapshot restore api elasticco snapshotsstatusrequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
asynchronously deletes snapshot repository see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentmodulessnapshotshtml snapshot restore api elasticco deleterepositoryrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
get snapshots see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentmodulessnapshotshtml snapshot restore api elasticco getsnapshotsrequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
deletes snapshot see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentmodulessnapshotshtml snapshot restore api elasticco deletesnapshotrequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
restores snapshot see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentmodulessnapshotshtml snapshot restore api elasticco restoresnapshotrequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
creates snapshot repository see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentmodulessnapshotshtml snapshot restore api elasticco putrepositoryrequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
asynchronously creates snapshot repository see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentmodulessnapshotshtml snapshot restore api elasticco putrepositoryrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
creates snapshot see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentmodulessnapshotshtml snapshot restore api elasticco
asynchronously restores snapshot see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentmodulessnapshotshtml snapshot restore api elasticco restoresnapshotrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
deletes snapshot repository see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentmodulessnapshotshtml snapshot restore api elasticco deleterepositoryrequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
asynchronously gets list snapshot repositories list repositories empty contains single element all registered repositories returned see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentmodulessnapshotshtml snapshot restore api elasticco getrepositoriesrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
verifies snapshot repository see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentmodulessnapshotshtml snapshot restore api elasticco verifyrepositoryrequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
asynchronously gets status requested snapshots see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentmodulessnapshotshtml snapshot restore api elasticco snapshotsstatusrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
asynchronously get snapshots see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentmodulessnapshotshtml snapshot restore api elasticco getsnapshotsrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
gets list snapshot repositories list repositories empty contains single element all registered repositories returned see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentmodulessnapshotshtml snapshot restore api elasticco getrepositoriesrequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
asynchronously verifies snapshot repository see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentmodulessnapshotshtml snapshot restore api elasticco verifyrepositoryrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
asynchronously creates snapshot see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentmodulessnapshotshtml snapshot restore api elasticco
asynchronously get existing pipeline see hrefhttpswwwelasticcoguideenelasticsearchreferencemastergetpipelineapihtml get pipeline api elasticco request request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
asynchronously delete existing pipeline see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentdeletepipelineapihtml delete pipeline api elasticco request request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
add pipeline update existing pipeline see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentputpipelineapihtml put pipeline api elasticco request request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
asynchronously simulate pipeline set documents provided request see hrefhttpswwwelasticcoguideenelasticsearchreferencemastersimulatepipelineapihtml simulate pipeline api elasticco request request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
asynchronously add pipeline update existing pipeline see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentputpipelineapihtml put pipeline api elasticco request request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
get existing pipeline see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentgetpipelineapihtml get pipeline api elasticco request request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
delete existing pipeline see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentdeletepipelineapihtml delete pipeline api elasticco request request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
simulate pipeline set documents provided request see hrefhttpswwwelasticcoguideenelasticsearchreferencemastersimulatepipelineapihtml simulate pipeline api elasticco request request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
checks given rest client provided default headers
asynchronously deletes license cluster options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
updates license cluster options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
asynchronously returns current license cluster cluster options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
deletes license cluster options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
asynchronously updates license cluster options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
converts entire response json string useful responses dont parse client side instead work string case license json
returns current license cluster options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
create plain request method http method endpoint path request without scheme host port prefix
add query string parameter name name url parameter must null value value url url parameter null parameter sent name rather namevalue illegalargumentexception parameter name already set
set portion http request elasticsearch manipulated without changing elasticsearchs behavior
set portion http request elasticsearch manipulated without changing elasticsearchs behavior
asynchronously fetch usage information xpack features cluster options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
fetch usage information xpack features cluster options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
asynchronously fetch information xpack cluster see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentinfoapihtml docs more request request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
fetch information xpack cluster see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentinfoapihtml docs more request request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
executes provided request using either sync method async variant provided functions
test cases retrieves six documents indexed checks prec10 calculation unlabeled documents treated relevant
test case checks default metrics registered usable
sets default request headers sent along request requesttime headers always overwrite default headers nullpointerexception defaultheaders header null
sets maximum timeout in milliseconds honour case multiple retries request defaultmaxretrytimeoutmillis specified illegalargumentexception maxretrytimeoutmillis greater 0
sets requestconfigcallback used customize http client configuration nullpointerexception requestconfigcallback null
creates new restclient based provided configuration
sets paths prefix every request used http client example set mypath client request become mypath endpoint essence every requests endpoint prefixed pathprefix path prefix useful elasticsearch behind proxy provides base path proxy requires paths start intended purposes supplied scenarios nullpointerexception pathprefix null illegalargumentexception pathprefix empty ends one
creates new builder instance sets hosts client send requests to illegalargumentexception nodes null empty
sets nodeselector used requests nullpointerexception provided nodeselector null
sets restclientfailurelistener notified request failure nullpointerexception failurelistener null
sets httpclientconfigcallback used customize http client configuration nullpointerexception httpclientconfigcallback null
test host selector real server and test happens calling
returns value first header specified name message one matching header message first element returned matching header message null returned
mocks synchronous request execution like executed elasticsearch
resthighlevelclient must declare following execution methods using protected modifier used subclasses implement custom logic
mocks asynchronous request execution calling mockperformrequestrequest method
asynchronously executes search using search scroll api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentsearchrequestscrollhtmlsearch scroll api elasticco searchscrollrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion use scrollasyncsearchscrollrequest requestoptions actionlistener instead
executes request using field capabilities api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentsearchfieldcapshtmlfield capabilities api elasticco fieldcapabilitiesrequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
get stored script id see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentmodulesscriptingusinghtml use scripts elasticco request request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
asynchronously executes multi search using msearch api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentsearchmultisearchhtmlmulti search api elasticco searchrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
pings remote elasticsearch cluster returns true ping succeeded false otherwise options request options eg headers use requestoptionsdefault nothing needs customized true ping succeeded false otherwise ioexception case problem sending request
executes request using explain api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentsearchexplainhtmlexplain api elasticco explainrequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
asynchronously deletes document id using delete api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentdocsdeletehtmldelete api elasticco deleterequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
asynchronously checks existence document returns true exists false otherwise see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentdocsgethtmlget api elasticco getrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
executes multi search using msearch api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentsearchmultisearchhtmlmulti search api elasticco multisearchrequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response use msearchmultisearchrequest requestoptions instead
asynchronously retrieves document id using get api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentdocsgethtmlget api elasticco getrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
asynchronously delete stored script id see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentmodulesscriptingusinghtml use scripts elasticco request request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
asynchronously executes request using multi search template api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentmultisearchtemplatehtmlmulti search template api elasticco
asynchronously executes search using search scroll api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentsearchrequestscrollhtmlsearch scroll api elasticco searchscrollrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
creates resthighlevelclient given low level restclient use perform requests list entries allow parse custom response sections added elasticsearch plugins constructor called subclasses case externally created lowlevel rest client needs provided consumer argument allows control needs done close method called also subclasses provide parsers custom response sections added elasticsearch plugins
executes request using search template api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentsearchtemplatehtmlsearch template api elasticco searchtemplaterequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
executes search using search scroll api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentsearchrequestscrollhtmlsearch scroll api elasticco searchscrollrequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response use scrollsearchscrollrequest requestoptions instead
executes multi search using msearch api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentsearchmultisearchhtmlmulti search api elasticco multisearchrequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
asynchronously updates document using update api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentdocsupdatehtmlupdate api elasticco updaterequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
asynchronously retrieves multiple documents id using multi get api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentdocsmultigethtmlmulti get api elasticco multigetrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
delete stored script id see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentmodulesscriptingusinghtml use scripts elasticco request request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
get cluster info otherwise provided sending http request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
asynchronously get stored script id see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentmodulesscriptingusinghtml use scripts elasticco request request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
asynchronously executes request using field capabilities api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentsearchfieldcapshtmlfield capabilities api elasticco fieldcapabilitiesrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
retrieves multiple documents id using multi get api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentdocsmultigethtmlmulti get api elasticco multigetrequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response use mgetmultigetrequest requestoptions instead
asynchronously executes request using ranking evaluation api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentsearchrankevalhtmlranking evaluation api elasticco rankevalrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
executes request using multi search template api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentmultisearchtemplatehtmlmulti search template api elasticco
clears one scroll ids using clear scroll api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentsearchrequestscrollhtmlclearscrollapi clear scroll api elasticco clearscrollrequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
executes request using ranking evaluation api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentsearchrankevalhtmlranking evaluation api elasticco rankevalrequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
executes search using search scroll api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentsearchrequestscrollhtmlsearch scroll api elasticco searchscrollrequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
asynchronously executes multi search using msearch api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentsearchmultisearchhtmlmulti search api elasticco searchrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion use msearchasyncmultisearchrequest requestoptions actionlistener instead
converts responseexception obtained low level rest client elasticsearchexception response body returned tries parse error returned elasticsearch response body returned anything goes wrong parsing error returns new elasticsearchstatusexception wraps original responseexception potential exception obtained parsing added returned exception suppressed exception method guaranteed throw exception eventually thrown parsing
loads returns namedxcontentregistryentry parsers provided plugins
asynchronously executes request using explain api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentsearchexplainhtmlexplain api elasticco explainrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
asynchronously index document using index api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentdocsindexhtmlindex api elasticco indexrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
asynchronously retrieves multiple documents id using multi get api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentdocsmultigethtmlmulti get api elasticco multigetrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion use mgetasyncmultigetrequest requestoptions actionlistener instead
asynchronously executes search using search api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentsearchsearchhtmlsearch api elasticco searchrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
deletes document id using delete api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentdocsdeletehtmldelete api elasticco deleterequest reuqest options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
asynchronously executes request using search template api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentsearchtemplatehtmlsearch template api elasticco
retrieves multiple documents id using multi get api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentdocsmultigethtmlmulti get api elasticco multigetrequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
asynchronously clears one scroll ids using clear scroll api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentsearchrequestscrollhtmlclearscrollapi clear scroll api elasticco clearscrollrequest reuqest options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
asserts provided plain exception contains method called somewhere stack normally case synchronous calls restclient performs synchronous calls performing asynchronous calls blocking current thread call returns take special care make sure caller shows exception use assertion make sure dont break special care
standard constructor
ensure indexrequests content type supported bulk api conforms current bulkrequests content type if its known time method get called indexrequests content type
returns contenttype given xcontenttype xcontenttype xcontenttype contenttype
remove method 70 needs tests then replaced testperformasyncwithunsupportedmethod
remove method 70 needs tests then replaced requesttests
remove method 70 needs tests then replaced requestteststestaddparameters
assert restclientselectnodes fails provided arguments message exception thrown failure
remove method 70 needs tests then replaced testperformasyncwithwrongendpoint
remove method 70 needs tests then replaced requestteststestconstructor
set httpasyncresponseconsumerfactory used create one httpasyncresponseconsumer callback per retry controls response body gets streamed nonblocking http connection client side
add provided header request
assert actual headers expected ones given original default request headers headers ignored instance case http client adding automatically defaultheaders default headers set rest client instance requestheaders request headers sent particular request actualheaders actual headers result provided default request headers ignoreheaders header keys ignored part default request headers yet part actual ones
end end test request response body exercises mock http client ability send back whatever body received
shutdown executor dont leak threads test runs
remove method 70 needs tests then replaced requestteststestaddparameters
prefer restclientperformrequestrequest
prefer restclientperformrequestrequest
verifies content httprequest thats internally created passed http client
end end test request response headers exercises mock http client ability send back whatever headers received
remove method 70 needs tests then replaced requesttests
end end test ok status codes
end end test error status codes cause exception thrown apart 404 head requests
asynchronously updates cluster wide specific settings using cluster update settings api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentclusterupdatesettingshtml cluster update settings api elasticco clusterupdatesettingsrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
get cluster wide settings using cluster get settings api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentclustergetsettingshtml cluster get settings api elasticco clustergetsettingsrequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
asynchronously get cluster health using cluster health api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentclusterhealthhtml cluster health api elasticco timeout occurred clusterhealthresponse istimedout true status reststatusrequesttimeout healthrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
updates cluster wide specific settings using cluster update settings api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentclusterupdatesettingshtml cluster update settings api elasticco clusterupdatesettingsrequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
asynchronously get cluster wide settings using cluster get settings api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentclustergetsettingshtml cluster get settings api elasticco clustergetsettingsrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
get cluster health using cluster health api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentclusterhealthhtml cluster health api elasticco timeout occurred clusterhealthresponse istimedout true status reststatusrequesttimeout healthrequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
constructor allows pass settings threadpool separately useful client proxy yet fully constructed ie dependencies available yet
build dead state host given previous dead state useful host failing before hence already failed one consecutive times failed attempts register longer wait retry host again minimum 1 minute for node failed created deadhoststatetimesupplier maximum 30 minutes for node failed 10 consecutive times previousdeadhoststate previous state host allows us increase wait till next retry attempt
build initial dead state host useful working host stops functioning needs marked dead first failure case host retried minute so timesupplier way supply current time allow unit testing
puts index template using index templates api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicestemplateshtml index templates api elasticco putindextemplaterequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
asynchronously refresh one indices using refresh api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicesrefreshhtml refresh api elasticco refreshrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
checks one aliases exist using aliases exist api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicesaliaseshtml indices aliases api elasticco getaliasesrequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request
splits index using split index api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicessplitindexhtml split index api elasticco resizerequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
asynchronously retrieve settings one indices see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicesgetsettingshtml indices get settings api elasticco getsettingsrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
initiate synced flush manually using synced flush api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicessyncedflushhtml synced flush api elasticco syncedflushrequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
checks index indices exists not see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicesexistshtml indices exists api elasticco request request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request
asynchronously shrinks index using shrink index api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicesshrinkindexhtml shrink index api elasticco resizerequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
asynchronously force merge one indices using force merge api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicesforcemergehtml force merge api elasticco forcemergerequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
asynchronously updates mappings index using put mapping api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicesputmappinghtml put mapping api elasticco putmappingrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
rolls index using rollover index api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicesrolloverindexhtml rollover index api elasticco rolloverrequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
creates index using create index api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicescreateindexhtml create index api elasticco createindexrequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
asynchronously gets one aliases using get index aliases api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicesaliaseshtml indices aliases api elasticco getaliasesrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
asynchronously updates aliases using index aliases api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicesaliaseshtml index aliases api elasticco indicesaliasesrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
retrieves field mappings index indices using get field mapping api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicesgetfieldmappinghtml get field mapping api elasticco getfieldmappingsrequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
asynchronously gets index templates using index templates api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicestemplateshtml index templates api elasticco getindextemplatesrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
asynchronously retrieves mappings index indices using get mapping api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicesgetmappinghtml get mapping api elasticco getmappingsrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
asynchronously checks one aliases exist using aliases exist api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicesaliaseshtml indices aliases api elasticco getaliasesrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
closes index using close index api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicesopenclosehtml close index api elasticco closeindexrequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
asynchronously validate potentially expensive query without executing it see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentsearchvalidatehtml validate query api elasticco validatequeryrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
asynchronously initiate synced flush manually using synced flush api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicessyncedflushhtml synced flush api elasticco syncedflushrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
flush one indices using flush api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicesflushhtml flush api elasticco flushrequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
force merge one indices using force merge api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicesforcemergehtml force merge api elasticco forcemergerequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
asynchronously checks index indices exists not see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicesexistshtml indices exists api elasticco request request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
validate potentially expensive query without executing it see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentsearchvalidatehtml validate query api elasticco validatequeryrequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
calls analyze api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicesanalyzehtmlanalyze api elasticco request request options request options eg headers use requestoptionsdefault nothing needs customized
retrieve information one indexes see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicesgetindexhtml indices get index api elasticco getindexrequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
asynchronously rolls index using rollover index api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicesrolloverindexhtml rollover index api elasticco rolloverrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
asynchronously creates index using create index api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicescreateindexhtml create index api elasticco createindexrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
deletes index using delete index api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicesdeleteindexhtml delete index api elasticco deleteindexrequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
updates specific index level settings using update indices settings api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicesupdatesettingshtml update indices settings api elasticco updatesettingsrequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
gets index templates using index templates api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicestemplateshtml index templates api elasticco getindextemplatesrequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
asynchronously retrieves field mappings index indices using get field mapping api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicesgetfieldmappinghtml get field mapping api elasticco getfieldmappingsrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
retrieves mappings index indices using get mapping api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicesgetmappinghtml get mapping api elasticco getmappingsrequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
asynchronously closes index using close index api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicesopenclosehtml close index api elasticco closeindexrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
opens index using open index api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicesopenclosehtml open index api elasticco openindexrequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
asynchronously puts index template using index templates api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicestemplateshtml index templates api elasticco putindextemplaterequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
asynchronously flush one indices using flush api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicesflushhtml flush api elasticco flushrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
asynchronously force merge one indices using force merge api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicesforcemergehtml force merge api elasticco forcemergerequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion use forcemergeasyncforcemergerequest requestoptions actionlistener instead
refresh one indices using refresh api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicesrefreshhtml refresh api elasticco refreshrequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
asynchronously calls analyze api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicesanalyzehtmlanalyze api elasticco request request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
retrieve information one indexes see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicesgetindexhtml indices get index api elasticco getindexrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
retrieve settings one indices see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicesgetsettingshtml indices get settings api elasticco getsettingsrequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
asynchronously splits index using split index api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicessplitindexhtml split index api elasticco resizerequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
shrinks index using shrink index api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicesshrinkindexhtml shrink index api elasticco resizerequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
gets one aliases using get index aliases api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicesaliaseshtml indices aliases api elasticco getaliasesrequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
asynchronously clears cache one indices using clear cache api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicesclearcachehtml clear cache api elasticco clearindicescacherequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
updates mappings index using put mapping api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicesputmappinghtml put mapping api elasticco putmappingrequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
asynchronously deletes index using delete index api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicesdeleteindexhtml delete index api elasticco deleteindexrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
asynchronously opens index using open index api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicesopenclosehtml open index api elasticco openindexrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
updates aliases using index aliases api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicesaliaseshtml index aliases api elasticco indicesaliasesrequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
force merge one indices using force merge api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicesforcemergehtml force merge api elasticco forcemergerequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response use forcemergeforcemergerequest requestoptions instead
clears cache one indices using clear cache api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicesclearcachehtml clear cache api elasticco clearindicescacherequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
asynchronously updates specific index level settings using update indices settings api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrentindicesupdatesettingshtml update indices settings api elasticco updatesettingsrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
cancel one cluster tasks using task management api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrenttaskshtml task management api elasticco canceltasksrequest request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
asynchronously cancel one cluster tasks using task management api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrenttaskshtml task management api elasticco canceltasksrequest request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
asynchronously get current tasks using task management api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrenttaskshtml task management api elasticco request request options request options eg headers use requestoptionsdefault nothing needs customized listener listener notified upon request completion
get current tasks using task management api see hrefhttpswwwelasticcoguideenelasticsearchreferencecurrenttaskshtml task management api elasticco request request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
test verifies dont change default value connection request timeout causes problems see httpsgithubcomelasticelasticsearchissues24069
build mutable set containing nodegethost hosts use test
shutdown executor dont leak threads test runs
sends request elasticsearch cluster client points to doesnt wait response instead provided responselistener notified upon completion failure shortcut performrequestasyncstring string map httpentity responselistener header without request body method http method endpoint path request without host port params querystring parameters responselistener responselistener notify request completed fails headers optional request headers prefer performrequestasyncrequest responselistener
returns nonempty iterator nodes used request match nodeselector living nodes match nodeselector return dead node matches nodeselector closest revived ioexception nodes available
sends request elasticsearch cluster client points to blocks request completed returns response fails throwing exception selects host provided ones roundrobin fashion failing hosts marked dead retried certain amount time minimum 1 minute maximum 30 minutes depending many times previously failed the failures later retried case failures alive nodes or dead nodes deserve retry retried one responds none does case ioexception thrown method works performing asynchronous call waiting result asynchronous call throws exception wrap rethrow stack trace attached exception contains call site attempt preserve original exception isnt always possible likely havent covered cases get original exception exceptiongetcause method http method endpoint path request without host port params querystring parameters entity body request null applicable httpasyncresponseconsumerfactory httpasyncresponseconsumerfactory used create one httpasyncresponseconsumer callback per retry controls response body gets streamed nonblocking http connection client side headers optional request headers response returned elasticsearch ioexception case problem connection aborted clientprotocolexception case http protocol error responseexception case elasticsearch responded status code indicated error prefer performrequestrequest
select nodes try sorts first one tried initially following ones previous attempt failed on package private testing
add headers provided varargs argument request exists support methods exist backwards compatibility
replaces hosts client communicates prefer setnodescollection allows set metadata use nodeselectors
add parameters map request exists support methods exist backwards compatibility
tracks one last definitive failure returns caller notifying wrapped listener
called successful request call receives argument host used successful request
sends request elasticsearch cluster client points waits corresponding response returned shortcut performrequeststring string map httpentity header without request body method http method endpoint path request without host port params querystring parameters headers optional request headers response returned elasticsearch ioexception case problem connection aborted clientprotocolexception case http protocol error responseexception case elasticsearch responded status code indicated error prefer performrequestrequest
sends request elasticsearch cluster client points waits corresponding response returned shortcut performrequeststring string map httpentity header without parameters request body method http method endpoint path request without host port headers optional request headers response returned elasticsearch ioexception case problem connection aborted clientprotocolexception case http protocol error responseexception case elasticsearch responded status code indicated error prefer performrequestrequest
sends request elasticsearch cluster client points to doesnt wait response instead provided responselistener notified upon completion failure shortcut performrequestasyncstring string map httpentity responselistener header without parameters request body method http method endpoint path request without host port responselistener responselistener notify request completed fails headers optional request headers prefer performrequestasyncrequest responselistener
called failed attempt receives argument host used failed attempt
sends request elasticsearch cluster client points to request executed asynchronously provided responselistener gets notified upon request completion failure selects host provided ones roundrobin fashion failing hosts marked dead retried certain amount time minimum 1 minute maximum 30 minutes depending many times previously failed the failures later retried case failures alive nodes or dead nodes deserve retry retried one responds none does case ioexception thrown request request perform responselistener responselistener notify request completed fails
sends request elasticsearch cluster client points waits corresponding response returned shortcut performrequeststring string map httpentity httpasyncresponseconsumerfactory header doesnt require specifying httpasyncresponseconsumerfactory instance httpasyncresponseconsumerfactory used create needed instances httpasyncresponseconsumer method http method endpoint path request without host port params querystring parameters entity body request null applicable headers optional request headers response returned elasticsearch ioexception case problem connection aborted clientprotocolexception case http protocol error responseexception case elasticsearch responded status code indicated error prefer performrequestrequest
sends request elasticsearch cluster client points to request executed asynchronously provided responselistener gets notified upon request completion failure selects host provided ones roundrobin fashion failing hosts marked dead retried certain amount time minimum 1 minute maximum 30 minutes depending many times previously failed the failures later retried case failures alive nodes or dead nodes deserve retry retried one responds none does case ioexception thrown method http method endpoint path request without host port params querystring parameters entity body request null applicable httpasyncresponseconsumerfactory httpasyncresponseconsumerfactory used create one httpasyncresponseconsumer callback per retry controls response body gets streamed nonblocking http connection client side responselistener responselistener notify request completed fails headers optional request headers prefer performrequestasyncrequest responselistener
replaces nodes client communicates
sends request elasticsearch cluster client points to doesnt wait response instead provided responselistener notified upon completion failure shortcut performrequestasyncstring string map httpentity httpasyncresponseconsumerfactory responselistener header doesnt require specifying httpasyncresponseconsumerfactory instance httpasyncresponseconsumerfactory used create needed instances httpasyncresponseconsumer method http method endpoint path request without host port params querystring parameters entity body request null applicable responselistener responselistener notify request completed fails headers optional request headers prefer performrequestasyncrequest responselistener
add headers provided varargs argument request exists support methods exist backwards compatibility
sends request elasticsearch cluster client points to blocks request completed returns response fails throwing exception selects host provided ones roundrobin fashion failing hosts marked dead retried certain amount time minimum 1 minute maximum 30 minutes depending many times previously failed the failures later retried case failures alive nodes or dead nodes deserve retry retried one responds none does case ioexception thrown method works performing asynchronous call waiting result asynchronous call throws exception wrap rethrow stack trace attached exception contains call site attempt preserve original exception isnt always possible likely havent covered cases get original exception exceptiongetcause request request perform response returned elasticsearch ioexception case problem connection aborted clientprotocolexception case http protocol error responseexception case elasticsearch responded status code indicated error
waits up timeout result request either response exception
tests sending bunch async requests works well eg timeoutexception leased pool see httpsgithubcomelasticelasticsearchissues24069
verify credentials sent first request preemptive auth enabled default provided credentials
end end test headers test explicitly real http client different ways setadd headers orgapachehttpclienthttpclient exercises test http server ability send back whatever headers received
verify credentials not sent first request preemptive auth disabled
verify credentials continue sent even 401 unauthorized response received
creates curl output given request
logs request yielded response
creates curl output given response
logs request failed
get migration assistance one indices request request options request options eg headers use requestoptionsdefault nothing needs customized response ioexception case problem sending request parsing back response
randomize fetchsourcecontext request parameters
create plain node metadata parameters except host nullable implementations nodeselector need decide absence
requests full gc checks whether gc actually run request retries 5 times case gc run time
execute action locally returning task used track it linking tasklistener prefer method need access task listening response
execute action locally returning task used track it linking actionlistener prefer method dont need access task listening response method used implement client interface
get transportaction action throwing exceptions action isnt available
test method used generate put mapping java indices api documentation docsjavaapiadminindicesputmappingasciidoc documentation gets tested compiles runs without throwing errors runtime
single execution point all clients
establishes node connections validateinhandshake set true connection fail node returned handshake response different discovery node
adds list transport addresses used connect to node transport address represents used possible connect it unavailable automatically connected up order get list current connected nodes please see connectednodes
closes client
adds transport address used connect to node transport address represents used possible connect it unavailable automatically connected up order get list current connected nodes please see connectednodes
removes transport address list transport addresses used connect to
creates new transportclient given settings defaults plugins settings client settings defaultsettings default settings merged plugins added its additional settings plugins client plugins
test plugins provided want register namedwriteable also made known namedwriteableregistry transport client
sets sniffer instance used perform sniffing illegalstateexception sniffer already set set
sets task skipped returns true task skipped false task already started
cancels task returns true task successfully cancelled meaning wont executed execution wont effect returns false task cannot cancelled possibly already cancelled already completed
schedule sniffing run soon possible isnt already running sniffing round runs also schedule new round sniffafterfailuredelay ms
creates new builder instance providing restclient used communicate elasticsearch
sets delay sniff execution scheduled failure in milliseconds
creates sniffer based provided configuration
sets interval consecutive ordinary sniff executions milliseconds honoured sniffonfailure disabled failures consecutive sniff executions illegalargumentexception sniffintervalmillis greater 0
sets nodessniffer used read hosts default instance elasticsearchnodessniffer created provided method used change configuration elasticsearchnodessniffer provide different implementation eg case hosts need taken different source
calls elasticsearch nodes info api parses response returns found http hosts
returns defaultvalue attribute didnt come back true false come back either those throws ioexception attribute came back strange way
creates new instance elasticsearch sniffer use provided restclient fetch hosts nodes info api provided sniff request timeout value scheme restclient client used fetch hosts elasticsearch nodes info api usually instance also provided snifferbuilderrestclient hosts set client used sniff them sniffrequesttimeoutmillis sniff request timeout in milliseconds passed query string parameter elasticsearch allows halt request without failure nodes responded within timeout returned scheme scheme associate sniffed nodes as returned elasticsearch
tests sniffersniff method isolation verifies uses nodessniffer implementation retrieve nodes set when empty provided restclient instance
test behaviour bunch onfailure sniffing rounds triggered parallel run always schedule subsequent afterfailure round also onfailure round starts net scheduled round either afterfailure ordinary gets cancelled
test snifferclose shuts underlying scheduler calls idempotent also verifies next scheduled round gets cancelled
test multiple sniffing rounds mocking scheduler well nodessniffer simulates ordinary behaviour sniffer sniffing failure enabled countingnodessniffer doesnt make network connection may throw exception return nodes makes possible verify errors properly handled dont affect subsequent runs scheduling scheduler implementation submits rather scheduling tasks meaning doesnt respect requested sniff delays allowing assert requested delays requested run following one expected values
here verify order add fields document counts lexi order field means heavily accessed fields use field selector added first with load break
parse simple classpath two elements unix
make sure old unix classpath empty element implicitly cwd im looking 1x es scripts fails
parse simple classpath two elements windows
make sure bogus windows classpath element accepted javas classpath parsing accepts it therefore eclipse osgi code
make sure old windows classpath empty element implicitly cwd im looking 1x es scripts fails
spawns native controllers module environment node environment ioexception io error occurs reading module spawning native process
attempt spawn controller daemon given module spawned process remain connected jvm via stdin stdout stderr streams references streams available code outside package
cant execute processes
returns first cause guice error it multiple
method invoked elasticsearchmainstring startup elasticsearch
creates new instance
initialize native resources
add access path and files underneath it also creates directory exist policy current policy add permissions configurationname configuration name associated path for error messages only path path permissions set file permissions grant path
add access single file path policy current policy add permissions path path permissions set file permissions grant path
executes bootstrap checks node transport protocol bound nonloopback interface system property esenforcebootstrapchecks set true bootstrap checks enforced regardless whether transport protocol bound nonloopback interface context current node bootstrap context boundtransportaddress node network bindings
tests checks enforced boundtransportaddress node network bindings discoverytype discovery type true checks enforced
executes provided checks fails node enforcelimits true otherwise logs warnings system property esenforcebootstrapchecks set true bootstrap checks enforced regardless whether transport protocol bound nonloopback interface context current node boostrap context enforcelimits true checks enforced otherwise warned checks checks execute
executes provided checks fails node enforcelimits true otherwise logs warnings system property esenforcebootstrapchecks is set true bootstrap checks enforced regardless whether transport protocol bound nonloopback interface context current node boostrap context enforcelimits true checks enforced otherwise warned checks checks execute logger logger
main entry point starting elasticsearch
checks path permissions
test generated permissions
checks exact file permissions meaning path
configured dir symlink test permissions work link target
test generated permissions configured paths
adds console ctrl handler true handler correctly set javalangunsatisfiedlinkerror kernel32 library loaded native function found javalangnoclassdeffounderror library native calls missing
try install custom rule profile sandboxinit block execution
attempt drop capability execute process best effort os architecture dependent may throw throwable 0 application threads 1 entire process
try install bpf filters via seccomp prctl block execution
dont know codesources belong plugin remove permission key codebases like core testframework etc way tests fail accesscontroller blocks missing
return parsed classpath symlinks resolved destination files matching matching torealpath code proper plugin structure
add codebase url given classname codebases map class exists
returns readonly view system properties
add dynamic socketpermissions based http transport settings policy permissions instance apply dynamic socketpermissions to settings settings instance read http transport settings
sets properties codebase urls policy files look matching plugins set urls fit
return map codebase name codebase url jar codebases used es core
simple checks everything ok
adds access configurable paths
add dynamic socketpermission based transport settings policy permissions instance apply dynamic socketpermissions settings settings instance read transport settings
reads returns specified policyfile jar files listed codebases location provided policy file via system property short name eg codebasejodaconvert12jar would map full url
add dynamic socketpermission based transport settings method first check port range specified transport profile specified profilesettings fall back settings policy permissions instance apply dynamic socketpermissions settings settings instance read transport settings
adds access classpath jarsclasses jar hell scan etc
add dynamic socketpermission based http settings policy permissions instance apply dynamic socketpermissions to settings settings instance read http settings
add dynamic socketpermission specified port range policy permissions instance apply dynamic socketpermission to portrange port range
initializes securitymanager environment happen once environment configuration generating dynamic permissions filterbaddefaults true filter bad java defaults system policy
returns dynamic permissions configured paths bind ports
ensures configured directory path exists ioexception path exists directory accessible broken symbolic link
retrieves short path form specified path path path short path name or original path getting short path name fails reason
returns true user root false not dont know
retrieves short path form specified path path path short path name or original path getting short path name fails reason
test restricting privileges permissions actually works
two plugins one controller daemon one without
simplest case module controller daemon
test null location unclear whenif happens see httpsbugsopenjdkjavanetbrowsejdk8129972
test policy null codesource happen restricting privileges doprivileged even though protectiondomains ctor javadocs might make think policy wont consulted
inspect manifest sure incompatibilities
checks java specification version targetversion required resource compatible current installation
checks set urls duplicate classes urls set urls classpath checked conflicting jars output string consumer debug output sent illegalstateexception jar hell found
checks current classpath duplicate classes output string consumer debug output sent illegalstateexception jar hell found
parses classpath set urls testing classpath classpath parse typically system property javaclasspath array urls illegalstateexception classpath contains empty elements
simple driver class used eg builds returns nonzero jarhell
construct instance preimplies check apply desired permissions baddefaultpermission bad default permission wrap preimplies test applied desired permission checking bad default permission instance wraps implies desired permission
uwe schindler algorithm status exit status
creates binary response
return cors setting array origins corssetting cors allow origin setting configured user never pass null check anyway array origins set otherwise null
determine cors setting regex corresponding pattern ow null
helper decode half hexadecimal number string c ascii character hexadecimal number decode must range 09afaf hexadecimal value represented ascii character given charactermaxvalue character invalid
decodes bit url encoded browser string expected encoded per rfc 3986 section 2 encoding used javascript functions encodeuri encodeuricomponent escape example encoding in unicode u00e9 utf8 0xc3 0xa9 encoded c3a9 c3a9 essentially equivalent calling javaneturldecoder urldecoder javaneturldecoderdecodestring string except its 2x faster generates less garbage gc actually function doesnt allocate memory theres nothing decode argument returned string decode can empty charset charset use decode string should really standardcharsetsutf8 decoded string s theres nothing decode string decode null returns empty string illegalargumentexception string contains malformed escape sequence
get content request contents source param throw exception missing prefer contentorsourceparamparser withcontentorsourceparamparserornullcheckedconsumer need parser
creates new rest request path decoded constructor throw badparameterexception xcontentregistry content registry httprequest http request httpchannel http channel contenttypeheaderexception contenttype header parsed
parser contents request contents otherwise parser source parameter one otherwise throws elasticsearchparseexception use withcontentorsourceparamparserornullcheckedconsumer instead need handle absence request content gracefully
content call applyparser parser otherwise nothing
xcontenttype parsed contenttype header value null case request without valid contenttype header request without content hascontent plain text request
parser contents request body otherwise throws elasticsearchparseexception use applycontentparsercheckedconsumer want gracefully handle request doesnt contents use contentorsourceparamparser requests support specifying request body source param
returns list parameters yet consumed method returns copy callers free modify returned list list currently unconsumed parameters
get value header null found method retrieves first header value multiple values sent use getallheadervaluesstring preferred
call consumer parser contents request contents otherwise parser source parameter one otherwise null use contentorsourceparamparser throw exception back user isnt request content
get values header null header found
content request body throw exception body content type missing
creates new rest request method throw badparameterexception path cannot decoded xcontentregistry content registry httprequest http request httpchannel http channel badparameterexception parameters decoded contenttypeheaderexception contenttype header parsed
returns custom headers added method used mutate headers
add custom header
registers rest handler executed provided method path match request method get post etc path path handle eg indextypebulk handler handler actually execute deprecationmessage message log send header response logger existing deprecation logger use
registers rest handler executed provided method path match request provided deprecatedmethod deprecatedpath expected usage remove deprecation next major release controllerregisterwithdeprecatedhandlerpost forcemerge this post optimize deprecationlogger controllerregisterwithdeprecatedhandlerpost indexforcemerge this post indexoptimize deprecationlogger registered rest handler method path normal rest handler deprecated replacing deprecated rest handler deprecatedmethod deprecatedpath using same handler deprecated rest handlers without direct replacement deprecated directly using registerasdeprecatedhandler specific message method get post etc path path handle eg forcemerge handler handler actually execute deprecatedmethod get post etc deprecatedpath deprecated path handle eg optimize logger existing deprecation logger use
checks request parameters enabled settings error trace support true request parameters conflict system settings
dispatch request possible returning true response sent false otherwise
handle requests valid rest endpoint using unsupported http method 405 http response code returned response allow header includes list valid http methods endpoint see hrefhttpstoolsietforghtmlrfc2616section1046http11 1046 405 method allowed
handle requests candidate handlers return 400 bad request error
request contains content method return true contenttype header present matches xcontenttype handler supports content stream content type header newline delimited json
get valid set http methods rest request
registers rest handler executed one provided methods path match request path path handle eg indextypebulk handler handler actually execute method get post etc
handle http options requests valid rest endpoint 200 http response code returned response allow header includes list valid http methods endpoint see hrefhttpstoolsietforghtmlrfc2616section92http11 92 options
construct channel handling request request request detailederrorsenabled detailed errors reported channel illegalargumentexception parsing pretty human parameters fails
channel level bytes output reused bytes output lazily instantiated call newbytesoutput stream created gets reset call method
creates new xcontentbuilder response sent using channel builders type determined following logic request format parameter used attempt map xcontenttype format parameter http accept header checked see matched xcontenttype first attempt map fails request content type used value null value null output format falls back json
add handler additional array methods note methodhandlers allow replacing handler already existing method
add additional method handler existing path note methodhandlers allow replacing handler already existing method
requests valid rest endpoint using unsupported http method verify 405 http response code returned response allow header includes list valid http methods endpoint see hrefhttpstoolsietforghtmlrfc2616section1046http11 1046 405 method allowed
create character array characters from to starting code point inclusive ending code point inclusive never null
create deprecationresthandler encapsulates handler using deprecationlogger log deprecation warning handler rest handler deprecate its possible handler reused different name deprecationmessage message warn users use handler deprecationlogger deprecation logger nullpointerexception parameter except deprecationmessage null illegalargumentexception deprecationmessage valid header
usage logged via deprecationlogger actual response notified deprecation well
basic pass validating headers value contains expected characters according rfc5987 references httpstoolsietforghtmlrfc5987 expected used assertions idea readable usascii characters expected rest must encoded percent encoding makes checking valid character range simple value header value check true value obviously wrong
throw exception value validheadervaluestring valid header value header value check always value illegalargumentexception value validheadervaluestring valid header
build instance doesnt support responses status 201 created
build instance support responses status 201 created
parses top level query including query element wraps
create xcontent header basenodesresponse builder xcontent builder params xcontent parameters response response containing individual nodelevel responses buildnodesheaderxcontentbuilder params int int int list
automatically transform toxcontentcompatible nodeslevel response bytesrestresponse looks like nodes clustername builder xcontent builder params xcontent parameters response nodeslevel plural response never null ioexception building response causes issue
create xcontent header basenodesresponse looks like nodes total 3 successful 1 failed 2 failures prefer overload properly invokes method calling directly builder xcontent builder params xcontent parameters total total number nodes touched successful successful number responses received failed number failures effectively total successful failures failure exceptions related failed buildnodesheaderxcontentbuilder params basenodesresponse
buildrecoverytable build table recovery information suitable displaying command line request rest request response recovery status response table containing index shardid node target size recovered size percentage recovering replica
extracts required fields restrequest h parameter order support wildcards like bulk needs potentially parse configured headers aliases needs ensure everything added returned headers even hbulkbulk specified headers contained twice due matching aliases
helper method find included fieldmapping metadata typed null means type index exist field
standard listener extensions listtasksresponse supports groupbynodes
parses multiline restrequest body instantiating searchrequest line applying given consumer
parses restrequest body returns multisearchrequest
parses rest request top searchrequest preserving values overridden rest request requestcontentparser body request read method attempt read body request parameter setsize size url parameter handled udpatebyquery regular search differ here
parses rest request top searchsourcebuilder preserving values overridden rest request
get instance noopactionlistener cast appropriately
method called task manager task cancelled
reason task cancelled null hasnt cancelled
read stream
convert getresponse xcontent map easy processing return empty map task finished error hasnt yet finished didnt store result
convert geterror xcontent map easy processing return empty map task didnt finish error hasnt yet finished didnt store result
builds emptytaskid
read plain taskid stream plain taskid rather usual constructor takes plain streaminput return emptytaskid without allocating
build version task status throw wire back user localnodeid id node task running detailed information include detailed potentially slow generate data
build proper taskinfo task
removes ban specified parent task method called previously banned task finally cancelled
stores task failure
marks task cancelled returns true cancellation successful false otherwise
bans tasks specified parent task execution cancels tasks currently executing method called parent task children cancelled
cancels task returns true cancellation started successful null otherwise starting cancellation parent task task manager tries cancel children tasks current task cancellation children tasks done listener triggered
stores task result
returns cancellable task given id null task found
returns task given id null task found
marks task finished
returns list currently running tasks node
returns list currently running tasks node cancelled
unregister task
blocks calling thread waiting task vanish taskmanager
registers task without parent task
read stream
test parsing listtasksresponse inner failures dont support asserting xcontent equivalence given exceptions parsed back original class run usual abstractxcontenttestcasetestfromxcontent without failures test failures disable asserting xcontent equivalence end
test parsing listtasksresponse inner failures dont support asserting xcontent equivalence given exceptions parsed back original class run usual abstractxcontenttestcasetestfromxcontent without failures test failures disable asserting xcontent equivalence end
tests recovery index without translog statistics gather that
tests single document survives super basic smoke test
tests snapshotrestore creating snapshot restoring it takes snapshot old cluster restores old cluster sanity check new cluster upgrade test also takes snapshot new cluster restores new cluster test repository ok containing snapshot old new versions snapshots include index template routing configuration
tests single empty shard index correctly recovered empty shards often edge case
search alias contains illegal characters would prevent created 510 still searchable though
wait index green health waiting longer esresttestcaseensuregreen
test creating trial license using it interesting tests test cover starting new cluster default distribution enabling trial license test one upgrade oss distribution default distribution xpack create trial license dont do lot trial license part things tested elsewhere xpack use trial license little bit make sure works
test basic feature sql doesnt require trial license note test methods class run order might already installed trial license
waits machine learning templates created orgelasticsearchpluginsmetadataupgrader
master upgraded new version
test verifies cluster upgraded incrementally new documents eventually switch new form id 128 bit murmur3 ids rollup ids essentially hashed concatenation keys returned composite aggregation field values indexed timestamp value etc directly affect id generated dont know node get rollup task start dont know migrate first doc guaranteed old style since nodes unupgraded second third phase mixed cluster rollup task may may migrate phases two options old new document added phase last phase guaranteed new its fully upgraded cluster
constructor parses string key its name modifiers key key without leading trailing example a
copy constructor explicitly override modifier key key copy except modifier modifier modifer use copy
add keyvalue found result parsing key dissectkey value discovered value key
gets current matches pass results isvalid determine fully successful match occured map results
borrowed logstashs test cases httpsgithubcomlogstashpluginslogstashfilterdissectblobmastersrctestjavaorglogstashdissectdissectortestjava append note logstash appends delimiter separator values uses user defined separator
shared specification beats logstash ingest node
runtime errors
construction errors
entry point dissect string its parts inputstring string dissect keyvalue map results dissectexception unable dissect pair its parts
copy contents given inputstream given outputstream closes streams done stream copy stream copy number bytes copied ioexception case io errors
deletes one files directories and everything underneath it ioexception given files or subhierarchy files case directories cannot removed
closes given closeables nonnull exception passed in closing stream causes exception throws exception runtimeexception ioexception exceptions added suppressed ex existing exception add exceptions occurring close objects objects close closecloseable
closes given closeables suppressing thrown exceptions objects objects close closewhilehandlingexceptioncloseable
deletes given files suppressing thrown ioexceptions files may null ignored files paths files delete
ensure writes given file written storage device contains it isdir parameter specifies whether path sync directory needed open read ignore ioexception since filesystems operating systems support fsyncing directory regular files must open write fsync effect filetosync file fsync isdir true given file directory we open read ignore ioexceptions file systems operating systems allow fsync directory
generates random monitoringdoc given xcontenttype
generates random monitoringdocnode
generates random monitoringdoc given xcontenttype bytesreference source monitoredsystem type
generates random monitoringdoc given xcontenttype bytesreference source monitoredsystem
generates random monitoringdoc given xcontenttype bytesreference source
returns names indices monitoring collects data from array indices
indicates current collector allowed collect data iselectedmaster true current local node elected master node
creates monitoringdocnode discoverynode timestamp copying required information timestamp nodes timestamp node discoverynode monitoringdocnode instance null given discovery node null
returns value collection timeout configured current collector collection timeout null collector timeout defined
compute id format stateuuidnodeid naindexshardp r
create simple hash value used determine nodes listing changed since last report nodes nodes cluster state hash code value whose value used determine node listing changed including node restarts
asserts monitoring document provided map contains common information monitoring documents must
assert indicesstatsmonitoringdoc contains expected information
disable monitoring service local exporter
monitoring bulk api test test uses monitoring bulk api index document external application like kibana would do ensure documents correctly indexed expected information
monitoring service test test waits monitoring service collect monitoring documents checks expected documents indexed expected information
assert shardmonitoringdoc contains expected information
enable monitoring service local exporter waiting monitoring documents indexed returns
assert clusterstatsmonitoringdoc contains expected information
returns searchhit content map object
assert indexrecoverymonitoringdoc contains expected information
executes given runnable monitoring exporters ready functional ensure exporters monitoring service shut runnable executed
assert indexstatsmonitoringdoc contains expected information
asserts sourcenode information provided map monitoring document correspond current local node information
assert nodestatsmonitoringdoc contains expected information
assert two monitoringdoc equal default uses monitoringdocequalsobject monitoringdochashcode methods also checks xcontent equality
test monitoringdoc rendered using toxcontenttoxcontentxcontentbuilder toxcontentparams contain common set fields
asserts xcontent filters filteredmonitoringdoc contains common filters expected custom ones
flush exporting bulk
add documents exporting bulk
close exporting bulk
return settings exporters matter http local
exports collection monitoring documents using configured exporters
create unique watch id load watchid resource replacing variables clusters uuid clusterservice cluster service used fetch latest cluster state watchid watchs id never null key unique watch id value watch source runtimeexception watch exist
get blacklisted cluster alerts id config exporters configuration used settingsexception never null empty settingsexception unknown cluster alert id exists blacklist
test creates n threads export random number document using exporters instance
perform publishablehttpresourcedocheckrestclient docheck resource expecting delete assert returns exists given reststatus reststatusok reststatusnotfound resource resource execute resourcebasepath base endpoint eg template resourcename resource name eg template pipeline name
perform publishablehttpresourcedocheckrestclient docheck resource assert returns exists given reststatus reststatusok resource resource execute resourcebasepath base endpoint eg template resourcename resource name eg template pipeline name
perform publishablehttpresourcedocheckrestclient docheck resource throws exception assert returns error resource resource execute resourcebasepath base endpoint eg template resourcename resource name eg template pipeline name
perform publishablehttpresourcedopublishrestclient dopublish resource assert returns true given reststatus reststatusok reststatuscreated resource resource execute resourcebasepath base endpoint eg template resourcename resource name eg template pipeline name bodytype request body providers type
perform publishablehttpresourcedocheckrestclient docheck resource throws exception assert returns errpr performing delete rather common get resource resource execute resourcebasepath base endpoint eg template resourcename resource name eg template pipeline name
perform publishablehttpresourcedopublishrestclient dopublish resource assert returns false given reststatus neither reststatusok reststatuscreated resource resource execute resourcebasepath base endpoint eg template resourcename resource name eg template pipeline name bodytype request body providers type
perform publishablehttpresourcedocheckrestclient docheck resource assert returns doesnotexist given reststatus reststatusok resource resource execute resourcebasepath base endpoint eg template resourcename resource name eg template pipeline name
perform publishablehttpresourcedopublishrestclient dopublish resource throws exception assert returns false resource resource execute resourcebasepath base endpoint eg template resourcename resource name eg template pipeline name
create new securityhttpclientconfigcallback credentialsprovider credential provider usernamepassword supplied sslstrategy ssl strategy ssl tls supplied nullpointerexception sslstrategy null
get credentialsprovider added http client null
sets plain httpasyncclientbuildersetdefaultcredentialsprovidercredentialsprovider credential provider plain httpasyncclientbuildersetsslcontextsslcontext ssl context plain httpasyncclientbuildersetsslhostnameverifierhostnameverifier ssl hostname verifier httpclientbuilder client configure always httpclientbuilder
resource currently plain isdirty dirty check and necessary publish httpresource expected usage resourcecheckandpublishifdirtyclient use client resources verified client rest client make requests true resource available use false stop
invoked checkandpublishifdirtyrestclient block incase checkandpublishrestclient middle plain statechecking checking unlike isdirty checkandpublishifdirtyrestclient synchronized order prevent doubleexecution invokes checkandpublishrestclient its plain statedirty dirty client rest client make requests true resource available use false stop
create new httpresource dirty resourceownername userrecognizable name dirty whether resource dirty
check and necessary publish httpresource perform check regardless plain isdirty dirtiness update dirtiness using directly useful ever need doublecheck dirtiness without plain markdirty mark dirty mark dirty running eg asynchronously something invalidates resource resource still dirty end success still return based checks ran client rest client make requests true resource available use false stop isdirty
determine response contains watch whose value expects response like metadata xpack version 6000002 response filtered response get watcher api xcontent xcontent parser use minimumversion minimum version allowed without replaced expected last updated version true represents replaced false left alone ioexception issue occurs parsing xcontent response runtimeexception response format changed
publish missing plain watchid watch
determine current plain watchid watch exists
create new clusteralerthttpresource resourceownername userrecognizable name watchid name watch lazily loaded watch watch provider null indicates always delete watch
reach remote cluster determine usability watcher client rest client make requests never null
create watcherexistshttpresource resourceownername userrecognizable name watches watches create watcher available enabled
determine watcher exists exists exist doesnotexist response filtered response xpack info api xcontent xcontent parser use true represents used false cannot used ioexception issue occurs parsing xcontent response runtimeexception response format changed
add watches remote cluster
determine xpack installed and so watcher available and enabled used available enabled mark exists followon work performed relative watcher thing current node elected master node
logs every error fields value hits end array parser bulk response parser ioexception parsing error occurs
log obvious failures future queue replayable failures
success relative bulk responses unless its rejected outright returns 200 individual documents fail since know were making them means
create new httphost current scheme host port never null illegalstateexception host unset
set host httphost attempt parse host way host host use always this nullpointerexception host null
set port httphost specifying port 1 cause defaulted 9200 httphost built port port use always this illegalargumentexception port 1 1 65535
set scheme aka protocol httphost scheme scheme use always this nullpointerexception scheme null
create new httphost based supplied host uri partial uri used build nullpointerexception uri null illegalargumentexception issue occurs parsing uri
create new publishablehttpresource resourceownername userrecognizable name mastertimeout timeout use request baseparameters base parameters specify request dirty whether resource dirty
determine current resource replaced checked one based version or lack thereof expects response like where resourcename replaced value resourcename version 6000002 response filtered response templatename ingestpipelinename resource apis xcontent xcontent parser use resourcename name looked resource expected toplevel key minimumversion minimum version allowed without replaced expected last updated version true represents replaced false left alone ioexception issue occurs parsing xcontent response runtimeexception response format changed
determine current resourcename exists resourcebasepath endpoint provides baselevel check resource cares existence also contents client rest client make requests logger logger use status messages resourcebasepath base pathendpoint check resource eg template any resourcename name resource eg template123 resourcetype type resource eg monitoring template resourceownername userrecognizeable resource owner resourceownertype type resource owner dealt eg monitoring cluster exists response codes represent exists doesnotexist response codes represent doesnotexist never null pair containing checked response returned response response ever null none returned simplecheckforresourcerestclient logger string string string string string
upload resourcename resourcebasepath endpoint client rest client make requests logger logger use status messages resourcebasepath base pathendpoint check resource eg template resourcename name resource eg template123 body httpentity makes body request resourcetype type resource eg monitoring template resourceownername userrecognizeable resource owner resourceownertype type resource owner dealt eg monitoring cluster
create new publishablehttpresource plain isdirty dirty resourceownername userrecognizable name mastertimeout master timeout use request baseparameters base parameters specify request
determine current resourcename exists resourcebasepath endpoint version greater equal expected version provides baselevel check resource need care response beyond existence and likely need inspect contents expects responses form of resourcename version 6000002 client rest client make requests logger logger use status messages resourcebasepath base pathendpoint check resource eg template resourcename name resource eg template123 resourcetype type resource eg monitoring template resourceownername userrecognizeable resource owner resourceownertype type resource owner dealt eg monitoring cluster xcontent xcontent used parse response minimumversion minimum version allowed without replaced expected last updated version never null
determine current resourcename exists resourcebasepath endpoint provides baselevel check resource need care response beyond existence and likely need inspect contents client rest client make requests logger logger use status messages resourcebasepath base pathendpoint check resource eg template resourcename name resource eg template123 resourcetype type resource eg monitoring template resourceownername userrecognizeable resource owner resourceownertype type resource owner dealt eg monitoring cluster never null
determine current resourcename exists resourcebasepath endpoint version greater equal expected version provides baselevel check resource need care response beyond existence and likely need inspect contents expects responses form of resourcename version 6000002 client rest client make requests logger logger use status messages resourcebasepath base pathendpoint check resource eg template resourcename name resource eg template123 resourcetype type resource eg monitoring template resourceownername userrecognizeable resource owner resourceownertype type resource owner dealt eg monitoring cluster responsechecker determine resource replaced given response never null
delete resourcename using resourcebasepath endpoint note callers add ignore parameter request 404 exception therefore considered successful its found override behavior specifying valid value ignore point 404 responses result false logged failure client rest client make requests logger logger use status messages resourcebasepath base pathendpoint check resource eg template resourcename name resource eg template123 resourcetype type resource eg monitoring template resourceownername userrecognizeable resource owner resourceownertype type resource owner dealt eg monitoring cluster true successfully deleted item otherwise false
perform whatever necessary check publish publishablehttpresource client rest client make requests true resource available use false stop
create new mockhttpresource resourceownername userrecognizable name dirty starting dirtiness resource check expected response checking resource publish expected response publishing resource assumes check checkresponsedoesnotexist mastertimeout master timeout use request parameters base parameters specify request
create new mockhttpresource starts dirty resourceownername userrecognizable name check expected response checking resource publish expected response publishing resource assumes check checkresponsedoesnotexist mastertimeout master timeout use request parameters base parameters specify request
ensure response contains version plain versiononorafterversion after minimumversion response response parse true remote cluster running supported version nullpointerexception response malformed classcastexception response malformed ioexception parsing issue occurs
verify minimum version supported remote cluster not nothing done except wait does publishing aspect operation
create new versionhttpresource resourceownername userrecognizable name minimumversion minimum supported version elasticsearch
determine current plain pipelinename pipeline exists
publish current plain pipelinename pipeline
create new pipelinehttpresource resourceownername userrecognizable name mastertimeout master timeout use request pipelinename name template eg pipeline123 pipeline pipeline provider
get httpresource notified upon node failure null
get sniffer notified upon node failure null
create multihttpresource resourceownername userrecognizable name resources subresources aggregate
check publish plain resources subresources
node elected master node never check watcher send watches cluster alerts
sets plain buildersetconnecttimeoutint connect timeout plain buildersetsockettimeoutint socket timeout requestconfigbuilder request configure always requestconfigbuilder
create new timeoutrequestconfigcallback connecttimeout initial connection timeout supplied sockettimeout socket timeout supplied
get initial connection timeout null default 1 second
get socket timeout null default 10 seconds
adds resources necessary checking publishing cluster alerts config http exporters configuration resourceownername resource owner name display logging messages resources resources add too
create httpexporter config http exporters configuration sslservice ssl service used create ssl context necessary tls ssl communication listener node failure listener used notify optional sniffer resources settingsexception setting malformed
adds validator sslsetting prevent dynamic updates secure settings also exist within setting groups ssl context possible reread secure settings dynamic update cannot rebuild ssliosessionstrategy see configuresecurityrestclientbuilder config sslservice exporter configured secure settings
adds resources necessary checking publishing monitoring templates config http exporters configuration resourceownername resource owner name display logging messages resources resources add too
create httpexporter config http exporters configuration client rest client used make requests remote elasticsearch cluster sniffer optional sniffer already associated listener listener node failure listener used notify resources resource blocking http resource prevent bulks requirements met settingsexception setting malformed
create httphosts connected too config exporters configuration never null empty settingsexception setting malformed host set
create sniffer http exporters config client config http exporters configuration client rest client sniff listener node failure listener used help improve sniffing null sniffer disabled indexoutofboundsexception plain hostsetting hosts set
create multihttpresource used block bulk exporting expected resources available config http exporters configuration never null
create restclientbuilder http exporters config config http exporters configuration sslservice ssl service used create ssl context necessary tls ssl communication listener node failure listener used log node failures never null settingsexception required setting missing setting malformed
configure restclientbuilder use initial connection socket timeouts builder rest client builder configure config exporters configuration
create default parameters use bulk indexing operations config exporters configuration never null empty
determine httpexporter ready use true ready false not
configure restclientbuilder use plain credentialsprovider user authentication andor plain sslcontext ssl tls builder rest client builder configure config exporters configuration sslservice ssl service used create ssl context necessary tls ssl communication settingsexception setting causes issues
create httpexporter config http exporters configuration client rest client used make requests remote elasticsearch cluster listener node failure listener used notify optional sniffer resources settingsexception setting malformed
creates optional credentialsprovider usernamepassword use all requests user authentication config exporters configuration null username password provided otherwise credentialsprovider use settingsexception username missing password supplied
configures plain restclientbuildersetdefaultheadersheader default headers use all requests builder rest client builder configure config exporters configuration settingsexception header plain blacklistedheaders blacklisted
adds resources necessary checking publishing monitoring pipelines config http exporters configuration resourceownername resource owner name display logging messages resources resources add too
determine scheme scheme scheme http schemefromstringhttp scheme https schemefromstringhttps scheme httpscaps schemefromstringhttps https scheme scheme check never null nullpointerexception scheme null illegalargumentexception scheme supported
determine current plain templatename template exists relevant version expected monitoringtemplateutilslastupdatedversion
publish missing plain templatename template
create new templatehttpresource resourceownername userrecognizable name mastertimeout master timeout use request templatename name template eg template123 template template provider
determine cluster use watcher true use cluster alerts
elected master setup resources mapping types templates pipelines attempt run exporter resources exist create them clusterstate current cluster state templates template names exist clusterstatechange true cluster state change caused call dont block it true indicates resources ready exporter used false stop wait
install cluster alerts watches cluster asyncactions asynchronous actions added watch pendingresponses pending response countdown use track completion
create pipeline required handle past data well futureproof ingestion current documents the pipeline initially empty replaced later one translates asneeded invoked elected master node whenever eventually make backwards incompatible change need override pipeline already exists older one uses elasticsearch version alpha portion determine version last change description pipelines version 6000001
elected master require resources mapping types templates pipelines available attempt run exporter resources exist means elected masters exporter yet run monitoring cluster this one local exporter setup yet clusterstate current cluster state templates template names exist true indicates resources available exporter used false stop wait
determine localexporter ready use true ready false not
determine ingest pipeline pipelineid exists cluster appropriate minimum version clusterstate current cluster state pipelineid id pipeline check eg 3 true clusterstate contains pipeline appropriate minimum version
create new localexporter expected usage final settings settings settingsbuilderputxpackmonitoringexporterslocaltype localbuild try localexporter exporter createlocalexporterlocal settings never null
checks monitoring templates created local exporter
checks monitoring documents clusteruuid timestamp sourcenode fields belongs right data timestamped index
checks monitoring ingest pipelines created local exporter
generates basic template loosely represents monitoring template
create pipeline nothing whose description literally test version version add pipeline never null
creates monitoringbulkrequest given number monitoringbulkdoc it monitoringbulkrequest
iterate list monitoringbulkdoc create corresponding list monitoringdoc
create monitoringdoc monitoringbulkdoc bulkdoc monitoringbulkdoc monitoringdoc export
exports documents
test allow strings logstash 52 53 would submit empty id values timebased documents
creates watcher history index current version
creates watcher history index specified version
creates monitoring timestamped index using given template version
cancelstop cleaning service kill scheduled future running its possible executed concurrently onafter rescheduling code point stopped next execution if service stopped
set global retention expected used cluster settings dynamically control global retention time even current license prevents retention updates accept change need reset upgrade license they always unset it globalretention global retention use dynamically
get retention used ignore global retention license allow retention updates never null xpacklicensestateisupdateretentionallowed
reschedule cleaner service stopped
indicate given monitoredsystem system api version pair supported monitoring bulk api system monitoredsystem version system api version true supported false otherwise
combines msearch rollup live aggregations searchresponse representing union two responses response format identical nonrollup search response aka normal aggregation response msearch response returns following took228 timedoutfalse shards hits aggregations histo buckets keyasstring20170515t000000000z key1494806400000 doccount1 themax value10 took205 timedoutfalse shards hits aggregations filterhisto doccount1 histo buckets keyasstring20170514t000000000z key1494720000000 doccount1 themax value199950 histocount value10e9 would collapsed into took 228 timedout false shards hits aggregations histo buckets keyasstring 20170514t000000000z key 1494720000000 doccount 1000000000 themax value 19995 keyasstring 20170515t000000000z key 1494806400000 doccount 1 themax value 1 essentially takes conventions listed rolluprequesttranslator processes final product looks like regular aggregation response allowing reducedmerged response unrolled index msearchresponses responses msearch first response liveindex response
helper method unrolls generic multibucket agg prefer use overload consumer api source rolled aggregation wish unroll bucketfactory trifunction generates new buckets given type multibucket
unrolls multibucket aggregations eg terms histograms etc overload signature called internal methods class rather directly calling pertype methods
verifies liveonly search response essentially checks failure returns response since work
takes aggregation rollup conventions unrolls normal agg tree rolled rollup aggregation wish unroll originalagg unrolled live aggregation if exists matches current rolled aggregation count doccount rolled required aggs eg avg unrolled aggregation mimics structure base allowing reduction
translates rolluponly search response back expected convention similar combineresponsesmultisearchresponseitem internalaggregationreducecontext except deal rollup response no live response see combineresponsesmultisearchresponseitem internalaggregationreducecontext details translation conventions
takes aggregation rollup conventions unrolls normal agg tree rolled rollup aggregation wish unroll original unrolled live aggregation if exists matches current rolled aggregation unrolled aggregation mimics structure base allowing reduction
generic method help iterate subaggregation buckets recursively unroll bucket current bucket wish unroll
translates leaf aggs minmaxsumetc rollup version simple aggs like min nearly 11 copy source deserialized new object field adjusted according convention eg min agg themin min field somefield translation would be themin min field somefieldminvalue however avg metrics and potentially others future agg translated sum sum aggs one count one sum unrolling combined back single avg note also rename avg agg name distinguish empty buckets eg avg agg theavg avg field somefield translation would be theavgvalue sum field somefieldavgvalue theavgcount sum field somefieldavgcount conventions are agg type source agg named source agg field aggtypefieldnamevalue agg avgagg following additional conventions added agg type becomes sumagg instead avgagg named source namevalue additionally extra sumagg added named source namecount field field nameagg typecount metric source leaf aggregation wish translate registry registry namedwriteables simple serializedeserialize leafs easily clone translated leaf aggregation
generic method actual heavylifting translating multibucket valuesourcebuilder method called aggspecific methods eg translatedatehistogram source source aggregation wish translate filterconditions list existing filter conditions case need add particular agg registry named registry serializing leaf metrics actually used method passed downwards leaf usage factory factory closure generates new shallow clone source eg source datehistogram factory take return new datehistogramaggbuilder matching parameters deep clone however returned object wont children set type valuesourceaggbuilder working translated multibucket valuesourceaggbuilder
translates nonrollup aggregation tree rollupenabled agg tree example source aggregation may look like this post foorollupsearch aggregations thehisto datehistogram field ts interval 1d aggs themax max field foo translated aggregation looking like this post rolledfoosearch aggregations filterhisto filter bool must term rollupversion 1 term tsdatehistograminterval 1d aggregations thehisto datehistogram field tsdatehistogramtimestamp interval 1d aggregations thehistocount sum field tsdatehistogramcount themax max field foomaxvalue various conventions applied translation elucidated comments relevant method below source source aggregation translate rollupenabled version filterconditions list used track filter conditions subaggs may require registry registry containing various aggregations easily deserialize stream cloning returns fully translated aggregation tree note returns list instead single aggbuilder since aggregations eg avg may result two translated aggs sum count
translate normal datehistogram one follows rollup conventions notably adds sum metric calculate doccount bucket eg datehistogram post foorollupsearch aggregations thehisto datehistogram field ts interval day translated into post rolledfoosearch aggregations thehisto datehistogram field tsdatehistogramtimestamp interval day aggregations thehistocount sum field tsdatehistogramcount conventions are named source histogram field timestamp fielddatehistogramtimestamp add sumaggregation bucket named parent histogram namecount field timestamp fielddatehistogramcount add filter condition query type termquery field timestampfielddatehistograminterval value source interval
translate normal histogram one follows rollup conventions notably adds sum metric calculate doccount bucket conventions identical datehistogram excepting datespecific details see translatedatehistogramdatehistogramaggregationbuilder list namedwriteableregistry complete list conventions examples etc
translate normal terms agg one follows rollup conventions notably adds metadata terms sum metric calculate doccount bucket eg terms agg post foorollupsearch aggregations theterms terms field foo translated into post rolledfoosearch aggregations theterms terms field footermsvalue aggregations thetermscount sum field footermscount conventions are named source terms agg field field nametermsvalue add sumaggregation bucket named parent terms namecount field field nametermscount
find set datehistos largest granularity interval
find set histos largest interval
ensure metrics supported one job caps notion best caps metrics either supported not
ensure terms aggregation supported one job caps notion best caps terms either supported not
given aggregation tree list available job capabilities method return set best jobs searched recursively descending aggregation tree independently pruning list valid job caps branch leaf node reached branch remaining jobs sorted bestness see getcomparator implementation added global set best jobs branches evaluated final set returned calling code job bestness is briefly jobs larger compatible date interval fewer larger interval histograms fewer terms groups note final set best jobs guaranteed minimal may redundant effort due independent branches choosing jobs subsets branches source source aggregation trying find jobs jobcaps total set available job caps indexindices set best jobs total job caps
lifted estestcase s dont reuse anywhere create copy original searchsourcebuilder object running bytesstreamoutput reading using writeablereader stream wrapped around streaminput potentially need use namedwriteableregistry needs provided
check see persistenttasks cluster state contains rollup jobs interested
helper method used startstop transportactions ensure one task invoked none all end situation multiple tasks id do help prevent situation getting worse
entry point class hand method aggregation index pattern returns list rolled documents index agg aggregation response want rollup rollupindex index holds rollups job stats stats accumulator jobs task groupconfig grouping configuration job jobid id job isupgradeddocid true job using new id scheme list rolled documents derived response
called persistent task signals allocated task terminated termination task framework essentially voluntary allocated task shut inside
attempt gracefully cleanup rollup job terminated tries remove job scheduler potentially cleanup operations future
called scheduleengine cron triggers event event caused trigger
attempt stop indexer idle actively indexing indexer aborted fail exception note stopping job immediate updates persistent tasks status allocated task notice stop which may take time depending indexing cycle is method will however return soon persistent task acknowledge status update listener listener requesting stop signal completionfailure
attempt start indexer state anything stopped fail otherwise persistent tasks status updated reflect change note job started indexer necessarily run immediately occur scheduler triggers based cron listener listener started action signal completionfailure
sets internal state indexerstatestopping async job running background case onfinish called soon background job detects indexer stopped job running function called state directly set indexerstatestopped onfinish never called new state indexer stopped stopping aborting job already aborted
sets internal state indexerstatestarted previous state indexerstatestopped setting state started allows job run background maybetriggerasyncjoblong called new state indexer started indexing aborting job already aborted
creates skeleton compositeaggregationbuilder provided job config config config job composite aggregation creates rollup buckets
checks indexerstate returns false execution stopped
creates range query limits search documents appear maximum allowed time see maxboundary last processed time position current position pagination range query execute
ctr executor executor use fire first request background job job rollup job initialstate initial state indexer initialposition last indexed bucket task
triggers background job builds rollup index asynchronously iff job runs indexer started indexerstatestarted current time milliseconds used limit job complete buckets true job triggered false otherwise
sets internal state indexerstateaborting returns false async job running background case onabort called soon background job detects indexer aborted job running function called returns true onabort never called true indexer aborted false background job running abort delayed
executes rollup test case docs docs index source config rollup job execute current time milliseconds rollupconsumer consumer checks created rollup documents job
creates mappedfieldtype provided job simplicity numbers considered longs map containing created field types accessible names
read address elasticsearch suitable cli system properties
asks cli fixture start cli instance
send command assert echo
assert result connection test default implementation asserts test passes overridden check places want assert fails
shutdown connection remote cli without attempting shut remote orderly way
create echo expect jline send terminal were typing command
attempts orderly shutdown cli reporting unconsumed lines errors
tests run administrative user use essecurityrunasuser become less privileged user needed
test hijacking scroll fails test implemented rest api simple hijack scroll excercise code apis truly paranoid wed hack together something test others well
tests count index node doesnt shards index
tests count index run across multiple nodes
builds map returned header column
run sql text using format parameter specify format rather accept header
run sql text using accept header specify format rather format parameter
tests throw report transaction isolation throw sensible errors ask any
wraps csv expectedresults csv connection use executecsvquery obtain resultset connection
executes query provided csv connection supplied table name used test identification
assert given result sets potentially lenient way lenient specified type comparison column widden reach common compatible ground means promoting integer types long floating types double comparing values example nonlenient strict case comparison int tinyint would fail lenient succeed long actual value same
returns value given type either lenient fashion widened strict
test select implemented scroll query case fetch size entirely respected
test select implemented scroll query test dont retrieve records rely close clean cursor
test select implemented aggregation
properties used build connection
read address elasticsearch suitable jdbc driver system properties
support procedures return empty set databasemetadatagetproceduresstring string string
support procedures return empty set databasemetadatagetprocedurecolumnsstring string string string
tests rollup job created old cluster correctly restarted upgrade
tests single document survives super basic smoke test
todo entire class removed securityintegtestcase meant tests run real xpack
tests scrollhelperfetchallbyentityclient searchrequest actionlistener function defends scrolls broken way remote elasticsearch returns infinite results elasticsearch shouldnt past very does takes whole node makes sure defend properly
pki realm enabled checks see ssl client authentication enabled least one network communication layer
test node fails check context bootstrap context result bootstrap check
test node fails check context bootstrap context result bootstrap check
test node fails check context bootstrap context result bootstrap check
get setting setting configuration security components including defined extensions
tests run administrative user use essecurityrunasuser become less privileged user
multistage test that create new ca uses ca create 2 node certificates creates 3rd node certificate using autogenerated ca checks first 2 node certificates trust one another checks 3rd node certificate not trusted checks 3 certificates right values based command line options provided generation
gets random name valid certificate generation cases random value could match one reserved names like ca method allows us avoid issues
checks whether keys keystore trusted truststore
writes description instances given path
writes description instances given path
multistage test that creates zip pkcs12 cert autogenerated ca uses generate ca create pem certificate checks pkcs12 certificate pem certificate trust one another
parses input file retrieve certificate information file file parse collection certificate information
method handles writing certificate authority cert private key certificate authority generated invocation tool outputstream output stream write pemwriter writer pem objects info certificate authority information
returns ca certificate private key used sign certificates may specified user automatically generated terminal terminal use prompting user dn distinguished name use ca cacertpath path ca certificate null provided cakeypath path ca private key null provided prompt whether prompt user password keypass password private key present key encrypted user prompted env environment tool resolve files keysize size key bits days number days certificate valid ca cert private key
generates certificate signing requests writes specified file zip format outputfile file write output to file must already exist certinfo details use certificate signing requests
method handles collection information instance necessary generate certificate user may prompted information gathered file terminal terminal use user interaction inputfile optional file used load instance information collection certificateinformation represents instance
checks output file user specified options prompts user output file terminal terminal communicate user outputpath user specified output file may null path output file
method handles deletion file case partial write file file written writer writes contents file
generates signed certificates pem format stored zip file outputfile file certificates written to file must exist certificateinformations details creation certificates cainfo ca information sign certificates keysize size key bits days number days certificate valid
helper method read private key support prompting user key avoid passwords placed argument prompt user password encounter encrypted key path path private key password password provided user null terminal terminal use user interaction prompt whether prompt user privatekey read file
converts inetaddress objects generalnames object used represent subject alternative names
generates signed certificate using provided ca private key information ca certificate principal principal certificate commonly referred distinguished name dn subjectaltnames subject alternative names added certificate x509v3 extension may null keypair key pair associated certificate cacert ca certificate null results self signed certificate caprivkey ca private key null results self signed certificate days days certificate valid signed x509certificate
generates certificate signing request keypair key pair associated certificate generated certificate signing request principal principal certificate commonly referred distinguished name dn sanlist subject alternative names added certificate x509v3 extension may null certificate signing request
based private key algorithm privatekeygetalgorithm determines default signing algorithm used certgenutils key privatekey algorithm
generates ca certificate
generates rsa key pair provided key size in bits
creates x509 generalname use common name certificates subject alternative names extension common name name tag generalnameothername other objectid references cnoid cn attribute explicit tag 0 der encoded utf8 string name usage using cn oid subject alternative name nonstandard recognised x509tls implementations
generates signed certificate principal principal certificate commonly referred distinguished name dn subjectaltnames subject alternative names added certificate x509v3 extension may null keypair key pair associated certificate cacert ca certificate null results self signed certificate caprivkey ca private key null results self signed certificate isca whether generated certificate ca days days certificate valid signaturealgorithm algorithm used signing certificate null empty use default algorithm certgenutilsgetdefaultsignaturealgorithmprivatekey signed x509certificate
generates signed certificate using provided ca private key information ca certificate principal principal certificate commonly referred distinguished name dn subjectaltnames subject alternative names added certificate x509v3 extension may null keypair key pair associated certificate cacert ca certificate null results self signed certificate caprivkey ca private key null results self signed certificate days days certificate valid signaturealgorithm algorithm used signing certificate null empty use default algorithm certgenutilsgetdefaultsignaturealgorithmprivatekey signed x509certificate
gets random serial certificate generated securerandom
helper method read private key support prompting user key avoid passwords placed argument prompt user password encounter encrypted key path path private key password password provided user null terminal terminal use user interaction privatekey read file
method handles deletion file case partial write file file written writer writes contents file
parses input file retrieve certificate information file file parse collection certificate information
method handles writing certificate authority pkcs12 format zip file outputstream output stream write info certificate authority information terminal used prompt password if already supplied
generates certificate signing requests writes specified file zip format certinfo details use certificate signing requests
checks whether parent directories path exist offers create needed
method handles writing certificate authority pem format zip file outputstream output stream write pemwriter writer pem objects info certificate authority information includekey true write ca key pem format
method handles collection information instance necessary generate certificate user may prompted information gathered file collection certificateinformation represents instance
method handles deletion file case partial write file file written writer writes contents file
returns ca certificate private key used sign certificates may specified user automatically generated ca cert private key
generates signed certificates either pkcs12 format pem format wrapped zip file necessary output output file either zip pkcs12 writezipfile true output zip file otherwise output single pkcs12 file options current command line options certs certificates write file cainfo ca information sign certificates terminal terminal use prompting passwords
gets random name valid certificate generation cases random value could match one reserved names like ca method allows us avoid issues
writes description instances given path
returns security specific action name given incoming action name request
wildcards request treated does user privilege every possible index matches pattern or expressed differently does user privilege wildcard covers is superset of pattern
tests action responds correctly userrole some privileges checked
tests action responds correctly userrole none privileges checked
tests action names request considered matched relevant named privilege in case deleteaction indexaction satisfied indexprivilegewrite
tests request types support remote indices resolved index names local
tests request types known support remote indices successfully pass resolver
verifies behaviour tested testuserwithnorolescanperformremotesearch work requests remoteindexcapable
test mimics testuserwithnorolescanperformremotesearch except referenced index looks like remote index remote cluster name defined actually local index access denied
test mimics testuserwithnorolescannotperformlocalsearch includes local remote indices including wildcards
adds authentication scrollcontext
compares authentication stored scrollcontext current authentication cannot guarantee details authentication same things could differ include roles name authenticating or lookup realm work around compare username originating realm type
checks scrollcontext exists compares authentication object scroll context current authentication context
method used determine request executed system user even request already user associated it order user replaced system user one following conditions must true the action internal action user associated request the action internal action thread context contains noninternal action originating action threadcontext threadcontext contains headers context associated request action action name executed true system user used execute request
stashes current context executes consumer proper user based origin action method knows nothing listeners important callers ensure listeners preserve context restore appropriately
returns true thread context contains origin action authentication
verifies given user execute given request and action user doesnt appropriate privileges actionrequest elasticsearchsecurityexception thrown authentication authentication information action action request request elasticsearchsecurityexception given user allowed execute given request
performs authorization checks items within bulkshardrequest inspects bulkitemrequest items within request computes implied action items docwriterequestoptype checks whether action allowed targeted index items fail checks bulkitemrequestabortstring exception aborted denialauthentication string transportrequest string access denied exception shard level request exactly 1 index small number possible item docwriterequestoptype types number distinct authorization checks need performed small results must cached avoid adding high overhead bulk request
special handling value authorize put mapping request dynamic put mapping requests use concrete index allow permissions defined aliases requests concrete index list authorized indices need look see authorized alias
resolves necessary updates list index names provided request accordance users authorizedindices wildcards expanded phase ensure security execution decisions made fixed set index names consistent change life request provided request type allowsremoteindicesindicesrequest allows remote indices index names categorized refer resolvedindicesgetlocal local indices refer resolvedindicesgetremote remote indices categorization follows standard remoteclusterawarebuildremoteindexnamestring string remote indexname format also respects currently defined remoteclusterawaregetremoteclusternames remote clusters thus index name n considered remote ifandonlyif following true request supports remote indices n format clusterindex allowable cluster index contain wildcards separator must explicit cluster matches one remote cluster names registered within cluster case wildcards cluster portion name expanded resulting remoteindexnames added remote index list otherwise n added local index list
test direct result issue field level security permissions merged correctly improper merging resulted allow result merging permissions different roles instead properly creating union languages
test mainly make sure read default rolesyml config
retrieve list roles rolestoget null empty fetch roles
returns true safe use query cache query
populates fields set fields used query throws unsupportedoperationexception doesnt know this
adds index alias security underlying concrete index
creates address without lookups hostname null missing
ands predicates filter policy indices roles fields audit event multivalued values match filter predicate corresponding field
empty filter list field match events field missing event undefined field field value empty string singleton list empty string
requirement empty string filters match empty string fields case require automatons empty string match empty string automatonspredicatetest false automatonspredicatetest true
field missing event value filtering purposes empty string singleton stream empty string allows policy filter missing value using empty string ie ignorefiltersusers elastic filter events missing user field such anonymousaccessdenied well events elastic username
creates address without lookups hostname null missing
method determines service started based state clusterchangedevent node master not using remote indexing call remote cluster made retrieve state rules applied order service start following must true the cluster must gatewayservicestatenotrecoveredblock words gateway must recovered disk already the current node must master securityauditlog index template must exist the current audit index must exist primary shards active current audit index name determined rollover settings current time event clusterchangedevent containing date cluster state true requirements met service started
starts service state moved orgelasticsearchxpacksecurityauditindexindexaudittrailstatestarting beginning method services components initialized current node master index template stored state moved orgelasticsearchxpacksecurityauditindexindexaudittrailstatestarted returning queue messages came service started drained
atomically writes specified file line per entry specified map using specified transform convert entry line writing done atomically following sense first lines written temporary file writing succeeds temporary file moved specified path replacing file exists failure occurs existing file preserved temporary file cleaned up key type map entries value type map entries path path map map whose entries transform lines transform transform convert map entry line
prepares index creating doesnt exist updating mappings mappings date tasks executed runnable executed
returns routingtable index null index exist
resolves concrete index name alias indexmetadata instance requires supplied alias alias resolves one concrete index
return true state moves unhealthy red index state healthy nonred state
check attributes paths changed warning given terminal have
create checker given paths warn given terminal changes made
extracts rest remote address message context found returns null transport messages created rest handlers context
check whether given request allowed within current license state setup return name unlicensed feature default returns exception security available current license security enabled subclasses override method additional requirements null required features available otherwise exception sent requestor
settings nodes settings licensestate license state used determine security licensed
calls innerpreparerequestrestrequest nodeclient method checks license state license state allows auth result innerpreparerequestrestrequest nodeclient returned otherwise default error response returned indicating security licensed note implementing rest handler called license checked trip unused parameters check
refreshes current inuse metadata
creates elasticsearchsecurityexception indicates token expired client reauthenticate obtain new token format response defined hrefhttpstoolsietforghtmlrfc6750section31
create token based provided authentication metadata created token stored security index
creates elasticsearchsecurityexception indicates request contained invalid grant
method performs steps necessary invalidate token may longer used invalidateaccesstokenstring actionlistener
rotate current active key spare key created previous generatesparekey call
method performs steps necessary invalidate token may longer used process invalidation involves step needed backwards compatibility versions prior 620 step records entry indicate token given id expired second step record invalidation tokens created versions 62 step involves performing update token document setting invalidated field true
checks token stored revoked token ensure allow tokens explicitly cleared
uses refresh token refresh associated token returns new token updated expiration date listener
performs checks retrieved source returns optional exception issue
looks context see request provided header user token token validated includes authenticated decryption verification token revoked expired
gets token authorization header header begins bearer
performs actual invalidation token tokendocid id token doc invalidate listener listener notify upon completion attemptcount number attempts invalidate already tried srcprefix prefix use constructing doc update documentversion expected version document update
performs actual bwc invalidation token kicks new invalidation method usertoken token invalidate listener listener notify upon completion attemptcount number attempts invalidate already tried expirationepochmilli expiration time milliseconds since epoch
find stored refresh access tokens invalidated expired issued specified realm
creates elasticsearchsecurityexception indicates token expired client reauthenticate obtain new token format response defined hrefhttpstoolsietforghtmlrfc6750section31
performs actual refresh token retries case certain exceptions may recoverable refresh involves retrieval token document updating token document indicate document refreshed
creates new token service settings node settings clock clock used comparing timestamps client client use checking revocations
creates new key unless present newer current active key returns corresponding metadata note method doesnt modify metadata used token service see refreshmetadatatokenmetadata
reads authentication metadata given token method validate whether token expired not
tuple accesstoken refreshtokenid
prunes keys keeps latest n keys around numkeystokeep number keys keep
generates secret key based provided password salt method computationally expensive
serializes token string containing encrypted representation token
test exists in 5x want backwards compatible accept custom realms updated explicitly declare settings orgelasticsearchxpackcoresecuritysecurityextensiongetrealmsettings
creates new token based values stream
create new token existing id
method starts authentication process authentication process broken distinct operations order operations are look existing authentication lookforexistingauthenticationconsumer look user token token extraction extracttokenconsumer token authentication consumetokenauthenticationtoken user lookup run necessary consumeuseruser map lookuprunasuseruser string consumer write authentication context finishauthenticationuser
iterates realms attempts lookup run user given username consumer called regardless user found not nonnull user fail requests run user found leak names users exist using timing attack
consumes user resulted attempting authenticate token realms user null authentication fails proceed user request inspected see run functionality use run use finishauthenticationuser called otherwise try lookup run user lookuprunasuseruser string consumer
consumes authenticationtoken provided caller case null token handlenulltoken called case nonnull token realms iterated first realm returns nonnull user authenticating realm iteration stopped user passed consumeuseruser map exception caught trying authenticate token
authenticates username password provided parameters look values threadcontext authentication action action message message message resulted authenticate call token token credentials authenticated
finishes authentication process ensuring returned user enabled run user enabled one authentication successful method also ensures authentication written threadcontext
writes authentication threadcontext calls listener successful
looks see request contains existing authentication so authentication used consumer called exception thrown trying read authentication may called null value
determines whether type internal realmtype provided xpack including reservedrealm
creates realmfactory factories internal realm type excludes reservedrealm cannot created dynamically map realmtype factory
finds values specified attribute attributeid name attribute either name code friendlyname list matching attribute values may empty
content content saml message raw xml particular not base64 encoded
constructs saml specific exception consistent message regarding saml signature validation failures
converts joda datetime java instant
tests whether provided function returns true idps signing credentials elasticsearchsecurityexception saml exception matching credential found
processes provided logoutrequest extracts nameid sessionindex returns samlattributes object empty attributes list recommended binding logout for maximum interoperability httpredirect binding signature applied querystring including parameter names urlencodedbase64encodeddeflated values therefore order properly validate signature method operates raw query string elasticsearchsecurityexception saml invalid realmconfiguration
map samlattribute name configurationsetting name
spec states never happen saml bindings spec v20 wd6 section 3441 point 3 onelogin includes newlines anyway
creates saml orgopensamlsamlsaml2corelogoutresponse provided requestid
always returns null support reading saml token request orgelasticsearchxpacksecurityactionsamltransportsamlauthenticateaction
factory saml realm constructor needs initialise number components delegating samlrealm
creates saml logoutrequest single logout request provided session realm idp configuration support slo otherwise returns null samlrealmsettingsidpsinglelogout
generating x509 credentials cpu intensive slow want per class
testing test real signing tests useless signing incorrectly implemented
testing test real encryption tests useless encryption routines dont anything
randomly selects digital signature algorithm uri given private key algorithm privatekeygetalgorithm key privatekey algorithm uri
reads key pair associated certificate given algorithm key length testing ec algorithm 256 key size used others use 2048 default x509certificate signed certificate its privatekey
whether service provider signs orgopensamlsamlsaml2coreauthnrequest messages
certificate credential used send encrypted data service provider
getredirect url used handle saml logout session termination
post url used accept saml assertions authentication results
request named attribute provided part assertions specified attributeconsumingservice
constructs entitydescriptor contains single spssodescriptor
contact within organisation operates service provider
organisation operates service provider
name service use attributeconsumingservice
certificate used send encrypted data service provider
locale locale use element require xmllang attributes entityid uri service provider entity
format service provider expects incoming nameid element
certificate service provider users sign saml requests
tests user login via saml idp uses a real idp shibboleth running locally a fake ui running jvm roughly mimic kibana see httplogin httpacs a fake web browser apache http client takes following steps requests login local ui walks login process idp receives json response local ui bearer token uses token verify user details
finds target url samlresponse html form provided content
simple mapping maps thor user shibboleth realm kibanausers role could something complex unit tests rolemapping verify mapping runs ok real environment
perform requests elasticsearch kibana user user used typical saml deployment where kibana providing ui saml web sso interactions use kibana user need set password something know
verifies provided refresh token see orgelasticsearchxpacksecurityauthctokenservice used get new valid access token refresh token
submits saml assertion acs uri acs uri service providers assertionconsumerservice saml deflated base64 encoded samlresponse parameter post acs
submits shibboleth consent form provided uri consent form step shibboleth inserts login flow confirm user willing send personal details application sp logging to tuple uri sps assertionconsumerservice samlresponse post service
provides login handler fake webapp interacts elasticsearch using rest client find login page idp sends redirect page
provides assertionconsumerservice handler fake webapp interacts elasticsearch using rest client perform saml login forwards json response back client
navigates login page local in memory http ui uri login form submitted
finds target url html form within provided content
wraps httphandler trycatch block returns 500 server error exception assertionerror occurs
verifies provided access token see orgelasticsearchxpacksecurityauthctokenservice expected user expected name roles
submits shibboleth login form provided uri uri consent form submitted
processes provided saml response within provided token and valid extracts relevant attributes it orgelasticsearchelasticsearchsecurityexception saml invalid realmconfiguration
samlexceptionstring object
constructs exception distinguished via issamlexception saml specific exception used distinguish expected exceptions such saml signature failures missing attributes treated simple authentication failure with clear cause
enabling schema validation setvalidatingtrue documentbuilderfactory requires provide errorhandler implementation saxexception document attempt parse valid according specified schema
needed order initialize underlying opensaml library must called anything potentially interacts opensaml whether server code tests initialization happens within privileged block underlying apache xml security library permission check initialization happens specific context classloader opensaml loads resources jar file
constructs documentbuilder necessary features secure parserconfigurationexception one features cant set documentbuilderfactory
enabling user forces doc written security index user doc empty password special case code reserved realm
asynchronous method put user put user request without password hash treated update fail validationexception user exist password hash provided issue update request upsert document well upsert document sets enabled flag user true document already exists method modify enabled value
retrieve list users usernames null empty fetch users
async method change password native reserved user reserved user exist document created hash provided password
async method retrieve user password
asynchronous method update enabled flag user user reserved document exist document created user reserved user must exist otherwise operation fail
handles updating user already exist password change
asynchronous method create reserved user given password hash cache user cleared document indexed
method used verify username credentials stored system username username lookup user password plaintext password verify
blocking version getuser blocks user returned
tests multiple concurrent run requests authenticated successfully bug cache implementation used internal realms caused run requests fail even authentication valid run user existed issue iterating realms would failed lookups heavy concurrency requests wait existing load attempt cache original caller thrown executionexception nested nullpointerexception since loader returned null value callers would get null value unexpectedly
creates new logger detached root logger appender output log messages terminal
general purpose https call json contenttype authorization header ssl settings read settings file any user user authorization header password password authorization header requestbodysupplier supplier json string body request responsehandler handler response input stream http protocol response code
collects passwords users issues set requests fails first failed request case rerun tool redo operations passwordfn function generate prompt users password successcallback callback successful operation
validates bootstrap password local keystore making authenticate call returns silently server reachable password valid throws userexception otherwise terminal write verbose info
sets one users password using elastic superuser credentials user user whos password change password new password user
parses users file returns null users file exist
internally class try load file reason cant were lenient logging error skipping users aligned handle autoloaded files security
internally class try load file reason cant were lenient logging error skipping enries aligned handle autoloaded files security
accepts mapping user list roles
parses usersroles file returns code null usersroles file exist read file holds mapping per line form role users returned map holds entries form user roles
checks user exists given password
checks role given users role exist users passed
checks user exist users usersroles files
tests searching groups userattribute field set dn which special
tests clientside timeout asynchronous ldap sdk treated failure rather simply returning results
tests searching groups userattribute field set missing value
tests searching groups userattribute field set
creates realm provided settings rebuilds ssl service aware new realm returns realmconfig
wraps provided sessionlistener preserve threadcontext associated current thread responses headers preserved needed response output yet exist produced within realmldapsession
given username password open connection ldap bind authenticate retrieve groups map roles build user user passed listener
execution runnable already started runnable cancelled pass exception user listener
sets ldapsession using connection pool potentially holds existing connections server
sets ldapsession using following process opening new connection ldap server executes bind request using bind user executes search find dn user closes opened connection opens new connection ldap server executes bind request using found dn provided password creates new ldapsession bound connection
contract realm implementations logandreturnnull and call actionlisteneronfailureexception internal exception prevented performing authentication method tests ldap server unavailable invalid hostname null result rather exception
securely escapes username inserts template using messageformat username username insert dn template commas equals plus escaped dn distinquished name build template
iterates configured user templates attempting open attempts fail last exception kept cause thrown exception username relative name distinguished name inserted template
config configuration realm sslservice ssl service get socket factory context groupresolver resolver use find groups belonging user poolingenabled setting used determine connection pooling enabled binddn dn user used pooled connections or null perform anonymous bind healthcheckdnsupplier supplier dn query health checks threadpool thread pool used async queries execution
creates connection pool used session factory initializes health check support
method used cleanup connection pool one used
collects certificates normally trusted node contained testnodejks
test realms support user login implementation wise means first realm reject authentication attempt second realm tried one realm using common name cn login uses userid samaccountname see setupsecondaryrealm simply matter checking authenticate identifiers
method performs asynchronous ldap search operation could multiple results
method performs asynchronous ldap search operation expects one result one result found error results found null returned ldap server returns error resultcode handled actionlisteneronfailureexception failure
performs actual connection following referral given url string referral followed may contain result relevant search
method performs asynchronous ldap search operation could multiple results
method performs asynchronous ldap search operation expects one result one result found error results found null returned ldap server returns error resultcode handled actionlisteneronfailureexception failure
returns true provide searchresult successfully completed server note referrals not considered successful response purposes method
method performs asynchronous ldap search operation could multiple results
necessary fork executing runnable deadlock happen thread handles bind responses blocks bind call waiting response handle
method performs asynchronous ldap search operation could multiple results
method submits bind request one connection pool bind authentication reverted connection returned pool connection safely reused see ldapconnectionpoolbindandrevertauthentication validates bind credentials bind calls blocking bind executed ldap connection reader thread as returned ldaputilsisldapconnectionthread thread blocked interrupted something else timeout timer do call bind outside method ldaputilsmaybeforkthenbindldapconnection bindrequest threadpool abstractrunnable ldappool ldap connection pool submit bind operation bind request object bind operation threadpool threads call blocking bind operation case calling thread connection reader see ldaputilsisldapconnectionthread runnable runnable continues program flow bind operation executed thread prior bind
method submits bind request ldap connection authentication status changes connection subsequently reused validates bind credentials bind calls blocking bind executed ldap connection reader thread as returned ldaputilsisldapconnectionthread thread blocked interrupted something else timeout timer do call bind outside method ldaputilsmaybeforkthenbindldapconnection bindrequest threadpool abstractrunnable ldap ldap connection submit bind operation bind request object bind operation threadpool threads call blocking bind operation case calling thread connection reader see ldaputilsisldapconnectionthread runnable runnable continues program flow bind operation executed thread prior bind
ldapurls urls form ldap ldaps
ldap connections closed clean resources
object intended constructed ldapconnectionfactory constructor accepts logger connection log since connection instantiated frequently its best logger connection created outside reused across connections cant keep static logger class since want logger contextual ie aware settings environment
validates client kerberos ticket received peer first performs service login using keytab supports multiple principals keytab principal selected based request gss security context establishment state handled follows context established call actionlisteneronresponse tuple username outtoken peer reply context established call actionlisteneronresponse tuple username null outtoken needs sent peer negotiation never calls actionlisteneronresponse null tuple failure call actionlisteneronfailureexception decodedtoken base64 decoded kerberos ticket bytes keytabpath path service key tab file containing credentials es service krbdebug true enables jaas krb5 login module debug logs
encodes specified byte array using base64 encoding scheme outtoken byte array encoded string containing base64 encoded characters returns null outtoken null empty
performs authentication using provided keytab keytabfilepath keytab file path krbdebug true enables jaas krb5 login module debug logs authenticated logincontext instance note needs closed using logincontextlogout usage privilegedactionexception privileged action threw exception
privileged wrapper closing logincontext throw exceptions logs debug message logincontext logincontext closed
acquiring spnego mechanism credentials service based subject gssmanager gssmanager subject logged subject gsscredential particular mechanism privilegedactionexception privileged action threw exception
privileged wrapper invokes action subjectdoas perform work given subject subject subject used work action privilegedexceptionaction action performing inside subjectdoas value returned privilegedexceptionactions run method privilegedactionexception privileged action threw exception
handles gss context establishment received token passed gsscontext acceptor side returns token needs sent peer gss context establishment base64decodedticket token generated peer gsscontext instance acceptor gsscontext subject authenticated subject byte containing token sent peer null indicates token generated privilegedactionexception privileged action threw exception gsscontextacceptseccontextbyte int int
privileged wrapper closing gsscontext throw exceptions logs debug message gsscontext gsscontext disposed
handles server response returns new token sent server base64token intoken received server passed initseccontext gss negotiation base64 encoded token sent server may return null nothing sent privilegedactionexception privileged action threw exception
performs authentication using provided principal name password client principal principal name password securestring authenticated logincontext instance note needs closed logincontextlogout usage loginexception thrown problem login configuration login fails
spnego client usage needs closed order logout logincontext dispose gsscontext
gsscontext initiator side handling initiates context establishment returns base64 encoded token sent server base64 encoded token privilegedactionexception privileged action threw exception
creates spengoclient interact given service principal use close logout logincontext dispose gsscontext usage userprincipalname user principal name login client password password client serviceprincipalname service principal name client interacts with privilegedactionexception privileged action threw exception gssexception thrown gss api error occurs
creates principals exports keytab created directory dir directory key tab would created princnames principal names created path key tab file exception thrown principal keytab could created
build kerberos realm settings keytabpath key tab file path maxusersincache max users maintained cache cachettl time live cached entries enabledebugging krb5 logs removerealmname true want remove realm name username form userrealm settings kerberos realm
write content provided keytab file keytabpath path keytab file content content keytab key tab path ioexception io error occurs writing keytab file
constructs spnegohttpclientconfigcallbackhandler given principalname keytab userprincipalname user principal name keytabpath path keytab file user enabledebuglogs true enables kerberos debug logs
constructs spnegohttpclientconfigcallbackhandler given principalname password userprincipalname user principal name password password user enabledebuglogs true enables kerberos debug logs
privileged wrapper invokes action subjectdoas perform work given subject subject subject used work action privilegedexceptionaction action performing inside subjectdoas acc accesscontrolcontext tied specified subject action see subjectdoasprivilegedsubject privilegedexceptionaction accesscontrolcontext value returned privilegedexceptionactions run method privilegedactionexception
logged logincontext available attempts login returns logincontext logincontext privilegedactionexception
creates multiple principals kdc adds keytab file keytabfile keytab file add created principals keytab file exists always appends it principals principals add kdc include domain exception thrown principals keytab file could created
constructor simplekdcldapserver creates instance kdc server ldap backend server also initializes starts provided configuration stop kdc ldap server use stop workdir base directory server used locate kdcconf backendconf kdcldiff orgname org name base dn domainname domain name base dn ldiff ldap directory exception kdc ldap server initialization fails
stop simple kdc server privilegedactionexception privileged action threw exception
creates simple mapping maps users kerberos realm kerbtest role
usually principal names form userinstancerealm method removes realm part principal name kerberosrealmsettingssettingremoverealmname true else return input string principalname user principal name username removal realm
creates elasticsearchsecurityexception reststatusunauthorized cause also populates wwwauthenticate header value negotiate scheme message detail message cause nested exception args arguments message instance elasticsearchsecurityexception
extract token authorization header valid value negotiateauthheaderprefix returns kerberosauthenticationtoken authorizationheader authorization header request returns null authheader empty start value negotiateauthheaderprefix else returns valid kerberosauthenticationtoken elasticsearchsecurityexception negotiate header invalid
sets wwwauthenticate header outtoken null passed instance elasticsearchsecurityexception returns instance outtoken provided null empty appended negotiate used header value header wwwauthenticate sent peer form negotiate oyh1mihyoamk required client gss negotiation continue further ese instance elasticsearchsecurityexception status reststatusunauthorized outtoken non null empty value sent peer instance elasticsearchsecurityexception wwwauthenticate header populated
usually principal names form userinstancerealm method removes realm part principal name kerberosrealmsettingssettingremoverealmname true else return input string principalname user principal name username removal realm
formats user data expressionmodel model not nested values values simple java values keys may contain example metadata values stored model key metadatakey key key metadata object
distinguished name authenticated user applicable authentication method used otherwise null
internally class try load file reason cant were lenient logging error skippingremoving mappings aligned handle autoloaded files security
map groupdns es roles
user exists cache keyed principle name password validated hash also stored cache otherwise subclass authenticates user via doauthenticate authtoken authentication token listener called completion
indicates provided realm cache cleared store updated that is putrolemappingputrolemappingrequest actionlistener deleterolemappingdeleterolemappingrequest actionlistener called clearrealmcacheaction
loads mappings index package private unit testing
provides usage statistics store resulting map contains keys size total number mappings stored index enabled number mappings expressionrolemappingisenabled enabled
retrieves one mappings index names null setisempty empty retrieves mappings otherwise retrieves specified mappings name
test uses testclient cert trusted ssl layer trusted pki authentication realm
requests tls renegotiation means request peer performs another handshake prior continued exchange application data requested currently application mode sslexception handshake cannot initiated
uses transport client ssl disabled test connects client profile always fail nonssl transport client cannot connect ssl profile
uses transport client trusts testnode certificate test connects client profile uses testnode certificate requires client present certificate connection never work client certificate present
uses transport client custom key pair transportclient trusts testnode certificate self signed certificate test connects default profile uses truststore trust testclientclientprofile certificate requires client authentication connection always fail
node sets following profiles default testnode keypair requires client auth client testnodeclientprofile profile trusts testclient cert requires client auth noclientauth testnode keypair require client auth
uses transport client trusts testnode certificate test connects noclientauth profile uses testnode certificate require present certificate connection always succeed
uses transport client default jdk truststore truststore trusts known good public certificate authorities test connects default profile uses selfsigned certificate never trusted default truststore connection always fail
uses transport client custom key pair transportclient trusts testnode certificate self signed certificate test connects noclientauth profile uses truststore trust testclientclientprofile certificate require client authentication
uses transport client settings internal cluster transport client test connection noclientauth profile internal transport client used since connecting different profile since noclientauth profile require client authentication standard transport client connection always succeed settings default profile except port disabling client auth requirement
uses transport client trusts testnode certificate test connects default profile uses testnode certificate requires client present certificate connection never work client certificate present
uses transport client ssl disabled test connects noclientauth profile always fail nonssl transport client cannot connect ssl profile
uses transport client settings internal cluster transport client test connection client profile internal transport client used since connecting different profile client profile requires client auth trusts certificate testclientclientprofile keystore connection fail certificate presented standard transport client trusted profile
uses transport client ssl disabled test connects default profile always fail nonssl transport client cannot connect ssl profile
uses transport client default jdk truststore truststore trusts known good public certificate authorities test connects noclientauth profile uses selfsigned certificate never trusted default truststore connection always fail
uses transport client default jdk truststore truststore trusts known good public certificate authorities test connects client profile uses selfsigned certificate never trusted default truststore connection always fail
uses transport client custom key pair transportclient trusts testnode certificate self signed certificate test connects client profile set trust testclientclientprofile certificate connection always succeed
instantiates new pattern rule ruletype indicates allow block rule pattern filter pattern
intstr string containing integer def default string contain valid integer inetaddress integer
get subnets netmask decimal format ie getnetmask2552552550 returns integer cidr mask netmask network mask integer cidr mask
runs test actual class implementing custom interface implement expected marker interface specified violation parameter false clazz custom implementation outerclazz outer class load custom implementation relative interfaceclazz custom expectedinterfaceclazz marker interface violation whether actual class expected fail feature aware check ioexception io error occurs reading class
runs test actual class implementing custom interface expected marker interface clazz custom implementation outerclazz outer class load custom implementation relative interfaceclazz custom expectedinterfaceclazz marker interface ioexception io error occurs reading class
runs test actual class implementing custom interface expected marker interface clazz custom implementation outerclazz outer class load custom implementation relative interfaceclazz custom expectedinterfaceclazz marker interface ioexception io error occurs reading class
constructs representation featureaware violation name name custom class interfacename name featureaware interface expectedinterfacename name expected mixin class
loads class specified input stream checks implements featureaware custom extends appropriate mixin interface xpack class not specified callback invoked input stream callback callback invoke ioexception io exception occurs loading class hierarchy
check class directories specified arguments classes xpack implement customs extend appropriate marker interface provides mixin implementation clusterstatefeatureawaregetrequiredfeature args class directories check ioexception io exception walking class directories
cleanup tests featurespecific cleanup methods called rather using separate after annotated methods ensure welldefined cleanup order
delete left machine learning datafeeds jobs
executes api call using admin context waiting succeed
disable monitoring
delete left rollup jobs also reuses pendingtask logic ml refactor shared location
enable monitoring waits monitoring documents collected indexed monitoring indicesthis signal local exporter started ready tests
waits security template machine learning templates created metadataupgrader
waits pending tasks complete
waits machine learning templates created check version date
find memory size in bytes machine node running on takes container limits as used docker example account
calculates delay next time maintenance triggered next time 30 minutes past midnight following day plus random offset random offset added order avoid multiple clusters running maintenance tasks time cluster given name shall offset throughout life clustername cluster name used seed random offset delay next time maintenance triggered
stopping lookback closes associated job after stop call returns test ensures kill request submitted close doesnt put job failed state
check ml plugin disabled cannot create job rest handler registered
open job later gets added calendar take scheduled events account
test open job picks changes scheduled eventscalendars
validations fail fast trying update job state master node check job exists check job marked deleted check jobs version supported
visible testing
visible testing
validate stop request throws resourcenotfoundexception datafeed id datafeedid datafeedid datafeed id mlmetadata ml meta data
resolve requested datafeeds add ids one list arguments depending datafeed state request stop datafeed request mlmetadata ml metadata tasks persistent task meta data starteddatafeedids started datafeed ids added list stoppingdatafeedids stopping datafeed ids added list
validate close request throws exception conditions if job exist if job data feed feed must closed first if job opening jobid job id mlmetadata ml metadata tasks persistent tasks
resolve requested jobs add ids one list arguments depending job state opened jobs added openjobids closing jobs added closingjobids failed jobs added openjobids allowfailed set otherwise exception thrown request close job request state cluster state openjobids opened failed jobs added list closingjobids closing jobs added list
get jobs match given expression note jobid metadataall jobs returned expression jobid expression matching jobids clusterstate cluster state allownojobs false error thrown job matches jobid querypage containing matching jobs
create jobmanager
gets job matches given jobid jobid jobid clusterstate cluster state job matching given code jobid resourcenotfoundexception job matches jobid
stores job cluster state
validate char filtertokenizertoken filter names used categorization analyzer config if any validation done serverside cannot done client wont loaded appropriate analysis modulesplugins overall structure validated parse time exact names need checked separately plugins provide functionality installeduninstalled
removes temporary storage leftovers removes temp files folder might result unclean node shutdown broken clients call running jobs ioexception cleanup fails
delete temporary storage previously allocated path path temporary storage ioexception path cleaned
tries find local storage storing temporary data uniqueidentifier identifier used sub folder requestedsize maximum size required path temporary storage available null otherwise
its difficult use mocking get number calls logstatuslong mockitospy doesnt work due lambdas used datacountsreporter override method count calls
construct stating pipes expected created corresponding c process creates named pipes only one combination wanted pipes work given c process arguments constructor must carefully chosen reference corresponding c code processname name process pipes opened to must full path exe extension windows jobid job id process pipes opened process associated specific job may null empty processes associated specific job
connect pipes created c process must called corresponding c process started timeout needs long enough c process perform startup tasks precede creation named pipes many these short timeout fine however least couple seconds recommended due vagaries process scheduling way vms completely stall hypervisor actions
augments list command line arguments example built autodetectbuilder class
input stream datacountsreporter write number records bytes etc
report 1 byte read
get reference singleton native process controller nativecontroller created lazily allow time c process started connection attempted null returned tests xpackmlautodetectprocessfalse calls may throw exception initial connection c process fails
report counts regardless whether reporting boundary
increments date parse error count
increment number records written 1 increment total number fields read inputfieldcount number fields record note number processed fields by field etc actual number fields record recordtimems time record written milliseconds epoch
increments missing field count records missing fields still processed
increments order record count
log status done progressively less frequently job processes data logging every 10000 records data rate 40000 per second quickly rolls logs
add newbytes total volume processed
return true file eshomeconfigmlmodelconf
send signals make longer period sparse signals go number sparse buckets much could normal
send signals make long pause send another signal check whether counts right
test sparsity last 2 buckets create sparse bucket signal 2nd last
test sparsity last bucket create sparse bucket signal
resets counts note reset inner state eg sparse bucket detection
flush counters called end data stream
tail inputstream provided constructor handling complete log document arrives method return either endoffile detected inputstream inputstream throws exception
get process id c process whose log messages read arrive first log message logged c process log copyright message immediately startup take long arrive available instantly process starts
testing allows meddling logger read buffer size error store size
expected called infrequently
get process id c process whose log messages read arrive first log message logged c process log version number immediately startup take long arrive available instantly process starts
extracts version information copyright string assumes certain format
compare fields
updates normalized scores results
recursively merges scores returned normalization process results scoresiter iterator scores returned normalization process parent parent result parenthadbigchange whether parent big change result result updated effective normalized score given result
launches normalization process seeded quantiles state provided normalizes given results bucketspan null default used results updated normalized results quantilesstate state used seed system change normalizer
encapsulate logic deciding whether change normalized score big current logic big change change least 1 50 higher two values oldval old value normalized score newval new value normalized score true update considered big
update anomaly score field previously persisted buckets contained records
build command start normalizer process
compare fields
flush running job ensuring native process opportunity process data previously sent none left sitting buffers jobtask job task params parameters describing controls accompany flushing eg calculating interim results time control etc
request temporary storage used job jobtask job task requestedsize requested size path local storage null storage available
initiate background persistence job jobtask job task handler listener
forecast running job jobtask job task params forecast parameters
stop running job mark finished jobtask job stop restart whether job restarted persistent tasks reason reason closing job
passes data native process blocking call wont return data written process elasticsearchstatusexception thrown error conditions occur if configured field missing csv header if json data malformed cannot recover parsing if high proportion records timestamp field cannot parsed if high proportion records chronologically order jobtask job task analysisregistry registry analyzer components used build categorization analyzer necessary input data input stream xcontenttype xcontenttype input params data processing parameters handler delegate error datacount results count records fields bytes etc written
care must taken ensure method called data posted methods class call wait processing complete first expectation external calls made cleaning fatal error
closes job communicator encapsulating restart whether job restarted persistent tasks reason reason closing job
throws exception process exited
constructs autodetect process builder job job configuration filestodelete method append file objects need deleted process completes logger jobs logger
write normalizer init state file
visible testing
write ml autodetect model options emptyconffile
requests controller daemon start autodetect process
random time 1 hour added intervals tell c process perform periodic operations means many jobs certain amount staggering periodic operations given job always given staggering interval for given jvm implementation jobid id job calculate staggering interval staggering interval
set quantiles restore normalizer state any quantiles quantiles
accept request nothing write flush acknowledgement readautodetectresults params interim results generated flushid
returns epoch milli seconds
convert string record list lengthvalue encoded pair write outputstream
lower level functions write record fields individually plain writenumfieldsint must called first
lower level functions write records individually function called writefieldstring must called numfields times
convert string record array lengthvalue encoded pair write outputstream
create writer outputstream os object never close os
read json object write record array nested objects flattened field names separated eg record nested tags object namemytestmetric1tagstag1blahtag2boo time1350824400value12345678 use tagstag1 reference tag1 field nested object array fields json ignored record read fields written array array first filled empty strings never contain null gotfields boolean array element true field read number fields json doc 1 nothing read end stream reached
create reader parses mapped fields json parser json parser fieldmap map field name record array index position logger logger
cases parser doesnt recognise badly formed json document may skip end second document case lose extra record
returns null eof next token
get text representation current token unless its null nulls replaced empty strings match way rest product treats which turn shaped fact csv cannot distinguish empty string null
theres problem parser case skips first 2 records instead end first record invalid json means miss next record bad one
simple test push list records writer check output writer accepts empty strings null strings
test writefield writenumfields methods lengthencodedwriter
write ml autodetect field options outputindex stream
send flush message c autodetect process actually consists two messages one carry flush id which might processed much later fill buffers force prior messages through id flush echoed back c autodetect process complete
transform supplied control message length encoded values write outputstream number blank fields make full record deduced analysisconfig message control message write
writes control messages requested flushing job control messages need followed flush message order reach c process immediately list supported controls advance time calculate interim results params parameters describing controls accompany flushing eg calculating interim results time control etc
construct control message writer lengthencodedwriter lengthencodedwriter writer numberoffields number fields process expects record
create indexes output fields time field fields configured analysis control field time first field last control field
transform date input data write fields length encoded writer fields must copied input output function called record record written length encoded writer time transformed size number output analysis fields ie size map returned plain outputfieldindexes numberoffieldsread total number read included analysis
accessible testing only
set field index mappings must called plain datatoprocesswriterwriteinputstream categorizationanalyzer xcontenttype biconsumer finds required input indexes header sets mappings corresponding output indexes
write header header created list analysis input fields time field control field
get expected input fields ie fields must see csv header
tokenize field configured categorization store resulting list tokens csv format appropriate field record sent analytics categorizationanalyzer analyzer use convert categorization field list tokens categorizationfieldvalue value categorization field tokenized record record sent analytics
create map input index output index include time control fields infieldindexes map field name index input array
find indexes input fields header
read csv inputindex transform length encoded values pipe outputstream expected fields analysis inputindex expected time field missing csv header exception thrown
dont enforce check fields present json docs always returns true
read json inputindex transform length encoded values pipe outputstream transformation applied data timestamp expected seconds epoch fields analysisfields datadescriptions timefield missing josn inputindex exception thrown
return number missing fields
testing methods abstractdatatoprocesswriter uses concrete instances
constructs datatoprocesswriter depending data format time transformation jsondatatoprocesswriter data format json otherwise csvdatatoprocesswriter
test parsing csv nul character code point 0 u0000
test designed pick nsquared processing state consumption code size state document comparable c code create huge model 10 seconds overestimate time required avoid spurious failures due vm stalls reasonable spec laptop take around 1 second
splits bulk data streamed c process 0 characters data expected series elasticsearch bulk requests utf8 json as would uploaded public rest api separated zero bytes 0
ensure accept nan values
purpose method avoid saturating cluster state update thread lookback job churning buckets fast memory usage job changing regularly idea update established model memory associated job seconds new value received updates received delay period simply replace value originally caused update scheduled rate limits cluster state updates due established model memory changing one per job per delay period in reality updates occur rapidly lookback realtime operation limit one model size stats document per bucket mean maximum one cluster state update per job per bucket usually bucket span 5 minutes more delay delay updating established model memory
blocks flush acknowledged timeout expires whichever happens first flushid id flush request wait timeout timeout flushacknowledgement flush completed parsing finished null timeout expired
method called two places future used delayed updates shutting result processor shutting result processor its necessary anything update scheduled want update immediately despite cancelling scheduled update case its possible its already started running case method get called twice quick succession second call nothing scheduledestablishedmodelmemoryupdate reset null first call
given model snapshot get corresponding state write supplied stream multiple state documents separated using 0 written stream rule open legacy job current product version dont worry legacy document ids here jobid job id modelsnapshot model snapshot restored restorestream stream write state
starttime 0 parameter set
endtime 0 parameter set
page query result params page parameters
query calendars used job jobid job id
sort results calendarid sort sort true
starttime 0 parameter set
endtime 0 parameter set
return page influencers given job within given date range uses supplied client may run currently authenticated user jobid job id influencers requested query query
search buckets parameters bucketsquerybuilder uses internal client runs xpack user
create elasticsearch index mappings
get jobs model snapshot id
maps authorization failures querying ml indexes jobspecific authorization failures attributed ml actions works replacing action name another provided caller appending job id designed improve understandability admin applied index document level security mlanomalies indexes allow users access certain job results others example user mltest allowed see results ones job farequote then action indicesdatareadsearch unauthorized user mltest gets mapped to action clustermonitorxpackmlanomalydetectorsresultsbucketsget unauthorized user mltest job farequote exceptions related authorization returned unaltered e exception occurred getting ml data jobid job id mappedactionname outermost action name make sense user made request
get jobs model size stats
get jobs data counts jobid job id
get model snapshots job ordered descending restore priority jobid job id number snapshots size number snapshots retrieve startepochms earliest time include inclusive endepochms latest time include exclusive sortfield optional sort field name may null sortdescending sort descending order snapshotid optional snapshot id match null all
get model snapshots job ordered descending timestamp newest first jobid job id number snapshots size number snapshots retrieve
search anomaly records parameters recordsquerybuilder uses supplied client may run currently authenticated user
search buckets parameters bucketsquerybuilder uses supplied client may run currently authenticated user
get established memory usage job one order job considered established memory usage must generated least bucketsforestablishedmemorysize buckets results generated least one model size stats document low variability model bytes model size stats documents time period covered last bucketsforestablishedmemorysize buckets defined coefficient variation establishedmemorycvthreshold jobid id job established memory usage required latestbuckettimestamp latest bucket timestamp used calculation known otherwise null implying latest bucket exists results index latestmodelsizestats latest model size stats job known otherwise null supplying available avoids one search handler method succeeds passed established memory usage in bytes specified job 0 memory usage yet established errorhandler problem occurs exception passed handler
get page plain categorydefinitions given jobid uses supplied client may run currently authenticated user jobid job id augment category definition augmented grok pattern skip first n categories parameter paging size take number categories
check previously deleted job id left result categorizer state documents due failed delete left results would appear part new job cant check model state id based snapshot id timestamp unpredictable however unlikely new job would snapshot id old one job job configuration listener actionlistener
update jobs data counts stats figures jobid job update counts counts listener action response listener
execute bulk action
first time next called search performed first batch returned subsequent call return following batches note implementations possible results all first time method called empty deque returned deque next batch documents nosuchelementexception iteration elements
persist memory usage data blocking
persist quantiles async
persist list anomaly records records records persist
job data written function called commit writes datastore jobid job id
persist quantiles blocking
persist result bucket bucket influencers buckets persisted consistent id bucket bucket persist
persist memory usage data
execute bulk action
persist category definition category category persisted
persist list influencers optionally using influencers id auto generated id influencers influencers persist
persist model snapshot description
job state written calling function makes immediately searchable jobid job id
set query parameter null set
set query size parameter size null size set
sets whether interim results included includeinterim whether interim results included
query documents whose timestamp within given time range startepochms start time epoch milliseconds inclusive endepochms end time epoch milliseconds exclusive iterator
given collection strings work if any grok patterns were allowed use matches best append appropriate grok language represent finding onto supplied string builder
given collection strings grok pattern matches part all return collections bits come prefaces epilogues bit matches
first time particular field name passed simply return it second time return 2 appended third time return 3 appended etc
given category definition regex collection examples category return grok pattern match category pull likely fields extracted fields given pretty generic names unique within grok pattern provided expectation user adjust extracted field names based domain knowledge
grokpatternname name grok pattern try match must match one defined logstash fieldname name field extract match prebreak consider match its broken previous text this postbreak consider match its broken following text this
release resources held analyzer unless its global
get char filter factories configured char filter configuration element name outofthebox char filter custom definition
get tokenizer factory configured tokenizer configuration name outofthebox tokenizer custom definition
get token filter factories configured token filter configuration element name outofthebox token filter custom definition
convert config analyzer may global analyzer newly created custom analyzer case global analyzer caller must close finished it case newly created custom analyzer caller responsible closing it first tuple member analyzer second indicates whether caller responsible closing it
elasticsearch analysis functionality designed work indices categorization pretend weve got index settings
behaviour elasticsearch analyzers vary versions categorization well always use latest version text analysis settings stop classes expect associated index complaining
given field value convert list tokens using configured analyzer
verify config builder build valid config done part basic build verifies names analyzerstokenizersfilters referenced config known validity names could change time additionally done serverside rather clientside client loaded appropriate analysis modulesplugins
basically tokenise azaz09 strings also allowing underscores dots dashes middle discard tokens hex numbers begin digit
stops datafeed job true datafeed running method invocation stopped it otherwise false returned
issues recovery message appropriate prepares next report
updates tracking empty data cycles number consecutive empty data cycles reaches emptydatawarncount warning reported
reports problem different last seen problem problemmessage problem message
used license expires
used jvm killed differs stopalldatafeedsonthisnode leaves datafeed tasks started state get restarted different node
creates dataextractorfactory given datafeedjob combination
heuristic want time interval expect roughly scrollsize documents assuming data uniformly spread time totalhits documents datatimespread latesttime earliesttime want scrollsize documents chunk thus interval would scrollsize datatimespread totalhits however assuming chunk span may often lead halffilled pages empty searches beneficial take multiple that based benchmarking set 10x
processes list aggregations writes flat json document leaf aggregations supported subaggregations include multibucketsaggregation numericmetricsaggregationsinglevalue percentiles
constructs processor processes aggregations json timefield time field fields fields convert json includedoccount whether include doccount starttime buckets timestamp time discarded
write aggregated documents one bucket time batchsize keyvalue pairs written buckets written entirety check batchsize run bucket written batchsize keyvalue pairs could written function called repeatedly returns false point documents write batchsize number keyvalue pairs write true documents write call false documents write ioexception error occurs serialising json
adds leaf keyvalue returns name key added null nothing added nonfinite metric values added
format matches sample consists one xml documents root element name one document whitespace allowed them last one necessarily complete as sample could truncated it
given collection strings grok pattern matches part all return collections bits come prefaces epilogues bit matches
given collection message snippets work if any grok patterns were allowed use matches best append appropriate grok language represent finding onto supplied string builder
given chosen grok pattern collection message snippets split snippets matched section pieces it recurse find matches pieces update supplied string builder
snippets supplied begin 1 character common punctuation whitespace add last characters overall pattern remove snippets snippets input snippets modified output snippets copy input snippets whatever characters added overallpatternbuilder removed beginning
must called matchesall returns true tuple time field name grok string
build grok pattern match sample messages entirety seedpatternname pattern already determined match portion every sample message seedfieldname field name used portion every sample message seed pattern matches built grok pattern
explanation list reasons making decisions may contain items passed new reasons appended methods class samplemessages sample messages grok pattern found must match mappings updated mappings appropriate returned pattern nonnull
method attempts find grok pattern match sample messages entirety tuple time field name grok string null suitable grok pattern found
grokpatternname name grok pattern try match must match one defined logstash mappingtype data type field elasticsearch mappings fieldname name field extract match prebreak consider match its broken previous text this postbreak consider match its broken following text this
first time particular field name passed simply return it second time return 2 appended third time return 3 appended etc
rules are file must valid tsv must contain least two complete records must least two fields per record otherwise files tabs could treated tsv every tsv record except last must number fields reason last record allowed fewer fields others could truncated file sampled
format matches sample consists one json documents one must newlinedelimited documents must nonempty prevent lines containing matching
given sample values field guess appropriate index mapping field explanation list reasons choosing overall log structure list may nonempty method called method may append it fieldname name field mappings guessed fieldvalues values field mappings guessed guessed mapping compatible provided values must empty subsection index mappings appropriate field example type keyword
given one sample records find timestamp field consistently present all returned timestamp field must exist every record must timestamp format every record multiple fields meet criteria one occurred first first sample record chosen explanation list reasons choosing overall log structure list may nonempty method called method may append it samplerecords list records derived provided log sample tuple field name timestamp format one found null consistent timestamp
given sampled records guess appropriate elasticsearch mappings samplerecords sampled records map field name mapping settings
thinking longer field value spaces contains likely indexed text rather keyword
method implements simple algorithm calculating levenshtein distance
sum levenshtein distances corresponding elements two supplied lists excluding biggest difference reason biggest difference excluded sometimes theres message field much longer fields varies enormously rows skews comparison
rules are file must valid pipe separated values must contain least two complete records must least five fields per record otherwise files coincidental pipe characters could treated pipe separated every pipe separated value record except last must number fields reason last record allowed fewer fields others could truncated file sampled
sometimes elasticsearch mappings dates need include format method returns appropriate mappings settings minimum typedate possibly also format setting
parsing timestamp produce different results depending timezone parser ie textual representation define timezone
find first timestamp format matches part supplied value excluding specified number candidate formats text value returned timestamp format must exist within ignorecandidates number candidate formats exclude search timestamp format null none matches
interpret fractional seconds component date determine two things 1 separator character one colon dot 2 number digits fractional component date textual representation date fractional seconds interpreted tuple fractional second separator character number digits fractional component
find best timestamp format matching entire field value excluding specified number candidate formats text value returned timestamp format must match entirety ignorecandidates number candidate formats exclude search timestamp format null none matches
rules are file must valid csv must contain least two complete records must least two fields per record otherwise files commas could treated csv every csv record except last must number fields reason last record allowed fewer fields others could truncated file sampled
format matches sample contains least one newline least two nonblank lines
rules are file must valid semicolon separated values must contain least two complete records must least four fields per record otherwise files coincidental semicolons could treated semicolon separated every semicolon separated value record except last must number fields reason last record allowed fewer fields others could truncated file sampled
work around limitation privileged actions cannot throw checked exceptions classes wrap ioexceptions runtimeexceptions exception needs propagated back user class its nice get original ioexception rather wrapped runtimeexception however privileged calls could also possibly throw runtimeexceptions method accounts case too
use different logic input pipe case avoid danger creating regular file named pipe exist method first called file named pipe open timeout long wait named pipe exist stream opened read named pipe ioexception named pipe cannot opened
default path named pipes created nix created elsewhere subject security manager constraints windows place created directory prefix string
open named pipe created elsewhere input file named pipe open timeout long wait named pipe exist stream opened read named pipe ioexception named pipe cannot opened
logic similar opening input stream windows java cannot create regular file asked open named pipe doesnt exist file named pipe open timeout long wait named pipe exist stream opened read named pipe ioexception named pipe cannot opened
open named pipe created elsewhere output file named pipe open timeout long wait named pipe exist stream opened read named pipe ioexception named pipe cannot opened
open named pipe created elsewhere input path path named pipe open timeout long wait named pipe exist stream opened read named pipe ioexception named pipe cannot opened
open named pipe created elsewhere output path path named pipe open timeout long wait named pipe exist stream opened read named pipe ioexception named pipe cannot opened
makes index readonly its set readonly yet
returns information required upgrade action given indices indices list indices check specify all indices options wild card resolution option state current cluster state list indices upgradedreindexed
creates new upgrade check name name check settings system settings actionrequired return true work index specified name client client clusterservice cluster service types list types reindexing limited updatescript upgrade script used reindexing preupgrade action performed upgrade postupgrade action performed upgrade
perform index upgrade task task executes upgrade operation indexmetadata index metadata state current cluster state listener listener called upon completion upgrade
creates new upgrade check name name check settings system settings actionrequired return true work index specified name client client clusterservice cluster service types list types reindexing limited updatescript upgrade script used reindexing
execute client operation asynchronously try run action least privileges headers exist headers request headers ideally including security headers origin origin fall back security headers action action execute request request object action listener listener call action complete
execute client operation return response try run action least privileges headers exist headers request headers ideally including security headers origin origin fall back security headers client client used query supplier action run instance response class
executes consumer setting origin wrapping listener proper context restored
executes asynchronous action using provided client origin set context listener wrapped ensure proper context restored
stashes current context sets origin current context original context returned stored context
returns settings created xpacksettings
returns list nodes wont allow node adding xpack metadata cluster state see checkreadyforxpackcustommetadata details
checks cluster state allows node add xpack metadata cluster state throws exception otherwise check called installing xpack metadata cluster state ensure nodes part cluster able deserialize metadata note cluster state already contains xpack metadata check assumes nodes already ready receive additional xpack metadata check properly place everywhere allows install xpack cluster using rolling restart
returns path xpack codebase path
method executes search ensures stashed origin thread context created regular node client used emulate runas function
method executes search checks thread context enriched ml origin
read stream
create pipeline upgrade documents monitoringtemplateutilsoldtemplateversion description this pipeline upgrades documents version 6000001 processors expectation call either stringstostringxcontentbuilder bytesreferencebytesxcontentbuilder type type data want format request never null always endedobject lastupdatedversion
create pipeline allows documents different template versions upgraded expectation call either stringstostringxcontentbuilder bytesreferencebytesxcontentbuilder id api version eg 2 use type type data want format request never null always endedobject illegalargumentexception apiversion unrecognized pipelineids
create template nothing exist provide newer version know we created it id template identifier never null oldtemplateids oldtemplateversion
create empty pipeline description this placeholder pipeline version 6000001 processors expectation call either stringstostringxcontentbuilder bytesreferencebytesxcontentbuilder type type data want format request never null always endedobject lastupdatedversion
returns http status reststatusok monitoring bulk request successful or ignored collection disabled reststatusinternalservererror monitoring bulk request partially successful failed completely
adds monitoring document list documents indexed
parses monitoring bulk request builds list documents indexed
read stream
find monitoringindex use request indexname name index never null illegalargumentexception indexname unrecognized
configuration terms
configuration histogram
returns set aggregation builders represent configured set date histograms used rollup indexer iterate historical data
map representing config object rollupcaps aggregation object
returns set aggregation builders represent configured set metrics used rollup indexer iterate historical data
create new datehistogramgroupconfig using given configuration parameters field interval required compute date histogram rolled documents delay optional set null defines long wait rolling new documents timezone optional set null configured time zone value resolved using datetimezoneforidstring must match time zone identifier provided joda time library field name date field use date histogram required interval interval use date histogram required delay time delay optional timezone id time zone use calculate date histogram optional null utc timezone used
returns set aggregation builders represent configured set date histograms used rollup indexer iterate historical data
map representing config object rollupcaps aggregation object
tests datehistogramgroupconfig serializeddeserialized correctly timezone changed datetimezone string
map representing config object rollupcaps aggregation object
returns set aggregation builders represent configured set histograms used rollup indexer iterate historical data
constructs iteratingactionlistener delegate delegate listener call consumables finished executing consumer consumer executed consumable instance consumables instances consumed produce response ultimately sent delegate listener threadcontext thread context thread pool created listener consumablesfinishedresponse supplier maps last consumables response response sent delegate listener case last consumable returns null value delegate listener respond value perhaps concatenation results consumables
constructs iteratingactionlistener delegate delegate listener call consumables finished executing consumer consumer executed consumable instance consumables instances consumed produce response ultimately sent delegate listener threadcontext thread context thread pool created listener
returns current user information null current request authentication info
returns authentication information null current request authentication info
loads xpacksecurityextensions given class loader
returns ordered list role providers used resolve role names roledescriptor objects provider invoked order resolve role names resolved reserved native roles stores role provider represented biconsumer takes set roles resolve first parameter consume actionlistener second parameter consume implementation role provider asynchronous computation lengthy disk andor network io involved implementation responsible resolving whatever roles set roledescriptor instances successful implementation must invoke actionlisteneronresponseobject pass along resolved set role descriptors failure encountered implementation must invoke actionlisteneronfailureexception default empty list returned settings configured settings node resourcewatcherservice use watch configuration files changes
returns current user information null current request authentication info
runs consumer new context setting new version authentication compatible version provided original context provided consumer method returns original context restored
runs consumer new context provided user original context provided consumer method returns original context restored
writes authentication thread context
sets user forcefully provided user must existing user threadcontext otherwise exception thrown method package private testing
creates new security context cryptoservice null security disabled usersettingsgetuser usersettingsgetauthentication always return null
returns authentication information null current request authentication info
method fetches results given search request parses using given hit parser calls listener done
populate put privileges request using given source application name privilege name source must contain toplevel object keyed application name value applicationname object keyed privilege name value privilegename privilege object much match application privilege names nested
request trigger refresh plain refreshpolicyimmediate default wait refresh plain refreshpolicywaituntil proceed ignore refreshes entirely plain refreshpolicynone
sets realms caches evicted set caches realms evicted realms realm names
sets usernames users evicted caches set users evicted usernames usernames
sets usernames users evicted caches set users evicted usernames usernames
sets realms caches evicted set caches realms evicted realms realm names
sets roles caches evicted set roles evicted cache names role names
set roles cleared names names roles cleared builder instance
request trigger refresh plain refreshpolicyimmediate default wait refresh plain refreshpolicywaituntil proceed ignore refreshes entirely plain refreshpolicynone
populate put role request source roles name
request trigger refresh plain refreshpolicyimmediate default wait refresh plain refreshpolicywaituntil proceed ignore refreshes entirely plain refreshpolicynone
populate put role request source roles name
set username used authentication password grant
set password credentials associated user credentials used authentication resulting token user
set scope access token null scope implies default scope requested scope differs scope token tokens scope returned response
specifies grant type request currently password supported
tokenstring string representation token
string representation token invalidated value returned create token request
sets type token invalidated
request trigger refresh plain refreshpolicyimmediate default wait refresh plain refreshpolicywaituntil proceed ignore refreshes entirely plain refreshpolicynone
set whether user enabled
set username user enabled disabled must null
sets password note char passed method cleared
populate change password request source provided content type
request trigger refresh plain refreshpolicyimmediate default wait refresh plain refreshpolicywaituntil proceed ignore refreshes entirely plain refreshpolicynone
populate put user request using given source username
set username user enabled disabled must null
set whether user enabled
request trigger refresh plain refreshpolicyimmediate default wait refresh plain refreshpolicywaituntil proceed ignore refreshes entirely plain refreshpolicynone
use roledescriptorstring string indicesprivileges applicationresourceprivileges conditionalclusterprivilege string map map
generates xcontent roledescriptor instance builder xcontent builder params parameters xcontent generation directives doccreation true xcontent generated creating document security index false xcontent generated api display purposes xcontent builder ioexception error writing xcontent builder
use roledescriptorstring string indicesprivileges applicationresourceprivileges conditionalclusterprivilege string map map
read list privileges parser parser positioned xcontentparsertokenstartobject token privileges value
writes single object value builder contains provided privileges privileges grouped according conditionalclusterprivilegegetcategory categories
utility method read array conditionalclusterprivilege objects streaminput
construct new applicationprivilegedescriptor xcontent defaultapplication application name use none specified xcontent body defaultname privilege name use none specified xcontent body allowtype true accept type field for value must match doctypevalue
validates application name matches following rules consist prefix optionally followed either suffix prefix must begin lowercase ascii letter prefix contain ascii letter digits prefix must least 3 characters long suffix must contain stringsvalidfilename valid filename characters part name may contain whitespace allowwildcard true names end would match valid application name also accepted
validate provided privilege name valid throws exception otherwise illegalargumentexception name valid
validate provided name valid privilege name action name throws exception otherwise illegalargumentexception name valid
finds creates application privileges provided names element name may name stored privilege to resolved stored bespoke action pattern
checks whether role query contains queries know cant used dls role query
fall back validation verifies queries rewrite dont use client make remote calls case dls cause dead lock dls also applied remote calls example case terms query lookup cause recursive execution dls query get thread pool exhausted httpsgithubcomelasticxpluginsissues3145
test special handling fieldnames field
test filtering two vector fields
test filtering two binary dv fields
test special handling fieldnames field three fields exercise termsenum better
test filtering two stored fields double
test special handling source field
test filtering two stored fields float
test filtering index fields
test filtering two stored fields long
test filtering two sortedset dv fields
test filtering vector fields
test filtering two stored fields binary
test filtering two stored fields int
test filtering two int points
test core cache key needed nrt working
test filtering two text fields
test filtering two string fields
test filtering two stored fields string
test filtering two sorted dv fields
test filtering two numeric dv fields
test fieldnames field permitted doesnt exist segment
test filtering two sortednumeric dv fields
test fieldnames exist
test correct fieldinfos metadata
step characters provided string return resulting state 1 lead valid state
filter list characterrunautomaton defines fields retain
wrap single segment exposing subset fields
filter map characterrunautomaton defines fields retain
like computenumdocs caches results
compute number live documents method slow
allowed documents expressed query index permission null returned means document level restrictions
document field permissions index exist otherwise null returned null returned means field document level restrictions
test fieldsubsetreadertests test core cache key needed nrt working
checks permission matches provided action without looking indices used specific cases indices actions need authorized regardless indices usecase composite actions initially authorized based action name indices checked coordinating node properly authorized later shard level checking indices well
authorizes provided action provided indices given current cluster metadata
constructor enables fieldlevel security based includeexclude rules exclude rules precedence include rules
return wrapped reader exposes allowed fields
gets fieldpermissions instance corresponds granted denied parameters instance may come cache gets created instance cached
returns field permissions object corresponds merging given field permissions caches instance one found cache
determines whether permission grants specified privilege given resource applicationpermission consists sequence permission entries entry contains single applicationprivilege one resource patterns method returns true if one entries meet following criteria the entrys application interpreted automaton automatonspatternstring pattern matches application given argument interpreted raw string the applicationprivilegegetautomaton automaton defines entrys actions entirely covers automaton given argument that is argument subset entrys automaton the entrys resources interpreted automaton automatonspatternsstring set patterns entirely covers resource given argument also interpreted automaton automatonspatternstring pattern
privilegesandresources list privilege resources element list tuple containing single applicationprivilege set resources privilege applied resources treated wildcard automatonspattern
returns whether least one group encapsulated indices permissions authorized execute specified action requested indicesaliases time field andor document level security configured group also allowed fields role queries resolved
use clusterset iterable
ensures were currently start object next token start object elasticsearchparseexception current next token startobject
role mappings
builds returns automaton represent union given patterns
builds returns automaton represents given pattern
builds returns automaton represents given pattern
validate username username username validate allowreserved whether allow reserved user names settings settings may contain information reserved users null valid
wraps restrequest returns version provides filtered content
creates authenticationresult indicates realm attempted handle authentication request unsuccessful reason failure given supplied message optional exception getstatus status set statuscontinue getuser user populated
creates authenticationresult indicates supplied user successfully authenticated getstatus status set statussuccess neither getmessage message getexception exception populated user user authenticated cannot null
map realmtype collection setting objects internalrealmssettingsgetsettings
extracts realm settings global settings object returns map realmname realmsettings
realm define response headers sent failure default adds wwwauthenticate header auth scheme basic map authentication failure response headers
writes authentication context must existing authentication context illegalstateexception thrown
provides setting setting configuration internal realm type excludes reservedrealm cannot configured dynamically map realmtype collection setting objects
constructs default authentication failure handler replaced defaultauthenticationfailurehandlermap
constructs default authentication failure handler provided default response headers failureresponseheaders map header key list header values sent failure response realmgetauthenticationfailureheaders
creates instance elasticsearchsecurityexception reststatusunauthorized status also adds default failure response headers configured defaultauthenticationfailurehandler may replace existing response headers cause instance elasticsearchsecurityexception message error message cause instance elasticsearchsecurityexception asserts status reststatusunauthorized adds headers it else create new instance elasticsearchsecurityexception args error message args instance elasticsearchsecurityexception
setting setting configuration realm type
type either adtype ldaptype setting setting configuration realm type
valid set settings value type realm
hash password using openbsd bcrypt scheme modified original take securestring instead original password password hash salt salt hash perhaps generated using bcryptgensalt hashed password
decode string encoded using bcrypts base64 scheme byte array note not compatible standard mimebase64 encoding string decode maxolen maximum number bytes decode array containing decoded bytes illegalargumentexception maxolen invalid
perform enhanced key schedule step described provos mazieres a futureadaptable password scheme httpwwwopenbsdorgpapersbcryptpaperps data salt information key password information
check plaintext password matches previously hashed one modified original take securestring plaintext use constant time comparison plaintext plaintext password verify hashed previouslyhashed password true passwords match false otherwise
perform central password hashing step bcrypt scheme password password hash salt binary salt hash password logrounds binary logarithm number rounds hashing apply cdata plaintext encrypt array containing binary hashed password
look 3 bits base64encoded specified character rangechecking againt conversion table x base64encoded value decoded value x
key blowfish cipher key array containing key
generate salt use bcrypthashpw method logrounds log2 number rounds hashing apply work factor therefore increases 2logrounds random instance securerandom use encoded salt value
encode byte array using bcrypts slightlymodified base64 encoding scheme note not compatible standard mimebase64 encoding d byte array encode len number bytes encode base64encoded string exception illegalargumentexception length invalid
cycically extract word key material data string extract data offp pointer as oneentry array current offset data next word material data
initialise blowfish key schedule
blowfish encipher single 64bit block encoded two 32bit halves lr array containing two 32bit half blocks position array blocks
returns list lower case string identifiers hashing algorithm parameter combinations used password hashing identifiers used get instance appropriate hasher using resolvestring resolve
returns hasher instance appropriate algorithm associated cost indicated name name identifiers default costs bcrypt pbkdf2 return default bcrypt pbkdf2 hasher instead specific instances associated cost name name algorithm cost combination identifier hasher associated identifier
returns hasher instance used verify hash inspecting hash prefix determining algorithm used generation specific algorithm prefix determined hashernoop returned hash char array hashing algorithm deduced hasher used validation
verifies cryptographic hash data hash hashing algorithm parameterscost factoriterations salt deduced hash itself hash char array cleared verification data securestring hashed verified hash char array hash string verified true hash corresponds data false otherwise
generates array length random bytes using javasecuritysecurerandom
like stringindexof array chars
parse expressionrolemapping provided xcontent
converts expressionrolemapping xcontent compatible format handled parsestring xcontentparser
parse expressionrolemapping provided xcontent
name name expression tree within containing object used provide descriptive error messages content xcontent typically json dsl representation expression
defines field using supplied predicate
returns true named field matches any provided values
comparison number objects compares floating point either value float double otherwise compares numberstolongexact long
constructs predicate matches correctly based type provided parameter
setting setting configuration realm type
job id expressions may single job job group separated list job ids groups
given id categorizer state document extracts job id docid categorizer state document id job id null id valid
ids formed v54
compare fields
compare fields
equality test
earliestrecordtimestamp set ie null set timestamp timestamp candidate time illegalstateexception earliestrecordtimestamp already set
total number input records read processed record count date parse error records count order record count records missing fields counted still written total number input records read long
given id state document extracts job id docid state document id job id null id valid
given id quantiles document extracts job id docid quantiles document id job id null id valid
compare fields
data store id bucket influencer
compare fields embedded anomaly records if any
data store id record
compare fields embedded anomaly records if any
test fieldname one reserved names contains dots segment first reserved name fieldname containing dots represents nested fields case care top level fieldname document field name may contain dots true fieldname reserved name top level segment reserved name
updates source new values object returning new job source source job updated maxmodelmemorylimit maximum model memory allowed new job equivalent source updated
create config validating structure exact analyzertokenizerfilter names
parse categorizationanalyzer configuration cluster state custom parser needed due complexity format many elements able specified either name builtin element object containing custom definition parser strict parsing config lenient parsing cluster state
method used unit tests production code config always parsed fragment
create categorizationanalyzer mimics tokenizer filters built ml c code do default analyzer categorization ensure people upgrading previous versions get behaviour categorization jobs upgrade categorizationfilters categorization filters if any analysisconfig default categorization analyzer
returns job types compatible node running nodeversion nodeversion version node compatible job types
meant called new job created optionally validate model memory limit max limit set current version defaults missing values
call method validate job json provided user valid throws exception problems normal return implies valid
returns timestamp data accepted job latest record timestamp minus job latency datacounts job data counts timestamp data accepted job
make best estimate jobs memory footprint using information available job established model memory size best estimate otherwise assume maximum model memory limit eventually required either case fixed overhead added account memory required program code stack estimate memory requirement job bytes
return list fields set invalid set job created eg model snapshot id set job creation list fields set fields be
get input data fields mentioned job configuration namely analysis fields time field collection fields never null
builds job used existing job built opposed builddate job
builds job given createtime current version used new job created opposed build createtime time job created job
set wall clock time last data upload lastdatatime wall clock time
caseinsensitive string method works either json json etc value string representation data format
overridden equality test
check characters used field name cause problems field field name validated
returns list byfieldname overfieldname partitionfieldname null list byfieldname overfieldname partitionfieldname null
returns set byoverpartition terms
appends given stringbuilder default description given detector detector detector default description requested sb stringbuilder append
returns default description given detector detector detector default description requested default description
checks configuration valid check nonnull bucketspan latency 0 check nonnull latency maxlatency check least one detector configured check detectors configured correctly check overlappingbuckets set appropriately check multiplebucketspans set appropriately if per partition normalization configured least one detector must partition field influences used
return set fields required analysis influencer fields metric field partition field field field detector plus summary count field categorization field name job null empty strings filtered config set required analysis fields never null
creates completely random update job null random update valid given job
overridden equality test
gets limit number examples stored per category limit null set
maximum size model mb anomaly detector drop new samples prevent model using memory set memory limit null set
creates new analysislimits object validating external limitations filling missing values defaults validations check model memory limit doesnt exceed maxmodelmem setting source optional analysislimits whose explicit values copied maxmodelmemorylimit max allowed model memory limit defaultmodelmemorylimit default model memory limit used explicit value missing new analysislimits validated missing values
test analysisconfiganalysisfields method produces list analysis fields detectors
create elasticsearch mapping state state could potentially huge target document size 16mb many documents analysis elasticsearch disabled way retrieve state knowing id particular document
anomalyrecord fields added properties section mapping builder add properties builder ioexception write error
create elasticsearch mapping plain modelsnapshot all field disabled type searchable
datacounts mapping type disabled datacounts arent searchable all field disabled ioexception builder write error
modelsizestats fields added properties section mapping builder add properties builder ioexception write error
create elasticsearch mapping plain categorydefinition all field disabled document isnt meant searched ioexception builder error
creates default mapping dynamic template treats dynamically added fields keywords needed perjob term fields automatically added fields type text index mappings newly rolled indices ioexception write error
inserts meta containing useful information like version mapping template builder builder mappings ioexception write error
create elasticsearch mapping results objects buckets anomalyrecords influencer bucketinfluencer mapping custom field containing fieldvalue fields eg byfieldvalue overfieldvalue etc custom field allfieldvalues must set index settings custom field preferred usual all field fields belong all disabling all using custom field simplifies mapping fields copied custom field byfieldvalue partitionfieldvalue overfieldvalue anomalycausecorrelatedbyfieldvalue anomalycausebyfieldvalue anomalycausepartitionfieldvalue anomalycauseoverfieldvalue anomalyrecordinfluencersinfluencerfieldvalues influencerinfluencerfieldvalue ioexception write error
name alias pointing write index job jobid job id write alias
delete list model snapshots corresponding state documents modelsnapshots model snapshots delete
delete results marked interim
asynchronously delete result types buckets records influencers cutofftime cutoffepochms results time deleted listener response listener
validates datafeedconfig relation job refers datafeedconfig datafeed config job job
lists indices types compared equality sorted first test could fail simply indices types lists different orders
applies update given datafeedconfig new datafeedconfig contains update
calculates sensible default frequency given bucket span default depends bucket span 2 mins 1 min 20 mins bucket span 2 12 hours 10 mins 12 hours 1 hour datafeed aggregations default frequency closest multiple histogram interval based rules above bucketspan bucket span default frequency
lists indices types compared equality sorted first test could fail simply indices types lists different orders
checks searchresponse ok status code shard failures
combines user query time range query
returns date histogram interval epoch millis valid throws elasticsearchexception validation error
find return date histogram aggregations aggregations list aggregations histogramaggregationbuilder datehistogramaggregationbuilder
get interval histogramaggregation throw illegalstateexception histogramaggregation histogramaggregationbuilder datehistogramaggregationbuilder histogramaggregation must histogramaggregationbuilder datehistogramaggregationbuilder histogram interval
find date histogram aggfactory extract interval throws date histogram histogram sibling aggregations aggfactory aggregations factory histogram interval
expands expression set matching names example given set names foo1 foo2 bar1 bar2 expressions resolve follows foo1 foo1 bar1 bar1 foo1foo2 foo1 foo2 foo foo1 foo2 1 bar1 foo1 bar1 bar2 foo1 foo2 all bar1 bar2 foo1 foo2 expression expression resolve allownomatch false error thrown name matches expression applies wild card expressions expression wildcard setting true suppress exception sorted set matching names
creates nameresolver aliases nameset set names notfoundexceptionsupplier supplier resourcenotfoundexception used expression matches name unaliased nameresolver
surrounds double quotes given input contains nonword characters double quotes contained input escaped input non null string input contain nonword characters new string contains input surrounded double quotes otherwise
returns path parent field fieldpath nested fieldpath itself fieldpath field path path parent field code fieldpath nested fieldpath
restfriendly objectrequirenonnull
creates error message explains shard failures displays info first failure shardreason kindly asks see info logs
aligns value multiple interval rounding down value value align multiple interval interval interval multiple interval less equal value
aligns value multiple interval rounding up value value align multiple interval interval interval multiple interval greater equal value
creates formatter according given pattern pattern pattern used formatter null see datetimeformatter syntax accepted patterns defaulttimezone timezone used dates without timezone information timestampconverter illegalargumentexception pattern invalid cannot produce full timestamp eg contains date time
check given timevalue multiple baseunit
first tries parse date first long convert epoch time long number 10 digits considered time milliseconds else 10 less digits seconds fails tries parse string using datefieldmapperdefaultdatetimeformatter date string cannot parsed 1 returned epoch time milliseconds 1 date cannot parsed
checks given timevalue nonnegative multiple value baseunit 400ms valid base unit seconds 450ms invalid base unit seconds valid base unit milliseconds
checks given timevalue positive multiple value baseunit 400ms valid base unit seconds 450ms invalid base unit seconds valid base unit milliseconds
convert scheduled event detection rule rule 2 time based conditions start end event rules start end times aligned bucket span start time rounded bucket interval end time rounded up bucketspan bucket span align event detection rule
jobids mix job groups job ids id calendar id jobids list job ids job groups description optional description
creates new key configuration backed key certificate chain provided keypath path key file keypassword password key certchainpath path file containing certificate chain
tests reloading sslcontext pem key certificate used
tests reloading trust config backed pem files exception reloading exception caused truncating certificate file monitored
tests reloading keystore exception reloading exception caused truncating keystore monitored
tests reloading key config backed pem files exception reloading exception caused truncating key file monitored
creates closeablehttpclient trusts given certificates trustedcertificatepaths certificates client trusts
test reloading sslcontext whose trust config backed pem certificate files
tests reloading keystore used keymanager sslcontext
tests reloading truststore exception reloading exception caused truncating truststore monitored
tests reloading sslcontext trust store modified store used truststore for reloadable sslcontext used httpclient keystore mockwebserver
withoutprefix withprefix prefix prefix setting defined must either empty string string ending
construct settings prefixed is used read settings object configuration keys prefixedchildren settings prefix string must end ssl
create new configuration based provided parameters truststorepath path truststore truststorepassword password truststore truststorealgorithm algorithm use reading truststore
decodes othername cn certificate value der encoded subject alternative name certificate certificate cn null could parsed
construct asn1 tlv tlv could either constructed primitive entity first byte der encoding made following fields bit 8bit 7bit 6bit 5bit 4bit 3bit 2bit 1 class cf type class universal application context private cf constructed flag 1 field constructed type actually called tag asn1 indicates data type integer string construct sequence choice set tag tag identifier length length field value encoded octet string field
decode length field support length encoding 4 octets berder encoding length encoded 2 forms short form one octet bit 8 value 0 bits 71 give length long form two 127 octets only 4 supported here bit 8 first octet value 1 bits 71 give number additional length octets second following octets give length base 256 significant digit first length integer
constructed field return parser content parser construct
get value integer biginteger
converts hexadecimal string byte array
removes dsa params headers openssl adds dsa private keys information redundant ioexception ec parameter footer missing
performs key stretching manner openssl does basically kdf uses n rounds salted md5 as many times needed get necessary number key bytes httpswwwopensslorgdocsman110cryptopemwritebioprivatekeytraditionalhtml
parses der encoded dsa key dsaprivatekeyspec using minimal derparser keybytes private key raw bytes dsaprivatekeyspec ioexception der encoded key cant parsed
creates privatekey contents file supports pkcs1 pkcs8 encoded formats encrypted plaintext rsa dsa ecsecp256r1 keys keypath path key file passwordsupplier password supplier potentially encrypted password protected key private key contents file
creates privatekey contents breader contains encrypted private key encoded pkcs8 breader bufferedreader containing key file contents keypassword password encrypted password protected key privatekey ioexception file cant read generalsecurityexception private key cant generated pkcs8encodedkeyspec
creates cipher contents dekinfo header pem file rfc 1421 indicates supported algorithms defined rfc 1423 rfc 1423 defines descbs triple des ede cbc mode aes cbc mode also widely used though 3 different variants 128 192 256 bit keys dekheadervalue value dekinfo pem header password password key encrypted cipher appropriate algorithm parameters used decryption generalsecurityexception algorithm available used security provider key inappropriate cipher ioexception dekinfo pem header invalid
creates privatekey contents breader contains ec private key encoded openssl traditional format breader bufferedreader containing key file contents passwordsupplier password supplier potentially encrypted password protected key privatekey ioexception file cant read generalsecurityexception private key cant generated ecprivatekeyspec
creates privatekey contents breader contains plaintext private key encoded pkcs8 breader bufferedreader containing key file contents privatekey ioexception file cant read generalsecurityexception private key cant generated pkcs8encodedkeyspec
parses der encoded ec key ecprivatekeyspec using minimal derparser keybytes private key raw bytes ecprivatekeyspec ioexception der encoded key cant parsed
decrypts password protected contents using algorithm iv specified pem headers file pemheaders proctype dekinfo pem headers extracted key file keycontents key base64 encoded string passwordsupplier password supplier encrypted password protected key decrypted key bytes generalsecurityexception key cant decrypted ioexception pem headers missing malformed
creates privatekey contents breader contains rsa private key encoded openssl traditional format breader bufferedreader containing key file contents passwordsupplier password supplier potentially encrypted password protected key privatekey ioexception file cant read generalsecurityexception private key cant generated rsaprivatecrtkeyspec
parses der encoded private key reads algorithm identifier object oid keybytes private key raw bytes string identifier key algorithm rsa dsa ec generalsecurityexception algorithm oid parsed asn1 unknown ioexception der encoded key cant parsed
removes ec headers openssl adds ec private keys information redundant ioexception ec parameter footer missing
parses der encoded rsa key rsaprivatecrtkeyspec using minimal derparser keybytes private key raw bytes rsaprivatecrtkeyspec ioexception der encoded key cant parsed
creates privatekey contents breader contains dsa private key encoded openssl traditional format breader bufferedreader containing key file contents passwordsupplier password supplier potentially encrypted password protected key privatekey ioexception file cant read generalsecurityexception private key cant generated dsaprivatekeyspec
create new sslservice parses settings ssl contexts need created creates them caches use later
indicates whether client authentication enabled particular configuration
returns information certificate referenced ssl configuration includes certificates used identity with private key used trust excludes certificates provided jre due nature keystores may include certificates available never used ca certificate longer use server certificate unrelated host trustconfigcertificatesenvironment
creates sslcontext based provided configuration sslconfiguration configuration use context creation created sslcontext
invalidates sessions provided sslsessioncontext
create new ssliosessionstrategy based provided settings settings used identify ssl configuration used create context settings settings used identify ssl configuration typically ssl prefix empty settings return context created default configuration never null method fail ssl configuration uses orgelasticsearchcommonsettingssecuresetting orgelasticsearchcommonsettingssecuresettings closed use getsslconfigurationstring ssliosessionstrategysslconfiguration deprecated removed monitoring uses dynamic ssl settings
parses settings load sslconfiguration objects used
returns existing sslcontextholder configuration illegalargumentexception found
returns existing sslconfiguration given settings settings settings ssl configuration ssl configuration provided settings settings empty global configuration returned
creates sslcontext based provided configuration trustkey managers sslconfiguration configuration use context creation keymanager key manager use trustmanager trust manager use created sslcontext
create new sslsocketfactory based provided configuration socket factory also properly configure ciphers protocols socket created configuration ssl configuration use typically obtained getsslconfigurationstring never null
returns whether provided settings results valid configuration used server connections sslconfiguration configuration check
maps supported protocols appropriate ssl context algorithm make attempt use best algorithm possible names method taken hrefhttpdocsoraclecomjavase8docstechnotesguidessecuritystandardnameshtmljca standard algorithm name documentation java 8
creates new sslservice supports dynamic creation sslcontext instances instances created service cached monitored reloading dynamic server access cached monitored instances created initialization
returns existing sslcontextholder configuration illegalargumentexception found
creates sslengine based provided configuration sslengine used connection requires hostname verification assuming provided host port correct sslengine created method useful clients hostname verification enabled configuration ssl configuration host host remote endpoint using hostname verification match remote endpoints certificate port port remote endpoint sslengine getsslconfigurationstring
map settings prefix settings object
returns intersection supported ciphers requested ciphers method also optionally log unsupported ciphers requested illegalargumentexception supported ciphers requested ciphers
returns unique set directories need monitored based provided file paths
reloads ssl context associated configuration visible tests override needed
collects directories need monitored provided sslconfiguration instances ensures watched changes
provides list paths files back configuration
creates new sslconfiguration given settings globaldefault sslconfiguration settings contain value given aspect value global configuration used settings ssl specific settings settings ssl prefix globalsslconfiguration default configuration used fallback
creates new sslconfiguration given settings fallback configuration invoking constructor unconfigured aspects take default values settings ssl specific settings settings ssl prefix
returns information certificate referenced ssl configurations includes certificates used identity with private key used trust excludes certificates provided jre trustconfigcertificatesenvironment
creates new configuration used load key trust material keystore keystorepath path keystore file keystoretype type keystore file keystorepassword password keystore keypassword password private key keystore keystorealgorithm algorithm keystore truststorealgorithm algorithm use loading truststore
read certificatekey pairs pkcs12 container path path pkcs12 container file password password container file keypassword supplier password key key alias supplied argument function return password key returns null keypair alias read
creates x509extendedtrustmanager based provided certificates certificates certificates trust trust manager trusts provided certificates
returns x509extendedkeymanager built provided private key certificate chain
reads provided paths parses certificate objects certpaths paths pem encoded certificates environment environment resolve files against may null array certificate objects
loads truststore creates x509extendedtrustmanager truststorepath path truststore truststorepassword password truststore truststorealgorithm algorithm use truststore env environment use file resolution may null trust manager trust material store
creates keystore pem encoded certificate key file
resolves path without environment may running transport client access environment
creates x509extendedtrustmanager based trust material provided keystore
returns x509extendedkeymanager built provided keystore
merges default trust configuration provided trustconfig trustconfig trust configuration merge trustconfig represents combination trust configurations
task store result finished
sets index
loads builtin template returns source
checks versioned template exists exists checks version greater equal current version templatename name index template state cluster state
checks template given name exists matches version predicate given versionkey property mappings meta field stores version info templatename name index template state cluster state logger logger predicate predicate execute version check
filters source replaces template version property version number
loads resource classpath returns bytesreference
checks versioned template exists exists checks uptodate current version versionkey property mappings meta field stores version info templatename name index template state cluster state logger logger
parses validates source empty
loads json template resource puts provided map
returns string representation cronexpression string representation cronexpression
advance calendar particular hour paying particular attention daylight saving problems cal calendar operate hour hour set
constructs new cronexpression based specified parameter expression string representation cron expression new object represent illegalargumentexception string expression cannot parsed valid cronexpression
returns next datetime after given datetime satisfies cron expression time time since epoch 1 next time unsupported eg cron expression points time previous given time next valid time since epoch
indicates whether specified cron expression parsed valid cron expression expression expression evaluate boolean indicating whether given expression valid cron expression
specifies type requested indices ignore wildcard indices expressions example indices dont exist
optional timeout control long graph exploration allowed take
types documents graph exploration run against defaults types
routing values control shards action executed on
optional choice singlevalue field diversify sampled search results
number topmatching documents considered hop default sampleraggregationbuilderdefaultshardsamplesize small values less 50 may provide sufficient weightofevidence identify significant connections terms large values many thousands recommended loosely defined queries fuzzy queries many clauses useful signals best documents diluted irrelevant noise lowquality matches performance also typically better smaller samples less lookups required background frequencies terms found documents maxnumberofdocsperhop shardlevel sample size documents
optional number permitted docs value sampled search results must also declare field using samplediversityfield
separated list routing values control shards action executed on
optional timeout control long graph exploration allowed take
controls choice algorithm used select interesting terms default value true means terms selected based significance see significantterms aggregation rather popularity using termsaggregator value true significantterms algorithm used
add field hop look terms highly linked previous hops optionally guiding query fieldname field chosen index
adds term excluded results term term excluded
certainty threshold defines weightofevidence required term found field identified useful connection value minimum number documents contain term found samples used across shards
certainty threshold defines weightofevidence required term found field identified useful connection value minimum number documents contain term found samples used across shards
size maximum number terms returned field part hop
adds term set allowed values boost defines relative importance pursuing connections subsequent hops boost value appears part query term required term boost optional boost
graph exploration set timeout given period search operations involved hop limited remaining time available still overrun due nature best efforts timeout support timeout occurs partial results returned timeout timevalue object determines maximum length time spend exploring
add stage graph exploration hop represents stage querying elasticsearch identify terms connnected terms subsequent hop guidingquery optional choice query influences documents considered stage hop object holds settings stage graph exploration
given watch extracts decodes relevant auth header returns principal user executing watch
convert counters nested map using splitter create deeper maps nested map current configured counters
called execution finished
called execution aborted due error execution the given result reflect exactly execution failed
called execution aborted started
execute current action executes order of throttling conditional check transformation action ctx current watchs context never null
returns orgelasticsearchcommonbytesbytesreference containing toxcontent output binary format builds request provided contenttype
parse timevalue support fractional values
constructs new xcontentsource given bytes reference
decrypts provided char array returns plaintext chars chars data decrypt plaintext chars
encrypts provided char array returns encrypted values char array chars characters encrypt character array representing encrypted data
parses xcontent returns appropriate executable condition expecting following format conditiontype condition body watchid id watch parser parsing contains condition content
called whenever watch checked ie condition watch evaluated see watch executed metcondition indicates whether watchs condition met
notifies status givne actions acked current state one actions actionstatusackstatusstateackable ackable well itll change actionstatusackstatusstateacked acked when set actionstatusackstatusstateacked acked ackthrottler throttle execution action true state changed due ack false otherwise
freeze time clock preventing advancing
clock reset current time advance
active sets whether watcher inactive default
id watch id created
version sets version set running update
source source watch created xcontenttype content type source
source source watch created
sets id watch deleted
ctor found watch
ctor missing watch
starts watcher already started
stops watcher already stopped
stops watcher service already stopped
starts watcher service already started
triggerevent trigger event use
watchsource instead using existing watch use non persisted watch
recordexecution sets execution recorded history index reflected watch
sets mode given action identified id handled actionid id action actionmode mode action handled execution
ignorecondition set condition execution ignored
debug indicates whether watch execute debug mode debug mode returned watch record hold execution vars
sets id watch executed
watchsource instead using existing watch use non persisted watch
alternativeinput sets alernative input
data data associated trigger event
watchsource instead using existing watch use non persisted watch
watchsource instead using existing watch use non persisted watch
function bulk logic taking appropriate es dependencies like nodeinfo clusterstate alongside objects list deprecation checks function run checks build final list issues exist cluster nodesinfo list nodeinfo metadata objects retrieving nodelevel information nodesstats list nodestats metadata objects retrieving nodelevel information state cluster state indexnameexpressionresolver used resolve indices concrete names indices list index expressions evaluate using indexnameexpressionresolver indicesoptions options use resolving filtering indices check clustersettingschecks list clusterlevel checks nodesettingschecks list nodelevel checks indexsettingschecks list indexlevel checks run across specified concrete indices list deprecation issues found cluster
write plain cursor string serialization across xcontent
namedwriteables required deserialize cursors
read plain cursor string
find commonalities given comparison given list method applied conjunctive and disjunctive purposes or
test empty commands skipped includes commands new lines
build connection connectionstringarg connection string connect keystorelocation location keystore configure null use system keystore userexception problem information provided user
build cli
use vm options run intellij eclipse dorgjlineterminaltypexterm256color dorgjlineterminaljnafalse dorgjlineterminaljansifalse dorgjlineterminalexecfalse dorgjlineterminaldumbtrue
build terminal terminal jline terminal work enablematchbracket jline bounce cursor matching brackets disabled tests difficult predict enabled production fairly nice
constructor tests
handle exception communication server extracted method tests bubble failure
serializes search source byte array
deserializes search source byte array
collect necessary fields modifying searchsourcebuilder retrieve document
constructs new compositekeyextractor instance timezone parameter used indicate date key
named writeables needed deserialize instances plain bucketextractors
named writeables needed deserialize instances plain hitextractor
source extraction requires relative field name without parent path
extracts string either unescaped literal parameter
parses sql statement execution plan sql sql statement params list parameters statement statement parametrized logical plan
parses expression used tests
find one order by plan
convert direction string represents parses direction
create components used sql plugin
actual implementation action statically available support embedded mode
newcursor empty returns empty cursor otherwise creates new cliformattercursor wraps newcursor
ensure estimates perfect least cases
tests cliformatterformatwithheader values exactly minimum column size column names exactly minimum column size column headers longer minimum column size values longer minimum column size
tests cliformatterformatwithoutheader truncation long columns
returns random querybuilder
returns random querybuilder null
optional query dsl defined query added filter top sql query
hint many results fetch once
create new plain cliformatter formatting responses similar provided columns rows
pick good estimate buffer size needed contain rows
format provided plain sqlqueryresponse cli including header lines
serializes provided value sqlcompatible way based client mode
key must sent back sql access next page results
constructor used specifying descriptive message typically did mean instead default one withmessagestring
build marker unresolvedfunction error message function missing
build plain functiondefinition binary function aware time zone support distinct
build plain functiondefinition noargument function aware time zone support distinct
build plain functiondefinition unary function operates datetime
build plain functiondefinition unary function aware time zone support distinct
build plain functiondefinition unary function aware time zone support distinct
constructor specifying alternate functions testing
constructor clone
named writeables needed deserialize instances plain processors
constructs new aggpathinput instance action used handling cornercase results date histogram returns full date object year requires additional extraction
returns true processor defintion builds query tracks scores false otherwise used testing processordefinitioncollectfieldssqlsourcebuilder
trims trailing whitespace characters given string uses characteriswhitespacechar determine character whitespace not original string resulting string
extract substring given string using start index length extracted substring original string start starting position substring within original string 0based index position length length characters substracted substring resulting string
trims leading whitespace characters given string uses characteriswhitespacechar determine character whitespace not original string resulting string
used painless scripting
wrapper nulls around given function true nulls passed through otherwise function shortcircuited null returned
translate function name char function name reserved keyword java used internalsqlscriptutilscharacternumber
wrapper nulls around given function true nulls passed through otherwise function shortcircuited null returned
compares two expression arguments typically numbers possible otherwise returns null the arguments comparable least one null
check whether boundaries invalid upper lower not do value evaluate
build binary pyramid given list b c d using given combiner bit longer method creates balanced tree oppose plain recursive approach creates unbalanced one either left right
creates list groupby keys
test conversion long
get conversion one type another
returns true type converted type false otherwise
returns type compatible left right types one types null returns another type types numeric returns type highest precision int long float double one types string another numeric returns numeric
converts arbitrary object desired data type throws sqlillegalargumentexception conversion possible
returns true value signed false otherwise including type numeric
returns list properties nested object fields list subfield field indexed different ways null otherwise
find subclasses particular class
test class subclass node null isnt class doesnt extend abstractnodetestcase
scans class files identify classes checks subclasses node
test nodereplacechildren implementation subclass
build list arguments use calling ctor make sense ctor builds subclasses node
find longest constructor given class convention subclasses node constructor all state node constructors delegate constructor
test nodetransformpropertiesonlyjavautilfunctionfunction class implementation subclass tests implementation nodeinfo tests actual nodeinfo subclass implementations process
make argument feed subclasss ctor
make argument feed constructor tobuildclass
builds nodeinfo nodes without properties
transform properties node returning new instance n properties change
render properties node one one like foo bar baz go inside output treestring
render node tree like projectif0 filterif1 subqueryaliastest esrelationtestif2
removes query part uri
parses url provided user
build error message parse failure
parse failure response stream closed parsing complete caller must close it ioexception catastrophic failure parsing remote failure
parses generic value xcontent stream
returns string representation builder only applicable text based xcontent xcontentbuilder builder containing object converted string
translates like pattern pattern es index name expression resolver note resolver supports not notion escaping really issue since dont allow anyway pattern
translates like pattern lucene wildcard methods pays attention custom escape char gets converted used lucene escape character 0 in case every regex gets escaped followed otherwise exception thrown
converts rest column metadata jdbc column metadata
read next page results returning scroll id use fetch next page
sqlexception type exception jdbc api throw and user expects remove it need make sure types exceptions runtime otherwise thrown
converts object json representation specified jdbctype returned types needs correspond esportion classes returned typeconverterclassnameof
returns true type represents signed number false otherwise needs support params column types
converts millisecond epoc time
translates numeric jdbc type corresponding java class see javaxsqlrowsetrowsetmetadataimplgetcolumnclassname httpsdbapacheorgderbydocs105refrrefjdbc20377html
converts object val columntype type
converts millisecond epoc date
skips multiline comment starting current position i returns length comment
skips jdbc escape sequence starting current position i returns length sequence
skips line comment starting current position i returns length comment
returns number parameters specified sql query
skips string starting current position i returns length string
sqlexception type exception jdbc api throw and user expects remove it need make sure types exceptions runtime otherwise thrown
returns parameters sql statement parametrized
verify plan
check validity aggregategroupby rule needed multiple reasons 1 user might specify invalid aggregate select foo group bar 2 order byhaving might contain nongrouped attribute typically caught analyzer however wrapped function abs gets resolved because expression gets resolved little little without pushed down without analyzer modifying anything 2a also requires aggregate function 3 composite agg used group by allows ordering group keys
resolves pattern multiple separate indices
resolves names differentiating indices aliases method required since methods rely mapping tied index not alias
resolves pattern one potentially compound meaning spawns multiple indices mapping
get plain esindex mappingexception index invalid use sql
given root query or set includes root constraints find related terms start points graph navigation
step existing vertex terms looking useful connections
shuts trigger service well make sure lingering threads also need check anything final go status stopped
reload watches start scheduling state current cluster state reason reason reloading logged loadtriggeredwatches triggered watches loaded run needed reloading starting true loading newer cluster state happened parallel false otherwise
ensure watcher reloaded checking indices marked ready cluster state state current cluster state true everything good go service started
wraps abstract runnable easier supply onfailure dorun methods via lambdas ensures uncaught exception handler executing threadpool get called run code executed runnable exceptionconsumer exception handling code executed runnable fails abstractrunnable instance pass executor
start watcher service load watches background state current cluster state postwatchesloadedcallback callback triggered watches loaded successfully
reads watches watches indexalias puts memory short period time fed trigger service
stops watcher service marks services paused
reload watcher service switch state stopped started keep going state cluster state needed find local shards
stop execution watches node try reload anything still allow manual watch execution ie via execute watch api
find watch id parsed triggered node id id watch totalshardcount count primary shards current watches index index index local shard true parse watch node false otherwise
method indicate size watcher thread pool watches primarily bound io waiting execute synchronously makes sense certain minimum threadpool size means start fair number threads number cpus also need ensure number go crazy high really beefy machines still configured manually calculation follows use five times number processors 50 stick number processors node data node never need much threads return 1 here still allows execute watch locally need managing threads settings current settings number 5 number processors
reloads reloadable services watcher
event event containing new cluster state stop certain parts watcher watcher indices node checking shardrouting note easily possible execute watch api needs able execute anywhere means certain components stopped
check watcher stopped manually via stop api
clear current allocation ids already happened true existing allocation ids cleaned out false otherwise
index operation happened watcher shard doc type watcher remove watch id trigger service shardid shard id object document processed delete delete operation delete operation
check routing table changed local shards affected watchindex name concrete watches index pointing state new cluster state true routing tables changed local shards affected
returns mapping shard index shard allocation ids list idea basis consistent hashing order decide watch needs triggered locally another system indexed single watch action example shardidwatch 0 allocation ids sorted in cluster a b c d local allocation id b index position 1 store size allocation ids index position dataputshardidwatch 0 new tuple1 4
listen cluster state changes method start stop reload watcher service based cluster state information method checks local watch indices running event clusterchangedevent class containing current new cluster state
single watch operations check local trigger service trigger concrete watch watch parsing could optimized parsing happens primary shard supposed put trigger service point right dont care note parse primary otherwise failure replica parsing watch would result failing replica shardid shard id object document processed operation index operation index operation
case error ensure triggerservice leave anything behind todo configuration changes preindex postindex methods add watch could indexed todo watch might deleted triggerservice willing accept this todo could circumvented using threadlocal preindex contains watch cleared afterwards shardid shard id object document processed index index operation ex exception occured indexing
reload configuration alias pointing watch index changed index routing table index changed watchindex name concrete watches index pointing localshardrouting list local shards index event cluster changed event containing new cluster state
create mock cluster state returns specified index watch index
resolve failure reason reason extracted response body ex errormessageserrorscustomfield10004epic name required see httpsdocsatlassiancomjirarestcloud format error response body
turns v1 api contexts 2 distinct lists images links v2 api separated 2 top level fields
renders attachment slack compatible structure httpsapislackcomdocsattachmentsattachmentstructure
finds setting secure setting setting null returns null one exist differs getsetting calls allows null whereas methods throw exception note setting previously secure string reference setting object still insecure constructing new securestring char insecure setting
loads standard java mail properties settings given account settings standard settings readable therefore enabled user configure readable way method first loads smtp settings which corresponds java mail mailsmtp settings replaces readable keys official unreadable keys well use settings crea
intentionally emitting path may come information leak
build email note adding items attachments inlines called incorrect
extract id json payload know id poll
use default time sleep polls set
trigger initial report generation catch possible exceptions
create statistics single watch store local map allowing easy deletion case watch gets removed trigger service
returns statistics watches loaded trigger service set counters containing statistics
stop executiontriggering watches node try reload anything sit still
adds given job trigger service already registered job service job id newly added job replace old job the old job triggered anymore watch new watch
removes job associated given name trigger service jobname name job remove true job existed removed false otherwise
checks whether given time scheduled time schedule so scheduled time returned new scheduled time computed set otherwise the given time scheduled time 1 returned
reads contents parser create correct input parser parser containing input definition new input instance parser
empty currently queued tasks wait current executions finish number tasks removed
execute triggered watches successfully indexed triggered watches index response bulk response containing response indexing triggered watches watchesandcontext triggered watches context objects needed execution
updates persists status given watch watch missing because might deleted user execution method nothing returns without throwing exception
clears current executions sets new empty current executions needed method called watcher keeps running sealing executions would bad idea
pause execution watcher executor empty state pausing means new watch executions done unless pausing explicitely unset important watcher stopped scheduled watches accidentally get executed used need reload watcher based cluster state changes calling clearexecutionsandqueue way go number tasks removed
create tuple triggered watches corresponding contexts usable sync async processing events iterable list trigger events create two lists two linked lists contain triggered watches contexts
gets watch synchronous way async calls need built id id watch getresponse calling get api watch
calling method makes class stop accepting new executions throws exception instead addition waits certain amount time current executions finish returning maxstoptimeout maximum wait time wait current executions finish
tries put watch execution class watch current executions id id watch execution watch execution class returns true watch id already current executions class false otherwise
create bulk request triggered watches specified document type triggeredwatches list triggered watches doctype document type use either current one legacy bulk request triggered watches ioexception triggered watch could parsed json exception thrown
checks loaded watches put triggered watches index immediate execution note executing blocking call network thus potential source problems watches list watches loaded clusterstate current cluster state list triggered watches started execute somewhere else finished
creates http proxy system wide settings http proxy instance settings configured httpproxynoproxy instance
enriches config object optionally proxy information config request builder config object request request parsed http client
returns headers keys lowercased always consistent payload
write request via toxcontent filter certain parts needed expose secrets request httprequest object serialize xcontent xcontent parent outputstream builder params toxcontentparams parent write excludefield field exclude bytearrayinputstream contains serialized request ioexception ioexception triggered underlying toxcontent method
creates new input stream throws exception certain number bytes read maxbytesize maximum data read throwing exception underlying inputstream containing data
order test watches triggeredwatches indices also point alias rarely create starting watcher idea behind possible use migration helper upgrades see httpsgithubcomelasticelasticsearchmigration
get actions watch history hit source hits source list actions
create inline script using customscriptplugin inlinescript script compile run never null
hard failure exception thrown script condition
create watch specified id input actionconditions id id watch input input use watch actionconditions conditions add watch
stores specified watchrecord existing watchrecord overwritten
check everything set history store operate fully checks current watcher history index open state current cluster state true history store ready started
stores specified watchrecord specified watchrecord already stored call fail version conflict
test makes sure action encounters error subject throttling also ack status action watch remain awaitssuccessfulexecution long execution fails
extracts specified field data map alternative falls back action value
merges defaults provided second parameter content first applying function map key map value
reads new watcher search request instance specified parser
parses watch represented given source parsing sensitive data source might contain eg passwords converted secret secrets returned watch potentially hide sensitive data behind secret secret abstraction around sensitive data text security enabled cryptoservice used encrypt secrets method called user adds new watch moment on representations watch system use secrets sensitive data
method get indexmetadata index potentially behind alias name name index alias metadata metadata search name indexmetadata concrete index illegalstateexception alias points two indices indexnotfoundexception index exists
iterates properties field mappings returns predicates match form issuestrings type document type parentmap mapping read properties predicate predicate check issues issue returned predicate evaluates true list issues found fields
totally empty requests noop detect noops true true default
returns status shards currently finished snapshots method executed master node its complimentary snapshotshardsservicecurrentsnapshotshardssnapshot returns similar information already finished snapshots repositoryname repository name snapshotinfo snapshot info map shard id snapshot status
validates snapshot request request snapshot request state current cluster state
constructs new snapshot creation request repositoryname repository name snapshotname snapshot name cause cause snapshot operation
removes finished snapshot cluster state happen previous master node processed cluster state update marked snapshot finished previous master node died removing snapshot progress cluster state responsibility new master node end snapshot remove cluster state
initializes snapshotting process method used clients start snapshot makes sure snapshots currently running creates snapshot record cluster state metadata request snapshot request listener snapshot creation listener
sets list indices snapshotted indices list indices request
retrieves snapshot repository repositoryname repository name snapshotid snapshot id snapshot snapshotmissingexception snapshot found
removes record running snapshot cluster state notifies listener action complete snapshot snapshot failure exception snapshot failed listener listener notify snapshot information removed cluster state
deletes snapshot repository snapshot still running cancels snapshot first deletes repository snapshot snapshot listener listener repositorystateid unique id state repository
calculates list shards included current snapshot clusterstate cluster state indices list indices snapshotted list shard included current snapshot
set true partial snapshot allowed partial true partial snapshots allowed request
deletes snapshot repository snapshot snapshot listener listener repositorystateid unique id representing state repository time deletion began
returns list indices missing shards list indices closed shards list shard statuses list failed closed indices
deletes snapshot repository looking snapshot reference deleting snapshot still running cancels snapshot first deletes repository repositoryname repositoryname snapshotname snapshotname listener listener
set true global state stored part snapshot includeglobalstate true global state stored part snapshot request
checks repository currently use one snapshots clusterstate cluster state repository repository id true repository currently use one running snapshots
gets repositorydata given repository repositoryname repository name repository data
returns list currently running snapshots repository sorted snapshot creation date repositoryname repository name list snapshots
returns list snapshots repository sorted snapshot creation date repositoryname repository name snapshotids snapshots fetch snapshot information incompatiblesnapshotids snapshots fetch snapshot information ignoreunavailable true snapshots could read logged warning false throw error list snapshots
sets repositoryspecific snapshot settings settings snapshot settings request
sets master node timeout masternodetimeout master node timeout request
cleans shard snapshots running removed nodes event cluster changed event
check indices deleted currently snapshotted fail deleting index snapshotted with partial false makes snapshot fail
returns status currently running snapshots method executed master node repository repository id snapshots list snapshots used filter empty list means snapshots filtered list metadata currently running snapshots
sets indices options indicesoptions indices options request
starts snapshot creates snapshot repository updates snapshot metadata record list shards needs processed clusterstate cluster state snapshot snapshot meta data partial allow partial snapshots usercreatesnapshotlistener listener
removes snapshot deletion snapshotdeletionsinprogress cluster state
finalizes snapshot deletion progress current node master master previous cluster state still lingering snapshot deletion progress cluster state means old master failed could clean inprogress snapshot deletion attempt delete snapshot files remove deletion cluster state possible old master state long gc resumes tries delete snapshot already deleted current master acceptable however since old masters snapshot deletion respond error actuality snapshot deleted call get snapshots would reveal snapshot longer exists
check indices closed currently snapshotted fail closing index snapshotted with partial false makes snapshot fail
finalizes shard repository removes cluster state nonblocking method runs thread snapshot thread pool entry snapshot failure failure reason null snapshot successful
returns status shards snapshotted node belong given snapshot method executed data node snapshot snapshot map shard id snapshot status
creates shard snapshot snapshot snapshot snapshotstatus snapshot status
checks shards processed new master doesnt know
updates shard snapshot status sending updateindexshardsnapshotstatusrequest master node
checks new shards snapshotted node event cluster state changed event
updates shard status master node request update shard status request
tests shrunken index created via shrink apis subsequently snapshotted restored node shrunken index created longer part cluster
checks snapshots restored compatible version repository repository name snapshotinfo snapshot metadata
restores snapshot specified restore request request restore request listener restore listener
constructs new restore request repositoryname repositoryname snapshotname snapshotname indices list indices restore indicesoptions indices options renamepattern pattern rename indices renamereplacement replacement renamed indices settings repository specific restore settings masternodetimeout master node timeout includeglobalstate include global state restore partial allow partial restore indexsettings index settings changed restore ignoreindexsettings index settings shouldnt restored cause cause restoring snapshot
optionally updates index settings indexmetadata removing settings listed ignoresettings merging settings changesettings
check indices closed currently restored snapshot fail closing index found closing index restored makes index unusable it cannot recovered
checks repository currently use one snapshots clusterstate cluster state repository repository id true repository currently use one running snapshots
returns node id failure occurred node id
reads shard failure information stream input stream input shard failure information
serializes snapshot failure information json snapshotshardfailure snapshot failure information builder xcontent builder params additional parameters
constructs new snapshot shard failure object nodeid node failure occurred shardid shard id reason failure reason status rest status
returns snapshot failure reason null snapshot succeeded snapshot failure reason
compares two snapshots start time start times same compares two snapshots snapshot ids
gets new snapshotinfo instance snapshot incompatible current version cluster
constructs snapshot information stream input
method creates snapshotinfo internal xcontent handle xcontent written external version external xcontent display purposes need parsed
returns snapshot state null state unknown snapshot state
returns version elasticsearch snapshot created with return null state returns null snapshotstateincompatible version elasticsearch snapshot created
returns snapshot rest status
tests snapshot corrupted global state file still deleted
tests snapshot corrupted global state file still restored
test restoring index shard allocation filtering settings prevents allocation hang indefinitely
test restoring snapshot whose files cant downloaded stuck hang indefinitely
tests snapshot multiple indices including one corrupted index metadata file still used restore non corrupted indices
test ensures shard removed node perhaps due node leaving cluster returning snapshotting shard aborted store references held onto snapshot released see httpsgithubcomelasticelasticsearchissues20876
execute unrestorable test use case
constructs snapshot stream input
constructs snapshot
generate snapshot state code value state code state
filters list available indices based list selected indices availableindices list available indices selectedindices list selected indices indicesoptions ignore indices flag filtered indices
reads restore info streaminput stream input restore info
constructs new snapshot name snapshot name uuid snapshot uuid
constructs new snapshot input stream input stream
blocks io operation blob fails throws exception unblocked
eg storedfields none index score returned
test adds randomized fields json objects checks parse ensure parsing lenient forward compatibility need exclude json objects highlight fields field name since objects allow arbitrary keys the field names queries also want exclude add anything source since parsed avoid complexity excluding everything innerhits also keyed arbitrary names contain searchhits already tested elsewhere
build random search request randomsearchsourcebuilder builds random searchsourcebuilder use randomsearchsourcebuildersupplier supplier supplier supplier supplier
test adds randomized fields json objects checks parse ensure parsing lenient forward compatibility need exclude json objects highlight fields field name since objects allow arbitrary keys the field names queries also want exclude add anything source since parsed
source document map can null
source document string can null
need declare parse fields metadata field except id index type handled individually fields parsed entry fields map
returns bytes reference also uncompress source needed
sets representation might compressed
rendering inner xcontent object without leading field name way structure innertoxcontent renders fromxcontent parses correspond other
throw assertionerror still inflight contexts
returns shard index context currently executing search request used accounting coordinating node
shortcut ids load load from size phase controller handles well since result always size shards qtf
returns true iff given search source builder early terminated rewriting match none query words execution search request early terminated without executing it instance possible global aggregation part request suggest builder present
try load query results cache execute query phase directly cache cannot used
method quick rewrite query returns true query potentially match documents method false positives returns false query wont match documents current shard
query execute rewritten form
called executing main query parameters set
shortcut function see whether fetchsourcecontext says source requested
test getting allowed number docvaluefields throws exception
test getting allowed number scriptfields throws exception
return sorteddocvalues instance used sort root documents mode provided values filters rootinner documents every root document values inner documents aggregated allowed modes min max note calling returned instance docs root docs illegal returned instance evaluate current upcoming docs
return numericdoublevalues instance used sort documents mode provided values document value missingvalue returned allowed modes sum avg median min max
return binarydocvalues instance used sort root documents mode provided values filters rootinner documents every root document values inner documents aggregated none inner documents value missingvalue returned allowed modes min max note calling returned instance docs root docs illegal returned instance evaluate current upcoming docs
return sorteddocvalues instance used sort documents mode provided values allowed modes min max
return numericdocvalues instance used sort documents mode provided values document value missingvalue returned allowed modes sum avg median min max
return numericdocvalues instance used sort root documents mode provided values filters rootinner documents every root document values inner documents aggregated none inner documents value missingvalue returned allowed modes sum avg min max note calling returned instance docs root docs illegal returned instance evaluate current upcoming docs
return binarydocvalues instance used sort documents mode provided values document value missingvalue returned allowed modes min max
return numericdoublevalues instance used sort root documents mode provided values filters rootinner documents every root document values inner documents aggregated none inner documents value missingvalue returned allowed modes sum avg min max note calling returned instance docs root docs illegal returned instance evaluate current upcoming docs
case insensitive version valueofstring illegalargumentexception given string doesnt match sort mode null
constructor cancelled supplier cancellation flag supplier called segment wrapped collector
test edge case field level boosting applied field doesnt exist documents one shard issue reported httpsgithubcomelasticelasticsearchissues18710 multimatch query using fuzziness parameter boost one two fields returns document score documents placed different shard test recreates scenario checks returned scores different
returns whether collection within provided reader earlyterminated sorts sortandformats
packageprivate method tested without wire everything mapperservice etc whether rescoring phase executed
returns true provided query returns docs index order internal doc ids query query execute sf query sort
ctr reader index reader query lucene query sortandformats query sort numhits number top hits retrieve searchafter doc request search after trackmaxscore true max score tracked tracktotalhits true total number hits tracked hasfiltercollector true collector chain contains least one collector filters document
returns query total hit count query matchalldocsquery termquery reader deletions 1 otherwise
ctr collapsecontext collapsing context sortandformats query sort numhits number collapsed top hits retrieve trackmaxscore true max score tracked
ctr reader index reader query query execute tracktotalhits true total number hits tracked hasfiltercollector true collector chain contains filter
creates topdocscollectorcontext provided searchcontext hasfiltercollector true collector chain contains least one collector filters document
returns nulls top docs search results allows free memory top docs consumed illegalstateexception top docs already consumed
returns nulls aggregation search results allows free memory aggregation consumed illegalstateexception aggregations already consumed
sets finalized profiling results query shardresults finalized profile
returns nulls profiled results search potentially null result empty allows free memory profiled result consumed illegalstateexception profiled result already consumed
creates collector tree provided collectors wraps collector profiler collectors ordered list collector context
wraps collector profiler
creates multi collector provided subs
filters documents query score greater minscore minscore minimum score filter
creates collector limiting collection first numhits documents
creates collector tree provided collectors collectors ordered list collector context
creates collector throws taskcancelledexception search cancelled
filters documents based provided query
ctr delegate delegated collector maxcounthits number documents collect termination forcetermination whether collection terminated exception earlyterminationexception caught collector collectionterminatedexception otherwise
test parse rescore element either single object array
query profiled defaults false
indicate source fetched
optional timeout control long search allowed take
add aggregation perform part search
set sort values indicates docs request search after
read stream
true source suggest
sets minimum score docs filtered out
index start search from defaults 0
indicate source returned every hit include andor exclude set include simple wildcard elements includes optional list include optionally wildcarded pattern filter returned source excludes optional list exclude optionally wildcarded pattern filter returned source
applies sorting controls scores tracked well defaults false
add sort given field name name name field sort
optional terminateafter terminate search collecting terminateafter documents
add aggregation perform part search
adds field load doc values return part search request
indicates whether response contain stored source every hit
stats groups request aggregated under
rewrites search source builder primitive form eg rewriting querybuilder builder change identity reference must returned otherwise builder rewritten infinitely
indicates stored fields fetched
adds script field given name provided script name name field script script
sort values indicates docs request search after sort values searchafter must equal number sort fields query type or parsable such defaults null
sets stored fields load return part search request none specified source document returned
sets filter restrict search hits top hits aggregations slice results main query
sets search query request orgelasticsearchindexqueryquerybuilders
number search hits return defaults 10
adds sort builder
orgelasticsearchsearchsearchhit returned version associated it
adds sort given field name sort ordering name name field order sort ordering
parse xcontent searchsourcebuilder overwriting values specified xcontent use need set different defaults regular searchsourcebuilder would use fromxcontentxcontentparser boolean normal defaults parser xcontent parser checktrailingtokens true throws parsing exception extra tokens found main object
adds highlight perform part search
create shallow copy source replaced querybuilder postquerybuilder slicebuilder used rewritequeryrewritecontext copywithnewsliceslicebuilder
indicate source returned every hit include andor exclude set include simple wildcard elements include optional include optionally wildcarded pattern filter returned source exclude optional exclude optionally wildcarded pattern filter returned source
adds script field given name provided script name name field script script
sets boost specific index alias receive query executed it index index alias apply boost indexboost boost apply index
orgelasticsearchsearchsearchhit returned explanation hit ranking
sets filter executed query executed affect search hits not aggregations filter always executed last filtering mechanism
read stream
test case 5132 source filtering wildcards broken given multiple patterns httpsgithubcomelasticelasticsearchissues5132
explicitly tests cant list sortvalue list tested randomsearchafterbuilder
read stream
returns inner sortfieldtype expected sort field
make sure minscore works functions empty see httpsgithubcomelasticelasticsearchissues10253
field name field id id slice max maximum number slices
returns groupshardsiterator provided request
converts querybuilder lucene query context additional information needed build query
returns docidset per segments containing matching docs specified slice
field name field id id slice max maximum number slices
adds field name field list fields load
adds field names fieldnames list fields load
test case issue 4361 httpsgithubcomelasticelasticsearchissues4361
serialization constructor
sole constructor
parse fieldandformat xcontent
returns filter function expects source map input returns filtered map
load field values highlighting
create random highlight builder put test
create generic helper function performs work merging global highlight builder parameter potential overwrite field level default value highlightbuilderdefaultoptions making assertion value highlight builder actual value fieldoptions passed same highlightbuilder provides optional global builder parameter fieldbuilder provides optional field level parameter present overwrites global value options target field options checked
test serialization deserialization highlighter builder
mutate given highlighter builder returned one different one aspect
test unknown field name cause exception
test build outputs searchcontexthighlight similar parameters random highlightbuilder
creates random highlighter renders xcontent back new instance equal original
test unknown array fields cause exception
setup whole base test class
test ordinals order since serialization depends
test unknown field name cause exception
tagsschema produced toxcontent builder parseable adds simple json test this
create array unique strings unique eg duplicates field names would dropped fieldoptionsbuildermatchedfieldsset resulting test glitches
test parsing empty highlight empty fields blocks
test equality hashcode properties
send fields highlighted using syntax specific order highlighted chaining
read stream
transfers field options present input abstracthighlighterbuilder receiving fieldoptionsbuilder effectively overwriting existing settings targetoptionsbuilder receiving options builder highlighterbuilder highlight builder input options context needed convert querybuilder query ioexception errors parsing optional nested highlight query
adds field highlighted provided fragment size in characters provided maximum number fragments name field highlight fragmentsize size fragment characters numberoffragments maximum number fragments fragmentoffset offset start fragment start highlight
set matched fields highlight field data default null meaning named field provide list fields dont forget include name automatically included
set tag scheme encapsulates built pre post tags allowed schemes styled default schemaname tag scheme name
set encoder highlighting html default encoder name
read stream
fixes problems broken analysis chains positions offsets messed lead stringindexoutofboundsexception fastvectorhighlighter
test phrase boosting normal term matches note never pass plain highlighter doesnt support concept terms different weight based position highlightertype highlighter test
fhv spend long time highlighting degenerate documents phraselimit set default reasonably low
sets fragmenter use break text eligible highlighting option applicable using plain highlightertype highlighter permitted values simple span relating simplefragmenter simplespanfragmenter implementations respectively default span
using highlightertype fvh boundaryscannertype breakiterator setting controls locale use breakiterator defaults root
read stream
write common parameters streamoutput
using highlightertype fvh setting defines constitutes boundary highlighting its single string boundary character defined it defaults tn
set type highlighter use box supported types unified plain fvj defaults unified details different highlighter types covered reference guide
set number fragments defaults highlightbuilderdefaultnumberoffragments
forces highlighting highlight fields based source even fields stored separately
using highlightertype fvh setting controls scanner use fragment boundaries defaults simple
default fragments field ordered order highlighted text set orderscore changes order score fragments
set fragment size characters defaults highlightbuilderdefaultfragmentcharsize
using highlightertype fvh setting controls far look boundary characters defaults 20
set true cause field highlighted query matches field default false meaning terms highlighted requested fields regardless query matches specifically them
set post tags used highlighting
allows set custom options custom highlighters
using highlightertype fvh setting controls scanner use fragment boundaries defaults simple
set pre tags used highlighting
sets maximum number phrases fvh consider field doesnt also define phraselimit phraselimit maximum number phrases fvh consider chaining
sets query used highlighting instead search query
set true using highlightertype fvh want provide highlighting filter clauses query default false
sets size fragment return beginning field matches highlight field doesnt also define nomatchsize nomatchsize integer set null leave request default null chaining
test orientation parameter correctly persists across cluster restart
test indexed shape routing provided required
test ignoremalformed geoshapefieldmapper fail entire document
test case issue 6150 httpsgithubcomelasticelasticsearchissues6150
geo distance type used compute distance
point create range distance facets from points reference points
geohash geo point create range distance facets from deprecated please use pointsgeopoint points instead
sets validation method sort builder
copy constructor
constructs new distance based sort geo point like field fieldname geo point like field name points points create range distance facets from
sets nestedsortbuilder used fields inside nested object nestedsortbuilder takes path argument optional nested filter nested objects match order taken account sorting
read stream
creates new geodistancesortbuilder query held xcontentparser orgelasticsearchcommonxcontentxcontent format parser input parser state parser contained context changed side effect method call elementname sort syntax variations field name precedes xcontent object specifies parameters eg foo order asc parsing inner object field name passed via argument
point create range distance facets from lat latitude lon longitude
distance unit use defaults orgelasticsearchcommonunitdistanceunitmeters
returns nested filter nested objects match order taken account sorting set nested sort setnestedsortnestedsortbuilder retrieve getnestedsort
returns nested path sorting occurs field inside nested object default sorting field inside nested object nearest upper nested object selected nested path set nested sort setnestedsortnestedsortbuilder retrieve getnestedsort
defines distance use sorting case document contains multiple geo points possible values min max
sets nested filter nested objects match order taken account sorting set nested sort setnestedsortnestedsortbuilder retrieve getnestedsort
constructs new distance based sort geo point like field fieldname geo point like field name geohashes points create range distance facets from
sets nested path sorting occurs field inside nested object default sorting field inside nested object nearest upper nested object selected nested path set nested sort setnestedsortnestedsortbuilder retrieve getnestedsort
issue 3073
write objects fields plain streamoutput
returns nested path sorting occurs field inside nested object set nested sort setnestedsortnestedsortbuilder retrieve getnestedsort
read stream
copy constructor
sets nested filter nested objects match order taken account sorting set nested sort setnestedsortnestedsortbuilder retrieve getnestedsort
sets value field missing doc also set last first sort missing last first respectively
sets nested path sorting occurs field inside nested object default sorting field inside nested object nearest upper nested object selected nested path set nested sort setnestedsortnestedsortbuilder retrieve getnestedsort
returns nested filter nested objects match order taken account sorting set nested sort setnestedsortnestedsortbuilder retrieve getnestedsort
set type use case current field mapped index specifying type tells elasticsearch type sort values have important crossindex search sort fields exist indices only unmapped type null query execution fail one indices dont mapping current field
constructs new sort based document field fieldname field name
defines values pick case document contains multiple values targeted sort field possible values min max sum avg last two values applicable number based fields
sets nestedsortbuilder used fields inside nested object nestedsortbuilder takes path argument optional nested filter nested objects match order taken account sorting
test sort builder mode gets transfered correctly sortfield
test coercion used point gets normalized original values builder unchanged
test nested sort gets rewritten
test nested filter gets rewritten
test either set nested sort via pathfilter via nested sort builder
test sort builder nested object gets created sortfield
test sort builder order gets transfered correctly sortfield
test validation strict invalid points throw error
set order sorting
test sort builder nested object gets created sortfield
test nested sort gets rewritten
test sort builder order gets transfered correctly sortfield
test sort builder mode gets transfered correctly sortfield
test nested filter gets rewritten
test either set nested sort via pathfilter via nested sort builder
test min max mode work nonnumeric fields modes throw exception
test missing values get transfered correctly sortfield
test two syntax variations sort fieldname sort fieldname asc
test parsing random syntax variations
test array syntax variations sort fieldname fieldname2 asc
test parsing order parameter specified order field json instead reverse field render toxcontent
test passing null scoresortbuilderordersortorder illegal
return minimal value set values
create nestedsortbuilder random path filter given depth
test filters inner nested sorts get rewritten
test equality hashcode properties
test serialization test nested sort
gets nested path set nested sort setnestedsortnestedsortbuilder retrieve getnestedsort
sets nested filter nested objects match order taken account sorting set nested sort setnestedsortnestedsortbuilder retrieve getnestedsort
sets nested path sorting occurs field inside nested object sorting script needs specified set nested sort setnestedsortnestedsortbuilder retrieve getnestedsort
read stream
defines distance use sorting case document contains multiple values scriptsorttypestring set possible values restricted sortmodemin sortmodemax
constructs script sort builder given script script script use type type script either scriptsorttypestring scriptsorttypenumber
gets nested filter set nested sort setnestedsortnestedsortbuilder retrieve getnestedsort
sets nestedsortbuilder used fields inside nested object nestedsortbuilder takes path argument optional nested filter nested objects match order taken account sorting
test nested filter gets rewritten
test nested sort gets rewritten
test correct comparator sort returned based script type
test sort builder nested object gets created sortfield
test sort builder mode gets transfered correctly sortfield
test either set nested sort via pathfilter via nested sort builder
script sort type scriptsorttype work sortmodeavg sortmodemedian sortmodesum
return field type use numberfieldmappernumberfieldtype default since compatible sort modes tests require field types override this
test serialization deserialization test sort
test build outputs sortfield similar one would get parsing xcontent sort builder rendering
test creates new sort random test sort checks equality
test equality hashcode properties
build scoresortbuilder default descending sort order
check ordinals remain stable rely serialisation
public constructor field name field collapse
tests use optimization shrinking batch size shard thus integermaxvalue window doesnt oom us
build context rescorer rescorer actually performing rescore
returns true provided docs sorted score
test queryrescoremode enum ordinals names since serialization relies
returns new topdocs topn incoming one topdocs number hits already topn
modifies incoming topdocs in replacing top hits resorteds hits resorting hits
create new parser rescorer string representation reset context
creates random rescorer renders xcontent back new instance equal original
test equality hashcode properties
test serialization deserialization rescore builder
test build outputs rescorecontext properties test builder
test parsing exceptions incorrect rescorer syntax
setup whole base test class
create random shape put test
sets original query weight rescoring default 10
read stream
creates new queryrescorerbuilder instance builder query builder build rescore query
sets original query weight rescoring default 10
sets original query score mode default queryrescoremodetotal
build plain rescorecontext used actually execute rescore particular shard
convert record map timingtype times
sole constructor
timings map breakdown timing node total time node
read stream
switch new profile
sole constructor profilers instance initially wrap one queryprofiler
recursive helper finalize node dependency tree token node currently finalizing hierarchical representation tree inclusive children level
helper method add new node dependency tree initializes new list dependency tree saves query generates new queryprofilebreakdown track timings query element element profile token assigned token element profilebreakdown profile element
query run profiled need merge flat timing map dependency graph build data structure mirrors original query tree hierarchical representation profiled query tree
returns queryprofilebreakdown scoring query scoring queries eg past rewrite phase wrapped createweight follow recursive progression track dependency tree simple stack hiccup first scoring query identical last rewritten query need take special care fix query scoring query wish profile profilebreakdown query
internal helper add child current parent node childtoken child add current parent
return number times start called
start timer
stop timer
return approximation total time spent consecutive calls start stop
helper method convert profiler internalprofileshardresults serialized nodes emitted json etc profilers profilers convert results profileshardresult representing results shard
creates humanfriendly representation collector name internalbucket collectors use aggregation name tostring method makes profiled output bit nicer c collector derive name hopefully prettier name
read stream
read stream
set collector associated profiler
test verifies output reasonable simple nonnested query
tests series three nested boolean queries single leaf match query rewrite process collapse single bool tests make sure nothing catastrophic happens fairly substantial rewrite
test makes sure profile results returned profiling disabled
test simply checks make sure nothing crashes test indexes 100150 documents constructs 20100 random queries tries profile
tests boolean query children clauses
test verifies output reasonable nested query
test generates 110 random queries executes profiled nonprofiled search query basic sanity checking score hits make sure profiling doesnt interfere hits returned
begin timing query specific timing context
halt timing process add elapsed rewriting time startrewritetime must called particular context prior calling stopandaddrewritetime otherwise elapsed time negative nonsensical elapsed time
read stream
test parsing works randomly created aggregations object randomized aggregation tree test randomly chooses xcontenttype randomizes order xcontent fields randomly sets humanreadable flag rendering xcontent addrandomfields set also add random xcontent fields tests parsers lenient future additions rest responses
returns whether one parents bucketsaggregator
get value specified path aggregation path path property aggregation tree value property
reduces given aggregations single one returns it most cases assumption given aggregations type the type aggregation best efficiency implementing try reusing existing instance typically first given list save redundant object construction
write size assumption value 0 means unlimited
read size assumption value 0 means unlimited
constructs get given name name name get
read stream
read stream
registers subfactories factory subfactory responsible creation subaggregators aggregator created factory subfactories subfactories factory fluent interface
add sub aggregation aggregation
create aggregators consumed multiple buckets
rewrites underlying aggregation builders primitive form builder change identity reference must returned otherwise builder rewritten infinitely
read stream
testing
sub leaf collector sub aggregations values values scorerawaresetscorer called automatically implement scoreraware
test serialization deserialization test aggregatorfactory
generic test creates new aggregatorfactory test aggregatorfactory checks equality asserts equality two queries
generic test checks tostring method renders xcontent correctly
setup whole base test class
test serialization deserialization test aggregatorfactory
generic test creates new aggregatorfactory test aggregatorfactory checks equality asserts equality two queries
parse token type xcontentparsertokenvaluenumber xcontentparsertokenstring double cases default value returned instead
wrap given collectors single instance
subtests need complex mock overwrite
added randomly run assertions index searcher level like orgapacheluceneutillucenetestcasenewsearcherindexreader cant used also wraps indexsearchers indexreader implementations cant handle eg parallelcompositereader
create factory given aggregation builder
added randomly run assertions index reader level like orgapacheluceneutillucenetestcasewrapreaderindexreader cant used also wraps indexreader implementations cant handle eg parallelcompositereader
divides provided indexsearcher subsearcher one segment builds aggregator subsearcher filtered provided query returns reduced internalaggregation
constructs new aggregator factory name aggregation name ioexception error occurs creating factory
utility method given aggregatorfactory creates aggregators know collect bucket 0 returns aggregator collect bucket
reduces given lists addaggregation aggregationslist list aggregation reduce reduced addaggregation
constructs new aggregator name name aggregation factories factories subaggregators aggregator context aggregation context parent parent aggregator may null top level aggregators metadata metadata associated aggregator
called upon release aggregator
name aggregation
called collection document done
increment decrement number bytes allocated service request potentially trigger circuitbreakingexception number bytes allocated automatically decremented circuit breaker service closure aggregator memory returned decrement without tripping breaker performance reasons subclasses call millions times small increments instead batch larger allocations bytes number bytes register negative deregister bytes cumulative size bytes allocated aggregator service request
parent aggregator aggregator addaggregation hierarchical sense composed others more specifically bucket addaggregation define addaggregation aggregated per bucket method returns direct parent aggregator contains aggregator null none meaning aggregator top level one
current aggregation context
aggregators dont need scores make sure extend method aggregator needs them
top aggs eg datehistogram executed unmapped fields generate estimate count buckets zero sub aggregator created take estimation account used cause arrayindexoutofboundsexception
making sure multiple aggregations working field yet require different value source type still work used fail used cache valuesource field name cached value source type bytes another aggregation field required see numeric didnt work cache value sources custom key field name valuesource type theres conflict there
returns aggregation associated specified name
iterates aggregations
returns aggregations keyed aggregation name
directly write aggregations without bounding object used subaggregations non top level aggs
rewrites given aggregation primitive form aggregations instance fetch resources remote hosts simplify optimize heavy lifting rewritequeryrewritecontext method rewrites aggregation doesnt change anymore ioexception ioexception occurs
constructs new aggregation builder name aggregation name
histogram order backwards compatibility logic read bucketorder streaminput stream order data read bwcorderflag true check inreadboolean backwards compat logic reading order false skip flag order always present order read stream ioexception error reading stream
create new comparator sorting buckets multiple criteria compoundorder list bucketorders sort on order priority aggregator bucketordercomparatoraggregator
compare bucketgetkey appropriate implementation
read bucketorder streaminput stream order data read order read stream ioexception error reading stream
histogram order backwards compatibility logic write bucketorder stream order order write stream stream write order to bwcorderflag true always outwritebooleantrue backwards compat logic writing order false skip flag ioexception error writing stream
write bucketorder streamoutput order order write stream stream write order to ioexception error writing stream
creates ordering strategy sorts buckets property id unique id ordering strategy key key property sort on asc direction sort by true ascending false descending comparator determines buckets ordered
determine ordering strategy matches expected one order bucket ordering strategy check compoundorder first element check instead expected expected bucket ordering strategy true order matches false otherwise
validate bucket ordering strategy aggregator order bucket ordering strategy sort on aggregator aggregator sort unmodified bucket ordering strategy aggregationexecutionexception validation fails
create new ordering strategy sort multiple criteria compoundorder list bucketorders sort on order priority absoluteordering true add tiebreaker avoid nondeterministic ordering needed false otherwise
create new bucket ordering strategy sort subaggregation path path subaggregation sort on asc direction sort by true ascending false descending aggregationpath
parse bucketorder xcontent parser parsing xcontent contains order bucket ordering strategy ioexception error xcontent parsing error
creates new aggregation context parsed aggregator factories
counts number inner buckets inside provided internalbucket
counts number inner buckets inside provided aggregation
constructs new pipeline aggregator factory name aggregation name
make sure request using script get cached request using script get cached
make sure request using script get cached request using script get cached
make sure request using script get cached request using script get cached
make sure request using script get cached request using script get cached
make sure request using script get cached request using script get cached
make sure request using script get cached request using script get cached
make sure request using script get cached request using script get cached
make sure request using script get cached request using script get cached
make sure request using script get cached request using script get cached
test forces geoboundsaggregator resize bigarrays uses ensure resized correctly
test passing keyed filters map equivalent
make sure request using script get cached request using script get cached
make sure request using script get cached request using script get cached
make sure request using script get cached request using script get cached
make sure request using script get cached request using script get cached
make sure request using script get cached request using script get cached
read stream
read stream
read stream
number search hits return defaults 10
adds highlight perform part search
orgelasticsearchsearchsearchhit returned version associated it
add sort given field name name name field sort
adds script field given name provided script name name field script script
read stream
sets stored fields load return part search request disable stored fields entirely source metadata fields use storedfieldnone
adds sort builder
indicate source returned every hit include andor exclude set include simple wildcard elements include optional include optionally wildcarded pattern filter returned source exclude optional exclude optionally wildcarded pattern filter returned source
indicates whether response contain stored source every hit
adds sort builder
indicate source returned every hit include andor exclude set include simple wildcard elements includes optional list include optionally wildcarded pattern filter returned source excludes optional list exclude optionally wildcarded pattern filter returned source
applies sorting controls scores tracked well defaults false
adds script field given name provided script name name field script script
orgelasticsearchsearchsearchhit returned explanation hit ranking
index start search from defaults 0
adds field load doc values return part search request
indicate source fetched
adds sort given field name sort ordering name name field order sort ordering
tests tophits inside terms strictly unit test fairly common way run tophits serves good example running tophits inside another aggregation
read stream
set whether xcontent response keyed
read stream
set values compute percentiles from
expert set number significant digits values relevant using percentilesmethodhdr
expert set compression higher values improve accuracy also memory usage relevant using percentilesmethodtdigest
expert set compression higher values improve accuracy also memory usage relevant using percentilesmethodtdigest
set whether xcontent response keyed
read stream
expert set number significant digits values relevant using percentilesmethodhdr
read stream
read stream
read stream
set precision threshold higher values improve accuracy also increase memory usage
replacement values always rehashed
read stream
add k hash table associated bucket return 1 value already set new set size added
compute required precision count distinct entries would counted linear counting
encode hash 32 bits encoded hash cannot equal 0
read stream
mock script service script run looks states context variable visible executing script simply returns count equal number input internalscriptedmetrics reduced total
test explicitly added agg param honored
cannot use mockito mocking queryshardcontext case scriptrelated methods eg queryshardcontextgetlazyexecutablescript final cannot mocked
test agg param implicitly added
test uses score documents
cannot use mockito mocking queryshardcontext case scriptrelated methods eg queryshardcontextgetlazyexecutablescript final cannot mocked
without combine script states map contain list size number documents matched
test combine script sums list produced mapscript
mock script service script run looks aggs parameter verify put place internalscriptedmetric
set reduce script
set parameters available init map combine phases
read stream
set map script
set init script
set combine script
read stream
read stream
read stream
set whether wrap longitudes defaults true
read stream
read stream
read stream
read stream
read stream
read stream
return map field names data
return covariance two fields
return skewness requested field
creates results object given stream
return fied count requested field
return value two fields upper triangular matrix regardless row col location
return variance requested field
computes final covariance variance correlation
return mean requested field
base ctor
creates computes result provided stats
return correlation coefficient two fields
marshalls matrixstatsresults
return kurtosis requested field
merges descriptive statistics second data set eg per shard running computations taken from httpprodsandiagovtechlibaccesscontrolcgi2008086212pdf
updates running statistics documents field values
ctor create instance running statistics
update covariance matrix
merges two covariance matrices
per shard ctor
get variance given field
read stream
get mean given field
get correlation two fields
get distribution shape given field
get covariance two fields
get number samples given field doccount nummissing
get distribution skewness given field
get number documents
test running stats
test merging stats across observation shards
resolves topmost aggregator pointed path using given root point reference root point reference path first child aggregator root pointed path
resolves aggregator pointed path using given root point reference root point reference path aggregator pointed path starting given aggregator point reference
validates path given aggregator point reference root point reference path aggregationexecutionexception validation error
resolves value pointed path given aggregations root root root serves point reference path resolved value
sets valuetype value produced aggregation
sets field use aggregation
sets time zone use aggregation
sets script use aggregation
sets format use output aggregation
read aggregation stream serialize targetvaluetype used subclasses
read aggregation stream serializes targetvaluetype used subclasses override serializetargetvaluetype return true
read stream
sets value use aggregation finds missing value document
sets format use output aggregation
read stream
sets value use aggregation finds missing value document
sets valuetype value produced aggregation
sets field use aggregation
constructs field data context given field index field data field name field indexfielddata index field data field
get value source given configuration return value null indicates value source could built
resolve valuessourceconfig given configuration parameters
return original values source apply missing
read stream
sets valuetype value produced aggregation
sets format use output aggregation
use movingfunctionstring script string int instead
first value derivative null makes sure cusum handle
derivative date histogram time zone cet dst start
also check time zone shifts one hour eg asiakathmandu 1 jan 1986 time zone change ist npt 000000 clocks turned forward 0015 minutes
derivative date histogram time zone cet dst end
computes simple agg metric min sum etc provided values values array values compute metric metric metric builder defines kind metric returned values
generates mock histogram use testing mockbucket holds doc count key document values later used compute metrics compare real aggregation results gappiness controlled via parameters interval interval bucket keys size size mock histogram generate in buckets gapprobability probability generating empty bucket 0010 inclusive runprobability probability extending gap one created 0010 inclusive
read stream
test httpsgithubcomelasticelasticsearchissues17701
read stream
given path set buckets method return value inside agg path used extract values use pipeline aggregations eg derivative might need price bucket bucket empty configured gappolicy invoked resolve missing bucket agg series agg buckets form histogram bucket specific bucket value needs extracted from bucket present histo parameter aggpath path particular value needs extracted path point metric inside bucket gappolicy gap policy apply empty buckets found value extracted bucket found aggpath
parse string gappolicy byte enum text gappolicy string format eg ignore gappolicy enum
deserialize gappolicy input stream gappolicy enum
validates state factory makes sure factory properly configured
read stream
creates pipeline aggregator created aggregator
test first second derivative sing
test first second derivative sing
sets gap policy use aggregation
read stream
sets format use output aggregation
read stream
sets gap policy use aggregation
read stream
sets format use output aggregation
read stream
read stream
read stream
read stream
read stream
set value sigma use calculating standard deviation bounds
read stream
set percentages calculate percentiles aggregation
check dont rely percent array order iterator returns values original order
read stream
read stream
test issue 30608 following circumstances a multibucket agg first entry internal list b regular agg immediate child multibucket c regular agg name b top level listed second entry internal list d finally pipeline agg path b bucketmetrics reduction would throw class cast exception due bad subpathing test ensures fixed note test inside avgbucket package get access packageprivate doreduce needed testing
sets gap policy use aggregation
sets format use output aggregation
used serialization testing since pipeline aggs serialize named object parsed regular object name passed in
sets window size aggregation
calculate triple exponential weighted moving average alpha controls smoothing data alpha 1 retains memory past values eg random walk alpha 0 retains infinite memory past values eg series mean useful values somewhere between defaults 05 beta equivalent alpha controls smoothing trend instead data gamma equivalent alpha controls smoothing seasonality instead data finite values averaged nan null ignored values missingnullnan return value nan average based count nonnull nonnan values alpha double 01 inclusive controls data smoothing beta double 01 inclusive controls trend smoothing gamma double 01 inclusive controls seasonality smoothing period expected periodicity data multiplicative true multiplicative hw used false additive
calculate linearly weighted moving average older values linearly less important time determined position collection finite values averaged nan null ignored values missingnullnan return value nan average based count nonnull nonnan values
calculate standard deviation values using provided average finite values averaged nan null ignored values missingnullnan return value nan average based count nonnull nonnan values
version holt forecast exposed whitelisted function movingfn scripts compatibilitycode sharing existing movingavg agg removed movingavg gone
calculate doubly exponential weighted moving average alpha controls smoothing data alpha 1 retains memory past values eg random walk alpha 0 retains infinite memory past values eg series mean useful values somewhere between defaults 05 beta equivalent alpha controls smoothing trend instead data finite values averaged nan null ignored values missingnullnan return value nan average based count nonnull nonnan values alpha double 01 inclusive controls data smoothing beta double 01 inclusive controls trend smoothing
calculate exponentially weighted moving average alpha controls smoothing data alpha 1 retains memory past values eg random walk alpha 0 retains infinite memory past values eg series mean useful values somewhere between defaults 05 finite values averaged nan null ignored values missingnullnan return value nan average based count nonnull nonnan values alpha double 01 inclusive controls data smoothing
find sum window values values missingnullnan return value 00
calculate simple unweighted arithmetic moving average finite values averaged nan null ignored values missingnullnan return value nan average based count nonnull nonnan values
version holtwinters forecast exposed whitelisted function movingfn scripts compatibilitycode sharing existing movingavg agg removed movingavg gone
returns empty set predictions filled nans numpredictions number empty predictions generate
read stream
read stream
models minimizable throw exceptions
test simple moving average single value field
linearly weighted moving avg window window values compute movavg
minimizer turned on isnt enough data minimize with simply use default settings means mock histo match generated result which wont minimizer actually working since coefficients different thus generate different data simulate setting window size size histo
exponentially weighted ewma single exponential moving avg window window values compute movavg
models minimized throw exception for simple linear
simple unweighted moving average window window values compute movavg
holtlinear double exponential moving avg window window values compute movavg
holt winters triple exponential moving avg window window values compute movavg
calculates moving averages specific model target tuple based previously generated mock histogram computed values stored testvalues map type moving average model use target document field target eg count field value
read stream
read stream
sets gap policy use aggregation
read stream
sets format use output aggregation
read stream
read stream
read stream
read stream
calculates cost model eg run training data closely predictions match test data uses least absolute differences calculate error note scale free seems work fairly well practice model movavgmodel fitting train training set data given model generate predictions test test set data compare predictions cost error model
runs simulated annealing algorithm produces model new coefficients that theoretically fit data better generalizes future forecasts without overfitting model movavgmodel optimized train training set provided model predictions generated test test set data compare predictions derive cost model new minimized model theoretically better fits data
read stream
sets window size moving average window slide across series values inside window used calculate moving avg value window size window
sets number predictions returned prediction spaced intervals specified histogram eg predict 2 return two new buckets end histogram predicted values predict number predictions make
sets movavgmodel moving average model used define type moving average want use series model movavgmodel prepopulated settings
sets format use output aggregation
sets gappolicy use output aggregation
sets movavgmodel moving average model used define type moving average want use series model movavgmodel prepopulated settings
read stream
sets whether model fit data using cost minimizing algorithm minimize model fit underlying data
alpha controls smoothing data alpha 1 retains memory past values eg random walk alpha 0 retains infinite memory past values eg series mean useful values somewhere between defaults 05 alpha double 01 inclusive controls data smoothing builder continue chaining
extracts integer settings map otherwise throws exception settings map settings provided model name name parameter attempting extract defaultvalue default value used value exist map integer value extracted settings map
checks see model produce new value without actually running algo used models certain preconditions need met order shortcircuit execution valuesavailable number values current window values returns true calling next produce value false otherwise
predicts next n values series values collection numerics movingavg usually windowed numpredictions number newly generated predictions return returns array doubles since smoothing methods operate floating points
extracts boolean settings map otherwise throws exception settings map settings provided model name name parameter attempting extract defaultvalue default value used value exist map boolean value extracted settings map
returns empty set predictions filled nans numpredictions number empty predictions generate
extracts 01 inclusive double settings map otherwise throws exception settings map settings provided model name name parameter attempting extract defaultvalue default value used value exist map double value extracted settings map
read stream
alpha controls smoothing data alpha 1 retains memory past values eg random walk alpha 0 retains infinite memory past values eg series mean useful values somewhere between defaults 05 alpha double 01 inclusive controls data smoothing builder continue chaining
equivalent alpha controls smoothing trend instead data beta double 01 inclusive controls trend smoothing builder continue chaining
calculate holtlinear doubly exponential weighted moving average values collection values calculate avg numforecasts number forecasts future return returns double containing moving avg window
predicts next n values series using smoothing model generate new values unlike moving averages holtlinear forecastingprediction built algorithm prediction simply adding next prediction window repeating holtlinear extrapolate future applying trend information smoothed data values collection numerics movingavg usually windowed numpredictions number newly generated predictions return returns array doubles since smoothing methods operate floating points
alpha controls smoothing data alpha 1 retains memory past values eg random walk alpha 0 retains infinite memory past values eg series mean useful values somewhere between defaults 05 alpha double 01 inclusive controls data smoothing builder continue chaining
equivalent alpha controls smoothing trend instead data beta double 01 inclusive controls trend smoothing builder continue chaining
read stream
parse string seasonalitytype byte enum text seasonalitytype string format eg add seasonalitytype enum
predicts next n values series using smoothing model generate new values unlike moving averages holtwinters forecastingprediction built algorithm prediction simply adding next prediction window repeating holtwinters extrapolate future applying trend seasonal information smoothed data values collection numerics movingavg usually windowed numpredictions number newly generated predictions return returns array doubles since smoothing methods operate floating points
calculate doubly exponential weighted moving average values collection values calculate avg numforecasts number forecasts future return returns double containing moving avg window
deserialize seasonalitytype input stream input stream seasonalitytype enum
read stream
sets format use output aggregation
read stream
sets gappolicy use output aggregation
sets lag use calculating serial difference
target document field target eg count field value
make sure request using script get cached request using script get cached
test date histogram aggregation day interval offset extended bounds see httpsgithubcomelasticelasticsearchissues23776
script change document date values following doc 1 feb 2 mar 3 doc 2 mar 2 apr 3 doc 3 mar 15 apr 16 doc 4 apr 2 may 3 doc 5 apr 15 may 16 doc 6 apr 23 may 24
test date histogram aggregation hour interval timezone shift extended bounds see httpsgithubcomelasticelasticsearchissues12278
httpsgithubcomelasticelasticsearchissues31392 demonstrates edge case date field mapping format epochmillis lead date histogram aggregation throw error nonutc time zone daylight savings time used test added check working
jan 2 feb 2 feb 15 mar 2 mar 15 mar 23
see issue 9634 negative datehistograminterval datehistogram raise exception
dst ends local time turns back one hour 2am 4am wall time four buckets 20151025t0200000000200 20151025t0200000000100 20151025t0300000000100 20151025t0400000000100
heuristic used determine size shardside priorityqueues selecting top n terms distributed index finalsize number terms required final reduce phase numberofshards number shards queried suggested default size shardside priorityqueues
make sure request using script get cached request using script get cached
required method build child aggregations given bucket identified bucket ordinal
utility method build empty aggregations sub aggregators
collectbucketleafbucketcollector int long doesnt check doccounts needs resized
utility method collect given doc given bucket identified bucket ordinal
utility method return number documents fell given bucket identified bucket ordinal
utility method increment doc counts given bucket identified bucket ordinal
test passing keyed filters list array list stored internally sorted key also check list passed modified rather copied
make sure request using script get cached request using script get cached
subsetfreq frequency term selected sample subsetsize size selected sample typically number docs supersetfreq frequency term superset sample taken supersetsize size superset sample taken typically number docs significance score
make sure request using script get cached request using script get cached
shift buckets random offset 2interval setup 1 doc per values 1numdocs special care needs taken expecations counts first last bucket
see issue 9634 negative interval histogram raise exception
make sure request using script get cached request using script get cached
bucket bucket check assertions key expected key expectedsize expected size bucket
set offset day buckets start 6am index first 12 hours two days one day gap
read stream
creates single bucket aggregation name aggregation name doccount document count single bucket aggregations already built subaggregations associated bucket
wrap provided aggregator behaves almost collected directly
replay wrapped collector selection buckets
test case know exactly many term shard know exact error value term search 3 oneshard indices
never render null values xcontent test parse and return correct defaults
wrap provided aggregator behaves almost collected directly
set deferred collectors
replay wrapped collector selection buckets
sole constructor context search context isglobal whether collector visits documents global context
never render null values xcontent test parse and return correct defaults
make sure request using script get cached request using script get cached
test querying ranges date mapping specifying format tofrom values specified strings
make sure request using script get cached request using script get cached
test querying ranges date mapping specifying format tofrom values specified numeric value
read stream
read stream
add new range aggregation key key use range response lower bound distances inclusive upper bound distances exclusive
add new range lower bound key key use range response upper bound distances exclusive
add new range upper bound key key use range response lower bound distances inclusive
resolve strings ranges number value range ranges also sorted returned
read stream
read stream
read stream
add new range aggregation key key use range response lower bound dates inclusive upper bound dates exclusive
add new range upper bound key key use range response lower bound distances inclusive
add new range aggregation key key use range response lower bound dates inclusive upper bound dates exclusive
add new range upper bound key key use range response lower bound distances inclusive
add new range lower bound key key use range response upper bound dates exclusive
add new range upper bound key key use range response lower bound distances inclusive
add new range lower bound key key use range response upper bound dates exclusive
add new range aggregation key key use range response lower bound dates inclusive upper bound dates exclusive
add new range lower bound key key use range response upper bound dates exclusive
add new range upper bound key key use range response lower bound distances inclusive
add new range aggregation key key use range response lower bound distances inclusive upper bound distances exclusive
add new range lower bound key key use range response upper bound distances exclusive
checks invariant bucket keys always nonnull even null keys originally provided
addrangestring string string lower bound
add new range aggregation key key use range response lower bound distances inclusive upper bound distances exclusive
add new range aggregation
addrangestring string string upper bound
set max num docs returned per value
read stream
set execution hint
set max num docs returned shard
sole constructor shardsize number topscoring docs collect bucket
set deferred collectors
read stream
set max num docs returned shard
uses sampler aggregation find minimum value field top 3 scoring documents search
true explicit null bucket represent documents missing values
sets script use source
sets field use source
sets format use output aggregation
sets sortorder use sort values produced source
sets sortorder use sort values produced source
sets valuetype value produced source
visits nondeleted documents iterator fills provided queue top composite buckets extracted collection documents contain top composite bucket added provided builder null returns true queue full current leadsourcebucket produce competitive composite buckets
returns true sorteddocsproducer used optimize execution
creates new singledimensionvaluessource bigarrays big arrays object format format source fieldtype field type null source script missingbucket true explicit null bucket represents documents missing values size number values record reversemul 1 natural order sortorderasc reversed
sets interval source
vs original values source rounding round values
number composite buckets return defaults 10
sets values indicates composite bucket request aggregate after defaults null
vs original values source
sets interval source interval datehistograminterval set datehistograminterval wins
sets time zone use aggregation
creates new compositevaluessourceconfig name name source fieldtype field type null source script vs underlying valuessource format docvalueformat source order sort order associated source
sort order values source eg 1 descending 1 ascending
compares values values slot
creates collector visit composite buckets matching documents forceleadsourcevalue null leading source use value document provided collector in called composite bucket
copies current value slot
check current candidate added queue target slot candidate 1 candidate competitive
constructs composite queue specified size sources sources list compositevaluessourceconfig build composite buckets size number composite buckets keep afterkey composite key
builds compositekey slot
compares values slot1 slot2
format obj using provided docvalueformat format equals docvalueformatraw object returned numbers string bytesrefs
replay documents might contain top bucket pass top buckets deferredcollectors
first pass selects top composite buckets matching documents
replay top buckets matching documents
set separator used join pairs bucket keys
name name aggregation separator string used separate keys intersections buckets eg character keyed filters b would return intersection bucket named ab filters filters key use aggregation
get filters unmodifiable map
read stream
read stream
read stream
read stream
set whether return buckets hash array return builder calls chained
read stream internal use only
sets order buckets returned tiebreaker may added avoid nondeterministic ordering
set minimum count matching documents buckets need return builder calls chained
get interval timevalue called getintervalasdatetimeunit returned null
set extended bounds histogram buckets would also generated intervals match documents
set offset builder number milliseconds return builder calls chained
set offset builder time value return builder calls chained
set interval builder return builder calls chained interval datehistograminterval set datehistograminterval wins
set new order builder return builder calls chained tiebreaker may added avoid nondeterministic ordering
set interval builder return builder calls chained interval datehistograminterval set datehistograminterval wins
return interval date time unit applicable returns null means interval expressed fixed timevalue may accessed via getintervalastimevalue
method works almost exactly internaldatehistogramreducebucketslist reducecontext different need round keys see using highest level rounding returned across shards resolution buckets reduced together
stream stream
read stream
stream stream
read stream
parse bounds perform delayed validation returns result parsing
read stream
construct possible information
construct random extendedbounds
construct random extendedbounds preparsed form
convert extended bounds parsed one unparsed form
stream stream
read stream
build roundings computed dynamically roundings time zone dependent current implementation probably invoked tight loop array roundinginfo
read stream internal use only
set extended bounds builder buckets minbound maxbound created even documents fell buckets illegalargumentexception maxbound less minbound either bounds finite
set offset builder return builder calls chained
read stream internal use only
set interval builder return builder calls chained
set whether return buckets hash array return builder calls chained
sets order buckets returned tiebreaker may added avoid nondeterministic ordering
set minimum count matching documents buckets need return builder calls chained
set new order builder return builder calls chained tiebreaker may added avoid nondeterministic ordering
returns weight filter aggregation creating necessary done lazily weight created aggregation collects documents reducing overhead aggregation teh case documents collected note aggregations initialsed executed serial manner concurrency considerations necessary here
read stream
read stream
read stream
name name aggregation filter set filter use documents match filter fall bucket defined filter aggregation
read stream
name name aggregation filters filters use aggregation
set whether include bucket documents matching filter
set key use bucket documents matching filter
read stream
returns weights filter aggregation creating necessary done lazily weights created aggregation collects documents reducing overhead aggregation case documents collected note aggregations initialsed executed serial manner concurrency considerations necessary here
provided field type also register alias name alias
provided field type also register alias name alias
set path use nested aggregation path must match path nested object mappings specified aggregation go back root document
read stream
name name aggregation path path use nested aggregation path must match path nested object mappings
read stream
read stream
read stream
read stream
read stream
uses significant text aggregation find keywords text fields
provided field type also register alias name alias
test documents arrays text
uses significant terms aggregation find keywords text fields
provided field type also register alias name alias
uses significant terms aggregation index unmapped field
uses significant terms aggregation find keywords numeric fields
read stream
sets shardsize indicating number term buckets shard return coordinating node the node coordinates search execution higher shard size is accurate results are
control duplicate paragraphs text try filtered statistical text analysis improve results slows analysis default false
set terms include exclude aggregation results
set minimum document count terms order appear response
selects fields load source json analyze none specified indexed fieldname value assumed also name json field holding value
sets name text field subject aggregation
set minimum document count terms shard order appear response
name name aggregation fieldname name text field subject aggregation
sets size indicating many term buckets returned defaults 10
set minimum document count terms shard order appear response
set terms include exclude aggregation results
set minimum document count terms order appear response
read stream
sets shardsize indicating number term buckets shard return coordinating node the node coordinates search execution higher shard size is accurate results are
sets size indicating many term buckets returned defaults 10
expert sets execution hint aggregation
read stream
read stream
calculates google normalized distance described the google similarity distance cilibrasi vitanyi 2007 link httparxivorgpdfcs0412098v3pdf
indicates significance term sample determining percentage occurrences term found sample
calculates mutual information see information retrieval manning et al eq 1317
read stream
calculates chi2 see information retrieval manning et al eq 1319
calculates score script subsetfreq frequency term selected sample subsetsize size selected sample typically number docs supersetfreq frequency term superset sample taken supersetsize size superset sample taken typically number docs significance score
calculates significance term sample background normal distributions comparing changes frequency heart significant terms feature
get maximum global ordinal value provided valuessource 1 values source instance valuessourcebyteswithordinals
returns whether given value accepted based include exclude patterns
computes global ordinals accepted includeexclude instance
include regular expression pattern terms included exclude regular expression pattern terms excluded
read stream
returns whether given value accepted based include exclude sets
includevalues terms included excludevalues terms excluded
read stream
converts longterms doubleterms returning value specified long terms doubles
read stream
read stream
make sure request using script get cached request using script get cached
read stream
expert sets execution hint aggregation
sets shardsize indicating number term buckets shard return coordinating node the node coordinates search execution higher shard size is accurate results are
sets order buckets returned tiebreaker may added avoid nondeterministic ordering
expert set collection mode
set new order builder return builder calls chained tiebreaker may added avoid nondeterministic ordering
set minimum document count terms order appear response
sets size indicating many term buckets returned defaults 10
read stream
set minimum document count terms shard order appear response
set terms include exclude aggregation results
set whether doc count error return individual terms
read stream
internal optimization ordering internaltermsbuckets sub aggregation phase order based subaggregations need use different comparator avoid constructing buckets ordering purposes we potentially lot buckets building cause loads redundant object constructions special comparators fetch sub aggregation values directly sub aggregators bypassing bucket creation note comparator attached order still used reduce phase aggregation path determines sub aggregation use ordering asc true ascending order false descending comparator order internaltermsbuckets desired order
read stream
read stream
test equality hashcode properties
test serialization deserialization
creates random suggestion builder renders xcontent back new instance equal original
setup whole base test class
parsing method assumes leading suggest field name already parsed caller
returns integer representing type suggestion used internal serialization network class serialized namedwriteable method remains backwards compatibility
merges result another suggestion suggestion internal usage
suggestions type suggestiontype contained suggest instance
trims number options per suggest text term requested size internal usage
read stream
adds orgelasticsearchsearchsuggestsuggestionbuilder instance user defined name order suggestions added response illegalargumentexception two suggestions added name
gets global suggest text
sets text provide suggestions for suggest text required option needs set either via setter via orgelasticsearchsearchsuggestsuggestionbuildertextstring method suggest text gets analyzed suggest analyzer suggest field search analyzer analyzed token suggested terms suggested possible
read stream
suggestbuildersetglobaltextstring suggestion scope
sets maximum suggestions returned per suggest text term
internal copy constructor copies class fields second suggestionbuilder except field name
sets maximum number suggested term retrieved individual shard reduce phase top n suggestions returned based size option defaults size option setting value higher size useful order get accurate document frequency suggested terms due fact terms partitioned amongst shards shard level document frequencies suggestions may precise increasing make document frequencies precise
sets analyzer analyse suggest text with defaults search analyzer suggest field
transfers text prefix regex analyzer field size shard size settings original suggestionbuilder target suggestioncontext
creates new suggestion field field execute suggestions
setup whole base test class
test equality hashcode properties
creates random suggestion builder renders xcontent back new instance equal original
test serialization deserialization suggestion builder
returns random suggestion builder setting common options randomly
searching rare phrase shouldnt provide suggestions confidence 1 possible rechecked cutoff score reduce phase failures dont occur every time maybe two five tries dont repeat save time
test suggestion works prefix either provided via completionsuggestionbuildertextstring suggestbuildersetglobaltextstring
create randomized suggestionentry
test parse nothing restsearchactiontypedkeysparam isnt set rendering xcontent cannot find suggestion type information
sets level fuzziness used create suggestions using fuzziness instance default value fuzzinessone allows edit distance one
sets transpositions swapping one character another counts one character change two defaults true meaning uses fuzzier option counting transpositions single change
set true measurements like edit distance transpositions lengths unicode code points actual letters instead bytes default false
sets level fuzziness used create suggestions using fuzziness instance default value fuzzinessone allows edit distance one
sets maximum automaton states allowed fuzzy expansion
read stream
sets minimum length input checked fuzzy alternatives defaults 1
sets minimum length input string fuzzy suggestions returned defaulting 3
returns total inheap bytes used suggesters method cpu cost onumindexedfields fieldnamepatterns nonnull completion field name matching patterns break inheap bytes separately returned completionstats
sets regular expression pattern prefixes provide completions for
prefixstring fuzziness fuzziness
sets prefix provide completions for prefix gets analyzed suggest analyzer
regexstring full regular expression options see regexoptionsbuilder
sets query contexts completion querycontexts named query contexts see orgelasticsearchsearchsuggestcompletioncontextcategoryquerycontext orgelasticsearchsearchsuggestcompletioncontextgeoquerycontext
prefixstring full fuzzy options see fuzzyoptionsbuilder
read stream
internal copy constructor copies class fields except field set one provided first argument
duplicates filtered not defaults false
test serialization deserialization
sets maximum automaton states allowed regular expression expansion
sets regular expression syntax flags see regexpflag
read stream
result options suggestion
ctr name name suggestions size number suggestions return skipduplicates whether duplicate suggestions filtered
reduces suggestions single suggestion containing top completionsuggestiongetsize options across toreduce
exclude contexts field recursive random shuffling fromxcontent tests else equals test fail bytesreference representation isnt
test serialization deserialization
define new context mapping specific type type type context mapping either typecategory typegeo name name context mapping
verifies field paths specified contexts point fields correct mappings
parses query contexts mapper
sets querytime boost context defaults 1
sets category category required field
sets context treated prefix not defaults false
parse list categoryquerycontext using parser querycontexts accepts one following forms object categoryquerycontext string categoryquerycontext value prefixfalse boost1 array categoryquerycontext categoryquerycontext one following forms object context string boost int prefix boolean string string
create new categorycontextmapping field fieldname
loads named categorycontextmapping instance map see contextmappingsloadobject version acceptable map param path
set name field use
parse set charsequence contexts indextime acceptable formats array string string string
set name field containing geolocation use fieldname name field
parse list geoquerycontext using parser querycontexts accepts one following forms object geoquerycontext string geoquerycontext value boost1 precisionprecision neighboursprecision array geoquerycontext geoquerycontext one following forms object geo point lat double lon double precision int neighbours int context string boost int precision int neighbours int context geo point boost int precision int neighbours int string geo point see geopointstring geo point
set precision use o make suggestions meters precision distance meters
parse set charsequence contexts indextime acceptable formats array geo point stringobjectarray geo point see geopointstring geo point
set precision use o make suggestions level maximum length geohashes
sets precision level computing geohash context geo point defaults using indextime precision level
sets querytime boost context defaults 1
sets precision levels geohash cells neighbours considered defaults considering neighbours indextime precision level
sets geo point context required field
writes list objects specified defined contextmappings see contextmappingtoxcontentxcontentbuilder params
loads contextmappings configuration expected configuration list maps representing contextmapping name type
maps output context list map context mapping names values see orgelasticsearchsearchsuggestcompletioncontextcontextmappingstypedcontextfield map context names values
wraps completionquery context queries query base completion query wrap querycontexts map context mapping name collected query contexts contextenabled query
returns context mapping name
creates linear interpolation smoothing model note lambdas must sum one trigramlambda trigram lambda bigramlambda bigram lambda unigramlambda unigram lambda
read stream
note method closes tokenstream even exception awkward really caller called analyzertokenstream close it trying recursion issues try use tokenstream twice recursion
lower scores sort first scores equal later zzz terms sort first
adds candidategenerator suggester candidategenerator used draw candidates individual phrase term candidates scored
set true phrase suggester fail analyzer produces ngrams default true
sets confidence level suggester confidence level defines factor applied input phrases score used threshold suggest candidates candidates score higher threshold included result instance confidence level 10 return suggestions score higher input phrase set 00 top n candidates returned default 10
internal copy constructor copies class fields except field set one provided first argument
setup highlighting suggestions called highlight field returned suggestions wrapping changed tokens pretag posttag
sets likelihood term misspelled even term exists dictionary default 095 corresponding 5 real words misspelled
sets query used filtering suggested phrases collation
clear candidate generators
sets separator used separate terms bigram field set whitespace character used separator
sets maximum percentage terms considered misspellings order form correction method accepts float value range 01 fraction actual query terms number 1 absolute number query terms default set 10 corresponds corrections 1 misspelled term returned
read stream
sets gram size ngram model used suggester default value 1 corresponding unigrams use 2 bigrams 3 trigrams
sets explicit smoothing model used suggester default stupidbackoff
sets query used filtering suggested phrases collation
adds additional parameters collate scripts previously added parameters builder overwritten
sets whether prune suggestions collation
setup whole base test class
test creates new smoothing model random test smoothing model checks equality
test wordscorer emitted smoothing model
test serialization deserialization tested model
mutate given model returned smoothing model different
mutate given model returned smoothing model different
mutate given model returned smoothing model different
lower scores sorts first scores equal later terms zzz sort first
sets number minimal prefix characters must match order candidate suggestion defaults 1 increasing number improves suggest performance usually misspellings dont occur beginning terms
global suggest mode controls suggested terms included controls suggest text tokens terms suggested for three possible values specified missing suggest terms suggest text arent index default popular suggest terms occur docs original suggest text term always suggest matching suggest terms based tokens suggest text
minimum length suggest text term must order corrected defaults 4
sets sort suggest terms per suggest text token two possible values score sort first based score document frequency term itself frequency sort first based document frequency score term itself score depends suggester used
sets similar suggested terms least need compared original suggest text tokens value 0 1 specified value compared string distance result candidate spelling correction default 05
sets minimal threshold number documents suggested term appear in specified absolute number relative percentage number documents improve quality suggesting high frequency terms defaults 0f enabled value higher 1 specified number cannot fractional
sets string distance implementation use comparing similar suggested terms are four possible values specified internal default based dameraulevenshtein highly optimized comparing string distance terms inside index dameraulevenshtein string distance algorithm based dameraulevenshtein algorithm levenshtein string distance algorithm based levenshtein edit distance algorithm jarowinkler string distance algorithm based jarowinkler algorithm ngram string distance algorithm based character ngrams
sets maximum suggestions returned per suggest text term
sets filter analyzer applied tokens passed candidate generator filter applied original token candidates generated
sets maximum edit distance candidate suggestions order considered suggestion value 1 2 value result bad request error thrown defaults 2
sets filter analyzer applied generated tokens passed actual phrase scorer
factor used multiply size order inspect candidate suggestions improve accuracy cost performance defaults 5
read stream
gets type identifier candidategenerator
sets maximum threshold number documents suggest text token exist order corrected relative percentage number eg 04 absolute number represent document frequencies value higher 1 specified fractional specified defaults 001 used exclude high frequency terms suggested high frequency terms usually spelled correctly top also improves suggest performance
test serialization deserialization generator
test bad xcontent throws exception
create random directcandidategeneratorbuilder
creates random candidate generator renders xcontent back new instance equal original
test equality hashcode properties
creates random suggestion builder renders xcontent back new instance equal original
creates random termsuggestionbuilder
read stream
factor used multiply size order inspect candidate suggestions improve accuracy cost performance defaults 5
sets minimal threshold number documents suggested term appear in specified absolute number relative percentage number documents improve quality suggesting high frequency terms defaults 0f enabled value higher 1 specified number cannot fractional
sets string distance implementation use comparing similar suggested terms are five possible values specified internal default based dameraulevenshtein highly optimized comparing string distance terms inside index dameraulevenshtein string distance algorithm based dameraulevenshtein algorithm levenshtein string distance algorithm based levenshtein edit distance algorithm jarowinkler string distance algorithm based jarowinkler algorithm ngram string distance algorithm based character ngrams
minimum length suggest text term must order corrected defaults 4
sets number minimal prefix characters must match order candidate suggestion defaults 1 increasing number improves suggest performance usually misspellings dont occur beginning terms
internal copy constructor copies class field except field
sets maximum edit distance candidate suggestions order considered suggestion value 1 2 value result bad request error thrown defaults 2
sets sort suggest terms per suggest text token two possible values score sort first based score document frequency term itself frequency sort first based document frequency score term itself score depends suggester used
similar suggested terms least need compared original suggest text tokens value 0 1 specified value compared string distance result candidate spelling correction default 05
global suggest mode controls suggested terms included controls suggest text tokens terms suggested for three possible values specified missing suggest terms suggest text arent index default popular suggest terms occur docs original suggest text term always suggest matching suggest terms based tokens suggest text
sets maximum threshold number documents suggest text token exist order corrected relative percentage number eg 04 absolute number represent document frequencies value higher 1 specified fractional specified defaults 001 used exclude high frequency terms suggested high frequency terms usually spelled correctly top also improves suggest performance
returns object null given key value context
puts object context
true request contains suggest
schedule release resource time releasableclose called object function provided lifetime
returns filter associated listed filtering aliases list filtering aliases obtained calling metadatafilteringaliases returns null filtering required
get current usage statistics node localnode discoverynode node restactions whether include rest action usage returned statistics nodeusage representing usage statistics node
main entry point exit code 0 java version least 18 otherwise exit code 1 args args program rejected empty
prints string terminates line standard error message message print
exit vm specified status status status
exit vm specified status status status
prints string terminates line standard output message message print
prints string terminates line standard error message message print
chooses additional jvm options elasticsearch userdefinedjvmoptions list jvm options defined user list additional jvm options set
delimits specified jvm options spaces jvmoptions jvm options singleline string containing specified jvm options order appear delimited spaces
parse linedelimited jvm options specified buffered reader specified java major version valid jvm options are line starting dash treated jvm option applies versions line starting number followed treated jvm option applies matching java major version line starting number followed dash followed treated jvm option applies matching java specified major version larger java major versions line starting number followed dash followed number followed treated jvm option applies specified range matching java major versions example specified java major version 8 following jvm options accepted xxprintgcdatestamps 8xxprintgcdatestamps 8xxprintgcdatestamps 78xxprintgcdatestamps following jvm options accepted 9xlogagetracegcsafepointfilelogsgclogutctimepidtagsfilecount32filesize64m 9xlogagetracegcsafepointfilelogsgclogutctimepidtagsfilecount32filesize64m 910xlogagetracegcsafepointfilelogsgclogutctimepidtagsfilecount32filesize64m version syntax specified line matches specified jvm options jvm option callback invoked jvm option line match specified syntax jvm options invalid line callback invoked contents entire line javamajorversion java major version match jvm options br buffered reader read linedelimited jvm options jvmoptionconsumer callback accepts matching jvm options invalidlineconsumer callback accepts invalid jvm options ioexception io exception occurs reading buffered reader
main entry point exit code 0 jvm options successfully parsed otherwise exit code 1 improperly formatted line discovered line output standard error args args program consist single option path jvm options
register new resource watcher checked given frequency
clears state filewatcher making files show new
creates new file watcher given directory
utility method detect whether thread network thread typically used assertions make sure call blocking code networking threads
exception handler exceptions associated specific channel exception exception
attempts decode message provided bytes full message available null returned message ping empty bytesreference returned networkbytes read message decoded streamcorruptedexception message header format recognized tcptransporthttpontransportexception message header appears http message illegalargumentexception message length greater maximum allowed frame size dependent available memory
validates first 6 bytes message header returns length message 6 bytes available returns 1 networkbytes read length message streamcorruptedexception message header format recognized tcptransporthttpontransportexception message header appears http message illegalargumentexception message length greater maximum allowed frame size dependent available memory
sends back error response caller via given channel nodeversion caller node version features caller features channel channel send response error error return requestid request id response replies action action response replies
serializes given message bytes representation
method handles message receive part request responses
consumes bytes available network reads method returns number bytes consumed call channel channel read bytesreference bytes available consume number bytes consumed streamcorruptedexception message header format recognized tcptransporthttpontransportexception message header appears http message illegalargumentexception message length greater maximum allowed frame size dependent available memory
sends message given channel using given callbacks
writes tcp message header bytes reference requestid request id status request status protocolversion protocol version used serialize data message length payload length bytes tcpheader
sends response given channel method used send transportresponse objects back caller senderrorresponseversion set tcpchannel exception long string sending back errors caller
returns profile settings given settings object
ensures transport still started open illegalstateexception transport started open
executed received response error
parse hostnameport range spec equivalent addresses
called channel closed instance due disconnect closed socket etc
fetches shards search request remote connection used later run search remote end
collects nodes connected cluster returns passes nodeid discoverynode lookup function returns null node id found
updates list seed nodes cluster connection
ensures cluster connected cluster connected operation invoke listener immediately
get information remote nodes rendered remoteinfo requests
returns connection remote cluster preferably direct connection provided discoverynode node connected returned connection proxy connection redirects it
creates new remoteclusterconnection settings nodes settings object clusteralias configured alias cluster connect seednodes list seed nodes discover eligible nodes transportservice local nodes transport service maxnumremoteconnections maximum number connections remote cluster nodepredicate predicate filter eligible remote nodes connect
collects nodes given clusters returns passes clusteralias nodeid discoverynode function success
method updates list remote clusters its intended used update consumer settings infrastructure seeds cluster alias discovery node mapping representing remote clusters seeds nodes connectionlistener listener invoked every configured cluster connected
connects remote clusters blocking fashion called node startup establish initial connection configured seed nodes
returns connection given node given remote cluster illegalargumentexception remote cluster unknown
ensures given cluster alias connected cluster connected operation invoke listener immediately
returns client remote cluster given cluster alias exists threadpool threadpool client clusteralias cluster alias remote cluster registered illegalargumentexception given clusteralias doesnt exist
test ipv4 host default port range works
test ipv6 host port works
test ipv6 host default port works
test unbracketed ipv6 hosts configuration fail leave ambiguity
test ipv4 host port works
test ipv6 host port range works
test ipv4 host default port works
test ipv6 host default port range works
test ipv4 host port range works
test peraddress limit
disconnected given node connected nothing
connects node given connection profile node already connected method effect successful established validated exposed
returns connection given node node connected connections returned method must closed lifecycle connection maintained connection manager nodenotconnectedexception node connected connecttonodediscoverynode connectionprofile checkedbiconsumer
copy constructor using another profile base
adds number connections one types type added once numconnections number connections use pool given connection types types set types share given number connections
sets connect timeout connection profile
returns number connections per type profile might return count shared types sum connections per type might higher getnumconnections instance orgelasticsearchtransporttransportrequestoptionstypebulk shares connections orgelasticsearchtransporttransportrequestoptionstypereg return number connections method connections distinct
sets handshake timeout connection profile
creates new connectionprofile based added connections illegalstateexception orgelasticsearchtransporttransportrequestoptionstype enum missing
takes connectionprofile resolves fully specified ie nulls profile
builds connection profile dedicated single channel type use opening single use connections
returns one channels configured handle channel selected roundrobin fashion
constructs new mockchannel instance intended accepting requests serversocket associated server socket must null profile associated profile name
constructs new mockchannel instance intended handling actual incoming outgoing traffic socket client socket mut null localaddress address associated corresponding local server socket must null profile associated profile name
removes returns responsecontext instances match predicate
called transport implementation response exception received previously sent request before processing deserialization done returns appropriate response handler null found
adds new response context associates new request id new request id connectionsendrequestlong string transportrequest transportrequestoptions
writes data thin manner without actual bytes assumes actual bytes appended right content
executes highlevel handshake using given connection returns discovery node node connection established with handshake fail cluster name target node mismatches local cluster name connection connection specific node handshaketimeout handshake timeout connected node connecttransportexception connection failed illegalstateexception handshake failed
executes highlevel handshake using given connection returns discovery node node connection established with handshake fail cluster name target node doesnt match local cluster name connection connection specific node handshaketimeout handshake timeout clusternamepredicate cluster name validation predicate handshake response illegalstateexception handshake failed
registers new request handler action action request handler associated requestfactory callable used construct new instances streaming executor executor request handling executed handler handler implements request handling
registers new request handler action action request handler associated requestreader request class used construct new instances streaming executor executor request handling executed forceexecution force execution executor queue never reject cantripcircuitbreaker check request size raise exception case limit breached handler handler implements request handling
called transport implementation exception sent response incoming request
returns either real transport connection local node connection using local node optimization nodenotconnectedexception given node connected
called transport implementation request sent
called transport implementation incoming request arrives parsing happened with exception requestid action
registers new request handler action action request handler associated requestreader callable used construct new instances streaming executor executor request handling executed handler handler implements request handling
cancels timeout handling best effort avoid running it remove requestid responsehandlers make sure doesnt run
registers new request handler action action request handler associated request request class used construct new instances streaming executor executor request handling executed forceexecution force execution executor queue never reject cantripcircuitbreaker check request size raise exception case limit breached handler handler implements request handling
build service clustersettings non null plain transportservice register clustersettings settings updates tracelogexcludesetting tracelogincludesetting
establishes returns new connection given node connection maintained service its callers responsibility close connection goes scope node node connect connectionprofile connection profile use
connect specified node given connection profile node node connect connectionprofile connection profile use connecting node
called transport implementation response sent calling node
returns true iff action name starts valid prefix validactionprefixes
deserializes new instance return type stream called infra deserializing response deserialized response
implement readstreaminput instead
set reference task created request
get reference task created request defaults taskidemptytaskid meaning there parent
called handler registered via transportserviceregisterrequesthandlerstring supplier string boolean boolean transportrequesthandler transportserviceregisterrequesthandlerstring supplier string transportrequesthandler returned handler used instead passed handler default provided handler returned
awaits pending connections complete throw exception least one connections fails discoverynode node pending connections connectionfutures representing pending connections connecttimeout wait connection connecttransportexception one connections fails
groups indices per cluster splitting remote clusteralias indexname pairs remoteclusterindexseparator indices per cluster collected list returned map keyed cluster alias local indices grouped localclustergroupkey returned map mutable requestindices indices search request filter indexexists predicate test certain index alias exists local cluster map grouped remote local indices
registers instance listen updates cluster settings
creates new remoteclusteraware instance settings nodes level settings
registers proxy request handler allows forward requests given action another node used response type changes based upcoming request quite rare
registers proxy request handler allows forward requests given action another node used response type always most cases
unwraps proxy request returns original request
method ensures compression complete returns underlying bytes bytes underlying stream ioexception exception occurs writing flushing
set number available processors netty uses sizing various resources eg thread pools availableprocessors number available processors illegalstateexception available processors set previously specified value match alreadyset value
specified cause unrecoverable error method rethrow cause separate thread caught bubbles uncaught exception handler cause throwable test
turns given bytesreference bytebuf note returned bytebuf reference internal pages bytesreference dont free bytes reference bytebuf goes scope
netty wants unwelcome things like use unsafe replace private field use poorly considered buffer recycler method disables things default overridden setting corresponding system properties
creates new transport client preinstalled plugins settings settings passed transport client plugins collection additional plugins run client hostfailurelistener failure listener invoked node disconnected null
creates new transport client preinstalled plugins settings settings passed transport client plugins optional array additional plugins run client
constructs standardtokenizer filtered standardfilter lowercasefilter stopfilter snowballfilter
builds named analyzer given stop words
validates properly split fields using word delimiter filter querystring
correct offset order parts concatenation powershot synonym power
tests using keyword set keyword marker filter
verifies keywords patterns cannot specified together
tests using regular expression pattern keyword marker filter
test patternanalyzer configured nonword pattern
test patternanalyzer configured custom pattern case text tokenized
test patternanalyzer configured whitespace pattern behavior similar whitespaceanalyzer depending upon options
test patternanalyzer large document
blast random strings analyzer
creates multiplextokenfilter given input set filters
test turkish lowercasing
parses list mappingcharfilter style rules normalize char map
check deprecated name htmlstrip issues deprecation warning indices created 630
check deprecated name htmlstrip issues deprecation warning indices created since 630
use standardhtmlstripanalyzerstandardhtmlstripanalyzerchararrayset instead
check deprecated name edgengram issues deprecation warning indices created 640
check deprecated name edgengram issues deprecation warning indices created since 630
check deprecated name ngram issues deprecation warning indices created 640
check deprecated name ngram issues deprecation warning indices created since 630
parses list mappingcharfilter style rules custom byte type table
correct offset order parts concatenation powershot synonym power
tests emulates frozen elected master node unfreezes pushes cluster state nodes already following another elected master node nodes reject cluster state prevent following stale master
verify proper block applied nodes loose master
verify nodes fault detection works master re election
test cluster recovers long gc master causes nodes elect new one
test isolates master rest cluster waits new master elected restores partition verifies node agree new cluster state
test split brain occurs partial network partition see httpsgithubcomelasticelasticsearchissues2488
test cluster join issues cluster state publishing
4 node cluster mmn set 3 node one unicast endpoint one node partitions master node temporal unicast responses empty partition solved one ping response contains master node rejoining node take master node connect
adds asymmetric break master one nodes makes sure node removed form cluster node start pinging cluster reforms healed
creates new blockingclusterstatepublishresponsehandler publishingtonodes set nodes cluster state published respond
allows wait non master nodes reply publish event timeout timeout timeout true timeout expired not false otherwise
called failure obtained non master nodes node node replied publish event
called response obtained non master nodes node node replied publish event
returns list nodes didnt respond yet
creates new ackclusterstatepublishresponsehandler publishingtonodes set nodes cluster state published respond acklistener orgelasticsearchdiscoverydiscoveryacklistener notify response gotten non master nodes
test loose document whose indexing request successful randomly selected disruption scheme also collect report type indexing failures occur test superset tests run jepsen test suite exception versioned updates
test document indexed majority side partition available minority side partition healed
tests indices properly deleted even master transition between test httpsgithubcomelasticelasticsearchissues11665
test creates scenario primary shard 0 replicas relocates postrecovery target node already deleted source node search request still work
creates mock ec2 endpoint providing list started nodes describeinstances api call
build list nodes azure management api information cached using cloudazurerefreshinterval property needed setting cloudazurerefreshinterval 1 cause infinite caching setting cloudazurerefreshinterval 0 disable caching default
fullclusterstatereceivedcount number times node received full copy cluster state master incompatibleclusterstatediffreceivedcount number times node received clusterstate diff master compatibleclusterstatediffreceivedcount number times received clusterstate diffs compatible
gets next committed state process method tries batch operation getting cluster state highest possible committed states succeeds first committed state queue ie comes master
clear incoming queue committed state failed
indicates cluster state successfully processed committed state clusterstatesupersedesclusterstateed processed state marked processed well note successfully processing state indicates following master came from committed state another master failed method
mark previously added cluster state committed make available via getnextclusterstatetoprocess cluster state processed or failed supplied listener called
add incoming yet committed cluster state
mark processing given state failed committed states clusterstatesupersedesclusterstateed failed state failed well
returns pending states committed
elects new master possible nodes returning it returns null master elected
returns list next possible masters
master nodes go nodes secondary sort id
compares two candidates indicate better master higher cluster state version better 1 c1 batter candidate 1 c2
returns given nodes sorted likelihood elected master likely first nonmaster nodes removed rather put end
node node ping describes master current master node clustername cluster name node clusterstateversion current cluster state version node electmasterservicemastercandidateunrecoveredclusterversion recovered
adds ping newer previous pings node true added false ow
starts new joining thread currently active one join thread controlling started
marks given jointhread completed returns false supplied thread currently active join thread
join newly elected master true successful
returns true join thread control started currently active join thread
case follow elected master new cluster state needs elected master new cluster state version needs equal higher cluster state version first condition fails reject cluster state throw error second condition fails ignore cluster state
marks given jointhread completed makes sure another thread running starting one needed given thread currently running join thread command ignored
case follow elected master new cluster state needs elected master method checks throws exception needed
simple sanity check incoming cluster state throws exception rejections
main function join thread function guaranteed join cluster spawn new join thread upon failure so
cleans running joining thread calls rejoin
validates join request throwing failure failed
ensures joining nodes major version equal higher minclusternodeversion needed ensure master already fully operating new major version doesnt go back mixed version mode
ensures joining node version thats compatible current nodes
ensures joining node version thats compatible given version range
ensures indices compatible given node version ensure indices given metadata created newer version elasticsearch well indices newer equal minimum index compatibility version versionminimumindexcompatibilityversion illegalstateexception index incompatible given version
checks going request become master enough pending joins so node become master via clusterstate update task
utility method fail given election context cluster state thread
processes queues incoming join request note doesnt validation done before
waits enough incoming joins master eligible nodes complete master election must start accumulating joins calling method see startelectioncontext method return local node elected master failuretimeout happened exact outcome communicated via callback parameter guaranteed called requiredmasterjoins number joins master eligible needed complete election timevalue long wait failing timeout communicated via callbacks onfailure method callback result election success failure communicated calling methods object
accumulates future incoming join request pending join requests processed final steps becoming master stopelectioncontextstring called
stopped accumulating joins pending joins processed future joins processed immediately
sends three rounds pings notifying specified consumer pinging complete pings sent resolving configured unicast hosts ip address subject dns caching within jvm batch pings sent another batch pings sent half specified timevalue another batch pings sent specified timevalue pings sent carry timeout 125 times specified timevalue pinging node connection handshake performed connection timeout specified timevalue resultsconsumer callback pinging complete duration timeout various components pings
resolves list hosts list transport addresses host resolved transport address or collection addresses number ports greater one host lookups done parallel using specified executor service specified resolve timeout executorservice executor service used parallelize hostname lookups logger logger used logging messages regarding hostname lookups hosts hosts resolve limitportcounts number ports resolve should 1 nonlocal transport transportservice transport service resolvetimeout timeout returning hostname lookups list resolved transport addresses
variant pingconsumer timevalue allows separating scheduling duration duration used request level time outs useful testing
creates object clone node different object instance
tests tha node become master even though last cluster state knows contains nodes conflict joins got needs become master
tests cluster committed times out never case fail update due commit timeout ends committed anyway
test waiting publishing works correctly ie publishing times out
check enough master node responded commit change fails commit pending master nodes enough acks commit
tries marking publishing failed decision wasnt made yet true publishing failed cluster state not committed
tries commit current state decision wasnt made yet true successful
publishes cluster change event nodes least minmasternodes acknowledge change committed processed master nodes method guaranteed throw orgelasticsearchdiscoverydiscoveryfailedtocommitclusterstateexception change committed rejected exception signals something wrong happened change committed
tries marking publishing failed decision wasnt made yet true publishing failed cluster state not committed
make sure nodes clusterstate pinged pinging nodes part cluster stopped
stops pinging
generates xml response describe ec2 instances
refreshes settings amazonec2 client new client build using new settings old client usable released release destroyed instead returned cache
call client needed anymore
test networkhost ec2publicip
test networkhost ec2publicdns
test networkhost ec2
test networkhost ec2publicipv4
test networkhost ec2privatedns
test networkhost ec2privateipv4
test networkhost ec2privateip
test dont regression network host core settings networkhost local
parse settings single client
type ec2 hostname type discover appropriate host resolved ec2 metadata null cannot obtained customnameresolverresolveifpossiblestring
test multiple network interfaces networkhost gceprivateip0 networkhost gceprivateip1
test dont regression network host core settings networkhost local
utility test method test different settings gcenetworksetting tested networkhost property expected expected inetaddress null expect exception ioexception well something goes wrong
register existing node gce node nodename name node
build list nodes gce management api information cached using cloudgcerefreshinterval property needed
issue httpsgithubcomelasticelasticsearchissues16967 using multiple regions one instance all producing npe result
issue httpsgithubcomelasticelasticsearchcloudgceissues43
cluster state supersedes another state master version state higher state essence means changes cluster state also reflected current one
returns built on demand routing nodes view routing table
tests whether custom serialized criteria are the output stream must least minimum supported version custom the output stream must feature required custom if any transport client is serialize customs clients understand custom based version client features client has transport clients lenient requiring feature case send custom connected nodes always require node required feature output stream custom custom serialize type custom true custom serialized false otherwise
data input bytes localnode used set local node cluster state
marked final cluster state update tasks run master local requests use localclusterupdatetask instead
cluster state update task wasnt processed provided timeout call clusterstatetasklisteneronfailurestring exception may return null indicate timeout needed default
add given allocation decider given deciders collection erroring class name already used
interoperability transport clients older 63 need strip customs cluster state client might able deserialize clusterstate cluster state filter customs adapted cluster state
return new allocationdecider instance builtin deciders well plugins
checks shards list completed shards list shard statuses true shards completed either successfully failed false otherwise
builds predicate accept cluster state generated current rejoined master
randomly adds deletes updates repositories metadata
randomly updates index routing table cluster state
randomly updates routing table cluster state
takes existing cluster state randomly adds removes updates metadata part using randompart generator new part added prefix value used prefix randomly generated part name
randomly updates nodes cluster state
randomly adds deletes updates inprogress snapshot restore records cluster state
makes random settings changes
generates random alias
randomly add deletes updates indices metadata
randomly updates index routing table cluster state
randomly adds deletes updates index templates metadata
randomly creates removes cluster blocks
makes random metadata changes
takes existing cluster state randomly adds removes updates cluster state part using randompart generator new part added prefix value used prefix randomly generated part name
returns random global block
randomly updates persistent transient settings given metadata
returns new instance snapshotdeletionsinprogress removes given entry invoking instance
returns new instance snapshotdeletionsinprogress adds given entry invoking instance
creates simple diff without changes
read simple diff stream
creates simple diff changes
calculates diff two immutableopenintmaps diffable objects
calculates diff two maps nondiffable objects
calculates diff two immutableopenmaps nondiffable objects
calculates diff two maps diffable objects
calculates diff two immutableopenmaps diffable objects
returns new diff map given key removed modify invoking instance key exist diff map instance returned
calculates diff two immutableopenintmaps nondiffable objects
construct execution result instance correspondence tasks execution result resultingstate resulting cluster state executionresults correspondence tasks outcome
disconnects nodes except ones provided parameter
retrieve latest nodes stats calling listener complete latch used wait nodes stats complete desired
refreshes clusterinfo blocking fashion
retrieve latest indices stats calling listener complete latch used wait indices stats complete desired
create fake nodestats given node usage
timeout global timeout observer expired observer fail existing new waitfornextchange calls set null wait indefinitely
wait next cluster state satisfies statepredicate listener callback listener statepredicate predicate check whether cluster state changes relevant callback called timeoutvalue timeout waiting null global observer timeout used
sets last observed state currently applied cluster state returns
create new diskusage totalbytes 0 getfreediskaspercentage always return 1000 free
read simple diff stream
creates new clusterinfo instance leastavailablespaceusage node id disk usage mapping path least available space node mostavailablespaceusage node id disk usage mapping path available space node shardsizes shardkey size bytes mapping per shard routingtodatapath shard routing datapath mapping shardidentifierfromrouting
returns shard size given shard routing defaultvalue metric available
test basic properties clusterchangedevent class 1 make sure null values properties 2 make sure cant create clusterchangedevent null values
test whether clusterchangedevent returns correct value whether local node master based set cluster state
test custom metadata change checks
test indices created indices deleted lists two cluster states correct change indices added deleted also tests metadata equality cluster states
test indices deleted list correct previous cluster state initializedrecovered trigger use index tombstones determine deleted indices
test routing table changes checks
test index metadata change check
test nodes addedremovedchanged checks
retrieves cluster state given indices checks cluster state returns coherent data routing table metadata
returns true iff indexmetadata given index changed previous cluster state new cluster state note object reference equality test equals test
returns indices deleted event
determines whether current cluster state represents entirely new cluster either node joins cluster first time node receives cluster state update brand new cluster different uuid previous cluster happen master node elected never part cluster before
returns set custom meta data types custom metadata cluster changed previous cluster state new cluster state custom meta data types returned iff added updated removed previous current state
returns indices created event
returns true iff routing table changed given index note object reference equality test equals test
constructs new shard restore status specified state given node specified failure reason nodeid node id state restore state reason failure reason
reads restore status stream input stream input restore status
returns state corresponding state code value stat code state
creates new restore metadata snapshot snapshot state current state restore process indices list indices restored shards map shards restored current restore status
writes restore status stream output stream input
serializes single restore operation entry restore operation metadata builder xcontent builder params serialization parameters
reads restore status stream input stream input
makes sure indices waited snapshotting commences populated shards relocating initializing state
clusterhealthresponses xcontent parser
creates new clusterstatehealth instance considering current cluster state provided index names clusterstate current cluster state must null concreteindices array index names consider must null may empty
xcontent parser serialization tests
xcontent parser serialization tests
checks inactive primary shard cause cluster health go red inactive primary shard index cause cluster health red make visible existing data unavailable case index creation snapshot restore index shrinking unexceptional events cluster lifecycle cluster health turn red time primaries still initializing state go yellow instead however case exceptional events example primary shard cannot assigned node initialization fails point cluster health still turn red nb method not called active shards nonprimary shards
creates new discoverynode note version node unknown versionminimumcompatibilityversion used current version corresponds minimum version elasticsearch version communicate with higher version used node might able communicate remote node initial handshakes node versions discovered updated nodename nodes name nodeid nodes unique persistent id ephemeral id auto generated address nodes transport address attributes node attributes roles node roles version version node
creates discoverynode representing local node
creates new discoverynode note version node unknown versionminimumcompatibilityversion used current version corresponds minimum version elasticsearch version communicate with higher version used node might able communicate remote node initial handshakes node versions discovered updated id nodes unique persistent node id constructor auto generate random ephemeral id address nodes transport address attributes node attributes roles node roles version version node
creates new discoverynode note version node unknown versionminimumcompatibilityversion used current version corresponds minimum version elasticsearch version communicate with higher version used node might able communicate remote node initial handshakes node versions discovered updated nodename nodes name nodeid nodes unique persistent id ephemeralid nodes unique ephemeral id hostaddress nodes host address address nodes transport address attributes node attributes roles node roles version version node
creates new discoverynode reading stream provided argument stream ioexception error reading stream
extract node roles given settings
generates humanreadable string discovernodefilters example idid1 blahnameblah name2
checks node safely added node collection null ok error message explaining node added note method returns nonnull value calling adddiscoverynode fail exception
returns changes comparing nodes provided nodes
resolve node given id node id node discover discovered node matching given id illegalargumentexception one node matches request nodes resolved
get node address address transportaddress wanted node node identified given address null node exists
get map coordinating nodes nodes neither master data ingest nodes arranged ids map coordinating nodes arranged ids
determine given node exists node node existence verified true node exists otherwise false
get map discovered master data nodes arranged ids map discovered master data nodes arranged ids
adds disco node builder throw illegalargumentexception supplied node doesnt pass preflight checks performed validateadddiscoverynode
resolves set node descriptions concrete existing node ids descriptions resolved order local master relevant nodes node id wild card pattern matched node names attrvalue pattern attr node role master data ingest etc case value true false generic node attribute name case value treated wildcard matched node attribute values
returns true local node elected master node
returns master node null master node
update mappings synchronously master node waiting timeout method returns successfully mappings applied master node propagated data nodes
send shard failed request master node update cluster state shard local node failed
send shard failed request master node update cluster state failure shard another node means shard failed write made primary replicated shard copy shard exist anymore still entry insync set remove allocation id insync set shardid shard id shard fail allocationid allocation id shard fail primaryterm primary term associated primary shard failing shard must strictly positive markasstale whether mark failing shard stale eg removing insync set failing shard message reason failure failure underlying cause failure listener callback upon completion request
returns maximum time interval wait acknowledgements
returns maximum time interval wait request completed master node
sets master node timeout
sets acknowledgement timeout
sets indices operation needs executed
executes actual test
global block provided status
returns true iff non given clusterblocklevelmetadatawrite place clusterblockisallowreleaseresources returns false used places resources released like deletion index free resources nodes indices indices check
returns true one global blocks disable state persistence flag set
asserts current thread not cluster state update thread
asserts current stack trace not involve cluster state applier
asserts current thread cluster state update thread
current cluster state renamed appliedclusterstate
removes timeout listener updated cluster states
removes applier updated cluster states
adds cluster state listener expected removed short period time provided listener notified specific time elapsed note listener removed timeout responsibility caller
submits cluster state update task unlike submitstateupdatetaskstring object clusterstatetaskconfig clusterstatetaskexecutor clusterstatetasklistener submitted updates batched source source cluster state update task updatetask full context cluster state update task
submits batch cluster state update tasks submitted updates guaranteed processed together potentially tasks executor source source cluster state update task tasks map update tasks corresponding listeners config cluster state update task configuration executor cluster state update task executor tasks share executor executed batches executor type cluster state update task state
returns tasks pending
submits cluster state update task submitted updates batched across instance executor exact batching semantics depend underlying implementation rough guideline update task submitted pending update tasks executor update tasks executed executor single batch source source cluster state update task task state needed cluster state update task config cluster state update task configuration executor cluster state update task executor tasks share executor executed batches executor listener callback cluster state update task completes type cluster state update task state
submits batch cluster state update tasks submitted updates guaranteed processed together potentially tasks executor source source cluster state update task tasks map update tasks corresponding listeners config cluster state update task configuration executor cluster state update task executor tasks share executor executed batches executor type cluster state update task state
local node
submits cluster state update task unlike submitstateupdatetaskstring object clusterstatetaskconfig clusterstatetaskexecutor clusterstatetasklistener submitted updates batched source source cluster state update task updatetask full context cluster state update task
submits cluster state update task submitted updates batched across instance executor exact batching semantics depend underlying implementation rough guideline update task submitted pending update tasks executor update tasks executed executor single batch source source cluster state update task task state needed cluster state update task config cluster state update task configuration executor cluster state update task executor tasks share executor executed batches executor listener callback cluster state update task completes type cluster state update task state
note test work long single thread executor executing state update tasks
shards replicas indices routing table shards
builds routing table note called builder must thrown away need build new routingtable copy one youll need build new routingtablebuilder
active primary shards provided indices grouped each group single element consisting primary shard handy components expect get group iterators still want cases iterate primary shards and one shard replication group indices indices return shards replicas primary shards grouped single shard element group indexnotfoundexception index passed exists
shards replicas provided index index index return shards replicas shards matching specific index indexnotfoundexception index passed exists
shards provided shardid shard routing entries given index shard id indexnotfoundexception provided index exist shardnotfoundexception provided shard id unknown
shards provided index shard id shard routing entries given index shard id indexnotfoundexception provided index exist shardnotfoundexception provided shard id unknown
parses preference type given string
ensures changes hashfunction shard selection bwc
test asserts replicas failed execute resync operations failed marked stale
test ensures unassigned primary shard valid shard copy least one node force allocate primary shard one nodes even allocation deciders return decision allocate
updates unassigned info recovery source current unassigned shard unassignedinfo new unassigned info use recoverysource new recovery source use shard unassigned info updated
moves shard unassigned initialize state existingallocationid allocation id use null fresh allocation id generated initialized shard
mark shard started adjusts internal statistics started shard
returns one active replica shard given shard id null active replica found since replicas could possibly nodes older version es primary is return replicas highest version es
relocate shard another node adding target initializing shard well assigning it pair source relocating target initializing shards
moves assigned replica shard primary replicashard replica shard promoted primary resulting primary shard
calculates routingnodes statistics iterating shardroutings cluster ensure bookkeeping correct performance reasons called asserts method always returns true throws assertion error assertion enabled method nothing
returns active primary shard given shard id null primary found primary active
applies relevant logic handle cancelled failed shard moves shard unassigned completely removes shard if relocation target shard primary also fails initializing replicas shard active primary also promotes active replica primary if replica exists shard relocating primary also removes primary relocation target shard shard relocating replica promotes replica relocation target full initializing replica removing relocation source information possible peer recovery always done primary shard primary replica relocation target also clears relocation information source shard
cancels give shard routing nodes internal statistics cancels relocation shard relocating
creates iterator shards interleaving nodes iterator returns first shard first node first shard second node etc one shard node returned iterator resumes first node returning second shard continues shards nodes returned
returns true iff replicas active given shard routing otherwise false
removes ignores unassigned shard will ignored run added back unassigned metadata constructed again typically used allocation decision prevents shard allocated subsequent consumers api wont try allocate shard again attempt result allocation attempt
cancels relocation shard shard must relocating shard cancelling relocation
initializes current unassigned shard moves unassigned list existingallocationid allocation id use null fresh allocation id generated
unsupported operation interface use removeandignoreallocationstatus routingchangesobserver initializestring string long routingchangesobserver
moves assigned primary unassigned demotes replica used conjunction promoteactivereplicashardtoprimary active replica promoted primary
applies relevant logic start initializing shard moves initializing shard started shard relocation target also removes relocation source started shard primary relocation target also reinitializes currently initializing replicas recovery source changes started shard
removes relocation source initializing nonprimary shard allows replica shard continue recovery primary even though nonprimary relocation source failed
returns shards state unassigned shard id given shard
marks shard temporarily ignored adds ignore unassigned list used caution typically correct usage removeandignore iterator ignored unassignediteratorremoveandignoreallocationstatus routingchangesobserver isignoredempty
drains unassigned shards returns it method drain ignored shards
creates plainsharditerator instance iterates subset given shards given shardid shardid shard id group shards shards iterate
figure existing scheduled reroute good enough whether need cancel reschedule
returns number shards unassigned currently delayed
finds next closest delay expiration delayed shard nanoseconds based current time returns 0 delay negative returns 1 delayed shard found
creates unassignedinfo object based current time reason cause making shard unassigned see reason information message information cause
calculates delay left based current time in nanoseconds delay defined index settings relevant shard effectively delayed see isdelayed returns 0 delay negative calculated delay nanoseconds
returns additional failure exception details exists
returns optional details explaining reasons
reason cause making shard unassigned see reason information message information cause failure shard level failure caused shard unassigned exists unassignedtimenanos time use base delayed reassignment calculation unassignedtimemillis time unassignment used display reporting delayed allocation shard delayed due indexdelayednodelefttimeoutsetting lastallocationstatus result last allocation attempt shard
builds string representation message failure exists
verify explicitly changing value index setting delayed allocation small value kicks allocation unassigned shard even though node hosted come back
small delay timeout verify expires get green even though node hosting shard coming back
verifies delay timeout 11 index shard immediately get allocated free node node hosting leaves cluster
delayed allocation set verifies even though node free allocate unassigned shard node hosting leaves doesnt get allocated bring node back gets allocated since existed before
verify explicitly changing value index setting delayed allocation 0 kicks allocation unassigned shard even though node hosted come back
puts primary shard indexroutings initializing state
verifies delayed allocation calculation correct
verifies shard fails reason properly set details preserved
tests reroute node detected leaving cluster right unassigned meta set
unassigned meta kept shard goes initializing cleared moves started
returns total number shards within groups total number shards
constructs enw groupshardsiterator given list
returns total number shards plus number empty groups number shards empty groups
returns iterator active initializing shards ordered adaptive replica selection forumla making sure though random within active shards or missing rank initializing shards last iterate through
adjust nodes collected stats original ranking paper need adjust nodes stats cassandra sends occasional requests copies data stats updated broadcast phase elasticsearch however sort broadcasttoall behavior order prevent node gets high score never gets requests must ensure eventually returns normal score candidate serving requests adjustment takes winning nodes statistics adds average statistics nonwinning node lets say winning node queue size 10 nonwinning node queue 18 average queue size 10 18 2 14 nonwinning node statistics added queue size 14 repeated response time service times well
returns iterator active initializing shards making sure though random within active shards initializing shards last iterate through
returns shards based nodeattributes given node name node attribute node ip supports node specifications cluster api
determine shards index specific state index id index states set states listed list shards
number shards node eventually relocated
determine number shards specific state states set states counted number shards
determine shards specific state states set states listed list shards
add new shard node shard shard crate node
returns list shards match one states listed shardroutingstate states state shardroutingstate retrieve list shards match one given shardroutingstate states
initializes index restored snapshot
calculates number primary shards active state routing table number active primary shards
initializes existing index restored snapshot
adds new shard routing makes copy it reference data used index shard routing table needs created
calculates number nodes hold one shards index indexroutingtable excluding nodes node ids give excludednodes parameter excludednodes id nodes excluded number distinct nodes index least one shard allocated
calculates number primary shards routing table shardroutingstateunassigned state
initializes new empty index restored snapshot
initializes new empty index option control api not
tests new delayed reroute scheduled right delayed reroute run
puts primary shard indexroutings initializing state
reverse engineer sync aid based given indexroutingtable
relocate shard another node relocatingnodeid id node relocate shard
additional metadata shard iswas unassigned metadata kept around shard moves started
short description shard
returns true routing relocation source given routing
id uniquely identifies allocation
returns true routing allocation id another note shard routing null allocationid method returns false routing describe allocation all
cancel relocation shard shards state must set relocating
set shards state started shards state must initializing relocating relocation canceled
moves shard unassigned state
removes relocation source nonprimary shard shard state must initializing allows nonprimary shard continue recovery primary even though nonprimary relocation source failed
reinitializes replica shard giving fresh allocation id
make active shard primary unless its primary illegalshardroutingstateexception shard already primary
set unassigned primary shard nonprimary illegalshardroutingstateexception shard already replica
writes shard information streamoutput without writing index name shard id streamoutput write shard information ioexception something happens write
returns true current routing identical routing meta fields ie unassigned info
returns true routing relocation target given routing
initializes unassigned shard node existingallocationid allocation id use null fresh allocation id generated
returns shard routing representing target shard target shard routing initializing state relocatingnodeid set source node
returns recovery source given shard replica shards always recover primary peerrecoverysource recovery source null shard active
constructor internally create shard routing instances note internal flag set true either class tests visible testing
creates new allocation id finalizing relocation note expected called allocation id target shard thus needs clear relocating id
creates new allocation id shard moves relocated populating transient holder relocationid
creates new allocation id target initializing shard result relocation
creates new allocation id representing cancelled relocation note expected called allocation id source shard
tests getting allocationdecision type
tests getting allocationdecision allocationstatus
tests order values enum depend natural enum sort order sorting node decisions see abstractallocationdecisiongetnodedecisions
tests serialization deserialization
creates new routingallocation deciders allocationdeciders used make decisions routing allocations routingnodes routing nodes current cluster clusterstate cluster state rerouting currentnanotime nano time use delay allocation calculation typically systemnanotime
create routing decision including reason debug flag turned decision decision whether allowdeny allocation deciderlabel human readable label allocationdecider reason format string explanation decision params format string parameters
returns whether given node id ignored consideration allocationdeciders deciding whether allocate specified shard id node node ignored specified shard failed node triggering current round allocation since shard failed node dont want try reassign there node still part cluster shardid shard id allocated nodeid node id check true node id ignored allocation decisions false otherwise
exception present causing shard fail
failure message available explaining shard failed
prevent set insyncallocationids grow unboundedly happen example dont write primary repeatedly shut nodes active replicas use numberofreplicas 1 possible active shard copies bound insyncallocationids set
assume following scenario indexing request written primary fails replicated active replica primary instructs master fail replica acknowledging write client meanwhile node replica removed cluster deassociatedeadnodes means shardrouting replica failed its allocation id still part insync set make sure failshard request primary removes allocation id insync set
dont remove allocation id failed active primary replica promote primary
assume following scenario indexing request written primary fails replicated active replica primary instructs master fail replica acknowledging write client meanwhile primary fails unrelated reason master batches requests fail primary replica make sure allocation id primary kept insync allocation set acknowledge request client otherwise would acknowledge write made primary replica replica still considered nonstale
trim set allocation ids set grows
gets allocationdecision allocationstatus
gets allocationdecision decisiontype
tests higher prioritized primaries replicas allocated first even balanced shard allocator see httpsgithubcomelasticelasticsearchissues13249 details
get node allocator assign shard to returning null node shard assigned moved isdecisiontaken returns false invoking method throw illegalstateexception
gets sorted list individual nodelevel decisions went making ultimate decision whether allocate move shard isdecisiontaken returns false invoking method throw illegalstateexception
returns true least one node returned typeyes decision allocating shard
generates xcontent nodelevel decisions creating outer nodedecisions object serialized
generates xcontent discoverynode leaves noncritical fields
warn given disk usage low high watermark passed
gets store exception trying read store error error returns null
gets allocation id shard copy exists
decision details allocating node returns null allocation decision taken node case getnodedecision return allocationdecisionno
get shard store information node exists
applies failed shards note assigned shardrouting instances exist routing table provided parameter also applies list allocation ids remove insync set shard copies routing entries routing table instance clusterstate returned change made
internal helper cap number elements potentially long list logging elements elements log may nonnull list must null formatter function convert list elements string must null list element type commaseparated string first elements
checks replicas autoexpand feature need adapted returns updated cluster state changes necessary identical cluster changes required
removes delay markers unassigned shards based current time stamp
reroutes routing table based live nodes instance clusterstate returned change made
creates new commandsresult explanations explanation reroute actions clusterstate resulting cluster state
reset failed allocation counter unassigned shards
unassigned shards associated nodes longer part cluster potentially promoting replicas needed
applies started shards note initializing shardrouting instances exist routing table provided parameter duplicates contained instance clusterstate returned change made
provides feedback commands yes decision displayed user command applied
read routingexplanations object
write routingexplanations object
checks watermark string valid percentage byte size value watermark value given
attempts parse watermark percentage returning 1000 parsed specified lenient parameter true otherwise throwing elasticsearchparseexception watermark watermark parse percentage lenient true lenient parsing applied parsed percentage
attempts parse watermark bytesizevalue returning zero bytes parsed specified lenient parameter true otherwise throwing elasticsearchparseexception watermark watermark parse byte size settingname name setting lenient true lenient parsing applied parsed byte size value
creates new move decision decision plus adding remain decision
creates move decision rebalancing shard allowed
returns true shard allowed rebalanced another node cluster returns false otherwise getclusterrebalancedecision returns null result method meaningless rebalance decision taken isdecisiontaken returns false invoking method throw illegalstateexception
returns decision allowed rebalance shard invoking method return null canremain returns false means node allowed remain current node cluster forced attempt move shard different node opposed attempting rebalance shard better cluster balance possible moving it isdecisiontaken returns false invoking method throw illegalstateexception
gets current ranking node shard currently assigned relative nodes cluster reported nodeallocationresultgetweightranking ranking return meaningful positive integer getclusterrebalancedecision returns nonnull value otherwise 0 returned isdecisiontaken returns false invoking method throw illegalstateexception
creates move decision shard allowed remain current node canremaindecision decision whether shard allowed remain current node allocationdecision allocationdecision moving shard another node assignednode node shard move nodedecisions nodelevel decisions comprised final decision nonnull iff explain true movedecision moving shard another node
creates decision whether move shard different node form better cluster balance
creates move decision shard able remain current node shard wont forced move another node
returns decision shard allowed remain current node isdecisiontaken returns false invoking method throw illegalstateexception
returns true shard remain current node returns false otherwise isdecisiontaken returns false invoking method throw illegalstateexception
returns true shard cannot remain current node moved returns false otherwise isdecisiontaken returns false invoking method throw illegalstateexception
returns allocationdecision moving shard another node isdecisiontaken returns false invoking method throw illegalstateexception
removes allocation ids insync set shard copies routing entries routing table method called allocationservice changes routing table made
updates insync allocations routing changes made routing table
updates current metadata based changes routingchangesobserver specifically update indexmetadatagetinsyncallocationids indexmetadataprimarytermint based changes made allocation oldmetadata metadata object routing nodes changed newroutingtable routingtable object routing changes applied adapted metadata potentially original one change needed
remove allocation id shard set insync shard copies
increases primary term increaseprimaryterm called shard id
creates allocateunassigneddecision given decision assigned node any
gets remaining delay allocating replica shard node holding replica left cluster deciders waiting see node returns allocating replica elsewhere returns meaningful positive value getallocationstatus returns allocationstatusdelayedallocation isdecisiontaken returns false invoking method throw illegalstateexception
returns allocationdecision denoting result allocation attempt isdecisiontaken returns false invoking method throw illegalstateexception
returns decision given allocationstatus individual nodelevel decisions comprised final decision explain mode
gets total configured delay allocating replica shard node holding replica left cluster deciders waiting see node returns allocating replica elsewhere returns meaningful positive value getallocationstatus returns allocationstatusdelayedallocation isdecisiontaken returns false invoking method throw illegalstateexception
returns decision delayed shard allocation replica shard individual nodelevel decisions comprised final decision explain mode instances created method return allocationstatusdelayedallocation getallocationstatus
returns status unsuccessful allocation attempt value null decision taken decision decisiontypeyes isdecisiontaken returns false invoking method throw illegalstateexception
creates yes decision given individual nodelevel decisions comprised final yes decision along node id shard assigned allocation id shard available
returns throttle decision individual nodelevel decisions comprised final throttle decision explain mode
gets allocation id existing shard copy allocator assigning shard to method returns nonnull value iff gettargetnode returns nonnull value node shard assigned already shard copy insync allocation id reuse isdecisiontaken returns false invoking method throw illegalstateexception
builds internal model shards given iterable shards iterable must assigned node method skip shards state shardroutingstaterelocating since relocating shard shadow shard state shardroutingstateinitializing target node respect allocation balancing process short method recreates statusquo cluster
makes decision whether move started shard another node following rules apply movedecision return object 1 shard started decision taken movedecisionisdecisiontaken return false 2 shard allowed remain current node attempt made move shard movedecisioncanremaindecision decision type yes fields object null 3 shard allowed remain current node movedecisiongetallocationdecision populated decision moving another node movedecisionforcemove returns true movedecisiontargetnode return nonnull value otherwise assignednodeid null 4 method invoked explain mode eg cluster allocation explain apis movedecisionnodedecisions nonnull value
makes decision moving single shard different node form optimally balanced cluster method invoked cluster allocation explain api only
move started shards allocated node anymore shard moved function executes move operation minimal eligible node respect weight function shard moved shard set shardroutingstaterelocating shadow instance shard created incremented version state shardroutingstateinitializing
returns true iff weight delta two nodes defined threshold see thresholdsetting defining threshold
absolute value difference two weights
balances nodes cluster model according weight function configured threshold minimum delta weight maximum node minimum node according weightfunction weight calculated per index distribute shards evenly per index balancer tries relocate shards delta exceeds threshold default case threshold set 10 enforce gaining relocation only words relocations move weight delta closer 00
balances nodes cluster model according weight function actual balancing delegated balancebyweights
make decision allocating unassigned shard method returns two values tuple first value decision taken allocate unassigned shard second value modelnode representing node shard assigned to decision returned type typeno assigned node null
resets sorter recalculates weights per node sorts nodes weight minimal weight first
allocates given shards minimal eligible node shards index respect weight function given shards must unassigned
builds initial index ordering indices returned unbalanced first need order prevent allocations added nodes one index weight parameters global balance overrule index balance intermediate state example happen 3 nodes 3 indices 3 primary 1 replica shards first stage three nodes hold 2 shard index add another node first index balanced moving three shards two nodes new node since shards yet global balance node way average rebalance need move shards back eventually likely nodes relocated from
tries find relocation max node minimal node arbitrary shard given index balance model iff method returns true relocation already executed simulation model well cluster
utility method rejecting current allocation command based provided reason
handle case disco node cannot found routing table usually means its data node
initializes unassigned shard node removes unassigned allocation allocation routingnodes routing nodes routingnode node initialize shardrouting shard routing matched unassigned shards unassignedinfo unassigned info override recoverysource recovery source override
read stream
utility method rejecting current allocation command based provided exception
read stream
creates new cancelallocationcommand index index shard allocation canceled shardid id shard allocation canceled node id node manages shard allocation canceled
read stream
reads allocationcommands streaminput streaminput read allocationcommands read ioexception something happens read
writes allocationcommands streamoutput commands commands write streamoutput write commands ioexception something happens write
creates new set allocationcommands commands allocationcommands wrapped instance
executes wrapped commands given routingallocation allocation routingallocation apply command orgelasticsearchelasticsearchexception something happens execution
adds set commands collection commands array commands add instance allocationcommands given commands added
reads allocationcommands xcontentparser commands allocate index test shard 0 node test parser xcontentparser read commands allocationcommands read ioexception something bad happens reading stream
read stream
add decision multidecision instance decision decision add multidecision instance given decision added
returns explanation string fully formatted formats string once
creates new single decision given type type type decision explanation explanation decision explanationparams set additional parameters
given diskusage node size shard return percentage free disk shard allocated node usage diskusage node space computed shardsize size bytes shard percentage free space shard assigned node
returns size shards currently relocated node may finished transferring yet subtractshardsmovingaway true size shards moving away subtracted total size shards
returns expected shard size given shard default value provided enough information available estimate shards size
returns diskusage routingnode using average usage nodes disk usage map node node return averaged diskusage object usages map nodeid diskusage known nodes diskusage representing given node using average disk usage
returns decision whether given primary shard forcibly allocated given node method called unassigned primary shards node shard copy disk note implementations override behavior take account results canallocateshardrouting routingnode routingallocation making decision force allocation force allocation considered deciders return decisionno
tests updating sameshardallocationdeciderclusterroutingallocationsamehostsetting setting works expected
tests updating enableallocationdecider related settings works expected
returns decision whether given shard routing allocated given node default decisionalways
returns decision whether given shard routing rebalanced given allocation default decisionalways
tests typehigherthantype
shard routing passed canallocateshardrouting routingnode routingallocation initializing shard node but unassigned shard routing case want assign unassigned shard node initializing shard routing want assign initializing shard node instead started shard routing case want check relocate node relocating shard routing want relocate node instead method returns corresponding initializing shard would allocated node
test httpsgroupsgooglecomdmsgelasticsearchysyhyob8ezdfnt9vo44j
sets routing indices
concreteindexnamesclusterstate indicesoptions string index expressions options encapsulated specified request
specified string data math expression method returns resolved expression
translates provided index expression actual concrete indices properly deduplicated state cluster state containing data resolve expressions concrete indices options defines aliases indices need resolved concrete indices indexexpressions expressions resolved alias index names resolved concrete indices based cluster state indices options index expressions indexnotfoundexception one index expressions pointing missing index alias provided indices options context dont allow case final result indices resolution contains indices indices options context dont allow case illegalargumentexception one aliases resolve multiple indices provided indices options context dont allow case
translates provided index expression actual concrete indices properly deduplicated state cluster state containing data resolve expressions concrete indices options defines aliases indices need resolved concrete indices starttime start request concrete indices invoked indexexpressions expressions resolved alias index names resolved concrete indices based cluster state indices options index expressions provided indices options context dont allow case final result indices resolution contains indices indices options context dont allow case illegalargumentexception one aliases resolve multiple indices provided indices options context dont allow case
utility method allows resolve index expression corresponding single concrete index callers make sure provide proper orgelasticsearchactionsupportindicesoptions require single index result indices resolution must fact return single index using method illegalargumentexception gets thrown otherwise state cluster state containing data resolve expression concrete index request request defines alias index need resolved concrete index expression resolved alias index name illegalargumentexception index resolution lead one index concrete index obtained result index resolution
identifies whether first argument an array containing index names pattern matches indices indicesoraliases array containing index names concreteindices array containing concrete indices first argument refers true first argument pattern maps available indices false otherwise
returns true iff given expression resolves given index name otherwise false
whether specified alias index exists alias index contains datemath resolved too
concreteindicesclusterstate indicesoptions string index expressions options encapsulated specified request
translates provided index expression actual concrete indices properly deduplicated state cluster state containing data resolve expressions concrete indices options defines aliases indices need resolved concrete indices indexexpressions expressions resolved alias index names resolved concrete indices based cluster state indices options index expressions indexnotfoundexception one index expressions pointing missing index alias provided indices options context dont allow case final result indices resolution contains indices indices options context dont allow case illegalargumentexception one aliases resolve multiple indices provided indices options context dont allow case
utility method allows resolve index expression corresponding single write index state cluster state containing data resolve expression concrete index request request defines alias index need resolved concrete index expression resolved alias index name illegalargumentexception index resolution lead index leads one index write index obtained result index resolution
iterates list indices selects effective list required aliases given index only aliases given predicate tests successfully returned indices list contains nonrequired reference index null returned returns null filtering required
resolves search routing expression aliases used expressions point concrete indices aliases routing defined specified routing used routing values grouped concrete index
resolves provided cluster expression matching cluster names method supports exact wildcard matches remoteclusters aliases remote clusters clusterexpression expressions resolved cluster names resolved cluster aliases
concreteindex concrete index check routing required type type check routing required whether routing required according mapping specified index type
finds specific index aliases match specified aliases directly partially via wildcards point specified concrete indices match partially indices via wildcards aliases aliases look originalaliases original aliases user originally requested concreteindices concrete indexes index aliases must point order returned map index list alias metadata list corresponding concrete index empty aliases present index
returns indexmetadata index indexnotfoundexception metadata index found
checks least one specified aliases exists specified concrete indices wildcards supported alias names partial matches aliases names index aliases find concreteindices concrete indexes index aliases must point order returned whether least one specified aliases exists one specified concrete indices
returns indexing routing given aliasorindex resolves routing alias metadata used write index
finds mappings types concrete indices types expanded include types match glob patterns types array empty types array null all expanded types available given indices fields match provided field filter returned default predicate always returns true overridden via plugins mapperplugingetfieldfilter
validates alias filter parsing using provided orgelasticsearchindexqueryqueryshardcontext illegalargumentexception filter valid
validates alias filter parsing using provided orgelasticsearchindexqueryqueryshardcontext illegalargumentexception filter valid
validate proposed alias
allows partially validate alias without knowing index itll get applied to useful index templates containing aliases checks also possible parse alias filter via orgelasticsearchcommonxcontentxcontentparser without validating filter though illegalargumentexception alias valid
checks mappings compatibility current version
elasticsearch v60 longer supports indices created pre v50 indices created elasticsearch v50 reindexed elasticsearch 5x opened version elasticsearch
marks index upgraded dont test
checks index upgraded current version master node index need upgrade returns index metadata unchanged otherwise returns modified index metadata index cannot updated method throws exception
checks replicas autoexpand feature need adapted returns map updates maps indices updated desired number replicas map desired number replicas key indices update value allows result method directly applied routingtablebuilderupdatenumberofreplicas
updates cluster block iff setting exists given settings
delete indices cluster state
validate name index alias static rules
returns default number routing shards based number shards index default number routing shards allow index split least 10 times factor two closer number shards gets 1024 less default split operations supported
validate name index static rules cluster state
validates settings mappings shrinking index list nodes least one instance source index shards allocated
creates index cluster state waits specified number shard copies become active as specified createindexclusterstateupdaterequestwaitforactiveshards sending response listener index creation successfully applied cluster state createindexclusterstateupdateresponseisacknowledged return true otherwise return false waiting occur started shards createindexclusterstateupdateresponseisshardsacknowledged also false index creation cluster state successful requisite shard copies started timeout createindexclusterstateupdateresponseisshardsacknowledged return true otherwise operation timed out return false request index creation cluster state update request listener listener send index creation cluster state update response
returns unique alias metadata per concrete index note although alias point concrete indices alias reference may routing filters
build operation
build operation
sometimes default mapping exists actual mapping created yet introduced case want return default mapping case default mapping definitions note mapping type introduced default mapping applied actual typed mappingmetadata setting routing timestamp needed
returns source shard ids shrink given shard id shardid id target shard shrink sourceindexmetadata source index metadata numtargetshards total number shards target index set shard ids shrink given shard id
selects source shards local shard recovery might either split shrink operation shardid target shard id select source shards sourceindexmetadata source metadata numtargetshards number target shards
returns routing factor shrunk index given number target shards factor used hash function orgelasticsearchclusterroutingoperationroutinggenerateshardidindexmetadata string string guarantee consistent hashing routing documents even number shards changed ie shrunk index sourcenumberofshards total number shards source index targetnumberofshards total number shards target index routing factor shrunk index given number target shards illegalargumentexception number source shards less number target shards source shards divisible number target shards
returns source shard id split given target shard shardid id target shard split sourceindexmetadata source index metadata numtargetshards total number shards target index source shard id split
adds human readable version creation date settings method used display settings human readable format rest api
returns primary term given shard see indexmetadataprimarytermint information
sets number shards used routing used number shards index changed ie index shrunk
sets primary term given shard see indexmetadataprimarytermint information
test whether current index uuid given one returns true either na
batch method apply queued refresh operations idea try batch much possible wont create index time example updates mapping generate single cluster change event those
refreshes mappings original parsed version
test resolving all pattern null empty array all random indicesoptions
test resolving wildcard pattern matches index alias random indicesoptions
finds index templates whose index pattern matched given index name result sorted indextemplatemetadataorder descending
writes repository metadata stream output stream output
constructs new repository metadata name repository name type repository type settings repository settings
converts serialized compressed form mappings parsed map
get number tombstones purged only called build called
purge tombstone entries returns number entries purged tombstones purged number tombstones list greater input parameter maximum allowed tombstones tombstones purged list equal maximum allowed
returns true graveyard contains tombstone given index
add set deleted indexes list tombstones cluster state
add deleted index list tombstones cluster state
add list tombstones graveyard
checks nodes leave cluster autoexpandreplica functionality triggers failing shards removed nodes ensures active shards live nodes failed primary resided dead node instead one replicas live nodes first gets promoted primary autoexpansion removing replicas triggers followup step
serializes information single repository repository repository metadata builder xcontent builder params serialization parameters
returns repository given name null repository doesnt exist name name repository repository metadata
get real number parallel threads int number threads
validate parameters user passed mojoexecutionexception
write status file status file contain string describing exit status test success test returned success return code 0 numerical code returned nonzero status inprogress timedout
validate source parameters look sane
reads returns full contents specified file file file read byte containing full contents file ioexception io error reading file
parses scm output returns uri scm scm scm use build string uri scm
returns string representing current build time string representing current build time
parses scm output returns commit scm scm scm use build string commit scm
determines scm use git none captures output scm command later parsing scm use build exception error occurs attempting determine scm
given list files computes returns md5 checksum full contents files files list containing every file input md5 checksum byte calculated md5 checksum ioexception io error reading file nosuchalgorithmexception md5 algorithm supported
parses scm output returns branch scm scm scm use build string branch scm
converts bytes hexadecimal string representation returns it array byte convert string containing hexadecimal representation bytes
computes returns md5 checksum contents files input maven fileset string containing hexadecimal representation md5 checksum exception error computing md5 checksum
returns string containing every element given list element separated comma list list elements string containing every element commaseparated
converts maven fileset list file objects source fileset convert list containing every element fileset file ioexception io error occurs trying find files
creates new outputbufferthread consume given inputstream inputstream consume
prettyprint environment stringbuilder env map environment variable names values print prettyprinted string
add environment variables processbuilder pb processbuilder env map environment variable names values
runs specified command saves line commands output given list line commands stderr list command list containing command arguments output list inout parameter receive command output errors list inout parameter receive command stderr int exit code command
calls setstatusint sc string msg wrapped httpservletresponsewrapper object sc status code msg status message httpservletresponsewrappersetstatusint string deprecated set status code use setstatusint send error description use senderrorint string
optional hadoopfsfspermissionproto permission 4
optional string group 6
optional bytes ecdata 17 storagepolicy 16
optional uint64 length 3
required hadoopfsfilestatusprotofiletype filetype 1
optional string owner 5
required string path 2
optional string symlink 9
optional string path 2
optional uint64 blocksize 11
optional string group 6
required string path 2
optional string symlink 9
optional hadoopfsfspermissionproto permission 4
optional bytes encryptiondata 15 locations 12 alias 13 childrennum 14
optional string owner 5
optional string owner 5
required uint32 perm 1 unixstyle mode bits
optional uint32 flags 18 default 0
required string path 2
optional string owner 5
optional bytes encryptiondata 15 locations 12 alias 13 childrennum 14
optional uint64 modificationtime 7
optional hadoopfsfspermissionproto permission 4
optional bytes ecdata 17 storagepolicy 16
optional string symlink 9
required string path 2
optional string symlink 9
required uint32 perm 1 unixstyle mode bits
required string path 2
optional string path 2
optional uint64 modificationtime 7
optional string owner 5
optional hadoopfsfspermissionproto permission 4
optional hadoopfsfspermissionproto permission 4
required string path 2
optional string symlink 9
optional uint64 mtime 1
optional string group 6
optional string group 6
required string path 2
optional string owner 5
optional uint64 blocksize 11
optional hadoopfsfspermissionproto permission 4
optional string owner 5
optional uint64 mtime 1
optional string symlink 9
optional uint32 blockreplication 10
optional string path 2
optional string group 6
optional uint64 accesstime 8
optional hadoopfsfspermissionproto permission 4
optional string group 6
optional uint32 blockreplication 10
optional hadoopfsfspermissionproto permission 4
required hadoopfsfilestatusprotofiletype filetype 1
optional uint64 accesstime 8
optional string path 2
optional string symlink 9
optional string path 2
optional uint64 length 3
optional string group 6
optional string path 2
optional string path 2
optional uint32 flags 18 default 0
required string protocol 1 protocol name
required string protocol 1 protocol name
repeated hadoopcommonprotocolversionproto protocolversions 1
required string protocol 1 protocol name
required uint64 version 1
repeated hadoopcommonprotocolsignatureproto protocolsignature 1
repeated hadoopcommonprotocolversionproto protocolversions 1
required string rpckind 2 rpc kind
repeated uint32 methods 2
repeated hadoopcommonprotocolsignatureproto protocolsignature 1
repeated hadoopcommonprotocolversionproto protocolversions 1
required string rpckind 1 rpc kind
repeated hadoopcommonprotocolsignatureproto protocolsignature 1
repeated hadoopcommonprotocolsignatureproto protocolsignature 1
required string rpckind 2 rpc kind
repeated hadoopcommonprotocolversionproto protocolversions 1
required string rpckind 1 rpc kind
repeated uint64 versions 2 protocol version corresponding rpc kind
repeated hadoopcommonprotocolsignatureproto protocolsignature 1
repeated uint32 methods 2
repeated uint32 methods 2
repeated hadoopcommonprotocolversionproto protocolversions 1
repeated hadoopcommonprotocolsignatureproto protocolsignature 1
repeated hadoopcommonprotocolsignatureproto protocolsignature 1
required string rpckind 1 rpc kind
required string rpckind 2 rpc kind
repeated uint64 versions 2 protocol version corresponding rpc kind
repeated uint64 versions 2 protocol version corresponding rpc kind
required string rpckind 1 rpc kind
required string protocol 1 protocol name
required string rpckind 1 rpc kind
required string protocol 1 protocol name
repeated hadoopcommonprotocolsignatureproto protocolsignature 1
repeated hadoopcommonprotocolsignatureproto protocolsignature 1
repeated hadoopcommonprotocolversionproto protocolversions 1
required string rpckind 2 rpc kind
required string protocol 1 protocol name
required string protocol 1 protocol name
required string protocol 1 protocol name
required string protocol 1 protocol name
repeated hadoopcommonprotocolversionproto protocolversions 1
repeated hadoopcommonprotocolsignatureproto protocolsignature 1
repeated hadoopcommonprotocolversionproto protocolversions 1
repeated hadoopcommonprotocolsignatureproto protocolsignature 1
repeated hadoopcommonprotocolsignatureproto protocolsignature 1
repeated hadoopcommonprotocolversionproto protocolversions 1
required string rpckind 2 rpc kind
repeated hadoopcommonprotocolsignatureproto protocolsignature 1
required string rpckind 1 rpc kind
repeated hadoopcommonprotocolversionproto protocolversions 1
required string protocol 1 protocol name
repeated uint32 methods 2
repeated hadoopcommonprotocolversionproto protocolversions 1
repeated hadoopcommonprotocolversionproto protocolversions 1
repeated uint64 versions 2 protocol version corresponding rpc kind
required string protocol 1 protocol name
repeated hadoopcommonprotocolsignatureproto protocolsignature 1
repeated uint32 methods 2
repeated hadoopcommonprotocolsignatureproto protocolsignature 1
repeated hadoopcommonprotocolversionproto protocolversions 1
repeated hadoopcommonprotocolversionproto protocolversions 1
repeated hadoopcommonprotocolsignatureproto protocolsignature 1
repeated hadoopcommonprotocolsignatureproto protocolsignature 1
repeated hadoopcommonprotocolsignatureproto protocolsignature 1
required string protocol 1 protocol name
repeated hadoopcommonprotocolversionproto protocolversions 1
repeated hadoopcommonprotocolversionproto protocolversions 1
required string protocol 1 protocol name
required string protocol 1 protocol name
repeated uint64 versions 2 protocol version corresponding rpc kind
repeated hadoopcommonprotocolsignatureproto protocolsignature 1
repeated hadoopcommonprotocolversionproto protocolversions 1
repeated hadoopcommonprotocolversionproto protocolversions 1
repeated hadoopcommonprotocolversionproto protocolversions 1
repeated hadoopcommonprotocolversionproto protocolversions 1
repeated hadoopcommonprotocolsignatureproto protocolsignature 1
repeated uint64 versions 2 protocol version corresponding rpc kind
required string rpckind 2 rpc kind
required uint64 version 1
required string rpckind 1 rpc kind
repeated uint32 methods 2
required string rpckind 2 rpc kind
required uint32 callid 1 callid used request
optional string exceptionclassname 4 request fails
optional string errormsg 5 request fails often contains strack trace
required string method 1
required string context 1
optional string errormsg 5 request fails often contains strack trace
required uint32 callid 1 callid used request
optional sint32 retrycount 8 default 1
optional hadoopcommonrpccallercontextproto callercontext 7 call context
required string mechanism 2
optional uint32 serveripcversionnum 3 sent success fail
optional uint32 version 1
repeated hadoopcommonrpcsaslprotosaslauth auths 4
optional uint32 version 1
optional hadoopcommonrpctraceinfoproto traceinfo 6 tracing info
optional string serverid 4
optional sint32 retrycount 8 default 1
required string context 1
optional string protocol 3
optional string errormsg 5 request fails often contains strack trace
repeated hadoopcommonrpcsaslprotosaslauth auths 4
required string method 1
required bytes clientid 4 globally unique client id
required string context 1
required string mechanism 2
optional string exceptionclassname 4 request fails
repeated hadoopcommonrpcsaslprotosaslauth auths 4
optional hadoopcommonrpckindproto rpckind 1
repeated hadoopcommonrpcsaslprotosaslauth auths 4
optional int64 traceid 1 parentidhigh
required string method 1
optional hadoopcommonrpccallercontextproto callercontext 7 call context
optional string errormsg 5 request fails often contains strack trace
required bytes clientid 4 globally unique client id
repeated hadoopcommonrpcsaslprotosaslauth auths 4
optional string serverid 4
optional int64 traceid 1 parentidhigh
optional bytes token 3
optional hadoopcommonrpckindproto rpckind 1
required string method 1
optional hadoopcommonrpccallercontextproto callercontext 7 call context
required hadoopcommonrpcresponseheaderprotorpcstatusproto status 2
optional string protocol 3
optional bytes token 3
optional hadoopcommonrpccallercontextproto callercontext 7 call context
optional string protocol 3
optional bytes signature 2
required string method 1
optional string protocol 3
required string context 1
optional string exceptionclassname 4 request fails
required hadoopcommonrpcresponseheaderprotorpcstatusproto status 2
required string method 1
optional sint32 retrycount 5 default 1 clientid callid uniquely identifies request retry count 1 means first retry
optional int64 parentid 2 parentidlow
optional hadoopcommonrpcresponseheaderprotorpcerrorcodeproto errordetail 6 case error
optional hadoopcommonrpccallercontextproto callercontext 7 call context
optional bytes signature 2
optional string serverid 4
repeated hadoopcommonrpcsaslprotosaslauth auths 4
optional sint32 retrycount 5 default 1 clientid callid uniquely identifies request retry count 1 means first retry
optional int64 parentid 2 parentidlow
optional hadoopcommonrpctraceinfoproto traceinfo 6 tracing info
repeated hadoopcommonrpcsaslprotosaslauth auths 4
repeated hadoopcommonrpcsaslprotosaslauth auths 4
optional string exceptionclassname 4 request fails
optional hadoopcommonrpcresponseheaderprotorpcerrorcodeproto errordetail 6 case error
required string context 1
optional string errormsg 5 request fails often contains strack trace
optional string serverid 4
repeated hadoopcommonrpcsaslprotosaslauth auths 4
required string mechanism 2
repeated hadoopcommonrpcsaslprotosaslauth auths 4
optional hadoopcommonrpcrequestheaderprotooperationproto rpcop 2
optional uint32 serveripcversionnum 3 sent success fail
optional bytes challenge 5
optional string serverid 4
required string mechanism 2
optional string serverid 4
optional hadoopcommonrpctraceinfoproto traceinfo 6 tracing info
optional hadoopcommonrpcrequestheaderprotooperationproto rpcop 2
repeated hadoopcommonrpcsaslprotosaslauth auths 4
optional string protocol 3
repeated hadoopcommonrpcsaslprotosaslauth auths 4
required string context 1
optional string errormsg 5 request fails often contains strack trace
optional string exceptionclassname 4 request fails
required hadoopcommonrpcsaslprotosaslstate state 2
optional hadoopcommonrpctraceinfoproto traceinfo 6 tracing info
required string mechanism 2
optional bytes clientid 7 globally unique client id
optional hadoopcommonrpctraceinfoproto traceinfo 6 tracing info
optional string exceptionclassname 4 request fails
optional string protocol 3
repeated hadoopcommonrpcsaslprotosaslauth auths 4
required string method 1
repeated hadoopcommonrpcsaslprotosaslauth auths 4
optional hadoopcommonrpccallercontextproto callercontext 7 call context
optional string serverid 4
optional bytes clientid 7 globally unique client id
required string mechanism 2
required sint32 callid 3 sequence number sent back response
repeated hadoopcommonrpcsaslprotosaslauth auths 4
repeated hadoopcommonrpcsaslprotosaslauth auths 4
optional bytes challenge 5
optional hadoopcommonrpctraceinfoproto traceinfo 6 tracing info
repeated hadoopcommonrpcsaslprotosaslauth auths 4
optional hadoopcommonrpccallercontextproto callercontext 7 call context
optional string protocol 3
optional hadoopcommonrpctraceinfoproto traceinfo 6 tracing info
required string context 1
repeated hadoopcommonrpcsaslprotosaslauth auths 4
optional string errormsg 5 request fails often contains strack trace
required sint32 callid 3 sequence number sent back response
repeated hadoopcommonrpcsaslprotosaslauth auths 4
optional hadoopcommonrpctraceinfoproto traceinfo 6 tracing info
optional hadoopcommonrpccallercontextproto callercontext 7 call context
optional string exceptionclassname 4 request fails
required string mechanism 2
required hadoopcommonrpcsaslprotosaslstate state 2
repeated hadoopcommonrpcsaslprotosaslauth auths 4
required string declaringclassprotocolname 2 rpcs particular interface ie protocol done using ipc connection setup using rpcproxy rpcproxys declared protocol name sent form client server connection time rpc call also sends protocol name called declaringclassprotocolname name usually connection protocol name except cases example metaprotocols protocolinfoproto get metainfo protocol reuse connection need indicate actual protocol different ie protocol protocolinfoproto since reuse connection case declaringclassprotocolname field set protocolinfoproto
required string methodname 1 name rpc method
required string methodname 1 name rpc method
required string declaringclassprotocolname 2 rpcs particular interface ie protocol done using ipc connection setup using rpcproxy rpcproxys declared protocol name sent form client server connection time rpc call also sends protocol name called declaringclassprotocolname name usually connection protocol name except cases example metaprotocols protocolinfoproto get metainfo protocol reuse connection need indicate actual protocol different ie protocol protocolinfoproto since reuse connection case declaringclassprotocolname field set protocolinfoproto
required string methodname 1 name rpc method
required string methodname 1 name rpc method
required string methodname 1 name rpc method
required string methodname 1 name rpc method
required string methodname 1 name rpc method
required uint64 clientprotocolversion 3 protocol version class declaring called method
required string declaringclassprotocolname 2 rpcs particular interface ie protocol done using ipc connection setup using rpcproxy rpcproxys declared protocol name sent form client server connection time rpc call also sends protocol name called declaringclassprotocolname name usually connection protocol name except cases example metaprotocols protocolinfoproto get metainfo protocol reuse connection need indicate actual protocol different ie protocol protocolinfoproto since reuse connection case declaringclassprotocolname field set protocolinfoproto
required uint64 clientprotocolversion 3 protocol version class declaring called method
required string declaringclassprotocolname 2 rpcs particular interface ie protocol done using ipc connection setup using rpcproxy rpcproxys declared protocol name sent form client server connection time rpc call also sends protocol name called declaringclassprotocolname name usually connection protocol name except cases example metaprotocols protocolinfoproto get metainfo protocol reuse connection need indicate actual protocol different ie protocol protocolinfoproto since reuse connection case declaringclassprotocolname field set protocolinfoproto
required string declaringclassprotocolname 2 rpcs particular interface ie protocol done using ipc connection setup using rpcproxy rpcproxys declared protocol name sent form client server connection time rpc call also sends protocol name called declaringclassprotocolname name usually connection protocol name except cases example metaprotocols protocolinfoproto get metainfo protocol reuse connection need indicate actual protocol different ie protocol protocolinfoproto since reuse connection case declaringclassprotocolname field set protocolinfoproto
required string declaringclassprotocolname 2 rpcs particular interface ie protocol done using ipc connection setup using rpcproxy rpcproxys declared protocol name sent form client server connection time rpc call also sends protocol name called declaringclassprotocolname name usually connection protocol name except cases example metaprotocols protocolinfoproto get metainfo protocol reuse connection need indicate actual protocol different ie protocol protocolinfoproto since reuse connection case declaringclassprotocolname field set protocolinfoproto
required string declaringclassprotocolname 2 rpcs particular interface ie protocol done using ipc connection setup using rpcproxy rpcproxys declared protocol name sent form client server connection time rpc call also sends protocol name called declaringclassprotocolname name usually connection protocol name except cases example metaprotocols protocolinfoproto get metainfo protocol reuse connection need indicate actual protocol different ie protocol protocolinfoproto since reuse connection case declaringclassprotocolname field set protocolinfoproto
optional string effectiveuser 1
optional string effectiveuser 1
optional string protocol 3 protocol name next rpc layer client created proxy protocol name
optional string realuser 2
optional string effectiveuser 1
optional hadoopcommonuserinformationproto userinfo 2 userinfo beyond determined part security handshake connection time kerberos tokens etc
optional string realuser 2
optional hadoopcommonuserinformationproto userinfo 2 userinfo beyond determined part security handshake connection time kerberos tokens etc
optional string realuser 2
optional string effectiveuser 1
optional string protocol 3 protocol name next rpc layer client created proxy protocol name
optional hadoopcommonuserinformationproto userinfo 2 userinfo beyond determined part security handshake connection time kerberos tokens etc
optional hadoopcommonuserinformationproto userinfo 2 userinfo beyond determined part security handshake connection time kerberos tokens etc
optional string realuser 2
optional hadoopcommonuserinformationproto userinfo 2 userinfo beyond determined part security handshake connection time kerberos tokens etc
optional string effectiveuser 1
optional hadoopcommonuserinformationproto userinfo 2 userinfo beyond determined part security handshake connection time kerberos tokens etc
optional string protocol 3 protocol name next rpc layer client created proxy protocol name
optional string protocol 3 protocol name next rpc layer client created proxy protocol name
optional string realuser 2
optional string realuser 2
optional hadoopcommonuserinformationproto userinfo 2 userinfo beyond determined part security handshake connection time kerberos tokens etc
optional string effectiveuser 1
optional string protocol 3 protocol name next rpc layer client created proxy protocol name
optional string effectiveuser 1
optional string realuser 2
optional string protocol 3 protocol name next rpc layer client created proxy protocol name
optional hadoopcommonuserinformationproto userinfo 2 userinfo beyond determined part security handshake connection time kerberos tokens etc
optional string protocol 3 protocol name next rpc layer client created proxy protocol name
optional string sendername 3 handler sent message
repeated hadoopcommongenericrefreshresponseproto responses 1
optional string sendername 3 handler sent message
optional string sendername 3 handler sent message
optional string sendername 3 handler sent message
repeated hadoopcommongenericrefreshresponseproto responses 1
optional string usermessage 2 displayed user
repeated string args 2
optional string identifier 1
optional string identifier 1
repeated string args 2
repeated hadoopcommongenericrefreshresponseproto responses 1
optional int32 exitstatus 1 unix exit status return
optional string sendername 3 handler sent message
repeated string args 2
repeated hadoopcommongenericrefreshresponseproto responses 1
optional string identifier 1
repeated hadoopcommongenericrefreshresponseproto responses 1
repeated hadoopcommongenericrefreshresponseproto responses 1
repeated hadoopcommongenericrefreshresponseproto responses 1
optional string identifier 1
repeated hadoopcommongenericrefreshresponseproto responses 1
repeated hadoopcommongenericrefreshresponseproto responses 1
repeated string args 2
optional string usermessage 2 displayed user
repeated hadoopcommongenericrefreshresponseproto responses 1
repeated hadoopcommongenericrefreshresponseproto responses 1
optional string identifier 1
repeated hadoopcommongenericrefreshresponseproto responses 1
optional string usermessage 2 displayed user
optional int32 exitstatus 1 unix exit status return
repeated string args 2
repeated string args 2
optional string identifier 1
repeated string args 2
repeated hadoopcommongenericrefreshresponseproto responses 1
repeated hadoopcommongenericrefreshresponseproto responses 1
repeated string args 2
optional string usermessage 2 displayed user
optional string sendername 3 handler sent message
optional string identifier 1
repeated hadoopcommongenericrefreshresponseproto responses 1
repeated hadoopcommongenericrefreshresponseproto responses 1
repeated hadoopcommongenericrefreshresponseproto responses 1
repeated hadoopcommongenericrefreshresponseproto responses 1
repeated hadoopcommongenericrefreshresponseproto responses 1
optional string usermessage 2 displayed user
optional string usermessage 2 displayed user
optional string sendername 3 handler sent message
repeated hadoopcommongenericrefreshresponseproto responses 1
optional string usermessage 2 displayed user
repeated string args 2
repeated hadoopcommoncredentialskvproto tokens 1
repeated hadoopcommoncredentialskvproto secrets 2
required string alias 1
repeated hadoopcommoncredentialskvproto secrets 2
repeated hadoopcommoncredentialskvproto secrets 2
repeated hadoopcommoncredentialskvproto tokens 1
repeated hadoopcommoncredentialskvproto tokens 1
repeated hadoopcommoncredentialskvproto tokens 1
required hadoopcommontokenproto token 1
required string service 4
required string renewer 1
required bytes password 2
optional hadoopcommontokenproto token 2
repeated hadoopcommoncredentialskvproto secrets 2
required string renewer 1
required hadoopcommontokenproto token 1
required hadoopcommontokenproto token 1
required string kind 3
repeated hadoopcommoncredentialskvproto secrets 2
required string renewer 1
repeated hadoopcommoncredentialskvproto tokens 1
repeated hadoopcommoncredentialskvproto tokens 1
optional hadoopcommontokenproto token 2
required bytes identifier 1
required hadoopcommontokenproto token 1
required string service 4
repeated hadoopcommoncredentialskvproto tokens 1
repeated hadoopcommoncredentialskvproto secrets 2
repeated hadoopcommoncredentialskvproto secrets 2
required hadoopcommontokenproto token 1
repeated hadoopcommoncredentialskvproto secrets 2
repeated hadoopcommoncredentialskvproto secrets 2
required string kind 3
required hadoopcommontokenproto token 1
repeated hadoopcommoncredentialskvproto secrets 2
repeated hadoopcommoncredentialskvproto tokens 1
repeated hadoopcommoncredentialskvproto secrets 2
required string alias 1
repeated hadoopcommoncredentialskvproto secrets 2
required string renewer 1
required string kind 3
required string service 4
repeated hadoopcommoncredentialskvproto secrets 2
repeated hadoopcommoncredentialskvproto tokens 1
optional hadoopcommontokenproto token 1
optional hadoopcommontokenproto token 2
required string renewer 1
required hadoopcommontokenproto token 1
required uint64 newexpirytime 1
repeated hadoopcommoncredentialskvproto secrets 2
repeated hadoopcommoncredentialskvproto secrets 2
repeated hadoopcommoncredentialskvproto tokens 1
optional hadoopcommontokenproto token 1
required hadoopcommontokenproto token 1
repeated hadoopcommoncredentialskvproto secrets 2
required string alias 1
required string alias 1
required uint64 newexpirytime 1
optional hadoopcommontokenproto token 2
required string kind 3
required hadoopcommontokenproto token 1
optional hadoopcommontokenproto token 2
optional bytes secret 3
optional hadoopcommontokenproto token 1
optional hadoopcommontokenproto token 2
repeated hadoopcommoncredentialskvproto tokens 1
required string alias 1
repeated hadoopcommoncredentialskvproto tokens 1
repeated hadoopcommoncredentialskvproto tokens 1
required string service 4
required bytes identifier 1
repeated hadoopcommoncredentialskvproto tokens 1
required hadoopcommontokenproto token 1
repeated hadoopcommoncredentialskvproto tokens 1
optional hadoopcommontokenproto token 2
optional hadoopcommontokenproto token 1
repeated hadoopcommoncredentialskvproto secrets 2
repeated hadoopcommoncredentialskvproto secrets 2
optional hadoopcommontokenproto token 1
required string renewer 1
repeated hadoopcommoncredentialskvproto tokens 1
repeated hadoopcommoncredentialskvproto tokens 1
optional hadoopcommontokenproto token 1
repeated hadoopcommoncredentialskvproto secrets 2
optional bytes secret 3
required string kind 3
required hadoopcommontokenproto token 1
required string alias 1
optional hadoopcommontokenproto token 1
repeated hadoopcommoncredentialskvproto secrets 2
required string renewer 1
repeated hadoopcommoncredentialskvproto tokens 1
repeated hadoopcommoncredentialskvproto tokens 1
optional hadoopcommontokenproto token 1
required string service 4
required hadoopcommontokenproto token 1
required hadoopcommontokenproto token 1
optional hadoopcommontokenproto token 2
required string alias 1
required bytes password 2
required string service 4
required hadoopcommontokenproto token 1
required string kind 3
repeated hadoopcommoncredentialskvproto tokens 1
required string service 4
required string kind 3
required hadoopcommontokenproto token 1
required hadoopcommontokenproto token 1
required uint32 millistocede 1
required uint32 millistocede 1
optional string notreadyreason 3 ready become active textual explanation
required hadoopcommonhastatechangerequestinfoproto reqinfo 1
required hadoopcommonhastatechangerequestinfoproto reqinfo 1
required hadoopcommonhastatechangerequestinfoproto reqinfo 1
required hadoopcommonhastatechangerequestinfoproto reqinfo 1
required hadoopcommonhastatechangerequestinfoproto reqinfo 1
required hadoopcommonhastatechangerequestinfoproto reqinfo 1
required hadoopcommonhastatechangerequestinfoproto reqinfo 1
required hadoopcommonharequestsource reqsource 1
required hadoopcommonhastatechangerequestinfoproto reqinfo 1
optional string notreadyreason 3 ready become active textual explanation
required hadoopcommonhastatechangerequestinfoproto reqinfo 1
required hadoopcommonhastatechangerequestinfoproto reqinfo 1
optional string notreadyreason 3 ready become active textual explanation
required hadoopcommonhastatechangerequestinfoproto reqinfo 1
required hadoopcommonhaservicestateproto state 1
required hadoopcommonhastatechangerequestinfoproto reqinfo 1
optional string notreadyreason 3 ready become active textual explanation
optional bool readytobecomeactive 2 state standby indicate whether ready become active
required hadoopcommonharequestsource reqsource 1
optional string notreadyreason 3 ready become active textual explanation
required hadoopcommonhastatechangerequestinfoproto reqinfo 1
optional string notreadyreason 3 ready become active textual explanation
required hadoopcommonhastatechangerequestinfoproto reqinfo 1
optional bool readytobecomeactive 2 state standby indicate whether ready become active
required hadoopcommonhastatechangerequestinfoproto reqinfo 1
optional string notreadyreason 3 ready become active textual explanation
required hadoopcommonhastatechangerequestinfoproto reqinfo 1
required hadoopcommonhaservicestateproto state 1
repeated hadoopcommonspanreceiverlistinfo descriptions 1
repeated hadoopcommonspanreceiverlistinfo descriptions 1
required string classname 1
required string key 1
repeated hadoopcommonspanreceiverlistinfo descriptions 1
required int64 id 1
repeated hadoopcommonspanreceiverlistinfo descriptions 1
required string classname 2
required string classname 1
repeated hadoopcommonspanreceiverlistinfo descriptions 1
repeated hadoopcommonspanreceiverlistinfo descriptions 1
repeated hadoopcommonspanreceiverlistinfo descriptions 1
required int64 id 1
required int64 id 1
repeated hadoopcommonconfigpair config 2
required string classname 2
required string classname 2
repeated hadoopcommonspanreceiverlistinfo descriptions 1
repeated hadoopcommonconfigpair config 2
repeated hadoopcommonconfigpair config 2
required string key 1
required string value 2
required string key 1
repeated hadoopcommonspanreceiverlistinfo descriptions 1
repeated hadoopcommonconfigpair config 2
required int64 id 1
repeated hadoopcommonconfigpair config 2
required string value 2
repeated hadoopcommonspanreceiverlistinfo descriptions 1
required string value 2
repeated hadoopcommonspanreceiverlistinfo descriptions 1
repeated hadoopcommonconfigpair config 2
required string value 2
required string classname 1
repeated hadoopcommonconfigpair config 2
repeated hadoopcommonspanreceiverlistinfo descriptions 1
required string value 2
repeated hadoopcommonspanreceiverlistinfo descriptions 1
required string key 1
repeated hadoopcommonconfigpair config 2
required string classname 1
required string classname 2
repeated hadoopcommonspanreceiverlistinfo descriptions 1
repeated hadoopcommonspanreceiverlistinfo descriptions 1
required string classname 2
required string classname 1
repeated hadoopcommonconfigpair config 2
repeated hadoopcommonconfigpair config 2
required int64 id 1
required string classname 2
repeated hadoopcommonconfigpair config 2
repeated hadoopcommonspanreceiverlistinfo descriptions 1
required string key 1
repeated hadoopcommonconfigpair config 2
required string classname 1
required int64 id 1
repeated hadoopcommonconfigpair config 2
repeated hadoopcommonspanreceiverlistinfo descriptions 1
repeated hadoopcommonspanreceiverlistinfo descriptions 1
repeated hadoopcommonspanreceiverlistinfo descriptions 1
repeated hadoopcommonconfigpair config 2
repeated hadoopcommonconfigpair config 2
repeated hadoopcommonspanreceiverlistinfo descriptions 1
required string key 1
required string value 2
repeated hadoopcommonconfigpair config 2
required string classname 1
required string value 2
required string key 1
repeated hadoopcommonconfigpair config 2
repeated hadoopcommonconfigpair config 2
repeated hadoopcommonconfigpair config 2
required string classname 2
repeated hadoopcommonconfigpair config 2
required string user 1
repeated string groups 1
repeated string groups 1
repeated string groups 1
required string user 1
repeated string groups 1
required string user 1
required string user 1
repeated string groups 1
repeated string groups 1
repeated string groups 1
required string user 1
required string user 1
repeated string groups 1
required string user 1
repeated string groups 1
return output stream quotes output stream write quoted output new stream application show write ioexception underlying output fails
given string need quoted data string check starting position len number bytes check string contain active html characters
quote active html characters given string added buffer output stream write output buffer byte array take characters index first byte quote len number bytes quote
remove html quoting string item string unquote unquoted string
given string need quoted str string check string contain active html characters
quote given item make htmlsafe item string quote quoted string
define filter context set default url mappings
cannot use valueof since allowfrom enum differs value allowfrom helper method exactly valueof does allows us handle allowfrom issue gracefully value string must deny sameorigin allowfrom xframeoption throws illegalexception
specify ssl configuration load api provides alternative keystorekeypasswordtruststore
return set parameter names quoting name
sets valid xframeoption used httpserver2 option string deny sameorigin allowfrom valid options value throw illegalargument exception builder
bind listener closing opening listener listener exception
start server wait server start
checks user privileges access instrumentation servlets hadoopsecurityinstrumentationrequiresadmin set false default value always returns true hadoopsecurityinstrumentationrequiresadmin set true check current user admin acls user admin acls returns true otherwise returns false servletcontext servlet context request servlet request response servlet response truefalse based logic decribed above
adds ability control xframeoptions httpserver2 xframeenabled true enables xframeoptions false disables it builder
get admin acls given servletcontext check given user acl servletcontext context containing admin acl remoteuser remote user check for true user present acl false acl set user present
specify whether server authorize client ssl connections
get port server port
add internal servlet server specifying whether protect kerberos authentication note method used adding servlets facilitate internal communication user facing functionality servlets added using method filters except internal kerberos filters enabled name name servlet can passed null pathspec path spec servlet clazz servlet class requireauth require kerberos authenticate access servlet
wrapper configurationgetpasswordstring returns string instead char conf configuration name property name password string null
bind using single configured port findport true try bind incrementing port till free port found listener jetty listener port port set listener exception
set min max number worker threads simultaneous connections
define filter context set default url mappings
user sending httpservletrequest administrator acls isnt case response modified send error user response used send error response user admin access true adminauthorized false otherwise ioexception
create bind exception wrapping bind exception thrown listener ex
quote url users specifying host http header cant inject attacks
get address corresponds particular connector corresponding address connector null theres connector connector bounded closed
add given handler front list handlers handler handler add
add servlet server name name servlet can passed null pathspec path spec servlet clazz servlet class
stop server
load ssl properties ssl configuration
add endpoint http server listen to endpoint endpoint http server listen to scheme specifies protocol ie http https host specifies binding address port specifies listening port unspecified zero port means server listen port
add default servlets
unquote name quote value
get pathname webapps files appname eg secondary datanode pathname url filenotfoundexception webapps directory cannot found classpath development location
quote server name users specifying host http header cant inject attacks
bind using port ranges keep looking free port port range throw bind exception port configured range binds listener jetty listener startport initial port set listener exception
infer mime type response based extension request uri returns null unknown
add jersey resource package packagename java package name containing jersey resource pathspec path spec servlet
open main listener server exception
get array filterconfiguration specified conf
add path spec filter path mapping pathspec path spec webappctx webapplicationcontext add
set hostname http server host name used resolve host field kerberos principals hostname first listener used name unspecified
add internal servlet server note method used adding servlets facilitate internal communication user facing functionality servlets added using method filters enabled name name servlet can passed null pathspec path spec servlet clazz servlet class
add internal servlet server initialization parameters note method used adding servlets facilitate internal communication user facing functionality servlets added using method filters except internal kerberos filters enabled name name servlet can passed null pathspec path spec servlet clazz servlet class params init parameters
add default apps appdir application directory ioexception
check whether instance active one req http request resp http response write
retrieve static username configuration
create named file values named class
append value file
return nth value file
create named file values named class
positions reader nth value
construct array reader named file
default constructor
copy constructor map copy
returns true iff o intwritable value
compares two intwritables
returns true o enumsetwritable value null
reset enumsetwritable specified value elementtype value argument null size zero elementtype argument must null argument values size bigger zero argument elementtype used value elementtype
returns true iff o vlongwritable value
compares two vlongwritables
returns true iff o doublewritable value
construct set reader named set using named comparator
create set naming element comparator compression type
create named set keys named class pass configuration
read next key set key returns true key exists false end set
create set naming element class compression type
read matching key set key returns key null match exists
must called methods access fields ensure data uncompressed
used add predefined classes writable copy new classes
conf
constructor
used child copy constructors
conf conf set
add class maps already present
construct instance known type value yet use typespecific wrapper classes
returns true iff o vintwritable value
compares two vintwritables
write short value
read short value
compares two shortwritable
short values string format
returns true iff o shortwritable value
hash code
returns unsafeusing comparer falls back purejava implementation unable so
lexicographically compare two arrays buffer1 left operand buffer2 right operand offset1 start comparing left buffer offset2 start comparing right buffer length1 much compare left buffer length2 much compare right buffer 0 equal 0 left less right etc
lexicographically compare two byte arrays
copy constructor map copy
default constructor
write bytebuffer filechannel given offset handling short writes fc filechannel write buf input buffer offset offset file start writing ioexception io error
close closeable objects ignore throwable null pointers must used cleanup exception handlers log log record problems debug level null closeables objects close use cleanupwithloggerlogger javaiocloseable instead
takes ioexception filedirectory path method name returns ioexception input exception cause also include filemethod details new exception provides stack trace place exception thrown extra diagnostics information return instance exception exception class public string constructor otherwise return pathioexception interruptedioexception pathioexception returned unwrapped path filedirectory path methodname method name exception caught exception exception throw
copies one stream another closes input output streams end inputstrem read outputstream write conf configuration object
reads len bytes loop inputstream read buf buffer fill offset buffer len length bytes read ioexception could read requested number bytes reason including eof
copies count bytes one stream another inputstream read outputstream write count number bytes copy close whether close streams ioexception bytes read written
return complete list files directory strings better filelistdir ignore ioexceptions dir directory list filter nonnull filter use listing directory list files directory ioexception io error
closes stream ignoring throwable must called cleaning exception handlers stream stream close
write bytebuffer writablebytechannel handling short writes bc writablebytechannel write buf input buffer ioexception io error
ensure writes given file written storage device contains it method opens channel given file closes sync done borrowed uwe schindler lucene5588 filetosync file fsync
ensure writes given file written storage device contains it method opens channel given file closes sync done borrowed uwe schindler lucene5588 channel channel sync isdir true given file directory channel opened read ignore ioexceptions file systems operating systems allow fsync directory ioexception
close closeable objects ignore throwable null pointers must used cleanup exception handlers logger log record problems debug level null closeables objects close
copies one stream another inputstrem read outputstream write buffsize size buffer
closes streams ignoring throwable must called cleaning exception handlers streams streams close
closes socket ignoring ioexception sock socket close
utility wrapper reading inputstream catches errors thrown underlying stream either io decompressionrelated rethrows ioexception inputstream read buf buffer data read offset within buf len amount data read number bytes read
reads datainput eof returns byte array make sure pass infinite datainput never return datainput byte array containing data datainput ioexception io error eof
copies one stream another inputstream read outputstream write conf configuration object close whether close inputstream outputstream end streams closed finally clause
copies one stream another inputstrem read outputstream write buffsize size buffer close whether close inputstream outputstream end streams closed finally clause
similar readfully skips bytes loop inputstream skip bytes len number bytes skip ioexception could skip requested number bytes reason including eof
change capacity backing storage data preserved newcap new capacity bytes
get data byteswritable use getbytes instead
set value copy given byte range newdata new values copy offset offset newdata start length number bytes copy
get data backing byteswritable please use copybytes need returned array precisely length data data valid 0 getlength 1
change size buffer values old range preserved new values undefined capacity changed necessary size new number bytes
get current size buffer
get current size buffer use getlength instead
two byte sequences equal
create byteswritable using byte array initial value length length use constructor array larger value represents bytes array becomes backing storage object length number bytes use array
get copy bytes exactly length data see getbytes faster access underlying array
compare buffers serialized form
generate stream bytes hex pairs separated
compares two floatwritables
returns true iff o floatwritable value
return name class default classgetname
set name class known something class name
return class name default classfornamestring
skips one text input
convert text back string javalangobjecttostring
converts provided byte array string using utf8 encoding replace true malformed input replaced substitution character ufffd otherwise method throws malformedinputexception
write utf8 encoded string
converts provided string bytes using utf8 encoding input malformed invalid chars replaced default value bytebuffer bytes stores bytebufferarray length bytebufferlimit
returns true iff o text contents
write utf8 encoded string maximum size
converts provided string bytes using utf8 encoding replace true malformed input replaced substitution character ufffd otherwise method throws malformedinputexception bytebuffer bytes stores bytebufferarray length bytebufferlimit
check see byte array valid utf8 utf8 array bytes start offset first byte array len length byte sequence malformedinputexception byte array contains invalid bytes
read utf8 encoded string maximum size
serialize write object length uses zerocompressed encoding writablewritedataoutput
returns raw bytes however data getlength valid please use copybytes need returned array precisely length data
finds occurrence what backing buffer starting position start starting position measured bytes return value terms byte position buffer backing buffer converted string operation byte position first occurrence search string utf8 buffer 1 found
set contain contents string
returns number bytes byte array
read text object whose length already known allows creating text stream uses different serialization format
get copy bytes exactly length data see getbytes faster access underlying array
set text range bytes utf8 data copy start first position new string len number bytes new string
deserialize
append range bytes end given text utf8 data copy start first position append utf8 len number bytes append
returns next code point current position buffer buffers position incremented mark set buffer changed method
returns unicode scalar value 32bit integer value character position note method avoids using converter string instantiation unicode scalar value position 1 position invalid points trailing byte
given string returns number utf8 bytes required encode string string text encode number utf8 bytes required encode
force initialization static members java 5 referencing class doesnt force initialize since class requires classes initialized declare comparators force initialization happen cls class initialize
lexicographic order binary data
compare two writablecomparables default implementation uses natural ordering calling comparablecomparetoobject
reads zerocompressed encoded long byte array returns it bytes byte array decode long start starting index javaioioexception deserialized long
parse long byte array
compute hash binary data
parse integer byte array
get comparator writablecomparable implementation
optimization hook override make sequencefilesorters scream the default implementation reads data two writablecomparables using writablereadfieldsdatainput calls comparewritablecomparablewritablecomparable
parse unsigned short byte array
compares two longwritables
returns true iff o longwritable value
reset limit newlim new limit
reset buffer
compare buffers serialized form
fast version mapfilereadergetwritablecomparable writable method first checks bloom filter existence key present performs real get operation yields significant performance improvements get operations sparsely populated files
checks mapfile indicated key membership test performed using bloom filter result always nonzero probability false positives key key check false iff key doesnt exist true key probably exists ioexception
close map
read next keyvalue pair map key val returns true pair exists false end map
close map
create named map keys named class use writerconfiguration path option instead
create named map using named key comparator use writerconfiguration path option instead
positions reader named key none exists first entry named key 0 exact match found 0 positioned next record 1 records file
create named map using named key comparator use writerconfiguration path option instead
reads final key file key key read
merge input files output map file 1 read first keyvalue input files keysvalues array 2 select least key corresponding value 3 write selected key value output file 4 replace already written keyvalue keysvalues arrays next keyvalue selected input 5 repeat step 24 till keys read
create named map keys named class use writerconfiguration path option instead
finds record closest match specified key returns key exist first entry named key key key were trying find val data value key found key closest match null eof
get key approximately middle file null file empty
create named map using named key comparator use writerconfiguration path option instead
create named map keys named class use writerconfiguration path option instead
override method specialize type sequencefilereader returned
construct map reader named map using named comparator
return value named key null none exists
create named map using named key comparator use writerconfiguration path option instead
positions reader named key none exists key falls dependent before parameter set true key exist position file entry falls key otherwise position file record sorts after 0 exact match found 0 positioned next record 1 records file
append keyvalue pair map key must greater equal previous key added map
deletes named map file
construct map reader named map
finds record closest match specified key key key were trying find val data value key found true key exist return first entry falls key otherwise return record sorts after key closest match null eof
create named map keys named class use writerconfiguration path option instead
renames existing map directory
method attempts fix corrupt mapfile recreating index fs filesystem dir directory containing mapfile data index keyclass key class has subclass writable valueclass value class has subclass writable dryrun perform changes report needs done number valid entries mapfile 1 fixing needed exception
merge multiple mapfiles one mapfile inmapfiles outmapfile ioexception
open given file read access verifying expected usergroup constraints security enabled note function provides additional checks hadoop security disabled since checks would expensive native libraries available f file trying open expectedowner expected user owner file expectedgroup expected group owner file ioexception io error occurred security enabled usergroup match
openfsdatainputstream except run even security off used unit tests
open given file random read access verifying expected user group constraints security enabled note function provides additional security checks hadoop security disabled since checks would expensive native libraries available f file trying open mode mode want open random access file expectedowner expected user owner file expectedgroup expected group owner file ioexception io error occurred usergroup match security enabled
openforrandomread except run even security off used unit tests
open specified file write access ensuring exist f file want create permissions want file if security enabled alreadyexistsexception file already exists ioexception error occurred
opens fsdatainputstream requested file local file system verifying expected usergroup constraints security enabled file absolute path file expectedowner expected user owner file expectedgroup expected group owner file ioexception io error occurred usergroup match security enabled
openforread except run even security off used unit tests
set count current buf newcount new count set original count
overwrite integer internal buffer note call used overwrite existing data buffer ie buffercount cannot increased dataoutputstreamwritten cannot increased
resets buffer empty
convert string
compare two utf8s
convert utf8 encoded byte array back string ioexception byte array invalid utf8
read utf8 encoded string datainputreadutf
convert string checking valid utf8 converted string utfdataformatexception underlying bytes contain invalid utf8 data
returns true iff o utf8 contents
set contain contents string
skips one utf8 input
write utf8 encoded string dataoutputwriteutfstring
convert string utf8 encoded byte array stringgetbytesstring
returns number bytes required write this
set contain contents string
create new instance class defined factory
returns string representation object
issue request readahead given file descriptor identifier textual identifier used error messages eg file name fd file descriptor read ahead curpos current offset reads issued readaheadlength configured length read ahead maxoffsettoread maximum offset readahead useful if example segment file requested user pass longmaxvalue allow readahead end file lastreadahead result returned previous invocation function file descriptor null first call object representing outstanding request null readahead performed
submit request readahead given file descriptor identifier textual identifier used error messages etc fd file descriptor readahead offset start readahead len number bytes read object representing pending request
return singleton instance current process
write writable string primitive type array preceding allowcompactarrays set true rpc internal intracluster usages set false intercluster file persisted output usages preserve ability interchange files clusters may running version software sometime 2013 consider removing parameter always using compact format
write writable string primitive type array preceding
read writable string primitive type array preceding
reset instance
read writable string primitive type array preceding
find load class given name classname first finding specified conf specified conf null try load directly
try instantiate protocol buffer given message class given input stream protoclass class generated protocol buffer datain input stream read instantiated message instance ioexception io problem occurs
convenient method create ioexception
add given throwable exception list
constructor private use createioexceptionlist
whether exception added
construct halfsized version md5 fits long
construct hash value content inputstream
returns true iff o md5hash whose digest contains values
sets digest value hex string
returns hash code value object uses first 4 bytes since md5s evenly distributed
construct hash value byte array
compares object specified object order
construct hash value array byte array
returns string representation object
return 32bit digest md5 first 4 bytes md5
constructs reads returns instance
constructs md5hash specified value
create thread local md5 digester
read enum value datainput enums read written using string values enum type datainput read enumtype class type enum enum represented string read datainput ioexception
serializes long binary stream zerocompressed encoding 112 127 one byte used actual value values i first byte value indicates whether long positive negative number bytes follow first byte value v 113 120 following long positive number bytes follow v112 first byte value v 121 128 following long negative number bytes follow v120 bytes stored highnonzerobytefirst order stream binary output stream long serialized javaioioexception
make copy writable object using serialization buffer dst object copy src object copy into destroyed ioexception use reflectionutilscloneinto instead
writes string value enum dataoutput dataoutput stream enumval enum value ioexception
reads zerocompressed encoded integer input stream returns it stream binary input stream javaioioexception deserialized integer stream
skip len number bytes input streamin input stream len number bytes skip ioexception skipped less number bytes
read string check sanity format consists vint followed given number bytes stream read maxlength largest acceptable length encoded string bytes string ioexception reading datainput fails illegalargumentexception encoded byte size string negative larger maxsize vint read
make copy writable object using serialization buffer orig object copy copied object
get encoded length integer stored variablelength format encoded length
reads zerocompressed encoded long input stream returns it stream binary input stream javaioioexception deserialized long stream
convert writables byte array
reads integer input stream returns it function validates integer lower upper inclusive stream binary input stream javaioioexception deserialized integer stream
parse first byte vintvlong determine number bytes value first byte vintvlong total number bytes 1 9
read return next record length potentially skipping sync block length next record 1 next record ioexception
create named file writeprogress reporter use sequencefilecreatewriterconfiguration writeroption instead
append keyvalue pair
sort merge files containing named classes
constructs segment segmentoffset offset segment file segmentlength length segment segmentpathname path name file containing segment parent parent segmentcontainer holds segment
position valleninvalin value corresponding current key
merges contents files passed path innames array path names tempdir directory creating temp files merge deleteinputs true input files deleted unnecessary rawkeyvalueiteratormergequeue ioexception
construct preferred type sequencefile writer fs configured filesystem conf configuration name name file keyclass key type valclass value type buffersize buffer size underlaying outputstream replication replication factor file blocksize block size file createparent create parent directory nonexistent compressiontype compression type codec compression codec metadata metadata file returns handle constructed sequencefile writer ioexception
returns class values file
perform file sort set input files return iterator infiles files sorted tempdir directory temp files created sort deleteinput input files deleted read iterator rawkeyvalueiterator
initialize
set progressable object order report progress
append keyvalue pair
read next compressed block
fills passed rawvalue value corresponding key read earlier rawvalue length value ioexception
read next key file skipping value return null end file
construct uncompressed writer set options conf configuration use opts options used creating writer ioexception fails
construct reader opening file given file system fs file system used open file file file read conf configuration ioexception use readerconfiguration option instead
merges list segments type segmentdescriptor segments list segmentdescriptors tmpdir directory write temporary files rawkeyvalueiterator ioexception
compress flush contents dfs
sort merge using arbitrary rawcomparator
perform file sort set input files output file infiles files sorted outfile sorted output file deleteinput input files deleted read
read raw records key buffer key read val raw value returns total record length 1 end file ioexception
create named file use sequencefilecreatewriterconfiguration writeroption instead
close file
writes records rawkeyvalueiterator file represented passed writer records rawkeyvalueiterator writer writer created earlier ioexception
constructs segment segmentoffset offset segment file segmentlength length segment segmentpathname path name file containing segment
append keyvalue pair
set current byte position input file the position passed must position returned sequencefilewritergetlength writing file seek arbitrary position use sequencefilereadersynclong
used mergepass merge output sort inname name input file containing sorted segments indexin offsets sorted segments tmpdir relative directory store intermediate results rawkeyvalueiterator ioexception
override method specialize type fsdatainputstream returned fs file system used open file file file read buffersize buffer size used read file length length read 0 otherwise length available opened stream ioexception
queue file segments merge segments file segments merge tmpdir relative local directory save intermediate files progress reference progressable object
construct reader given input stream input stream buffersize unused start starting position length length read conf configuration ioexception use readerconfiguration readeroption instead
read raw values val raw value returns value length ioexception
write flush file header
read raw keys key buffer key read returns key length 1 end file ioexception
merges contents files passed path innames array path names deleteinputs true input files deleted unnecessary factor factor used maximum merge fanin tmpdir directory write temporary files rawkeyvalueiteratormergequeue ioexception
sort merge using arbitrary rawcomparator
construct preferred type sequencefile writer fs configured filesystem conf configuration name name file keyclass key type valclass value type buffersize buffer size underlaying outputstream replication replication factor file blocksize block size file compressiontype compression type codec compression codec progress progressable object track progress metadata metadata file returns handle constructed sequencefile writer ioexception use createwriterconfiguration writeroption instead
initialize reader tmpreader true constructing temporary reader sequencefilesorterclonefileattributes hence initialize every component false otherwise ioexception
construct preferred type sequencefile writer fs configured filesystem conf configuration name name file keyclass key type valclass value type returns handle constructed sequencefile writer ioexception use createwriterconfiguration writeroption instead
get compression type reduce outputs job job config look kind compression use
seek next sync mark past given position
close file
construct preferred type sequencefile writer fs configured filesystem conf configuration name name file keyclass key type valclass value type compressiontype compression type progress progressable object track progress returns handle constructed sequencefile writer ioexception use createwriterconfiguration writeroption instead
get compression type file compression type
construct preferred type sequencefile writer fs configured filesystem conf configuration name name file keyclass key type valclass value type compressiontype compression type codec compression codec returns handle constructed sequencefile writer ioexception use createwriterconfiguration writeroption instead
flush currently written data file system use hsync hflush instead
merge provided files infiles array input path names outfile final output file ioexception
returns name file
call nextrawdataoutputbuffersequencefilevaluebytes
create named file writeprogress reporter use sequencefilecreatewriterconfiguration writeroption instead
construct preferred type sequencefile writer fc context specified file conf configuration name name file keyclass key type valclass value type compressiontype compression type codec compression codec metadata metadata file createflag gives semantics create overwrite append etc opts file creation options see createopts returns handle constructed sequencefile writer ioexception
return remove requested number segment descriptors sorted map
read next key file key skipping value true another entry exists false end file
common work constructors
close file
constructor primarily serve sort routine generates single output file associated index file
closes underlying reader
construct preferred type raw sequencefile writer conf configuration stream top writer constructed keyclass key type valclass value type compressiontype compression type codec compression codec returns handle constructed sequencefile writer ioexception use createwriterconfiguration writeroption instead
fills rawkey object key returned reader true key returned false otherwise ioexception
read next keyvalue pair file key val returns true pair exists false end file
set default compression type sequence files job configuration modify val new compression type none block record
merges contents files passed path using max factor value already set innames array path names deleteinputs true input files deleted unnecessary tmpdir directory write temporary files rawkeyvalueiteratormergequeue ioexception
single level merge called multiple times depending factor size number segments rawkeyvalueiterator ioexception
default cleanup subclasses override custom cleanup
returns class keys file
construct preferred type sequencefile writer fs configured filesystem conf configuration name name file keyclass key type valclass value type compressiontype compression type returns handle constructed sequencefile writer ioexception use createwriterconfiguration writeroption instead
clones attributes like compression input file creates corresponding writer inputfile path input file whose attributes cloned outputfile path output file prog progressable report status file write writer ioexception
create sync point
read compressed buffer
get value corresponding last read key val value read ioexception
workhorse check write compressed datalengths
create new writer given options conf configuration use opts options create file new writer ioexception
used backwardscompatibility createwriter methods take filesystem
append keyvalue pair
append keyvalue pair
construct preferred type sequencefile writer fs configured filesystem conf configuration name name file keyclass key type valclass value type compressiontype compression type codec compression codec progress progressable object track progress returns handle constructed sequencefile writer ioexception use createwriterconfiguration writeroption instead
sort calls generate final merged output
default cleanup subclasses override custom cleanup
construct preferred type sequencefile writer fs configured filesystem conf configuration name name file keyclass key type valclass value type compressiontype compression type codec compression codec progress progressable object track progress metadata metadata file returns handle constructed sequencefile writer ioexception use createwriterconfiguration writeroption instead
append keyvalue pair
get value corresponding last read key val value read ioexception
construct preferred type raw sequencefile writer conf configuration stream top writer constructed keyclass key type valclass value type compressiontype compression type codec compression codec metadata metadata file returns handle constructed sequencefile writer ioexception use createwriterconfiguration writeroption instead
resets buffer empty
stores item configuration given keyname class item conf configuration store item object stored keyname name key use ioexception forwards exceptions underlying serialization classes
restores object configuration class item conf configuration use keyname name key use itemclass class item restored object ioexception forwards exceptions underlying serialization classes
restores array objects configuration class item conf configuration use keyname name key use itemclass class item restored object ioexception forwards exceptions underlying serialization classes
stores array items configuration given keyname class item conf configuration use items objects stored keyname name key use indexoutofboundsexception items array empty ioexception forwards exceptions underlying serialization classes
return true bytes getbytes match
return hash bytes returned getbytes orgapachehadoopiowritablecomparatorhashbytesbyteint
compare bytes getbytes orgapachehadoopiowritablecomparatorcomparebytesbyteintintbyteintint
compare bytes getbytes provided
set instance wrapped obj
get size buffer pool specified buffer type direct whether size returned direct buffers size
compares two bytewritables
returns true iff o bytewritable value
construct outputstream given dataoutput out already outputstream simply returns it otherwise wraps outputstream dataoutput wrap outputstream instance outputs out
create shared file descriptor readable writable info information include path generated descriptor length starting file length file descriptor wrapped fileinputstream ioexception io configuration error creating descriptor
create new sharedfiledescriptorfactory prefix prefix prepend file names created factory paths array paths use try path succession return factory using first usable path factory ioexception factory could created reason
create sharedfiledescriptorfactory prefix prefix add file names use path path use
create file write permissions set specified mode setting permissions creation time avoid issues related user lacking writedac rights subsequent chmod calls one example occur writing smb share user full control rights therefore writedac denied method mimics semantics implemented jdk javaiofileoutputstream file opened truncate append sharing mode allows readers writers paths longer maxpath supported see ioutilmdc jdk path file create append true open file append mode permissions new directory fileoutputstream opened file ioexception io error
create filedescriptor shares delete permission file opened given offset ie process delete file filedescriptor reading windows implementation uses native interface
version renameto throws descriptive exception fails src source path dst destination path nativeioexception failure
creates hardlink dst points src deprecated since jdk7 nio create hardlinks via javaniofilefiles api src source file dst hardlink location ioexception
create specified file write access ensuring exist f file want create permissions want file if security enabled alreadyexistsexception file already exists ioexception error occurred
unbuffered file copy src dst without tainting os buffer cache posix platform uses filechanneltransferto internally attempts unbuffered io os native sendfile64 support falls back buffered io otherwise minimizes number filechanneltransferto call passing src file size directly instead smaller size 3rd parameter saves number sendfile64 system call native sendfile64 supported two fall back cases sendfile supported filechannletransferto already batching size 8 mb 8 kb respectively windows platform uses native wrapper copyfileex copyfilenobuffering flag supported windows server 2008 above ideally use filechanneltransferto across posix windows platform unfortunately wrapperjavasunniochfilechannelimpltransferto0 used filechanneltransferto unbuffered io implemented windows based openjdk 678 source code javasunniochfilechannelimpltransferto0 windows simply returns iosunsupported note simple native wrapper minimal parameter checking copy consistency check eg size copy recommended use wrapper function like storagenativecopyfileunbuffered function hadoophdfs prepost copy checks src source path dst destination path ioexception
create directory permissions set specified mode setting permissions creation time avoid issues related user lacking writedac rights subsequent chmod calls one example occur writing smb share user full control rights therefore writedac denied path directory create mode permissions new directory ioexception io error
windows logon name two part netbios domain name user account name format domainusername method remove domain part full logon name fthe full principal name containing domain name domain removed
return file stat file path path file path file stat ioexception thrown io error obtaining file stat
unmaps block memory see munmap2 isnt portable way unmap memory region java use sunnio method here note unmapping memory region could cause crashes code continues reference unmapped code however dont manually unmap memory dependent finalizer it idea finalizer run buffer buffer unmap
call posixfadvise given file descriptor see manpage syscall information systems call available nothing nativeioexception error syscall
checks whether current process desired access rights given path longer term native function substituted jdk7 function filesisreadable iswritable isexecutable path input path desiredaccess accessread accesswrite accessexecute true access allowed ioexception io exception error
call syncfilerange given file descriptor see manpage syscall information systems call available nothing nativeioexception error syscall
returns file stat file descriptor fd file descriptor file descriptor file stat ioexception thrown io error obtaining file stat
locks provided direct bytebuffer memory preventing swapping out buffer locked future accesses incur page fault see mlock2 man page information nativeioexception
operating systems page size
return decompressor pool decompressor decompressor returned pool
return compressor pool compressor compressor returned pool
get decompressor given compressioncodec pool new one codec compressioncodec get decompressor decompressor given compressioncodec pool new one
return number leased decompressors compressioncodec
get compressor given compressioncodec pool new one codec compressioncodec get compressor conf configuration object contains confs creating reinit compressor compressor given compressioncodec pool new one
return number leased compressors compressioncodec
create compressionoutputstream write given outputstream given compressor location final output stream compressor compressor use stream user write uncompressed data to compressed ioexception
create compressioninputstream read given input stream return stream uncompressed data stream read compressed bytes stream read uncompressed bytes ioexception
set configuration used object conf configuration object
get type decompressor needed compressioncodec type decompressor needed codec
create new compressor use compressioncodec new compressor use codec
create compressioninputstream read given inputstream given decompressor return stream uncompressed data stream read compressed bytes decompressor decompressor use stream read uncompressed bytes ioexception
method updates compressed stream position exactly client code read least one byte passed bzip2 end block marker mechanism helpful deal data level record boundaries please see constructor next methods orgapachehadoopmapredlinerecordreader example usage feature elaborate example following assume two different scenarios bzip2 compressed stream m represent end block n line delimiter represent compressed data mn nmn assume end right m first case reading stop n need read one line to see reason reading one line next method explained linerecordreader second example linerecordreader needs read one line till second n since bzip2codecs update position least one byte passed maker straight forward differentiate two cases mentioned
bz2 recognized default extension compressed bzip2 files string telling default bzip2 file extension
create compressionoutputstream write given outputstream location final output stream stream user write uncompressed data to compressed ioexception
get type compressor needed compressioncodec type compressor needed codec
creates compressioninputstream used read uncompressed data one two reading modes ie continuous blocked reading modes seekablein inputstream start start offset compressed stream end end offset compressed stream readmode controls whether progress reported continuously block boundaries compressioninputstream bzip2 aligned block boundaries
create new decompressor use compressioncodec new decompressor use codec
return configuration used object configuration object used objec
create blockdecompressorstream input stream decompressor decompressor use buffersize size buffer ioexception
create blockcompressorstream stream compressor compressor used buffersize size buffer compressionoverhead maximum overhead compression algorithm given buffersize
write data provided compression codec compressing buffer size less compression overhead specified construction block block contains uncompressed length block followed one lengthprefixed blocks compressed data
set configuration used object conf configuration object
get type compressor needed compressioncodec type compressor needed codec
create compressioninputstream read given inputstream given decompressor stream read compressed bytes decompressor decompressor use stream read uncompressed bytes ioexception
return configuration used object configuration object used object
create compressioninputstream read given input stream stream read compressed bytes stream read uncompressed bytes ioexception
create new decompressor use compressioncodec new decompressor use codec
create compressionoutputstream write given outputstream location final output stream stream user write uncompressed data compressed ioexception
get type decompressor needed compressioncodec type decompressor needed codec
create new compressor use compressioncodec new compressor use codec
create compressionoutputstream write given outputstream given compressor location final output stream compressor compressor use stream user write uncompressed data compressed ioexception
get default filename extension kind compression zst
method current supported unsupportedoperationexception
create compression input stream reads decompressed bytes given stream input stream compressed ioexception
method returns current position stream current position stream long
method current supported unsupportedoperationexception
get default filename extension kind compression snappy
create compressionoutputstream write given outputstream location final output stream stream user write uncompressed data compressed ioexception
create new compressor use compressioncodec new compressor use codec
get type decompressor needed compressioncodec type decompressor needed codec
create compressionoutputstream write given outputstream given compressor location final output stream compressor compressor use stream user write uncompressed data compressed ioexception
return configuration used object configuration object used objec
get type compressor needed compressioncodec type compressor needed codec
set configuration used object conf configuration object
create compressioninputstream read given input stream stream read compressed bytes stream read uncompressed bytes ioexception
native snappy libraries loaded initialized
create compressioninputstream read given inputstream given decompressor stream read compressed bytes decompressor decompressor use stream read uncompressed bytes ioexception
create new decompressor use compressioncodec new decompressor use codec
create output stream codec taken global codecpool codec codec use create output stream conf configuration use need create new codec output stream wrap new output stream ioexception
create input stream codec taken global codecpool codec codec use create input stream conf configuration use need create new codec input stream wrap new input stream ioexception
sets list codec classes configuration addition classes specified using method compressioncodec classes classpath discovered using java serviceloader conf configuration modify classes list classes set
find relevant compression codec codecs canonical class name classname canonical class name codec codec object
little test program args
removes suffix filename it filename filename strip suffix suffix remove shortened filename
get list codecs discovered via java serviceloader listed configuration codecs specified configuration come later returned list considered override serviceloader conf configuration look list compressioncodec classes
find relevant compression codec codecs canonical class name codec alias codec aliases case insensitive code alias short class name without package name short class name ends codec two aliases codec complete short class name short class name without codec ending example gzipcodec codec class name alias gzip gzipcodec codecname canonical class name codec codec object
find relevant compression codec given file based filename suffix file filename check codec object
find relevant compression codec codecs canonical class name codec alias returns implemetation class codec aliases case insensitive code alias short class name without package name short class name ends codec two aliases codec complete short class name short class name without codec ending example gzipcodec codec class name alias gzip gzipcodec codecname canonical class name codec codec class
print extension map string
find codecs specified config value iocompressioncodecs register them defaults gzip deflate
get default filename extension kind compression lz4
return configuration used object configuration object used objec
get type decompressor needed compressioncodec type decompressor needed codec
create new decompressor use compressioncodec new decompressor use codec
create compressioninputstream read given inputstream given decompressor stream read compressed bytes decompressor decompressor use stream read uncompressed bytes ioexception
set configuration used object conf configuration object
get type compressor needed compressioncodec type compressor needed codec
create new compressor use compressioncodec new compressor use codec
create compressionoutputstream write given outputstream location final output stream stream user write uncompressed data compressed ioexception
create compressionoutputstream write given outputstream given compressor location final output stream compressor compressor use stream user write uncompressed data compressed ioexception
create compressioninputstream read given input stream stream read compressed bytes stream read uncompressed bytes ioexception
return appropriate implementation zlib compressor conf configuration appropriate implementation zlib compressor
set flag whether use native library used testing nonnative libraries
load native library set flag whether use native library method also used reset flag modified setnativezlibloaded
return appropriate type zlib decompressor conf configuration appropriate type zlib decompressor
return appropriate implementation zlib decompressor conf configuration appropriate implementation zlib decompressor
return appropriate implementation zlib direct decompressor conf configuration appropriate implementation zlib decompressor
return appropriate type zlib compressor conf configuration appropriate type zlib compressor
returns number bytes remaining input buffer normally called finished true determine amount postgzipstream data note that finished state concatenated data end current gzip stream never return nonzero value unless called setinputbyte b int off int len decompressbyte b int off int len that is decompressbyte b int off int len always returns zero except finished state concatenated data total nonnegative number unprocessed bytes input
creates new pure java gzip decompressor
resets everything including input buffer regardless whether current gzip substream finished
parse gzip trailer assuming were appropriate state order deal degenerate cases eg user buffer one byte long copy trailer bytes all 8 em local buffer see httpwwwietforgrfcrfc1952txt gzip spec
returns true end gzip substream single member reached
parse gzip header assuming were appropriate state order deal degenerate cases eg user buffer one byte long copy some header bytes another buffer filename comment extrafield bytes simply skipped see httpwwwietforgrfcrfc1952txt gzip spec note version gzip date at least 140 20100120 supports fhcrc headercrc16 flagbit instead implementation treats multifile continuation flag which also doesnt support suns jdk v6 16 supports header crc however we
creates new decompressor
returns total number compressed bytes input far total nonnegative number compressed bytes input far
resets everything including input buffers user direct
returns number bytes remaining input buffers normally called finished true determine amount postgzipstream data total nonnegative number unprocessed bytes input
returns total number uncompressed bytes output far total nonnegative number uncompressed bytes output far
returns total number uncompressed bytes input far total nonnegative number uncompressed bytes input far
prepare compressor used new stream settings defined given configuration reset compressors compression level compression strategy conf configuration storing new settings
creates new compressor taking settings configuration
creates new compressor using specified compression level compressed data generated zlib format level compression level compressionlevel strategy compression strategy compressionstrategy header compression header compressionheader directbuffersize size direct buffer used
creates new compressor default compression level compressed data generated zlib format
returns total number compressed bytes output far total nonnegative number compressed bytes output far
reinit compressor given configuration reset compressors compression level compression strategy different zlibcompressor builtinzlibdeflater support three kind compression strategy filtered huffmanonly defaultstrategy use defaultstrategy default configured compression strategy supported
returns number bytes remaining input buffers normally called finished true determine amount poststream data total nonnegative number unprocessed bytes input
creates new decompressor
resets everything including input buffers user direct
returns total number uncompressed bytes input far total nonnegative number uncompressed bytes input far
prepare compressor used new stream settings defined given configuration reset compressors compression level compression strategy conf configuration storing new settings
returns total number compressed bytes output far total nonnegative number compressed bytes output far
sets input data decompression called needsinput returns true indicating input data required both native nonnative versions various decompressors require data passed via b remain unmodified caller explicitly notifiedvia needsinputthat buffer may safely modified requirement extra buffercopy avoided b input data start offset len length
returns false false
write would exceed capacity direct buffers set aside loaded function compressed data consumed
returns true end decompressed data output stream reached true end decompressed data output stream reached
nothing
resets decompressor input output buffers new set input data processed
creates new compressor directbuffersize size direct buffer used
returns 0 0
fills specified buffer uncompressed data returns actual number bytes uncompressed data return value 0 indicates needsinput called order determine input data required b buffer compressed data start offset data len size buffer actual number bytes compressed data ioexception
returns true input data buffer empty setinputbyte int int called provide input true input data buffer empty setinputbyte int int called order provide input
called indicates compression end current contents input buffer
resets compressor new set input data processed
fills specified buffer compressed data returns actual number bytes compressed data return value 0 indicates needsinput called order determine input data required b buffer compressed data start offset data len size buffer actual number bytes compressed data
nothing
write would exceed capacity direct buffers set aside loaded function compressed data consumed
sets input data compression called whenever needsinput returns true indicating input data required b input data start offset len length
returns true input data buffer empty setinput called provide input true input data buffer empty setinput called order provide input
creates new compressor directbuffersize size direct buffer used
prepare compressor used new stream settings defined given configuration conf configuration new setting fetched
returns true end compressed data output stream reached true end compressed data output stream reached
return number bytes consumed callers compress since last reset
return number bytes given compressor since last reset
returns total number compressed bytes input far total nonnegative number compressed bytes input far
returns number bytes remaining input buffers normally called finished true determine amount postgzipstream data total nonnegative number unprocessed bytes input
resets everything including input buffers user direct
returns total number uncompressed bytes output far total nonnegative number uncompressed bytes output far
creates new decompressor
method called client class case corrections stream position one common example client code removes starting bz characters compressed stream count count bytes added reported bytes
method reads byte compressed stream whenever need read underlying compressed stream method called instead directly calling read method underlying compressed stream method important record keeping statistic many bytes read compressed stream
called createhuffmandecodingtables exclusively
called recvdecodingtables exclusively
method tries find marker passed first parameter stream find bit patterns length 63 bits specifically method used cbzip2inputstream find end block eob delimiter stream starting current position stream marker found stream position byte containing starting bit marker marker bit pattern found stream markerbitlength bits marker true marker found otherwise false ioexception illegalargumentexception marketbitlength greater 63
returns number bytes current stream position immediate next bzip2 block marker inputstream long number bytes current stream position next bzip2 block start marker ioexception
constructs new cbzip2inputstream decompresses bytes read specified stream although bzip2 headers marked magic bz constructor expects next byte stream first one magic thus callers skip first two bytes otherwise constructor throw exception ioexception stream content malformed io error occurs nullpointerexception in null
initializes tt array method called required length array known dont initialize construction time avoid unnecessary memory allocation compressing small files
continous reading mode read method starts start compressed stream end end file emitting uncompressed data mode stream positioning announced ignored byblock reading mode read method informs end bzip2 block returning eob event compressed stream position also announced announcement tells much compressed stream decompressed read class eob events stream position updated ioexception stream content malformed io error occurs int return value greater 0 bytes read value 1 means end stream 2 represents end block
constructs new cbzip2outputstream specified blocksize attention the caller resonsible write two bzip2 magic bytes bz specified stream prior calling constructor destination stream blocksize blocksize 100k units ioexception io error occurs specified stream illegalargumentexception blocksize 1 blocksize 9 nullpointerexception out null minblocksize maxblocksize
hammered method class version using unrolled loops normally never use ones java code unrolling shown noticable performance improvement jre 142 linux i586 hotspot client course depends jit compiler vm
method accessible subclasses historical purposes dont know dont need it
method mainqsort3 file blocksortc bzip2 102
chooses blocksize based given length data compress blocksize minblocksize maxblocksize inclusive negative inputlength method returns maxblocksize always inputlength length data compressed cbzip2outputstream
overriden close stream
returns total number uncompressed bytes input far total nonnegative number uncompressed bytes input far
creates new compressor taking settings configuration
returns total number compressed bytes output far total nonnegative number compressed bytes output far
creates new compressor using specified block size compressed data generated bzip2 format blocksize block size used compression integer 1 9 multiplied 100000 obtain actual block size bytes workfactor parameter threshold determines fallback algorithm used pathological data ranges 0 250 directbuffersize size direct buffer used
prepare compressor used new stream settings defined given configuration reset compressors block size work factor conf configuration storing new settings
check nativebzip2 code loaded initialized correctly loaded job conf configuration true nativebzip2 loaded initialized loaded job else false
return appropriate implementation bzip2 decompressor conf configuration appropriate implementation bzip2 decompressor
return appropriate type bzip2 decompressor conf configuration appropriate type bzip2 decompressor
return appropriate implementation bzip2 compressor conf configuration appropriate implementation bzip2 compressor
return appropriate type bzip2 compressor conf configuration appropriate type bzip2 compressor
called indicates compression end current contents input buffer
nothing
write would exceed capacity direct buffers set aside loaded function compressed data consumed
resets compressor new set input data processed
return number bytes consumed callers compress since last reset
return number bytes given compressor since last reset
sets input data compression called whenever needsinput returns true indicating input data required b input data start offset len length
returns true input data buffer empty setinput called provide input true input data buffer empty setinput called order provide input
returns true end compressed data output stream reached true end compressed data output stream reached
fills specified buffer compressed data returns actual number bytes compressed data return value 0 indicates needsinput called order determine input data required b buffer compressed data start offset data len size buffer actual number bytes compressed data
creates new compressor directbuffersize size direct buffer used uselz4hc use high compression ratio version lz4 trades cpu compression ratio
prepare compressor used new stream settings defined given configuration conf configuration new setting fetched
returns false false
write would exceed capacity direct buffers set aside loaded function compressed data consumed
returns true end decompressed data output stream reached true end decompressed data output stream reached
nothing
resets decompressor input output buffers new set input data processed
creates new compressor directbuffersize size direct buffer used
fills specified buffer uncompressed data returns actual number bytes uncompressed data return value 0 indicates needsinput called order determine input data required b buffer compressed data start offset data len size buffer actual number bytes compressed data ioexception
returns 0 0
returns true input data buffer empty setinputbyte int int called provide input true input data buffer empty setinputbyte int int called order provide input
sets input data decompression called needsinput returns true indicating input data required both native nonnative versions various decompressors require data passed via b remain unmodified caller explicitly notifiedvia needsinputthat buffer may safely modified requirement extra buffercopy avoided b input data start offset len length
get specific coder factory defined codec name coder name codecname name codec codername name coder specific coder null exist
get coder names given codec codecname name codec array coder names null exist
get coder factories given codec codecname name codec list coder factories null exist
update codermap codernamemap iterable type coder factories coderfactories
native isal library loaded initialized throw exception not
constructor specifying isparity iserased isparity parity block iserased erased
constructor key parameters provided note extraoptions may contain additional information erasure codec interpret further codecname codec name numdataunits number data units used schema numparityunits number os parity units used schema extraoptions extra options configure codec
make meaningful string representation log output string representation
constructor schema name provided options note options may contain additional information erasure codec interpret further alloptions schema options
create decoder corresponding given codec options erasure codec options erasure decoder
create rs raw encoder according configuration conf configuration coderoptions coder options thats used create coder codec codec use null use default codec raw encoder
create encoder corresponding given codec options erasure codec options erasure encoder
create rs raw decoder according configuration conf configuration coderoptions coder options thats used create coder codec codec use null use default codec raw decoder
convert bytes array test usage bytes array
convert array chunks array bytebuffers chunks chunks convert buffers array bytebuffers
get erased blocks count erased count blocks
constructor specifying data blocks parity blocks datablocks data blocks group parityblocks parity blocks group
erased data block true erased data block false otherwise
erased parity block true erased parity block false otherwise
constructor necessary info inputblocks erasedindexes indexes erased blocks inputblocks array outputblocks rawdecoder
constructor necessary info inputblocks outputblocks rsrawencoder underlying rs encoder hitchhiker encoding xorrawencoder underlying xor encoder hitchhiker encoding
constructor necessary info inputblocks erasedindexes indexes erased blocks inputblocks array outputblocks rawdecoder underlying rs decoder hitchhiker decoding rawencoder underlying xor encoder hitchhiker decoding
blocks erased xor its simple allow return one erased block either data parity blockgroup output blocks recover
constructor given input blocks output blocks inputblocks outputblocks
get erased input blocks inputblocks inputblocks array erased blocks inputblocks
blocks erased blockgroup output blocks recover
get indexes erased blocks inputblocks inputblocks indexes erased blocks inputblocks
data blocks parity blocks input blocks recovering default its codec specific blockgroup input blocks
find many blocks erased inputblocks input blocks number erased blocks
get number erased blocks block group blockgroup number erased blocks
constructor necessary info inputblocks outputblocks rawencoder
find valid input inputs inputs input buffers look valid input first valid input
given blockgroup tell missing blocks recovered called ecmanager blockgroup blockgroup may contain erased blocks sure recoverable true erased block recoverable false otherwise
calculating organizing blockgroup called ecmanager datablocks data blocks compute parity blocks parityblocks computed parity blocks
check validate decoding parameters throw exception accordingly inputs input buffers check outputs output buffers check
convert bytebufferencodingstate its backed onheap arrays
check ensure buffers desired length buffers buffers check
check ensure buffers desired length type direct buffers not buffers buffers check
convert bytearrayencodingstate its backed onheap arrays
encode inputs generates outputs note inputs outputs mixing onheap buffers direct buffers allowed coder option allowchangeinputs set true false default content input buffers may change call subject concrete implementation anyway positions input buffers move forward inputs input buffers read data from buffers remaining 0 encoding outputs output buffers put encoded data into ready read call ioexception encoder closed
encode inputs generates outputs see above inputs input buffers read data outputs output buffers put encoded data into read read call ioexception encoder closed
encode inputs generates outputs see above inputs input buffers read data outputs output buffers put encoded data into read read call
decode inputs erasedindexes generates outputs see above inputs input buffers read data erasedindexes indexes erased units inputs array outputs output buffers put decoded data according erasedindexes ready read call ioexception decoder closed
decode inputs erasedindexes generates outputs see above note input output ecchunks mixing onheap buffers direct buffers allowed inputs input buffers read data erasedindexes indexes erased units inputs array outputs output buffers put decoded data according erasedindexes ready read call ioexception decoder closed
decode inputs erasedindexes generates outputs prepare inputs 1 create array containing data units parity units please note data units first parity units 2 set null array locations specified via erasedindexes indicate theyre erased data read from 3 set null array locations extra redundant items theyre necessary read decoding example rs63 1 unit really erased 2 extra items redundant set null indicate data used them example using rs 6 3 assuming sources d0 d1 d2 d3 d4 d5 parities p0 p1 p2 d2 erased may want use 6 units like d1 d3 d4 d5 p0 p2 recover d2 have inputs nulld0 d1 nulld2 d3 d4 d5 p0 nullp1 p2 erasedindexes 2 index d2 inputs array outputs awritablebuffer note inputs outputs mixing onheap buffers direct buffers allowed coder option allowchangeinputs set true false default content input buffers may change call subject concrete implementation inputs input buffers read data from buffers remaining 0 decoding erasedindexes indexes erased units inputs array outputs output buffers put decoded data according erasedindexes ready read call
check ensure buffers desired length type direct buffers not buffers buffers check
convert bytearraydecodingstate its backed onheap arrays
check ensure buffers desired length type direct buffers not buffers buffers check
make sure return empty chunk buffer desired length leastlength empty chunk zero bytes
initialize output buffers zero bytes
initialize output buffers zero bytes
picking indexes valid inputs inputs decoding input buffers
get indexes array items marked null either erased read indexes array
find valid input inputs inputs input buffers look valid input first valid input
clone input bytes array direct bytebuffer
ensure buffer filled zero bytes current readablewritable position buffer buffer ready read write certain size bytes buffer itself zero bytes written position limit changed call
ensure buffer either input output ready read write zero bytes fully specified length len buffer bytes array buffer buffer
convert array chunks array bytebuffers chunks chunks converttobytearraystate buffers array bytebuffers
convert bytebufferdecodingstate its backed onheap arrays
check ensure buffers desired length buffers buffers check
check ensure buffers desired length buffers buffers check
check validate decoding parameters throw exception accordingly checking assumes its mds code code override this inputs input buffers check erasedindexes indexes erased units inputs array outputs output buffers check
bulk version solving vandermonde system
bulk version remainder using bytebuffer warning function modify dividend inputs
compute sum two polynomials index array corresponds power entry example p0 constant term polynomial p p input polynomial q input polynomial polynomial represents pq
given vandermonde matrix vijxji vector y solve z vzy output z placed y x vector describe vandermonde matrix y righthand side vandermonde system equation replaced output vector len consider x y 0len1
get object performs galois field arithmetics fieldsize size field primitivepolynomial primitive polynomial corresponds size
bulk version substitute tends 2x faster int substitute loop p input polynomial q store return result x input field
bulk version remainder warning function modify dividend inputs
bulk version substitute tends 2x faster int substitute loop p input polynomial offsets len q store return result offset x input field
bulk version substitute using bytebuffer tends 2x faster int substitute loop p input polynomial q store return result x input field
compute remainder dividend divisor pair index array corresponds power entry example p0 constant term polynomial p dividend dividend polynomial remainder placed return divisor divisor polynomial
compute multiplication two fields x input field y input field result multiplication
compute sum two fields x input field y input field result addition
compute division two fields x input field y input field xy
compute multiplication two polynomials index array corresponds power entry example p0 constant term polynomial p p input polynomial q input polynomial polynomial represents pq
compute power n field x input field n power xn
perform gaussian elimination given matrix matrix fat matrix number rows number columns
bulk version solvevandermondesystem using bytebuffer
substitute x polynomial px p input polynomial x input field px
bulk version remainder warning function modify dividend inputs
see above try use byte version possible
ported intel isal library
encode group inputs data generate outputs its also used decoding because implementation encoding decoding unified algorithm ported intel isal library compatible leverages java autovectorization support performance
ported intel isal library calculates const table gftbl gf28 single input gftbla a00 a01 a02 a0f a00 a10 a20 af0 isal implementation
invert matrix assuming its invertible ported intel isal library
print data hex format chunk chunk
print data hex format array chunks header chunks
convert bytes format like 0x02 02 00 80 limit negative large bytes converted
serializations found reading ioserializations property conf commadelimited list classnames
constructor register block register called block closed wbs writable compression block state
current size compressed data ioexception
compressionalgo compression algorithm used compression ioexception
finishing reading block release resources
constructor fin fs input stream filelength length corresponding file ioexception
create meta block obtain output stream adding data block one blockappender stream active time regular blocks may created first meta blocks caller must call blockappenderclose conclude block creation name name meta block name must conflict existing meta blocks compressionname name compression algorithm used blockappender stream ioexception metablockalreadyexists meta block name already exists
signaling end write block block register called registering finished block
close bcfile writer attempting use writer calling close allowed may lead undetermined results
finishing current block
finishing reading bcfile release resources
find smallest block index whose starting offset greater equal specified offset offset userspecific offset index data block block exists 1 otherwise
stream access data block blockindex 0based data block index blockreader input stream reading data block ioexception
get raw size block number uncompressed bytes written blockappender far ioexception
create meta block obtain output stream adding data block meta block compressed compression algorithm data blocks one blockappender stream active time regular blocks may created first meta blocks caller must call blockappenderclose conclude block creation name name meta block name must conflict existing meta blocks blockappender stream metablockalreadyexists meta block name already exists ioexception
stream access meta block name meta block name blockreader input stream reading meta block ioexception metablockdoesnotexist meta block given name exist
create data block obtain output stream adding data block one blockappender stream active time data blocks may created first meta blocks caller must call blockappenderclose conclude block creation blockappender stream ioexception
constructor fout fs output stream compressionname name compression algorithm used data blocks ioexception compressiongetsupportedalgorithms
internal api comparing key cursor userspecified key userspecified key negative key cursor smaller user key 0 equal positive key cursor greater user key ioexception
get entry access key value entry object access key value ioexception
writing key output stream method avoids copying key buffer scanner user buffer writing output stream output stream length key ioexception
constructor fsdos output stream writing must position 0 minblocksize minimum compressed block size bytes compression block closed reaches size except last block compressname name compression algorithm must one strings returned tfilegetsupportedcompressionalgorithms comparator leave comparator null empty string tfile sorted otherwise provide string name comparison algorithm keys two kinds comparators supported algorithmic comparator binary comparators language independent currently memcmp supported languagespecific comparator binary comparators constructed specific language java syntax jclass followed class name rawcomparator currently support rawcomparators constructed default constructor with parameters parameterized rawcomparators writablecomparator javaserializationcomparator may directly used one write wrapper class inherits classes use default constructor perform proper initialization conf configuration object ioexception
move cursor first entry whose key strictly greater input key entry returned previous entry call invalid key input key keyoffset offset key buffer keylen key buffer length ioexception
streaming access key useful desrializing key user objects input stream
move cursor first entry whose key greater equal input key entry returned previous entry call invalid key input key keyoffset offset key buffer keylen key buffer length true find equal key false otherwise ioexception
get scanner covers portion tfile based keys beginkey begin key scan inclusive null scan first keyvalue entry tfile endkey end key scan exclusive null scan last keyvalue entry tfile actual coverage returned scanner cover keys greater equal beginkey less endkey ioexception use createscannerbykeybyte byte instead
stream access meta block name name meta block input stream ioexception io error metablockdoesnotexist meta block name exist
key input key id first block contains key input key 1 block exists
lazily loading tfile index ioexception
stream access value value part keyvalue pair pointed current cursor cached examined once calling following functions without moving cursor result exception getvaluebyte getvaluebyte int getvaluestream input stream reading value ioexception
get length value isvaluelengthknown must tested true length value
move cursor next keyvalue pair entry returned previous entry call invalid true cursor successfully moves false cursor already end location cannot advanced ioexception
writing value output stream method avoids copying value data scanner user buffer writing output stream require value length known output stream length value ioexception
close current data block necessary bforcefinish force closure regardless block size ioexception
javalangcomparablecomparetojavalangobject
obtain output stream creating meta block function may called key append stream value append stream active keyvalue insertion allowed meta data block added tfile name name meta block compressname name compression algorithm used must one strings returned tfilegetsupportedcompressionalgorithms dataoutputstream used write meta block data closing stream would signal ending block ioexception metablockalreadyexists meta block name already exists
get scanner covers portion tfile based keys beginkey begin key scan inclusive null scan first keyvalue entry tfile endkey end key scan exclusive null scan last keyvalue entry tfile actual coverage returned scanner cover keys greater equal beginkey less endkey ioexception
close scanner release resources behavior using scanner calling close defined entry returned previous entry call invalid
advance cursor n positions within block n number keyvalue pairs skip block ioexception
greater true returns beginning location block containing key strictly greater input key greater false returns beginning location block greater equal input key key input key greater boolean flag ioexception
get location pointing beginning first keyvalue pair compressed block whose byte offset tfile greater equal specified offset offset user supplied offset location corresponding entry end entry exists
copy key value one shot byteswritables equivalent getkeykey getvaluevalue key byteswritable hold key value byteswritable hold value ioexception
obtain output stream writing key tfile may called active key appending stream value appending stream length expected length key length key known set length 1 otherwise application must write exactly many bytes specified calling close returned output stream key appending output stream ioexception
close writer resources released regardless exceptions thrown future close calls effect underlying fsdataoutputstream closed
check whether already successfully obtained key also initializes valueinputstream
constructor fsdis fs input stream tfile filelength length tfile required easy way knowing actual size input file file input stream conf ioexception
copy value usersupplied buffer user supplied buffer must large enough hold whole value starting offset value part keyvalue pair pointed current cursor cached examined once calling following functions without moving cursor result exception getvaluebyte getvaluebyte int getvaluestream length value require isvaluelengthknown true ioexception
get first key tfile first key tfile ioexception
constructor reader tfile reader object beginkey begin key scan null scan first entry tfile endkey end key scan null scan last v entry tfile ioexception
writing file
obtain output stream creating meta block function may called key append stream value append stream active keyvalue insertion allowed meta data block added tfile data compressed using default compressor defined writers constructor name name meta block dataoutputstream used write meta block data closing stream would signal ending block ioexception metablockalreadyexists meta block name already exists
get scanner covers specific key range beginkey begin key scan inclusive null scan first keyvalue entry tfile endkey end key scan exclusive null scan last keyvalue entry tfile actual coverage returned scanner cover keys greater equal beginkey less endkey ioexception use createscannerbykeyrawcomparable rawcomparable instead
get last key tfile last key tfile ioexception
advance cursor block find key greater equal input key key key compare greater advance find key greater input key true find equal key ioexception
get sample key within block whose starting offset greater equal specified offset offset file offset key fits requirement null key exists which could happen offset close end tfile ioexception
adding new keyvalue pair tfile key buffer key koff offset key buffer klen length key value buffer value voff offset value buffer vlen length value ioexception upon io errors exception thrown tfile inconsistent state legitimate call would close
reading file ioexception
copy value byteswritable input byteswritable automatically resized actual value size implementation directly uses buffer inside byteswritable storing value call require value length known value ioexception
javalangobjectclone
get scanner covers specific key range beginkey begin key scan inclusive null scan first keyvalue entry tfile endkey end key scan exclusive null scan last keyvalue entry tfile actual coverage returned scanner cover keys greater equal beginkey less endkey ioexception
get comparator object compare entries useful want stores entries collection such priorityqueue perform sorting comparison among entries based keys without copying key entry comparator
obtain output stream writing value tfile may called right key appending operation the key append stream must closed length expected length value length value known set length 1 otherwise application must write exactly many bytes specified calling close returned output stream advertising value size upfront guarantees value encoded one chunk avoids intermediate chunk buffering ioexception
dumping tfile information args list tfile paths
compare entry rawcomparable object useful entries stored collection want compare user supplied key
javalangobjecthashcode
load compressed block reading expecting blockindex valid ioexception
check need start new data block ioexception
constructor reader tfile reader object offbegin begin byteoffset scan offend end byteoffset scan ioexception offsets rounded beginning compressed block whose offset greater equal specified offset
move cursor new location entry returned previous entry call invalid l new cursor location must fall begin end location scanner ioexception
constructor reader tfile reader object begin begin location scan end end location scan ioexception
move cursor first entry whose key greater equal input key entry returned previous entry call invalid key input key keyoffset offset key buffer keylen key buffer length ioexception
key input key id first block contains key input key 1 block exists
close reader state reader object undefined close calling close multiple times effect
copy key user supplied buffer buf buffer supplied user offset starting offset user buffer copy key into requiring keylength offset greater buffer length length key ioexception
compare whether points key value
javalangobjectequalsjavalangobject
provide customized comparator entries useful collection entry objects however entry objects come different tfiles users must ensure tfiles share rawcomparator
create scanner covers range records beginrecnum recordnum first record inclusive endrecnum recordnum last record exclusive scan whole file either specify endrecnum1 endrecnumgetentrycount tfile scanner covers specified range records ioexception
copy key byteswritable input byteswritable automatically resized actual key size key byteswritable hold key ioexception
dump information tfile file path string tfile printstream output information conf configuration object ioexception
size byte array
offset buffer
underlying buffer
wrap partial byte array rawcomparable buffer byte array buffer offset starting offset len length consecutive bytes wrapped
constructor fsdatainputstream connect to offset beginning offset region length length region actual length region may smaller offbegin length goes beyond end fs input stream
lower bound binary search find index first element list compares greater equal key type input key list list key input key index desired element exists listsize otherwise
compare version another version
decoding variablelength integer synonymous intutilsreadvlongin input stream decoded integer ioexception utilsreadvlongdatainput
read string vint n followed n bytes text format input stream string ioexception
constructor major major version minor minor version
encoding long integer variablelength encoding format if n 32 127 encode one byte actual value otherwise if n 2028 2028 encode two bytes byte0 n256 52 otherwise if n 16216 16216 encode three bytes byte0n216 88 byte1n80xff otherwise if n 8224 8224 encode four bytes byte0n224 112 byte1 n160xff byte2 n80xff otherwise if n 231 231 encode five bytes byte0125 byte1 n240xff byte2n160xff byte3n80xff byte4n0xff if n 239 239 encode six bytes byte0124 byte1 n320xff byte2n240xff byte3n160xff byte4n80xff if n 247 247 encode seven bytes byte0123 byte1 n400xff byte2n320xff byte3n240xff byte4n160xff byte5n80xff byte6n0xff if n 255 255 encode eight bytes byte0122 byte1 n480xff byte2 n400xff byte3n320xff byte4n240xff byte5n160xff byte6n80xff byte7n0xff if n 263 263 encode nine bytes byte0121 byte1 n540xff byte2 n480xff byte3 n400xff byte4n320xff byte5n240xff byte6n160xff byte7n80xff byte8n0xff output stream n integer number ioexception
lower bound binary search find index first element list compares greater equal key type input key list list key input key cmp comparator key index desired element exists listsize otherwise
write objec dataoutput serialized format version major version followed minor version bigendian short integers dataoutput object ioexception
decoding variablelength integer suppose value first byte fb following bytes nb if fb 32 return longfb if fb 72 33 return fb528 nb00xff if fb 104 73 return fb8816 nb00xff8 nb10xff if fb 120 105 return fb11224 nb00xff16 nb10xff8 nb20xff if fb 128 121 return interpret nbfb129 signed bigendian integer input stream decoded long integer ioexception
write string vint n followed n bytes text format ioexception
upper bound binary search find index first element list compares greater input key type input key list list key input key cmp comparator key index desired element exists listsize otherwise
construct version object reading input stream input stream ioexception
return string representation version
upper bound binary search find index first element list compares greater input key type input key list list key input key index desired element exists listsize otherwise
reached last chunk true reached last chunk javaioioexception
many bytes remain current chunk remaining bytes left current chunk javaioioexception
constructor underlying output stream buf usersupplied buffer buffer would used exclusively chunkencoder life cycle
reading length next chunk javaioioexception data available
flush internal buffer last call flushbuffer javaioioexception
check whether reach end stream false chunk encoded stream data read in case available greater 0 true otherwise javaioioexception io errors
constructor underlying output stream size total bytes written single chunk javaioioexception io error occurs
constructor source input stream contains chunkencoded data stream
write chunk chunk chunk buffer offset offset chunk buffer beginning chunk len last last call flushbuffer
write chunk concatenation internal buffer plus user supplied data never last block data user supplied data buffer offset offset user data buffer len user data buffer size
create proxy interface implementations interface using given failoverproxyprovider set retry policies specified method name retry policy defined method default retrypoliciestryoncethenfail used iface interface retry implement proxyprovider provides implementation instances whose methods retried methodnametopolicymapa map method names retry policies retry proxy
create proxy interface implementation class using set retry policies specified method name retry policy defined method default retrypoliciestryoncethenfail used iface interface retry implement implementation instance whose methods retried methodnametopolicymap map method names retry policies retry proxy
create proxy interface implementations interface using given failoverproxyprovider retry policy method interface iface interface retry implement proxyprovider provides implementation instances whose methods retried retrypolicy policy retrying failing method call failures retry proxy
create proxy interface implementation class using retry policy method interface iface interface retry implement implementation instance whose methods retried retrypolicy policy retrying method call failures retry proxy
similarly remoteexceptiontoretry ignored part hashcode since affect connection failure handling
return default retry policy set conf value retrypolicyenabledkey set false conf use tryoncethenfail otherwise get multiplelinearrandomretry policy specified conf 1 use multiplelinearrandomretry remoteexceptiontoretry ioexception remoteexception serviceexception 2 use tryoncethenfail nonremoteexceptiontoretry remoteexception nonioexception conf retrypolicyenabledkey conf property key enabling retry defaultretrypolicyenabled default retrypolicyenabledkey conf value retrypolicyspeckey conf property key retry policy spec defaultretrypolicyspec default retrypolicyspeckey conf value remoteexceptiontoretry particular remoteexception retry default retry policy
remoteexceptiontoretry ignored part equals since affect connection failure handling
return multiplelinearrandomretry policy specified conf null feature disabled policy specified conf policy cannot parsed default policy returned retry policy spec n pairs sleeptime numberofretries s1n1s2n2 conf retrypolicyenabledkey conf property key enabling retry defaultretrypolicyenabled default retrypolicyenabledkey conf value retrypolicyspeckey conf property key retry policy spec defaultretrypolicyspec default retrypolicyspeckey conf value multiplelinearrandomretry policy specified conf null feature disabled
lower rpc layers set async return value
true call done otherwise return false
async return value asynccallhandler
queue empty given time millisecond
invoke call without retrying
first processes wait time any invokes processretryinfo wait time positive either sleeps synchronous calls immediately returns asynchronous calls callreturnretry retryinfo processed otherwise return callreturnwaitretry
set default policy explicit handlers specific exceptions
retry policy remoteexception set default policy explicit handlers specific exceptions
retry policy exceptions remoteexception
parse ith element integer 1 parsing fails parsed value 0 otherwise return parsed value
parse given string multiplelinearrandomretry object format string t1 n1 t2 n2 ti ni ith pair sleep time number retries note white spaces string ignored parsed object null parsing fails
0 first failoverretry ie retry immediately sleep exponentially otherwise
keep trying forever fixed time attempts
return value time increasing exponentially function retries 050 value chosen randomly time base amount time work retries number retries occurred far cap value cap base sleep time amount time sleep
keep trying limited number times waiting growing amount time attempts fail rethrowing exception time attempts sleeptime mutliplied random number range 0 2 number retries
given current number retry search corresponding pair corresponding pair null current number retry maximum number retry
write one byte
resets existing buffer new one specified size
write portion array flushing underlying stream necessary
generate checksums given data chunks output chunks checksums underlying output stream
writes len bytes specified byte array starting offset off generate checksum data chunk method stores bytes given array streams buffer gets checksumed buffer gets checksumed flushed underlying output stream data checksum chunk buffer buffer empty requested length least large size next checksum chunk size method checksum write chunk directly underlying output stream thus avoids unnecessary data copy b data start offset data len number bytes write exception ioexception io error occurs
retrieves number links specified file
creates hardlink file existing source file linkname desired target link file
creates hardlinks multiple existing files within one parent directory one target directory parentdir directory containing source files filebasenames list pathless file names returned parentdirlist linkdir hardlinks put must already exist
whether stat supported current platform
validate createflag append operation flag must contain append cannot contain overwrite
validate createflag create operation path object representing path usually string path pathexists pass true path exists file system flag set createflag ioexception error hadoopillegalargumentexception createflag invalid
validate createflag throw exception invalid flag set createflag hadoopillegalargumentexception createflag invalid
create parent directory exist
set mandatory int option muststring string
constructor
construct filecontext fc filecontext p path ioexception
append existing file optional operation
set optional float parameter builder optstring string
set checksum opt
set mandatory boolean option muststring string
set string array mandatory option muststring string
create fsdataoutputstream specified path
set size buffer used
set mandatory float option muststring string
set optional int parameter builder optstring string
set mandatory double option muststring string
set block size
set mandatory option builder option supported unavailable filesystem client expect build throws illegalargumentexception
get keys set mandatory keys
set permission file
set optional boolean parameter builder optstring string
set array string values optional parameter builder optstring string
set true overwrite existing file set false exception thrown calling build file exists
set facility reporting progress
set optional double parameter builder optstring string
set replication factor
set optional builder parameter
format cmd operation path to target error string
avoid using method use subclass pathioexception possible path exception error custom string use error text
src file local disk add fs given dst name delsrc indicates source removed
list files directory
list files block locations directory
return total size files filesystem
returns local file user write output to caller provides eventual fs target name local working file fs local write directly target fs remote write tmp local area
set replication existing file src file name replication new replication ioexception true successful false file exist directory
src files local disk add fs given dst name delsrc indicates source removed
returns uri whose scheme authority identify filesystem
check path belongs filesystem
set current working directory given file system relative paths resolved relative it newdir
make sure path specifies filesystem
opens fsdatainputstream indicated path f file name open buffersize size buffer used
src file local disk add fs given dst name delsrc indicates source removed
delete file
return total size files specified path
get file status
return remote iterator listing directory
src file fs dst local disk copy fs control local dst name delsrc indicates src removed not
get current working directory given file system directory pathname
called were done writing target local fs nothing weve written exactly right place remote fs copy contents tmplocalfile correct target fsoutputfile
renames path src path dst take place local fs remote dfs
called new filesystem instance constructed name uri whose authority section names host port etc filesystem conf configuration
attempt calling overridden docallpath method specified filesystem path call fails unresolvedlinkexception try resolve path retry call calling nextfilesystem path filesys filesystem try call path path try call generic type determined implementation ioexception
get path local fs pass size sizeunknown known apriori roundrobin set disks via configured dirs return first complete path enough space pathstr requested path this created first available disk size size file going written conf configuration object checkwrite ensure path writable complete path file local disk ioexception
get paths currently exist working directories pathstr path underneath roots conf configuration look roots paths exist roots ioexception
method must used obtain dir allocation context particular value context name context name must item defined configuration object want control dir allocations eg mapredlocaldir method create context name doesnt already exist
get path local fs reading search configured dirs files existence return complete path file find one
get path local fs size known go roundrobin set disks via configured dirs return first complete path enough space size known use roulette selection pick directories probability proportional available space
removes context context config items contextcfgitemname
get current directory index given configuration item current directory index given configuration item
get path local fs reading search configured dirs files existence return complete path file find one pathstr requested file this searched conf configuration object complete path file local disk ioexception
search configured dirs files existence return true find pathstr requested file this searched conf configuration object true files exist false otherwise ioexception
search configured dirs files existence return true find one
method gets called everytime readwrite make sure change localdirs reflected immediately
creates file local fs pass size localdirallocatorsizeunknown known apriori roundrobin set disks via configured dirs return file first path enough space file guaranteed go away jvm exits
get path local fs method used size file known apriori go roundrobin set disks via configured dirs return first complete path could create parent directory passed path pathstr requested path this created first available disk conf configuration object complete path file local disk ioexception
creates temporary file local fs pass size 1 known apriori roundrobin set disks via configured dirs select first complete path enough space file created directory file guaranteed go away jvm exits pathstr prefix temporary file size size file going written conf configuration object unique temporary file ioexception
get path local fs pass size sizeunknown known apriori roundrobin set disks via configured dirs return first complete path enough space pathstr requested path this created first available disk size size file going written conf configuration object complete path file local disk ioexception
get paths currently exist working directories pathstr path underneath roots conf configuration look roots paths exist roots ioexception
method check whether context valid contextcfgitemname truefalse
create allocator object contextcfgitemname
utility function partial evaluation filestatus instances fixed set handle options fsr function reference opt options associate filestatus instances produce pathhandle instances function reference options fixed
helper method processing user input default value create combined checksum option defaultopt default checksum option useropt userspecified checksum option
set option newvalue option set opts option set array opts updated createopts opts newvalue
get option desired type clazz desired class opt opts null least one opt must passed opt one opts type theclass returns null isnt
helper method processing user input default value create combined checksum option bit complicated bytesperchecksum kept backward compatibility defaultopt default checksum option useropt userspecified checksum option ignored null userbytesperchecksum userspecified bytesperchecksum ignored 0
utility method extract handleopt set provided c target class opt list options type constraint exact match illegalargumentexception one matching type found option assignable specified type null either opt null suitable match found
utility function mapping filesystemgetpathhandle fixed set handle options fs target filesystem opt options bind partially evaluated function function reference options fixed
normal ctor type checksum type size bytes per checksum
return array containing hostnames offset size portions given file nonexistent file regions null returned f null result null elif fgetlen start result else result locationsfs b b blocksfs p s sl call helpful distributed filesystem hostnames machines contain blocks given file determined default implementation returns array containing one element blocklocation localhost9866 localhost 0 filegetlen hdfs file threereplicated returned array contains elements like blocklocationoffset 0 length blocksize hosts host19866 host29866 host39866 blocklocationoffset blocksize length blocksize hosts host29866 host39866 host49866 file erasurecoded returned blocklocation logical block groups suppose rs32 coded file 3 data units 2 parity units 1 file size less one stripe size say 2 cellsize one blocklocation returned 0 offset actual file size 4 hosts 2 data blocks 2 parity blocks hosting actual blocks 3 file size less one group size greater one stripe size one blocklocation returned 0 offset actual file size 5 hosts 3 data blocks 2 parity blocks hosting actual blocks 4 file size greater one group size 3 blocksize 123 example result like blocklocationoffset 0 length 3 blocksize hosts host19866 host29866host39866host49866host59866 blocklocationoffset 3 blocksize length 123 hosts host19866 host49866 host59866 file filesstatus get data start offset given file len length get locations ioexception io failure
open fsdatainputstream matching pathhandle instance implementation may encode metadata pathhandle address resource directly verify resource referenced satisfies constraints specified construciton fd pathhandle object returned fs authority invalidpathhandleexception pathhandle constraints satisfied ioexception io failure unsupportedoperationexception openpathhandle int overridden subclass
update oldformat filesystem names backcompatibility eventually replaced checkname method throws exception oldformat names
get number large file system read operations list files large directory number large read operations
src file filesystem dst local disk copy remote filesystem local dst name delsrc indicates src removed not userawlocalfilesystem indicates whether use rawlocalfilesystem local file system not rawlocalfilesystem non checksumming so create crc files local delsrc whether delete src src path dst path userawlocalfilesystem whether use rawlocalfilesystem local file system not ioexception io error
list corrupted file blocks iterator corrupt files given path may contain duplicates file one corrupt block unsupportedoperationexception operation unsupported default ioexception io failure
load filesystem declarations service resources synchronized operation
create fsdataoutputstream indicated path writeprogress reporting f file name open overwrite file name already exists true file overwritten false error thrown buffersize size buffer used replication required block replication file ioexception io failure
get root directory trash current user path specified deleted path trash root path determined default implementation returns userusertrash
get number file system write operations create append rename etc number write operations
open fsdatainputstream matching pathhandle instance implementation may encode metadata pathhandle address resource directly verify resource referenced satisfies constraints specified construciton fd pathhandle object returned fs authority buffersize size buffer use invalidpathhandleexception pathhandle constraints satisfied ioexception io failure unsupportedoperationexception overridden subclass
get xattr names file directory xattr names loggedin user permissions view returned refer hdfs extended attributes user documentation details path path get extended attributes list xattr names file directory ioexception io failure unsupportedoperationexception operation unsupported default outcome
create initialize new instance filesystem uri uri containing fs schema fs details conf configuration use look fs instance declaration pass filesysteminitializeuri configuration initialized filesystem ioexception problems loading initializing filesystem
return current users home directory filesystem default implementation returns useruser
cancel scheduled deletion path filesystem closed f path cancel deletion true path found deleteonexit list
filter filesdirectories given path using usersupplied path filter guarantee return list filesdirectories status sorted order f path name filter usersupplied path filter array filestatus objects files given path applying filter filenotfoundexception path exist ioexception see specific implementation
return fullyqualified path path resolving path symlinks mount point p path resolved fully qualified path filenotfoundexception path present ioexception error
create durable serializable handle referent given entity stat referent target filesystem opt absent assume handleoptpath illegalargumentexception filestatus belong filesystem unsupportedoperationexception createpathhandle overridden subclass unsupportedoperationexception filesystem cannot enforce specified constraints
initialize filesystem called new filesystem instance constructed ready use filesystem implementations overriding method must forward superclass though order done whether alter configuration invocation options subclass name uri whose authority section names host port etc filesystem conf configuration ioexception failure initialize instance illegalargumentexception uri considered invalid
copy constructor input statistics object cloned
remove xattr file directory name must prefixed namespace followed example userattr refer hdfs extended attributes user documentation details path path remove extended attribute name xattr name ioexception io failure unsupportedoperationexception operation unsupported default outcome
number bytes file number bytes 0 directory use getfilestatuspath instead filenotfoundexception path resolve ioexception io failure
get unique local filesystem object conf configuration configure filesystem new localfilesystem object ioexception fs creation initialization failure
delete paths marked deleteonexit recursively deletes files directories specified paths time process operation opaths actual time dependent time existence deletion operations complete successfully not
negate values statistics
close filesystem instances cache onlyautomatic close marked automatic closing ioexception problem arose closing one filesystem
return protocol scheme filesystem implementation throws unsupportedoperationexception protocol scheme filesystem unsupportedoperationexception operation unsupported default
returns local file user write output to caller provides eventual target name filesystem local working file path filesystem local write directly target filesystem local write tmp local area fsoutputfile path output file tmplocalfile path local tmp file ioexception io failure
see filecontextfixrelativepart
get map statistics object indexed uri scheme map key uri scheme value statistics object use getglobalstoragestatistics
opens fsdataoutputstream indicated path writeprogress reporting create except fails parent directory doesnt already exist f file name open overwrite file name already exists true file overwritten false error thrown buffersize size buffer used replication required block replication file blocksize block size progress progress reporter ioexception io failure setpermissionpath fspermission
mark path deleted filesystem closed jvm shuts cleanly cached filesystem objects closed automatically marked paths deleted result filesystem instance cached ie created createfilesystemuri configuration paths deleted close called instance path must exist filesystem time method call exist time jvm shutdown notes clean shutdown jvm cannot guaranteed the time shut filesystem depends number files delete filesystems cost checking existence filedirectory actual delete operation for example object stores high time shutdown jvm significantly extended overuse feature connectivity problems remote filesystem may delay shutdown further may cause files deleted f path delete true deleteonexit successful otherwise false ioexception io failure
set storage policy given file directory src file directory path policyname name target storage policy list supported storage policies retrieved via getallstoragepolicies ioexception io failure unsupportedoperationexception operation unsupported default outcome
filter filesdirectories given list paths using default path filter guarantee return list filesdirectories status sorted order files list paths list statuses files given paths applying filter default path filter filenotfoundexception path exist ioexception see specific implementation
called were done writing target local fs nothing weve written exactly right place remote fs copy contents tmplocalfile correct target fsoutputfile fsoutputfile path output file tmplocalfile path local tmp file ioexception io failure
close cached filesystem instances given ugi sure filesystems used anymore ugi user group info close ioexception problem arose closing one filesystem
opens fsdataoutputstream indicated path writeprogress reporting create except fails parent directory doesnt already exist f file name open permission file permission overwrite file name already exists true file overwritten false error thrown buffersize size buffer used replication required block replication file blocksize block size progress progress reporter ioexception io failure setpermissionpath fspermission
increment bytes read network distance statistics common network topology setup distance value even number 0 2 4 6 make general group distance 1 2 3 4 5 beyond accounting distance network distance newbytes additional bytes read
list directory returned results include block location file results filtered given path filter f path filter path filter iterator traverses statuses filesdirectories given path filenotfoundexception f exist ioexception io error occurred
get filesystem uris scheme authority configuration property fsschemeimpldisablecache set true new instance created initialized supplied uri configuration returned without cached cached fs instance matching uri returned otherwise new fs instance created initialized configuration uri cached returned caller ioexception filesystem cannot instantiated
removes acl entries files directories acl entries retained path path modify aclspec list describing entries remove ioexception acl could modified unsupportedoperationexception operation unsupported default outcome
process input stat file return file stat directory traverse directory recursive true ignore recursive false stat input status ioexception io error occurs
close filesystem instance release held locks delete files queued deletion calls deleteonexitpath remove fs instance cache cached operation outcome method call filesystem instance inputoutput stream created undefined ioexception io failure
unset storage policy set given file directory src file directory path ioexception io failure unsupportedoperationexception operation unsupported default outcome
create fsdataoutputstream indicated path writeprogress reporting f file name open permission file permission flags createflags use stream buffersize size buffer used replication required block replication file blocksize block size progress progress reporter ioexception io failure setpermissionpath fspermission
qualify path one uses filesystem and relative made absolute path qualify path contains scheme authority absolute new path includes path authority fully qualified pathmakequalifieduri path illegalargumentexception path schemauri different filesystem
filter filesdirectories given list paths using usersupplied path filter guarantee return list filesdirectories status sorted order files list paths filter usersupplied path filter list statuses files given paths applying filter filenotfoundexception path exist ioexception see specific implementation
see filecontextcreatesymlinkpath path boolean
common network topology setup distance value even number 0 2 4 6 make general group distance 1 2 3 4 5 beyond accounting caller ask bytes read distance 2 function return value group 1 2 distance network distance total number bytes read network distance
src file local disk add filesystem given dst name source kept intact afterwards src path dst path ioexception io failure
modifies acl entries files directories method add new acl entries modify permissions existing acl entries existing acl entries specified call retained without changes modifications merged current acl path path modify aclspec list describing modifications ioexception acl could modified unsupportedoperationexception operation unsupported default outcome
return total size files filesystem ioexception io failure
get filesystem implementation class filesystem triggers scan load filesystem implementations listed services discovered via serviceloader scheme url scheme fs conf configuration null case check filesystem binding declaration configuration skipped filesystem unsupportedfilesystemexception known implementation scheme ioexception filesystem could loaded
return filesystem classes statistics use getglobalstoragestatistics
removes default acl entries files directories path path modify ioexception acl could modified unsupportedoperationexception operation unsupported default outcome
create fsdataoutputstream indicated path f file create overwrite file name already exists true file overwritten false exception thrown ioexception io failure
query effective storage policy id given file directory src file directory path storage policy give file ioexception io failure unsupportedoperationexception operation unsupported default outcome
see filecontextgetfilelinkstatuspath filenotfoundexception path exist ioexception see specific implementation
get immediate child filesystems embedded filesystem recurse get grand children filesystem multiple child filesystems must return unique list filesystems default return null signify children filesystems direct children filesystem null no children
renames path src path dst fails src file dst directory fails src directory dst file fails parent dst exist file overwrite option passed argument rename fails dst already exists overwrite option passed argument rename overwrites dst file empty directory rename fails dst nonempty directory note atomicity rename dependent file system implementation please refer file system documentation details default implementation non atomic method deprecated since temporary method added support transition filesystem filecontext user applications src path renamed dst new path rename filenotfoundexception src path exist parent path dst exist filealreadyexistsexception dest path exists file parentnotdirectoryexception parent path dest directory ioexception failure
check path exists highly discouraged call method back back getfilestatuspath calls involve multiple redundant rpc calls hdfs f source path true path exists ioexception io failure
get local filesystem conf configuration configure filesystem newly instantiated localfilesystem ioexception somehow local fs cannot instantiated
src files local disk add filesystem given dst name removing source afterwards srcs source paths dst path ioexception io failure
rename snapshot path directory path snapshot taken snapshotoldname old name snapshot snapshotnewname new name snapshot ioexception io failure unsupportedoperationexception operation unsupported default outcome
removes base acl entries files directories entries user group others retained compatibility permission bits path path modify ioexception acl could removed unsupportedoperationexception operation unsupported default outcome
create new fsdataoutputstreambuilder file path files overwritten default path file path fsdataoutputstreambuilder object build file hadoop14384 temporarily reduce visibility method builder interface becomes stable
retrieve storage policies supported file system storage policies supported filesystem ioexception io failure unsupportedoperationexception operation unsupported default outcome
get statistics particular file system cls class lookup statistics object use getglobalstoragestatistics
get xattrs namevalue pairs file directory xattrs loggedin user permissions view returned refer hdfs extended attributes user documentation details path path get extended attributes names xattr names map describing xattrs file directory ioexception io failure unsupportedoperationexception operation unsupported default outcome
create fsdataoutputstream indicated path custom checksum option f file name open permission file permission flags createflags use stream buffersize size buffer used replication required block replication file blocksize block size progress progress reporter checksumopt checksum parameter null values found conf used ioexception io failure setpermissionpath fspermission
see filecontextgetlinktargetpath unsupportedoperationexception operation unsupported default outcome
create fsdataoutputstream indicated path writeprogress reporting files overwritten default f file create progress report progress ioexception io failure
apply given aggregator statisticsdata objects associated statistics object statisticsdata object call accept visitor finally end call aggregate get final total visitor use total
canonicalize given uri implementationdependent may example consist canonicalizing hostname using dns adding default port specified default implementation simply fills default port specified getdefaultport returns default port uri netutilsgetcanonicaluriuri int
src file local disk add filesystem given dst name removing source afterwards src local path dst path ioexception io failure
set replication existing file filesystem support replication always return true check file existing may bypassed default behavior src file name replication new replication ioexception true successful feature unsupported false replication supported file exist directory
get block size particular file f filename number bytes block use getfilestatuspath instead filenotfoundexception path present ioexception io failure
return contentsummary given path f path use filenotfoundexception path resolve ioexception io failure
true iff named path directory note avoid using method instead reuse filestatus returned getfilestatus liststatus methods f path check ioexception io failure use getfilestatuspath instead
see abstractfilesystemgetlinktargetpath unsupportedoperationexception operation unsupported default outcome
performs cleanup action associated thread garbage collected
fully replaces acl files directories discarding existing entries path path modify aclspec list describing modifications must include entries user group others compatibility permission bits ioexception acl could modified unsupportedoperationexception operation unsupported default outcome
returns remote iterator followup calls made demand consuming entries filesystem implementation override method provide efficient implementation possible guarantee return iterator traverses statuses files sorted order p target path remote iterator filenotfoundexception p exist ioexception io error occurred
creates given path brandnew zerolength file create fails already existed return false important default implementation atomic f path use create ioexception io failure
get total number bytes read number bytes
get statistics data mr frameworks use method get statistics once statisticsdata
objects inserted cache using method unique
return number bytes large input files optimally split minimize io time use getdefaultblocksizepath instead
src file local disk add filesystem given dst name delsrc indicates source removed delsrc whether delete src src path dst path
method adds filesystem instance cache retrieved later testing uri uri store conf configuration store fs filesystem store ioexception current user cannot determined
create fsdataoutputstream indicated path files overwritten default f file create replication replication factor ioexception io failure
gets acl file directory path path get aclstatus describing acl file directory ioexception acl could read unsupportedoperationexception operation unsupported default outcome
return array filestatus objects whose path names match pathpattern accepted usersupplied path filter results sorted path names pathpattern glob specifying path pattern filter usersupplied path filter null pathpattern glob path exist empty array pathpattern glob path matches else array filestatus objects matching pattern ioexception io error occurs fetching file status
create file provided permission permission file set provided permission setpermission hdfs implementation implemented using two rpcs understood inefficient implementation threadsafe option change value umask configuration 0 threadsafe fs filesystem file name file created permission permission file output stream ioexception io failure
list statuses block locations files given path guarantee return iterator traverses statuses files sorted order path directory recursive false returns files directory recursive true return files subtree rooted path path file return files status block locations f path recursive subdirectories need traversed recursively iterator traverses statuses files filenotfoundexception path exist ioexception see specific implementation
get new delegation token filesystem internal method declared protected wasnt historically callers use adddelegationtokensstring credentials renewer account name allowed renew token new delegation token null fs support tokens ioexception problem obtaining token
return array containing hostnames offset size portions given file nonexistent file regions null returned call helpful locationaware distributed filesystems returns hostnames machines contain given file filesystem normally return equivalent result passing filestatus path getfileblocklocationsfilestatus long long p path used identify fs since fs could another fs could delegating call start offset given file len length get locations filenotfoundexception path exist ioexception io failure
get trash roots current user users allusers return trash roots users true trash root directories default filesystem returns trash users home directories userusertrash exists
true iff named path regular file note avoid using method instead reuse filestatus returned getfilestatuspath liststatus methods f path check ioexception io failure use getfilestatuspath instead
get checksum file beginning file till specific length f file path length length file range checksum calculation file checksum null checksums supported ioexception io failure
create added support filecontext processes permission umask calling method temporary method added support transition filesystem filecontext user applications ioexception io failure
src files local disk add filesystem given dst name delsrc indicates source removed delsrc whether delete src overwrite whether overwrite existing file srcs array paths source dst path ioexception io failure
append existing file optional operation appendf getconfgetintiofilebuffersizekey iofilebuffersizedefault null f existing file appended ioexception io failure unsupportedoperationexception operation unsupported default
list statuses filesdirectories given path path directory return files status block locations path file returned status file contains files block locations f path iterator traverses statuses filesdirectories given path filenotfoundexception f exist ioexception io error occurred
get filesystem instance based uri passed configuration user uri filesystem conf configuration use user perform get filesystem instance ioexception failure load interruptedexception ugidoas call somehow interrupted
create fsdataoutputstream indicated path writeprogress reporting files overwritten default f file create replication replication factor progress report progress ioexception io failure
set xattr file directory name must prefixed namespace followed example userattr refer hdfs extended attributes user documentation details path path modify name xattr name value xattr value ioexception io failure unsupportedoperationexception operation unsupported default outcome
get total number bytes read erasurecoded files number bytes
return set server default configuration values server default configuration values ioexception io failure use getserverdefaultspath instead
returns filesystem uris scheme authority given user internally invokes newinstanceuri configuration uri filesystem conf configuration use user perform get filesystem instance ioexception filesystem cannot instantiated interruptedexception ugidoas call somehow interrupted
create directory provided permission permission directory set provided permission setpermission createfilesystem path fspermission fs filesystem handle dir name directory created permission permission directory true directory creation succeeds false otherwise ioexception problem creating directories
filter filesdirectories given path using usersupplied path filter results added given array results filenotfoundexception path exist ioexception see specific implementation
print statistics file systems systemout
get total number bytes written number bytes
src file local disk add filesystem given dst name delsrc indicates source removed delsrc whether delete src overwrite whether overwrite existing file src path dst path ioexception io failure
given opaque iteration token return next batch entries directory private api meant use end users method overridden filesystem subclasses want use generic filesystemliststatusiteratorpath implementation f path list token opaque iteration token returned previous call null first call filenotfoundexception ioexception
create fsdataoutputstream indicated path f file create overwrite path name already exists true file overwritten false error thrown buffersize size buffer used ioexception io failure
checks user access path mode specifies access checks perform requested permissions granted method returns normally access denied method throws accesscontrolexception default implementation calls getfilestatuspath checks returned permissions requested permissions note getfilestatuspath call subject authorization checks typically requires search execute permissions directory paths prefix implementationdefined file system provides richer authorization model such acls may override default implementation checks model instead general applications avoid using method due risk timeofchecktimeofuse race conditions permissions file may change immediately access call returns applications prefer running specific file system actions desired user represented usergroupinformation path path check mode type access check accesscontrolexception access denied filenotfoundexception path exist ioexception see specific implementation
set xattr file directory name must prefixed namespace followed example userattr refer hdfs extended attributes user documentation details path path modify name xattr name value xattr value flag xattr set flag ioexception io failure unsupportedoperationexception operation unsupported default outcome
opens fsdataoutputstream indicated path writeprogress reporting create except fails parent directory doesnt already exist f file name open permission file permission flags createflags use stream buffersize size buffer used replication required block replication file blocksize block size progress progress reporter ioexception io failure setpermissionpath fspermission
check path belongs filesystem base implementation performs case insensitive equality checks uris schemes authorities subclasses may implement slightly different checks path check illegalargumentexception path considered part filesystem
version mkdirs method assumes permission absolute added support filecontext processes permission umask calling method temporary method added support transition filesystem filecontext user applications f path absolutepermission permissions true directory actually created ioexception io failure mkdirspath fspermission
get create threadlocal data associated current thread
concat existing files together trg path target destination psrcs paths sources use concatenation ioexception io failure unsupportedoperationexception operation unsupported default
get canonical service name filesystem token cache user canonical service name uses lookup filesystems service tokens file system provides token must canonical name otherwise canonical name null default implementation filesystem child file systems such embedded file system assumed fs tokens hence returns null name otherwise service name built using uri port service string uniquely identifies file system null filesystem implement tokens securityutilbuilddtservicenameuri int
copy file remote filesystem local one delsrc indicates src removed not delsrc whether delete src src path src file remote filesystem dst path local destination ioexception io failure
get fs instance key maps instance creating initializing fs found first entry map jvm shutting down registers shutdown hook close filesystems adds fs toautoclose set fsautomaticclose set configuration default true uri filesystem uri conf configuration key key storeretrieve filesystem cache cached newly instantiated filesystem ioexception
method provides default implementation accesspath fsaction stat filestatus check mode type access check accesscontrolexception access denied ioexception error
get xattr name value file directory name must prefixed namespace followed example userattr refer hdfs extended attributes user documentation details path path get extended attribute name xattr name byte xattr value ioexception io failure unsupportedoperationexception operation unsupported default outcome
create fsdataoutputstream indicated path writeprogress reporting frequency callbacks implementationspecific may none f path file open overwrite file name already exists true file overwritten false error thrown buffersize size buffer used ioexception io failure
delete snapshot directory path directory tobedeleted snapshot belongs snapshotname name snapshot ioexception io failure unsupportedoperationexception operation unsupported default outcome
get number file system read operations list files number read operations
truncate file indicated path indicated size fails path directory fails path exist fails path closed fails new size greater current size f path file truncated newlength size file truncated true file truncated desired newlength immediately available reused write operations append false background process adjusting length last block started clients wait complete proceeding file updates ioexception io failure unsupportedoperationexception operation unsupported default
returns filesystem uris scheme authority entire uri passed filesystem instances initialize method always returns new filesystem object uri fs uri config configuration use new fs instance ioexception fs creation initialization failure
get default filesystem uri configuration conf configuration use uri default filesystem
version mkdirs method assumes permission absolute added support filecontext processes permission umask calling method temporary method added support transition filesystem filecontext user applications
get replication factor use getfilestatuspath instead src file name file replication filenotfoundexception path resolve ioexception io failure
get xattr namevalue pairs file directory xattrs loggedin user permissions view returned refer hdfs extended attributes user documentation details path path get extended attributes map describing xattrs file directory ioexception io failure unsupportedoperationexception operation unsupported default outcome
delete filedirectory use deletepath boolean instead
opens fsdatainputstream indicated path f file open ioexception io failure
call geturi configuration instead
add another statisticsdata object one
create fsdataoutputstream indicated path f file name open overwrite file name already exists true file overwritten false error thrown buffersize size buffer used replication required block replication file ioexception io failure
create snapshot path directory snapshots taken snapshotname name snapshot snapshot path ioexception io failure unsupportedoperationexception operation unsupported
resets statistics 0 order reset add threadlocal statistics data set rootdata negative that may seem like counterintuitive way reset statistics cant zero threadlocal data well threadlocal data modified thread owns it tried modify threadlocal data thread modification might get interleaved readmodifywrite operation done thread owns data would result update getting lost approach used avoids problem ever reads not writes threadlocal data reads writes rootdata done lock were free modify rootdata thread holds lock
serialized bytes
filesystem mount point indicated volume
string indicating filesystem volume were checking
amount volume full percent
case symlinks mount points one move appropriate trashbin actual volume path p deleted hence get file system fullyqualified resolvedpath move path p trashbin volume fs filesystem path p p path deleted moved trasg conf configuration false item already trash trash disabled ioexception error
construct trash accessor filesystem provided fs filesystem conf configuration
get reference wrapped output stream underlying output stream
close underlying output stream
report checksum error file system f file name containing error stream open file inpos position beginning bad data file sums stream open checksum file sumspos position beginning bad data checksum file retry necessary
get raw file system
rename filesdirs
src file fs dst local disk copy fs control local dst name src dst directories copycrc parameter determines whether copy crc files
skips discards n bytes data input stream the skip method skips smaller number bytes reaching end file n bytes skipped actual number bytes skipped returned n negative bytes skipped n number bytes skipped actual number bytes skipped exception ioexception io error occurs checksumexception chunk skip corrupted
list statuses filesdirectories given path path directory f given path statuses filesdirectories given path ioexception
src file fs dst local disk copy fs control local dst name
list statuses filesdirectories given path path directory f given path statuses filesdirectories given patch ioexception
set whether verify checksum
set replication existing file implement abstract setreplication filesystem src file name replication new replication ioexception true successful false file exist directory
opens fsdatainputstream indicated path f file name open buffersize size buffer used
implement deletepath boolean checksum file system
calculated length checksum file bytes size length data file bytes bytespersum number bytes checksum block number bytes checksum file
return true iff file checksum file name
seek given position stream next read position this method allow seek past end file produces ioexception pos postion seek to exception ioexception io error occurs seeks eof checksumexception chunk seek corrupted
perform fallback read
determine stream byte buffer read via readbytebuffer buf
get current position input stream current position input stream
read bytes given position stream given buffer position position input stream seek buffer buffer data read offset offset buffer data written length maximum number bytes read total number bytes read buffer 1 data end stream reached
seek given offset desired offset seek
get reference wrapped input stream used unit tests underlying input stream
see readfullylong byte int int
read bytes given position stream given buffer continues read length bytes read position position input stream seek buffer buffer data read offset offset buffer data written length number bytes read ioexception io problems eofexception end stream reached reading exception thrown undetermined number bytes buffer may written
string value includes string value inner stream stream
seek given position alternate copy data targetpos position seek true new source found false otherwise
construct given filecontext path
construct given fsdatainputstream length
constructor host name offset length
set hosts hosting block
constructor host name network topology offset length corrupt flag
set network topology paths hosts
constructor host name network topology offset length
set names hostport hosting block
set hosts hosting cached replica block
constructor host name offset length corrupt flag
copy constructor
returns default port file system defines one filesystemgetdefaultport returns 0 indicate default port undefined however logic consumes value expects receive 1 indicate port undefined agrees contract urigetport thefsimpl file system check default port default port 1 default port undefined
rename snapshot path directory path snapshot taken snapshotoldname old name snapshot snapshotnewname new name snapshot ioexception io error occurred exceptions applicable file systems accessed rpc rpcclientexception exception occurred rpc client rpcserverexception exception occurred rpc server unexpectedserverexception server implementation throws undeclared exception rpc server
create filecontext specified uri using default config defaultfsuri filecontext specified uri default fs unsupportedfilesystemexception file system defaultfsuri supported
aconf filecontext configured filecontext local file system using specified config unsupportedfilesystemexception default file system config supported
list statuses filesdirectories given path path directory return files status block locations path file returned status file contains files block locations f path iterator traverses statuses filesdirectories given path io exception for example input directory gets deleted listing executed next hasnext returned iterator may throw runtimeexception io exception cause accesscontrolexception access denied filenotfoundexception f exist unsupportedfilesystemexception file system f supported ioexception io error occurred exceptions applicable file systems accessed rpc rpcclientexception exception occurred rpc client rpcserverexception exception occurred rpc server unexpectedserverexception server implementation throws undeclared exception rpc server
file exist note avoid using method already filestatus hand instead reuse filestatus f file dir checked accesscontrolexception access denied ioexception io error occurred unsupportedfilesystemexception file system f supported exceptions applicable file systems accessed rpc rpcclientexception exception occurred rpc client rpcserverexception exception occurred rpc server unexpectedserverexception server implementation throws undeclared exception rpc server
makecreate directory nonexistent parents dir dir make permission permissions set createparent true missing parent dirs created false parent must exist accesscontrolexception access denied filealreadyexistsexception directory dir already exists filenotfoundexception parent dir exist createparent false parentnotdirectoryexception parent dir directory unsupportedfilesystemexception file system dir supported ioexception io error occurred exceptions applicable file systems accessed rpc rpcclientexception exception occurred rpc client unexpectedserverexception server implementation throws undeclared exception rpc server runtimeexceptions invalidpathexception path dir valid
return file status object represents path f path want information filestatus object accesscontrolexception access denied filenotfoundexception f exist unsupportedfilesystemexception file system f supported ioexception io error occurred exceptions applicable file systems accessed rpc rpcclientexception exception occurred rpc client rpcserverexception exception occurred rpc server unexpectedserverexception server implementation throws undeclared exception rpc server
unset storage policy set given file directory src file directory path ioexception
copy src dst optionally deleting src overwriting dst src dst deletesource delete src true overwrite overwrite dst true throw ioexception dst exists overwrite false true copy successful accesscontrolexception access denied filealreadyexistsexception dst already exists filenotfoundexception src exist parentnotdirectoryexception parent dst directory unsupportedfilesystemexception file system src dst supported ioexception io error occurred exceptions applicable file systems accessed rpc rpcclientexception exception occurred rpc client rpcserverexception exception occurred rpc server unexpectedserverexception server implementation throws undeclared exception rpc server runtimeexceptions invalidpathexception path dst invalid
get xattr names file directory xattr names loggedin user permissions view returned refer hdfs extended attributes user documentation details path path get extended attributes list xattr names file directory ioexception
removes acl entries files directories acl entries retained path path modify aclspec list describing entries remove ioexception acl could modified
resolves symbolic links specified path leading to including final path component f path resolve new path object
set xattr file directory name must prefixed namespace followed example userattr refer hdfs extended attributes user documentation details path path modify name xattr name value xattr value flag xattr set flag ioexception
create overwrite file indicated path returns output stream writing file f file name open createflag gives semantics create see createflag opts file creation options see optionscreateopts progress report progress operation default null permission umask applied permission default fspermissionsgetdefault createparent create missing parent path default create parents the defaults following ss defaults file server implementing target path parameters make sense kinds file system eg localfs ignores blocksize replication checksum buffersize buffersize used fsdataoutputstream blocksize block size file blocks replicationfactor replication blocks checksumparam checksum parameters server default used specified fsdataoutputstream created file accesscontrolexception access denied filealreadyexistsexception file f already exists filenotfoundexception parent f exist createparent false parentnotdirectoryexception parent f directory unsupportedfilesystemexception file system f supported ioexception io error occurred exceptions applicable file systems accessed rpc rpcclientexception exception occurred rpc client rpcserverexception exception occurred rpc server unexpectedserverexception server implementation throws undeclared exception rpc server runtimeexceptions invalidpathexception path f valid
create filecontext specified default uri using specified config defaultfsuri aconf new filecontext specified uri unsupportedfilesystemexception file system specified supported runtimeexception file system specified supported could instantiated login fails
set access time file f path mtime set modification time file number milliseconds since epoch jan 1 1970 value 1 means call set modification time atime set access time file number milliseconds since jan 1 1970 value 1 means call set access time accesscontrolexception access denied filenotfoundexception f exist unsupportedfilesystemexception file system f supported ioexception io error occurred exceptions applicable file systems accessed rpc rpcclientexception exception occurred rpc client rpcserverexception exception occurred rpc server unexpectedserverexception server implementation throws undeclared exception rpc server
list statuses block locations files given path path directory recursive false returns files directory recursive true return files subtree rooted path subtree traversed depthfirst order path file return files status block locations files across symbolic links also returned f path recursive subdirectories need traversed recursively iterator traverses statuses files io exception for example subdirectory gets deleted listing executed next hasnext returned iterator may throw runtimeexception io exception cause accesscontrolexception access denied filenotfoundexception f exist unsupportedfilesystemexception file system f supported ioexception io error occurred exceptions applicable file systems accessed rpc rpcclientexception exception occurred rpc client rpcserverexception exception occurred rpc server unexpectedserverexception server implementation throws undeclared exception rpc server
fully replaces acl files directories discarding existing entries path path modify aclspec list describing modifications must include entries user group others compatibility permission bits ioexception acl could modified
delete paths marked deleteonexit
set working directory wdrelative names such foobar working directory feature provided simply prefixing relative names working dir note different unix wd actually set inode hence setworkingdir follow symlinks etc works better distributed environment multiple independent roots getworkingdirectory return setworkingdir set newwdir new working directory ioexception newwdir one of relative path foobar absolute without scheme foobar fully qualified scheme xxauthfoobar illegal wds relative scheme xxfoobar non existent directory
set permission path f permission new absolute permission umask applied accesscontrolexception access denied filenotfoundexception f exist unsupportedfilesystemexception file system f supported ioexception io error occurred exceptions applicable file systems accessed rpc rpcclientexception exception occurred rpc client rpcserverexception exception occurred rpc server unexpectedserverexception server implementation throws undeclared exception rpc server
list statuses filesdirectories given path path directory f path iterator traverses statuses filesdirectories given path accesscontrolexception access denied filenotfoundexception f exist unsupportedfilesystemexception file system f supported ioexception io error occurred exceptions applicable file systems accessed rpc rpcclientexception exception occurred rpc client rpcserverexception exception occurred rpc server unexpectedserverexception server implementation throws undeclared exception rpc server
check copying srcname dst would overwrite existing file directory srcname file directory copied dst destination copy srcname to overwrite whether its ok overwrite existing file accesscontrolexception access denied ioexception dst existing directory dst existing file overwrite option passed
returns status object describing use capacity file system denoted parh argument p file system multiple partitions use capacity partition pointed specified path reflected f path status obtained null means root partition default file system fsstatus object accesscontrolexception access denied filenotfoundexception f exist unsupportedfilesystemexception file system f supported ioexception io error occurred exceptions applicable file systems accessed rpc rpcclientexception exception occurred rpc client rpcserverexception exception occurred rpc server unexpectedserverexception server implementation throws undeclared exception rpc server
return contentsummary path f f path contentsummary path f accesscontrolexception access denied filenotfoundexception f exist unsupportedfilesystemexception file system f supported ioexception io error occurred exceptions applicable file systems accessed rpc rpcclientexception exception occurred rpc client rpcserverexception exception occurred rpc server unexpectedserverexception server implementation throws undeclared exception rpc server
get delegation tokens file systems accessed given path p path delegations tokens requested renewer account name allowed renew token list delegation tokens ioexception
opens fsdatainputstream indicated path f file name open buffersize size buffer used accesscontrolexception access denied filenotfoundexception file f exist unsupportedfilesystemexception file system f supported ioexception io error occurred exceptions applicable file systems accessed rpc rpcclientexception exception occurred rpc client rpcserverexception exception occurred rpc server unexpectedserverexception server implementation throws undeclared exception rpc server
create fsdataoutputstreambuilder creating overwriting file indicated path f file path create builder for fsdataoutputstreambuilder build fsdataoutputstream upon fsdataoutputstreambuilderbuild invoked builder parameters verified filecontext abstractfilesystemcreate filesystem states modified client expect fsdataoutputstreambuilderbuild throw exceptions createpath enumset createopts
qualsrc qualdst file system qualpath1 fully qualified path qualpath2 fully qualified path
returns next files status block locations accesscontrolexception allowed access next files status locations filenotfoundexception next file exist unsupportedfilesystemexception next files fs unsupported ioexception io errors example namenode avaialbe namenode throws ioexception due error getting status block locations
get xattrs file directory xattrs loggedin user permissions view returned refer hdfs extended attributes user documentation details path path get extended attributes names xattr names map byte describing xattrs file directory ioexception
resolve path following symlinks mount points f resolved fully qualified resolved path filenotfoundexception f exist accesscontrolexception access denied ioexception io error occurred exceptions applicable file systems accessed rpc rpcclientexception exception occurred rpc client rpcserverexception exception occurred rpc server unexpectedserverexception server implementation throws undeclared exception rpc server runtimeexceptions invalidpathexception path f valid
delete snapshot directory path directory tobedeleted snapshot belongs snapshotname name snapshot ioexception io error occurred exceptions applicable file systems accessed rpc rpcclientexception exception occurred rpc client rpcserverexception exception occurred rpc server unexpectedserverexception server implementation throws undeclared exception rpc server
returns target given symbolic link specified link created links path leading final path component resolved transparently f path return target uninterpreted target symbolic link accesscontrolexception access denied filenotfoundexception path f exist unsupportedfilesystemexception file system f supported ioexception given path refer symlink io error occurred
mark path deleted jvm shutdown f existing path delete true deleteonexit successful otherwise false accesscontrolexception access denied unsupportedfilesystemexception file system f supported ioexception io error occurred exceptions applicable file systems accessed rpc rpcclientexception exception occurred rpc client rpcserverexception exception occurred rpc server unexpectedserverexception server implementation throws undeclared exception rpc server
returns true iterator files true iterator files accesscontrolexception allowed access next files status locations filenotfoundexception next file exist unsupportedfilesystemexception next files fs unsupported ioexception io errors example namenode avaialbe namenode throws ioexception due error getting status block locations
returns list abstractfilesystems accessed path list may contain one abstractfilesystems objects case symlinks f path needs resolved list abstractfilesystems accessed path ioexception
renames path src path dst fails src file dst directory fails src directory dst file fails parent dst exist file overwrite option passed argument rename fails dst already exists overwrite option passed argument rename overwrites dst file empty directory rename fails dst nonempty directory note atomicity rename dependent file system implementation please refer file system documentation details src path renamed dst new path rename accesscontrolexception access denied filealreadyexistsexception dst already exists options optionsrenameoverwrite option false filenotfoundexception src exist parentnotdirectoryexception parent dst directory unsupportedfilesystemexception file system src dst supported ioexception io error occurred exceptions applicable file systems accessed rpc rpcclientexception exception occurred rpc client rpcserverexception exception occurred rpc server unexpectedserverexception server implementation throws undeclared exception rpc server
removes default acl entries files directories path path modify ioexception acl could modified
set replication existing file f file name replication new replication true successful accesscontrolexception access denied filenotfoundexception file f exist ioexception io error occurred exceptions applicable file systems accessed rpc rpcclientexception exception occurred rpc client rpcserverexception exception occurred rpc server unexpectedserverexception server implementation throws undeclared exception rpc server
checks user access path mode specifies access checks perform requested permissions granted method returns normally access denied method throws accesscontrolexception default implementation method calls getfilestatuspath checks returned permissions requested permissions note getfilestatus call subject authorization checks typically requires search execute permissions directory paths prefix implementationdefined file system provides richer authorization model such acls may override default implementation checks model instead general applications avoid using method due risk timeofchecktimeofuse race conditions permissions file may change immediately access call returns applications prefer running specific file system actions desired user represented usergroupinformation path path check mode type access check accesscontrolexception access denied filenotfoundexception path exist unsupportedfilesystemexception file system path supported ioexception see specific implementation exceptions applicable file systems accessed rpc rpcclientexception exception occurred rpc client rpcserverexception exception occurred rpc server unexpectedserverexception server implementation throws undeclared exception rpc server
see liststatuspath pathfilter
gets acls files directories path path get remoteiterator returns aclstatus ioexception acl could read
get checksum file f file path file checksum default return value null indicates checksum algorithm implemented corresponding filesystem accesscontrolexception access denied filenotfoundexception f exist ioexception io error occurred exceptions applicable file systems accessed rpc rpcclientexception exception occurred rpc client rpcserverexception exception occurred rpc server unexpectedserverexception server implementation throws undeclared exception rpc server
delete file f path delete recursive path directory set true directory deleted else throws exception case file recursive set either true false accesscontrolexception access denied filenotfoundexception f exist unsupportedfilesystemexception file system f supported ioexception io error occurred exceptions applicable file systems accessed rpc rpcclientexception exception occurred rpc client rpcserverexception exception occurred rpc server unexpectedserverexception server implementation throws undeclared exception rpc server runtimeexceptions invalidpathexception path f invalid
return files match filepattern checksum files results sorted names filename pattern composed regular characters special pattern matching characters are matches single character matches zero characters abc matches single character character set abc ab matches single character character range ab note character a must lexicographically less equal character b a matches single char character set range a note character must occur immediately right opening bracket c removes escapes special meaning character c abcd matches string string set ab cd abcdefh matches string string set ab cde cfh pathpattern glob specifying path pattern array paths match path pattern accesscontrolexception access denied unsupportedfilesystemexception file system pathpattern supported ioexception io error occurred exceptions applicable file systems accessed rpc rpcclientexception exception occurred rpc client rpcserverexception exception occurred rpc server unexpectedserverexception server implementation throws undeclared exception rpc server
create snapshot path directory snapshots taken snapshotname name snapshot snapshot path ioexception io error occurred exceptions applicable file systems accessed rpc rpcclientexception exception occurred rpc client rpcserverexception exception occurred rpc server unexpectedserverexception server implementation throws undeclared exception rpc server
set owner path ie file directory parameters username groupname cannot null f path username null original username remains unchanged groupname null original groupname remains unchanged accesscontrolexception access denied filenotfoundexception f exist unsupportedfilesystemexception file system f supported ioexception io error occurred exceptions applicable file systems accessed rpc rpcclientexception exception occurred rpc client rpcserverexception exception occurred rpc server unexpectedserverexception server implementation throws undeclared exception rpc server runtimeexceptions hadoopillegalargumentexception username groupname invalid
filter filesdirectories given path using usersupplied path filter f path name filter usersupplied path filter array filestatus objects files given path applying filter accesscontrolexception access denied filenotfoundexception f exist unsupportedfilesystemexception file system pathpattern supported ioexception io error occurred exceptions applicable file systems accessed rpc rpcclientexception exception occurred rpc client rpcserverexception exception occurred rpc server unexpectedserverexception server implementation throws undeclared exception rpc server
iterator corrupt files given path may contain duplicates file one corrupt block ioexception
truncate file indicated path indicated size fails path directory fails path exist fails path closed fails new size greater current size f path file truncated newlength size file truncated true file truncated desired newlength immediately available reused write operations append false background process adjusting length last block started clients wait complete proceeding file updates accesscontrolexception access denied filenotfoundexception file f exist unsupportedfilesystemexception file system f supported ioexception io error occurred exceptions applicable file systems accessed rpc rpcclientexception exception occurred rpc client rpcserverexception exception occurred rpc server unexpectedserverexception server implementation throws undeclared exception rpc server
create filecontext using passed config generally better use getfilecontexturi configuration instead one aconf new filecontext unsupportedfilesystemexception file system config supported
create filecontext specified fs default using specified config deffs aconf new filecontext specified fs default
modifies acl entries files directories method add new acl entries modify permissions existing acl entries existing acl entries specified call retained without changes modifications merged current acl path path modify aclspec list describing modifications ioexception acl could modified
set storage policy given file directory path file directory path policyname name target storage policy list supported storage policies retrieved via getallstoragepolicies
list statuses filesdirectories given path path directory f path array contains statuses filesdirectories given path accesscontrolexception access denied filenotfoundexception f exist unsupportedfilesystemexception file system f supported ioexception io error occurred exceptions applicable file systems accessed rpc rpcclientexception exception occurred rpc client rpcserverexception exception occurred rpc server unexpectedserverexception server implementation throws undeclared exception rpc server
process input stat file return file stat directory traverse directory recursive true ignore recursive false symlink resolve symlink first process depending file directory stat input status accesscontrolexception access denied filenotfoundexception file found unsupportedfilesystemexception fs supported ioexception io errors
creates symbolic link existing file exception thrown symlink exits user permission create symlink underlying file system support symlinks symlink permissions ignored access symlink determined permissions symlink target symlinks paths leading final path component resolved transparently final path component refers symlink functions operate symlink itself are deletef deleteonexitf deletes symlink renamesrc dst src refers symlink symlink renamed dst refers symlink symlink overwritten getlinktargetf returns target symlink getfilelinkstatusf returns filestatus object describing symlink functions create mkdir expect final path component exist given path refers symlink exist behave path referred existing file directory functions fully resolve ie follow symlink are open setreplication setowner settimes setworkingdirectory setpermission getfilechecksum setverifychecksum getfileblocklocations getfsstatus getfilestatus exists liststatus symlink targets stored given createsymlink assuming underlying file system capable storing fully qualified uri dangling symlinks permitted filecontext supports four types symlink targets resolves follows given path referring symlink form x fshostablink y path x scheme authority identify file system y path leading final path component link y symlink let y target y x scheme authority y symlink targets may 1 fully qualified uris fshostxabfile resolved according target file system 2 partially qualified uris eg scheme host fsabfile resolved according target file system eg resolving symlink hdfsa results exception hdfs uris must fully qualified symlink filea since hadoops local file systems require partially qualified uris 3 relative paths path resolves ypath eg y resolves hdfshosta path bfile ypath hdfshostbfile 4 absolute paths path resolves xpath eg y resolves hdfshostab path file xpath hdfshostfile target target symbolic link link path created points target createparent true missing parent dirs created false parent must exist accesscontrolexception access denied filealreadyexistsexception file linkcode already exists filenotfoundexception target exist parentnotdirectoryexception parent link directory unsupportedfilesystemexception file system target link supported ioexception io error occurred
remove xattr file directory name must prefixed namespace followed example userattr refer hdfs extended attributes user documentation details path path remove extended attribute name xattr name ioexception
get file system supplied path absorfqpath absolute fully qualified path file system path unsupportedfilesystemexception file system absorfqpath supported ioexception file system absorfqpath could instantiated
create filecontext specified file system using default config defaultfs filecontext specified abstractfilesystem default fs
removes base acl entries files directories entries user group others retained compatibility permission bits path path modify ioexception acl could removed
resolves symbolic links specified path returns new path object
retrieve storage policies supported file system storage policies supported filesystem ioexception
get xattr file directory name must prefixed namespace followed example userattr refer hdfs extended attributes user documentation details path path get extended attribute name xattr name byte xattr value ioexception
query effective storage policy id given file directory path file directory path storage policy give file ioexception
return array filestatus objects whose path names match pathpattern accepted usersupplied path filter results sorted path names return null pathpattern glob path exist return empty array pathpattern glob path matches it pathpattern glob specifying path pattern filter usersupplied path filter array filestatus objects accesscontrolexception access denied unsupportedfilesystemexception file system pathpattern supported ioexception io error occurred exceptions applicable file systems accessed rpc rpcclientexception exception occurred rpc client rpcserverexception exception occurred rpc server unexpectedserverexception server implementation throws undeclared exception rpc server
create filecontext using default config read hadoopconfigcorexml unspecified keyvalues config defaulted coredefaultsxml release jar unsupportedfilesystemexception file system default configuration supported
return file status object represents path path refers symlink filestatus symlink returned behavior equivalent getfilestatus underlying file system support symbolic links f path want information from filestatus object accesscontrolexception access denied filenotfoundexception f exist unsupportedfilesystemexception file system f supported ioexception io error occurred
set verify checksum flag file system denoted path applicable corresponding filesystem supports checksum default doesnt anything verifychecksum f set verifychecksum filesystem containing path accesscontrolexception access denied filenotfoundexception f exist unsupportedfilesystemexception file system f supported ioexception io error occurred exceptions applicable file systems accessed rpc rpcclientexception exception occurred rpc client rpcserverexception exception occurred rpc server unexpectedserverexception server implementation throws undeclared exception rpc server
get xattrs file directory xattrs loggedin user permissions view returned refer hdfs extended attributes user documentation details path path get extended attributes map byte describing xattrs file directory ioexception
set xattr file directory name must prefixed namespace followed example userattr refer hdfs extended attributes user documentation details path path modify name xattr name value xattr value ioexception
copy file src dest see copypath path boolean boolean
filter filesdirectories given list paths using usersupplied path filter files list paths filter filter list statuses files given paths applying filter accesscontrolexception access denied filenotfoundexception file files exist ioexception io error occurred exceptions applicable file systems accessed rpc rpcclientexception exception occurred rpc client rpcserverexception exception occurred rpc server unexpectedserverexception server implementation throws undeclared exception rpc server
opens fsdatainputstream indicated path using default buffersize f file name open accesscontrolexception access denied filenotfoundexception file f exist unsupportedfilesystemexception file system f supported ioexception io error occurred exceptions applicable file systems accessed rpc rpcclientexception exception occurred rpc client rpcserverexception exception occurred rpc server unexpectedserverexception server implementation throws undeclared exception rpc server
filecontext local file system using default config unsupportedfilesystemexception file system fsconstantslocalfsuri supported
return blocklocation given file given offset len nonexistent file regions null returned call helpful dfs returns hostnames machines contain given file hdfs file threereplicated returned array contains elements like blocklocationoffset 0 length blocksize hosts host19866 host29866 host39866 blocklocationoffset blocksize length blocksize hosts host29866 host39866 host49866 file erasurecoded returned blocklocation logical block groups suppose rs32 coded file 3 data units 2 parity units 1 file size less one stripe size say 2 cellsize one blocklocation returned 0 offset actual file size 4 hosts 2 data blocks 2 parity blocks hosting actual blocks 3 file size less one group size greater one stripe size one blocklocation returned 0 offset actual file size 5 hosts 3 data blocks 2 parity blocks hosting actual blocks 4 file size greater one group size 3 blocksize 123 example result like blocklocationoffset 0 length 3 blocksize hosts host19866 host29866host39866host49866host59866 blocklocationoffset 3 blocksize length 123 hosts host19866 host49866 host59866 f get blocklocations file start position byte offset len in bytes block locations given file specified offset len accesscontrolexception access denied filenotfoundexception f exist unsupportedfilesystemexception file system f supported ioexception io error occurred exceptions applicable file systems accessed rpc rpcclientexception exception occurred rpc client rpcserverexception exception occurred rpc server unexpectedserverexception server implementation throws undeclared exception rpc server runtimeexceptions invalidpathexception path f invalid
return true statistic tracked true statistic tracked
serialized form bytes
encode byte value string representation encoding values encoded text strings enclosed double quotes strings encoded hexadecimal base64 prefixed 0x 0s respectively value byte value encoding string string representation value ioexception
decode string representation value check whether its encoded given string begins 0x 0x expresses hexadecimal number given string begins 0s 0s base64 encoding expected given string enclosed double quotes inner string treated text otherwise given string treated text value string representation value byte value ioexception
return string representation object output format hoption false file sizes returned bytes hoption true file sizes returned human readable hoption flag indicating human readable output used string representation object
return header storagetypes storagetypes storage header string
build instance based builder
return true storage type quota set
return true storage type consumption information available
formats size human readable bytes size value formatted humanreadable flag indicating human readable string representation size
convert boolean attributes set flags acl see attrflagshasacl crypt see attrflagshascrypt ec see attrflagshasec sn see attrflagssnapshotenabled converted set flags
constructor file systems symbolic links supported
copy constructor filestatus copy
write instance encoded protobuf stream output stream pbhelperconvertfilestatus use pbhelper protobuf serialization directly
old interface instead use explicit filestatusisfile filestatusisdirectory filestatusissymlink true directory use filestatusisfile filestatusisdirectory filestatusissymlink instead
compare object equal another object o object compared true two file status path name false not
returns hash code value object defined hash code path name hash code value path name
contents symbolic link
sets permission permission permission null default value set
compare filestatus another filestatus method added back hadoop14683 keep binary compatibility o filestatus compared negative integer zero positive integer object less than equal to greater specified object classcastexception specified object filestatus
read instance encoded protobuf stream input stream pbhelperconvertfilestatus use pbhelper protobuf serialization directly
return true algorithms values same
expand leftmost outer curly bracket pair containing slash character filepattern filepatternwithoffset expanded file patterns ioexception
expand globs given filepattern collection file patterns expanded set file pattern slash character curly bracket pair examples filepattern expanded filepattern expanded file pattern ab ab ab ab pabcds pabs pcds abcdef ab cd ef abcdef abef cdef abbcdef abb abcd abef abcd abcd filepattern expanded file patterns ioexception
finds index leftmost opening curly bracket containing slash character filepattern filepattern index leftmost opening curly bracket containing slash character 1 bracket ioexception
set compile glob pattern glob glob pattern string
get delay event happen
renew replace delegation token file system called action queue ioexception
add renew action queue
remove associated renew action queue ioexception
testing purposes
return true statistic tracked true statistic tracked
constructor used builder overriding classes implement this
keeps track disk usage path path check disk usage interval refresh disk usage interval jitter randomize refresh interval timing amount actual interval chosen uniformly intervaljitter intervaljitter initialused use value next refresh ioexception fail refresh disk usage
delete given path file directory p path delete recursive delete subdirectories true file directory contents deleted ioexception p nonempty recursive false
creates specified directory hierarchy treat existence error
note returned list sorted given order due reliance javas filelist api
convert path file
sets paths last modified time last access time given valid times mtime modification time set only less zero atime access time set only less zero ioexception setting times fails
public filestatus methods delegate function turn either call new stat based implementation deprecated methods based platform support f path stat dereference whether dereference final path component symlink filestatus f ioexception
use command chown set owner
return filestatus representing given path path refers symlink return filestatus representing link rather object link refers to
deprecated remains legacy support removed stat gains support windows operating systems
calls platforms native stat1 implementation get file metadata permissions user group atime mtime etc works around lack lstat2 java 6 currently stat class used supports linux freebsd old deprecatedgetfilelinkstatusinternalpath implementation deprecated remains os support added f file stat dereference whether dereference symlinks filestatus f ioexception
hook implement support pathhandle operations stat referent target filesystem opts constraints determine validity pathhandle reference
load file permission information unix symbol rwxrwxrwx sticky bit info improve peformance give priority native stat call first try get permission information using native jni call fall back use non native processbuilder call case native lib loaded native call successful
set working directory given directory
use command chmod set permission
construct fsstatus object using specified statistics
parse first argument owner group ownerstr string describing new ownership
register permission related commands factory factory command factory
returns jars directory useful expanding wildcard path return jars directory use classpath path path directory path may include wildcard list jars urls empty list jars directory exist
returns target given symlink returns empty string given path refer symlink error accessing symlink f file representing symbolic link target symbolic link empty string error symlink
wrapper filelist javaio api returns null dir directory io error instead null check everywhere filelist used add utility api get around problem majority cases prefer ioexception thrown dir directory listing performed list file names empty string list exception accessdeniedexception unreadable directory exception ioexception invalid directory bad disk
platform independent implementation filesetwritableboolean filesetwritable work expected windows f input file writable true success false otherwise
delete contents directory directory itself return false directory may partiallydeleted dir symlink directory contents actual directory pointed dir deleted trygrantpermissions true try grant rwx permissions underlying directories trying delete contents
wrapper filelistfiles javaio api returns null dir directory io error instead null check everywhere filelistfiles used add utility api get around problem majority cases prefer ioexception thrown dir directory listing performed list files empty list exception ioexception invalid directory bad disk
change permissions file directory recursively needed filename name file whose permissions change perm permission string recursive true permissions changed recursively exit code command ioexception
run command send contents input stream it inputstream input stream forward shell command command shell command run ioexception read write failed interruptedexception command interrupted executionexception task submit failed
recursively delete directory fs filesystem path present dir directory recursively delete ioexception use filesystemdeletepath boolean
takes input dir returns du local directory basic implementation dir input dir get disk space local dir total disk space input local directory
given tar file input untar file untar directory passed second parameter utility untar tar files targztgz files infile tar file input untardir untar directory untar tar file ioexception
set permissions required value uses java primitives instead forking group other f file change permission new permissions ioexception
given stream input unzip unzip directory passed second parameter inputstream zip file input todir unzip directory unzip zip file ioexception exception occurred
given file input unzip unzip directory passed second parameter infile zip file input unzipdir unzip directory unzip zip file ioexception io exception occurred
given tar file input untar file untar directory passed second parameter utility untar tar files targztgz files inputstream tar file input untardir untar directory untar tar file gzipped input stream gzipped todo use magic number pusbackinputstream identify ioexception exception occurred interruptedexception command interrupted executionexception task submit failed
create soft link src destination local disk hdfs support this windows symlink creation fails due security setting log warning return code case 2 target target symlink linkname symlink 0 success
convert array filestatus array path stats null return path stats array filestatus objects path default path return stats null array paths corresponding input
copy filesystem files local files
platform independent implementation filecanexecute f input file unix filecanexecute windows true process execute access path
convert osnative filename path works shell file filename convert makecanonicalpath whether make canonical path file passed unix pathname ioexception windows problems subprocess
copy local files filesystem
copy filesystem files local files
copy files filesystems
create jar file given path containing manifest classpath references specified entries platforms may upper limit command line length example maximum command line length windows 8191 characters length classpath may exceed this work around limitation use method create small intermediate jar manifest contains full classpath returns absolute path new jar caller may set classpath new process environment variable evaluation supported within jar manifest method expands environment variables inserting classpath entries manifest method parses environment variables according platformspecific syntax var windows var otherwise windows environment variables caseinsensitive example var var evaluate value specifying classpath jar manifest support wildcards method expands wildcards internally classpath entry ends translated files path extension jar jar inputclasspath string input classpath bundle jar manifest pwd path working directory save jar targetdir path jar execution working dir callerenv map string callers environment variables use expansion string absolute path new jar position 0 unexpanded wild card entry path position 1 ioexception io error writing jar file
change permissions filename filename name file change perm permission string exit code command ioexception interruptedexception
register files recursively deleted exit file filedirectory deleted
convert osnative filename path works shell avoids script injection attacks file filename convert unix pathname ioexception windows problems subprocess
delete directory contents return false directory may partiallydeleted 1 dir symlink file symlink deleted file pointed symlink deleted 2 dir symlink directory symlink deleted directory pointed symlink deleted 3 dir normal file deleted 4 dir normal directory dir contents recursively deleted dir file directory deleted trygrantpermissions true permissions modified delete file true success false failure
platform independent implementation filesetexecutableboolean filesetexecutable work expected windows note revoking execute permission folders behavior windows unix platforms creating deleting renaming file within folder still succeed windows f input file executable true success false otherwise
create tmp file base file basefile base file tmp prefix file name prefix tmp isdeleteonexit true tmp deleted vm exits newly created tmp file exception ioexception tmp file cannot created javaiofilecreatetempfilestring string file javaiofiledeleteonexit
copy files filesystems
platform independent implementation filecanread f input file unix filecanread windows true process read access path
platform independent implementation filesetreadableboolean filesetreadable work expected windows f input file readable true success false otherwise
move src file name specified target src source file target target file exception ioexception operation fails
copy files filesystems
convert array filestatus array path stats array filestatus objects array paths corresponding input
set ownership file directory user name group name cannot null file file change username new user owner name groupname new group owner name ioexception
platform independent implementation filecanwrite f input file unix filecanwrite windows true process write access path
constructs exception specified detail message path invalid path reason reason path invalid
report checksum error file system f file name containing error stream open file inpos position beginning bad data file sums stream open checksum file sumspos position beginning bad data checksum file retry necessary
implement deletepath boolean checksum file system
rename filesdirs
set replication existing file implement abstract setreplication filesystem src file name replication new replication ioexception true successful false file exist directory
set whether verify checksum
true iff named path directory note avoid using method instead reuse filestatus returned getfilestatus liststatus methods
skips discards n bytes data input stream skip method skips smaller number bytes reaching end file n bytes skipped actual number bytes skipped returned n negative bytes skipped n number bytes skipped actual number bytes skipped exception ioexception io error occurs checksumexception chunk skip corrupted
opens fsdatainputstream indicated path f file name open buffersize size buffer used
calculated length checksum file bytes size length data file bytes bytespersum number bytes checksum block number bytes checksum file
return true iff file checksum file name
seek given position stream next read position this method allow seek past end file produces ioexception pos postion seek to exception ioexception io error occurs seeks eof checksumexception chunk seek corrupted
check exists f source file
main simple utility methods argv command arguments exception upon error
run
performs necessary cleanup ioexception upon error
returns true specified string considered valid path part uri file system default implementation enforces rules hdfs subclasses may override method implement specific validation rules specific file systems src string source filename check path part uri boolean true specified string considered valid
check uris scheme matches uri supportedscheme
gets acls files directories path path get remoteiterator returns aclstatus ioexception acl could read
get xattr names file directory xattr names loggedin user permissions view returned refer hdfs extended attributes user documentation details path path get extended attributes map byte describing xattrs file directory ioexception
get xattrs file directory xattrs loggedin user permissions view returned refer hdfs extended attributes user documentation details path path get extended attributes names xattr names map byte describing xattrs file directory ioexception
specification method matches filecontextrenamesnapshotpath string string
specification method matches filecontextlistlocatedstatuspath except path f must file system hdfs implementation blocklocation returned locatedfilestatus different formats replicated erasure coded file please refer filesystemgetfileblocklocationsfilestatus long long details
specification method matches filecontextliststatuspath except path f must file system
get xattr file directory name must prefixed namespace followed example userattr refer hdfs extended attributes user documentation details path path get extended attribute name xattr name byte xattr value ioexception
specification method matches filecontextaccesspath fsaction except unresolvedlinkexception may thrown symlink encountered path
create file system instance specified uri using conf conf used find class name implements file system conf also passed file system configuration uri uri file system conf configuration file system returns file system given uri unsupportedfilesystemexception file system uri found
removes default acl entries files directories path path modify ioexception acl could modified
retrieve storage policy given file directory src file directory path storage policy give file ioexception
get one delegation tokens associated filesystem normally file system returns single delegation token file system manages multiple file systems underneath could return set delegation tokens file systems manages renewer account name allowed renew token list delegation tokens delegation tokens supported return list size zero ioexception
specification method matches filecontextopenpath except path f must file system
return fullyqualified path path f resolving path internal symlinks mount point p path resolved fully qualified path filenotfoundexception accesscontrolexception ioexception unresolvedlinkexception symbolic link path cannot resolved internally
specification method matches filecontexttruncatepath long except path f must file system
main factory method creating file system get file system uris scheme authority scheme uri determines configuration property name fsabstractfilesystemschemeimpl whose value names abstractfilesystem class entire uri conf passed abstractfilesystem factory method uri file system created conf passed file system impl file system given uri unsupportedfilesystemexception file system uri supported
return current users home directory file system default implementation returns useruser current users home directory
set xattr file directory name must prefixed namespace followed example userattr refer hdfs extended attributes user documentation details path path modify name xattr name value xattr value ioexception
check path belongs filesystem path fully qualified uri scheme authority matches file system otherwise path must slashrelative name invalidpathexception path invalid
remove xattr file directory name must prefixed namespace followed example userattr refer hdfs extended attributes user documentation details path path remove extended attribute name xattr name ioexception
specification method matches filecontextgetfilelinkstatuspath except unresolvedlinkexception may thrown symlink encountered path leading final path component file system support symlinks behavior equivalent abstractfilesystemgetfilestatuspath
make path fully qualified file system path qualified path
removes base acl entries files directories entries user group others retained compatibility permission bits path path modify ioexception acl could removed
get xattrs file directory xattrs loggedin user permissions view returned refer hdfs extended attributes user documentation details path path get extended attributes map byte describing xattrs file directory ioexception
specification method matches filecontextdeletesnapshotpath string
iterator corrupt files given path may contain duplicates file one corrupt block ioexception
retrieve storage policies supported file system storage policies supported filesystem ioexception
modifies acl entries files directories method add new acl entries modify permissions existing acl entries existing acl entries specified call retained without changes modifications merged current acl path path modify aclspec list describing modifications ioexception acl could modified
constructor called subclasses uri file system supportedscheme scheme supported implementor authorityneeded true theuri must authority false uri must null authority urisyntaxexception uri syntax error
set storage policy given file directory path file directory path policyname name target storage policy list supported storage policies retrieved via getallstoragepolicies
prints statistics file systems
specification method matches filecontextcreatesnapshotpath string
specification method matches filecontextcreatesymlinkpath path boolean
specification method matches filecontextcreatepath enumset optionscreateopts except path f must fully qualified permission absolute ie umask applied
create object given class initialize conf theclass class object created conf configuration new object
fully replaces acl files directories discarding existing entries path path modify aclspec list describing modifications must include entries user group others compatibility permission bits ioexception acl could modified
get uri file system based given uri path query part given uri stripped default file system port used form uri uri filesystem uri authorityneeded true authority cannot null uri false authority must null defaultport default port use port specified uri uri file system urisyntaxexception uri syntax error
get statistics particular file system uri used key lookup statisticstable scheme authority part uri used statistics object
set xattr file directory name must prefixed namespace followed example userattr refer hdfs extended attributes user documentation details path path modify name xattr name value xattr value flag xattr set flag ioexception
get pathpart pathname checks uri matches file system pathpart valid name p path pathpart path p
specification method matches filecontextgetfsstatuspath except path f must file system
specification method matches filecontextrenamepath path optionsrename except path f must file system
specification method matches filecontextrenamepath path optionsrename except path f must file system
unset storage policy set given file directory src file directory path ioexception
partially resolves path used symlink resolution fslinkresolver differs similarly named method filecontextgetlinktargetpath ioexception subclass implementations may throw ioexception
removes acl entries files directories acl entries retained path path modify aclspec list describing entries remove ioexception acl could modified
returns crc type
create md5filechecksum
like readbyte int int provide dest buffer read data discarded len maximum number bytes read number bytes read ioexception io error occurs
constructor file name file read numofretries number read retries checksumerror occurs sum type checksum engine chunksize maximun chunk size checksumsize number byte checksum
read one checksumverified byte next byte data 1 end stream reached exception ioexception io error occurs
seek given position stream next read position this method may seek past end file produces exception attempt read stream result 1 indicating end file pos position seek to exception ioexception io error occurs checksumexception chunk seek corrupted
constructor file name file read numofretries number read retries checksumerror occurs
utility function tries read len bytes stm stm input stream buf destination buffer offset offset store data len number bytes read actual number bytes read ioexception io error
read checksum verified bytes byteinput stream specified byte array starting given offset method implements general contract corresponding inputstreamreadbyte int int read method inputstream class additional convenience attempts read many bytes possible repeatedly invoking read method underlying stream iterated read continues one following conditions becomes true specified number bytes read read method underlying stream returns 1 indicating endoffile first read underlying stream returns 1 indicate endoffile method returns 1 otherwise method returns number bytes actually read b destination buffer offset start storing bytes len maximum number bytes read number bytes read 1 end stream reached exception ioexception io error occurs checksumexception checksum error occurs
fills buffer chunk data mark supported method assumes data buffer already read in hence pos count
convert checksum byte array long deprecated since 022 since longer use class
set checksum related parameters verifychecksum whether verify checksum sum type checksum use maxchunksize maximun chunk size checksumsize checksum size
skips discards n bytes data input stream this method may skip bytes remaining backing file produces exception number bytes skipped may include number bytes beyond eof backing file attempting read stream skipping past end result 1 indicating end file if n negative bytes skipped n number bytes skipped actual number bytes skipped exception ioexception io error occurs checksumexception chunk skip corrupted
validation code available use subclasses position position negative eof exception raised buffer destination buffer offset offset within buffer length length bytes read eofexception position negative indexoutofboundsexception isnt space amount data requested illegalargumentexception arguments invalid
initialize using copy bytes serialized handle handle pathhandle preserve serialized form
store reference given bytes serialized form fd serialized bytes
use initializeconfiguration filesystem instead
utility method validate uploadids uploadid illegalargumentexception
return protocol scheme filesystem file
moves files bad file directory device storage reused
translate absolute path list path components merge double slashes single slash here posix root path ie get entry list
implemented
initialize har filesystem per har archive archive home directory top level directory filesystem contains har archive careful method want go creating new filesystem instances per call pathgetfilesystem uri har harunderlyingfsschemehostportarchivepath hararchivepath assumes underlying filesystem used case specified
used delegation token related functionality must delegate underlying file system
implemented
return protocol scheme filesystem har
get filestatuses children given directory reads index file reads line line get statuses children directory brute force way getting filestatuses parent parent path directory statuses list add children filestatuses
implemented
combine status stored index underlying status h status stored index cache caching underlying file statuses combined file status ioexception
implemented
decode raw uri get underlying uri rawuri raw har uri filtered uri underlying filesystem
constructors har input stream fs underlying filesystem p path underlying filesystem start start position part file length length valid data part file bufsize buffer size ioexception
constructor create harfilesystem underlying filesystem fs underlying file system
reset implemented
return top level archive path
null since checksum algorithm implemented
get block locations underlying fs fix offsets lengths file input file status get block locations start start desired range contained file len length desired range block locations segment file ioexception
implemented
return total size files specified path
create har specific auth harunderlyingfsport underlyinguri uri underlying filesystem har specific auth
implemented
implementing position readable
implemented
implemented
returns uri filesystem uri form harunderlyingfsschemahostportpathintheunderlyingfs
returns har input stream fakes end file reads index files get part file name size start file
return top level archive
return filestatus files har archive permission returned archive index files permissions persisted creating hadoop archive f path har filesystem filestatus ioexception
position readable again
copies file har filesystem local file
implemented
method returns path inside har filesystem relative path inside har filesystem path fully qualified path har filesystem relative path filesystem
liststatus returns children directory looking index files
fix offset length block locations note method modifies original array locations block locations har part file start start desired range contained file len length desired range fileoffsetinhar offset desired file har part file block locations fixed offset length
used delegation token related functionality must delegate underlying file system
implement policy canunbufferunbuffer input stream
returns hash code value object defined hash code path name hash code value path name
constructor length files length isdir path directory blockreplication files replication factor blocksize files block size modificationtime files modification time accesstime files access time permission files permission owner files owner group files group symlink symlink path symbolic link path paths qualified name locations files block locations
constructor stat file status locations files block locations
compare object equal another object o object compared true two file status path name false not
constructor length files length isdir path directory blockreplication files replication factor blocksize files block size modificationtime files modification time accesstime files access time permission files permission owner files owner group files group symlink symlink path symbolic link path paths qualified name hasacl entity associated acls isencrypted entity encrypted iserasurecoded entity erasure coded locations files block locations
constructor length files length isdir path directory blockreplication files replication factor blocksize files block size modificationtime files modification time accesstime files access time permission files permission owner files owner group files group symlink symlink path symbolic link path paths qualified name attr attribute flags see filestatusattrflags locations files block locations
compare filestatus another filestatus o filestatus compared negative integer zero positive integer object less than equal to greater specified object
return fullyqualified version given symlink target scheme authority partially fullyqualified paths returned unmodified pathuri uri filesystem pathwithlink pathwithlink path contains symlink target symlinks absolute target fully qualified version target
performs operation specified next function calling repeatedly symlinks given path resolved fc filecontext used access file systems path path resolve symlinks on generic type determined implementation next ioexception
constructor deprecated contentsummarybuilder constructor implicitly set spaceconsumed length spaceconsumed length must set explicitly contentsummarybuilder
return string representation object output format qoption false output directory count file count content size qoption true output quota remaining quota well qoption flag indicating quota needs printed string representation object
return string representation object output format description options tostringboolean boolean boolean boolean list qoption flag indicating quota needs printed hoption flag indicating human readable output used toption flag indicating display quota storage types types storage types display string representation object
formats size human readable bytes size value formatted humanreadable flag indicating human readable string representation size
constructor deprecated contentsummarybuilder
constructor contentsummarybuilder
return string representation object output format qoption false output directory count file count content size qoption true output quota remaining quota well hoption false file sizes returned bytes hoption true file sizes returned human readable toption true display quota storage types toption false logic tostringbooleanboolean xoption false output includes calculation snapshots xoption true output excludes calculation snapshots qoption flag indicating quota needs printed hoption flag indicating human readable output used toption flag indicating display quota storage types xoption flag indicating calculation snapshots included output types storage types display string representation object
create compositecrcfilechecksum
get iterator use iterate throw global storage statistics objects
reset global storage statistics
create return storagestatistics object given name name storage statistics object name provider object create new storagestatistics object needed storagestatistics object given name runtimeexception storagestatisticsprovider provides null object new storagestatistics object wrong name
override hook duhelper class
get instance configured trashpolicy based value configuration parameter fstrashclassname conf configuration used fs file system used home home directory instance trashpolicy use getinstanceconfiguration filesystem instead
get instance configured trashpolicy based value configuration parameter fstrashclassname conf configuration used fs file system used instance trashpolicy
create fileencryptioninfo suite ciphersuite used encrypt file edek encrypted data encryption key edek file iv initialization vector iv used encrypt file keyname name key used encryption zone ezkeyversionname name keyversion used encrypt encrypted data encryption key
frozen version tostring backward compatible backward compatibility needed use tostring provides info supposed evolve dont change method except major revisions note currently method used cli backward compatibility
returns qualified path object defaulturi path missing scheme authority components borrow uri workingdir path isnt absolute treat relative working directory path contains scheme authority absolute new path includes path authority fully qualified
returns number elements path number elements path
returns true path component ie directory uri absolute whether uris path absolute
returns final component path final component path
returns qualified path object filesystems working directory fs target filesystem qualified path object filesystems working directory use makequalifieduri path
construct path string path strings uris unescaped elements additional normalization pathstring path string
test whether path uses scheme relative pathnames scheme relative path illegal
returns true path component ie directory uri absolute and scheme null and authority null whether path absolute uri scheme authority parts
validate contents deserialized path defend malicious object streams invalidobjectexception theres uri
merge 2 paths second path appended relative first returned path scheme authority first path windows drive specification second path discarded path1 first path path2 second path appended relative path1 merged path
construct path components scheme scheme authority authority path path
returns parent path null root parent path null root
return version given path without scheme information path source path copy path without scheme information
determine whether given path string represents absolute path windows eg cab absolute path cab not pathstring path string evaluate slashed true given path prefixed true supplied path looks like absolute path windows drivespecifier
normalize path string use nonduplicated forward slashes path separator remove trailing path separators scheme uri scheme used deduce whether replace backslashes path schemespecific part normalized path string
create new path based child path resolved parent path parent parent path child child path
serialized bytes
path return full path including chroot
strip root path p fully qualified path p remaining path without beginning
construct mergelink nfly
construct simple link ie mergelink
create inode tree specified mounttable specified config config mount table keys prefixed fsconstantsconfigviewfsprefix viewname name mount table null use defaultmt name unsupportedfilesystemexception urisyntaxexception filealreadyexistsexception ioexception
resolve pathname p relative root inodedir p input path resolvelastcomponent resolveresult allows resolution remaining path filenotfoundexception
get target link merge link returned separated uri list
get value home dir conf value specified mount table conf conf mounttablename mount table home dir value null variable conf
add config variable homedir specified mount table conf add conf homedir home dir path starting slash
add linkmerge config specified mount table conf mounttablename targets
conf mounttablename src settings targets
add linkmergeslash config default mount table conf target
add linkfallback config specified mount table conf mounttablename target
add linkmergeslash config specified mount table conf mounttablename target
get config variable prefix default mount table config variable prefix default mount table
add link config default mount table conf add link conf src src path name target target uri link
add config variable homedir default mount table conf add conf homedir home dir path starting slash
add link config specified mount table conf add link conf mounttablename src src path name target target uri link
add linkfallback config default mount table conf target
category read f file name open buffersize size buffer used input stream according nfly flags closest recent ioexception filenotfoundexception iff destinations generate exception
initializes nfly mountpoint viewfs uris destinations replicate writes conf file system configuration settings commaseparated list kv pairs nfly filesystem ioexception
creates new nfly instance uris list uris mount point conf configuration object minreplication minimum copies commit write op nflyflags modes readmostrecent ioexception
returns closest nonfailing destinations result f given path array file statuses according nfly modes filenotfoundexception ioexception
iterate available nodes proximity order attempt repair filenotfound nodes mrnodes work set copy nodes f path repair open buffersize buffer size read rpc closestmost recent replica stream repair
get fsstatus viewfsmountpoints matching path given viewfilesystem say viewfilesystem following mount points configured 1 hdfsnn0hostportsales mounted deptsales 2 hdfsnn1hostportmarketing mounted deptmarketing 3 hdfsnn2hostportengusa mounted deptengusa 4 hdfsnn3hostportengasia mounted deptengasia config sample list paths matching mount points getting fsstatus path description matching mountpoint root viewfilesystem lists 1 2 3 4 mount points dept mount point valid 1 2 3 4 internal dir mount tree resolved path deptsales matches mount point 1 deptsalesindia path valid mount point 1 resolved deptsales depteng mount point valid 1 2 3 4 internal dir mount tree resolved path erp doesnt match leads valid mount points none filesystem viewfilesystem mount point exists path uri fsstatus requested map viewfsmountpoint fsstatus
update fsstatus given mount point viewfilesystem mountpointmap mountpoint path
constructor signature needed abstractfilesystemcreatefilesystemuri configuration theuri must viewfs conf ioexception urisyntaxexception
retrieve storage policy given file directory src file directory path storage policy give file ioexception
path full path including chroot
strip root path p fully qualified path p remaining path without beginning ioexception p prefixed root
called new filesystem instance constructed name uri whose authority section names host port etc filesystem conf configuration
constructor uri base file system conf configuration ioexception
constructor signature needed filesystemcreatefilesystemuri configuration constructor called initialize called ioexception
make path absolute get pathpart pathname checks uri matches file system pathpart valid name p path pathpart path p
called new filesystem instance constructed theuri uri whose authority section names host port etc filesystem conf configuration
return total size files constantsconfigviewfslinkmergeslash supported valid mount point else throw notinmountpointexception ioexception
return protocol scheme filesystem viewfs
get trash root directory current user path specified deleted path trash root path determined trash root path
convenience constructor apps call directly theuri must viewfilesystem conf ioexception
get trash roots current user users allusers return trash roots users true trash root directories
constructor signature needed abstractfilesystemcreatefilesystemuri configuration theuri must localfs conf ioexception urisyntaxexception
constructor signature needed abstractfilesystemcreatefilesystemuri configuration theuri must localfs conf ioexception urisyntaxexception
constructor signature needed abstractfilesystemcreatefilesystemuri configuration theuri must localfs conf ioexception urisyntaxexception
convenience method dont open new connection using method within another method otherwise every api invocation incurs overhead openingclosing tcp connection ioexception io problems filenotfoundexception
set ftpclients data connection mode based configuration valid values activelocaldataconnectionmode passivelocaldataconnectionmode passiveremotedataconnectionmode defaults activelocaldataconnectionmode client conf ioexception
probe path parent another parent parent path child possible child path true parents path matches start childs
optional operation yet supported
convert file information ftpfile filestatus object ftpfile parentpath filestatus
convenience method dont open new connection using method within another method otherwise every api invocation incurs overhead openingclosing tcp connection
get default port ftpfilesystem default port
convenience method dont open new connection using method within another method otherwise every api invocation incurs overhead openingclosing tcp connection client src dst ioexception
convenience method dont open new connection using method within another method otherwise every api invocation incurs overhead openingclosing tcp connection
connect ftp server using configuration parameters ftpclient instance ioexception
resolve given working directory workdir path
convenience method dont open new connection using method within another method otherwise every api invocation incurs overhead openingclosing tcp connection
stream obtained via call must closed using apis class else invocation block
convenience method dont open new connection using method within another method otherwise every api invocation incurs overhead openingclosing tcp connection
logout disconnect given ftpclient client ioexception
return protocol scheme filesystem ftp
convenience method dont open new connection using method within another method otherwise every api invocation incurs overhead openingclosing tcp connection
set ftps transfer mode based configuration valid values streamtransfermode blocktransfermode compressedtransfermode defaults blocktransfermode conf
returns list pathdata objects items contained given directory list pathdata objects children ioexception anything else goes wrong
test parent directory exists boolean indicating parent exists ioexception upon unexpected error
ensure file exists directory typerequirement set desired requirement pathioexception file doesnt exist type match specified typerequirement
creates new object child entry directory child basename appended objects path pathdata child ioexception object exist directory
check path represents directory determined basename path ending directory separator boolean represents directory
creates object wrap given parameters fields string used create path recorded since path object return exactly string used initialize it fs filesystem pathstring string path stat filestatus may null path doesnt exist
get filestatus info ignorefnf true stat null path doesnt exist filestatus given path ioexception anything goes wrong
normalize given windows path string following 1 adds file scheme absolute paths 2 ensures schemespecific part starts per rfc2396 3 replaces backslash path separators forward slashes pathstring path string supplied user normalized absolute path string returns input string windows absolute path
returns remoteiterator pathdata objects items contained given directory remote iterator pathdata objects children ioexception anything else goes wrong
construct uri string unescaped special characters nonstandard semantics eg custom parsing needed prevent misbehavior pathstring input path string form uri
validates given windows path pathstring string path supplied user true uri scheme present pathstring inferred false otherwise ioexception anything goes wrong
updates pathss file status updated filestatus ioexception anything goes wrong
get path local file file representing local path illegalargumentexception thisfs localfilesystem
expand given path glob pattern nonexistent paths throw exception creation commands like touch mkdir need create them stat field null path exist pattern pattern expand glob conf hadoop configuration list pathdata objects pattern glob exist list contain single pathdata null stat ioexception anything else goes wrong
given child directory use directorys path childs basename construct string child preserves relative paths since path fully qualify childpath path contained within directory string path relative directory
returns printable version path either path given commandline full path string path
allows commands dont use paths handle raw arguments default behavior expand arguments via expandargumentslinkedlist pass resulting list processargumentslinkedlist args list argument strings ioexception
iterates given expanded paths invokes processpathpathdata element recursive true postvisit dfs directories parent called via recurse parent dir else null items list pathdata objects process ioexception anything goes wrong
get public static class field field field retrieve string field
source path execute command 0 runs successfully 1 fails
display error string prefaced command name also increments error count command result nonzero exit code message error message display
processes pathdata item calling processpathargumentpathdata processnonexistentpathpathdata item item pathdata item process ioexception anything goes wrong
last chance modify argument going possibly recursive processpathspathdata pathdata processpathpathdata loop ex ls du use expand directories item pathdata representing path exists ioexception anything goes wrong
display exception prefaced command name also increments error count command result nonzero exit code e exception display
gets directory listing path invokes processpathspathdata pathdata item pathdata directory recurse ioexception anything goes wrong
expands list arguments pathdata objects default behavior call expandargumentstring element default globs argument loop catches ioexceptions increments error count displays exception args strings expand pathdata objects list pathdata objects arguments ioexception anything goes wrong
short usage suitable synopsis name options
iterates given expanded paths invokes processpathpathdata element recursive true postvisit dfs directories parent called via recurse parent dir else null itemsiterator iterator pathdata objects process ioexception anything goes wrong
invokes command handler default behavior process options expand arguments process argument run processoptionslinkedlist processrawargumentslinkedlist expandargumentslinkedlist expandargumentstring processargumentslinkedlist processargumentpathdata processpathargumentpathdata processpathspathdata pathdata processpathpathdata processnonexistentpathpathdata commands chose implement processoptionslinkedlist processpathpathdata argv list command line arguments exit code command illegalargumentexception called invalid arguments
expand given argument list pathdata objects default behavior expand globs commands may override perform expansions argument arg string pattern expand list pathdata objects ioexception anything goes wrong
long usage suitable help output text usage
name command first try use assigned name else fallback commands preferred name name command
processes commands list expanded arguments processargumentpathdata invoked item list loop catches ioexceptions increments error count displays exception args list pathdata process ioexception anything goes wrong
constructor
register command classes used fs subcommand factory register class
use commandrunstringargv
display paths files directories true display paths only false display fields
directory contents displayed size order true size order false default order
contents directory shown directory true directory contents false directory
file sizes returned human readable format rather bytes true human readable false bytes
compute column widths rebuild format string items find max field width column
directory contents displayed reverse order true reverse order false default order
initialise comparator used sorting files multiple options selected order chosen following precedence modification time or access time requested file size file name
directory contents displayed mtime order true mtime order false default order
access time used rather modification time true use access time false use modification time
wait files waitlist length equal newlength
wait files waitlist replication number equal rep
close stream
read single byte stream
add row objects table objects values
create table wo headers columns number columns
render table stream printstream output
create table headers headers list headers
add new row usages table given filesystem uri uri filesystem uri fsstatus filesystem status mountedonpath filesystem mounted path
prints single extended acl entry mask restricts permissions entry also prints restricted version effective permissions mask applies named entries also unnamed group entry aclstatus aclstatus path fsperm fspermission path entry aclentry extended acl entry print
prints acl entries single scope aclstatus aclstatus path fsperm fspermission path entries list containing acl entries file
returns acl entries use api call given path recursive operation returns specified acl entries item directory access acl entries item file nonrecursive operation returns specified acl entries item pathdata path check list acl entries use api call
check source target paths ensure either reservedraw neither reservedraw neither src target reservedraw return false indicating preserve raw xattrs srctarget reservedraw return true indicating raw xattrs preserved one srctarget reservedraw throw exception src source path check fullyqualified path relative target target path check fullyqualified path relative true raw xattrs preserved pathoperationexception one srctarget reservedraw
direct write disabled copies stream contents temporary file copying copy successful temporary file renamed real path else temporary file deleted direct write enabled creation temporary file skipped input stream copy target store contents stream ioexception copy fails
copies source file target src item copy target copy item ioexception copy fails
add file attributes need preserved method may called multiple times add attributes fileattribute attribute add one time
preserve attributes source target method calls shouldpreservefileattribute check attribute preserve src source preserve target preserve attributes preserverawxattrs true raw xattrs preserved ioexception fails preserve attributes
last arg expected remote path one argument given destination remote users directory args list arguments pathioexception path doesnt exist matches many times
true last modified time last access time owner group permission information source file preserved far target filesystem implementation allows
called source target destination pair src operation dst operation ioexception anything goes wrong
last arg expected local path one argument given destination current directory args list arguments
gets registered commands sorted list command names
get instance requested command cmdname name command lookup conf hadoop configuration command null command unknown
invokes static void registercommandscommandfactory given class method abstracts contract factory command class assume directly invoking registercommands given class effect registrarclass class allow opportunity register
register given object handling given list command names avoid calling method use addclassclass string whenever possible avoid startup overhead excessive command object instantiations method intended handling nested nonstatic classes reusable namely helpusage cmdobject object implementing command names names one command names invoke class
show specified storage types specified storagetypes
constructor invoke via fsshell cmd count command pos starting index arguments conf configuration
quotas get shown part report quotas shown true otherwise false
sizes shown human readable format rather bytes true human readable format
print quota storage types true enables quota storage types
parse parameters starting given position consider using variant directly takes list args array input arguments pos position starts parse list parameters
add option value option option name
parse parameters given list args list destructively modified remove options args list input arguments
use replacement since name unused parameter name command never used min see replacement max see replacement possibleopt see replacement commandformatint int string
simple parsing command line arguments min minimum arguments required max maximum arguments permitted possibleopt list allowed switches
returns options set set enabled options
get instance requested expression expressionname name command lookup conf hadoop configuration expression null expression unknown
creates instance requested expression class expressionclassname name expression class instantiated conf hadoop configuration new instance requested expression class
creates instance requested expression class expressionclass expression class instantiated conf hadoop configuration new instance requested expression class
register given class handling given list expression names expressionclass class implementing expression names names one command names invoke class ioexception expression expected type
invokes static void registerexpressionfindexpressionfactory given class method abstracts contract factory expression class assume directly invoking registerexpression given class effect expressionclass class allow opportunity register
returns combination another result
registers expression specified factory
construct name expression specified case sensitivity casesensitive true comparisons case sensitive
applies child expressions pathdata item pass returns resultpass else returns result first nonpassing expression
registers expression specified factory
registers expression specified factory
construct print expression specified suffix
gets named expression factory
returns true target ancestor source
return root expression find root expression
asks factory whether expression recognized
parse list arguments extract expression elements input deque modified remove used elements args arguments parsed list expression elements applicable command ioexception list parsed
set root expression find expression
register expressions expression factory
returns current find options creating necessary
gets instance expression factory
build description used help command
create new set find options
add specific number arguments expression children popped head expressions args deque arguments take argument count number children added
returns argument given position starting 1 position argument returned requested argument ioexception argument doesnt exist null
add specific number children expression children popped head expressions exprs deque expressions take children count number children added
returns filestatus pathdata item current options require links followed returned file status linked file item pathdata depth current depth process directories filestatus
shutdown connection pool close open connections
add channel pool channel
set configuration ui uri conf ioexception
convenience method dont open new connection using method within another method otherwise every api invocation incurs overhead openingclosing tcp connection ioexception
convenience method dont open new connection using method within another method otherwise every api invocation incurs overhead openingclosing tcp connection channel src dst rename successful ioexception
convenience method dont open new connection using method within another method otherwise every api invocation incurs overhead openingclosing tcp connection
stream obtained via call must closed using apis class else invocation block
convenience method dont open new connection using method within another method otherwise every api invocation incurs overhead openingclosing tcp connection
convenience method dont open new connection using method within another method otherwise every api invocation incurs overhead openingclosing tcp connection
connecting using configuration parameters ftpclient instance ioexception
resolve given working directory workdir path absolute path
convert file information lsentry filestatus object sftpfile parentpath file status ioexception
convenience method dont open new connection using method within another method otherwise every api invocation incurs overhead openingclosing tcp connection ioexception
convenience method dont open new connection using method within another method otherwise every api invocation incurs overhead openingclosing tcp connection
used filedirectory creation only symbolic umask applied relative file mode creation mask permission op characters results clearing corresponding bit mask results bits indicated permission set mask octal umask specified bits set file mode creation mask umask
creates new scopedaclentries given list assumed list already sorted access entries precede default entries aclentries list separate
returns pivot point list access entries default entries index first element list default entry aclbuilder arraylist containing entries build int pivot point 1 list contains default entries
create immutable permissionstatus object
create initialize permissionstatus datainput
serialize permissionstatus base components
constructor
begin parsing permission stored modestr modestr permission mode either octal symbolic symbolic usecase specific symbolic pattern match illegalargumentexception unable parse modestr
return true action implies action
get fsaction enum string representation permissions permission 3character string representation permission ex rwx returns fsaction enum corresponding fsaction exists permission otherwise returns null
sets file owner owner string file owner builder builder call chaining
get effective permission aclentry recommended use api client communicates old namenode needs pass permission path get effective permission else use aclstatusgeteffectivepermissionaclentry entry aclentry get effective action permarg permission path however client communicating old namenode argument preference returns effective permission entry illegalargumentexception client communicating old namenode permission passed argument
adds list acl entries entries aclentry entries add builder builder call chaining
adds acl entry e aclentry entry add builder builder call chaining
sets file group group string file group builder builder call chaining
sets permission file permission
private constructor file path file associated acl owner string file owner group string file group stickybit sticky bit entries acl entries permission permission path
sets sticky bit method called builder assumes false stickybit boolean sticky bit builder builder call chaining
create unmasked mode umask mode already fscreatemodes object return it
create masked unmasked modes
returns true file directory erasure coded get ec bit orgapachehadoopfsfilestatus object
create fspermission unix symbolic permission string unixsymbolicpermission eg rwrwrw
encode object short
returns true also acl access control list boolean true also acl access control list get acl bit orgapachehadoopfsfilestatus object
encodes object short unlike toshort method may return values outside fixed range 00000 01777 extended features encoded permission acl bit short extended short representation permission
apply umask permission return new one umask used create mkdir hadoop filesystem operations mode argument operations modified removing bits set umask thus umask limits permissions newly created files directories get umask umask use effective permission
returns fspermission octal format short unlike toshort provides binary representation method returns standard octal style permission
create initialize fspermission datainput
returns true file encrypted directory encryption zone get encryption bit orgapachehadoopfsfilestatus object
get user file creation mask umask umasklabel config param umask value either symbolic octal symbolic umask applied relative file mode creation mask permission op characters clears corresponding bit mask sets bits mask octal umask specified bits set file mode creation mask
copy constructor permission
convert list aclentries string reverse parseaclspec aclspec list aclentries convert string representation aclspec
parses string representation acl spec list aclentry objects example userrwxuserfoorwgrouprother expected format acl entries string parameter format produced tostringstable method aclspec string representation acl spec includepermission setacl operations true ie aclspec include permissions removeacl operation false ie aclspec contain permissions example userfoogroupbar returns list aclentry parsed
sets set permissions acl entry permission fsaction set permissions acl entry builder builder call chaining
sets scope acl entry method called builder assumes aclentryscopeaccess scope aclentryscope scope acl entry builder builder call chaining
returns string representation guaranteed stable across versions satisfy backward compatibility requirements shell command output serialization format string representation matches expected parseaclspecstring boolean parseaclentrystring boolean methods stable backward compatible string representation
parses string representation acl aclentry object expected format acl entries string parameter format produced tostringstable method aclstr string representation acl example userfoorw includepermission setacl operations true ie acl include permissions removeacl operation false ie acl contain permissions example userfoogroupbarmask returns aclentry object
sets optional acl entry name name string optional acl entry name builder builder call chaining
private constructor type aclentrytype acl entry type name string optional acl entry name permission fsaction set permissions acl entry scope aclentryscope scope acl entry
sets acl entry type type aclentrytype acl entry type builder builder call chaining
returns string representation guaranteed stable across versions satisfy backward compatibility requirements shell command output serialization stable backward compatible string representation
apply permission specified file determine new mode would file file apply mode files new mode applied
translates given permission bits equivalent minimal acl perm fspermission translate list containing exactly 3 entries representing owner group permissions
given permissions extended acl entries returns full logical acl perm fspermission containing permissions entries list containing extended acl entries list containing full logical acl
record set values specified time helper useful avoid fetching current time twice caller already done purposes additionally allows caller specify name recorder multiple names used one denoted primary recorder recorders named primary trigger logging names matching primary only triggered following primary used coordinate multiple logging points primary set via logthrottlinghelperlong string constructor primary set constructor first recorder name used becomes primary multiple names used maintain entirely different sets values summary information example initialize pre primary recorder name logthrottlinghelper helper new logthrottlinghelper1000 pre logaction prelog helperrecordpre timemonotonicnow prelogshouldlog double eventsprocessed perform action logaction postlog helperrecordpost timemonotonicnow eventsprocessed postlogshouldlog use postloggetstats0 access eventsprocessed information since pre primary recorder name logging pre trigger log action enough time elapsed indicate post log well ensures post always logged iteration pre yet one able maintain summary information other behavior recorddouble recordername name recorder used check current recorder primary names arbitrary used differentiate distinct recorders currenttimems current time values values log logaction specified recorder recorddouble
convert event json writer destination writer event event must null writer ioexception problems generating json
build json entry parameters public testing writer destination loggername logger name timestamp timet value level level string threadname name thread message rendered message ti nullable thrown information writer ioexception problem
use tests json incoming json parse node tree ioexception parsing problems
convert event json event event must null string value ioexception problems generating json
appender ignore throwables false always
mime type json
send httphttps request daemon hadoopillegalargumentexception arguments invalid exception unable connect
configures client send httphttps request url supports spengo authentication urlstring url query string daemons web ui exception unable connect
connect url supports httphttps supports spnego authentication falls back simple authentication fails initiate spnego url url address daemon servlet connected connection exception establish connection
send httphttps request set log level hadoopillegalargumentexception arguments invalid exception unable connect
command line implementation
registers object handler given identity note prevent handler gcd object unregister done identifier unique identifier resource orgapachehadoopblacklist handler object register
lookup responsible handler return result called rpc server gets refresh request identifier resource refresh args arguments pass on including program name illegalargumentexception invalid identifier response appropriate handler
create decay scheduler numlevels number priority levels ns config prefix configure multiple schedulers single instance conf configuration use
given number occurrences compute scheduling decision occurrences many occurrences scheduling decision 0 numlevels 1
update schedulecache match current conditions callcounts
returns priority level given identity first trying cache computing it identity object responding tostring hashcode integer scheduling decision 0 numlevels 1
generate default thresholds user specify strategy halve time since queue usage tends exponential numlevels 4 would generate double0125 025 05 specifies boundaries queues usage numlevels number levels compute array boundaries length numlevels 1
compute appropriate priority schedulable based past requests obj schedulable obj query remember level index recommend scheduling
decay stored counts user clean necessary method called periodically order keep counts current
get number occurrences increment atomically identity identity user increment value incrementation
add new cache entry retry cache cache entry consists clientid callid extracted editlog
static method provides null check retrycache
constructor cachename name identify cache percentage percentage total java heap space used cache expirationtime time entry expire nanoseconds
override equals avoid findbugs warnings
method handles following conditions if retry processed return null if cache entry add new entry newentry return it if existing entry wait completion completion state cacheentryfailed expectation thread waited completion retries request cacheentry state set cacheentryinprogress again if completion state cacheentrysuccess entry returned thread waits return previous response cacheentry
static method provides null check retrycache
override hashcode avoid findbugs warnings
add exception classes server wont log all optimized infrequent invocation exceptionclass exception classes
try set response indicate client version incompatible server contain specialcase code speak enough past ipc protocols pass back exception caller clientversion version caller using ioexception
wrapper around readablebytechannelreadbytebuffer amount data large writes channel smaller chunks avoid jdk creating many direct buffers size bytebuffer increases performance degredation readablebytechannelreadbytebuffer
get current call
returns remote address string invoked inside rpc returns null case error
return priority level assigned call queue rpc returns 0 case priority assigned
sets slow rpc flag logslowrpcflag
verify rpc header valid header rpc request header rpcserverexception header contains invalid values
authorize proxy users access server rpcserverexception user allowed proxy
process rpc request connection headers context must already read based rpckind decode rpcrequest successfully decoded rpccall deposited rpcq response sent later request processed header rpc request header buffer stream request payload rpcserverexception generally due fatal rpc layer issues invalid header deserialization error call queue may also throw fatal nonfatal exception overflow ioexception fatal internal error shouldcould sent client interruptedexception
process saslmessge saslmessage received sasl message sasl response send back client saslexception authentication generating response fails sasl protocol mixup ioexception saslserver cannot created accesscontrolexception requested authentication type supported trying reattempt negotiation interruptedexception
send deferred response ignoring errors
wait server stopped wait subthreads finish see stop
current active rpc calls retry count 1 indicates retry cache supported client side
stops service new calls handled called
setup response ipc call call call setting response status ipc call rv return value ipc call call successful errorclass error class call failed error error message call failed ioexception
logs slow rpc request methodname rpc request method name processingtime processing time request took much time relative requests consider slow rpc 3 magic number comes 3 sigma deviation simple explanation found searching 6895997 rule flag rpc slow rpc falls 997 requests start logic enough sample size
returns handle serviceauthorizationmanager required tests instance serviceauthorizationmanager server
wrapper around writablebytechannelwritebytebuffer amount data large writes channel smaller chunks avoid jdk creating many direct buffers size buffer increases also minimizes extra copies nio layer result multiple write operations required write large buffer writablebytechannelwritebytebuffer
reads connection context following connection header rpcserverexception header cannot deserialized user authorized
register rpc kind class deserialize rpc request called static initializers rpckind engines rpckind rpcrequestwrapperclass class used deserialze rpc request rpcinvoker use process calls ss
starts service must called calls handled
process wrapped rpc request unwrap sasl packet process embedded rpc request inbuf sasl wrapped request one rpcs ioexception sasl packet cannot unwrapped interruptedexception
returns remote side ip address invoked inside rpc returns null incase error
authorize incoming client connection user client user protocolname protocol addr inetaddress incoming connection authorizationexception client isnt authorized talk protocol
number rpc connections dropped due many connections number dropped rpc connections
called call use callrpcrpckind string writable long instead
returns rpc remote user invoked inside rpc note may different current user called within another doas connections ugi null rpc
refresh service authorization acl service handled server using specified configuration
convenience method bind given address report better exceptions address valid host socket socket bind address address bind backlog number connections allowed queue bindexception address cant bound unknownhostexception address isnt valid host name ioexception random errors bind
process sasls negotiate request including optimization accelerating token negotiation response negotiate request list enabled authmethods challenge tokens supported saslexception attempt generate challenge fails ioexception fails create sasl server tokens
decode protobuf given input stream message decoded protobuf rpcserverexception deserialization failed
process one rpc request buffer read socket stream decode rpc rpccall handle outofband rpc requests initial connectioncontext successfully decoded rpccall deposited rpcq response sent later request processed prior call connectionheader hrpc handled sasl sasl established buf passed unwrapped sasl bb contains rpc request header rpc request ioexception internal error returned client typically failure respond client interruptedexception
returns handle rpcmetrics required tests rpc metrics
get numopenconnectionsuser
javalangthrowable use set errorinfo responseparams responseparams instance populate
helper channelreadreadablebytechannel bytebuffer channelwritewritablebytechannel bytebuffer one readch writech nonnull channelreadreadablebytechannel bytebuffer channelwritewritablebytechannel bytebuffer
add exception classes server wont log stack traces optimized infrequent invocation exceptionclass exception classes
allow ipc response postponed instead sent immediately handler returns proxy method intended use case freeing handler thread response known expensive precondition must satisfied its sent client
get config client backoff enabled port
setup response ipc call fatal error client using old version hadoop response serialized using previous protocols response layout response buffer serialize response call call setting response rv return value ipc call call successful errorclass error class call failed error error message call failed ioexception
returns clientid current rpc request
return new set containing exceptions exceptionsset exceptionclass
updating readselector its used threadsafe connection must queued reader drain queue update readselector performing next select
process saslmessage send saslresponse back saslmessage received sasl message rpcserverexception setup failed due sasl negotiation failure premature invalid connection context state errors exception needs sent client exception wrap retriableexception invalidtoken standbyexception saslexception ioexception sending reply fails interruptedexception
constructs server listening named port address parameters passed must named class handlercount determines number handler threads used process calls queuesizeperhandler numreaders 1 used instead parameters configuration otherwise configuration picked up rpcrequestclass null rpcrequestclass must registered via registerprotocolenginerpcrpckind class rpcrpcinvoker parameter retained compatibility existing tests usage
establish rpc connection setup negotiating sasl required reading authorizing connection header header rpc header buffer stream request payload rpcserverexception setup failed due sasl negotiation failure premature invalid connection context state errors exception needs sent client ioexception failed send response back client interruptedexception
exceptions retriableexception standbyexception wrapped cause parameter e unwrapped sent true cause client side case invalidtoken go one level deeper get true cause e exception may cause want unwrap true cause exceptions
returns currently active rpc calls sequential id number negative call id indicates invalid value currently active rpc call int sequential id number currently active rpc call
method reads nonblocking fashion channel method called repeatedly data present channel enough data process one rpc processes rpc first pass processes connectionheader connectioncontext an outofband rpc one rpc request follows that future passes process one rpc request quirky things datalengthbuffer 4 bytes used read hrpc rpc request length 1 case error else num bytes read far ioexception internal error returned client typically failure respond client interruptedexception
get protocol proxy contains proxy connection remote server set methods supported server protocol protocol class clientversion client version addr remote address conf configuration use protocol proxy ioexception far end remoteexception
default false
get protocol proxy contains proxy connection remote server set methods supported server protocol protocol class clientversion client version addr remote address conf configuration use conntimeout time milliseconds giving protocol proxy ioexception far end remoteexception
construct clientside proxy object implements named protocol talking server named address
get protocol proxy contains proxy connection remote server set methods supported server protocol protocol clientversion clients version addr server address ticket security ticket conf configuration factory socket factory rpctimeout max time rpc 0 means timeout connectionretrypolicy retry policy fallbacktosimpleauth set true false calls indicate secure client falls back simple auth proxy ioexception error occurs
get proxy connection remote server protocol protocol class clientversion client version addr remote address conf configuration use proxy ioexception far end remoteexception
add protocol existing server protocolclass protocol class protocolimpl impl protocol called server for convenience
default 0000
stop proxy proxy must either implement closeable must associated rpcinvocationhandler proxy rpc proxy object stopped hadoopillegalargumentexception proxy implement closeable interface closeable invocationhandler
get protocol name protocol class protocolannotation get protocol name annotation otherwise class name protocol name
default 1
return connection id given object provided object fact protocol translator well get connection id underlying proxy object proxy proxy object get connection id of connection id provided proxy object
build rpc server ioexception error hadoopillegalargumentexception mandatory fields set
get superinterfaces extend versionedprotocol childinterfaces super interfaces extend versionedprotocol
mandatory field
set protocol use nondefault rpcengine conf configuration use protocol protocol interface engine rpcengine impl
default null
construct clientside proxy object default socketfactory protocol clientversion addr conf proxy instance ioexception
get protocol proxy contains proxy connection remote server set methods supported server protocol protocol class clientversion client version addr remote address conf configuration use factory socket factory protocol proxy ioexception far end remoteexception
default 0
construct clientside proxy object implements named protocol talking server named address
default 1
get protocol version protocol class protocol class protocolannotation get protocol version annotation otherwise get versionid field protocol class
get protocol proxy contains proxy connection remote server set methods supported server protocol protocol class clientversion client version addr remote address ticket user group information conf configuration use factory socket factory protocol proxy ioexception far end remoteexception
mandatory field
get interfaces given protocol implements extends assignable versionedprotocol
default 1
get protocol proxy contains proxy connection remote server set methods supported server protocol clientversion addr conf protocol proxy ioexception
get meaningful short name server based java class rules defined support current naming schema generated protobuf classes final class usually anonymous inner class inner class 1 simple classes returns simple name classes with name without package name 2 inner classes simple name inner class 3 object created class factory eg orgapachehadoopipctestrpctestclass2 method returns parent class testclass 4 anonymous class eg orgapachehadoopipctestrpc10 servernamefromclass returns parent class testrpc
create version mismatch exception interfacename name protocol mismatch clientversion clients version protocol serverversion servers version protocol
get protocol proxy contains proxy connection remote server set methods supported server protocol protocol clientversion clients version addr server address ticket security ticket conf configuration factory socket factory rpctimeout max time rpc 0 means timeout connectionretrypolicy retry policy proxy ioexception error occurs
default null
get proxy connection remote server protocol protocol class clientversion client version addr remote address conf configuration use rpctimeout timeout rpc timeout time milliseconds giving proxy ioexception far end remoteexception
get proxy connection remote server protocol protocol class clientversion client version addr remote address conf configuration use conntimeout time milliseconds giving proxy ioexception far end remoteexception
get rpc time configuration set configuration return default value conf configuration rpc timeout ms
construct clientside proxy implements named protocol talking server named address protocol protocol clientversion clients version addr server address ticket security ticket conf configuration factory socket factory rpctimeout max time rpc 0 means timeout proxy ioexception error occurs
get protocol proxy contains proxy connection remote server set methods supported server protocol protocol class clientversion client version addr remote address conf configuration use rpctimeout timeout rpc timeout time milliseconds giving proxy ioexception far end remoteexception
calculate methods hash code considering method name returning type parameter types method method hash code
get server protocols signature server server implementation protocol server protocol clientversion clients version clientmethodshash clients protocols hash code server protocols signature ioexception error occurs
get hash code array hashcodes hashcodes sorted hashcode calculated returned value irrelevant hashcode order array methods array methods hash code
return protocols signature finger print cache protocol protocol class serverversion protocol version signature finger print
constructor version server version methodhashcodes hash codes methods supported server
get server protocols signature clientmethodshashcode client protocol methods hashcode serverversion server protocol version protocol protocol servers protocol signature
convert array method array hash codes methods array hash codes
checks queue empty checking checkpointnum points checkpointintervalms interval doesnt mean queue might fill point later decrease probability lose call way
insert e backing queue return true e queued return false queue full
read number levels configuration affect faircallqueues overall capacity illegalargumentexception invalid queue count
replaces active queue newly requested one transfers calls newq returning
insert e backing queue block can client backoff enabled method behaves like add throws queue overflows block queue changes us insert queue drained
retrieve e backing queue block can guaranteed return element current queue
check method supported server methodname methods name string format parametertypes methods parameter types true method supported server
constructor protocol protocol class proxy proxy supportservermethodcheck false proxy never fetch server methods ismethodsupported always return true true server methods fetched first call ismethodsupported
advances index change current index called enough times
use mux getting advancing index
move next queue
creates default weights queue weights 2n
size returns sum subqueue sizes may greater capacity note size provides strict consistency used control queue io
put element queue specific priority priority queue priority e element add
returns maximum remaining capacity reflect much ideally fit faircallqueue would depend schedulers decisions
returns element first nonempty queue equal priority returned multiplexer scans highest lowest priority queue caller must always acquire semaphore permit invoking first nonempty queue less priority null everything empty
create faircallqueue capacity total size subqueues ns prefix use configuration conf configuration read notes subqueue capacity capacity numsubqueues first highest priority subqueue excess capacity capacity numsubqueues
add put offer follow pattern 1 get assigned prioritylevel call scheduler 2 get nth subqueue matching prioritylevel 3 delegate call subqueue differ handle overflow add move next queue throw last queue overflow put move next queue block last queue overflow offer attempt queues overflow
offer element queue given lower priority priority starting queue priority e element add includelast whether attempt last queue boolean added queue
iterator implemented needed
offer element queue specific priority priority queue priority e element add boolean added given queue
poll provides strict consistency possible poll return null even though element queue
drainto defers subqueue note draining faircallqueue another faircallqueue likely fail since incoming calls may scheduled differently new faircallqueue nonetheless method provided completeness
peek like poll provides strict consistency
rpc response or case timeout null
write connection header sent connection established hrpc 4 bytes version 1 byte service class 1 byte authprotocol 1 byte
make call passing rpcrequest ipc server defined remoteid returning rpc response rpckind rpcrequest contains serialized method method parameters remoteid target rpc server serviceclass service class rpc fallbacktosimpleauth set true false method indicate secure client falls back simple auth s rpc response throws exceptions network problems remote code threw exception
returns connectionid object addr remote address connection protocol protocol rpc ticket ugi rpctimeout timeout conf configuration object connectionid instance ioexception
set call id retry count next call
set rpc asynchronous synchronous mode async true rpc asynchronous mode otherwise false synchronous mode
make call passing rpcrequest ipc server defined remoteid returning rpc respond rpckind rpcrequest contains serialized method method parameters remoteid target rpc server fallbacktosimpleauth set true false method indicate secure client falls back simple auth s rpc response throws exceptions network problems remote code threw exception
time rpc timeout ping enabled via ipcclientping timeout value pinginterval ping enabled timeout value conf configuration timeout period milliseconds 1 timeout value set use getrpctimeoutconfiguration instead
add call connections call queue notify listener synchronized returns false called shutdown call add true call added
initiates rpc call sending rpc request remote server note called connection thread threads call rpc request
cleanup executor ipc calls parameters sent reference counter zero method discards instance executor not method decrements internal reference counter executorservice instance exists null returned not
set ping interval value configuration conf configuration pinginterval ping interval
time rpc timeout conf configuration timeout period milliseconds
connect server set io streams sends header server starts connection thread waits responses
get executor ipc calls parameters sent internal reference counter zero method creates instance executor not method returns reference clientexecutor executorservice instance
set exception error notify caller call done error exception thrown call either local remote
read byte stream send ping timeout read retries failure detected byte read ioexception io problem socket timeout
check rpc asynchronous mode not s true rpc asynchronous mode otherwise false synchronous mode
check rpc response header
stop threads related client calls may made using client
indicate call complete value error available notifies default
close connection
get connection pool create new one add pool connections given connectionid reused
get ping interval configuration set configuration return default value conf configuration ping interval
read bytes buffer starting offset off send ping timeout read retries failure detected byte read total number bytes read 1 connection closed
set return value error notify caller call done rpcresponse return value rpc call
multiple clients principal try connect server time server assumes replay attack progress feature kerberos order work around this done client backs randomly tries initiate connection again problem ticket expiry handle that relogin attempted
construct ipc client whose values given writable class
update server address address corresponding host name changed true addr change detected ioexception hostname cannot resolved
convert rpc method string format want methodouterclassshortnamemethodname example method is orgapachehadoophdfsprotocolprotoclientnamenodeprotocolprotos clientnamenodeprotocolblockinginterfacegetserverdefaults format want is clientnamenodeprotocolgetserverdefaults
returns whether given method supported not protocol signatures fetched cached connection id proxy provided reused rpcproxy proxy provides existing connection id protocol protocol method check required rpckind rpckind method check required version version client methodname name method true method supported false otherwise ioexception
convert rpc class method string format want secondoutermostclassshortnameoutermostclassshortname example full class name is orgapachehadoophdfsprotocolclientprotocolgetblocklocations format want is clientprotocolgetblocklocations
return ioexception thrown remote server wrapped serviceexception cause se serviceexception wraps io exception thrown server exception wrapped serviceexception new ioexception wraps unexpected serviceexception
construct cache ipc client userprovided socketfactory cached client exists conf configuration factory socketfactory client socket valueclass class expected response ipc client
stop rpc client connection rpc client closed reference count becomes zero
return clientid byte
convert clientid string byte representation clientid
convert clientid byte string
construct rpc server instance instance whose methods called conf configuration use bindaddress address bind listen connection port port listen connections use serverclass object configuration string int
construct rpc server protocolimpl instance whose methods called conf configuration use bindaddress address bind listen connection port port listen connections numhandlers number method handler threads run verbose whether call logged use serverserverclass object configuration string int int int int boolean secretmanager
initialize class isnt already
construct clientside proxy object implements named protocol talking server named address
construct clientside proxy object implements named protocol talking server named address
construct rpc server protocolclass class protocolimpl instance whose methods called conf configuration use bindaddress address bind listen connection port port listen connections
construct rpc server protocolclass protocol registered null compatibility old usage see details protocolimpl protocol impl called conf configuration use bindaddress address bind listen connection port port listen connections numhandlers number method handler threads run verbose whether call logged
register rpcrequest deserializer writablerpcengine
constructor takes connectionid instead creating new one
client side invoker rpc method throws serviceexception since invocation proxy expects serviceexception thrown method case protobuf service serviceexception following causes exceptions encountered client side method set cause serviceexception is exceptions server wrapped remoteexception set cause serviceexception note client calling protobuf rpc methods must handle serviceexception getting cause serviceexception cause remoteexception unwrap get exception thrown server
construct rpc server protocolclass class protocol protocolimpl protocolimpl whose methods called conf configuration use bindaddress address bind listen connection port port listen connections numhandlers number method handler threads run verbose whether call logged portrangeconfig config parameter used restrict range ports used port 0 an ephemeral port
classname wrapped exception may null msg may null ercode may null
create remoteexception attributes attrs may null
instantiate return exception wrapped remote exception unwraps throwable constructor taking string parameter otherwise returns this throwable
remote exception wraps one lookuptypes return exception unwraps ioexception lookuptypes desired exception class may null ioexception either lookupclass exception this
initialize metrics jmx protocol methods protocol protocol class
process get request specified resource request servlet request processing response servlet response creating
disable trace method avoid trace vulnerability
initialize servlet
get remote servers principal value obtained config crosschecked servers advertised principal authtype sasl client string servers principal ioexception error determining configured principal
get sasl wrapped outputstream sasl qop requires wrapping otherwise return original stream called saslconnect called outputstream used make connection outputstream may using wrapping ioexception
create saslrpcclient used rpc client negotiate sasl authentication rpc server ugi connecting user protocol rpc protocol serveraddr inetsocketaddress remote server conf configuration
client side sasl authentication server via given inputstream outputstream ins inputstream use outs outputstream use authmethod used negotiate connection ioexception
get sasl wrapped inputstream sasl qop requires unwrapping otherwise return original stream called saslconnect called inputstream used make connection inputstream may using sasl unwrap ioexception
instantiate sasl client first supported auth type given list auth type must defined enabled user must possess required credentials else next auth tried authtypes attempt given order saslauth instantiated client accesscontrolexception client doesnt support auths ioexception misc errors
try create saslclient authentication type may return null type isnt supported client lacks required credentials authtype requested authentication method saslclient authtype null saslexception error instantiating client ioexception misc errors
release resources used wrapped saslclient
evaluate server provided challenge server must send token its done server done challenge token optional mechanisms send final token client update internal state client must also done evaluating optional token ensure malicious server doesnt prematurely end negotiation phony success saslresponse client response challenge serverisdone server negotiation state saslexception problems negotiation
try locate required token server authtype sasl client token server null token available ioexception token selector cannot instantiated
get full name user
add group cache group name group add cache users list users given group
get netgroups given user user get groups user groups put groups list
identify sasl properties used connection client clientaddress clients address ingressport port client connecting sasl properties used connection
get group memberships given user users group cached method may block user users name group memberships user ioexception user exist
get groups used map usertogroups conf groups used map usertogroups
create new groups used map usertogroups loaded configuration conf groups used map usertogroups
method block cache entry doesnt exist subsequent requests user wait request return user already exists cache key expires first call reload key block subsequent requests return old value blocking thread returns reloadgroupsinbackground true thread needs refresh expired key block either instead return old cache value schedule background refresh user key cache list groups belonging user ioexception prevent caching negative entries
override reload method provide asynchronous implementation reloadgroupsinbackground false method defers super implementation otherwise arranges cache updated later
refresh usertogroups mappings
queries impl groups belonging user could involve io take awhile
add groups cache groups list groups add cache
return object represented code
returns empty list user ignored empty list
gets unix groups netgroups user gets unix groups returned id gn returns netgroups used acls there way get netgroups given user see documentation getent netgroup
add group cache netgroups cached groups list group names add cache
calls jni function get users netgroup since c functions reentrant need make synchronized see documentation setnetgrent getnetgrent endnetgrent netgroup return users netgroup list users given netgroup
refresh netgroup cache
check executor timeout logs event executor check user user log true timeout occurred
adds groups cache need provider groups unused
get current users group list unix running command groups note nonexisting user return empty list user get groups user groups list user belongs to primary group returned first ioexception encounter error running command
create shellcommandexecutor object fetch users group id list username users name shellcommandexecutor object
attempt parse group names given names resolvable use group id list identify resolved groupnames string representing list group names groupids string representing list group ids linked list group names partialgroupnameexception
caches groups need provider
split group names linked list groupnames string representing users group names linked list group names
create shellcommandexecutor object using users name username users name shellcommandexecutor object
returns list groups user username get groups user list groups given user
attempt partially resolve group names username users name errmessage error message shell command groupnames incomplete list group names list resolved group names partialgroupnameexception resolution fails times
returns number bytes read input stream without blocking available method inputstream returns 0 method should overridden subclasses number bytes read input stream without blocking exception ioexception io error occurs
reads next byte data input stream value byte returned int range 0 255 byte available end stream reached value 1 returned method blocks input data available end stream detected exception thrown next byte data 1 end stream reached exception ioexception io error occurs
constructs saslinputstream inputstream saslserver note specified inputstream saslserver null nullpointerexception may thrown later used instream inputstream processed saslserver initialized saslserver object
read data get processed entry condition ostart ofinish exit condition ostart ofinish return ofinishostart we many bytes you 0 no data now could later 1 absolutely data
skips n bytes input bytes read input stream without blocking fewer bytes requested might skipped actual number bytes skipped equal n result call available available whichever smaller n less zero bytes skipped actual number bytes skipped returned n number bytes skipped actual number bytes skipped exception ioexception io error occurs
closes input stream releases system resources associated stream close method saslinputstream calls close method underlying input stream exception ioexception io error occurs
tests input stream supports mark reset methods not false since class support mark reset methods
reads len bytes data input stream array bytes method blocks input available first argument null len bytes read discarded b buffer data read start offset data len maximum number bytes read total number bytes read buffer 1 data end stream reached exception ioexception io error occurs
disposes system resources securitysensitive information sasl might using exception saslexception sasl error occurs
reads blength bytes data input stream array bytes read method inputstream calls read method three arguments arguments b 0 blength b buffer data read total number bytes read buffer 1 data end stream reached exception ioexception io error occurs
constructs saslinputstream inputstream saslclient note specified inputstream saslclient null nullpointerexception may thrown later used instream inputstream processed saslclient initialized saslclient object
convenience method reading token storage file loading tokens filename conf ioexception
convenience method reading token storage file loading tokens filename conf ioexception
populates keysvalues proto buffer storage stream ready read serialized proto buffer message
stores keys dataoutput ioexception
write contents instance credentialsproto message dataoutput ioexception
return secret key entries inmemory map
add token storage in memory alias alias key token object
loads keys ioexception
convenience method reading token datainputstream
run given action user potentially throwing exception return type run method action method execute value run method ioexception action throws ioexception error action throws error runtimeexception action throws runtimeexception interruptedexception action throws interruptedexception undeclaredthrowableexception action throws something else
create proxy user ugi testing hdfs mapreduce user full user principal name effective user realuser ugi real user usergroups names groups user belongs fake user running unit tests
log user keytab file loads user identity keytab file logs in become currently loggedin user user principal name load keytab path path keytab file ioexception kerberosauthexception its kerberos login exception
log current ugi token information specified log ugi ugi ioexception
initialize ugi related classes conf configuration use
log user using given subject subject subject use logging user null create new subject subject null creator subject responsible renewing credentials ioexception login fails
get time next login retry allow thread retry exponential backoff tgt endtime last retry kerberosminsecondsbeforerelogin endtime tgtendtime endtime tgt current time rp retry policy time next login retry
login subject given parameters subject null login context used create subject attached subject login null new subject params login null externally managed ugi usergroupinformation subject ioexception
create usergroupinformation subject kerberos principal subject kerberosprincipal use ugi creator subject responsible renewing credentials ioexception kerberosauthexception kerberos login fails
returns authentication method ugi authentication method proxy returns authentication method real user ugi authenticationmethod
create user login name intended used remote users rpc since wont credentials user full user principal name must empty null usergroupinformation remote user
return current user including doas current stack current user ioexception login fails
add named token ugi alias name token token token added true successful add new token
return hash subject
get users full principal name users full principal name
obtain collection tokens associated user unmodifiable collection tokens associated user
get group names user list users primary group first command fails returns empty list
create ugi testing hdfs mapreduce user full user principal name usergroups names groups user belongs fake user running unit tests
sets authentication method subject authmethod
log current user previously logged using keytab method assumes user logged calling loginuserfromkeytabstring string ioexception kerberosauthexception failure occurred logout user log invoking loginuserfromkeytab before
create usergroupinformation given subject change subject acquire new credentials creator subject responsible renewing credentials subject users subject
relogin user keytab file loads user identity keytab file logs in become currently loggedin user method assumes loginuserfromkeytabstring string happened already subject field usergroupinformation object updated new credentials ioexception kerberosauthexception failure
ugi managed ugi external subject true managed ugi
get realuser vs effectiveuser realuser running proxy user
create proxy user using username effective user ugi real user user realuser proxyuser ugi
create user login name intended used remote users rpc since wont credentials user full user principal name must empty null usergroupinformation remote user
user logged keytab file managed ugi true credentials keytab file
create usergroupinformation kerberos ticket cache user principal name load ticket cache ticketcache path ticket cache file ioexception kerberos login fails
log user keytab file loads user identity keytab file login in new user affect currently loggedin user user principal name load keytab path path keytab file ioexception keytab file cant read
get group names user getgroups less expensive alternative checking contained element list users primary group first command fails returns empty list
test method print current users ugi args two arguments read user keytab print out exception
method initialize fields depend configuration must called usekerberos groups used
remove login method followed space username eg jack authsimple jack username username without login method
add given credentials user credentials tokens secrets
compare subjects see equal other
set static configuration ugi particular set security authentication mechanism group look service conf configuration use
return username
get currently logged user explicit login occurred user automatically logged either kerberos credentials available local os user based security settings logged user ioexception login fails
login happen via keytab true false
get kerberos tgt users tgt null none found
get authentication method real users subject real user return given users authentication method authenticationmethod subject null present
log current real login ugi token info specified log ugi ugi ioexception
run given action user return type run method action method execute value run method
obtain tokens credentials form associated user credentials tokens associated user
find appropriate usergroupinformation use ticketcachepath kerberos ticket cache path null none specfied user user name null none specified appropriate usergroupinformation
purposes unit tests want test login keytab dont want wait renew window controlled ticketrenewwindow immediate true login without waiting ticket window
relogin user ticket cache method assumes login happened already subject field usergroupinformation object updated new credentials ioexception kerberosauthexception failure
log current real login ugi token info ugi debug log ugi ugi ioexception
refresh netgroup cache
calls shell get users netgroup calling getent netgroup low level function returns string netgroup get users netgroup string users given netgroup getent netgroups format
get unix groups parent netgroups given user user get groups netgroups user groups netgroups user
add group cache netgroups cached groups list group names add cache
gets users netgroup netgroup return users netgroup list users given netgroup
returns list groups user ldapctx underlies dircontext object threadsafe need block around whole method caching infrastructure ensure performance stays acceptable range user get groups user list groups given user
perform ldap queries get group names user perform first ldap query get user object using users name onequery enabled retrieve group names user object onequery disabled failed perform second query get groups user user name list group names user user found return empty string array namingexception unable get group names
helper method get relative distinguished name rdn distinguished name dn according active directory documentation group objects rdn cn distinguishedname string representing distinguished name namingexception dn malformed string represents rdn
perform second query get groups user posixgroups enabled use use posix giduid find otherwise use general group member attribute find it result result object returned prior user lookup c context object ldap connection list strings representing group names user namingexception unable find group names
passwords stored configuration use getpasswordfromcredentialproviders configuration string string avoid reading passwords configuration file
caches groups need provider
adds groups cache need provider groups unused
look groups using posixgroups semantics use posix giduid find groups user result result object returned prior user lookup c context object ldap connection object representing search result namingexception server support posixgroups semantics
returns instance saslpropertiesresolver looks configuration see custom class specified constructs instance passing configuration directly constructor achieve thread safety using final fields conf saslpropertiesresolver
identify sasl properties used connection client clientaddress clients address ingressport port client connecting sasl properties used connection
identify sasl properties used connection server serveraddress servers address ingressport port used connect server sasl properties used connection
util function retrieve specific additional sasl property config used subclasses read sasl properties used themselves conf configuration configkey config key look defaultqop default qop key missing sasl property associated given key
writes blength bytes specified byte array output stream write method sasloutputstream calls write method three arguments three arguments b 0 blength b data exception nullpointerexception b null exception ioexception io error occurs
closes output stream releases system resources associated stream exception ioexception io error occurs
constructs sasloutputstream outputstream saslclient note specified outputstream saslclient null nullpointerexception may thrown later used outstream outputstream processed saslclient initialized saslclient object
disposes system resources securitysensitive information sasl might using exception saslexception sasl error occurs
constructs sasloutputstream outputstream saslserver note specified outputstream saslserver null nullpointerexception may thrown later used outstream outputstream processed saslserver initialized saslserver object
writes len bytes specified byte array starting offset off output stream inbuf data start offset data len number bytes write exception ioexception io error occurs
flushes output stream exception ioexception io error occurs
writes specified byte output stream b byte exception ioexception io error occurs
resolves host subject security requirements determined hadoopsecuritytokenserviceuseip optionally logs slow resolutions hostname host ip resolve resolved host unknownhostexception host doesnt exist
login principal specified config substitute host users kerberos principal name hostname nonsecure mode return keytab available bail exception conf conf use keytabfilekey key look keytab file conf usernamekey key look users kerberos principal name conf hostname hostname use substitution ioexception config doesnt specify keytab
perform given action daemons login user interruptedexception thrown converted ioexception action action perform result action ioexception event error
login principal specified config substitute host users kerberos principal name dynamically lookedup fullyqualified domain name current host conf conf use keytabfilekey key look keytab file conf usernamekey key look users kerberos principal name conf ioexception login fails
look tokeninfo given protocol searches known securityinfo providers protocol protocol class get information for conf configuration object tokeninfo null kerberosinfo defined
perform given action daemons login user login user cannot determined log fatal error exit whole jvm
convert kerberos principal name pattern valid kerberos principal names replaces hostname pattern hostname fullyqualified domain name hostname null 0000 uses dynamically lookedup fqdn current host instead principalconfig kerberos principal name conf value convert hostname fullyqualified domain name used substitution converted kerberos principal name ioexception client address cannot determined
look kerberosinfo given protocol searches known securityinfo providers protocol protocol class get information conf configuration object kerberosinfo null kerberosinfo defined
use tests initialization
perform given action daemons current user interruptedexception thrown converted ioexception action action perform result action ioexception event error
utility method fetch zk auth info configuration javaioioexception zookeeper acls configuration file cannot read zkutilbadauthformatexception auth format invalid
set given tokens service format expected rpc client token delegation token addr socket rpc connection
tgs must server principal form krbtgtfoofoo principal true false
create inetaddress fully qualified hostname given hostname inetaddress qualify incomplete hostname resolved via domain search list inetaddressgetcanonicalhostname fully qualify hostname always return record whereas given hostname may cname host hostname ip address inetaddress fully qualified hostname ip unknownhostexception host exist
test setup method register additional providers providers list high priority providers use
convert kerberos principal name pattern valid kerberos principal names method similar getserverprincipalstring string except 1 reverse dns lookup addr hostname done necessary 2 param addr cant null no default behavior using local hostname addr null principalconfig kerberos principal name pattern convert addr inetaddress host used substitution converted kerberos principal name ioexception client address cannot determined
create service name delegation token uri service defport used uri lacks port token service null authority buildtokenserviceinetsocketaddress
retrieve name current host multihomed hosts may restrict hostname lookup specific interface nameserver orgapachehadoopfscommonconfigurationkeyspublichadoopsecuritydnsinterfacekey orgapachehadoopfscommonconfigurationkeyspublichadoopsecuritydnsnameserverkey conf configuration object may null unknownhostexception
construct service key token addr inetsocketaddress remote connection token ipport hostport depending value hadoopsecuritytokenserviceuseip
mangle given local java keystore file uri allow use localjavakeystoreprovider localfile absolute uri file scheme authority component ie return filetouri eg filehomelarrycredsjceks uri form localjceksfilehomelarrycredsjceks illegalargumentexception localfile isnt file uri authority component urisyntaxexception wrapping process violates rfc 2396
convert nested uri decode underlying path translation takes authority parses underlying scheme authority example myschemehdfsnnmypath converted hdfsnnmypath nesteduri uri nested uri unnested path
certain integrations credential provider api recursive dependency provider hadoop filesystem abstraction causes problem integration points need leverage utility method remove problematic provider types existing provider path within configuration config existing configuration provider path filesystemclass class providers must compatible configuration clone new provider path
password either found environment file routine implements logic locating password locations envwithpass name environment variable might contain password must null filewithpass name file could contain password null password char null found ioexception filewithpass nonnull points nonexistent file file fails open read properly
format raise failure category category exception message string formatting message args arguments formatting kerberosdiagsfailure containing formatted text
fail fast jvm without jce installed recurrent problem that is keeps creeping back jvm updates fast failure best tactic nosuchalgorithmexception
execute diagnostics things would nice ugi made accessible a way enable jaas debug programatically access tgt true security enabled probes successful kerberosdiagsfailure explicitly raised failure exception security problems
validate ugi verify kerberized messageprefix message exceptions user user validate
get default realm default realm may harmless noted info invocation failures downgraded warn followon actions may still work failure invoke method via introspection considered failure its sign jvm compatibility issues may consequences
cursory look kinit executable absolute path must exist size 0 command path theres check but path printed out
print environment variables name value printing unset set variable environment variable
dump ugi title title section ugi ugi dump ioexception
main entry point argv args list
assert condition must hold not exception raised or nofail set error logged method return false condition condition must hold category category exception message string formatting message args arguments formatting true verification succeeded false failed exception raised kerberosdiagsfailure containing formatted text condition met
validate jaas entry referenced sunsecurityjaasfile property jaasrequired jaas required
print system property unset unset property property print
inner entry point logging system exits conf configuration argv argument list exception exception
dump keytab list principals keytabfile keytab file ioexception io problems
print title entry format format string args arguments
log keytab dump ugi validate it try log again secondtime login catches jvmhadoop compatibility problems ioexception keytab loading problems
locate krb5conf file dump it noop windows ioexception problems reading file
dump file standard out file file dump ioexception io problems
verify file valid file nonempty readable file file category category exceptions text text message true validation held false and nofail disabled raising exceptions
verify tokenfile contains valid credentials not exception raised or nofail set error logged method return false
print line output goes output file logged info output flushed after try stay sync jre logging format format string args arguments
flush active output channels including systemerr stay sync jre log messages
authentication method configuration simple conf configuration check true auth simple ie kerberos
try load sasl resolver saslpropsresolverkey key sasl resolver
dump tokens ugi ugi ugi examine
set system property true return old value caching sysprop property previous value
verify whether authtolocal rules transform principal name local user name barfoocom may harmless noted info however intended transformation bar difficult debug hence check
print something end section
validate hadooptokenfiles if specified exist valid classnotfoundexception securityexception nosuchmethodexception kerberosdiagsfailure
conditional failure string formatted arguments chek nofail value condition failure condition category category exception message string formatting message args arguments formatting kerberosdiagsfailure containing formatted text condition met
identify sasl properties used connection client clientaddress clients address sasl properties used connection
set static configuration get evaluate rules important method nop rules set already need reset rules kerberosnamesetrulesstring method invoked directly conf new configuration ioexception
uid gid defined uint32 linux systems create intended unintended 4294967294 kind mapping 4294967294 2322 unsigned int32 example httpsbugzillaredhatcomshowbugcgiid511876 user group id treated integer signed integer int32 here number 4294967294 range solution convert uint32 int32 map outofrange id negative side integer eg 4294967294 maps 2 4294967295 maps 1
get list users groups returned specified command save corresponding map ioexception
initializes hadoopauth authenticationfilter propagates hadoopauth authenticationfilter configuration hadoop configuration properties prefixed hadoophttpauthentication container filter container conf configuration runtime parameters
adds groups cache need provider groups unused
caches groups need provider
returns list groups user user get groups user list groups given user
returns list groups user calls ldapgroupsmappings getgroups applies configured rules group names returning user get groups user list groups given user
constructs mapping configuration properties used filter initialization mapping includes properties start specified configuration prefix property names mapping trimmed remove configuration prefix conf configuration read confprefix configuration prefix mapping configuration properties used filter initialization
handles httpinteraction applying filtering logic httpinteraction callers http interaction ioexception io error servletexception implementation relies servlet api servlet api call failed
creates new servletfilterhttpinteraction httprequest request process httpresponse response process chain filter chain forward http interaction allowed
method interrogates useragent string returns whether refers browser browser requirement csrf header enforced browser requirement enforced useragent string considered browser matches regex patterns browseruseragentregex default behavior consider everything browser matches following mozillaopera subclasses optionally override method use different behavior useragent useragent string null isnt one true useragent string refers browser false
constructs mapping configuration properties used filter initialization mapping includes properties start specified configuration prefix property names mapping trimmed remove configuration prefix conf configuration read confprefix configuration prefix mapping configuration properties used filter initialization
authorize user access protocol used user user accessing service protocol service accessed conf configuration use addr inetaddress client authorizationexception authorization failure
function kept provide backward compatibility user remoteaddress conf authorizationexception use authorizeusergroupinformation string instead
refreshes configuration using specified proxy user prefix properties conf configuration proxyuserprefix proxy user configuration prefix
refresh impersonation rules
authorize superuser doas user ugi effective proxy user contains real user remoteaddress ip address client authorizationexception
returns instance impersonationprovider looks configuration see custom class specified conf impersonationprovider
deserializes accesscontrollist object
returns access control list string used building new instance sending constructor accesscontrollist
serializes accesscontrollist object
remove group names groups allowed service group group name
add group names groups allowed service group group name
add user names users allowed service user user name
remove user names users allowed service user user name
build acl given two strings strings contain separated values aclstring build acl array strings
checks whether acl string contains wildcard aclstring check acl string wildcard true acl string contains wildcard false otherwise
returns descriptive way users groups part acl use getaclstring get exact string given constructor accesscontrollist create new instance
checks user represented provided usergroupinformation member access control list ugi usergroupinformation check contained acl true ugi member list
returns commaseparated concatenated single string strings given set strings set strings concatenate
remove token file local filesystem matching alias cancel cancel token well remove file tokenfile local file object fileformat string equal formatpb formatjava output alias remove tokens matching alias null matches all conf configuration object passed along ioexception interruptedexception
fetch token service save file local filesystem tokenfile local file object hold output fileformat string equal formatpb formatjava output alias overwrite service field fetched token text service use dtfetcher implementation matching service text url pass url fetcher stripping https prefix renewer pass renewer fetcher conf configuration object passed along ioexception
print credentials file local filesystem tokenfile local file object alias print tokens matching alias null matches all conf configuration object passed along print stream ioexception
append tokens list files local filesystem saving last file tokenfiles list local file objects last file holds output fileformat string equal formatpb formatjava output conf configuration object passed along ioexception
print credentials object creds credentials object printed out alias print tokens matching alias null matches all print stream ioexception
renew token file local filesystem matching alias tokenfile local file object fileformat string equal formatpb formatjava output alias renew tokens matching alias null matches all conf configuration object passed along ioexception interruptedexception
alias token file save back file local filesystem tokenfile local file object hold input output fileformat string equal formatpb formatjava output alias overwrite service field fetched token text service apply alias tokens matching service text conf configuration object passed along ioexception
match fetchers service name service text andor url prefix
write credentials object local file f local file object format string equal formatpb formatjava creds credentials object written out conf configuration object passed along ioexception
format long integer type date string
returns tracking identifier used associate usages token across multiple client sessions currently function returns md5 getbytes tracking identifier
get bytes token identifier bytes identifier
compute hmac identifier using secret key return output password identifier bytes identifier key secret key bytes generated password
generate new random secret key new key
functionality retrievepassword except method throw retriableexception standbyexception indicate client retryfailover operation temporary issue server side identifier identifier validate password use invalidtoken token invalid standbyexception server standby state client try servers retriableexception token invalid server thinks may temporary issue suggests client retry ioexception allow future exceptions added without breaking compatibility
generate string urlquoted base64 encoded serialized form writable obj object serialize encoded string ioexception
cancel delegation token ioexception interruptedexception
whether private token true always private tokens
construct tokenproto token instance new tokenproto object holding copies data instance
clone token token clone
default constructor
modify writable value newvalue obj object read newvalue string urlsafe base64 encoded bytes ioexception
construct token given token identifier secret manager type token identifier id token identifier mgr secret manager
whether private clone public token thepublicservice public service name true public service specified
renew delegation token new expiration time ioexception interruptedexception
get token identifier object null could constructed because class could loaded example token identifier null ioexception
construct token components identifier token identifier password tokens password kind kind token service service token
set token kind intended used services wrap another services token newkind
construct token tokenproto tokenpb tokenproto object
never call method directly
given renewer add delegation tokens issuer its child issuers credentials object already present note method intended overridden issuers implement getcanonicalservice getdelegationtoken ensure consistent token acquisition behavior renewer user allowed renew delegation tokens credentials cache add new delegation tokens list new delegation tokens ioexception thrown ioexception io error occurs
issuers may need tokens additional services
parse command line arguments initialize subcommand also attempt perform kerberos login principal keytab flags passed args array args 0 arguments recognized 1 otherwise exception
parse arguments looking kerberos keytabprincipal found remove argument list attempt login one two found remove argument list log warning attempt login neither found return original args array nothing return pruned args array either flag present
load pathchildrencache inmemory map possible caches loaded keycache tokencache istokencache true loading tokencache false loading keycache
add entry jaas configuration passed name principal keytab necessary options set you entryname name entry eg client principal principal user keytab location keytab
method synchronizes state delegation token information local cache actual value zookeeper ident identifier token
get username encoded token identifier username owner
subclasses externalizing storage example zookeeper based implementations
create secret manager delegationkeyupdateinterval number milliseconds rolling new secret keys delegationtokenmaxlifetime maximum lifetime delegation tokens milliseconds delegationtokenrenewinterval often tokens must renewed milliseconds delegationtokenremoverscaninterval often tokens scanned expired tokens milliseconds
reset data structures mutable state
called object used
subclasses externalizing storage example zookeeper based implementations
update current master key generating delegation tokens called tokenremoverthread
remove expired delegation tokens cache
find delegationtokeninformation given token id verify token expired note method called acquiring secret managers monitor
subclasses externalizing storage example zookeeper based implementations
verifies given identifier password valid match identifier token identifier password password token invalidtoken
cancel token removing cache identifier canceled token invalidtoken invalid token accesscontrolexception user isnt allowed cancel
renew delegation token token token renew renewer full principal name user renewal new expiration time invalidtoken token invalid accesscontrolexception user cant renew token
update current master key called startthreads tokenremoverthread created tokenremoverthread afterwards
add previously used master key cache when nn restarts called activate
method intended used recovering persisted delegation tokens method must called secret manager activated before startthreads called identifier identifier read persistent storage renewdate token renew time ioexception
extract query string parameter without triggering http parameters processing servlet container request request name parameter get value parameter value null parameter defined ioexception thrown error parsing query string
cancels delegation token server endpoint require authenticated configured authenticator url url cancel delegation token from https urls supported token authentication token delegation token cancel doasuser user as token owner ioexception io error occurred
renews delegation token server endpoint using configured authenticator authentication url url renew delegation token from https urls supported token authentication token delegation token renew ioexception io error occurred authenticationexception authentication exception occurred
requests delegation token using configured authenticator authentication url url get delegation token from https urls supported token authentication token used user delegation token stored renewer renewer user doasuser user as token owner ioexception io error occurred authenticationexception authentication exception occurred
requests delegation token using configured authenticator authentication url url get delegation token from https urls supported token authentication token used user delegation token stored renewer renewer user ioexception io error occurred authenticationexception authentication exception occurred
renews delegation token server endpoint using configured authenticator authentication url url renew delegation token from https urls supported token authentication token delegation token renew doasuser user as token owner ioexception io error occurred authenticationexception authentication exception occurred
cancels delegation token server endpoint require authenticated configured authenticator url url cancel delegation token from https urls supported token authentication token delegation token cancel ioexception io error occurred
return delegation token kind returns delegation token kind
create new delegation token identifier kind token kind owner effective username token owner renewer username renewer realuser real username token owner
sets external delegationtokensecretmanager instance manage creation verification delegation tokens useful use cases secrets must shared across multiple services secretmanager delegationtokensecretmanager instance
returns remote usergroupinformation context current http request taking account proxy user requests remote usergroupinformation null none
method checks given http request corresponds management operation request http request true given http request corresponds management operation false otherwise ioexception case io error
sets external delegationtokensecretmanager instance manage creation verification delegation tokens useful use cases secrets must shared across multiple services secretmanager delegationtokensecretmanager instance
authenticates request looking delegation querystring parameter verifying valid token delegation querystring parameter delegates authentication kerberosauthenticationhandler unless disabled request http client request response http client response authentication token authenticated request ioexception thrown io error occurred authenticationexception thrown authentication failed
returns proxyuser configuration returned properties must start proxyuser subclasses may override method proxyuser configuration read place filter init parameters filterconfig filter configuration object proxyuser configuration properties servletexception thrown configuration could created
set authtype property name corresponding authentication handler class based input properties props input properties
delegates authenticationfiltergetconfigurationstring filterconfig overrides authenticationhandler use authentication type set simple kerberos order use corresponding implementation delegation token support configprefix parameter used filterconfig parameter used hadoopauth deprefixed configuration filter handler
method overridden restrict http authentication schemes available delegation token management functionality authentication schemes used delegation token management configured using delegationtokenschemesproperty basic logic check current request delegation token management yes check request contains authorization header missing return http 401 response wwwauthenticate header scheme configured delegation token management also possible client preemptively send authorization header scheme configured delegation token management detect case return http 401 response wwwauthenticate header scheme configured delegation token management client sent request authorization header scheme configured delegation token management forwarded underlying multischemeauthenticationhandler actual authentication finally requests excluding delegation token management forwarded underlying multischemeauthenticationhandler actual authentication
returns authenticated httpurlconnection delegation token present used taking precedence configured authenticator doas parameter null request done behalf specified doas user url url connect to https urls supported token authentication token used user doas user request behalf of null request self authenticated httpurlconnection ioexception io error occurred authenticationexception authentication exception occurred
sets delegation token transmitted url query string default transmitted using delegationtokenauthenticatordelegationtokenheader http header method provided enable webhdfs backwards compatibility usequerystring true token transmitted url query string false delegation token transmitted using delegationtokenauthenticatordelegationtokenheader http header
creates delegationtokenauthenticatedurl authenticator delegationtokenauthenticator instance use null default one used connconfigurator connection configurator
cancels delegation token server endpoint require authenticated configured authenticator url url cancel delegation token from https urls supported token authentication token delegation token cancel ioexception io error occurred
requests delegation token using configured authenticator authentication url url get delegation token from https urls supported token authentication token used user delegation token stored renewer renewer user doasuser user as token owner delegation token ioexception io error occurred authenticationexception authentication exception occurred
returns default delegationtokenauthenticator class use delegationtokenauthenticatedurl instance created without specifying one default class kerberosdelegationtokenauthenticator delegation token authenticator class use default
creates delegationtokenauthenticatedurl using default delegationtokenauthenticator class connconfigurator connection configurator
returns authenticated httpurlconnection uses delegation token given auth token instance token contains delegation token otherwise use configured delegationtokenauthenticator authenticate connection url url connect to https urls supported token authentication token used user authenticated httpurlconnection ioexception io error occurred authenticationexception authentication exception occurred
requests delegation token using configured authenticator authentication url url get delegation token from https urls supported token authentication token used user delegation token stored renewer renewer user delegation token ioexception io error occurred authenticationexception authentication exception occurred
sets default delegationtokenauthenticator class use delegationtokenauthenticatedurl instance created without specifying one default class kerberosdelegationtokenauthenticator authenticator authenticator class use default
renews delegation token server endpoint using configured authenticator authentication url url renew delegation token from https urls supported token authentication token delegation token renew ioexception io error occurred authenticationexception authentication exception occurred
returns authenticated httpurlconnection delegation token present used taking precedence configured authenticator url url connect to https urls supported token authentication token used user authenticated httpurlconnection ioexception io error occurred authenticationexception authentication exception occurred
creates delegationtokenauthenticatedurl authenticator delegationtokenauthenticator instance use null default one used
cancels delegation token server endpoint require authenticated configured authenticator url url cancel delegation token from https urls supported token authentication token delegation token cancel doasuser user as token owner ioexception io error occurred
renews delegation token server endpoint using configured authenticator authentication url url renew delegation token from https urls supported token authentication token delegation token renew doasuser user as token owner ioexception io error occurred authenticationexception authentication exception occurred
select delegation token tokens credentials based url
returns configured sslserversocketfactory configured sslsocketfactory generalsecurityexception thrown sslsocketfactory could initialized ioexception thrown io error occurred loading server keystore
returns configured sslengine configured sslengine generalsecurityexception thrown ssl engine could initialized ioexception thrown io error occurred loading server keystore
given httpurlconnection httpsurlconnection configures connection sslsocketfactory hostnameverifier sslfactory otherwise nothing conn httpurlconnection instance configure configured httpurlconnection instance ioexception io error occurred
initializes factory generalsecurityexception thrown ssl initialization error happened ioexception thrown io error happened reading ssl configuration
creates sslfactory mode sslfactory mode client server conf hadoop configuration sslfactory configuration read
returns hostname verifier used httpsurlconnections hostname verifier
returns configured sslsocketfactory configured sslsocketfactory generalsecurityexception thrown sslsocketfactory could initialized ioexception thrown io error occurred loading server keystore
extracts array subjectalt dns names x509certificate returns null arent any note java doesnt appear able extract international characters subjectalts extract international characters cn field or maybe version openssl im using test isnt storing international characters correctly subjectalts cert x509certificate array subjectalt dns names stored certificate
javaxnetsslhostnameverifier contract host hostname used create socket session sslsession remote server true host matched one certificate
counts number dots string string count dots number dots
starts reloader thread
creates reloadable trustmanager trustmanager reloads underlying trustore file changed type type truststore file typically jks location local path truststore file password password truststore file reloadinterval interval check truststore file changed milliseconds ioexception thrown truststore could initialized due io error generalsecurityexception thrown truststore could initialized due security error
stops reloader thread
releases resources used
resolves property name clientserver version applicable note method public testing purposes mode clientserver mode template property name template resolved property name
initializes keystores factory mode keystores used client server mode ioexception thrown keystores could initialized due io error generalsecurityexception thrown keystores could initialized due security error
returns keymanagers owned certificates keymanagers owned certificates
returns trustmanagers trusted certificates trustmanagers trusted certificates
sets configuration factory conf configuration factory
returns configuration factory configuration factory
main program args command line arguments exception
parse command line arguments initialize data hadoop credential create alias provider providerpath hadoop credential list provider providerpath hadoop credential delete alias provider providerpath f args 0 arguments recognized 1 otherwise ioexception
open initialize keystore ioexception problem reading password file problem reading keystore
build powershell script kill javaexe process remote machine processname name process kill attribute commandline host host process is path powershell script
attempt use evil reflection tricks determine pid launched process helpful ops debugging fencing process might gone wrong running system jvm doesnt work simply return null
set environment subprocess configuration s replaced s
abbreviate string putting middle it attempt keep logs getting messy cmd string abbreviate len maximum length abbreviate abbreviated string
add information target environment subprocess target environment
verify argument given conf parseable
execute command ssh session pumping stderr stdout logs
store results last attempt become active used that manually initiated failover report back results attempt become active initiator failover
ensure local node healthy state thus eligible graceful failover servicefailedexception node unhealthy
wait one following events another thread publishes results attempt become active using recordactiveattemptactiveattemptrecord the node enters bad health status the specified timeout elapses timeoutmillis number millis wait published record null timeout elapses service becomes unhealthy interruptedexception thread interrupted
coordinate graceful failover node servicefailedexception node fails become active ioexception error occurs
ask remote zkfc cede active status wait specified timeout attempting claim leader status remote node ask timeout amount time cede zkfcprotocol used talk ndoe ioexception
coordinate graceful failover proceeds several phases 1 preflight checks ensure local node healthy thus candidate failover 2a determine current active node local node need failover return success 2b get nodes 3a ask nodes yield election number seconds 3b ask active node yield election number seconds 4 allow normal election path run threads wait either become unhealthy see election attempt recorded normal code path 5 allow old active rejoin election future failback possible
check current state service join election election
haservicetarget current active node cluster null node active ioexception zkrelated issue occurs interruptedexception thread interrupted
request graceful failover cede active role causes zkfc transition local node standby quit election specified period time rejoin iff healthy
schedule call recheckelectability future
perform prefailover checks given service plan failover to eg prevent failing service eg due inaccessible already active healthy etc option ignore tosvc claims ready become active provided case performing failover allow become active eg triggers log roll standby learn new blocks leave safemode currently active service target service make active forceactive ignore tosvc reports ready failoverfailedexception avoid failover
failover service 1 service 2 failover fails try failback fromsvc currently active service tosvc service make active forcefence fence fromsvc even strictly necessary forceactive try make tosvc active even ready failoverfailedexception failover fails
try get ha state node given address function guaranteed quick ie short timeout retries purpose avoid fencing node already restarted
hook allow subclasses add parameters would like expose fencing implementationsscripts fencing methods free use map see fit notably shell script implementation takes entry prepends target substitutes adds environment script subclass implementations sure delegate superclass implementation well adding keys ret map mutated pass parameters fencer
returns proxy connect target ha service health monitoring gethealthmonitoraddress implemented return nonnull address proxy connect address otherwise returned proxy defaults using getaddress means methods behavior identical getproxyconfiguration int conf configuration timeoutms timeout milliseconds proxy connect target ha service health monitoring ioexception error
proxy connect target ha service
proxy zkfc associated ha service
interface implementation zookeeper callback monitor exists
get new zookeeper client instance protected test class inherit mock zookeeper instance new zookeeper client instance ioexception keeperexception zookeeper connectionloss exception
participate election app call joinelection result notified callback either becomeactive becomestandby app interfaces elector automatically monitor leader status perform reelection necessary app could potentially start standby mode ignore becomestandby call data set app nonnull data must set hadoopillegalargumentexception valid data supplied
try delete activebreadcrumb node gracefully giving active status fails simply warn since graceful release behavior optimization
clear state held within parent znode recursively deletes everything within znode well parent znode itself used its certain electors currently participating election
callbacks watchers pass reference zk client made original call dont want take action based callbacks prior clients quit election ctx zk client passed watcher true matches current client
waits next event zookeeper arrive connectiontimeoutms zookeeper connection timeout milliseconds keeperexception connection attempt times out zookeeper connectionloss exception code ioexception interrupted connecting zookeeper
create new activestandbyelector object elector created providing zookeeper configuration parent znode create znode reference callback interface parent znode name must service instances different across services leader lost new leader elected session timeout expires hence app must set parameter based needs failure response time session timeout must greater zookeeper disconnect timeout recommended 3x value enable zookeeper retry transient disconnections setting short session timeout may result frequent transitions active standby states issues like network outagesgs pauses zookeeperhostports zookeeper hostport zookeeper servers zookeepersessiontimeout zookeeper session timeout parentznodename znode create lock acl zookeeper acls authinfo list authentication credentials add zk connection app reference callback interface object ioexception hadoopillegalargumentexception
interface implementation zookeeper watch events connection node proxied watcherwithclientref
true configured parent znode exists
interface implementation zookeeper callback create
service instance drop election calling quitelection lose leader status held stop monitoring lock node instance wants participate election again needs call joinelection allows service instances take rotation known impending unavailable states eg long gc pause software upgrade needfence true underlying daemon may need fenced failover occurs due dropping election
breadcrumb node indicating another node may need fencing try fence node stat breadcrumb node read null breadcrumb node existed
create new activestandbyelector object elector created providing zookeeper configuration parent znode create znode reference callback interface parent znode name must service instances different across services leader lost new leader elected session timeout expires hence app must set parameter based needs failure response time session timeout must greater zookeeper disconnect timeout recommended 3x value enable zookeeper retry transient disconnections setting short session timeout may result frequent transitions active standby states issues like network outagesgs pauses zookeeperhostports zookeeper hostport zookeeper servers zookeepersessiontimeout zookeeper session timeout parentznodename znode create lock acl zookeeper acls authinfo list authentication credentials add zk connection app reference callback interface object failfast whether need add retry establishing zk connection ioexception hadoopillegalargumentexception
sleep given number milliseconds nonstatic separated out unit tests override behavior sleep
get data set active leader data set active instance activenotfoundexception active leader keeperexception zookeeper operation errors interruptedexception ioexception zookeeper connection could established
utility function ensure configured base znode exists recursively creates znode well parents
write activebreadcrumb node indicating node may need fenced failover oldbreadcrumbstat
checks whether target node active targetnodetoactivate true target node active exception occurred forceactive set otherwise false ioexception
ensure allowed manually manage ha state target service automatic failover configured automatic failover controllers state management generally error use haadmin command line so target target check true manual state management allowed
initiate graceful failover talking target nodes zkfc sends rpc zkfc coordinates failover tonode node fail status code 0 success ioexception failover succeed
add cli options specific failover command others
state transition valid checks currentproposed considered nontransition using array kills branch misprediction costs expense cache line misses current current state proposed proposed new state true transition new state valid
check state tansition valid throw exception name name service can null state current state proposed proposed new state
verify service given state expectedstate desired state servicestateexception service state different desired state
return state text tostring value current states description
create service state model instance chosen state state starting state
enter state thread safe proposed proposed new state original state servicestateexception transition permitted
callback state change event log service service changed
log events given log log destination events
stop services reverse order numofservicesstarted index stop work stoponlystartedservices flag say only start services started notinited inited runtimeexception first exception raised stop process after services stopped
passed object instance service add list services managed compositeservice object true service added false otherwise
get cloned list services list child services time invocation added services picked up
add passed service list services managed compositeservice service service added
servicestateexception current service state permit action
invokes serviceinit conf configuration service must null servicestateexception configuration null state change permitted something else went wrong
packagescoped method testing resets global listener list
initialization code needed service method ever called lifecycle specific service instance implementations need synchronized logic initconfiguration prevents reentrancy base implementation checks see subclass created new configuration instance so updates base class value conf configuration exception failure these caught possibly wrapped wil trigger service stop
notify local global listeners state changes exceptions raised listeners passed up
failure handling record exception triggered if one already services free call themselves exception exception
construct service name service name
add state change event lifecycle history
enter state record via recordlifecycleevent log info level newstate proposed new state original state wasnt already state state model permits state reentrancy
relay stop ioexception
put blocker blocker map replacing name name blocker name details specifics block must nonnull
remove blocker blocker map noop blocker present name name blocker
change new state notify listeners method block notifications issued caches list listeners notification begins additions removal listeners visible service service changed state
threadsafe addition new listener end list attempts reregister listener already registered ignored l listener
stop service null nothing exceptions caught logged warn level but throwables operation intended used cleanup operations log log warn service service may null exception caught null none was serviceoperationsstopquietlyservice
stop service null nothing exceptions caught logged warn level but throwables operation intended used cleanup operations log log warn service service may null exception caught null none was serviceoperationsstopquietlyservice
stop service do nothing service null state beneeds stopped service state checked before operation begins process not thread safe service service null
get name state states name
instantiate message cause cause exit code used otherwise generic launcherexitcodesexitservicelifecycleexception exit code used message exception message cause optional inner cause
instantiate using specified exit code exit code exception irrespetive exit code supplied inner cause exitcode exit code declare message exception message cause inner cause
convert exception runtimeexception exception types wrapped new instance servicestateexception fault exception throwable runtimeexception rethrow
convert exception runtimeexception caught exception already type typecast runtimeexception returned exception types wrapped new instance servicestateexception text text use new exception created fault exception throwable runtimeexception rethrow
bind interrupt handler illegalargumentexception exception could set
handler jvm api signal handling signal raised
create irq handler bound specific interrupt name signal name handler handler
uncaught exception handler error raised shutdown state system unknown point attempting clean shutdown dangerous instead exit thread thread failed exception raised exception
create instance launcher servicename name service text messages serviceclassname classname service
print warning message tries log logs warn operation log level disabled logs system error text warning text
build log message starting shutting down classname class server args arguments
override point get list configuration classes create array configs attempt create classpath logged
handler uncaught exceptions terminate service thread thread exception exception
get usage message ideally dynamically usage message
convert exception exitexception process may simple pass through otherwise new exception created exit code text supplied exception supplied exception inner cause if already right type pass through if implements exitcodeprovidergetexitcode exit code extracted used new exception otherwise exit code launcherexitcodesexitexceptionthrown used thrown exception thrown exitexception status code
launch service exceptions occur propagated upwards method returns status code means got far starting service implements launchableservice method launchableserviceexecute completed method returns service retrieved returned getservice conf configuration processedargs arguments configuration parameters stripped out addshutdownhook shutdown hook added terminate service shutdown tests set false execute executewait service stop classnotfoundexception classname classpath illegalaccessexception allowed class instantiationexception allowed instantiate interruptedexception thread interrupted exitutilexitexception exception defining status code exception failure if implements exitcodeprovider defines exit code containing exception
override point create options instance combine standard options set important synchronize uses optionbuilder optionbuilderclass new options
get service name via servicegetname service instantiated classname returned instead service name
report error tries log logerror log level disabled disabled message logged system error along throwntostring message message user thrown exception thrown
verify specified filenames exist filenames list files servicelaunchexception file found
launch service catching exceptions downgrading exit codes logging sets serviceexception value conf configuration use processedargs command line launcherspecific arguments stripped out addshutdownhook shutdown hook added terminate service shutdown tests set false execute executewait service stop exit exception status code 0 worked
extract command options apply configuration building array processed arguments hand service conf configuration update args main arguments args0is assumed service classname skipped remaining arguments exitutilexitexception jvm exiting disabled
override point register class handler controlc sigint interrupts subclasses extend extra operations exception handler threadsetdefaultuncaughtexceptionhandler new yarnuncaughtexceptionhandler
record exit exception raised save serviceexception exit code serviceexitcode exitexception exception
launch service exit parse command line build service configuration it start service if launchableservice execute it otherwise wait finish exit passing status code exitint string method args arguments service arg0 assumed service classname
override point create generic options parser subclass thereof conf hadoop configuration argarray array arguments generic options parser parse arguments ioexception failure
instantiate service defined serviceclassname sets configuration field value conf service field service created conf configuration use
creates configurations defined getconfigurationstocreate ensuring resources pushed in one cannot loaded logged operation continues except case class load isnt actually subclass configuration exitutilexitexception loaded class wrong type
parse command arguments extracting service class last element list after extracting rest field commandoptions field must already set conf configuration use args command line argument list remaining arguments servicelaunchexception processing arguments failed
shutdown handler query service hook reference if still valid servicestop operation invoked
register service shutdown hadoops shutdownhookmanager priority shutdown hook priority
unregister hook
shutdown operation subclasses may extend it primarily made available testing true service stopped exception raised
create formatted exception uses stringformatstring object build formatted exception english locale last argument throwable becomes cause exception also used parameter format exitcode exit code format format message use exception args list arguments
base implementation logs arguments debug level returns passed config unchanged
action signal success returning exit code 0
look handler signal signalname signal name handler found
register interrupt handler signalname signal name illegalargumentexception registration failed
shutdown callback stop service set atomic boolean stopped within shutdown time
subclasses may wish override efficient implementation
method makes change objects configuration calls reconfigurepropertyimpl update internal data structures method cannot overridden subclasses instead override reconfigurepropertyimpl
start reconfiguration task reload configuration background
constucts storage measure contains value unit measure unit unit measure value numeric value
configurationgetintstring int
configurationgetlongstring long
configurationgetstring string
configurationsetstring string string
configurationgetbooleanstring boolean
configurationgetfloatstring float
configurationgetstring
create new instance reconfigurationexception
create new instance reconfigurationexception
construct exception message
create new instance reconfigurationexception
using bigdecimal throw overflowing longmax first first num second second num returns double
using bigdecimal avoid issues overflow underflow value value divisor divisor returns double represents value
apply configuratio changes admin approved them
print configuration options changed
given key value pair decides whether redact returns either original value text indicating redacted key value original value text indicating redacted
matches given config key patterns determines whether considered sensitive enough redact logs plaintext displays key true parameter considered sensitive
get set parameters marked final final parameter set
get delimited values name property collection strings property specified empty collection returned optimized version getstringsstring name property name property value collection strings
fallback clear text passwords configuration name clear text password null
get value name property long property exists provided default value returned specified value valid long error thrown name property name defaultvalue default value numberformatexception value invalid property value long defaultvalue
get properties belonging tag tag tag properties matching tag
get credential entry name credential provider handle key deprecation provider credential provider name alias credential credential entry null found
set socket address client use connect name property hostport wildcard address replaced local hosts address host address properties configured host component address combined port component addr generate address allow optional control host name used multihome bindhost cases host multiple names hostproperty bindhost configuration name addressproperty service address configuration name defaultaddressvalue service default address configuration value addr inetsocketaddress service listener inetsocketaddress clients connect
writes properties attributes final resource given writer format output would be properties key key1 value value1 isfinal key1isfinal resource key1resource key key2 value value2 isfinal ke2isfinal resource key2resource output properties configuration object loaded input stream config configuration writer write ioexception
get value name property class implementing interface specified xface property specified defaultvalue returned exception thrown returned class implement named interface name class name defaultvalue default value xface interface implemented named class property value class defaultvalue
get value name property array class value property specifies list separated class names property specified defaultvalue returned name property name defaultvalue default value property value class defaultvalue
get iterator go list string keyvalue pairs configuration iterator entries
get value name property trimmed string defaultvalue property exists see configurationgettrimmed details name property name defaultvalue property default value value name defaultvalue set
get value name property null property exists key deprecated returns value first key replaces deprecated key null values processed hrefvariableexpansionvariable expansion returned name property name trimmed get value value name replacing property null property exists
return time duration given time unit valid units encoded properties suffixes nanoseconds ns microseconds us milliseconds ms seconds s minutes m hours h days d name property name vstr string value time unit suffix converted unit unit convert stored property exists
gets information property set typically path resource objects file url etc property came from also indicate set programmatically command line name property name get source of null property source wasnt found otherwise returns list sources resource older sources first ones list example configuration set command line written file read back first entry would indicate set command line second one would indicate file new configuration read from
adds set deprecated keys global deprecations method lockless works means creating new deprecationcontext based old one atomically swapping new context someone else updated context us reading old context swapping new one try win race deltas deprecations add
get delimited values name property array strings property specified null returned name property name property value array strings null
set value name property name theclass implementing given interface xface exception thrown theclass implement interface xface name property name theclass property value xface interface implemented named class
reload configuration previously added resources method clear configuration read added resources final parameters make resources read accessing values values added via set methods overlay values read resources
get input stream attached configuration resource given name name configuration resource name input stream attached resource
reload existing configuration instances
get value name property int property exists provided default value returned specified value valid int error thrown name property name defaultvalue default value numberformatexception value invalid property value int defaultvalue
new configuration settings cloned another configuration clone settings
get value name property set commadelimited int values property exists empty array returned name property name property value interpreted array commadelimited int values
get value name property without hrefvariableexpansionvariable expansionif key deprecated returns value first key replaces deprecated key null name property name value name property replacing property null property exists
get keys matching regex regex map matching keys
get value name property pattern property specified specified value valid pattern defaultvalue returned note returned value trimmed method name property name defaultvalue default value property value compiled pattern defaultvalue
append property attributes given link document property found configuration doc conf propertyname
sets deprecated properties currently set corresponding new property set useful iterating properties deprecated properties currently set properties need present
get value known password configuration element order enable elimination clear text passwords config method attempts resolve property name alias credentialprovider api conditionally fallsback config name property name password
try resolve provided element name credential provider alias name alias provisioned credential password null found ioexception
get value name property long human readable format property exists provided default value returned specified value valid long human readable format error thrown use following suffix case insensitive kkilo mmega ggiga ttera ppeta eexa name property name defaultvalue default value numberformatexception value invalid property value long defaultvalue
get properties belonging list input tags calls getallpropertiesbytag internally taglist list input tags properties matching tags
convert value one storage unit another value value sourceunit source unit convert targetunit target unit double
get socket address hostproperty inetsocketaddress hostproperty null addressproperty used useful cases want differentiate host bind address address clients use establish connection hostproperty bind host property name addressproperty address property name defaultaddressvalue default value defaultport default port inetsocketaddress
get value name property float property exists provided default value returned specified value valid float error thrown name property name defaultvalue default value numberformatexception value invalid property value float defaultvalue
get value name property trimmed string null property exists key deprecated returns value first key replaces deprecated key null values processed hrefvariableexpansionvariable expansion returned name property name value name replacing property null property exists
set configuration allow keys without values setup intended use testing val true allow configuration store keys without values
get local file directory named dirsprop given path dirsprop contains multiple directories one chosen based paths hash code selected directory exist attempt made create it dirsprop directory locate file path filepath local file directory given path
write property attributes json format given jsongenerator jsongen json writer config configuration name property name ioexception
set value name property name deprecated also sets value keys replace deprecated key name trimmed put configuration name property name value property value source place configuration value came for debugging illegalargumentexception value name null
read values passed tags store map later retrieval attributevalue confname confvalue confsource
add default resource resources loaded order resources added name file name file present classpath
get local file name directory named dirsprop given path dirsprop contains multiple directories one chosen based paths hash code selected directory exist attempt made create it dirsprop directory locate file path filepath local file directory given path
writes properties attributes final resource given writer propertyname empty property exists configuration format output would be property key key1 value value1 isfinal key1isfinal resource key1resource propertyname null empty behaves dumpconfigurationconfiguration writer output would be properties key key1 value value1 isfinal key1isfinal resource key1resource key key2 value value2 isfinal ke2isfinal resource key2resource propertyname empty property found configuration method throw illegalargumentexception config configuration propertyname property name writer write ioexception illegalargumentexception property name empty property found configuration
print warning property given name already exists different value
gets storage size config returns defaultvalue unit return value specified target unit name key name defaultvalue default value eg 100mb targetunit units want result in double formatted target units
returns alternative names nondeprecated keys previouslyset deprecated keys given nondeprecated key given key deprecated return null name property name alternative names
manual implementation following regex u0020 15x efficient regex matcher demonstrated hadoop11506 noticeable hadoop apps building assumption configurationget o1 hash table lookup especially eval long string eval string may contain variables requiring expansion 2element int array res evalsubstringres0 res1 var leftmost occurrence var eval variable found 1 1 returned
get delimited values name property collection strings trimmed leading trailing whitespace property specified empty collection returned name property name property value collection strings empty collection
get range start first integer range range start
get value name property double property exists provided default value returned specified value valid double error thrown name property name defaultvalue default value numberformatexception value invalid property value double defaultvalue
create new deprecationcontext copying previous deprecationcontext adding deltas previous deprecation context copy null start nothing deltas deltas apply
get reader attached configuration resource given name name configuration resource name reader attached resource
attempts repeatedly expand value expr replacing leftmost substring form var following precedence order by value environment variable var defined by value java system property var defined by value configuration key var defined var unbounded current state expansion prefixvarsuffix returned function also detects selfreferential substitutions ie foobar foobar cycle detected original expr returned loops involving multiple substitutions detected expr literal value config key null expr null otherwise value resulting expanding expr using algorithm above illegalargumentexception configurationmaxsubst replacements required
return xml dom corresponding configuration
return existence name property names valid value usually nonexistent commented xml name property name true property name exists without value
sets property currently unset name property name value new value
adds deprecated key global deprecation map override existing entries deprecation map used developers order add deprecation keys attempts call method loading resources once would lead unsupportedoperationexception multiple deprecation entries add efficient use adddeprecationsdeprecationdelta deltas instead key newkey custommessage
constructs mapping configuration includes properties start specified configuration prefix property names mapping trimmed remove configuration prefix confprefix configuration prefix mapping configuration properties prefix stripped
get value name property list objects implementing interface specified xface exception thrown classes exist implement named interface name property name xface interface implemented classes named name list objects implementing xface
convert string int treating empty strings default value value string value defaultvalue value string empty desired integer
return value matching enumerated type note returned value trimmed method name property name defaultvalue value returned mapping exists illegalargumentexception mapping illegal type provided
unset previously set property
load class name name class name class object classnotfoundexception class found
get value name property class property specified defaultvalue returned name class name defaultvalue default value property value class defaultvalue
return time duration given time unit valid units encoded properties suffixes nanoseconds ns microseconds us milliseconds ms seconds s minutes m hours h days d name property name defaultvalue value returned mapping exists unit unit convert stored property exists numberformatexception property stripped unit number
get socket address name property inetsocketaddress name property name defaultaddress default value defaultport default port inetsocketaddress
adds deprecated key global deprecation map custom message provided override existing entries deprecation map used developers order add deprecation keys attempts call method loading resources once would lead unsupportedoperationexception key deprecated favor multiple keys treated aliases other setting one resets others new value multiple deprecation entries add efficient use adddeprecationsdeprecationdelta deltas instead key key deprecated newkeys list keys take values deprecated key use adddeprecationstring key string newkey instead
add tags defined hadooptagssystem hadooptagscustom prop
adds deprecated key global deprecation map override existing entries deprecation map used developers order add deprecation keys attempts call method loading resources once would lead unsupportedoperationexception key deprecated favor multiple keys treated aliases other setting one resets others new value multiple deprecation entries add efficient use adddeprecationsdeprecationdelta deltas instead key newkeys custommessage use adddeprecationstring key string newkey string custommessage instead
gets storage size config file name key read defaultvalue default value return case key present targetunit storage unit used return value double value storage unit specified
get delimited values name property array strings trimmed leading trailing whitespace property specified empty array returned name property name property value array trimmed strings empty array
given value set ranges value value check value ranges
returns whether deprecated name warned name deprecated always return false
set socket address client use connect name property hostport wildcard address replaced local hosts address name property name addr inetsocketaddress listener store given property inetsocketaddress clients connect
get value name property boolean property specified specified value valid boolean defaultvalue returned name property name defaultvalue default value property value boolean defaultvalue
method provide warning message gives custom message nonnull default message otherwise key associated deprecated key source property source message logged deprecated key used
checks presence property name deprecation map returns first list new keys present deprecation map name itself property presently set property map contains entry deprecated key value deprecated key set value provided property name deprecations deprecation context name property name first property list properties mapping name name itself
get value name key deprecated returns value first key replaces deprecated key null property exists defaultvalue returned name property name trimmed get value defaultvalue default value property value defaultvalue property doesnt exist
write nondefault properties configuration given writer property name empty property exists configuration method writes property attributes writer property name null empty method writes configuration properties attributes writer property name empty property doesnt exist configuration method throws illegalargumentexception writer write to
new configuration behavior reading default resources turned off parameter loaddefaults false new instance load resources default files loaddefaults specifies whether load default files
clears keys configuration
set given property pattern pattern passed null sets empty pattern results calls getpattern returning default value name property name pattern new value
load class name returning null rather throwing exception couldnt loaded avoid overhead creating exception name class name class object null could found
get delimited values name property array strings trimmed leading trailing whitespace property specified default value returned name property name defaultvalue default value property value array trimmed strings default value
get delimited values name property array strings property specified default value returned name property name defaultvalue default value property value array strings default value
guts servlet extracted easy testing
return configuration daemon hosting servlet populated httpserver starts
declare mapper singleswitched script named configuration true iff script
get called superclass constructor check needed ensure raw mapping defined trying relaying null configuration conf
set configuration extract configuration parameters interest conf new configuration
build execute resolution command command executed directory specified system property userdir set otherwise current working directory used args list arguments null number arguments range output command
create instance given configuration conf configuration
caches resolved hostrack mappings two list parameters must equal size uncachedhosts list hosts uncached resolvedhosts list resolved host entries element indexi resolved value entry uncachedhostsi
get host x switch map copy cached map hosts rack
delegate switch topology query raw mapping via abstractdnstoswitchmappingismappingsingleswitchdnstoswitchmapping true iff raw mapper considered singleswitch
names list hostnames probe cached hosts names cached previously
names list hostnames look can empty cached resolution list hostnamesaddresses null names currently cache
return hostname without throwing exception returned hostname string format hostnameip address hostname
return free port number guarantee remain free used immediately s free port binding local socket
true given string subnet specified using cidr notation false otherwise
return inetaddress bind to bindwildcardaddress true returns null localaddr bindwildcardaddress s inetaddress
given string representation host return ip address textual presentation name string representation host either textual representation ip address host name ip address string format
adds static resolution host used setting hostnames names fake point well known host eg testcases require daemons different hostnames running machine order create connections daemons one set mappings hostnames localhost netutilsgetstaticresolutionstring used query actual hostname host resolvedname
return socketinputwrapper socket set given timeout socket associated channel socket timeout set specified value otherwise socketinputstream created reads configured timeout socket created using socket factories returned netutils must use interface instead socketgetinputstream general called socket see note socketinputwrappersettimeoutlong information socketgetchannel socket timeout timeout milliseconds zero waiting long necessary socketinputwrapper reading socket ioexception
returns inetsocketaddress client use connect given listening address addr listener socket address client use connect server
util method build socket addr either
like netutilsconnectsocket socketaddress int also takes local address port bind socket to socket endpoint remote address localaddr local address bind socket timeout timeout milliseconds
return inetaddress interface matches given subnet specified using cidr notation subnet subnet specified using cidr notation returnsubinterfaces whether return ips associated subinterfaces illegalargumentexception subnet invalid
create socket address given host port hostname might replaced another host set via addstaticresolutionstring string value hadoopsecuritytokenserviceuseip determine whether standard java host resolver used fully qualified resolver used host hostname ip use instantiate object port port number inetsocketaddress
retrieves resolved name passed host resolved name must set earlier using netutilsaddstaticresolutionstring string host resolution
take ioexception local host port remote host port details return ioexception input exception cause also include host details new exception provides stack trace place exception thrown extra diagnostics information exception type bindexception connectexception unknownhostexception sockettimeoutexception string constructor return new one type otherwise return ioexception desthost target host nullable destport target port localhost local host nullable localport local port exception caught exception exception throw
return hostname without throwing exception returned hostname string format hostname hostname
quote hostname null hostname hostname nullable quoted hostname unknownhost hostname null
get default socket factory specified configuration parameter hadooprpcsocketfactorydefault conf configuration default socket factory specified configuration jvm default socket factory configuration contain default socket factory property
resolve uris hostname add default port uri uri resolve defaultport none given uri
checks host local host name return inetaddress corresponding address host specified host valid local inetaddress null socketexception io error occurs
attempt obtain host name given string contains ip address optional port ipport string form ipport host name null name determined
given inetaddress checks see address local address comparing address interfaces node addr address check local nodes address true address corresponds local node
dropin replacement socketconnectsocketaddress int case normal sockets dont associated channels invokes socketconnectendpoint timeout socketgetchannel returns nonnull channel connect implemented using hadoops selectors done mainly avoid suns connect implementation creating threadlocal selectors since hadoop control closed could end taking available file descriptors javanetsocketconnectjavanetsocketaddress int socket address remote address timeout timeout milliseconds
getinputstreamsocket socketgetsotimeout getinputstreamsocket long
get socket factory corresponding given proxy uri given proxy uri corresponds absence configuration parameter returns null uri malformed raises exception propvalue property class name socketfactory instantiate assumed non null non empty socket factory defined property value
create inetsocketaddress given target string default port string cannot parsed correctly configname parameter used part exception message allowing user better diagnose misconfiguration target string either host hostport defaultport default port target include port number configname name configuration target loaded used exception message case parsing fails
returns outputstream socket socket associated socketchannel returns socketoutputstream given timeout socket channel socketgetoutputstream returned later case timeout argument ignored write wait data available socket created using socket factories returned netutils must use interface instead socketgetoutputstream socketgetchannel socket timeout timeout milliseconds may always apply zero waiting long necessary outputstream writing socket ioexception
used get resolutions added using netutilsaddstaticresolutionstring string return value list element contains array string form string0hostname string1resolvedhostname list resolutions
get socket factory given class according configuration parameter hadooprpcsocketfactoryclassclassname parameter exists fall back default socket factory configured hadooprpcsocketfactoryclassdefault default socket factory configured fall back jvm default socket factory conf configuration clazz class usually versionedprotocol socket factory
getoutputstreamsocket 0 timeout zero implies write wait data available documentation getoutputstreamsocket long returns outputstream socket socket associated socketchannel returns socketoutputstream given timeout socket channel socketgetoutputstream returned later case timeout argument ignored write wait data available socket created using socket factories returned netutils must use interface instead socketgetoutputstream getoutputstreamsocket long socket outputstream writing socket ioexception
add addresses associated given nif given subnet given list
given collection string representation hosts return list corresponding ip addresses textual representation names collection string representations hosts list corresponding ip addresses string format normalizehostnamestring
get host details string desthost destinatioon host nullable destport destination port localhost local host nullable string describing destination hostport local host
performs sanity check list hostnamesips verify least appear valid names list hostnamesips unknownhostexception
construct node name location name nodes name can null must contain pathseparator location nodes location parent nodes parent node level nodes level tree
set nodes parent parent parent
normalize path stripping trailing pathseparator path path normalize normalised path pathis null empty root returned illegalargumentexception first character non empty path pathseparator
set nodes level tree level level
construct node path path concatenation nodes location path separator name
set nodes name location name nullable name which cannot contain pathseparator location location
nodes path string representation
check two nodes node group hypervisor assumption is nodes leaf nodes node1 one node can null node2 another node can null true node1 node2 node group false otherwise exception illegalargumentexception either node1 node2 null node1 node2 belong cluster
sort nodes array distances reader networktopologysortbydistancenode node int except fourlevel network topology contains additional network distance node group local rack reader node data read nodes available replicas requested data activelen number active nodes front array
remove node update node counter rack counter necessary node node removed null
check network topology aware nodegroup
judge node represents node group true child children innernodes
add leaf node update node counter rack counter necessary node node added null exception illegalargumentexception add node leave node added leaf
given string representation node group specific network location loc pathlike string representation network location node group string
underlying readablebytechannel implementation illegalstateexception socket channel
set timeout reads stream note behavior differ subtly depending whether underlying socket associated channel particular channel call affect socket timeout all readers socket channel call affect timeout this stream such recommended create one socketinputwrapper instance per socket timeoutms new timeout 0 timeout socketexception timeout cannot set
set proxy socket factory described string parameter proxystr proxy address using format hostport
sort nodes array network distance reader threelevel topology node either local rack different rack reader sorting nodes based network distance reader reduces network traffic improves performance additional twist also randomize nodes network distance helps load balancing data skew reader node data read nodes available replicas requested data activelen number active nodes front array
convert network tree string
total number racks
return number leaves scope excludednodes scope starts return number nodes scope excludednodes scope path string may start excludednodes list nodes number available nodes
check two nodes rack node1 one node can null node2 another node can null true node1 node2 rack false otherwise exception illegalargumentexception either node1 node2 null node1 node2 belong cluster
sort nodes array network distance reader additional twist also randomize nodes network distance helps load balancing data skew reader node data read nodes available replicas requested data activelen number active nodes front array nondatanodereader true reader datanode
returns integer weight specifies far away node reader lower value signifies node closer uses network location calculate weight reader node data read node replica data weight
given string representation node return reference loc pathlike string representation node reference node null node tree
check tree contains node node node node true node already tree false otherwise
sort nodes array network distance reader using network location used reader datanode sorting nodes based network distance reader reduces network traffic improves performance reader node data read nodes available replicas requested data activelen number active nodes front array
randomly choose one node scope scope starts choose one nodes except ones scope otherwise choose one scope excludednodes given choose node thats excludednodes scope range nodes node chosen excludednodes nodes excluded chosen node
divide networklocation string two parts last separator get first part here networklocation
returns integer weight specifies far away node away reader lower value signifies node closer reader node data read node replica data weight
add leaf node update node counter rack counter necessary node node added null exception illegalargumentexception add node leave node added leaf
return distance two nodes assumed distance one node parent 1 distance two nodes calculated summing distances closest common ancestor node1 one node node2 another node distance node1 node2 zero integermaxvalue node1 node2 belong cluster
given string representation rack return children loc pathlike string representation rack newly allocated list nodes children
remove node update node counter rack counter necessary node node removed null
return distance two nodes comparing network paths without checking belong ancestor node reference assumed distance one node parent 1 distance two nodes calculated summing distances closest common ancestor node1 one node node2 another node distance node1 node2
total number leaf nodes
divide networklocation string two parts last separator get second part here networklocation
normalize path stripping trailing pathseparator path path normalize normalised path pathis null empty root returned illegalargumentexception first character non empty path pathseparator
randomly choose one node parentnode considering exclude nodes scope called netlocks readlock held parentnode parent node excludedscopenode node corresponding exclude scope excludednodes collection nodes excluded totalinscopenodes total number nodes parentnode excluding excludedscopenode availablenodes number available nodes parentnode could chosen excluding excludednodes chosen node null none chosen
return leaves scope scope path string leaves nodes specific scope
takes one selector end lru list free selectors selectors awailable creates new selector also invokes trimidleselectors channel ioexception
performs one io returns number bytes read written waits specified timeout channel read timeout sockettimeoutexception thrown buf buffer io ops selection ops used waiting suggested values selectionkeyopread reading selectionkeyopwrite writing number bytes read written negative implies end stream ioexception
closes selectors idle idletimeout 10 sec traverse whole list one crossed timeout
contract similar socketchannelconnectsocketaddress timeout socketchannelconnectsocketaddress channel selectablechannel endpoint ioexception
similar doiobytebuffer int except perform io waits channel ready io specified ops ops selection ops used waiting sockettimeoutexception select channel times out ioexception io error occurs
utility function check channel ok mainly throw ioexception instead runtime exception case mismatch mismatch occur many runtime reasons
puts selector back end lru list free selectos also invokes trimidleselectors info
waits channel given timeout using one cached selectors also removes cached selectors idle seconds channel ops timeout ioexception
call transfertofullyfilechannel long int mutablerate mutablerate null waitforwritabletime transfertotime
socketoutputstreamsocketgetchannel timeout create new ouput stream given timeout timeout zero treated infinite timeout sockets channel configured nonblocking socketoutputstreamsocketoutputstreamwritablebytechannel long socket channel associated it timeout timeout timeout milliseconds must negative ioexception
create new ouput stream given timeout timeout zero treated infinite timeout sockets channel configured nonblocking channel channel writing also selectablechannel channel configured nonblocking timeout timeout milliseconds must negative ioexception
transfers data filechannel using filechanneltransfertolong long writablebytechannel updates waitforwritabletime transfertotime time spent blocked network time spent transferring data disk network respectively similar readfully waits till requested amount data transfered filech filechannel transfer data from position position within channel transfer begins count number bytes transfer waitforwritabletime nanoseconds spent waiting socket become writable transfertime nanoseconds spent transferring data eofexception end input file reached requested number bytes transfered sockettimeoutexception channel blocks transfer longer timeout stream ioexception includes exception thrown filechanneltransfertolong long writablebytechannel
query dnstoswitchmapping instance single switch predicate simply assumes mappings derived class multiswitch mapping mapping query true base class says single switch mapping derived class
generate string listing switch mapping implementation mapping every known node number nodes unique switches known each entry separate line string presented ops team used debug messages
socketinputstreamsocketgetchannel timeout create new input stream given timeout timeout zero treated infinite timeout sockets channel configured nonblocking socketinputstreamsocketinputstreamreadablebytechannel long socket channel associated it timeout timeout timeout milliseconds must negative ioexception
create new input stream given timeout timeout zero treated infinite timeout sockets channel configured nonblocking channel channel reading also selectablechannel channel configured nonblocking timeout timeout milliseconds must negative ioexception
get called superclass constructor check needed ensure raw mapping defined trying relaying null configuration conf
get dependencies topology given host name host name getting dependency list hosts dependent provided host name
set configuration extract configuration parameters interest conf new configuration
returns hostname associated specified ip address provided nameserver loopback addresses hostip address reverse lookup ns host name reachable dns server host name associated provided ip namingexception namingexception encountered
returns host names associated provided nameserver address bound specified network interface strinterface name network interface subinterface query eg eth0 eth00 nameserver dns host name tryfallbackresolution true reverse dns resolution fails attempt resolve hostname inetaddressgetcanonicalhostname includes hosts file resolution string vector host names associated ips tied specified interface unknownhostexception given interface invalid
returns default first host name associated provided nameserver address bound specified network interface strinterface name network interface query eg eth0 nameserver dns host name default host names associated ips bound network interface unknownhostexception one encountered querying default interface
get ipaddress local host string loop back value local host address cannot determined loopback address localhost resolve systems network state nothing going work message logged error level null pointer returned pointer trigger failures later application ipaddress local host null serious problem
returns default first host name associated default nameserver address bound specified network interface strinterface name network interface query eg eth0 must null default host name associated ips bound network interface unknownhostexception one encountered querying default interface
networkinterface given subinterface name eg eth00 null interface given name found
returns default first host name associated provided nameserver address bound specified network interface strinterface name network interface query eg eth0 nameserver dns host name unknownhostexception one encountered querying default interface
determine local hostname retrieving cache known cannot determine host name return localhost local hostname localhost
returns first available ip address associated provided network interface local host ip default given strinterface name network interface subinterface query eg eth0 eth00 string default ip address text form local host ip returned interface name default specified unknownhostexception given interface invalid
returns ips associated provided interface any list inetaddress objects strinterface name network interface subinterface query eg eth0 eth00 string default returnsubinterfaces whether return ips associated subinterfaces given interface list ips associated provided interface local host ip returned interface name default specified io error looking given interface unknownhostexception given interface invalid
returns ips associated provided interface any textual form strinterface name network interface subinterface query eg eth0 eth00 string default returnsubinterfaces whether return ips associated subinterfaces given interface string vector ips associated provided interface local host ip returned interface name default specified io error looking given interface unknownhostexception given interface invalid
like dnsgetipsstring boolean returns ips associated given interface subinterfaces
returns host names associated default nameserver address bound specified network interface strinterface name network interface query eg eth0 list host names associated ips bound network interface unknownhostexception one encountered querying default interface
nif network interface get addresses set containing addresses subinterface nif see rationale using ordered set
judge node ancestor node n n node true node ancestor n
judge node represents rack true child children innernodes
send callback return whether domain socket closed result processing caller reason call entries mapping file descriptor entry fdset set file descriptors fd file descriptor true domain socket closed result processing
close domainsocketwatcher wait thread terminate one close first ignored
remove socket handler called sock socket remove
add socket sock socket add error readd socket already watching handler handler associate socket may called time function called
send callback domain socket closed result processing also remove entry file descriptor caller reason call entries mapping file descriptor entry fdset set file descriptors fd file descriptor
wake domainsocketwatcher thread
create pair unix domain sockets connected calling socketpair2 array two unix domain sockets connected other ioexception error
call shutdownshutrdwr unix domain socket ioexception
accept new unix domain connection method used sockets bound bind new connection ioexception io error performing accept socket closed us particularly accept timed out throws sockettimeoutexception
send filedescriptor objects process side socket descriptors file descriptors send jbuf bytes send must send least one byte offset offset jbuf array start at length length jbuf array use
disable validation server bind paths
create new domainsocket connected given path path path connect to ioexception io error performing connect new domainsocket
close socket
receive filedescriptor objects process side socket wrap fileinputstream objects
create new domainsocket listening given path path path bind listen on new domainsocket
add keyval pair string prefix suffix separated separator key key value value instance
build instance parent parent collector unused instance used parent method prefix string entry separator separator name value suffix suffix entry
construct tag name description value info tag value tag
throw metricsexception given property set key key validate
sink isnt set ignore errors throw metricsexception stream encountered exception message parameter used new exceptions message current file name currentfilepath appended it message exception message message current file name currentfilepath appended it metricsexception thrown error sink isnt ignoring errors
return property value its nonnegative throw exception its not key property key defaultvalue default value
initialize connection hdfs create base directory also launch flush thread
use given time determine current directory current directory based rollintervalminutes current time current directory
return next id suffix use creating log file method look files directory find one highest id suffix 1 suffix return it approach saves full linear probe matters case large number log files initial base file path lastid last id value used next id try ioexception thrown theres issue querying files directory
extract id suffix given file name file file name id 1 id could extracted
turn security property nicely formatted set namevalue strings allowing either property configuration set property property stringify stringified property
return supplied file system testing otherwise get new file system file system use metricsexception thrown file system could retrieved
schedule current intervals directory flushed ends running top next interval execute immediately time thread run
create new directory based current interval new log file directory ioexception thrown error occurs creating new directory new log file
create instance testing flushintervalmillis roll interval millis flushoffsetintervalmillis roll offset interval millis
check current directory time stamp theyre same create new directory new log file directory metricsexception thrown error occurs creating new directory new log file
test whether file system supports append return answer fs target file system
update nextflush variable next flush time add integer number flush intervals preserving initial random offset current time
sink isnt set ignore errors wrap throwable metricsexception throw it message parameter used new exceptions message current file name currentfilepath throwables string representation appended it message exception message message colon current file name currentfilepath throwables string representation wrapped square brackets appended it throwable wrap
return supplied configuration testing otherwise load new configuration configuration use
set nextflush variable initial flush time initial flush integer number flush intervals past beginning current hour random offset added rolloffsetintervalmillis initial flush time past used calculate future flush times current time
sink isnt set ignore errors throw new metricsexception message parameter used new exceptions message current file name currentfilepath appended it message exception message message current file name currentfilepath appended it
create new log file return fsdataoutputstream file specified path already exists add suffix starting 1 try again keep incrementing suffix nonexistent target path found file open update currentfsoutstream currentoutstream link currentfilepath set appropriately initial target path ioexception thrown call see exists fails
create new log file return fsdataoutputstream file specified path already exists open file append instead file open update currentfsoutstream currentoutstream link currentfilepath initial target path ioexception thrown call see append operation fails
extract roll interval configuration return milliseconds roll interval millis
sends ganglia metrics configured hosts ioexception
puts integer buffer 4 bytes bigendian
lookup gangliaconf cache found return default values metricname looked gangliaconf
puts string buffer first writing size string int followed bytes string padded necessary multiple 4 string written buffer offset location
method sends metrics ganglia servers method taken orgapachehadoopmetricsgangliagangliacontext31 minimal changes order keep sync groupname group name metric name metric name type type metric value value metric gconf gangliaconf metric gslope slope metric ioexception
method sends metrics ganglia servers method taken orgapachehadoopmetricsgangliagangliacontext30 minimal changes order keep sync groupname group name metric name metric name type type metric value value metric gconf gangliaconf metric gslope slope metric ioexception
construct metrics record info metricsinfo record timestamp record tags record metrics record
publish metrics snapshot sinks buffer metrics snapshot publish immediate indicates publish metrics immediately instead using separate thread
requests immediate publish metrics sources sinks
initialized metrics system prefix prefix system look configs prefix metrics system object
sample sources snapshot metricstags metrics buffer containing snapshot
construct metrics system prefix system
parent metricscollector using record builder info metrics information rf mf acceptable
consume elements block queue empty consumer consumer callback object interruptedexception
consume one element block queue empty one consumer time allowed consumer consumer callback object
dequeue one element head queue block queue empty first element interruptedexception
load configuration list files first successful load conf configuration object files list filenames try configuration object
return sub configs instance specified config assuming format specified follows typeinstanceoption value note special default instance excluded result type instance map instance key config object value
poke parents defaults key lookup value null
set value metric value set
decrement delta delta decrement
increment delta delta increment
add number samples sum running stat note although use method preserve accurate mean values large values numsamples may result inaccurate variance values due use single step welford method variance calculation numsamples number samples sum samples
construct sample statistics metric name metric description metric samplename metric eg ops valuename metric eg time latency extended create extended stats stdev minmax etc default
construct snapshot stat metric extended stat default name metric description metric samplename metric eg ops valuename metric eg time latency
add snapshot metric value metric
increment value delta delta increment
aggregates threads local samples global metrics caller ensure thread safety
add rate sample rate metric name rate metric elapsed time
initialize registry methods protocol show first snapshot convenient jmx implementations protocol protocol class
collects states maintained threadlocal any
increment value delta delta increment
initialize registry methods protocol show first snapshot convenient jmx implementations protocol protocol class
set value metric value set
decrement delta delta decrement
increment delta delta increment
create mutable long integer gauge info metadata metric ival initial value new gauge object
create mutable integer gauge info metadata metric ival initial value new gauge object
create mutable metric stats name metric desc metric description samplename metric eg ops valuename metric eg time latency extended produce extended stat stdev minmax etc true new mutable stat metric object
add sample stat metric name name metric value snapshot add
sample mutable metrics put snapshot builder builder contain metrics snapshot get metrics even values changed
create mutable integer counter info metadata metric ival initial value new counter object
create mutable float gauge info metadata metric ival initial value new gauge object
add tag metrics info metadata tag value tag override existing tag true registry for keep adding tags etc
create mutable metric estimates quantiles stream values name metric desc metric description samplename metric eg ops valuename metric eg time latency interval rollover interval estimator seconds new quantile estimator object metricsexception interval positive integer
create mutable metric stats name metric desc metric description samplename metric eg ops valuename metric eg time latency new mutable metric object
add tag metrics name tag description tag value tag override existing tag true registry for keep adding tags
create mutable long integer counter info metadata metric ival initial value new counter object
override handle custom mutable metrics methods source metrics source object method return metric annotation method new metric object null
remove prefix get any method name return capacitalized method name
instantiates new mutablequantiles metric rolls specified time interval name metric description longform textual description metric samplename type items stream eg ops valuename type values interval rollover interval in seconds estimator
get quantile estimator quantile estimator
add mutablemetric method annotated metric
change declared field field source object mutablemetric
make metrics source annotated object source annotated object metrics source
method testing replace scheduledtask
retrieve map metric name aggregate filter entries dont least minsamples map peer datanode id average latency node seen measurement period
constructor mutablerollingaverages metricvaluename
iterates snapshot capture avg metrics rolling structure mutablerollingaveragesaverages
parses space andor separated sequence server specifications form hostname hostnameport specs string null defaults localhostdefaultport specs server specs see description defaultport default port specified list inetsocketaddress objects
update cache return current cached record mr update record includingtags cache tag values for later lookup name true updated cache record
lookup metric value key name metric metric value
get cached record name record tags record cached record null
use metricsentryset instead entry set metrics
register mbean using standard mbeanname format hadoopservicename supplied parameters servicename namename thembean mbean register named used register mbean
register mbean using standard mbeanname format hadoopservicename supplied parameters servicename namename properties key value pairs define additional jmx objectname properties thembean mbean register named used register mbean
check argument false conditions arg argument check expression boolean expression condition msg error message expression false argument convenience
check argument false conditions arg argument check expression boolean expression condition msg error message expression false argument convenience
check argument false conditions arg argument check expression boolean expression condition msg error message expression false argument convenience
check argument false conditions arg argument check expression boolean expression condition msg error message expression false argument convenience
check argument false conditions type argument arg argument check expression boolean expression condition msg error message expression false argument convenience
add sample running stat x sample number self
add sample partial sum running stat note minmax evaluated using method nsamples number samples x partial sum self
construct new running sample stat
try remove extraneous items set sampled items checks item unnecessary based desired error bounds merges adjacent item is
get snapshot current values tracked quantiles snapshot tracked quantiles items added estimator returns null
resets estimator clearing previously inserted items
returns number samples kept estimator count current number samples
get estimated value specified quantile quantile queried quantile eg 050 099 estimated value quantile
add new value stream v
specifies allowable error rank depending quantiles targeted fri n function ckms paper its basically wide range rank be rank index list samples
merges items buffer samples array one pass efficient insert every item
encryption buffer based enough room inbuffer write buffer inbuffer full encryption write data underlying stream b data start offset data len number bytes write ioexception
update encryptor calculate counter padding
flush need encrypt data buffer write underlying stream flush
forcibly free direct buffers
encryption input inbuffer output outbuffer
get crypto codec specified algorithmmodepadding conf configuration ciphersuite algorithmmodepadding cryptocodec codec object null value returned crypto codec classes cipher suite configured
get crypto codec algorithmmodepadding config value hadoopsecuritycryptociphersuite conf configuration cryptocodec codec object null value returned crypto codec classes cipher suite configured
returns given protocol version supported version version number true version supported else false
return opensslcipher object implements specified transformation transformation name transformation eg aesctrnopadding opensslcipher opensslcipher object nosuchalgorithmexception transformation null empty invalid format openssl doesnt implement specified algorithm nosuchpaddingexception transformation contains padding scheme available
finishes multiplepart operation data encrypted decrypted depending cipher initialized result stored output buffer upon return output buffers position advanced n n value returned method output buffers limit changed outputremaining bytes insufficient hold result shortbufferexception thrown upon finishing method resets cipher object state previously initialized is object available encrypt decrypt data exception thrown cipher object need reset used again output output bytebuffer int number bytes stored output shortbufferexception illegalblocksizeexception badpaddingexception
forcibly clean context
continues multiplepart encryption decryption operation data encrypted decrypted depending cipher initialized inputremaining bytes starting inputposition processed result stored output buffer upon return input buffers position equal limit limit changed output buffers position advanced n n value returned method output buffers limit changed outputremaining bytes insufficient hold result shortbufferexception thrown input input bytebuffer output output bytebuffer int number bytes stored output shortbufferexception insufficient space output buffer
iv produced adding initial iv counter iv length aesblocksize
read crypto buffer size
check floor buffer size
input stream orgapachehadoopfsseekable return its current position otherwise return 0
forcibly free direct buffer
aesctrnopadding required
aesctr consume input data requires enough space destination buffer decrypt entire input buffer
aesctr consume input data requires enough space destination buffer encrypt entire input buffer
convert ciphersuite name algoblocksize fixed certain cipher suite need compare name name cipher suite name ciphersuite cipher suite
returns suffix cipher suite configuration string configuration suffix
aesctr consume input data requires enough space destination buffer encrypt entire input buffer
aesctr consume input data requires enough space destination buffer decrypt entire input buffer
get decryptor pool
return direct buffer pool
clean direct buffer pool
calculate counter iv update decryptor
seek position
get underlying stream position
positioned read fully threadsafe
decryption buffer based data outbuffer read buffer data outbuffer read underlying stream decryption b buffer decrypted data read buffer offset len maximum number decrypted data bytes read int total number decrypted data bytes read buffer ioexception
bytebuffer read
positioned read threadsafe
get direct buffer pool
read data underlying stream
decrypt length bytes buffer starting offset output also put buffer starting offset threadsafe
forcibly free direct buffers
reset underlying stream offset clear inbuffer outbuffer typically happens seeklong skiplong
method executed immediately decryption check whether decryptor updated recalculate padding needed
decryption using inbuffer input outbuffer output upon return inbuffer cleared decrypted data starts outbufferposition ends outbufferlimit
skip n bytes
return decryptor pool
decrypt data buf total n bytes given start position output also buf start position bufposition buflimit unchanged decryption
generates integer containing userspecified number random bits right justified leading zeros numbits number random bits generated 0 numbits 32 int int containing userspecified number random bits right justified leading zeros
generates userspecified number random bytes its threadsafe bytes array filled random bytes
keystore might gone flush case either new old files might exists method tries load keystore one intermediate files oldpath old file created flush newpath new file created flush permissions loaded file ioexception nosuchalgorithmexception certificateexception
try loading user specified path else load backup path case exception due badwrong password path actual path load backuppath backup path old permissions loaded file nosuchalgorithmexception certificateexception ioexception
open initialize keystore ioexception problem reading password file problem reading keystore
reencrypts encrypted key version using initialization vector key material latest key version name key name key provider latest key version name provider one encrypted passedin encrypted key version encrypted key version returned note generated key stored keyprovider ekv encryptedkeyversion containing keyversionname iv reencrypted encryptedkeyversion ioexception key material could reencrypted generalsecurityexception key material could reencrypted cryptographic issue
factory method create new encryptedkeyversion passed decryptencryptedkey note fields returned encryptedkeyversion partially populated necessarily suitable operations besides decryption keyname key name encryption key use encrypt encrypted key encryptionkeyversionname version name encryption key used encrypt encrypted key encryptedkeyiv initialization vector encrypted key iv encryption key used encrypt encrypted key derived iv encryptedkeymaterial key material encrypted key encryptedkeyversion suitable decryption
decrypts encrypted byte key material using given key version name initialization vector encryptedkey contains keyversionname iv decrypt encrypted key material keyversion decrypted key material version name ek for encryption key ioexception thrown key material could decrypted generalsecurityexception thrown key material could decrypted cryptographic issue
derive initialization vector iv encryption key iv encrypted key derived iv used encryption key decrypt encrypted key alternative using iv encryption key encrypted key even simple symmetric transformation like improves security avoiding iv reuse ivs also fairly unique among different eeks encryptedkeyiv encrypted key ie getencryptedkeyiv iv encryption key
generates key material encrypts using given key version name initialization vector generated key material length keyversion material encrypted using cipher note generated key stored keyprovider encryptionkeyname latest keyversion keys material encrypted encryptedkeyversion generated key material version name eek for encrypted encryption key ioexception thrown key material could generated generalsecurityexception thrown key material could encrypted cryptographic issue
creates keyprovidercryptoextension using given keyprovider given keyprovider implements cryptoextension interface keyprovider provide extension functionality given keyprovider implements keyproviderextension interface keyprovider extended keyprovider implements cryptoextension interface keyprovider extended provide extension functionality otherwise default extension implementation used keyprovider keyprovider use create keyprovidercryptoextension extension keyprovidercryptoextension instance using given keyprovider
create new encryptedkeyversion keyname name encryption key used encrypt encrypted key encryptionkeyversionname version name encryption key used encrypt encrypted key encryptedkeyiv initialization vector encrypted key iv encryption key used encrypt encrypted key derived iv encryptedkeyversion encrypted encryption key version
constructor used sub classes provide delegatingproxying functionality keyprovidercryptoextension keyprovider extension
notifies underlying cryptoextension implementation warm implementation specific caches specified keyversions keynames arrays key names
batched version reencryptencryptedkeyencryptedkeyversion encrypted key version reencrypts encrypted key version using initialization vector key material latest key version name key name latest key version name provider one encrypted passedin encrypted key version encrypted key version returned note generated key stored keyprovider ekvs list containing encryptedkeyversions reencrypted encryptedkeyversions order ioexception encryptedkeyversion could reencrypted generalsecurityexception encryptedkeyversion could reencrypted cryptographic issue
creates keyproviderdelegationtokenextension using given keyprovider given keyprovider implements delegationtokenextension interface keyprovider provide extension functionality otherwise default extension implementation used keyprovider keyprovider use create keyproviderdelegationtokenextension extension keyproviderdelegationtokenextension instance using given keyprovider
parse command line arguments initialize data hadoop key create keyname size size cipher algorithm provider providerpath hadoop key roll keyname provider providerpath hadoop key list provider providerpath hadoop key delete keyname provider providerpath i hadoop key invalidatecache keyname provider providerpath args command line arguments 0 success 1 failure ioexception
main entry point keyshell strictly speaking return void systemexit return code 0 success 1 failure args command line arguments exception
serialize metadata set bytes serialized bytes ioexception
get key metadata bulk names names keys get ioexception
get current version key used encrypting new data name base name key version name current version key null key version doesnt exist ioexception
generates key material size length key algorithm algorithm use generating key generated key nosuchalgorithmexception
get algorithm cipher algorithm name
get algorithm cipher algorithm name
roll new version given key generating material it implementation generates key material calls rollnewversionstring byte method name basename key name new version key ioexception
deserialize new metadata object set bytes bytes serialized metadata ioexception
create new key generating material it given key must already exist implementation generates key material calls createkeystring byte options method name base name key options options new key version name first version key ioexception nosuchalgorithmexception
split versionname base name converts aaabbb3 aaabbb versionname version name split base name key ioexception
constructor conf configuration provider
find provider given key providerlist list providers keyname key name looking keyprovider key
create keyprovider based provided uri uri key provider uri conf configuration initialize key provider key provider specified uri null provider specified uri scheme could found ioexception thrown provider failed initialize
get size queue keyname used unit tests keyname key name int queue size
initializes value queues provided keys calling fill method numinitvalues values keynames array key names executionexception
removes num values currently head queue provided key immediately fire queue filler function key exist many values actually returned governed syncgenerationpolicy specified user keyname string key name num minimum number values return list values returned ioexception executionexception
removes value currently head queue provided key immediately fire queue filler function key exist queue exists values drained ask generator function add 1 value queue drain it keyname string key name e next value queue ioexception executionexception
drains queue provided key keyname key drain queue
constructor takes following tunable configuration parameters numvalues number values cached queue particular key lowwatermark ratio number current entriesnumvalues fillqueueforkey funciton invoked fill queue expiry expiry time key associated queue evicted cache numfillerthreads number threads use filler thread policy syncgenerationpolicy use client calls getatmost refiller implementation queuerefiller
shutdown valuequeue executor threads
calls wrapped configure method sets timeouts conn httpurlconnection instance configure connection ioexception
generate delegationtokenauthenticatedurltoken given generic typed delegation token dtoken delegation token delegationtokenauthenticatedurltoken delegation token set delegation token passed in
sets timeout wraps another connection configurator timeout set connect read timeouts seconds cc another configurator wrap may null
get doas user name actualugi ugi user creating client possible creator kmsclientprovier calls method behalf proxyuser the doasuser case call made proxy user doas user name ioexception
provider expects uris following form kms proto http https authority hosts hostname string port integer always create loadbalancingkmsclientprovider uri correct
transform input xml given stylesheet stylesheet stylesheet xml input xml data output transformerconfigurationexception transformerexception
completes node moving parent node next child
adds new phase caller needs set progress weightage
called execution leaf node set progress
computes progress node
adds node tree gives equal weightage phases
adds named node specified progress weightage tree
adds n nodes tree gives equal weightage phases
returns progress weightage given phase phasenum phase number phasechild node need progress weightage returns progress weightage specified phase
adds node specified progress weightage tree
adds named node tree
find jar contains class name any return jar file even first thing class path class name clazz class find jar file contains class null ioexception
checks class included system class class system class matches one positive patterns none negative ones name class name check systemclasses list system class configurations true class system class
create instance class name classname outcome
print something stdout string print
dump resource name resource name status code
log class loaded from name classname clazz class
main entry point runs class via toolrunner exits appropriate exit code args argument list
run classresource find load operation args command specific arguments outcome exception something went wrong
loads class given name name classname outcome code
print stack trace text e exception print text text print
print something stderr string print
change output streams something systemout systemerr streams new stdout stream err new stderr stream
print usage message args command line arguments exit code
load resource name resource name status code
create instance gctimemonitor its started stay alive monitor gc time percentage shutdown called dont put limit number gctimemonitor instances create alerthandler null necessarily call shutdown given instance needed otherwise may create memory leak running gctimemonitor keep alerthandler object memory turn may reference keep memory many objects observationwindowms interval percentage gc time calculated practical value would somewhere 30 sec several minutes sleepintervalms frequently thread wake check gc timings also frequency alerthandler invoked gc time percentage exceeds specified limit practical value would likely 5001000 ms maxgctimepercentage gc time percentage limit 0100 within observationwindowms exceeded alerthandler invoked every sleepintervalms milliseconds gc time percentage falls limit alerthandler single method interface invoked gc time percentage exceeds specified limit
let percentage max memory let e roundlog2 t then choose capacity 2esize reference unless outside close interval 1 230
recommendedlength recommended size internal array
find next nonempty entry starting index 1
remove element corresponding key given keyhashcode index element exists return it otherwise return null
print detailed information object
return default os instance unsupportedoperationexception cannot determine os default instance detected os
sort given range items using heap sort
return buffer pool returned buffer may recycled user must continue use way buf buffer return
return number available buffers given size used tests
allocate direct buffer specified size bytes pooled buffer available returns that otherwise allocates new one
ensure existence given directory dir directory check ioexception cannot created already exist
unpack matching files jar entries inside jar match given pattern skipped jarfile jar file unpack todir destination directory unpack jar unpackregex pattern match jar entries ioexception io error occurred todir cannot created already exist
unpack matching files jar entries inside jar match given pattern skipped keep also copy entire jar directory backward compatibility todo remove feature new release unjar inputstream jar stream unpack todir destination directory unpack jar unpackregex pattern match jar entries ioexception io error occurred todir cannot created already exist
unpack matching files jar entries inside jar match given pattern skipped inputstream jar stream unpack todir destination directory unpack jar unpackregex pattern match jar entries ioexception io error occurred todir cannot created already exist
creates classloader based environment specified user hadoopuseclientclassloader specified creates application classloader provides isolation user class space hadoop classes dependencies forms class space user jar well hadoopclasspath otherwise creates classloader simply adds user jar classpath
find first option required class static class find parent class array cls dynamic class find opts list options look first option matches ioexception
prepend new options old options type options oldopts old options newopts new options new array options
returns javautilconcurrentthreadfactory names created thread uniquely common prefix prefix prefix every created threads name javautilconcurrentthreadfactory names threads
thread pool blocks clients submitting additional tasks already activetasks running threads waitingtasks tasks waiting queue activetasks maximum number active tasks waitingtasks maximum number waiting tasks keepalivetime time threads cleaned unit unit time unit prefixname prefix name threads
get named threadfactory builds daemon threads prefix name prefix threads created factory thread factory creates named daemon threads supplied exception handler normal priority
removes returns least element priorityqueue logsize time
adds object priorityqueue logsize time one tries add objects maxsize initialize runtimeexception arrayindexoutofbound thrown
removes entries priorityqueue
returns least element priorityqueue constant time
adds element priorityqueue logsize time either priorityqueue full lessthanelement top element true element added false otherwise
subclass constructors must call this
compares two version name strings using mavens comparableversion class version1 first version compare version2 second version compare negative integer version1 precedes version2 positive integer version2 precedes version1 0 two versions equal
parse path component given request return wo decoding request http request parse servletname name servlet precedes path path component null default charset supported
get parameter servletrequest return null parameter contains white spaces
initial html header
long value passed given parameter throwing exception present valid number
reads lines file filename lines string array null file exist file name null ioexception
return true jnibased native crc extensions available
verify given buffers data checksums throw exception checksum invalid buffers given function position initially start data limit set end data position limit mark modified bytespersum chunk size eg 512 bytes checksumtype datachecksum type constant null supported sums directbytebuffer pointing beginning stored checksums data directbytebuffer pointing beginning data check basepos position file data buffer starts filename name file verified checksumexception invalid checksum
api compatible hadoop 1x
driver example programs looks first command line argument tries find example program name found calls main method class rest command line arguments args argument user args0 command run 1 error 0 success nosuchmethodexception securityexception illegalaccessexception illegalargumentexception throwable anything thrown example programs main
method adds classed repository name name string want class instance called mainclass class want add repository description description class nosuchmethodexception securityexception
create description example program mainclass class main example program description string display user help messages securityexception cant use reflection nosuchmethodexception class doesnt main method
invoke example application given arguments args arguments application throwable exception thrown invoked method
string value include exception type exit code message exit code message
forcibly terminates currently running java virtual machine status exit code use exception haltexception throwable triggered termination exception haltexception status overrides passed in haltexception systemexitint disabled
true terminate called
like terminateint string uses given throwable build message display throw exitexception status exit code use exception exitexception throwable triggered termination exception exitexception status overrides passed in exitexception systemexitint disabled
string value include exception type exit code message exit code message
handler memory events no attempt made cleanly shutdown support halt blocking robust printing event stderr done oome memory event
forcibly terminates currently running java virtual machine exception argument rethrown jvm halting disabled ee exception containing status code message stack trace haltexception runtimehaltint disabled
inner termination either exit exceptions exit code or system exits disabled rethrow exception ee exit exception
args
prints message stderr exits status code status exit code msg message
main entry point args commandline arguments
construct daemon thread
construct daemon thread part specified thread group
creates new keyprovider given configuration configuration key name conf configuration configkeyname configuration key name new keyprovider null provider found ioexception keyprovider improperly specified configuration
skip new value
creates http servlet response serializing exception json response servlet response status error code set response ex exception serialize response ioexception thrown error creating response
validates status httpurlconnection expected http status code current status code expected one throws exception detail message using server side error messages available note method throw deserialized exception even declared throws method signature conn httpurlconnection expectedstatus expected http status code ioexception thrown current status code match expected one
creates http jaxrpc response serializing exception json status error code set response ex exception serialize response jaxrpc response set error json encoded exception
handle incoming signal signal incoming signal
static method execute shell command covers simple cases without requiring user implement shell interface env map environment keyvalue cmd shell command execute output executed command ioexception problem
create shell instance reexecuted run method invoked given elapsed time calls interval minimum duration milliseconds wait reexecuting command set 0 minimum redirecterrorstream error stream merged normal output stream
return command set owner
get file reference winutils always raises exception isnt one file instance referring winutils bin filenotfoundexception failure locate file
command get given users groups list os windows command get users primary group first finally get groups list includes primary group ie users primary group included twice
validate accessibility hadoop home directory directory expected hadoop home directory filenotfoundexception specified path reference valid directory
create new instance shellcommandexecutor execute command execstring command execute arguments dir notnull specifies directory set current working directory command null current working directory modified env notnull environment command include keyvalue pairs specified map null current environment modified timeout specifies time milliseconds command killed status marked timedout 0 command timed out inheritparentenv indicates process inherit env vars parent process not
static method return set shell objects
returns command run given script script interpreter inferred platform cmd windows bash otherwise script file script run string command run script
query see system java 7 later hadoop requires java 7 later always returns true call isnt needed more please remove uses it true always
fully qualify path binary known hadoop bin location primarily useful disambiguating callouts executable subcomponents hadoop avoid clashes executables may path caveat call doesnt format path bin directory also checks file existence composed path output call cached callers executable executable executable file reference filenotfoundexception path exist
static method execute shell command covers simple cases without requiring user implement shell interface env map environment keyvalue cmd shell command execute timeout time milliseconds script marked timeout output executed command ioexception problem
look setsid true setsid present
return command send signal given pid
run command
return regular expression string match environment variables
return command get permission information
locate winutils binary fail meaningful exception stack trace rte method use methods dont explicitly throw ioexception path winutilsexe runtimeexception path resolvable
static method return memory lock limit datanode ulimit max value memory locked capped long value specifying memory lock limit
returns commands instance arguments spaces presented quotes round arguments presented raw string representation object
return command create symbolic links
return command set permission specific file perm string permission set recursive boolean true apply subdirectories recursively file string file set string containing command arguments
get hadoop home directory invalid throw exception path referring hadoop home filenotfoundexception directory doesnt exist
static method destroy running shell processes iterates map currently running shell processes destroys one one method thread safe
execute shell command ioexception command fails command well constructed
quote given arg bash interpret single value note quotes one level bash passing badly written shell script need fix shell script arg argument quote quoted string
fully qualify path binary known hadoop bin location primarily useful disambiguating callouts executable subcomponents hadoop avoid clashes executables may path caveat call doesnt format path bin directory also checks file existence composed path output call cached callers executable executable executable file reference filenotfoundexception path exist ioexception path canonicalization failures
command get given users group id list command get users primary group first finally get groups list includes primary group ie users primary group included twice command support windows return group names
return command read target symbolic link
unix command get current users groups list
return command set permission
check see command needs executed execute needed
returns timeout value set executors subcommands timeout value milliseconds
command get given netgroups user list
inner logic getqualifiedbinstring accessible tests hadoophomedir home directory assumed valid executable executable path binary filenotfoundexception executable foundvalid
checks given command string fits windows maximum command line length note input expected already include space delimiters extra count added delimiters commands command parts including space delimiters
centralized logic discover validate sanity hadoop home directory lot work called privately initialization per process directory exists via specified command line via dhadoophomedir hadoophome environment variable filenotfoundexception properties absent specified path reference valid directory
create filenotfoundexception inner nested cause set given exception compensates fact fnfe doesnt initializer takes exception text error text ex inner exception new exception throw
resize internal table given capacity
checks need expand expands necessary
retrieve atomic view included excluded hosts includes set populate included hosts excludes set populate excluded hosts use gethostdetails instead
retrieve atomic view included excluded hosts includehosts set populate included hosts excludehosts map populate excluded hosts use gethostdetails instead
returns contents machinelist collection used testing contents machinelist
accepts ip address return true ipaddress list ipaddress true ipaddress part list
accepts collection ipcidrhost addresses hostentries addressfactory addressfactory convert host inetaddress
create line reader reads given stream using given buffersize using custom delimiter array bytes input stream buffersize size read buffer recorddelimiterbytes delimiter ioexception
read line terminated custom delimiter
create line reader reads given stream using iofilebuffersize specified given configuration using custom delimiter array bytes input stream conf configuration recorddelimiterbytes delimiter ioexception
read one line inputstream given text str object store given line without newline maxlinelength maximum number bytes store str rest line silently discarded maxbytestoconsume maximum number bytes consume call hint line cross threshold allow happen overshoot potentially much one buffer length number bytes read including longest newline found ioexception underlying stream throws
read line terminated one cr lf crlf
create line reader reads given stream using given buffersize input stream buffersize size read buffer ioexception
create line reader reads given stream using default buffersize using custom delimiter array bytes input stream recorddelimiterbytes delimiter
shut threadpools immediately
create asyncdiskservices set volumes specified root directories asyncdiskservices uses one threadpool per volume async disk operations volumes roots file system volumes
gracefully start shut threadpools
execute task sometime future using threadpools
wait termination thread pools milliseconds number milliseconds wait true thread pools terminated without time limit interruptedexception
cause current thread sleep close possible provided number milliseconds method log ignore interruptedexception encountered millis number milliseconds current thread sleep
convenience method returns resource inputstream classpath using given classloader cl classloader used retrieve resource resourcename resource retrieve ioexception thrown resource cannot loaded inputstream resource
convenience method returns resource inputstream classpath uses threads context classloader load resource resourcename resource retrieve ioexception thrown resource cannot loaded inputstream resource
returns crccomposer collapse ingested crcs single value
composes numchecksumstoread additional crcs current digest checksumin crc expected correspond exactly bytespercrc underlying data bytes
updates single additional crc corresponds underlying data size bytespercrc
composes length crcsizeinbytes crcs crcbuffer crc expected correspond exactly bytespercrc underlying data bytes length must multiple expected bytesize crc
returns crccomposer collapse crcs every combined underlying data size aligns specified stripe boundary example update called 20 crcs bytespercrc 5 stripelength 10 every two 10 5 consecutive crcs combined other yielding list 10 crc stripes final digest corresponding 10 underlying data bytes using stripelength greater total underlying data size equivalent using nonstriped crccomposer
returns byte representation composed crcs stripelength specified digest length equal exactly one crc otherwise number crcs returned array equal total sum bytespercrc divided stripelength sum bytespercrc multiple stripelength last crc array corresponds totallength stripelength underlying data bytes
tool test native library availability
save local file existing file overwritten unless os blocks that file file path path ioexception io exception
convert instance string form output robust operation convert jsongenerating exceptions error text instance nonnull instance json string
save hadoop filesystem fs filesystem path path overwrite existing file overwritten ioexception io exception
convert json file resource input file parsed json ioexception io problems jsonparseexception input wellformatted jsonmappingexception failure map json class
create instance bound specific type classtype class marshall failonunknownproperties fail unknown property encountered pretty generate pretty indented output
load json text file jsonfile input file parsed json ioexception io problems jsonparseexception input wellformatted jsonmappingexception failure map json class
load hadoop filesystem theres check data availability file open raising eofexception streamavailable 0 allows meaningful exception without round trip overhead getfilestatus call opening file may brittle fs stream doesnt return value here standard filesystems do json parsing mapping problems converted ioes fs filesystem path path loaded object ioexception io json parse problems
write json bytes close file dataoutputstream output stream always closed ioexception failure
convert json json input parsed json ioexception io problems jsonparseexception input wellformatted jsonmappingexception failure map json class
try perform disk io writing given file without using native io file ioexception nonretriable error
generate path name test file given directory file object
checks current running process read write execute given directory using methods file object dir file check diskerrorexception dir readable writable executable
retrieve current fileioprovider method must used outside unit tests current fileioprovider
performs disk io writing new file given directory syncing file contents disk increases likelihood catching catastrophic diskcontroller failures sooner dir directory checked diskerrorexception hit error trying perform disk io file
create local directory necessary check permissions also ensure read written into localfs local filesystem dir directory expected permission diskerrorexception ioexception
create directory doesnt exist check dir readable writable executable perform disk io ensure disk usable writes dir diskerrorexception
semantics mkdirswithexistscheck method different mkdirs method provided suns javaiofile class following way creating nonexistent parent directories method checks existence directories mkdir fails point since directory might created process mkdir exists check fails seemingly nonexistent directory signal error suns mkdir would signal error return false directory attempting create already exists mkdir fails dir true success false failure
see fileoutputstreamfileoutputstreamfile
replace fileioprovider tests method must used outside unit tests newfosprovider old fileioprovider
see fileoutputstreamwritebyte
create directory check permissions already exists semantics mkdirswithexistsandpermissioncheck method different mkdirs method provided suns javaiofile class following way creating nonexistent parent directories method checks existence directories mkdir fails point since directory might created process mkdir exists check fails seemingly nonexistent directory signal error suns mkdir would signal error return false directory attempting create already exists mkdir fails localfs local filesystem dir directory created checked expected expected permission ioexception
create local directory necessary also ensure permissions allow read written into perform diskio ensure disk usable writes localfs local filesystem dir directory expected permission diskerrorexception ioexception
starts timing instrumented read lock records time threadlocal
increment reference count closedchannelexception status closed
mark status closed status closed cannot reopened current reference count closedchannelexception someone else closes object do
decrement reference count true object closed outstanding references
decrement reference count checking make sure closeablereferencecount closed asynchronouscloseexception status closed
uris
escape chartoescape string escape char escapechar str string escapechar escape char chartoescape char escaped escaped string
given array bytes convert bytes hex string representation bytes bytes start start index inclusively end end index exclusively hex string representation byte array
split string using given separator escaping performed str string split note may null separator separator char array strings
splits separated value string trimming leading trailing whitespace value duplicate empty values removed str separated values may null collection string values empty collection null string input
traditionalbinaryprefix object corresponding symbol
returns collection strings str separated string values arraylist string values
use stringutilsformat2f d
given hexstring return byte array corresponding string hex hex string array byte array hex string representation given string size byte array therefore hexlength2
get stack trace given thread
splits newline separated value string trimming leading trailing whitespace value str newline separated string values may null array string values empty array null string input
charstoescape array characters unescape
returns arraylist strings str separated string values arraylist separated string values
make string representation exception e exception stringify string exception name call stack
wordutilswrap commonslang 26 unlike commonslang3 leading spaces first line stripped str string word wrapped may null wraplength column wrap words at less 1 treated 1 newlinestr string insert new line null uses system property line separator wraplongwords true long words such urls wrapped line newlines inserted null null input
given integer return string approximate human readable format number number format human readable form integer use traditionalbinaryprefixlong2stringlong string int
list commandline arguments remove option name name option remove example foo args list arguments true option found removed false otherwise
given time long milliseconds returns string sortable format xhrs ymins zsec x y z always twodigit time 100 hours it displayed 99hrs 59mins 59sec timediff time difference format
print log message starting shutting clazz class server args arguments log target log object
returns arraylist strings str string values delim delimiter separate values arraylist separated string values
given finish start time long milliseconds returns string format xhrs ymins z sec time difference two times finish time comes start time negative valeus x y z wil return finishtime finish time starttime start time
concatenates strings using separator separator separator join with strings strings join
returns collection strings str string parse delim delimiter separate values collection parsed elements
generate text startupshutdown message processes classname short classname class hostname hostname args command arguments string log
formats time ms appends difference finishtime starttime returned formattimediff finish time 0 empty string returned start time 0 difference appended return value dateformat date format use finishtime finish time starttime start time formatted value
escapes html special characters present string string html escaped string representation
split string using given separator str string may escaped separator escapechar char used escape separator separator separator char array strings
convert somestuff somestuff input string camelized string
return message logging prefix prefix keyword message msg content message message logging
checks string contains unicode letters null return false empty string length0 return true stringutilsisalphanull false stringutilsisalpha true stringutilsisalpha false stringutilsisalphaabc true stringutilsisalphaab2c false stringutilsisalphaabc false str string check may null true contains letters nonnull
given array strings return commaseparated list elements strs array strings empty string strslength 0 separated list strings otherwise
concatenates strings using separator separator join strings join joined string
convert string long input string first trimmed parsed traditional binary prefix example 1230k converted 1230 1024 1259520 891g converted 891 10243 956703965184 input string long value represented input string
formats time ms appends difference finishtime starttime returned formattimediff finish time 0 empty string returned start time 0 difference appended return value formattedfinishtime formattedfinishtime use finishtime finish time starttime start time formatted value
charstoescape array characters escaped
print log message starting shutting clazz class server args arguments log target log object
finds first occurrence separator character ignoring escaped separators starting index note substring index position separator passed str source string separator character find escapechar character used escape start search split used pass back extracted string
compare strings localefreely using stringequalsignorecase s1 nonnull string converted s2 string converted str converted uppercase
matches template string pattern replaces matched tokens supplied replacements returns result regular expression must use capturing group value first capturing group used look replacement replacement found token replaced empty string example assume template foobarbaz pattern replacements contains 2 entries mapping foo zoo baz zaz result returned would zoozaz template string template receive replacements pattern pattern match identifying tokens must use capturing group replacements map string mapping tokens identified capturing group replacement values string template replacements
list commandline arguments return first nonoption argument nonoption arguments either come double dash start dash args list arguments first nonoption argument null none
list commandline arguments remove option next argument name name option remove example foo args list arguments null option found value option otherwise illegalargumentexception options argument present
str
given time long milliseconds returns string format xhrs ymins z sec timediff time difference format
str string array parsed uri array null str null else uri array equivalent str illegalargumentexception string str violates rfc2396
convert long integer string traditional binary prefix n value converted unit unit eg b bytes decimalplaces number decimal places string traditional binary prefix
unescape chartoescape string escape char escapechar str string escapechar escape char chartoescape escaped char unescaped string
given full hostname return word upto first dot fullhostname full hostname hostname first
initialchunkcapacity capacity first chunk allocated maxchunksize maximum size chunk allocated
interns returns reference representative instance collection string instances equal other retains weak reference instance prevent garbagecollected sample string instance interned weak reference interned string instance
interns returns reference representative instance collection string instances equal other retains strong reference instance thus preventing garbagecollected sample string instance interned strong reference interned string instance
interns strings given array place returning array
wrapper method makes call lock underlying reentrantlock object acquire teh lock held another thread sets lock held count one returns immediately current thread already holds lock increase lock help count one returns immediately lock held another thread current thread suspended lock acquired current thread reentrantlock object itself support trywithresource syntax
attempts release lock making call release implement close method autocloseable interface allows users user trywithresource syntax lock automatically released
wrapper method makes call islocked underlying reentrantlock object queries lock held thread method designed use monitoring system state synchronization control true thread holds lock false otherwise
parse commaseparated list authentication mechanisms mechanism form schemeauth syntax used addauth command zk cli authstring commaseparated auth mechanisms list parsed authentications badauthformatexception auth format invalid
parse separated list acl entries secure generated nodes eg saslhdfshost1mydomaincdrwasaslhdfshost2mydomaincdrwa acl list badaclformatexception acl invalid
zk acls authentication information may secret allow configuration values indirected file specifying configuration pathtofile syntax used function return contents file string valinconf value configuration either value contents referenced file configured value starts ioexception file cannot read
parse acl permission string partially borrowed zookeepermain private method
log current thread stacks info level log logger logs stack trace title descriptive title call stacks mininterval minimum time last
gets declared fields class including fields declared superclasses
code support backward compatibility break compile time dependency core mapred made deprecated along mapred package hadoop1230 removed mapred package removed
gets declared methods class including methods declared superclasses
check set configuration necessary theobject object set configuration conf configuration
log current thread stacks info level log logger logs stack trace title descriptive title call stacks mininterval minimum time last
make copy writable object using serialization buffer src object copy dst object copy into destroyed dst param the copy ioexception
create object given class initialize conf theclass class object created conf configuration new object
print threads information stack traces stream stream title string title stack trace
return correctlytyped class given object o object whose correctlytyped class obtained correctly typed class given object
print prompt user return true user responds y yes case insensitive
runs given tool toolrunstring parsing given generic arguments uses given configuration builds one null sets tools configuration possibly modified version conf conf configuration tool tool tool run args commandline arguments tool exit code toolrunstring method
runs tool configuration equivalent runtoolgetconf tool args tool tool run args commandline arguments tool exit code toolrunstring method
increase failure count update last failure timestamp
get mutablequantiles metrics file read time mutablequantiles metrics file read time
get source name given directory name dirname directory name source name
add file read latency mutablequantiles metrics readlatency file read latency microseconds
add file write latency mutablequantiles metrics writelatency file write latency microseconds
get mutablequantiles metrics file write time mutablequantiles metrics file write time
get metric given directory name dirname directory name metric
method creates connection context using exactly logic old connection context done writable effective real users set based auth method
read variable length integer format protobufs encodes input stream read integer ioexception malformed eof
current elapsed time specified timeunit
reset elapsed time zero make state stopwatch stop instance stopwatch
current elapsed time nanosecond
stop elapsed time make state stopwatch stop instance stopwatch
start measure times make state stopwatch running instance stopwatch
clear registered shutdownhooks
adds shutdownhook priority higher priority earlier run shutdownhooks priority run nondeterministic order shutdownhook shutdownhook runnable priority priority shutdownhook
returns list shutdownhooks order execution highest priority first list shutdownhooks order execution
return shutdownhookmanager singleton shutdownhookmanager singleton
indicates shutdownhook registered not shutdownhook shutdownhook check registered truefalse depending shutdownhook registered
adds shutdownhook priority timeout higher priority earlier run shutdownhooks priority run nondeterministic order shutdown hook terminated finished specified period time shutdownhook shutdownhook runnable priority priority shutdownhook timeout timeout shutdownhook unit unit timeout timeunit
indicates shutdown progress not true shutdown progress otherwise false
shutdown executor thread itself conf configuration containing shutdown timeout setting
removes shutdownhook shutdownhook shutdownhook remove true shutdownhook registered removed false otherwise
execute shutdown exposed purely testing invoke it number shutdown hooks timed out
get shutdown timeout seconds supplied configuration conf configuration use timeout always greater equal timeoutminimum
writes bigendian representation value buf starting offset buflength must greater equal offset 4
lengthb length content corresponding crcb bytes
galois field multiplication p q generator polynomial m modulus m littleendian polynomial use modulus multiplying p q implicit 1 bit beyond bottom bit
use debug statements verifies byteslength creation expecting represent exactly one crc returns hex formatted value
4byte array holding bigendian representation value
reads 4byte bigendian int value buf starting offset buflength must greater equal offset 4
monomial precomputed xlengthbinbytes 8 mod mod
compute x lengthbytes 8 mod mod mod reversed littleendian format mod 1 represents x31 implicit term x32
use debug statements verifies byteslength creation expecting divisible crc byte size returns list hex formatted values
returns comparable value qualifier method takes account ordering known qualifiers unknown qualifiers lexical ordering returning integer index faster requires lot ifthenelse check 1 qualifierssize resort lexical ordering comparisons decided first character still fast characters needed requires lexical sort anyway qualifier equivalent value used lexical comparison
instantiate executordelegatee executor delegate permitcount number permits queue permitted fair semaphore fair
add element end list elem new element add
add element front list elem new element add
remove elements
reloads ip list
writes current checksum stream reset true resets checksum number bytes written equal getchecksumsize
constructs datachecksum reading headerlen bytes input stream in
implementation chunked verification specifically byte arrays avoid copy dealing bytebuffers array backing
creates datachecksum headerlen bytes arroffset datachecksum type array null case error
verify given checksums match given data mark bytebuffer parameters may modified function position maintained data directbytebuffer pointing data verify checksums directbytebuffer pointing series stored checksums filename name file read errorreporting basepos file position start data corresponds checksumexception checksums match
flag volatile avoid synchronization here reentrancy unlikely except failure mode and inexpensive
int representation polynomial associated crc type suitable use crc arithmetic ioexception crc polynomial applicable given type
implementation chunked calculation specifically byte arrays avoid copy dealing bytebuffers array backing
compares checksum located bufoffset current checksum true checksum matches false otherwise
type corresponding id
writes current checksum buffer reset true resets checksum number bytes written equal getchecksumsize
writes checksum header output stream out
calculate checksums given data mark bytebuffer parameters may modified function position maintained data directbytebuffer pointing data checksum checksums directbytebuffer checksums stored enough space must available buffer put checksums
evict entries order enforce size limit cache
recommendedlength recommended size internal array sizelimit limit size cache limit disabled 0 creationexpirationperiod time period c 0 nanoseconds creation entry expired added cache longer c accessexpirationperiod time period 0 nanoseconds access entry expired accessed longer a
evict expired entries
visit key value pairs identityhashstore
add new key value mapping inserting new key value never overwrites previous one words insert key multiple times lead multiple entries
retrieve value associated given key delete relevant entry
retrieve value associated given key
parse userspecified options get generic options modify configuration accordingly opts options use parsing args args userspecified arguments true parse successful
windows powershell cmd parse keyvalue themselves pkeyvalue pkey value windows however compatible get arbitrary key values dkeyvalue format windows d keyvalue dkeyvalue might passed dkey value d key value method undo return modified args list manually changing d key value d keyvalue args command line arguments fixed command line arguments gnuparser parse
print usage message generic commandline options supported stream print usage message to
specify properties generic option important optionbuilder thread safe subclasses must synchronize use optionbuilderclass
create options parser parse args args command line arguments ioexception
create genericoptionsparser parse generic hadoop arguments array string arguments generic arguments obtained getremainingargs conf configuration modify args commandline arguments ioexception
libjars set conf parse libjars conf libjar urls ioexception
modify configuration according userspecified generic options line userspecified generic options
create genericoptionsparser parse given options well generic hadoop options resulting commandline object obtained getcommandline conf configuration modify options options built caller args userspecified arguments ioexception
create options parser given options parse args opts options args command line arguments ioexception
takes input separated list files verifies exist defaults file files specified scheme returns paths uri converted defaulting file input homeuserfile1homeuserfile2 would return filehomeuserfile1filehomeuserfile2 files input files argument expandwildcard whether wildcard entry allowed expanded true directory followed wildcard valid entry replaced list jars directory used support wildcard notation classpath commaseparated list validated qualified paths null input files argument null
service executorservice shutdown true service terminated false otherwise interruptedexception
thread thread shutdown timeoutinmilliseconds time wait thread join interrupted true thread successfully interrupted false otherwise interruptedexception
service executorservice shutdown timeoutinms time wait executorserviceawaitterminationlong javautilconcurrenttimeunit calls milli seconds true service terminated false otherwise interruptedexception
use createlogger instead
sort given range items using quick sort recursion depth falls getmaxdepth switch heapsort
deepest recursion giving heapsort returns 2 ceillogn
returns diskvalidator instance corresponding passed clazz clazz class extends diskvalidator
returns diskvalidator instance corresponding name diskvalidator parameter basic basicdiskvalidator readwrite readwritediskvalidator diskvalidator canonical class name example basic diskerrorexception class cannot located
find nth occurrence given byte b utf8 encoded string utf byte array containing utf8 encoded string start starting offset length length byte array b byte find n desired occurrence given byte position nth occurrence given byte exists otherwise 1
find first occurrence given bytes b utf8 encoded string utf byte array containing utf8 encoded string start starting offset end ending position b bytes find position first byte occurs otherwise 1
find first occurrence given byte b utf8 encoded string utf byte array containing utf8 encoded string start starting offset end ending position b byte find position first byte occurs otherwise 1
apply delta accumulators elapsedjiffies updated jiffies newtime new sample time
return percentage cpu time spent time since last update cpu time spent based elapsed jiffies multiplied amount time 1 core thus use 2 cores completely would spent twice actual time updates return 200 return percentage cpu usage since last update cputimetrackerunavailable havent 2 updates cputimetrackerminimumtimeinterval apart
simple main facilitate manual testing pause monitor main function leaks memory list running class 1gb heap quickly go gc hell result log messages gc pauses
read sysblockdisknamequeuehwsectorsize file parse calculate sector size specific disk sector size specified disk defsector
constructor allows assigning proc directories used unit tests procfsmemfile fake file procmeminfo procfscpufile fake file proccpuinfo procfsstatfile fake file procstat procfsnetfile fake file procnetdev procfsdisksfile fake file procdiskstats jiffylengthinmillis fake jiffy length value
read procdiskstats file parse calculate amount bytes read written fromto disks
read procnetdev file parse calculate amount bytes read written network
read procstat file parse calculate cumulative cpu
read proccpuinfo parse calculate cpu information
read procmeminfo parse compute memory information readagain false read first time
test sysinfolinux args arguments calculator test
wrapper longparselong returns zero value invalid circumstances swapfree procmeminfo go negative reported large decimal value
log warning lock held long invoked caller immediately releasing lock acquiretime timestamp acquiring lock releasetime timestamp releasing lock
create instrumented lock instance logs warning message lock held time given threshold name identifier lock object logger class logger log given logger instead minlogginggapms minimum time gap two log messages avoid spamming many logs lockwarningthresholdms time threshold view lock held time too long
determine whether log clazz log4j implementation clazz class determined true log clazz log4j implementation
returns class object of type classt argument type t type argument object get class classt
converts given listt array t c class object items list list list convert
method check output string line begins error output string true output string error pattern it
method used determine node health monitoring service started not returns true following conditions met path node health check script empty node health check script file exists true node health monitoring service started
method used start node health monitoring
method used terminate node health monitoring service
method used parse output node health monitor send report address timed script script causes ioexception output ignored node marked unhealthy the node health script times out the node health scripts output line begins error an exception thrown executing script script throws ioexception exitcodeexception output ignored node left remaining healthy script might syntax error status
deletes path checks existence path well path path deleted exception problem occurs performing deletion
delete znode path path znode znode deleted exception cannot contact zookeeper
utility function ensure configured base znode exists recursively creates znode well parents path path znode create zkacl acls zookeeper exception cannot create file
set data znode path path znode data data set string version version data store exception cannot contact zookeeper
get data znode path path znode stat output statistics znode data znode exception cannot contact zookeeper
get data znode path path znode data znode exception cannot contact zookeeper
utility method fetch zk acls configuration javaioioexception zookeeper acls configuration file cannot read
create znode path path znode zkacl acl node znode created exception cannot contact zookeeper
start connection zookeeper ensemble authinfos list authentication keys ioexception connection cannot started
close connection zookeeper
utility method fetch zk auth info configuration javaioioexception zookeeper acls configuration file cannot read zkutilbadauthformatexception auth format invalid
client client path path reap children mode reaping mode
client client path path reap children executor executor use background tasks reapingthresholdms threshold milliseconds determines path deleted mode reaping mode
add path reap children path path chaining
remove path reaping path path true path existed removed
reaper must started exception errors
client client path path reap children reapingthresholdms threshold milliseconds determines path deleted mode reaping mode
client client path path reap children executor executor use background tasks reapingthresholdms threshold milliseconds determines path deleted mode reaping mode leaderpath null uses leader selection 1 reaper active cluster
use getlong timeunit timeout parameters wait
helper routine shutdown executorservice executorservice executorservice logger logger timeout timeout unit timeunits generally seconds
taken hashlittle hash variablelength key 32bit value key key the unaligned variablelength array bytes nbytes number bytes include hash initval integer value 32bit value every bit key affects every bit return value two keys differing one two bits totally different hash values the best hash table sizes powers 2 need mod prime mod sooo slow need less 32 bits use bitmask example need 10 bits h h hashmask10 case hash table hashsize10 elements if hashing n strings byte k like this int 0 h 0 n i h hash ki h by bob jenkins 2006 bobjenkinsburtleburtlenet may use code way wish private educational commercial its free use hash table lookup anything one collision 232 acceptable use cryptographic purposes
compute hash specified file args name file compute hash of ioexception
utility method converts name configured hash type symbolic constant conf configuration one predefined constants
get singleton instance hash function type defined configuration conf current configuration defined hash type null type invalid
get singleton instance hash function given type type predefined hash type hash function instance null type invalid
utility method converts string representation hash function name symbolic constant currently two function types supported jenkins murmur name hash function name one predefined constants
method calculates approximate count key ie many times key added filter allows filter used approximate key count map note due bucket size filter inserting key 15 times cause overflow filter positions associated key significantly increase error rate keys reason filter used store small count values 0 n 15 key key tested 0 key present otherwise positive value v returned v count probability equal error rate filter v count otherwise additionally filter experienced underflow result deletekey operation return value may lower count probability false negative rate filter
constructor vectorsize vector size this filter nbhash number hash function consider hashtype type hashing function see orgapachehadooputilhashhash
removes specified key this counting bloom filter invariant nothing happens specified key belong this counter bloom filter key key remove
value weight
hashes specified key several integers k specified key array hashed values
constructor builds hash function must obey given maximum number returned values highest value maxvalue maximum highest returned value nbhash number resulting hashed values hashtype type hashing function see hash
performs selective clearing given key k false positive key remove this retouched bloom filter scheme selective clearing scheme apply
adds false positive information this retouched bloom filter invariant false positive null nothing happens key false positive key add
chooses bit position minimizes number false negative generated maximizing number false positive removed h different bit positions position minimizes number false negative generated maximizing
adds collection false positive information this retouched bloom filter coll collection false positive
chooses bit position minimizes number false negative generated h different bit positions position minimizes number false negative generated
clears specified bit bit vector keeps uptodate keylist vectors index position bit clear
constructor vectorsize vector size this filter nbhash number hash function consider hashtype type hashing function see orgapachehadooputilhashhash
removes given key this filer k key remove vector counting vector associated key
adds array false positive information this retouched bloom filter keys array false positive
chooses bit position maximizes number false positive removed h different bit positions position maximizes number false positive removed
computes ratio afp
creates initialises various vectors
adds list false positive information this retouched bloom filter keys list false positive
constructor vectorsize vector size this filter nbhash number hash function consider hashtype type hashing function see orgapachehadooputilhashhash
constructor vectorsize vector size this filter nbhash number hash functions consider hashtype type hashing function see hash
adds array keys this filter keys array keys
adds list keys this filter keys list keys
adds collection keys this filter keys collection keys
adds new row this dynamic bloom filter
returns active standard bloom filter this dynamic bloom filter bloomfilter active standard bloom filter null otherwise
constructor builds empty dynamic bloom filter vectorsize number bits vector nbhash number hash function consider hashtype type hashing function see orgapachehadooputilhashhash nr threshold maximum number keys record dynamic bloom filter row
used exclusively testing conf configuration use printstream write to instead systemout
get client getusermappingsprotocol getusermappingsprotocol client proxy ioexception
get groups users given print formatted output printstream configured earlier
create new tablelisting
whether show column headers table output default
add new field table construction title field title justification right left justification defaults left wrap width autowrap content cell defaults integermaxvalue builder object
add new row row row objects add one per column
set maximum width row tablelisting must one wrappable fields take effect
whether hide column headers table output
return ith row column set wrapped strings wrapwidth length
stops minikdc
starts minikdc exception thrown minikdc could started
set system property return old value caching sysprop property debug true false previous value
creates minikdc conf minikdc configuration workdir working directory build directory directory apacheds working directory created directory deleted minikdc stops exception thrown minikdc could created
creates multiple principals kdc adds keytab file keytabfile keytab file add created principals principals principals add kdc include domain exception thrown principals keytab file could created
creates principal kdc specified user password principal principal name include domain password password exception thrown principal could created
sets max inactive time token maxinactives inactive time token milliseconds since epoch
sets expiration token expires expiration time token milliseconds since epoch
method checks specified authtoken belongs specified http authentication scheme scheme http authentication scheme checked auth authentication header value compared authentication scheme true authentication header value corresponds specified authentication scheme false otherwise
method provides instance authenticationhandler based specified authhandlername authhandler shortname or fully qualified class name authentication handler instance authenticationhandler implementation
method checks specified http authentication scheme value valid scheme http authentication scheme checked canonical representation http authentication scheme illegalargumentexception case specified value valid http authentication scheme
authenticates http client request extracts pseudoauthenticatorusername parameter query string creates authenticationtoken it http client request contain pseudoauthenticatorusername parameter handler configured allow anonymous users returns authenticationtokenanonymous token http client request contain pseudoauthenticatorusername parameter handler configured disallow anonymous users throws authenticationexception request http client request response http client response authentication token http client request accepted credentials valid ioexception thrown io error occurred authenticationexception thrown http client request accepted authentication request
initializes authentication handler instance method invoked authenticationfilterinit method config configuration properties initialize handler servletexception thrown handler could initialized
empty implementation always returns true token authentication token any otherwise null request http client request response http client response true ioexception never thrown authenticationexception never thrown
returns authentication type authentication handler simple authentication type authentication handler simple
configure starttls ldap extension handler enablestarttls true starttls ldap extension enabled false otherwise
configure host name verification handler method introduced unit testing never used production disablehostnameverification true disable hostname verification false otherwise
verify signature jwt token method method depends public key established init based upon provisioned public key override method subclasses order customize signature verification behavior jwttoken token contains signature validated valid true signature verifies successfully false otherwise
create url used authentication user absence jwt token within incoming request request getting original request url url use login url redirect
encapsulate acquisition jwt token http cookies within request req servlet request get jwt token serialized jwt token
initializes authentication handler instance method invoked authenticationfilterinit method config configuration properties initialize handler servletexception thrown handler could initialized
validate expiration time jwt token violated throw authenticationexception override method subclasses order customize expiration validation behavior jwttoken token contains expiration date validate valid true token expired false otherwise
validate whether accepted audience claims present issued token claims list audience override method subclasses order customize audience validation behavior jwttoken jwt token allowed audiences found true expected audience present otherwise false
method provides single method validating jwt use request processing provides override specific aspects implementation submethods used within also allows override entire token validation algorithm jwttoken token validate true valid
returns authenticationtoken request looks received http cookies extracts value authenticatedurlauthcookie present verifies signature correct creates authenticationtoken returns it method returns null filter invoke configured authenticationhandler perform user authentication request request object authentication token request authenticated null otherwise ioexception thrown io error occurred authenticationexception thrown token invalid expired
creates hadoop authentication http cookie resp response object token authentication token cookie domain cookie domain path cookie path expires unix timestamp indicates expire date cookie effect value 0 issecure cookie secure iscookiepersistent whether cookie persistent not xxx following code duplicate logic jetty servlet api fact hadoop stuck servlet 25 jetty 6 right now
returns custom implementation signersecretprovider used custom implementation signersecretprovider used
returns filtered configuration only properties starting specified prefix property keys also trimmed prefix returned properties object used initialized authenticationhandler method overriden subclasses obtain configuration configuration source webxml file configprefix configuration prefix use extracting configuration properties filterconfig filter configuration object configuration used authenticationhandler instance servletexception thrown configuration could created
delegates call servlet filter chain subclasses override method perform pre post tasks filterchain filter chain object request request object response response object ioexception thrown io error occurred servletexception thrown processing error occurred
method verifies specified token type matches one token types supported specified authenticationhandler method specifically designed work compositeauthenticationhandler implementation supports multiple authentication schemes authenticationhandler interface supports single type via plain authenticationhandlergettype method handler authentication handler whose supported token types used verification token token whose type needs verified true token type matches one supported token types false otherwise
request valid authentication token allows request continue target resource otherwise triggers authentication sequence using configured authenticationhandler request request object response response object filterchain filter chain object ioexception thrown io error occurred servletexception thrown processing error occurred
initializes authentication filter signer secret provider instantiates initializes specified authenticationhandler filterconfig filter configuration servletexception thrown filter authentication handler could initialized properly
returns full url request including query string used convenience method logging purposes request request object full url request including query string
destroys filter invokes authenticationhandlerdestroy method release resources may hold
method returns token types supported authentication handler token types supported authentication handler
returns authentication type authentication handler kerberos authentication type authentication handler kerberos
empty implementation always returns true token authentication token any otherwise null request http client request response http client response true ioexception never thrown authenticationexception never thrown
releases resources initialized authentication handler destroys kerberos context
initializes authentication handler instance creates kerberos context using principal keytab specified configuration method invoked authenticationfilterinit method config configuration properties initialize handler servletexception thrown handler could initialized
enforces kerberos spnego authentication sequence returning authenticationtoken kerberos spnego sequence completed successfully request http client request response http client response authentication token kerberos spnego sequence complete valid null progress in case handler handles response client ioexception thrown io error occurred authenticationexception thrown kerberos spnego sequence failed
enforces kerberos spnego authentication sequence returning authenticationtoken kerberos spnego sequence completed successfully in case java access custom authentication implemented subclass alternateauthenticate completed successfully in case browser access request http client request response http client response authentication token request authorized null ioexception thrown io error occurred authenticationexception thrown authentication error occurred
method parses useragent string returns whether refers browser browser kerberos authentication used browser alternateauthenticate subclass used useragent string considered browser contain values altkerberosnonbrowseruseragents default behavior consider everything browser unless contains one of java curl wget perl subclasses optionally override method use different behavior useragent useragent string null isnt one true useragent string refers browser false
returns authentication type authentication handler altkerberos authentication type authentication handler altkerberos
implements spnego authentication sequence interaction using current default principal kerberos cache normally set via kinit token authentication token used user ioexception io error occurred authenticationexception authentication error occurred
performs spnego authentication specified url token given nop returns given token token given perform spnego authentication sequence using http options request url url authenticate against token authentication token used user ioexception io error occurred authenticationexception authentication error occurred
sets connectionconfigurator instance use configuring connections configurator connectionconfigurator instance
specified url support spnego authentication fallback authenticator used implementation returns pseudoauthenticator fallback authenticator
returns authenticated httpurlconnection url url connect to https urls supported token authentication token used user authenticated httpurlconnection ioexception io error occurred authenticationexception authentication exception occurred
helper method injects authentication token send connection callers prefer using tokenopenconnectionurl connectionconfigurator automatically manages authentication tokens conn connection inject authentication token into token authentication token inject
installs cookie handler http request manage session cookies url httpurlconnection ioexception
creates token using existing string representation token tokenstr string representation tokenstr
returns string representation token string representation token
helper method extracts authentication token received connection method used authenticator implementations conn connection extract authentication token from token authentication token ioexception io error occurred authenticationexception authentication exception occurred
creates authenticatedurl authenticator authenticator instance use null kerberosauthenticator used connconfigurator connection configurator
sets connectionconfigurator instance use configuring connections configurator connectionconfigurator instance
performs simple authentication specified url token given nop returns given token token given perform http options request injecting additional parameter username query string value returned getusername method response successful update authentication token url url authenticate against token authentication token used user ioexception io error occurred authenticationexception authentication error occurred
disconnects zookeeper unless told to
add entry jaas configuration passed name principal keytab necessary options set you entryname name entry eg client principal principal user keytab location keytab
pulls data zookeeper isinit false parse next secret version isinit true also parse current previous secrets next rollover date also init secrets hence isinit true startup isinit see description
constructor lets set seed random number generator meant testing seed seed random number generator
pushes proposed data zookeeper different server pushes data first gives up newsecret new secret use currentsecret current secret previoussecret previous secret
serialize data attempt push zookeeper format this dataversion newsecretlength newsecret currentsecretlength currentsecret previoussecretlength previoussecret nextrolloverdate previoussecret null case format looks like this dataversion newsecretlength newsecret currentsecretlength currentsecret 0 nextrolloverdate newsecret new secret use currentsecret current secret previoussecret previous secret serialized data zookeeper
method creates curator client connects zookeeper config configuration properties curator client exception thrown error occurred
starts scheduler rollover run interval initialdelay initial delay rollover milliseconds period interval rollover milliseconds
rolls secret called automatically rollover interval
initialize signersecretprovider initializes current secret starts scheduler rollover run interval tokenvalidity config configuration properties servletcontext servlet context tokenvalidity amount time token valid exception thrown error occurred
sets expiration token expires expiration time token milliseconds since epoch
generates token
returns string representation token string representation parseable parse method string representation token
check provided value invalid throw error invalid nop otherwise value value check name parameter name use error message value invalid
creates authentication token username user name principal principal commonly matches user name kerberos fulllong principal name username short name type authentication mechanism name systemcurrenttimemillis validityperiod
splits string representation token attributes pairs tokenstr string representation token map attribute pairs token authenticationexception thrown string representation token could broken attribute pairs
returns principal name this method name comes jdk principal interface principal name
returns true token expired true token expired
create kerberos principal given service hostname inferring realm fqdn hostname converts hostname lower case hostname null 0000 uses dynamically lookedup fqdn current host instead domainrealm mappings inadequately specified use defaultrealm per usual kerberos behavior defaultrealm also gives null value principal without realm returned kerberos definitions another way specify default realm service service want generate principal hostname fullyqualified domain name converted kerberos principal name unknownhostexception ip address local host could found
get unique principals present keytabfile keytabfilename name keytab file read list unique principals keytab ioexception keytab entries cannot read file
extract tgs server principal given gssapi kerberos spnego wrapped token rawtoken bytes gss token string server principal illegalargumentexception token undecodable
get unique principals keytabfile matches pattern keytab name keytab file read pattern pattern matched list unique principals matches pattern ioexception cannot get principal name
returns signed string str string sign signed string
creates signer instance using specified signersecretprovider signersecretprovider already initialized secretprovider signersecretprovider use
returns signature string secret secret use str string sign signature string
verifies signed string extracts original string signedstr signed string verify extract extracted original string signerexception thrown given string signed string signature invalid
constructor lets set seed random number generator meant testing seed seed random number generator
gets rsapublickey provided pem encoding pem pem encoding config without header footer rsapublickey rsa public key servletexception thrown processing error occurred
create name full kerberos principal name name full kerberos principal name
get configured default realm used syncronized method here doublecheck locking overhead default realm krb5conf
get translation principal name operating system user name short name ioexception throws something wrong rules
put name back together parts
get rules string configured rules null yet configured
rulemech evaluation type hadoop mit hadoop indicates allowed result evaluation mit indicates authtolocal rules follow mit kerberos evaluation
try apply rule given name represented parameter array params first element realm second later elements components name abfoo foo a b rulemechanism defines rule evaluation mechanism short name rule applies null ioexception throws something wrong rules
replace matches pattern base string value string base string transform pattern look base string string replace matches pattern repeat whether substitution repeated
replace numbered parameters form n n 1 length params normal text copied directly n replaced corresponding parameter format string replace parameters params list parameters generated string parameter references replaced badformatstring
emits single ast node line column correctly set position source file must ever called typeparameters typearguments production ending least one character emitted aretheregtstoemit
object instantiation trees built illustrated following inputtree pairs new t new elist arg1 arg2 argn new int new int arraydeclarator new int 12 new int arraydeclarator arrayinit expr expr 1 2 new int3 new int arraydeclarator expr 3 new int12 new int arraydeclarator arraydeclarator expr expr 1 2 recognitionexception recognition problem occurs tokenstreamexception problem occurs generating stream tokens
consume sequence characters gt sr bsr match characters seen
true least one seen reconciled end typeparameters typearguments production returns false otherwise
true exactly one seen reconciled end typeparameters production returns false otherwise
true evenly matched current typeparameterstypearguments nested depth
declaration creation reference primitivetype variable create separate typevar tree var var list
declaration variable classinstance variable local variable method also include possible initialization
fills cache set externalresource external resource set already cache skipped externalresources set externalresource
load cached values file ioexception problems file read
calculates hashcode serializable object based content object serializable object hashcode serializable object
creates instance location resource location contenthashsum content hash sum
puts external resources cache least one external resource changed clears cache locations locations external resources
checks file cache uncheckedfilename file check timestamp timestamp file check whether specified file already checked ok
checks whether contents external configuration resources changed resources set externalresource true contents external configuration resources changed
loads content external resource location external resource location array bytes represents content external resource binary form checkstyleexception error loading occurs
loads set externalresource based locations resourcelocations locations external configuration resources set externalresource
checks whether resource location cache location resource location true resource location cache
cleans object updates cache file ioexception problems file save
serializes object output stream object object serialized outputstream serialization stream ioexception error occurs
resets cache empty except configuration hash
flushes closes output stream stream output stream ioexception problems file flush close
creates new propertycachefile instance config current configuration null filename cache file
notify listeners beginning file audit filename file audited
sets named charset charset name charset unsupportedencodingexception charset unsupported
notify listeners errors file filename audited file errors audit errors file
notify listeners audit start
notify listeners end file audit filename audited file
adds filesetcheck list filesetchecks executed process filesetcheck additional filesetcheck
check execution file filters accept starting file filename file audited true file accepted
creates new checker instance instance needs contextualized configured
returns set external configuration resource locations used file set checks filters set external configuration resource locations used file set checks filters
processes list files filesetchecks files list files process checkstyleexception error condition within checkstyle occurs noinspection prohibitedexceptionthrown
sets file extensions identify files pass filter filesetcheck extensions set file extensions missing initial character extension automatically added
clears cache
notify listeners audit end
creates child module noinspection chainofinstanceofchecks
sets cache file filename cache file ioexception problems file loading
processes file filesetchecks file file process sorted set messages logged checkstyleexception error condition within checkstyle occurs noinspection prohibitedexceptionthrown
creates new xmllogger instance sets output defined stream outputstream stream write logs to outputstreamoptions close stream closed auditfinished
outputs given event writer event event print
prints file section file errors exceptions filename file name printed opening file tag messages file messages
writes exception event print writer throwable
finds whether given argument character entity reference ent possible entity look for whether given argument character entity reference
creates new xmllogger instance sets output defined stream outputstream stream write logs to closestream close os auditfinished order fulfill demands booleanparameter idea check noinspection booleanparameter
escape entities value value escape escaped value necessary
create comment ast token depending token type singlelinecomment blockcommentbegin created token create ast detailast comment node
parses java source file file file parse options options control inclusion comment nodes detailast tree ioexception file could read checkstyleexception file valid java source file
create singleline comment token token create ast detailast singlelinecomment type
appends comment nodes existing ast traverses node ast looks hidden comment tokens appends found comment tokens nodes ast root ast root ast comment nodes
static helper method parses java source file contents contains contents file root ast checkstyleexception contents valid java source
parse text return parse tree text text parse options options control inclusion comment nodes root node parse tree checkstyleexception text valid java source
creates xpathquerygenerator instance generates suppressions filetext filetext object detailast detailast object linenumber line number columnnumber column number tabwidth length tab character generated suppressions
prints generated suppressions file file process suppressionlinecolumnnumber line column number suppression tabwidth length tab character generated suppressions ioexception file could read checkstyleexception file java source
returns length buffer stringbuilder bufferlength filenamelength messagelength lengthofallseparators severitynamelength checknamelength event audit event severitylevelnamelength length severity level name length buffer stringbuilder
returns check name without check suffix event audit event check name without check suffix
walks type members push first javadoc sentence every public static int field consumer objblock objblock class iterate members consumer first javadoc sentence consumer checkstyleexception failed parse javadoc comment
extracts first sentence html formatted text comment detailast end sentence determined symbol period exclamation mark question mark followed space end text inline tags literal converted html code ast extract first sentence first sentence inner tokentypesblockcommentbegin node null first sentence absent malformed does end period checkstyleexception javadoc comment parsed unsupported inline tag found
creates properties file java file options userspecified options checkstyleexception javadoc comment parsed
extracts first sentence html formatted text detailnode end sentence determined symbol period exclamation mark question mark followed space end text inline tags literal converted html code tree extract first sentence first sentence node null first sentence absent malformed does end endofsentence markers checkstyleexception unsupported inline tag found
concatenates html text ast javadoctokentypeshtmlelement builder append node format
converts inline code tag html form builder append inlinetag format checkstyleexception inline javadoc tag literal code tag
checks detailast public static final int field ast process true matches false otherwise
finds class body first class detailast top ast find class body objblock token found null otherwise
tokentypesproperties generator entry point args command line arguments checkstyleexception parser lexer failed io problem
configures saxparserfactory features required execution secured environments factory factory configured special features saxexception error occurs parserconfigurationexception error occurs
parses specified input source inputsource input source parse ioexception error occurs saxexception error occurs
creates new instance publicidtoresourcenamemap maps public ids dtd resource names saxexception error occurs parserconfigurationexception error occurs
returns module configurations specified file config location config file either url filename overridepropsresolver overriding properties omitignoredmodules true modules severity ignore omitted false otherwise check configurations checkstyleexception error occurs order fulfill demands booleanparameter idea check noinspection booleanparameter
returns module configurations specified input source note source wrap open byte character stream clients required close stream configsource input stream checkstyle configuration overridepropsresolver overriding properties ignoredmodulesoptions omit modules severity ignore omitted execute otherwise threadmodesettings thread mode configuration check configurations checkstyleexception error occurs noinspection weakeraccess
util method recheck attribute module module module check attributename name attribute module find true attribute present module
creates new configurationloader instance overrideprops resolver overriding properties omitignoredmodules true ignored modules omitted threadmodesettings thread mode configuration parserconfigurationexception error occurs saxexception error occurs
returns module configurations specified input source note source wrap open byte character stream clients required close stream configsource input stream checkstyle configuration overridepropsresolver overriding properties omitignoredmodules true modules severity ignore omitted false otherwise threadmodesettings thread mode configuration check configurations checkstyleexception error occurs order fulfill demands booleanparameter idea check noinspection booleanparameter weakeraccess
returns module configurations specified file config location config file either url filename overridepropsresolver overriding properties ignoredmodulesoptions omit modules severity ignore omitted execute otherwise check configurations checkstyleexception error occurs
creates new internalloader saxexception error occurs parserconfigurationexception error occurs
returns module configurations specified file config location config file either url filename overridepropsresolver overriding properties check configurations checkstyleexception error occurs
parses specified input source loading configuration information stream wrapped inside source any explicitly closed parsing responsibility caller close stream source source contains configuration data ioexception error occurs saxexception error occurs
replaces xxx style constructions given value string value corresponding data types method must remain outside inner class easier testing since inner class requires instance code copied ant httpcvsapacheorgviewcvsjakartaantsrcmainorgapachetoolsantprojecthelperjava value string scanned property references may null case method returns immediately effect props mapping string string property names values must null defaultvalue default use one properties value cannot resolved props original string properties replaced null original string null checkstyleexception string contains opening without closing noinspection methodwithmultiplereturnpoints methodonlyusedfrominnerclass
returns module configurations specified file config location config file either url filename overridepropsresolver overriding properties threadmodesettings thread mode configuration check configurations checkstyleexception error occurs
parses string containing xxx style property references two lists first list collection text fragments set string property names null entries first list indicate property reference second list code copied ant httpcvsapacheorgviewcvsjakartaantsrcmainorgapachetoolsantprojecthelperjava value text parse must null fragments list add text fragments to must null propertyrefs list add property names to must null checkstyleexception string contains opening without closing
returns module configurations specified input stream note clients required close given stream configstream input stream checkstyle configuration overridepropsresolver overriding properties omitignoredmodules true modules severity ignore omitted false otherwise check configurations checkstyleexception error occurs method provide valid system id preventing resolution external entities loadconfigurationinputsourcepropertyresolverboolean version using inputsource used instead noinspection booleanparameter
returns module configurations specified file config location config file either url filename overridepropsresolver overriding properties ignoredmodulesoptions omit modules severity ignore omitted execute otherwise threadmodesettings thread mode configuration check configurations checkstyleexception error occurs
returns module configurations specified file config location config file either url filename overridepropsresolver overriding properties omitignoredmodules true modules severity ignore omitted false otherwise threadmodesettings thread mode configuration check configurations checkstyleexception error occurs order fulfill demands booleanparameter idea check noinspection booleanparameter weakeraccess
returns module configurations specified input source note source wrap open byte character stream clients required close stream configsource input stream checkstyle configuration overridepropsresolver overriding properties ignoredmodulesoptions omit modules severity ignore omitted execute otherwise check configurations checkstyleexception error occurs
returns module configurations specified input source note source wrap open byte character stream clients required close stream configsource input stream checkstyle configuration overridepropsresolver overriding properties omitignoredmodules true modules severity ignore omitted false otherwise check configurations checkstyleexception error occurs order fulfill demands booleanparameter idea check noinspection booleanparameter
creates mapping local resources dtd ids method cant moved inner class must stay static called constructor inner class isnt static map local resources dtd ids noinspection methodonlyusedfrominnerclass
returns set external configuration resource locations used checks set checks set checks set external configuration resource locations used checks set
notify checks leaving node ast node notify aststate state ast
notify checks visiting node ast node notify for aststate state ast
method returns list checks ast node notify aststate state ast list visitors
returns filtered set localizedmessage filename path file filecontents contents file rootast root ast element detailast file filtered set messages
register check specified token name token name token check check register checkstyleexception check misconfigured
initiates walk ast ast root ast contents contents file ast generated from aststate state ast
register check given configuration check check register checkstyleexception error occurs
notify checks finished walking tree rootast root tree aststate state ast
sets cache file use checkersetcachefile instead anything now keep setter transition period option checker method completely removed checkstyle 80 see hrefhttpsgithubcomcheckstylecheckstyleissues2883issue2883 filename cache file
creates child module noinspection chainofinstanceofchecks
validates checks required tokens subset default tokens check validate checkstyleexception validation default tokens fails
returns set external configuration resource locations used filters set set external configuration resource locations used filters set
notify checks begin walking tree rootast root tree contents contents file ast generated from aststate state ast
processes node calling interested checks node uses iterative algorithm root root tree process aststate state ast
parses block comment javadoc prints tree node block comment begin string javadoc tree
parse file print parse tree text text parse options javaparseroptions control inclusion comment nodes ast file string form checkstyleexception file java source
get indentation ast node ast ast get indentation for indentation string format
print ast ast root ast node string ast
prints full ast java comments javadoc java file file java file full tree ioexception failed open file checkstyleexception error parsing file
parse file print parse tree file file print options javaparseroptions control inclusion comment nodes ast file string form ioexception file could read checkstyleexception file java source
replace control chars escaped symbols text string process processed string control chars escaped
prints full tree java comments javadoc detailast ast root detailast full tree
get string representation node token name node text line number column number node detailast node info
creates full package name package names stack full name current package
creates new packagenamesloader instance parserconfigurationexception error occurs saxexception error occurs
returns set package names compiled checkstylepackagesxml files found given class loaders classpath classloader class loader loading checkstylepackagesxml files set package names checkstyleexception error occurs
reads file provided parses package names loader packagefile file package namesloader package names loader saxexception error parsing occurs checkstyleexception unable open file
creates mapping local resources dtd ids map local resources dtd ids
creates new defaultlogger instance infostream outputstream info messages closeinfoafteruse auditfinished close infostream errorstream outputstream error messages closeerrorafteruse auditfinished close errorstream order fulfill demands booleanparameter idea check noinspection booleanparameter
creates new defaultlogger instance infostream outputstream info messages closeinfoafteruse auditfinished close infostream errorstream outputstream error messages closeerrorafteruse auditfinished close errorstream messageformatter formatter log message order fulfill demands booleanparameter idea check noinspection booleanparameter weakeraccess
creates new defaultlogger instance outputstream log infos errors outputstreamoptions close closed auditfinished
flushes output streams closes needed
creates new defaultlogger instance outputstream log infos errors closestreamsafteruse os closed auditfinished order fulfill demands booleanparameter idea check noinspection booleanparameter
creates new defaultlogger instance infostream outputstream info messages infostreamoptions close info closed auditfinished errorstream outputstream error messages errorstreamoptions close error closed auditfinished messageformatter formatter log message noinspection weakeraccess
print emacs compliant line error stream column number non zero also display it auditlistener
creates new defaultlogger instance infostream outputstream info messages infostreamoptions close info closed auditfinished errorstream outputstream error messages errorstreamoptions close error closed auditfinished
adds attribute configuration attributename name attribute value value attribute
returns unmodifiable map instance containing custom messages configuration unmodifiable map containing custom messages
instantiates defaultconfiguration name name defaultconfiguration threadmodesettings thread mode configuration
create object optional full module names case one element fullmodulename otherwise exception would thrown name name module fullmodulenames supplied full module names set instance module one element fullmodulename checkstyleexception class fails instantiate one element fullmodulename
fill shorttofull module names map modules filefilters package
creates new packageobjectfactory instance packagenames list package names use moduleclassloader class loader used load checkstyle core custom modules moduleloadoption loading option
create object help supplied map name name module map supplied map instance module found modules map ambiguous classes exist checkstyleexception class fails instantiate ambiguous classes
generate map third party checkstyle module names set fully qualified names loader class loader used load checkstyle package names map third party checkstyle module names set fully qualified names
fill shorttofull module names map checks javadoc package
searching class given name or name concatenated check existing packages returns instance class found or otherwise null name name class object created loader checkstyleexception error occurs
create object one checkstyle module names name name module instance module checkstyleexception class fails instantiate ambiguous classes
fill shorttofull module names map checks naming package
fill shorttofull module names map
fill shorttofull module names map modules checks package
fill shorttofull module names map checks regexp package
fill shorttofull module names map modules filters package
fill shorttofull module names map checks design package
fill shorttofull module names map checks blocks package
fill shorttofull module names map checks imports package
fill shorttofull module names map checks header package
fill shorttofull module names map checks whitespace package
fill shorttofull module names map checks sizes package
fill shorttofull module names map checks metrics package
creates new packageobjectfactory instance packagename package name use moduleclassloader class loader used load checkstyle core custom modules
returns simple check name full modules names map fullname name class joining simple check name
fill shorttofull module names map checks modifier package
creates new instance class given name name concatenated check name class name creates instance named class otherwise creates instance class name obtained concatenating given name package name given list package names name name class object created loader checkstyleexception error occurs
fill shorttofull module names map checks annotation package
fill shorttofull module names map modules checkstyle package
creates string joining package names class name classname name class joining packages packages names string obtained joining package names class name
creates new instance named class classname name class instantiate object created loader null checkstyleexception class fails instantiate
fill shorttofull module names map checks indentation package
returns whether specified record logged record record log true logger name package class subpackage
execution checkstyle based command line options options userspecified options filestoprocess list files whose style check number violations ioexception file could read checkstyleexception something happens processing files noinspection useofsystemoutorsystemerr
determines files process options userspecified options list files process
gets list exclusions provided command line arguments list exclusion patterns
loads properties file file properties file properties file checkstyleexception could load properties file
loops files specified checking errors exit code number errors found files args command line arguments ioexception problem files access noinspection useofsystemoutorsystemerr calltoprintstacktrace calltosystemexit
returns treewalker module configuration config configuration object treewalker module configuration
traverses specified node looking files check found files added specified list subdirectories also traversed node node process patternstoexclude list patterns exclude searching added files found files
validates user input returns value exitwithinvaliduserinputcode invalid otherwise executes checkstyle returns number violations parseresult generic access options parameters found command line options encapsulates options parameters specified command line number violations ioexception file could read checkstyleexception something happens processing files noinspection useofsystemoutorsystemerr
returns new auditlistener outputformat output stream options output stream options new auditlistener outputformat
create automaticbeanoutputstreamoptions given location outputpath output location output stream options
checks directoryfile path excluded based matches one patterns supplied path path directoryfile check patternstoexclude list patterns exclude searching added files true directoryfile matches one patterns
create output stream return systemout outputpath output location output stream ioexception might happen noinspection useofsystemoutorsystemerr
creates new instance root module control run checkstyle name name module either short name found complete package name moduleclassloader class loader used load root module new instance root module checkstyleexception module instantiated name
returns name lowercase enum name lowercase
method creates auditlistener open stream validation data must closed rootmodule default implementation checker calling auditlistenerauditfinishedauditevent format format audit listener outputlocation location output fresh new auditlistener exception ioexception provided output location found
executes required checkstyle actions based passed parameters options userspecified options filestoprocess list files whose style check number violations error level ioexception output file could found checkstyleexception properties file could loaded noinspection useofsystemoutorsystemerr
creates child nodes node nodes array parsetreeparent original parsetree parent node nodes array javadocnodeimpl nodes
gets line number parsetree node tree parsetree node line number
gets class name parsetree node removes context postfix end formats it node parsetree node whose class name formatted returned uppercased class name without word context appropriately inserted underscores
parses block comment content javadoc comment blockcomment block comment content parse tree
parses javadoc comment detailnode tree javadoccommentast detailast javadoc comment detailnode tree javadoc comment
method used get first nontight html tag encountered parsing javadoc shall eventually reflected parsestatus object returned parsejavadocasdetailnodedetailast method via instance member parsestatusfirstnontighthtmltag checks supposed process nontight html ones supposed log violation nontight javadocs utilize that javadocparser antlr recognizer instance used parse javadoc first nontight html tag one exists null otherwise
gets column number parsetree node tree parsetree node column number
logs parser errors checkstyle manner parser generate error messages special error parser generate missed close html tag case special parser prints error like no viable alternative input b n n clear error missed close html tag error messages special logged simply parse error
gets token type parsetree node javadoctokentypes class node parsetree node token type javadoctokentypes
converts parsetree that generated antlrv4 detailnode tree parsetreenode root node parsetree root detailnode tree noinspection suspiciousarraycast
creates children javadoc nodes base parsetree nodes children parentjavadocnode node parent created children parsetreenode original parsetree node array javadoc nodes
method get missed html tag generate informative error message user method doesnt concern hrefhttpswwww3orgtrhtml51syntaxhtmlvoidelementsvoid elements since forbidden close them missed html tags following tags not generate error message antlr exception noviablealtexception object catched parsing javadoc returns appropriate token html close tag missed null otherwise
adjust first line nodes javadoc indent tree detailnode tree root javadoccolumnnumber javadoc indent
gets next sibling parsetree node node parsetree node next sibling parsetree node
gets class name parsetree node removes context postfix end node parsetree node class name without context
initializes parse error message linenumber line number messagekey message key messagearguments message arguments
creates javadocnodeimpl node base parsetree node parsetree parsetree node parent detailnode parent new node index child index new node javadocnodeimpl node base parsetree node
creates root javadocnodeimpl node base parsetree root node parsetreenode parsetree root node root javadoc node
creates new suppressionfilegenerator instance sets output defined stream output stream outputstreamoptions close stream closed auditfinished
prints xml header printed before
creates new treewalkerauditevent instance filecontents contents file associated event filename file associated event localizedmessage actual message rootast root ast element detailast file
get indentation node node detailnode get indentation for indentation string format
print ast ast root ast node rootprefix prefix root node prefix prefix nodes string ast
parse file return parse tree file file parse root node parse tree ioexception file could read
parse javadoc comment detailnode tree javadoccomment javadoc comment content tree
builds error message base parseerrormessages message key arguments etc parseerrormessage parseerrormessage error message
parse block comment detailast javadoc detailnode tree blockcomment detailast detailnode tree
creates new propertiesexpander properties underlying properties use property resolution illegalargumentexception indicates null passed
initializes thread mode configuration checkerthreadsnumber checker threads number treewalkerthreadsnumber treewalker threads number
resolves module name according thread settings name original module name resolved module name
scans given path retrieves files given path path path scan pathindex index given path used log messages only list files extracted given path
retrieves matched files given scanner scanner directory scanner note directoryscannerscan must called calling method logindex log entry index used log messages list files retrieved given scanner
returns list files full path name process list files included via filesets
creates default logger task task possibly log defaultlogger instance ioexception error occurs
retrieves files defined paths list files defined via paths
returns list files full path name process list files included via filename filesets paths
sets configuration file configuration configuration file url resource use
return list listeners set task list listeners
creates new instance root module new instance root module
set class path classpath path locate classes
helper implementation perform execution checkstyleversion checkstyle compile version
scans processes files means given root module rootmodule root module process files warningcounter root modules counter warnings checkstyleversion checkstyle compile version
creates classpath created path locating classes
creates listener formatter task task running listener ioexception error occurs
creates xml logger task task possibly log xmllogger instance ioexception error occurs
create properties object based arguments specified ant task properties property expansion expansion buildexception error occurs
create content mainframe
open file load it sourcefile file open
create buttons panel buttons panel
initialise pmodel parsetree detailast parse tree
notify listeners registered interest tree structure changed event event instance lazily created using parameters passed fire method source object responsible generating event path array object identifying path parent modified items childindices array int specifies index values removed items children array object containing inserted removed changed objects eventlistenerlist
sets parse tree parsetree detailast parse tree
constructor node ast node editor text area editor lines2position list map lines
set selection
finds last position node without children detailnode detailnode node last position node without children
find start end selection positions detailnode line column detailnode detailnode node selection finds
finds last position node without children astnode detailast node last position node without children
constructor node detailnode node lines2position list map lines noinspection assignmentorreturnoffieldwithmutabletype
find start end selection positions ast line column
constructor ast ast node lines2position list map lines noinspection assignmentorreturnoffieldwithmutabletype
find start end selection positions ast line column ast detailast node selection finds
open file load file file file open checkstyleexception file parsed
get directory last loaded file directory last loaded file
get filetext file file file get filetext from filetext ioexception file could read
notifies listeners registered interest editing stopped event eventlistenerlist
notifies listeners registered interest editing canceled event eventlistenerlist
set initial value width columns table
overridden message super forward method tree since tree actually component hierarchy never receive unless forward manner
overridden return false event mouse event forwarded tree the behavior debatable really offered property returning false keyboard actions implemented terms table returning true tree would get chance something keyboard events part ok certain keys leftright tree expandcollapse table focus really move different column page updown also implemented terms table returning false also added benefit clicking outside bounds tree node still tree column select row whereas returned true wouldnt case by returning false also enforcing policy tree never editable at least key sequence tablecelleditor
expansion tree node
overridden pass new rowheight tree
creates treetable base treetablemodel treetablemodel tree table model
constructor initialise root node parsetree detailast parse tree
returns value displayed node column number node node column column number value displayed node node column number column
gets javadoc detailnode tree specified block comments blockcomment javadoc comment block comment detailnode tree
gets child detailast node specified index parent detailast node index child index child detailsast detailnode child javadoc node parsemode javawithjavadocandcomments
gets value detailast object ast detailast node column column index value specified column
return index child parent either parent child null returns 1 either parent child dont belong tree model returns 1 parent node tree obtained data source child node interested in index child parent 1 either child parent null dont belong tree model
gets value detailnode object node detailnodejavadoc node column column index value specified column
returns child parent index parent node get child from index index child child parent index
creates artificial tree root artificial tree root
returns number children parent parent node count children for number children node parent
entry point args command line arguments
updateui overridden set colors trees renderer match table
overridden set height match jtable
subclassed translate graphics last visible row drawn 00
creates new instance treetable tree table render model tree model
sets row height tree forwards row height table
treecellrenderer method overridden update visible row tablecellrenderer
finds node given row row row find related node node given row
initialise tree treetablemodel class attributes treetablemodel tree table model tree jtree component
overridden set updatinglistselectionmodel message super place defaulttreeselectionmodel alters listselectionmodel
updatinglistselectionmodel false reset selected paths selected rows list selection model
row given index selected selected paths updated counter number row
constructor initialise treetable jtreetable treetable perform updates on
creates new attributenode instance name name attribute value value attribute
determines axis iteration algorithm attribute node iterated throws unsupportedoperationexception axisnumber element axisinfo axisiterator object
returns line number attribute node line number throws unsupportedoperationexception line number
returns column number attribute node column number throws unsupportedoperationexception column number
getter method token type attribute node token type throws unsupportedoperationexception token type
returns underlying node attribute node underlying node throws unsupportedoperationexception underlying node
returns type node node kind
returns attribute value throws unsupportedoperationexception attribute node attributes namespace namespace localpart actual name attribute attribute value
returns parent never called attribute node throws unsupportedoperationexception attributes parent
returns root never called attribute node throws unsupportedoperationexception root
returns public id throws unsupportedoperationexception child class implements method used querying public id
returns boolean throws unsupportedoperationexception child class implements method used querying boolean
determines axis iteration algorithm axisnumber element axisinfo nodetest filter iterator axisiterator object
returns implementation provides fingerprints boolean
returns configuration throws unsupportedoperationexception child class implements method used querying configuration
returns atomicsequence throws unsupportedoperationexception child class implements method used querying atomicsequence
returns base uri throws unsupportedoperationexception child class implements method used querying base uri
returns boolean throws unsupportedoperationexception child class implements method used querying boolean
returns uri namespace current node uri
returns tree info tree info
sets system id throws unsupportedoperationexception child class implements method used querying systemid system id
generate id method throws unsupportedoperationexception child class implements method used querying faststringbuffer faststringbuffer
copy method throws unsupportedoperationexception child class implements method used querying receiver receiver index index location location
returns location throws unsupportedoperationexception child class implements method used querying location
returns current node children current node children
returns boolean throws unsupportedoperationexception child class implements method used querying boolean
returns prefix throws unsupportedoperationexception child class implements method used querying prefix
returns charsequence string value throws unsupportedoperationexception child class implements method used querying charsequence string value
returns system id throws unsupportedoperationexception child class implements method used querying system id
returns namespace array throws unsupportedoperationexception child class implements method used querying namespacebindings namespace array namespace array
returns true nodes same false otherwise nodeinfo node treeinfo
returns boolean throws unsupportedoperationexception child class implements method used querying boolean
returns type schema throws unsupportedoperationexception child class implements method used querying type schema
returns fingerprint throws unsupportedoperationexception child class implements method used querying fingerprint
compares current object specified order nodeinfo another nodeinfo object number representing order current object specified one
returns display name throws unsupportedoperationexception child class implements method used querying display name
creates new elementnode instance root node root tree parent node parent current node detailast reference detailast
returns line number line number
iterates children current node recursively creates new xpathnodes
returns root root
finds child element tokentypesident extracts value stores it value accessed using text attribute text attribute supported attribute
getter method token type token type
determines axis iteration algorithm throws unsupportedoperationexception case axis iterator given axisnumber axisnumber element axisinfo axisiterator object
returns type node node kind
returns attribute value throws unsupportedoperationexception case name attribute equal text namespace namespace localpart actual name attribute attribute value
returns column number column number
returns parent parent
returns attribute value throws unsupportedoperationexception root node attributes namespace namespace localpart actual name attribute attribute value
returns type node node kind
returns root tree root tree
determines axis iteration algorithm throws unsupportedoperationexception case axis iterator given axisnumber axisnumber element axisinfo axisiterator object
returns column number column number
creates new rootnode instance detailast reference detailast
returns parent parent
getter method token type token type
iterates siblings current node recursively creates new xpathnodes
returns line number line number
creates new xpathquerygenerator instance event treewalkerauditevent object tabwidth distance tab stop position
creates new xpathquerygenerator instance rootast root ast linenumber line number element query generated columnnumber column number element query generated filetext filetext object tabwidth distance tab stop position
returns child detailast element given root child element token type equals tokentypesident root detailast root ast child detailast element given root
returns column number tabs expanded ast detailast root ast column number tabs expanded
sure generated xpath query return exactly required ast element element checked uniqueness ast element tokentypesident child sibling tokentypes element supposed unique method finds detailast element unique ast detailast ast element detailast element unique
returns relative xpath query given ast element root root detailast root element ast detailast ast element relative xpath query given ast element root
returns full xpath query given ast element ast detailast ast element full xpath query given ast element
checks given detailast node matching line number column number token type ast detailast ast element true given detailast node matching
creates new xpathquerygenerator instance rootast root ast linenumber line number element query generated columnnumber column number element query generated tokentype token type element query generated filetext filetext object tabwidth distance tab stop position
returns list nodes matching defined line number column number token type list nodes matching defined line number column number token type
checks given ast element unique tokentypes among siblings ast detailast ast element given ast element unique tokentypes among siblings
returns list xpath queries nodes matching line number column number token type approach uses detailast traversal detailast means detail abstract syntax tree list xpath queries nodes matching line number column number token type
returns message bundle name resource bundle contains messages used module default implementation expects resource files named messagesproperties messagesdeproperties etc file must placed package module implementation example write comfoomycoolcheck create resource files comfoomessagesproperties comfoomessagesdeproperties etc name resource bundle contains messages used module
unit tests especially class package name classname class name module name resource bundle contains messages used module
constructs new pair line column numbers line onebased line number column zerobased column number
recursively extract fullident full fullident add ast node recurse
creates new fullident starting specified node ast node start fullident value
append specified token also recalibrate first line column ast token append
helper method log localizedmessage ast node get line id column numbers associated message key key locale message format args arguments format
severitylevel factory method securitylevelname level name ignore info etc severitylevel associated securitylevelname
creates new instance text lines make comment firstcol number first column comment lastline number last line comment lastcol number last column comment
report location c style comment startlineno starting line number startcolno starting column number use reportsinglelinecommentint int instead
returns javadoc comment specified line return value null means comment linenobefore line number check javadoc comment null none
creates new filecontents instance text contents file
checks specified position intersects single line comment startlineno starting line number startcolno starting column number endlineno ending line number endcolno ending column number true positions intersects single line comment
report location block comment startlineno starting line number startcolno starting column number endlineno ending line number endcolno ending column number
checks specified position intersects block comment startlineno starting line number startcolno starting column number endlineno ending line number endcolno ending column number true positions intersects block comment
returns specified block comment string array startlineno starting line number startcolno starting column number endlineno ending line number endcolno ending column number block comment array
creates new filecontents instance filename name file lines contents file use filecontentsfiletext instead order preserve original line breaks possible
checks specified position intersects comment startlineno starting line number startcolno starting column number endlineno ending line number endcolno ending column number true positions intersects comment
returns map c style comments key line number value comment textblock line map comments use getsinglelinecomments instead
report location single line comment startlineno starting line number startcolno starting column number
gets line number line number
add next sibling ast detailast object
set parent token parent parent token
finds line number first noncomment node ast detailast node line number noncomment node exists 1 otherwise
returns token type branch token types occur branch sorted set
returns first child token makes specified type type token type match matching token null match
clears branchtokentypes cache parents current detailast instance child count current detailast instance
gets column number column number
add previous sibling ast detailast object
returns number child nodes one level node recurse tree number child nodes
clears child count ast instance ast ast clear
returns number direct child tokens specified type type token type match number matching token
finds column number first noncomment node ast detailast node column number noncomment node exists 1 otherwise
gets last child node last child node
creates new counter level severity level events need have must nonnull
notify listeners errors file calls messagedispatcherfireerrors logged errors clears errors list filename audited file
sets file extensions identify files pass filter filesetcheck extensions set file extensions missing initial character extension automatically added illegalargumentexception argument null
copy constructor filetext make copy
compatibility constructor this constructor reconstructs text file joining lines linefeed characters process restore original line terminators therefore avoided file name file lines lines text without terminators nullpointerexception lines array null
creates new file text representation the file read using specified encoding replacing malformed input unmappable characters default replacement character file name file charsetname encoding use reading file nullpointerexception text null ioexception file could read
determine line column numbers full text pos character position full text line column numbers character
reads file using specific decoder returns content string inputfile file read decoder charset decoder files text ioexception unable open read file
find positions line breaks full text array giving first positions line
gets audit event severity level audit event severity level
creates new auditevent instance src source event filename file associated event localizedmessage actual message
recheck property try copy it modulename name moduleclass key key value value value recheck whether check property existence copy checkstyleexception property defined incorrectly
called configure every child components configuration default implementation throws checkstyleexception childconf null doesnt support children must overridden validate support children wanted childconf child components configuration checkstyleexception configuration error configurationgetchildren
register basic types jdk like boolean int string use beanutils types found javalang package cub instance convertutilsbean register types with
creates beanutilsbean configured use type converters throw conversionexception instead using default value something goes wrong configured beanutilsbean
implements configurable interface using bean introspection subclasses allowed add behaviour bean based setup completed first method finishlocalsetup finishlocalsetup called allow completion beans local setup method setupchild setupchild called configurationgetchildren child configuration configuration configurable
implements contextualizable interface using bean introspection contextualizable
register custom types jdk like uri checkstyle specific classes use beanutils none types found javalang package cub instance convertutilsbean register types with
creates new localizedmessage instance column number defaults 0 lineno line number associated message bundle name resource bundle contains error messages key key locate translation args arguments translation moduleid id module message associated sourceclass name source message custommessage optional custom message overriding default
gets translated message translated message
sets locale use localization locale locale use localization
find resourcebundle given bundle name uses classloader class emitting message sure get correct bundle bundlename bundle name resourcebundle
returns formatted custom message one configured formatted custom message null custom message
creates xpathelement instance files regular expression names filtered files checks regular expression filtered check classes message regular expression messages moduleid module id query xpath query
returns list nodes matching xpath expression given event event treewalkerauditevent object list nodes matching xpath expression given event
creates xpathelement instance files regular expression names filtered files checks regular expression filtered check classes message regular expression messages moduleid module id query xpath query
matching file name moduleid check name event event true matching
matching xpath query event event true matching
adds comment suppression tag list tags text text tag line line number tag
whether current event matches tag tags event treewalkerauditevent test match tags true event matches tag tags false otherwise
tags string matches format turning checkstyle reporting format turning reporting off text string tag line line number text
determines whether source audit event matches text tag event treewalkerauditevent check true source event matches text tag
constructs tag text text suppression line line number filter suppresswithnearbycommentfilter context illegalargumentexception unable parse expanded text
collects suppression tags comments list sorts list
appends suppressions collection comments full set suppression tags comments set comments
gets influence suppress filter influence format param format influence format parse influenceformat raw influence format text text suppression parsed influence
matching file name check name event event true matching
whether line column match event event process true line column match
constructs suppresselement file name pattern files regular expression names filtered files checks regular expression filtered check classes message regular expression messages modid id lines lines csv values ranges line number filtering columns columns csv values ranges column number filtering
tries extract suppression given line filetext filetext instance lineno line number optional suppression
creates new suppression instance text suppression text lineno suppression line number columnno suppression column number suppressiontype suppression type filter suppresswithplaintextcommentfilter context
indicates whether object equal to one suppression enumeration needed code stays consistent noinspection equalscalledonenumconstant
returns filetext instance created based given file name filename name file filetext instance
returns list suppression instances retrieved given filetext filetext filetext instance list suppression instances
checks whether suppression matches given auditevent event auditevent instance true suppression matches auditevent
finds nearest suppression instance suppress given auditevent nearest suppression suppression scope line column event suppressions suppression instance event auditevent instance suppression instance
returns suppression filters specified source source source suppressions sourcename name source filter chain suppression elements source checkstyleexception error occurs
parses specified source returns suppression loader source source suppressions sourcename name source suppression loader checkstyleexception error occurs
creates new suppressionsloader instance parserconfigurationexception error occurs saxexception error occurs
returns suppress element initialized given attributes attributes attributes xmltag specified inside suppression file suppress element saxexception error occurs
creates mapping local resources dtd ids map local resources dtd ids
returns suppression filters specified file filename name suppressions file filter chain suppression elements specified file checkstyleexception error occurs
returns suppression treewalker filters specified file filename name suppressions file set xpath suppression elements specified file checkstyleexception error occurs
returns suppression treewalker filters specified source source source suppressions sourcename name source set xpath suppression elements specified source checkstyleexception error occurs
returns xpath filter initialized given attributes attributes attributes xmltag specified inside suppression file xpath filter saxexception error occurs
collects suppression tags comments list sorts list
tags string matches format turning checkstyle reporting format turning reporting off text string tag line line number text column column number text
determines whether source audit event matches text tag event treewalkerauditevent check true source event matches text tag
appends suppressions collection comments full set suppression tags comments set comments
indicates whether object equal to one suppression enumeration needed code stays consistent noinspection equalscalledonenumconstant
constructs tag line line number column column number text text suppression tagtype on tag turns checkstyle reporting filter suppressioncommentfilter context illegalargumentexception unable parse expanded text
finds nearest comment text tag matches audit event nearest tag line column event event treewalkerauditevent match tag nearest event
compares position tag file position another tag object tag compare one negative number tag tag 0 position positive number tag tag
adds tag list tags text text tag line line number tag column column number tag reportingon true tag turns checkstyle reporting on
set regular expression specify names files suppress files name file
set regular expression specify message check suppress message message check
set regular expression specify name check suppress checks name check
constructs intrangefilter lower bound upper bound range lowerbound lower bound range upperbound upper bound range
determines whether integer matches csv integer value intvalue integer check true intvalue integer matches csv value
constructs csvfilter csv commaseparated values string value integer range integers range integers form integerinteger 110 note integers must nonnegative pattern csv string numberformatexception component substring contain parsable integer
checks block comment specified class member without modifiers blockcomment block comment start detailast membertype parent token type true block comment specified token without modifiers
node interface definition blockcomment detailast true node interface
node type definition blockcomment detailast true node class interface enum annotation
checks block comment specified token annotation blockcomment block comment start detailast tokentype parent token type true block comment specified token annotation
node constructor blockcomment detailast true node constructor
node class definition blockcomment detailast true node class
checks block comment specified token without modifiers blockcomment block comment start detailast parenttokentype parent token type nexttokentype next token type true block comment specified token without modifiers
node method declaration blockcomment detailast true node method
get next sibling node skipping comment nodes node current node next sibling
node annotation field declaration blockcomment detailast true node annotation field
node enum definition blockcomment detailast true node enum
node type member declaration blockcomment detailast true node method field constructor enum constant annotation field
checks block comment specified token modifiers blockcomment block comment start detailast tokentype parent token type true block comment specified token modifiers
node enum constant blockcomment detailast true node enum constant
node field declaration blockcomment detailast true node field
node annotation definition blockcomment detailast true node annotation
get previous sibling node skipping comments node current node previous sibling
constructs normalized relative path base directory given path basedirectory base path given path relativized path path relativize base directory relative normalized path base directory path path base directory null
puts part line matches regexp given template positions n n number matched part line template string expand linetoplaceintemplate contains expression placed string regexp expression find comment string based template filled given lines
checks whether given string valid name str string check true given string contains valid name
returns new instance class constructor invoke parameters pass constructor type constructor new instance class illegalstateexception exception occurs constructornewinstanceobject
checks whether given string valid identifier str string check true given string contains valid identifier
checks whether string contains integer value str string check true given string integer false otherwise
gets constructor targetclass targetclass constructor returned parametertypes constructor type target class object constructor targetclass illegalstateexception exception occurs classgetconstructorclass
create block comment string content content comment content detailast block comment
returns length string prefix tabs expanded tab counted number characters takes jump next tab stop inputstring input string toidx index string exclusive calculation stops tabwidth distance tab stop position length stringsubstring0 toidx tabs expanded
helper method create regular expression specific flags pattern pattern match flags flags set created regexp object illegalargumentexception unable create pattern object
checks value arg blank either null empty contains whitespace characters value string check true arg blank
returns file name without extension use method guava library reduce checkstyles dependencies external libraries fullfilename file name extension file name without extension
returns whether file extension matches meant process file file checked fileextensions files extensions empty property config makes matches all whether match
returns whether specified string contains whitespace specified index index index check line line check whether whitespace
returns base class name qualified name type fully qualified name cannot null base class name fully qualified name
resolve specified filename uri filename name os file resolved header file uri checkstyleexception failure
count lines columns in last line text text string initiallinescnt initial value lines counter initialcolumnscnt initial value columns counter entrypair first element lines counter second columns counter
validates whether passed string valid pattern not pattern string validate true pattern valid false otherwise
closes stream rethrowing ioexception illegalstateexception closeable closeable object
returns file extension given file name empty string file extension use method guava library reduce checkstyles dependencies external libraries filenamewithextension file name extension file extension given file name empty string file extension
returns length string ignoring trailing whitespace pity trim like method removed trailing whitespace line string process length string ignoring trailing whitespace
create block comment token token token object detailast blockcomment type
gets next sibling specified node node detailnode next sibling
returns name token given id id id token name get token name
returns first child token specified type detailnode javadoc ast node type token type match matching token null match
gets tag name javadoctagsection javadoctagsection get tag name from name javadoctagsections tag
get content javadoc comment javadoccommentbegin javadoc comment ast content javadoc comment
checks whether node contains node specified type among children deep level node detailnode type token type true node contains node type type among children deep level
checks javadoc comment its right place from javadoc util documentation placement comments documentation comments recognized placed immediately class interface constructor method field annotation field declarations see class example method example field example documentation comments placed body method ignored if many documentation comments per declaration statement last one recognized blockcomment block comment ast true javadoc right place hrefhttpsdocsoraclecomjavase8docstechnotestoolsunixjavadochtml javadoc util documentation
gets previous sibling specified node node detailnode previous sibling
gets next sibling specified node specified type node detailnode tokentype javadoc token type next sibling
replace control chars escaped symbols text string process processed string control chars escaped
returns id token given name name name token id get token id
checks block comment content starts javadoc comment identifier blockcommentbegin block comment ast true block comment content starts javadoc comment identifier
checks commentcontent starts javadoc comment identifier commentcontent content block comment true commentcontent starts javadoc comment identifier
gets validtags given piece javadoc textblock javadoc comment process tagtype type validtags were interested standalone validtags given javadoc
gets first child node specified node node detailnode first child
gets content block comment blockcommentbegin block comment ast content block comment
checks class default constructor clazz class check true class default constructor
checks whether class extends automaticbean nonabstract default constructor clazz class check true class may considered valid production class
checks whether class may considered checkstyle module checkstyles modules nonabstract classes either checkstyles checks file sets filters file filters treewalker filters audit listener root module clazz class check true class may considered checkstyle module
gets checkstyles modules directly recursively given packages packages collection package names use loader class loader used load checkstyle package names set checkstyles module classes ioexception attempt read class path resources failed ischeckstylemoduleclass
returns short description token given name name name token id get short description
finds first optional child token detailast root node matches given predicate root root node predicate predicate optional detailast node matches predicate
argument commentrelated type singlelinecomment blockcommentbegin blockcommentend commentcontent type token type true type commentrelated type
returns id token given name name name token id get token id
get token ids available tokentypes array token ids
creates map field name field value public int fields class cls source class unmodifiable name value map
performs action child detailast root node matches given token type root root node type token type match action action perform nodes
creates array map keys quick valuetoname lookup map map source map array map keys
gets value static instance field type int another primitive type convertible type int via widening conversion throw checked exceptions field int extracted object extract int value value field converted type int illegalstateexception field object enforcing java language access control underlying field inaccessible fieldgetintobject
returns name token given id id id token name get token name
checks ast annotated passed annotation method look imports package statements detect passed annotation check ast contains passed annotation taking account fullyqualified names ex javalangoverride override method need called twice name given ast current node annotation annotation name check true contains annotation
checks given ast annotated least one annotation matches given predicate returns ast representing first matching annotation method look imports package statements detect passed annotation ast current node predicate predicate decides annotation matches ast representing annotation
checks ast annotated passed annotation returns ast representing annotation method look imports package statements detect passed annotation check ast contains passed annotation taking account fullyqualified names ex javalangoverride override method need called twice name given ast current node annotation annotation name check ast representing annotation
checks given ast element annotated specified annotations method accepts simple fullyqualified names eg override match javalangoverride override ast type method definition annotations collection annotations look for true given ast element annotated least one specified annotations false otherwise
checks ast annotated annotation ast current node true ast contains least one annotation
gets ast holds series annotations potentially annotated ast returns null passed ast annotation holder ast current node annotation holder
returns whether scope node restricted code block code block method constructor body initializer block lambda body node node check boolean value
determines whether node local variable definition ie declared code block initializer catch parameter node node check whether aast local variable definition
returns whether node contained outer type block node node check boolean value
returns whether node directly contained within enum block node node check directly contained within enum block boolean value
returns scope surrounding block node node return scope scope surrounding block
checks whether ast node specific scope ast node check scope scope value true ast node scope
returns scope specified modifier set amods root node modifier set scope value
returns whether node directly contained within specified block node node check directly contained within specified block tokentype type token boolean value
returns value represented specified string specified type returns 0 types float double int long text string parsed type token type text constant tokentypes double value represented string argument
checks whether parameter receiver parameterdefast parameter node true parameter receiver
creates fullident given type node typeast type node fullident given type
create set class names short class names classnames array class names set class names short class names
returns whether token represents slist part else statement ast token check whether toke represent slist part else
tests whether method definition ast defines equals covariant ast method definition ast test precondition ast tokentypesmethoddef node true ast defines equals covariant
returns accessmodifier based information access modifier taken given token type tokentypesmodifiers modifierstoken token type tokentypesmodifiers accessmodifier
checks whether method void one methoddefast method node true method void one
finds subnode given node minimal line column pair node root tree search subnode minimal line column pair
retrieves names type parameters node node parameterized ast node list type parameter names
returns whether token represents else part else set ast token check whether
returns whether ast represents setter method ast ast check whether ast represents setter method
parses string argument integer long radix specified second argument characters string must digits specified radix text string containing integer representation parsed precondition text contains parsable int radix radix used parsing text type token type text constant tokentypes number represented string argument specified radix
retrieves type parameters node node parameterized ast node list type parameter names
returns whether ast represents getter method ast ast check whether ast represents getter method
checks suppression source given filename exists filename name suppressions file true suppression file exists otherwise false
whether c style comment trailing comment comment check line line comment starts true comment trailing
count regexp matches string literal pattern pattern target string literal count regexp matches
checks literal unicode chars literal string literal true literal unicode chars
checks characters string literal escaped literal current literal true characters string literal escaped
check trail comment present ast token ast current token true trail comment present ast token
check string literal contains unicode control chars literal string literal pattern regexp valid characters true string literal contains unicode control chars
reads file provided checks line separators file file processed ioexception io error occurred reading file provided
sets line separator one crlf lfcr lfcrcrlf system lineseparatorparam line separator set illegalargumentexception specified line separator one crlf lf cr lfcrcrlf system
checks whether content provided reader ends platform specific line separator randomaccessfile reader content check boolean whether content ends line separator ioexception io error occurred reading provided reader
sets tokens occurrence descendant limited limitedtokensparam list tokens ignore
log violations token ast token
log validation one violation ast current token
counts number occurrences descendant tokens ast root token descendants depth maximum depth counted descendants
checks given comment legal singleline matches pattern comment comment check true comment legal
method looks children returns list expressions strings parent ast contains children list expressions strings
returns parent given ast parent one following types annotationdef packagedef classdef enumdef enumconstantdef ctordef methoddef parameterdef variabledef annotationfielddef type literalnew literalthrows typeargument implementsclause dot child ast returns ast parent given
checks whether suppression entry position audit event occurrence position source file line line number source file event occurred column column number source file event occurred entry suppression entry true suppression entry position audit event occurrence position source file
get annotation values ast annotation token list values
method removes checkstyle prefix checkstyle check name exists checkname name check check name without prefix
returns literal string expression represented ast ast ast node expr java string represented given ast expression empty string expression complex illegalargumentexception ast invalid
checks whether suppression entry position audit event occurrence position source file line line number source file event occurred column column number source file event occurred entry suppression entry true suppression entry position audit event occurrence position source file
returns annotation values represented ast ast ast node expr annotationarrayinit list java string represented given ast expression annotation array initializer illegalargumentexception ast invalid
returns default alias source name check source name lower case dotted prefix check suffix removed sourcename source name check generally class name default alias given check
returns nth child ast node ast ast node get child index index child get nth child given ast node null none
checks suppression check given source name location last file processed event audit event whether check given name suppressed given source location
returns java identifier represented ast ast ast node ident java identifier represented given ast subtree illegalargumentexception ast invalid
returns alias source name check alias explicitly registered via registeraliasstring string alias returned otherwise default alias used sourcename source name check generally class name current alias given check
registers list source name aliases based commaseparated list sourcealias items compuppycrawltoolscheckstylecheckssizesparameternumbercheck paramnum aliaslist list commaseparated alias assignments
constructs new suppression region entry checkname source name suppressed check firstline first line suppression region firstcolumn first column suppression region lastline last line suppression region lastcolumn last column suppression region
get target annotation ast ast node get child get target annotation
logs translation file missing filepath file path filename file name
searches specific resource bundle set resource bundles bundles set resource bundles targetbundle target bundle search for guavas optional resource bundle present target bundle found
compares th specified key set key sets given translation files arranged map missing keys reported filekeys map translation files key sets keysthatmustexist set keys compare with
helper method log exception exception exception occurred file file could processed
creates resourcebundle object specific base name common files extension basename bundle base name path common path files included resource bundle extension common extension files included resource bundle
checks whether resource bundle contains file name matches file name regexp filenameregexp file name regexp true resource bundle contains file name matches file name regexp
checks existence translation files resource bundle name translation file begins base name resource bundle followed language code country variant optional ends extension suffix bundle resource bundle
validates correctness user specified language codes check languagecodes user specified language codes check
creates new translationcheck instance
checks resource files bundle consistency regarding keys files bundle must key set case error message posted giving information key misses file bundle resource bundle
checks whether user specified language code correct is contained available locales userspecifiedlanguagecode user specified language code true user specified language code correct
checks existence default translation file resource bundle bundle resource bundle
groups set files bundles files names match base name regexp pattern grouped files set files basenameregexp base name regexp pattern set resourcebundles
extracts base name the unique prefix resource bundle translation file name example messages base name messagesproperties messagesdeatproperties messagesenproperties etc filename fully qualified name translation file extracted base name
loads keys specified translation file set file translation file set object holds loaded keys
extracts path file name contains path example file nam xyzmessagesproperties method return xyz filenamewithpath file name contains path file path
returns name translation file absent resource bundle guavas optional missing translation bundle resource bundle languagecode language code name translation file absent resource bundle guavas optional missing translation
sets language codes required translations check translationcodes separated list language codes
get source file name source file name
checks method definition public static void mainstring method method definition node
whether type javalangstring typeast type check true type javalangstring
checks method name quotmainquot method methoddef node true check passed false otherwise
checks method string string param method methoddef node true check passed false otherwise
sets current package packagedef node package definition
checks return type void method methoddef node true check passed false otherwise
inner class change current class name classdef node class definition
checks method final static modifiers method methoddef node true check passed false otherwise
checks skip current param due ignoreprimitivetypes option paramdef tokentypesparameterdef parameterdef true param skipped
checks parameters method ctor method method ctor check
checks given parameter final param parameter check
puts value properties key specified noinspection useofpropertiesashashtable
method returns regular expression pattern given key name keyname key name look regular expression pattern given key name
method returns line number key detected checked properties files first filetext filetext object contains lines process keyname key name look line number first occurrence key found properties file 1 returned
checks bytes equal byte representation line separator bytes bytes array check bytes equal byte representation line separator
checks characters line around columnno correct number spaces return true following conditions must met character columnno first line character columnno separated whitespaces previous nonwhitespace character character columnno separated one whitespace previous nonwhitespace character validatecomments disabled previous text end block comment line line file examine columnno column position line examine true text columnno separated correctly previous token
examines every sibling child node violations node node start examining
get node owns tokentypesarraydeclarator arraydeclarator sequence ast tokentypesarraydeclarator arraydeclarator node owner node
gets position token place possible redundant whitespace ast node representing token position token
checks unwanted whitespace visited node ast visited node whitespacecolumnno column number possible whitespace whitespacelineno line number possible whitespace true whitespace found
gets previous node tokentypesindexop indexop token usage getpositionafter method simplified copy getarraydeclaratorpreviouselement method ast tokentypesindexop indexop node previous node text order
searches parameter node type node returns last node extended structure ast subject node type node
finds previous node text order array declarator parent type tokentypestype type ast array declarator node parent parent node previous node text order
returns proper argument getpositionafter method token tokentypesarraydeclarator arraydeclarator tokentypesrbrack rbrack tokentypesident ident array type definition literal ast tokentypesarraydeclarator arraydeclarator node previous node text order
gets leftmost token identifier ast token possibly possessing identifier leftmost token identifier
visited ast node returns node checked followed whitespace ast visited node node ast
whether token allowed multiple empty lines before ast ast check true token allowed multiple empty lines before
check token preceded javadoc comment token token check true token preceded javadoc comment
get list empty lines ast ast check list line numbers empty lines
checks token empty two previous lines multiple empty lines allowed token detailast token true token empty two lines allowmultipleemptylines false
process package ast token nexttoken next token
whether ast class member block asttype ast check true ast class member block
checks token empty preprevious line token detailast token true token empty lines before
process import ast token nexttoken next token
check token comment ast ast node true given ast comment
log violation case multiple empty lines inside constructor initialization block method ast ast check
checks token empty line before token token true token empty line before
variable definition type field variabledef variable definition true variable definition type field
checks whether token placement violates policy empty line fields detailast token analyzed true policy violated warning raised false otherwise
get list empty lines log emptylines list empty lines list empty lines log
process variable ast token nexttoken next token
checks token empty line after token token true token empty line after
checks whether empty lines within specified line range line numbering started 1 parameter values startline number first line range endline number second line range true found blank line within range false otherwise
process token representing left parentheses ast token representing left parentheses
process token representing right parentheses ast token representing right parentheses
checks semicolon empty initializer condition semicolonast detailast semicolon true semicolon empty initializer condition
test given detailast part allowed empty constructor ctor block ast detailast test parenttype token type asts parent true ast makes part allowed empty constructor block
check given ast part double brace initializer omit checking next token separated whitespace see hrefhttpsgithubcomcheckstylecheckstylepull2845 pr2845 information function needed ast ast check true omit checking next token false otherwise
whether belongs foreach parenttype parent true current token foreach token
empty block ast ast parenttype parent true block empty
check happens anoninners currenttype token nextchar next symbol true end anon inner class
tests given detailast part empty block example empty block might look like following public void mymethodint val above method body empty block ast detailast test parenttype token type asts parent match parent token type were looking match true ast makes part empty block contained match token type node
test given detailast part empty block example empty block might look like following class foo ast ast detailast test true ast makes part empty block contained match token type node
ast target check ast ast currenttype type ast true ok skip validation
checks loop empty ast ast detailast test parenttype token type asts parent true ast makes part allowed empty loop block
whether belongs cases defaults parenttype parent true current token case default tokens
array initialization currenttype current token parenttype parent token true current token inside array initialization
test given detailast part allowed empty method block ast detailast test parenttype token type asts parent true ast makes part allowed empty method block
check checked next token separated current whitespace explanation method needed identical one included shouldcheckseparationfromprevioustoken method ast current ast nextchar next character true checked next token separated whitespace false otherwise
check given ast part double brace initializer omit checking previous token separated whitespace ast ast check true omit checking previous token false otherwise
checks parens inside tokentypesexpr tokentypesquestion tokentypesmethodcall ast token check
checks token follows empty iterator ast token check whether token follows empty iterator
returns array acceptable tokens acceptabletokens
checks whether acceptabletokens contains given ast ast token check true ast acceptabletokens
checks whether tokentypesrparen closing paren tokentypestypecast ast tokentypesrparen check true ast closing paren tokentypestypecast
checks token precedes empty initializer ast token check whether token precedes empty initializer
checks parens tokentypesresourcespecification ast token check
checks parens token may contain parens eg tokentypesenumconstantdef tokentypesannotation tokentypesliteralsynchronized tokentypesliteralnew tokentypeslambda ast token check
checks parens tokentypesliteralfor ast token check
initializes sorts acceptabletokens make binary search possible
process singlegeneric ast token line line content position
checks token end generics ast token check
process nested generics ast token line line content position
generic method reference ast ast true generic method ref
returns whether specified string contains whitespace specified indices fromindex index start search from inclusive toindex index finish search exclusive line line check whether whitespaces or nothing
checks token start generics ast token check
checks whether given character valid right generic ends charafter character check checks given character valid
checks whether token followed whitespace targetast ast token line line associated ast token true ast token followed whitespace
returns length code without comments blank lines openingbrace block opening brace closingbrace block closing brace number lines code current block
check counters report violations counter method counters check ast report errors against
creates interface scopedefinition surrounding scope definition class enum etc count methods for
utility reporting maximum exceeded max maximum allowed value value actual value msg message log takes two arguments value maximum ast ast associate message
checks scope definition check method found inside scope class enum etc methoddef method analyze true method part latest scope definition counted
increments counter one supplied scope scope scope counter increment
gets value scope counter scope scope counter get value value scope counter
determine visibility modifier raise corresponding counter method methodsubtree abstractsyntaxtree
process end statement list ast token representing statement list
process start member definition ast token representing member definition
process end member definition ast token representing member definition
creates new member context ast member ast node
determine whether ignore number parameters method ast token process true overridden method number parameters ignored false otherwise
construct instance handler given indentation check abstract syntax tree parent handler indentcheck indentation check ast abstract syntax tree parent parent handler
check indentation level conditional expression
creates new instance nested structure base parents level offsets offsets parents level
adds one acceptable indentation level base class add new indentations to additions new acceptable indentation new acceptable indentation level instance
combines 2 acceptable indentation level classes base class add new indentations to addition new acceptable indentation new acceptable indentation level instance
gets list registered handler types int tokentype types
creates handlerfactory
returns true type form tokentypes handled type type tokentypes true handler registered false otherwise
create new instance handler methodcall indentcheck indentation check ast ast handle parent handler parent ast new instance
registers handler type type tokentypes handlerclass handler register type handler class object
get handler ast indentcheck indentation check ast ast handle parent handler parent ast expressionhandler ast
check indentation conditional expression
construct instance handler given indentation check abstract syntax tree parent handler indentcheck indentation check ast abstract syntax tree parent parent handler
determines if statement part else clause line true if part else false otherwise
construct instance handler given indentation check abstract syntax tree parent handler indentcheck indentation check ast abstract syntax tree parent parent handler
whether statement kind definition method class etc previoussibling statement check true statement kind definition
returns first token distributed previous statement comment comment comment check first token distributed previous statement comment
checks whether previous statement comment distributed return statement commentprevioussibling previous sibling comment true previous statement comment distributed return statement
handles comment placed within empty case block note comment placed end empty case block checkstyles limitations clearly detect user intention explanation target below case assume violation single line comment within empty case block indentation level lower indentation level next case token example case optionone violation case optiontwo prevstmt previous statement comment single line comment nextstmt next statement
get column number code starts lineno line number get column number in column number code starts
whether statement always curly brackets previoussibling statement check true statement always curly brackets
logs comment indentation level next previous statement comment comment nextstmt next statement prevstmt previous statement
handles fall through single line comment note fall through similar comments indentation level next previous statement example case optionone int somevariable 1 fall ok case optiontwo int 5 break case optionone int somevariable 1 init variable ok case optiontwo int 5 break prevstmt previous statement comment single line comment nextstmt next statement
checks current comment trailing comment comment comment check true current comment trailing comment
checks current single line comment trailing comment eg double d 314 comment singlelinecomment tokentypessinglelinecomment single line comment true current single line comment trailing comment
finds start token method call chain root root token line start token method call chain
handles comment placed within empty code block note comment placed end empty code block checkstyles limitations clearly detect user intention explanation target below case assume violation single line comment within empty code block indentation level lower indentation level closing right curly brace example a true violation comment comment check nextstmt next statement
preorder traverse abstract syntax tree find previous statement comment previous statement comment found traverse finished comment current statement previous statement comment null comment previous statement
checks comment next code statement or previous code stmt like case switch block indented level eg comment indentation level int x 10 comment different indentation level int x1 5 boolean bool true indentation level comment tokentypessinglelinecomment single line comment prevstmt previous code statement nextstmt next code statement true comment next code statement indented level
finds token begins line root root token line token begins line
whether comment might used next block multiblock structure endblockstmt end current block true comment might used next block multiblock structure
checks whether use object reference invoke objects method line root root token line true use object reference invoke objects method line
checks whether comment placed empty code block example empty code block note method treat empty case blocks prevstmt previous statement nextstmt next statement true comment placed empty code block
gets previous casetoken comment parentstatement comments parent statement previous casetoken null previous casetoken absent
whether ast node starts block root ast node check true ast node starts block
checks whether previous statement comment method call chain string concatenation statement distributed two ore lines comment comment check true previous statement distributed expression
checks current comment block trailing comment eg double d 314 comment comment double d 185 blockcomment tokentypesblockcommentbegin block comment begin true current comment block trailing comment
checks whether previous statement comment distributed throw statement commentprevioussibling previous sibling comment true previous statement comment distributed throw statement
get token start counting number lines add distance aim from checkedstatement checked statement token start counting number lines add distance aim from
checks comment indentations surrounding code eg comment ok double d 314 comment not ok double d1 50 comment comment check
returns next statement comment comment comment next statement comment
checks whether comment fall through comment example case optionone int somevariable 1 fall case optiontwo int 5 break prevstmt previous statement nextstmt next statement true comment fall through comment
count number empty lines statements startstatement start statement endstatement end statement number empty lines statements
checks whether previous statement comment distributed two lines comment comment check true previous statement comment distributed two lines
gets comments previous statement switch block comment tokentypessinglelinecomment singleline comment comments previous statement null previous statement absent
whether ast comment ast ast check true ast comment
checks whether comment placed end code block nextstmt next statement true comment placed end block
returns previous statement comment comment comment previous statement comment
get message key depending comment type comment comment process message key
checks whether case block empty nextstmt previous statement prevstmt next statement true case block empty
finds previous statement comment uses root token line searching comment comment root root token line previous statement comment null previous statement found
gets previous statement comment placed immediately case parentstatement comments parent statement comments previous statement null previous statement absent
checks whether checked statement previous line ignoring empty lines lines contain comments currentstatement current statement checkedstatement checked statement true checked statement line previous current statement ignoring empty lines lines contain comments
handles comment placed end non empty code block note single line comment placed end non empty block comment indentation level previous statement example a true int b 1 comment prevstmt previous statement comment comment check nextstmt next statement
construct instance handler given indentation check abstract syntax tree parent handler indentcheck indentation check ast abstract syntax tree parent parent handler
construct instance handler given indentation check abstract syntax tree parent handler indentcheck indentation check ast abstract syntax tree parent parent handler
check indentation parameters for loop
construct instance handler given indentation check abstract syntax tree parent handler indentcheck indentation check ast abstract syntax tree parent parent handler
construct instance handler given indentation check abstract syntax tree parent handler indentcheck indentation check ast abstract syntax tree parent parent handler
creates handler name class according ast type ast abstract syntax tree handler name class
get starting column first line starting column first line
construct instance handler given indentation check abstract syntax tree parent handler indentcheck indentation check ast abstract syntax tree parent parent handler
gets indentation level expected children indentation level expected children
construct instance handler given indentation check name abstract syntax tree parent handler indentcheck indentation check name name handler ast abstract syntax tree parent parent handler noinspection weakeraccess
get right curly brace portion expression handling right curly brace expression
check indentation level child list statements
check indentation left curly brace
check indentation right curly brace
check indent top level token
checks indentation resources parameters try resources resourcesspecast resource specification ast
construct instance handler given indentation check abstract syntax tree parent handler indentcheck indentation check ast abstract syntax tree parent parent handler
method check indentation left paren right paren method checks whether either start line method takes care line wrapping strict condition well parenast ast check subtype name used log message
method check indentation try resources children takes account forcestrictcondition value logging errors example usage would include checking try parenthesis try resources ast ast check subtype string representing child type expectedident expected indent level
construct instance handler given indentation check abstract syntax tree parent handler indentcheck indentation check ast abstract syntax tree parent parent handler
get first ast specified method call ast method call first ast specified method call
construct instance handler given indentation check abstract syntax tree parent handler indentcheck indentation check ast abstract syntax tree parent parent handler
returns method constructor name fooarg foo foobararg bar superarg super tokentypesident node method call tokentypessuperctorcall otherwise
checks ast2 chained method call starts level ast1 ends words right paren ast1 level ast2 valuemethodone argument1 methodtwo argument2 ast1 ast1 ast2 ast2 true ast2 begins level ast1 ends
first chained method call moved next line true chained class wrapped
check indentation level throws clause
gets start line method excluding annotations required current tokentypesmethoddef may always start seen httpsgithubcomcheckstylecheckstyleissues3145 mainast method definition ast start column position method
construct instance handler given indentation check abstract syntax tree parent handler indentcheck indentation check ast abstract syntax tree parent parent handler
creates handler name class according ast type ast abstract syntax tree handler name class
construct instance handler given indentation check abstract syntax tree parent handler indentcheck indentation check expr abstract syntax tree parent parent handler
construct instance handler given indentation check abstract syntax tree parent handler indentcheck indentation check ast abstract syntax tree parent parent handler
checks slist node placed line casegroup node true slist node places line casegroup node
determine expression handling block parent true does false otherwise
construct instance handler given indentation check abstract syntax tree parent handler indentcheck indentation check expr abstract syntax tree parent parent handler
construct instance handler given indentation check name abstract syntax tree parent handler indentcheck indentation check ast abstract syntax tree parent parent handler
check indentation expression synchronized on
construct instance handler given indentation check abstract syntax tree parent handler indentcheck indentation check ast abstract syntax tree parent parent handler
check indentation switch expression
construct instance handler given indentation check abstract syntax tree parent handler indentcheck indentation check ast abstract syntax tree parent parent handler
construct instance handler given indentation check abstract syntax tree parent handler indentcheck indentation check ast abstract syntax tree parent parent handler
construct instance handler given indentation check abstract syntax tree parent handler indentcheck indentation check ast abstract syntax tree parent parent handler
check indentation level conditional expression
construct instance handler given indentation check abstract syntax tree parent handler indentcheck indentation check ast abstract syntax tree parent parent handler
returns column number first nonblank char specified column specified line 1 char doesnt exist lineno number line search columnno number column search column number first nonblank char specified column specified line 1 char doesnt exist
construct instance handler given indentation check abstract syntax tree parent handler indentcheck indentation check ast abstract syntax tree parent parent handler
check indentation conditional expression
noinspection methodwithmultiplereturnpoints
construct instance handler given indentation check abstract syntax tree parent handler indentcheck indentation check ast abstract syntax tree parent parent handler
log error message line line number error found key message describes error args details message javatextmessageformat
construct instance handler given indentation check abstract syntax tree parent handler indentcheck indentation check ast abstract syntax tree parent parent handler
find set lines given subtree lines set lines add tree subtree examine allownesting whether allow nested subtrees
log indentation error ast expression caused error subtypename type expression actualindent actual indent level expression
check indentation set lines lines set lines check indentlevel indentation level firstlinematches whether first line match firstline first line whole expression
get first line given expression startline line starting tree expression find first line first line expression
searches given subtree including given node token represents first symbol subtree file ast root subtree search performed token occurs first file noinspection weakeraccess
check indentation left parenthesis parenthesis check
log child indentation error line expression caused error actualindent actual indent level expression expectedindent expected indent level expression
check indentation right parenthesis parenthesis check left parenthesis associated arparen
check indentation level expression subtree tree expression subtree check indentlevel indentation level firstlinematches whether first line match allownesting whether subtree nesting allowed
get indentation amount handler performance reasons value cached first time method called indentation amount computed stored calls stored value returned expected indentation amount noinspection weakeraccess
check indentation single line linenum number line check colnum column number starting indentlevel indentation level mustmatch whether indentation level must match
get column number start given expression expanding tabs spaces process ast expression find start column number start expression
log indentation error ast expression caused error subtypename type expression actualindent actual indent level expression expectedindent expected indent level expression
get start specified line line specified line number start specified line
construct instance handler given indentation check name abstract syntax tree parent handler indentcheck indentation check typename name handler expr abstract syntax tree parent parent handler
check indentation level modifiers
check indent level children specified parent expression parentnode parent whose children checking tokentypes token types check startindent starting indent level firstlinematches whether first line needs match allownesting whether nested children allowed
checks indentation wrapped lines including firstnode lastnode firstnode first node start examining lastnode last node examine inclusively wrappedindentlevel indentation wrapped lines use startindent indentation first line wrapped lines used ignorefirstline test first lines indentation checked not
check indentation method type
checks variabledef node array declaration variabledef current variabledef true variabledef node array declaration
construct instance handler given indentation check abstract syntax tree parent handler indentcheck indentation check ast abstract syntax tree parent parent handler
returns semicolon variable definition statement variabledef ast node type tokentypesvariabledef ast node type tokentypessemi
get column number start given expression expanding tabs spaces process ast expression find start column number start expression
returns next curnode node curnode current node next curnode node
gets next node line firstnodesonlines map unless next line case returns last line firstnodesonlines navigablemap lines first nodes node node find next node line line number next line map
checks line wrapping expressions definitions firstnode first node start examining lastnode last node examine inclusively indentlevel indentation wrapped lines use
checks line end scope handles occurrences close braces close parenthesis line lastannotationnode last node annotation node node indicating begin checking true nodes last annotation node end scope nodes false otherwise
get start specified line line specified line number start specified line
finds first nodes line puts map firstnode first node start examining lastnode last node examine inclusively navigablemap contains lines numbers key first nodes lines values
checks line wrapping expressions definitions firstnode first node start examining lastnode last node examine inclusively indentlevel indentation wrapped lines use startindent indentation first line wrapped lines used ignorefirstline test first lines indentation checked not
get start line given expression ast expression find start line start line given expression
logs warning message indentation incorrect currentnode current node probably invoked error currentindent correct indentation
builds enum value boolean val value enum instance noinspection booleanparameter
checks line wrapping annotations atnode atclause node firstnodesonlines map contains first nodes values line numbers keys indentlevel line wrapping indentation
collects classes defined source file required avoid false alarms local vs javalang classes ast class def token
perform processing import token ast import token
checks illegal instantiations classname instantiated class may may qualified fully qualified class name classname null instantiation classname ok
perform processing package token ast package token
check import statements classname name class value illegal instantiated type
processes one collected new tokens walking tree finished newtokenast new token
check type package classname class name pkgnamelen package name illegal illegal value true type package
collects new token ast new token
standard class classname class name illegal illegal value true type standard
set list ignore method names methodnames array ignored method names
checks current method ignorable due checks properties methoddef tokentypesmethoddef methoddef true method ignorable
set list illegal classes classnames array illegal exception classes
construct instance default values
sets regular expression pattern ignored strings ignorestringsregexp regular expression pattern ignored strings noinspection weakeraccess
analyses path ast root given ast occurrences token types ignoreoccurrencecontext ast node start searching towards root node whether path root node ast contains one token type ignoreoccurrencecontext
adds set tokens check interested in strrep string representation tokens interested
finds exception types current catch need till different exception types one catch parenttoken parent node types type bor list contains exception types current catch
set list illegal classes classnames array illegal exception classes
determines whether ast method definition check 0 parameters ast method definition ast true method ast method check
determines whether super literal call super method check literalsuperast ast node super literal true ast call super method check
method arguments methodcalldotast detailast true parameters found
constructs stack node method definition ast ast method definition
name method ast method ast true method name
determines whether super call overriding method ast ast node dot operator super call true super call overriding method
checks given node contains numeric constant zero expr node check true given node contains numeric constant zero
examine char literal initializing default value exprstart expression true literal initialized zero symbol
checks cases skipped assignment local variable final variables ast variable def ast true case need skipped
determine given type numeric type type code type check true its numeric type tokentypes
checks explicit initializations made false 0 0 ast token checked explicit initializations
returns ast return statement boolean literal returns true iff ast represents return truefalse ast syntax tree check ast return statement boolean literal
checks token type literal true false tokentype tokentype true iff tokentype literaltrue literalfalse
returns ast return statement boolean literal compound statement contains return statement returns true iff ast represents return truefalse return truefalse ast syntax tree check ast return statement boolean literal
token literalif else following ast token checked true token literalif else following else false
check given parameter definition multiple type catch parameterdefast parameter definition true multiple type catch false otherwise
checks whether scope node restricted specific code block node node blocktype block type true scope node restricted specific code block
determines whether enhanced forloop variable checked not ast ast compare true enhanced forloop variable checked
check variables same ast1 variable compare ast2 variable compare true variables same otherwise false
determines whether ast descendant abstract native method ast ast check true ast descendant abstract native method
check variables loop ast1 variable compare ast2 variable compare true variables loop
find class constructor enum method field defined ast variable want find scope defined ast class constructor method defined
update current scope data uninitialized variable according specific scope data scopeuninitializedvariabledata variable specific stack uninitialized variables
gets final variable candidate ast ast ast optional finalvariablecandidate ast scopestack
returns last child token makes specified type contains containtype branch ast token tested childtype token type match containtype token type present branch matching token null match
insert parameter topmost scope stack ast variable insert
insert variable topmost scope stack ast variable insert
removes final variable candidate stack ast variable remove
token casegroup another case following ast token checked true token casegroup another case following else false
update assigned variables temporary stack
checks whether variable declared outside loop used inside loop example int x int 0 j 0 j i x 5 variable variable true variable declared outside loop used inside loop
determines identifier assignment conditions assigned already assigned ident identifier candidate final local variable candidate
whether final variable candidate removed list final local variable candidates scopedata scope data variable ast variable ast true variable removed
searches final local variable candidate ast scope ast ast optional finalvariablecandidate
store uninitialized variables temporary stack future use
update current scope data uninitialized variable according whole scope data prevscopeuninitializedvariabledata variable previous stack uninitialized variables noinspection methodparameternamingconvention
checks modifiers contain verifiable type modifiers parent node modifiers true method variable verified
checks current methods return type variables type verifiable according membermodifiers option methodorvariabledef methoddef variabledef ast node true member verifiable according membermodifiers option
checks given type arguments parameters type node check
checks extends implements statement clause detailast either tokentypesextendsclause tokentypesimplementsclause
checks return type given method methoddef method check
returns true method checked false ast method def check true check method
returns true given class name one illegal classes else false classname class name check true given class name one illegal classes matches abstract class names pattern
creates new instance check
set list member modifiers of methods fields checked modifiers string contains modifiers
set list ignore method names methodnames array ignored method names noinspection weakeraccess
checks type parameters node node node check
checks current import star import eg import javautil importast tokentypesimport import true star import
checks identifier given type type node check
gets imported types hrefhttpsdocsoraclecomjavasespecsjlsse8htmljls6htmljls67 canonical name importast tokentypesimport import imported canonical types name
checks imported type as static star imports supported check type consideration type illegal due checks options puts violation it importast tokentypesimport import
checks super type implemented interfaces given type typedef class interface check
extends illegal class names set via imported short type name canonicalname hrefhttpsdocsoraclecomjavasespecsjlsse8htmljls6htmljls67 canonical name imported type
gets next node syntactical tree child current node sibling current node sibling parent current node currentnodeast current node considering subtreerootast subtree root current node bypassing current node reached root subtree method returns null
checks type given variable variabledef variable check
checks upper lower bounds given type type node check
checks type parameters parameterdef parameter list check
checks type type argumentsparameters given method parameter variable method callreference ast node check
set list illegal variable types classnames array illegal variable types noinspection weakeraccess
checks type arguments node node node check
set whether match case sensitive caseinsensitive true match case insensitive
updates format based values formatstring ignorecase
set format specified regular expression format string value orgapachecommonsbeanutilsconversionexception unable parse format
setter message property message custom message used report violations
returns directory name file in directory name
tests given detailast surrounded parentheses short ast previous sibling whose type tokentypeslparen next sibling whose type tokentypesrparen ast detailast check surrounded parentheses true ast surrounded parentheses
returns specified string chopped maxquotedlength plus ellipsis length string exceeds maxquotedlength value string potentially chop chopped string string longer maxquotedlength otherwise string
check given token type found array token types type token type tokens array token types search true type found tokens
tests given lambda node single parameter defined type surrounded parentheses ast detailast whose type tokentypeslambda true lambda single parameter defined type surrounded parentheses
find child given ast type tokentypeexpr ast parent expressions find child given ast
get variables initialized init part loop ast loop token set variables initialized loop
determines variable specific loop change inner loop body ast loop set variable name managed
get variables loop iterating part change every loop ast loop literaltokentypesliteralfor names variables change iterating part
push current variables stack paramdef foreach clause variable
push current variables stack ast definition
pops given number variables currentvariables count count variables popped currentvariables
pops variables stack ast definition
check ident parameter ast ident check
return token type passed tokentype argument found returns 1 ast root node tokentype tokentype processed token desired token found else null
determines ast valid equals method implementation ast ast check true code ast equals method
determines ast formal param type object paramnode ast check true firstchild parameter object type
determines ast valid hashcode method implementation ast ast check true code ast hashcode method
traverse tree field frames check equals method calls frame check method calls in
process classdef methoddef literalif literalfor literalwhile literaldo literalcatch literaltry ctordef enumdef enumconstantdef ast processed ast
whether field variable specified class string type objcalledon field variable specified class check classname name class check in true field variable specified class string type
check whether field declared method call case methods initialization blocks field field check objcalledon object equals method called on true field declared method call
get nearest parent frame classdef enumdef enumconstdef frame start search from nearest parent frame classdef enumdef enumconstdef
add method call current frame processed methodcall methodcall ast
determine whether equals method called field string type objcalledon object ast true object string type
looks safe token combinations argument expression branch expr argument expression true child matches set tokens false
determine whether literalnew anonymous class definition leave frame in ast literalnew ast
determine whether literalnew anonymous class definition add frame case ast literalnew ast
determine whether slist begins block determined braces ast slist ast
determine whether slist begins block determined braces add frame case ast slist ast
check whether method call violated methodcall method call check
add field fieldframe field ast field
determines whether fieldframe contains field name name field check true fieldframe contains instance field field
get field type field get type from type field
verify method call one argument methodcall methodcall detailast true method call one argument
whether field variable instance string type objcalledon field variable instance check true field variable instance string type
whether field variable string type objcalledon field variable check true field variable string type
skips inner assign portion argument expression currentast current token argument expression next relevant token
tests whether methods first parameter object methoddefast method definition ast test precondition ast tokentypesmethoddef node true ast first parameter type object
converts given ast node string representation ast node represented string string representation ast node
check ident parameter ast ident check
creates new parameter set given method ast method process
creates new set parameters store old one stack ast method process
process given modifiers appropriate given state statestaticvariabledef stateinstancevariabledef statectordef statemethoddef updates states appropriate logs violation modifierast modifiers process state current state true modifierast valid given state false otherwise
checks whether identifier references field already defined class fielddef field definition true identifier references field already defined class
checks given modifiers valid substate given state scope updates substate else logs violation modifiersast modifiers process state current state isstatevalid main state given modifiers valid
processes constructor ast constructor ast
collects tokens specific type starting current ast node ast ast node tokentype token type set tokens specific type starting current ast node
processes modifiers ast ast modifiers
gets first ast node inside block variable usage met inside block not declaration block ast node represents block variable variable checked content block variable usage met inside block not declaration return first ast node block otherwise null
gets first ast node inside for dowhile blocks variable usage met inside block not declaration block ast node represents for dowhile block variable variable checked content block variable usage met inside block not declaration return first ast node block otherwise null
checks variable operator declaration instance boolean b true b variable b declaration operator if operator ast node represents operator variable variable checked content operator true operator contains variable declaration otherwise false
returns distance variable usage child node childnode child node varident variable variable identifier currentdisttovarusage current distance variable usage distance variable usage child node
calculates distance declaration variable first usage single scope semicolonast regular node ast checked content checking variable variableidentast variable distance calculated for entry contains expression variable usage distance
processes statements usage variable detect sequence initialization methods variableusageast detailast expression uses variable named variablename variablename name considered variable true statements declaration usage variable initialization methods
checks ast node contains given element parent node ast ast ast element checked content ast node true ast element found ast node otherwise false
calculates distance declaration variable first usage multiple scopes ast regular node ast checked content checking variable variable variable distance calculated for entry contains expression variable usage distance
gets first ast node inside switch block variable usage met inside block not declaration block ast node represents switch block variable variable checked content block variable usage met inside block not declaration return first ast node block otherwise null
checks entrance variable contained ignored pattern variable variable checked content ignored pattern true variable found otherwise false
get name instance whose method called methodcallast detailast methodcall name instance
gets first ast node inside trycatchfinally blocks variable usage met inside block not declaration block ast node represents trycatchfinally block variable variable checked content block variable usage met inside block not declaration return first ast node block otherwise null
searches variable usages starting specified statement variableast variable used statementast detailast start searching from entry contains list found expressions use variable distance specified statement first found expression
finds subnode given node maximum line column pair node root tree search subnode maximum line column pair
checks case group sibling contain default switch casegroupast first case group check true default switch found
collects variable declarations ast variable token frame current frame
returns code block definition token current identifier ident ident token code block definition token current identifier null code block definition found
whether ast definition anonymous class ast ast process true ast definition anonymous class
whether set contains method definition name number parameters set set definitions ident specified method call ident ast true set contains definition name number parameters
checks whether value assigned field value assigned final field constructor block method block value assignment performed non final field ast identifier token true value assigned field
whether set contains declaration text specified ident ast declared proper position set set declarations ident specified ident ast true set contains declaration text specified ident ast declared proper position
ends parsing ast declarations framestack stack containing frametree built ast ast parsed
checks whether given instance member final modifier instancemember instance member class true given instance member final modifier
check whether frame contains given method methodtofind ast method find true method name number parameters found
find frame containing declaration frame parent frame searching in name ident ast declaration find lookformethod whether looking method name abstractframe containing declaration null
collects tokens specific type starting current ast node ast ast node tokentype token type set tokens specific type starting current ast node
checks given ident method call field name requires explicit this qualifier ast ident check
gets name nearest parent classframe name nearest parent classframe
constructor invocable via super subclasses parent parent frame ident frame name ident
checks whether field usage frame inside constructor frame frame frame field used true field usage frame inside constructor frame
collects tokens equal current token starting current ast node line number lower equal end line number ast ast node token token endlinenumber end line number set tokens equal current token starting current ast node line number lower equal end line number
checks whether user arranges this variable method constructor block own currentframe current frame ident ident token true user arranges this variable method constructor block own
checks whether overlapping method constructor argument takes place ast identifier true overlapping method constructor argument takes place
whether declaration located checked ast ast1 ident ast declaration ast2 ident ast check true declaration located checked ast
whether method definition name number parameters ident specified method call ident ast ast ast method definition compare with true method definition name number parameters method call
returns frame field declared given field used without this null otherwise ast field definition ast token parenttype type parent frame field declared given field used without this null otherwise
whether definition correspondent ident ident ident ast check ast ident ast definition check true ast correspondent ident
creates anonymous class frame parent parent frame framename name frame
returns token ends code block blocknameident block name identifier blockstarttoken token starts block token ends code block
find class frame containing declaration name ident ast declaration find lookformethod whether looking method name abstractframe containing declaration null
checks whether current variable returned method currentframe current frame ident variable ident token true current variable returned method
creates new instance classframe parent parent frame ident frame name ident
checks whether field referenced static context ident ident token true field referenced static context
checks token lambda parameter ast detailast value token checked true token lambda parameter
collects tokens specific type starting current ast node line number lower equal end line number ast ast node tokentype token type endlinenumber end line number set tokens specific type starting current ast node line number lower equal end line number
check whether frame contains given name nametofind ident ast name were looking for lookformethod whether looking method name whether found
checks whether overlapping local variable takes place ast identifier true overlapping local variable takes place
returns frame method declared given method used without this null otherwise ast ident ast name check frame method declared given method used without this null otherwise
helper method log localizedmessage ast node get line id column numbers associated message msgkey key locale message format frame class frame violation found
tests whether given ast used assignment while idiom string line line bufferedreaderreadline null process line assignment inside condition problem here assignment surrounded extra pair parentheses comparison null chance intention write line readerreadline ast assignment ast whether context assignment ast indicates idiom
tests whether provided ast one given contexts ast ast start walking towards root contextset contexts test against whether parents nodes ast match one allowed type paths
determines ast body flow control statement without braces example statement would y 0 x y leads following ast structure literalif expr test expr body need ensure ast body test ast assignment operator ast whether ast body flow control statement
checks ast comparison operator ast ast check true iff ast comparison operator
creates new lambda context places old one stack
creates new method context places old one stack ast method definition check
checks number return statements method allowed ast method def associated context
increase number return statements set context return type maxassigned maximum allowed number return statements voidreturn identifies context void
examines return statement tells context it ast return statement check
checks number return statements restore previous context ast node leave
checks overload methods grouped together separated other objectblock class interface enum object block
determines whether given ast field declaration ast ast search enclosing field declaration true ast scope field declaration
determines whether given ast valid hash code method valid hash code method considered method signature public int hashcode ast ast search enclosing hash code method definition true ast scope valid hash code method
decides whether number ast ignore list check ast ast check true number ast ignore list check
reports aast magic number includes unary operators needed ast ast node contains number report
magic number ast tree ast ast token constantdefast constant ast true magic number present
sets numbers ignore check beanutils converts numeric token list double array automatically list list numbers ignore
determines given ast node parent node given token type code ast ast search annotations type type code parent token true ast node parent given token type
sets tokens allowed magic number defined object tokens string representation tokens interested
finds constant definition contains aast ast ast constant def null ast contained constant definition
checks whether two statements line ast token current statement laststatementend linenumber last statement ended forstatementend linenumber last forloop statement ended lambdastatementend linenumber last lambda statement ended true two statements line
checks whether statement multiline ast token current statement true one statement distributed two lines
checks given semicolon different line previous ast semicolon check
checks given subtree terminated return throw or allowed break continue ast root given subtree usebreak consider break terminator usecontinue consider continue terminator true subtree terminated
checks given slist terminated return throw or allowed break continue slistast slist check usebreak consider break terminator usecontinue consider continue terminator true slist terminated
checks given terminated return throw or allowed break continue ast check usebreak consider break terminator usecontinue consider continue terminator true terminated
checks given switch terminated return throw or allowed break continue literalswitchast loop check usecontinue consider continue terminator true switch terminated
regular expression match given line checks possible match within comment pattern regular expression pattern use line line test match on lineno line number file true match found inside comment
checks given loop terminated return throw or allowed break continue ast loop check true loop terminated
determines fall case currentcase nextcase relieved appropriate comment currentcase ast case falls next case nextcase ast next case true relief comment found
checks given trycatchfinally block terminated return throw or allowed break continue ast loop check usebreak consider break terminator usecontinue consider continue terminator true trycatchfinally block terminated
checks given synchronized block terminated return throw or allowed break continue synchronizedast synchronized block check usebreak consider break terminator usecontinue consider continue terminator true synchronized block terminated
decides whether ignore ast node parameter abstract method ast ast check true ast ignored check property ignoreabstractmethods true ast parameter abstract methods
process lambda token checks whether lambda parameter shadows field note parameter lambda expression untyped antlr parses parameter identifier ast lambda token
determine specific method identified methodast single variable name aname setter recognition partially depends msettercanreturnitsclass property amethodast ast corresponding method call aname name single parameter method true false indicating method setter not
set whether ignore parameters abstract methods ignoreabstractmethods decide whether ignore parameters abstract methods
decides whether ignore ast node parameter setter method property setter method field xyz name setxyz one parameter named xyz return type void default behavior return type name class method declared allowed setsettercanreturnitsclassboolean called value true ast ast check name name ast true ast ignored check property ignoresetter true ast parameter setter method
capitalizes given property name way expect see setter name name property name capitalized property name
process variable token check whether local variable parameter shadows field store field later comparison local variables parameters ast variable token
creates new frame parent parent frame statictype static inner type class enum framename name associated frame
check current frame embedded class enum specific name classorenumname name class enum looking chain field frames true current frame embedded class enum name classornamename
determines whether ast node static method static initializer ast node check true ast static method static block
controls setter return void default behavior also return class declared asettercanreturnitsclass true setter return either void class declared false order recognized setter method otherwise already recognized setter must return void later default behavior
determines whether fieldframe contains static field field field check true fieldframe contains static field field
called process tokens tokentypesvariabledef tokentypesparameterdef ast token process type type token
decides whether ignore ast node parameter constructor ast ast check true ast ignored check property ignoreconstructorparameter true ast constructor parameter
checks whether method constructor parameter ignored ast parameter token name parameter name true parameter ignored
set whether ignore constructor parameters ignoreconstructorparameter decide whether ignore constructor parameters
determines whether fieldframe contains instance field field field check true fieldframe contains instance field field
checks whether methods native ast method definition token true methods native
checks whether method javadoc comment methoddef method definition token true method javadoc comment
checks whether class default explicit nonprivate constructor classdef class ast token true class default explicit nonprivate constructor
checks whether method overridden method overridden private abstract final static note check nothing interfaces methoddef method definition token true method overridden subclass
returns classdef enumdef token nearest given ast node searches tree towards root finds classdef enumdef node ast start node searching classdef enumdef token
checks whether token javadoc comment methoddef method definition token tokentype token type true token javadoc comment
checks whether method ignored annotations methoddef method definition token annotations set ignored annotations true method ignored annotations
checks whether method comments body has empty implementation method ok implementation empty ast method definition token true method comments body
checks given class given classdef node subclassed classdef class definition token true containing class subclassed
gets name annotation annotation get name of name annotation
called start processing class definition ast class definition node
checks class name conforms specified format ast class definition node true class name conforms specified format
checks variable definition ast variable def node check
checks extended class name conforms specified format ast class definition node true extended class name conforms specified format
checks type public typedef type definition node true type public access level modifier
check method annotation ast throws checked true method annotation
gets name annotation annotation get name of name annotation
checks number throws statements ast throws check
checks method throws exception private ast throws checked true method throws exception private
returns set modifier strings variabledef classdef ast defast ast variable class definition set modifier strings defast
gets canonical types name given tokentypestype type node type detailast tokentypestype type node canonical types name
checks current variable proper access modifier according checks options variabledef variable definition node variablename variables name true variable proper access modifier
checks whether ast annotated annotation containing passed regular expression return ast representing annotation method look imports package statements detect passed annotation check ast contains passed annotation taking account fullyqualified names ex javalangoverride override method need called twice name given variabledef tokentypesvariabledef variable def node ast representing first annotation null annotation found
returns generic type arguments token type type token iscanonicalname whether type name canonical form generic type arguments token
gets next node syntactical tree child current node sibling current node sibling parent current node currentnodeast current node considering subtreerootast subtree root current node bypassing current node reached root subtree method returns null
checks whether current field final variabledef field consideration true current field final
checks variable def ignore annotation variabledef tokentypesvariabledef variabledef true variable def ignore annotation
gets list short names classes names taken array classes canonical names canonicalclassnames canonical class names list short names classes
checks access modifier given variable proper according check puts violation it variabledef variable check
gets name type given ast tokentypestype type node type specified via canonical name canonical name returned else short types name type tokentypestype type node iscanonicalname given name canonical string representation given types name
checks whether variable belongs public members ignored variablename variables name variablescope variables scope true variable belongs public members ignored
checks current import star import eg import javautil importast tokentypesimport import true star import
returns visibility scope variable variabledef variable definition node one public private protected package
checks whether immutable field defined final class variabledef variable definition node true immutable field defined final class
checks whether variable static final modifiers variabledef variable definition node true variable static final modifiers
gets short class name given canonical name canonicalclassname canonical class name short name class
checks current field immutable final modifier either primitive type instance class known immutable such string immutablecollection guava etc classes known immutable listed visibilitymodifiercheckimmutableclasscanonicalnames variabledef field consideration true field immutable
checks imported type types canonical name specified immutableclasscanonicalnames its short name collides one immutableclassshortnames removes last one importast tokentypesimport import
returns list type parameters class names typeargs type arguments token list type parameters class names
checks whether generic type arguments immutable least one argument mutable assume whole list type arguments mutable typeargsclassnames type arguments class names true generic type arguments immutable
checks whether variable satisfies public field check variabledef variable definition node true allowed
create new classdesc instance qualifiedname qualified class namewith package declaredasfinal indicates class declared final declaredasabstract indicates class declared abstract
get qualified class name given class ast classast class get qualified class name qualified class name class
calculate qualified class namepackage class name laying inside given outer class packagename package name empty string default package outerclassqualifiedname qualified namepackage class outer class null doesnt exist classname class name qualified class namepackage class name
register outer super classes given classast given classast extending them classast class outer super classes informed nesting subclass
get super class name given class classast class super class name null super class specified
checks given super class name extend clause match super class qualified name superclassqualifiedname super class qualified name with package superclassinextendclause name extend clause true given super class name extend clause match super class qualified name false otherwise
returns true given class static false ast class definition check true given class declared static
main method gather statistics
returns true given class abstract false ast class definition check true given class declared abstract
set lines numbers repeat header check list separated list line numbers repeat header
logs warning nonmultiline lines left header regexp startheaderline header line number start headersize whole header size
returns line header line blank return regexp pattern blank line headerlineno header line number return line header
validates header compiling patterncompilestring throws illegalargumentexception header isnt valid pattern header header value validate set in order
checks code line matches required header line linenumber line number check header line line contents true line matches required header line
set lines numbers ignore header check list separated list line numbers ignore header
load header check reader readerlines headerreader delivers header check ioexception
load header file checkstyleexception file cannot loaded
set header file check against uri uri header load checkstyleexception filename empty
set charset use loading header file charset charset use loading header file unsupportedencodingexception charset unsupported
called initializing header illegalargumentexception header already set
return header lines check against header lines check against
set header check against individual lines header must separated n characters header header content check against illegalargumentexception header cannot interpreted
pushes current range value range value stack pushes token expression value expression value stack expressionvalue value expression calculated current token
pops values stack expression values stack range values pair head values stacks
sets end token coordinates start file
visits ternary operator return tokens differ processed visitconditional method expression isnt bracketed ast visited token basicbranchingfactor number branches inherently added token
finds leaf distant root ast root tree leaf
leaves try
checks saved coordinates located given token ast given token true saved coordinates located given token
leaves while do for if ternary return switch
calculates number conditional operators including inline ternary operator token ast inspected token number conditional operators hrefhttpsdocsoraclecomjavasespecsjlsse8htmljls15htmljls1523 java language specification 1523 hrefhttpsdocsoraclecomjavasespecsjlsse8htmljls15htmljls1524 java language specification 1524 hrefhttpsdocsoraclecomjavasespecsjlsse8htmljls15htmljls1525 java language specification 1525
leaves ternary operator return tokens
constructor assigns class fields valueofrange np value range valueofexpression np value expression
leaves else default case group tokens
visits if while dowhile switch tokens expression parentheses used calculation ast visited token basicbranchingfactor default number branches added
counts number case tokens subject case group token ast case group token number case tokens
process end method definition ast token type representing method definition
sets end coordinates given token endtoken token
restores previous context ast expression leave
checks violates maximum allowed complexity ast node check now
creates new instance checking check current context not
creates pushes new context
creates new context given method ast method start check
sets userexcluded regular expression classes ignore array representing regular expressions classes ignore
stores package current class check pkg package definition
visits throws clause collects exceptions throw literalthrows throws process
registers given import allows us track imported classes imp import definition
checks given class shouldnt ignored javalang candidateclassname class check true count class
adds new referenced class referencedclassname class name referenced class
adds new referenced class ast node represents referenced class
visits type ast type process
sets userexcluded classes ignore excludedclasses list classes ignore
checks given class ignored belongs excluded package candidateclassname class check true count class
create new context associated given class parentcontext parent file context classname name given class ast ast class definition
restores previous context
checks coupling less allowed not
checks given class ignored belongs excluded class regexp candidateclassname class check true count class
creates new context given class classdef class definition node
sets userexcluded packages ignore excluded packages end period also appends package name excludedpackages list packages ignore
creates new instance check defaultmax default value allowed complexity
creates new inner class context given name location classname class name ast class ast
visit annotation literal get type referenced classes context annotationast annotation ast
process end method definition ast token representing method definition
push current value stack
hook called visiting token called method definition tokens ast token visited
checks variable definition countable ast ast true variable definition countable false otherwise
checks expression countable ncss metric ast ast true expression countable false otherwise
checks token countable ncss metric ast ast true token countable
checks given class ast protected modifier classdef class ast true class protected false otherwise
checks current ast node member interface annotation subnodes ast ast node true false
process validation methods ast method ast
checks given ast redundant modifier ast ast modifiertype modifier check for
check enum constructor proper modifiers ast constructor enum
retrieves first modifier annotation modifiers ast examine first modifier null none found
checks whether enum proper modifiers ast enum definition
gets list annotations method definition methoddef method definition node list annotations
checks given class accessible public scope ast class def check true class accessible public scopefalse otherwise
process validation parameters methods definition ast method ast
checks method definition annotated with hrefhttpsdocsoraclecomjavase8docsapijavalangsafevarargshtml safevarargs annotation methoddef method definition node true false
validation interface annotation ast token ast
checks interface proper modifiers ast interface check
checks current ast node member enum ast ast node true enum member
check class constructor proper modifiers classctorast class constructor ast
checks whether annotation type takes place modifier modifier token true annotation type takes place
checks modifiers added order suggested java language specification modifiers list modifier ast tokens null order correct otherwise returns offending modifier ast
skip annotations modifier block modifieriterator iterator collection modifiers modifier next last annotation
check field interface ast field ast
check method interface ast method ast
check nested types interface ast nested type ast
checks current default statement singleline statement eg default dosomestuff literaldefault tokentypesliteraldefault default statement true current default statement singleline statement
checks current case statement singleline statement eg case 1 dosomestuff break case 2 dosomestuff break case 3 literalcase tokentypesliteralcase case statement true current case statement singleline statement
checks current dowhile statement singleline statement eg thisnotify o null literaldo tokentypesliteraldo dowhile statement true current dowhile statement singleline statement
checks current statement singleline statement eg objisvalid return true objisvalid return true statement if for while dowhile lambda else case default statements true current statement singleline statement
checks ast annotation field ast ast test true current ast part annotation field
checks current else statement singleline statement eg else dosomestuff literalelse tokentypesliteralelse else statement true current else statement singleline statement
checks current statement singleline statement eg int 0 thisnotify literalfor tokentypesliteralfor statement true current statement singleline statement
checks current statement singleline statement eg objisvalid return true literalif tokentypesliteralif statement true current statement singleline statement
checks current statement singleline statement eg objisvalid return true literalwhile tokentypesliteralwhile statement true current statement singleline statement
checks current lambda statement singleline statement eg runnable r systemoutprintlnhello world lambda tokentypeslambda lambda statement true current lambda statement singleline statement
checks current loop statement body eg valueincrementvalue 5 forint 0 10 valueincrementvalue ast ast token true current loop statement body
collects validation details ast detailast value object containing details make validation
whether right curly alone line alone option used details details validation targetsrcline string contents rcurlys line true right curly alone line alone option used
collects validation details literalif literalelse ast detailast value object containing details make validation
finds next token given one ast given node token represents next lexical item
method determines double brace initialization skipped check double brace initializations treated differently corresponding inner rcurly treated alone line even may followed another rcurly semi raising violations please note though line contain anything following right curly following else violations raised kind double brace initializations shown following example code skipped over map string map new linkedhashmap putalpha man violation details details object containing details relevant rcurly double brace initialization rcurly skipped check
constructor lcurly lcurly token whose details collected rcurly rcurly token whose details collected nexttoken token token whose details collected shouldchecklastrcurly boolean value determine check last rcurly
whether right curly alone line aloneorsingleline option used details details validation targetsrcline string contents rcurlys line true right curly alone line aloneorsingleline option used
checks definition body empty lcurly left curly true definition body empty
general validation details validation violation message empty string violation validation
checks whether block singleline format details validation true block singleline format
checks right curly alone line bracepolicy option placing right curly brace details details validation targetsrcline string contents rcurlys line true right curly alone line
collects validation details classdef method def ctordef staticinit instanceinit ast detailast value object containing details make validation
checks right curly line next statement bracepolicy option placing right curly brace details details validation true right curly alone line
checks right curly line break before rightcurly right curly token true right curly line break before
checks whether right curly line break before bracepolicy option placing right curly brace details details validation true right curly line break before
collects validation details literaltry literalcatch literalfinally ast detailast value object containing details make validation
collects validation details loops tokens ast detailast value object containing details make validation
checks whether right curly alone line details validation targetsrcline string contents rcurlys line true right curly alone line
gets slist first child ast ast detailast detailast first child tokentypesslist null otherwise
checks left curly line break after leftcurly left curly token true left curly line break after
find last token type tokentypesannotation given set modifiers modifiers detailast detailast null annotations
validate token new line position brace brace ast starttoken start token braceline content line brace
validate eol case brace brace ast braceline line content
skip tokentypesannotations first nonannotation ast detailast detailast
verifies specified left curly brace placed correctly according policy brace token left curly brace starttoken token start expression
checks slist token contains text slistast detailast value whether slist token contains text
calculates left curly corresponding block checked ast detailast value left curly corresponding block checked
checks lines array contain whitespaces only lines array lines linefrom check line number lineto check line numbers true lines contain whitespaces
setter comment format commentformat format comment orgapachecommonsbeanutilsconversionexception unable create pattern object
checks catch block empty contains comments catchast tokentypesliteralcatch literalcatch true catch block empty
checks current empty catch block verifiable according checks options exceptions variable name comment format consideration emptycatchast empty catch tokentypesliteralcatch literalcatch block commentcontent text comment true empty catch block verifiable check
gets first line comment catch block comment singleline returns fully else comment multiline returns first line catchast tokentypesliteralcatch literalcatch first line comment catch block comment found
visits catch ast node empty catch block checks according checks options exceptions variable name comment inside block matching specified regexp skips consideration else puts violation catchast tokentypesliteralcatch literalcatch
gets variables name associated exception catchast tokentypesliteralcatch literalcatch variables name associated exception
setter exceptions variable name format exceptionvariablename format exceptions variable name orgapachecommonsbeanutilsconversionexception unable create pattern object
construct file node parent parent node name name file regex flags interpretation name regex pattern
returns whether package class allowed imported algorithm checks current node result none found calls parent looking match recurse looking match clear result accessresultunknown returned inpkg package import infilename file name import forimport import check on accessresult
construct child node parent parent node strategyonmismatch strategy case matching allowdisallow rule found
checks whether rules node control access specified package file inpkg package import infilename file name import forimport import check on accessresult
parses ordering rule adds list rules rulestr string rule
tries find better matching regular expression longer matching substring wins case length lower position matching substring wins importpath full import identifier group import group trying assign import regexp regular expression import group currentbestmatch object currently best match better match if found currentbestmatch
extracts defined amount domains left side packageimport identifier firstpackagedomainscount number first package domains packagefullpath full identifier containing path package imported object string defined amount domains full identifier if full identifier less domain specified
log wrong import group order currentimportline line number current import current import importgroup import group currentgroupnumber current group number checking fullimportident full import name
checks compare two import paths import1 current import import2 previous import negative integer zero positive integer specified string greater than equal to less string ignoring case considerations
constructor initialize fields group matched group length matching length position matching position
initialise importfullpath linenumber importgroup staticimport importfullpath import full path linenumber import line number importgroup import group staticimport import static
forms import full path token current token full path null
examine order imports log violations
checks current group contains import currentgroup current group true current group contains least one import
get import valid group isstatic static import importpath full import path import valid group
creates samepackagedomainsregexp first package domains firstpackagedomainscount number first package domains packagenode package node package regexp
counts empty lines given lineno line number current import count empty lines given
setter specify list order declaration customizing user inputcustomimportorder user value
get next import group currentgroupnumber current group number next import group
constructs instance allow whether allow access localonly whether rule applied locally classname class apply rule on regexp whether class name interpreted regular expression
verifies whether class name used forimport import check result accessresult indicating whether used
set list illegal packages array illegal packages noinspection weakeraccess
set list illegal classes array illegal classes
checks import package class name must used importtext argument import keyword importtext illegal import
checks import package class name must used importtext argument import keyword importtext contains illegal package prefix equals illegal class name
checks import matches one regular expressions illegal packages illegal class names importtext argument import keyword importtext matches one regular expressions illegal packages illegal class names
process javadoc textblock return set classes referenced within textblock javadoc block parse set classes referenced javadoc block
returns list valid tags found javadoc textblock cmt javadoc block parse tagtype type tags were interested list tags
collects references made javadoc comments ast node inspect javadoc
collects details static imports ast node containing static import details
returns list references found javadoc javadoctag tag javadoc tag parse list references found tag
extracts list texts matching pattern string identifier string match pattern pattern pattern used extract texts list texts matched pattern
checks whether import unused imprt import true import unused
given type string contains eg mapentry returns top level type eg map must imported type resolve otherwise returns type asis type possibly qualified type name simple name top level type
collects details imports ast node containing import details
collects references made ident ast ident node process
matches package name exactly partially front pkg package compare with matches
construct root package node packagename name package regex flags interpretation name regex pattern strategyonmismatch strategy case matching allowdisallow rule found
creates pattern expression matches exactly child packages expression selfcontained regular expression matching full package exactly pattern
nonregex case ensure trailing subpackages ie compuppy match compuppycrawl compuppycrawltools pkg package compare with matches
returns regex suitable concatenation 1 either converting plain string regular expression handling special characters 2 enclosing input noncapturing group input already regular expression 1 concatenating nonregex package component like orggoogle regex component like component converted regex too see toregexstring 2 grouping strictly necessary a input regular expression b contains alteration character c pattern already enclosed group see example parentcomorg childcommonuncommon result pattern orgcomcommonuncommon match comcommon comuncommon orgcommon orguncommon without grouping would comorgcommonuncommon would match com orgcommon uncommon clearly undesirable adding group fixes this for simplicity grouping added regular expressions unconditionally input input string alreadyregex signals input already regular expression regex string
construct subpackage node concatenation regular expressions needs special care see ensureselfcontainedregexstring boolean details parent parent package subpackagename name current subpackage regex flags interpretation name regex pattern strategyonmismatch strategy case matching allowdisallow rule found
loads import control file inputsource source source load from uri uri source loaded root pkgimportcontrol object checkstyleexception error occurs
utility safely get attribute exist exception thrown attributes collect get attribute from name name attribute get value attribute saxexception attribute exist
constructs instance parserconfigurationexception error occurs saxexception error occurs
loads import control file file uri uri file load root pkgimportcontrol object checkstyleexception error occurs
utility get strategyonmismatch property subpackage tag attributes collect get attribute from value attribute
constructs instance import rule based given name attributes qname qualified name attributes attributes attached element created import rule saxexception error occurs
utility get strategyonmismatch property importcontrol tag attributes collect get attribute from value attribute
returns true classorstaticmember starred name package member name classorstaticmember full name member exclude current exclusion true member exclusion list
checks class static member exempt known excludes classorstaticmember class static member true except false
set name file containing import control configuration also url resource classpath cause file loaded uri uri file load illegalargumentexception error loading file
returns package text ast packagedef ast node string represents full package name
returns import text ast ast node represents import string represents importing class
compares two strings string1 first string string2 second string casesensitive whether comparison case sensitive value 0 string1 equal string2 value less 0 string1 lexicographically less string2 value greater 0 string1 lexicographically greater string2
shares processing ident import process isstatic whether token static not previous previous nonstatic current static above previous static current nonstatic under line line current import
checks whether import groups separated isstatic whether token static not true imports groups separated
finds group specified import belongs to isstatic whether token static not name import name find group number given import name
compiles list package groups order occur file packagegroups commaseparated list package namesprefixes array compiled patterns
checks whether import name wrong order name import name isstatic whether static import name true import name wrong order
extracts import container name fully qualified import name import container name type encloses static element imported example httpconstants httpheaders httpheadersnames import container names import static httpconstantscolon httpconstants import static httpheadersaddheader httpheaders import static httpheaderssetheader httpheaders import static httpheadersnamesdate httpheadersnames qualifiedimportname fully qualified import name import container name
shares processing isstatic whether token static not previous previous nonstatic current static above previous static current nonstatic under name name current import line line current import
checks whether imports group separated internally groupidx group number isstatic whether token static not line line current import true imports group separated internally
finds group specified import belongs to patterns groups check name import name find group number given import name
compares two import strings first compare container static import container type enclosing static element imported returns 0 compare qualified import name eg considered container names import static httpconstantscolon httpconstants import static httpheadersaddheader httpheaders import static httpheaderssetheader httpheaders import static httpheadersnamesdate httpheadersnames according logic httpheadersnames would come httpheaders details see hrefhttpsbugseclipseorgbugsshowbugcgiid473629c3 static imports comparison method eclipse importname1 first import name importname2 second import name casesensitive whether comparison fully qualified import names case sensitive value 0 str1 equal str2 value less 0 str less str2 container order lexicographical value greater 0 str1 greater str2 container order lexicographically
verifies whether package name used forimport import check result accessresult indicating whether used
constructs instance allow whether allow access localonly whether rule applied locally pkgname package apply rule on exactmatch whether package name must match exactly regexp whether package name interpreted regular expression
returns appropriate accessresult based whether match rule allow access matched indicates whether match appropriate accessresult
constructs instance allow whether allow access localonly whether rule applied locally only regexp whether name interpreted regular expression
determines import statement types specified package importname import name pkg package name whether package
sets list packages classes exempt check excludes contain not excludesparam list package namesfullyqualifies class names star imports ok
gets full import identifier import starred import its excluded violation logged startingdot starting import statement
checks declared class abstract not ast class definition check true given class declared abstract
checks class definition ast class definition check
check member given modifiers modifiers modifiers member check true check member
check variable definition interface interface definition variabledefast variable definition true variable definitionvariabledefast interface interface definition
gets abbreviation beginindex endindex inclusive indexes sequence consecutive uppercase characters character endindex included abbreviation last character string otherwise usually first capital next word example getabbreviationgetxmlparser 3 6 returns xml not xmlp getabbreviationparsexml 5 7 str name beginindex begin index endindex end index specified abbreviation
setter specify list abbreviations must skipped checking abbreviations separated comma allowedabbreviations string abbreviations must skipped checking abbreviation separated comma
get abbreviation illegal beginindex endindex inclusive indexes sequence consecutive uppercase characters str name beginindex begin index endindex end index abbreviation bigger required ignore list otherwise null
gets disallowed abbreviation contained given string str given string disallowed abbreviation contained given string separate string
checks ignore situation ast input detailast node true ignore situation found given input detailast node noinspection simplifiableifstatement
checks method annotation methodmodifiersast detailast nod related given method modifiers modifiers type true method annotation
gets children one level current detailast parent node node current parent node list children one level current parent node
checks variable loops one variabledef variable definition true variable loops one
checks whether method annotated override annotation ast method parameter definition token true method annotated override annotation
returns access modifier methodconstructor specified ast method interface annotation block access modifier assumed public ast token methodconstructor access modifier methodconstructor
setter access modifiers methods parameters checked accessmodifiers access modifiers methods checked
checks see text block contains inheritdoc tag javadoc javadoc ast true contains tag
recursively walks conditional expression checking left right sides checking matches logging violations cond conditional type tokentypesquestion question
retrieves left side conditional cond cond conditional type tokentypesquestion question either value another conditional
find parent holder warnings expr annotation annotation token representing expr
method looks warning matches configured expression found logs violation given ast ast location place violation warningtext warning
retrieves right side conditional cond conditional type tokentypesquestion question either value another conditional
gets suppresswarnings suppresswarnings annotation annotating ast annotation exist method return null ast ast suppresswarnings suppresswarnings annotation
logs trailing array violation one exists ast array init tokentypesannotationarrayinit annotationarrayinit
checks see trailing present required prohibited annotation annotation token
retrieves enum enum type link string string enum type enumclass enum class value string representing enum enum type
checks see elementstyle annotationelementstyle correct annotation annotation token
checks expanded style type violations annotation annotation token
checks compact array style type violations annotation annotation token
checks compact style type violations annotation annotation token
checks see closing parenthesis present required prohibited ast annotation token
look rest comment saw tag name stop see end javadoc literal start next tag anything thats whitespace characters lines lines foundbefore flag parent method currentline current line index som index
checks see text block contains deprecated tag javadoc javadoc ast true contains tag
returns name given annotation annotation annotation node annotation name
finds next node ast tree node current node node next given
checks whether annotation node node line annotation annotation node true annotation node node line
checks annotations positions code 1 checks whether annotations locations correct 2 checks whether annotations valid indentation level modifiernode modifiers node correctindentation correct indentation annotation
checks whether position annotation allowed annotation annotation token allowedpositions array allowed annotation positions true position annotation allowed
checks whether annotation correct location annotation location considered correct annotationlocationcheckallowsamelinemultipleannotations set true method also 1 checks parameterized annotation location considering value annotationlocationcheckallowsamelineparameterizedannotation 2 checks parameterless annotation location considering value annotationlocationcheckallowsamelinesingleparameterlessannotation 3 checks annotation location considering elements annotationlocationchecksinglelineannotationparents annotation annotation node hasparams whether annotation parameters true annotation correct location
checks whether annotation node node line annotation annotation node true annotation node node line
returns name given annotation annotation annotation node annotation name
checks whether scope node restricted specific code block node node blocktype block type true scope node restricted specific code block
verifies type definition required tag lineno line number type definition comment javadoc comment type definition
sets tag check tag tag check
log message line line number error found tagname javadoc tag logged tagvalue contents tag javatextmessageformat
tests first sentence contains forbidden summary fragment firstsentence string first sentence true first sentence contains forbidden summary fragment
checks node starts root root node examine true javadoc starts
finds returns first sentence ast javadoc root node first sentence
concatenates string within text html tags result javadoc string detailnode javadoc tag node java doc tag content appended result
checks period end sentence ast javadoc root node error string
creates new instance
decides whether variable name ast ignore list ast ast check true variable name ast ignore list
whether check node ast given node whether check given node
gets standalone tags given javadoc textblock javadoc comment process standalone tags given javadoc
verifies type definition specified param tag specified type parameter name lineno line number type definition tags tags javadoc comment type definition typeparamname name type parameter
verifies type definition required tag lineno line number type definition tags tags javadoc comment type definition tagname required tag name formatpattern regexp tag value
checks unused param tags type parameters tags tags javadoc comment type definition typeparamnames names type parameters
extracts type parameter name tag tag javadoc tag extract parameter name extracts type parameter name tag
whether check node ast given node whether check given node
processes javadocast tree notifying check root root javadocast tree
validates checks required javadoc tokens subset default javadoc tokens illegalstateexception validation default javadoc tokens fails
defined final javadocchecks require comment nodes true
defined final allow javadocchecks change default tokens default tokens
configurable javadoc token set used protect checks malicious users specify unacceptable javadoc token set configuration file default implementation returns checks default javadoc tokens javadoc token set check designed for javadoctokentypes
processes node calling check interested nodes root root tree process
adds set tokens check interested in strrep string representation tokens interested
whether check node ast given node whether check given node
determines given token extra html tag indicates close tag found corresponding open tag token html tag id close found htmlstack stack previous open html tags false previous open tag found token
finds index first nonwhitespace character ignoring javadoc comment start end strings well leading asterisk line javadoc comment line text scan int index relative 0 start text 1 found
performs various checks javadoc comment ast ast element documented comment source lines make javadoc comment checkfirstsentenceendingdetailast textblock checkhtmltagsdetailast textblock
returns comment text javadoc comments lines javadoc comment text string
checks first sentence ends proper punctuation method uses regular expression checks presence period question mark exclamation mark followed either whitespace html element end string method ignores atinheritdoc comments tokentypes valid atinheritdoc ast current node comment source lines make javadoc comment
checks javadoc empty comment source lines make javadoc comment
determines htmltag one require close tag tag htmltag check true htmltag single tag
trims trailing whitespace end javadoc comment string builder stringbuilder trim
checks see unclosed tags stack token represents html tag closed corresponding open tag stack tags except single tags opened pushed stack token missing close htmlstack stack opened html tags token current html tag name closed
creates instance tags list valid tags invalidtags list invalid tags
checks given position start one html tag javadoctext text javadoc comments pos position check true html tag starts given position
skips html comments text text javadoc comments frompoint start position htmlcomments position htmlcomments
creates new point instance lineno line number columnno column number
returns position next comment character skips whitespaces asterisks text search location search location next character
finds next occurrence given character text text search character character search position start search position next occurrence given character
parses text line html tags adds internal list tags text source line parse lineno source line number
parses tag return position it text source line parse lineno source line number nlines line length position start position parsing position tag
parse tag id javadoctext text javadoc comments tagstart start position tag id given tag
checks given class name loaded name name class check whether specified class loadable safeload
tries resolve class fullyspecified name name given name class class object given name null
see inner class class name name search class search currentclass class search class found null resolved classnotfoundexception error occurs
try star imports name name class search class found null resolved
try find class search package name class name class object
creates new classresolver instance loader classloader load classes with pkg name package class may belong imports set imports check class belongs
try find class matching explicit import name class name class object
setter specify order tags orders users orders
setter specify list targets check atclauses targets users targets
returns type parent node commentblock child node parent type
checks order atclauses tag section node javadoc javadoc root node
associates class object clazz class associate with
creates class info given name name name type surroundingclass name surrounding class class info given name
collects details package ast node containing package details
checks one class subclass another child class class child parent class class parent true achild subclass aparent false otherwise
converts fullident token fullident full ident convert
exception unchecked subclass runtimeexception error exception class exception check true exception unchecked false exception checked
creates new instance class information object name fullident associated new object surroundingclass name current surrounding class check check use load class
process type params if any given class enum method ast class enum method process
creates token text tokens text lineno tokens line number columnno tokens column number
processes class definition ast class definition process
returns current trees classresolver classresolver current tree
looking given name alias name given name classinfo alias exists null otherwise noinspection weakeraccess
creates new instance class name token represents name class alias classinfo class information associated alias
collects details imports ast node containing import details
common implementation logloaderror method lineno line number problem columnno column number problem msgkey message key use values values fill message out
creates new instance class information object classname token represents class name
finds collects newline nodes inside description node descriptionnode description node list newline nodes
checks description node description inline tag description description node true description node description inline tag
creates instance line line tag col column tag name name invalid tag
checks comment inline tags ignored javadocroot javadoc root node true comment inline tags ignored href httpsdocsoraclecomjavase7docstechnotestoolswindowsjavadochtmljavadoctags javadoctags
checks comment javadoc tags ignored also works custom tags block tags interpreted beginning line first instance checked javadocroot javadoc root node true comment javadoc tags ignored href httpsdocsoraclecomjavase7docstechnotestoolswindowsjavadochtmlblockandinlinetags block inline tags
checks comment single line comment blockcommentstart ast tree block comment starts true comment single line comment
sets various properties javadoc tag text tag text name tag name type type tag
returns javadoctag tag name name string name tag returns javadoctag type string representing tag nullpointerexception text null illegalargumentexception text valid tag name checked using javadoctaginfoisvalidnamestring
returns javadoctag tag text text string representing tag text returns javadoctag type string representing tag nullpointerexception text null illegalargumentexception text valid tag
tests atclause tag empty tagnode atclause tag true atclause tag empty
constructs object line line number tag column column number tag tag tag string firstarg tag argument
checks tag throws exception tag whether tag throws exception tag
checks tag contain references imported classes whether tag contain references imported classes
validates whether javadoc short circuit tag currently inherittag errors logged ast construct checked tags list javadoc tags associated construct true construct short circuit tag
returns true required type found type parameters typeparams list type parameters requiredtypename name required type true required type found type parameters
verifies documented exception throws throwslist list throws documentedclassinfo documented exception class info foundthrows previously found throws true documented exception throws
computes parameter nodes method ast method node list parameter nodes ast
checks set tags matching parameters tags tags check parent node takes parameters reportexpectedtags whether report find expected tag
calculates column number using javadoc tag matcher javadoctagmatcher found javadoc tag matcher linenumber line number javadoc tag comment startcolumnnumber column number javadoc comment beginning column number
checks set tags matching throws tags tags check throwslist throws check reportexpectedtags whether report find expected tag
checks javadoc method ast token method comment javadoc comment
computes exception nodes method ast method node list exception nodes ast
whether check node ast given node nodescope scope node whether check given node
returns scope methodconstructor specified ast method interface annotation block scope assumed public ast token methodconstructor scope methodconstructor
gets multiline javadoc tags arguments noargmultilinestart javadoc tag matcher lines comment text lines lineindex line number contains javadoc tag tagline javadoc tag line number file javadoc tags arguments
checks one return tag return tags removed supplied list tags tags check lineno line number expected tag reportexpectedtags whether report find expected tag
javadoc methoddef javadoc javadoc
returns tags javadoc comment finds throws exception param return see tags comment javadoc comment tags found
checks javadoc missing method constructor minimum line count special annotation ast tree node method constructor true method constructor doesnt need javadoc
checks given method name matches regex case skip enforcement javadoc method methoddef tokentypesmethoddef methoddef true given method name matches regex
checks missing javadoc allowed checks configuration ast tree node method constructor true method constructor doesnt need javadoc
remove parameter params collection name params collection detailast parameters paramname name parameter true parameter found removed
gets multiline javadoc tags arguments argmultilinestart javadoc tag matcher column column number javadoc tag lines comment text lines lineindex line number contains javadoc tag tagline javadoc tag line number file javadoc tags arguments
determines whether line paragraph tag previous empty line tag html tag
determines whether line empty line newline newline node true line empty line
determines whether next line empty line paragraph tag beginning newline newline node
returns nearest node node detailnode node nearest node
tests whether paragraph tag immediately followed text tag html tag true paragraph tag immediately followed text
finds returns nearest empty line javadoc node detailnode node nearest empty line javadoc
determines whether line paragraph tag first line javadoc paragraphtag paragraph tag true line paragraph tag first line javadoc
returns comment line text tag appears text tag
construct htmltag id html tag name lineno source line number tag position position within text tag closedtag tag selfclosed xhtml style incomplete tag incomplete text line comment text tag
extract block tags javadoc comment lines text comment separate lines tags extracted block
constructor name name tag value value tag position position tag comment
get linecolumn string till index source source string index index string position source representing line column index appears on
remove leading javadoc source string remove leading javadoc from given string leading javadoc characters line removed
extract inline javadoc tags given comment lines javadoc comment as lines extracted inline javadoc tags
convert array string single string lines number lines order lines joined together newlines single string
collapse whitespaces str source string given string whitespace collapsed
returns new detectoroptions instance detectoroptions instance
specifies minimum allowed number detections returns builder object val minimum allowed number detections builder object noinspection returnofinnerclass
specifies maximum allowed number detections returns builder object val maximum allowed number detections builder object noinspection returnofinnerclass
specifies suppressor use returns builder object val suppressor use current instance noinspection returnofinnerclass
specifies violation reporter returns builder object val reporting violations builder object noinspection returnofinnerclass
specifies whether ignore case matching returns builder object val whether ignore case matching builder object noinspection returnofinnerclass booleanparameter
specifies message use reporting match returns builder object val message use reporting match builder object noinspection returnofinnerclass
specifies compile flags compile regular expression returns builder object val format use matching lines builder object noinspection returnofinnerclass
specifies format use matching lines returns builder object val format use matching lines builder object noinspection returnofinnerclass
pattern use matching pattern use matching
processes set lines looking matches filetext filetext object contains lines process
check line matches lineno line number line check line line check matcher matcher use startposition position start searching from
perform processing end set lines
recursive method finds matches
detect ignore situation startline position line text file text start line column true need ignored
check stop validation ignore flag true continue
setter message property message custom message used report
displays right message linenumber line number message relates to
sets maximum number instances required pattern allowed duplicatelimit negative values mean duplicate checking positive value used limit
perform processing end set lines
method finds matches
processes entire text file looking matches filetext text process
retrieves file name given file file input file examine file name
checks given filename matches specified filenamepattern filename input file name examine true match
retrieves folder path given file file input file examine folder path checkstyleexception error getting canonical path file
retrieves string form pattern defaultstring null pattern pattern convert defaultstring result use pattern null string form pattern
checks given folderpath matches specified folderpattern folderpath input folder path examine true match
logs errors check
intercept given method invocation submit actual calling method correct task executor return immediately caller invocation method intercept make asynchronous future original method returns future null otherwise
implementation searches unique orgspringframeworkcoretasktaskexecutor bean context executor bean named taskexecutor otherwise neither two resolvable eg beanfactory configured all implementation falls back newly created simpleasynctaskexecutor instance local use default could found defaulttaskexecutorbeanname
implementation noop compatibility spring 312 subclasses may override provide support extracting qualifier information eg via annotation given method always null 312 determineasyncexecutormethod
find bean name given invocation assumes exposebeannameadvisor included interceptor chain mi methodinvocation contain bean name attribute bean name never null illegalstateexception bean name exposed
create string name given methodinvocation used tracelogging purposes name made configured prefix followed fullyqualified name method invoked followed configured suffix setprefix setsuffix
writes log message invocation based value entermessage invocation succeeds log message written exit based value exitmessage exception occurs invocation message written based value exceptionmessage setentermessage setexitmessage setexceptionmessage
set template used method entry log messages template contain following placeholders targetclassname targetclassshortname argumenttypes arguments
adds string representation method return value supplied stringbuffer correctly handles null void results methodinvocation methodinvocation returned value matcher matcher containing matched placeholder output stringbuffer write output returnvalue value returned method invocation
replace placeholders given message supplied values values derived supplied message message template containing placeholders replaced methodinvocation methodinvocation logged used derive values placeholders except exception returnvalue returnvalue value returned invocation used replace returnvalue placeholder may null throwable throwable raised invocation value throwabletostring replaced exception placeholder may null invocationtime value write place invocationtime placeholder formatted output write log
set template used method exit log messages template contain following placeholders targetclassname targetclassshortname argumenttypes arguments returnvalue invocationtime
adds commaseparated list short class names method argument types output example method signature putjavalangstring javalangobject value returned string object methodinvocation methodinvocation logged arguments retrieved corresponding method matcher matcher containing state output output stringbuffer containing output
set template used method exception log messages template contain following placeholders targetclassname targetclassshortname argumenttypes arguments exception
checks see supplied string placeholders specified constants class throws illegalargumentexception so
configure aspect given executor exception handler suppliers applying corresponding default supplier resolvable 51
create new asyncexecutionaspectsupport given exception handler defaultexecutor executor typically spring asynctaskexecutor javautilconcurrentexecutorservice delegate to unless specific executor requested via qualifier async method case executor looked invocation time enclosing bean factory exceptionhandler asyncuncaughtexceptionhandler use
set beanfactory used looking executors qualifier relying default executor lookup algorithm findqualifiedexecutorbeanfactory string getdefaultexecutorbeanfactory
retrieve build default executor advice instance executor returned cached use the default implementation searches unique taskexecutor bean context executor bean named taskexecutor otherwise neither two resolvable implementation return null beanfactory beanfactory use default executor lookup default executor null none available 426 findqualifiedexecutorbeanfactory string defaulttaskexecutorbeanname
delegate actually executing given task chosen executor task task execute executor chosen executor returntype declared return type potentially future variant execution result potentially corresponding future handle
retrieve target executor given qualifier qualifier qualifier resolve target executor null none available 426 getexecutorqualifiermethod
determine specific executor use executing given method preferably return asynclistenabletaskexecutor implementation executor use or null default executor available
handles fatal error thrown asynchronously invoking specified method if return type method future object original exception propagated throwing higher level however cases exception transmitted back client later case current asyncuncaughtexceptionhandler used manage exception ex exception handle method method invoked params parameters used invoke method
create new instance default asyncuncaughtexceptionhandler defaultexecutor executor typically spring asynctaskexecutor javautilconcurrentexecutorservice delegate to unless specific executor requested via qualifier async method case executor looked invocation time enclosing bean factory
count thrown exception put stack trace details portion key allow stack trace viewed jamon web application
wraps invocation jamon monitor writes current performance statistics log if enabled comjamonapimonitorfactorystart comjamonapimonitorstop
create new jamonperformancemonitorinterceptor dynamic static logger according given flag usedynamiclogger whether use dynamic logger static logger trackallinvocations whether track invocations go interceptor invocations trace logging enabled setusedynamiclogger
always applies interceptor trackallinvocations flag set else kicks log enabled settrackallinvocations islogenabled
return description given method invocation invocation invocation describe description
determines whether logging enabled particular methodinvocation not method invocation proceeds normal otherwise method invocation passed invokeundertrace method handling invokeundertraceorgaopallianceinterceptmethodinvocation orgapachecommonslogginglog
write supplied trace message throwable supplied log instance to called invokeundertrace enterexit outcomes potentially including exception note exceptions stack trace wont get logged setlogexceptionstacktrace false by default messages written trace level subclasses override method control level message written at typically also overriding islogenabled accordingly 4310 setlogexceptionstacktrace islogenabled
return appropriate log instance use given methodinvocation usedynamiclogger flag set log instance target class methodinvocation otherwise log default static logger invocation methodinvocation traced log instance use setusedynamiclogger
set whether use dynamic logger static logger default static logger trace interceptor used determine log instance used write log messages particular method invocation dynamic one class getting called static one class trace interceptor note specify either property loggername both getloggerforinvocationorgaopallianceinterceptmethodinvocation
return aop alliance methodinvocation object associated current invocation invocation object associated current invocation illegalstateexception aop invocation progress exposeinvocationinterceptor added interceptor chain
create new aspectentry id id aspect element ref bean name referenced aspect element
parses supplied element registers resulting orgspringframeworkaopadvisor resulting orgspringframeworkaoppointcut supplied beandefinitionregistry
return true supplied node describes advice type may one of before after afterreturning afterthrowing around
parses one before after afterreturning afterthrowing around registers resulting beandefinition supplied beandefinitionregistry generated advice rootbeandefinition
gets advice implementation class corresponding supplied element
creates beandefinition aspectjexpressionpointcut class using supplied pointcut expression
parses pointcut pointcutref attributes supplied element add pointcut property appropriate generates orgspringframeworkbeansfactoryconfigbeandefinition pointcut necessary returns bean name otherwise returns bean name referred pointcut
parses supplied registers resulting pointcut beandefinitionregistry
create rootbeandefinition advisor described supplied not parse associated pointcut pointcutref attributes
creates rootbeandefinition pojo advice bean also causes pointcut parsing occur pointcut may associate advice bean pointcut also configured pointcut enclosing advisor definition using supplied mutablepropertyvalues
parse declareparents element register appropriate declareparentsadvisor beandefinitionregistry encapsulated supplied parsercontext
register beandefinitionparser beandefinitionparsers config springconfigured aspectjautoproxy scopedproxy tags
look aspect bean beanfactory returns it setaspectbeanname
override add preconditions dynamic matching implementation always returns true
create composablepointcut given classfilter methodmatcher classfilter classfilter use methodmatcher methodmatcher use
create default composablepointcut classfiltertrue methodmatchertrue
apply intersection given methodmatcher methodmatcher apply intersection composable pointcut for call chaining
apply union given pointcut note pointcut union methods match original classfilter from originating pointcut matches well methodmatchers classfilters different pointcuts never get interleaved other pointcut apply union composable pointcut for call chaining
create composablepointcut based given pointcut pointcut original pointcut
apply union given classfilter classfilter apply union composable pointcut for call chaining
apply intersection given pointcut pointcut apply intersection composable pointcut for call chaining
create composablepointcut given methodmatcher classfiltertrue methodmatcher methodmatcher use
create composablepointcut given classfilter methodmatchertrue classfilter classfilter use
apply intersection given classfilter classfilter apply intersection composable pointcut for call chaining
apply union given methodmatcher methodmatcher apply union composable pointcut for call chaining
create new staticmethodmatcherpointcutadvisor given advice advice advice use
invoke given target via reflection part aop method invocation target target object method method invoke args arguments method invocation result throwable thrown target method orgspringframeworkaopaopinvocationexception case reflection error
given pointcut apply given class this important test used optimize pointcut class pc static dynamic pointcut check targetclass class test hasintroductions whether advisor chain bean includes introductions whether pointcut apply method
check whether given object jdk dynamic proxy cglib proxy this method additionally checks given object instance springproxy object object check isjdkdynamicproxy iscglibproxy
given advisor apply given class this important test used optimize advisor class version also takes account introductions for introductionawaremethodmatchers advisor advisor check targetclass class were testing hasintroductions whether advisor chain bean includes introductions whether pointcut apply method
determine target class given bean instance might aop proxy returns target class aop proxy plain class otherwise candidate instance check might aop proxy target class or plain class given object fallback never null orgspringframeworkaoptargetclassawaregettargetclass orgspringframeworkaopframeworkaopproxyutilsultimatetargetclassobject
given method may come interface target class used current aop invocation find corresponding target method one eg method may ifoobar target class may defaultfoo case method may defaultfoobar enables attributes method found note contrast orgspringframeworkutilclassutilsgetmostspecificmethod method resolves java 5 bridge methods order retrieve attributes original method definition method method invoked may come interface targetclass target class current invocation may null may even implement method specific target method original method targetclass doesnt implement null orgspringframeworkutilclassutilsgetmostspecificmethod
determine whether given method finalize method javalangobjectfinalize
determine sublist candidateadvisors list applicable given class candidateadvisors advisors evaluate clazz target class sublist advisors apply object given class may incoming list asis
select invocable method target type either given method actually exposed target type otherwise corresponding method one target types interfaces target type itself method method check targettype target type search methods typically aop proxy corresponding invocable method target type illegalstateexception given method invocable given target type typically due proxy mismatch 43 methodintrospectorselectinvocablemethodmethod class
add another eligible method name addition already named like set methods method use configuring proxies proxy used nb method work proxy use advice chains cached name name additional method match pointcut allow multiple additions one line
perform least expensive check pointcut match pointcut pointcut match method candidate method targetclass target class args arguments method whether theres runtime match
return name advice bean advisor refers to any
specify particular instance target advice directly avoiding lazy resolution getadvice 31
create defaultintroductionadvisor given advice advice advice apply intf interface introduce
add specified interface list interfaces introduce intf interface introduce
create defaultintroductionadvisor given advice advice advice apply introductioninfo introductioninfo describes interface introduce may null
method implemented restore logger dont make logger static would mean subclasses would use classs log category
check whether specified interfaces published introduction interface ifc interface check whether interface part introduction
method introduced interface mi method invocation whether invoked method introduced interface
constructors use init method impossible pass this reference one constructor another delegate delegate object
subclasses may need override want perform custom behaviour around advice however subclasses invoke method handles introduced interfaces forwarding target
proceed supplied orgaopallianceinterceptmethodinterceptor subclasses override method intercept method invocations target object useful introduction needs monitor object introduced into method never called methodinvocation methodinvocations introduced interfaces
returns true exclusion pattern index patternindex matches supplied candidate string
compiles supplied string array pattern objects returns array
returns true pattern index patternindex matches supplied candidate string
initialize pattern patterns supplied string
initialize exclusion pattern patterns supplied string
set regular expressions defining methods match matching union these match pointcut matches setpattern
match specified candidate configured patterns signaturestring javalangobjecthashcode style signature whether candidate matches least one specified patterns
set regular expressions defining methods match exclusion matching union these match pointcut matches setexcludedpattern
try match regular expression fully qualified name target class well methods declaring class plus name method
subclasses override its possible filter candidate classes
subclasses override greater filtering and performance
construct new pointcut matches calls given method given class method name given matches control flows given class clazz clazz methodname name method may null
subclasses may need override want perform custom behaviour around advice however subclasses invoke method handles introduced interfaces forwarding target
proceed supplied orgaopallianceinterceptmethodinterceptor subclasses override method intercept method invocations target object useful introduction needs monitor object introduced into method never called methodinvocation methodinvocations introduced interfaces
create defaultpointcutadvisor specifying pointcut advice pointcut pointcut targeting advice advice advice run pointcut matches
match methods both given methodmatchers match mm1 first methodmatcher mm2 second methodmatcher distinct methodmatcher matches methods given methodmatchers match
match methods either or both given methodmatchers matches mm1 first methodmatcher cf1 corresponding classfilter first methodmatcher mm2 second methodmatcher cf2 corresponding classfilter second methodmatcher distinct methodmatcher matches methods either given methodmatchers matches
apply given methodmatcher given method supporting orgspringframeworkaopintroductionawaremethodmatcher if applicable mm methodmatcher apply may introductionawaremethodmatcher method candidate method targetclass target class hasintroductions true object whose behalf asking subject one introductions false otherwise whether method matches statically
match methods either or both given methodmatchers matches mm1 first methodmatcher mm2 second methodmatcher distinct methodmatcher matches methods either given methodmatchers matches
initialize singleton pointcut held within advisor
create regexpmethodpointcutadvisor given advice pattern pattern use advice advice use
create regexpmethodpointcutadvisor given advice patterns patterns use advice advice use
match classes both given classfilters match cf1 first classfilter cf2 second classfilter distinct classfilter matches classes given classfilter match
match classes either or all given classfilters matches classfilters classfilters match distinct classfilter matches classes either given classfilter matches
match classes either or both given classfilters matches cf1 first classfilter cf2 second classfilter distinct classfilter matches classes either given classfilter matches
match classes all given classfilters match classfilters classfilters match distinct classfilter matches classes given classfilter match
return location information pointcut expression available useful debugging location information humanreadable string null none available
return pointcuts expression
create new annotationmatchingpointcut given annotation type classannotationtype annotation type look class level checkinherited whether also check superclasses interfaces well metaannotations annotation type annotationclassfilterannotationclassfilterclass boolean
create new annotationmatchingpointcut given annotation type classannotationtype annotation type look class level can null methodannotationtype annotation type look method level can null
create new annotationmatchingpointcut given annotation type classannotationtype annotation type look class level can null methodannotationtype annotation type look method level can null checkinherited whether also check superclasses interfaces well metaannotations annotation type 50 annotationclassfilterannotationclassfilterclass boolean annotationmethodmatcherannotationmethodmatcherclass boolean
factory method annotationmatchingpointcut matches specified annotation class level annotationtype annotation type look class level corresponding annotationmatchingpointcut
factory method annotationmatchingpointcut matches specified annotation method level annotationtype annotation type look method level corresponding annotationmatchingpointcut
create new annotationclassfilter given annotation type annotationtype annotation type look checkinherited whether also check superclasses interfaces well metaannotations annotation type ie whether use annotatedelementutilshasannotation semantics instead standard java methodisannotationpresent 50
create new annotationclassfilter given annotation type annotationtype annotation type look checkinherited whether also check superclasses interfaces well metaannotations annotation type ie whether use annotatedelementutilshasannotation semantics instead standard java classisannotationpresent
type pattern specified xml user cannot write and though work also allow and two subexpressions this method converts back aspectj pointcut parser
pointcut apply given interface target class clazz candidate target class whether advice apply candidate target class illegalstateexception settypepatternstring set
set aspectj type pattern match examples include classcode orgspringframeworkbeans match class interface given package classcode orgspringframeworkbeansitestbean match itestbean interface class implements it these conventions established aspectj spring aop typepattern type pattern aspectj weaver parse
create new singletonaspectinstancefactory given aspect instance aspectinstance singleton aspect instance
determine order factorys aspect instance either instancespecific order expressed implementing orgspringframeworkcoreordered interface fallback order orgspringframeworkcoreordered getorderforaspectclass
returns spring aop proxy cannot null
create new methodinvocationproceedingjoinpoint wrapping given spring proxymethodinvocation object methodinvocation spring proxymethodinvocation object
returns spring aop target may null target
private constructor share common code implbased delegate referencebased delegate cannot use method init share common code due use final fields interfacetype static field defining introduction typepattern type pattern introduction restricted interceptor delegation advice introductioninterceptor
create new advisor declareparents field interfacetype static field defining introduction typepattern type pattern introduction restricted defaultimpl default implementation class
deduce parameter names advice method see aspectjadviceparameternamediscoverer class level javadoc class details algorithm used method target method parameter names
match given list extracted variable names argument slots
advice method never constructor spring null unsupportedoperationexception setraiseexceptionsboolean raiseexceptions set true
parse string pointcut expression looking this target args expressions find one try extract candidate variable name bind it
returning variable specified one choice remaining bind it
first parameter type joinpoint proceedingjoinpointbind thisjoinpoint parameter name return true else return false
parse string pointcut expression looking for this target args within withincode annotation find one pointcut expressions try extract candidate variable name or variable names case args some support aspectj exercise would nice
match args unbound arguments primitive types
given args pointcut body could args atargs add candidate variable names given list
throwing name specified exactly one choice remaining argument subtype throwable bind it
create new simpleaspectinstancefactory given aspect class aspectclass aspect class
determine order factorys aspect instance either instancespecific order expressed implementing orgspringframeworkcoreordered interface fallback order orgspringframeworkcoreordered getorderforaspectclass
following aspectj semantics returning clause specified advice invoked returned value instance given returning type generic type parameters any match assignment rules returning type object advice always invoked returnvalue return value target method whether invoke advice method given return value
following aspectj semantics return value null or return type void return type target method used determine whether advice invoked not also even return type void type argument declared advice method object advice must still get invoked type type argument declared advice method method advice method returnvalue return value target method whether invoke advice method given return value type
create new aspectjpointcutadvisor given advice advice abstractaspectjadvice wrap
return aspectjprecedenceinformation provided advisor advice neither advisor advice precedence information method return null
return true advisor form advice
return true advisor form advice
parameters argumentindexoffset onwards candidates pointcut parameters returning throwing vars handled differently must removed list present
take arguments method execution join point output set arguments advice method jp current joinpoint jpmatch join point match matched execution join point returnvalue return value method execution may null ex exception thrown method execution may null empty array arguments
create parameternamediscoverer used argument binding the default implementation creates defaultparameternamediscoverer adds specifically configured aspectjadviceparameternamediscoverer
build safe pointcut excludes aspectj advice method itself composable pointcut builds original aspectj expression pointcut getpointcut
set creator advice object argument names known this could example explicitly specified xml advice annotation argnames delimited list arg names
invoke advice method jpmatch joinpointmatch matched execution join point returnvalue return value method execution may null ex exception thrown method execution may null invocation result throwable case invocation failure
get current join point match join point dispatched on
need hold throwing name level argument binding calculations method allows afterthrowing advice subclass set name
return classloader aspect instances
create new abstractaspectjadvice given advice method aspectjadvicemethod aspectjstyle advice method pointcut aspectj expression pointcut aspectinstancefactory factory aspect instances
lazily instantiate joinpoint current invocation requires methodinvocation bound exposeinvocationinterceptor do use access available current reflectivemethodinvocation in around advice current aspectj joinpoint exception were spring aop invocation
much work part setup argument binding subsequent advice invocations fast possible if first argument type joinpoint proceedingjoinpoint pass joinpoint position proceedingjoinpoint around advice if first argument type joinpointstaticpart pass joinpointstaticpart position remaining arguments bound pointcut evaluation given join point get back map argument name value need calculate advice parameter needs bound argument name multiple strategies determining binding arranged chainofresponsibility
return aspectj expression pointcut
need hold returning name level argument binding calculations method allows afterreturning advice subclass set name
test uses this target atthis attarget atannotation vars tests subtype sensitive vars
add special advisors necessary work proxy chain contains aspectj advisors expose current spring aop invocation necessary aspectj pointcut matching make available current aspectj joinpoint call effect aspectj advisors advisor chain advisors advisors available true special advisor advisors added otherwise false
determine whether given advisor contains aspectj advice advisor advisor check
initialize underlying aspectj pointcut parser
create new aspectjexpressionpointcut given settings declarationscope declaration scope pointcut paramnames parameter names pointcut paramtypes parameter types pointcut
determine classloader use pointcut evaluation
pointcut expression specified xml user cannot write and though work also allow and two pointcut subexpressions this method converts back aspectj pointcut parser
get new pointcut expression based target classs loader rather default
build underlying aspectj pointcut expression
check whether pointcut ready match lazily building underlying aspectj pointcut expression
create aspectjprecedencecomparator using given comparator comparing orgspringframeworkaopadvisor instances advisorcomparator comparator use advisors
adds exposeinvocationinterceptor beginning advice chain additional advices needed using aspectj expression pointcuts using aspectjstyle advice
sort rest aspectj precedence two pieces advice come aspect order advice aspect ordered according following rules if either pair advice advice declared last gets highest precedence runs last otherwise advice declared first gets highest precedence runs first important advisors sorted precedence order highest precedence lowest on way in join point highest precedence advisor run first on way out join point highest precedence advisor run last
create new simplemetadataawareaspectinstancefactory given aspect class aspectclass aspect class aspectname aspect name
check whether given aspect bean eligible autoproxying if aopinclude elements used includepatterns null beans included includepatterns nonnull one patterns must match
set list regex patterns matching eligible aspectj bean names default consider aspectj beans eligible
interest spring aop aspectj instantiation semantics much richer aspectj terminology return true means aspect singleton
pointcut spring aop use actual behaviour pointcut change depending state advice
lazily instantiate advice necessary
duplicates logic getadvice importantly force creation advice
build orgspringframeworkaopaspectjdeclareparentsadvisor given introduction field resulting advisors need evaluated targets introductionfield field introspect advisor instance null advisor
create aspectmetadata instance supplied aspect type
create new aspectjproxyfactory will proxy interfaces given target implements target target object proxied
create new proxy according settings factory can called repeatedly effect vary weve added removed interfaces add remove interceptors uses default class loader usually thread context class loader if necessary proxy creation new proxy
get singleton aspect instance supplied aspect type instance created one cannot found instance cache
add advisor advisors supplied metadataawareaspectinstancefactory current chain exposes special purpose advisor advisors needed aspectjproxyutilsmakeadvisorchainaspectjcapableifnecessarylist
create new proxy according settings factory can called repeatedly effect vary weve added removed interfaces add remove interceptors uses given class loader if necessary proxy creation classloader class loader create proxy new proxy
add aspect supplied type end advice chain aspectclass aspectj aspect class
add supplied aspect instance chain type aspect instance supplied must singleton aspect true singleton lifecycle honoured using method caller responsible managing lifecycle aspects added way aspectinstance aspectj aspect instance
create metadataawareaspectinstancefactory supplied aspect type aspect type per clause singletonmetadataawareaspectinstancefactory returned otherwise prototypeaspectinstancefactory returned
create new notanataspectexception given class nonaspectclass offending class
create beanfactoryaspectinstancefactory providing type aspectj introspect create ajtype metadata use beanfactory may consider type subclass as using cglib information relate superclass beanfactory beanfactory obtain instances name name bean type type introspected aspectj null indicates resolution beanfactorygettype via bean name
determine order factorys target aspect either instancespecific order expressed implementing orgspringframeworkcoreordered interface only checked singleton beans order expressed orgspringframeworkcoreannotationorder annotation class level orgspringframeworkcoreordered orgspringframeworkcoreannotationorder
create new singletonmetadataawareaspectinstancefactory given aspect aspectinstance singleton aspect instance aspectname name aspect
look aspectjannotated aspect beans current bean factory return list spring aop advisors representing them creates spring advisor aspectj advice method list orgspringframeworkaopadvisor beans iseligiblebean
create new beanfactoryaspectjadvisorsbuilder given beanfactory beanfactory listablebeanfactory scan advisorfactory aspectjadvisorfactory build advisor
find return first aspectj annotation given method there should one anyway
consider something aspectj aspect suitable use spring aop system aspect annotation compiled ajc reason latter test aspects written codestyle aspectj language also annotation present compiled ajc 15 flag yet cannot consumed spring aop
need detect codestyle aspectj aspects interpreted spring aop
create new lazily initializing decorator given aspectinstancefactory maaif metadataawareaspectinstancefactory decorate
create new aspectmetadata instance given aspect class aspectclass aspect class aspectname name aspect
extract contents string form pertargetcontents
return whether aspect defined pertypewithin
return whether aspect defined perthis pertarget
create prototypeaspectinstancefactory aspectj called introspect create ajtype metadata using type returned given bean name beanfactory beanfactory beanfactory obtain instances name name bean
copy configuration abstractbeanfactorybasedtargetsource object subclasses override wish expose it object copy configuration
set owning beanfactory need save reference use getbean method every invocation
create new hotswappabletargetsource given initial target object initialtarget initial target object
return type current target object the returned type usually constant across target objects
swap target returning old target object newtarget new target object old target object illegalargumentexception new target invalid
two hotswappabletargetsources equal current target objects equal
return introduction advisor mixin allows aop proxy cast threadlocalinvokerstats
implementation abstract gettarget method look target held threadlocal dont find one create one bind thread synchronization required
dispose targets necessary clear threadlocal destroyprototypeinstance
subclasses call method destroy obsolete prototype instance target bean instance destroy
replaces object singletontargetsource serialization protected otherwise wont invoked subclasses the writereplace method must visible class serialized with implementation method need mark nonserializable fields class subclasses transient
subclasses call method create new prototype instance beansexception bean creation failed
create new singletontargetsource given target target target object
singletontargetsource uses hash code target object
two invoker interceptors equal target targets targets equal
always returns specified target class null none
always returns true
always returns null
create new instance emptytargetsource class this constructor private enforce singleton pattern factory method pattern targetclass target class expose may null isstatic whether targetsource marked static
return introductionadvisor providing mixin exposing statistics pool maintained object
return maximum size pool
default implementation returns null target null it hasnt yet initialized target class target already initialized subclasses may wish override method order provide meaningful value target still null isinitialized
returns lazyinitialized target object creating onthefly doesnt exist already createobject
returns specified object underlying objectpool
subclasses override want return specific commons pool apply configuration properties pool here default genericobjectpool instance given pool size empty commons objectpool genericobjectpool setmaxsize
creates holds objectpool instance createobjectpool
closes underlying objectpool destroying object
borrows object objectpool
obtain new prototype instance every call newprototypeinstance
destroy given independent instance destroyprototypeinstance
static
create new beanfactoryrefreshabletargetsource given bean factory bean name note passedin beanfactory appropriate bean definition set given bean name beanfactory beanfactory fetch beans beanname name target bean
retrieve fresh target object
customize aopproxyfactory allowing different strategies dropped without changing core framework default defaultaopproxyfactory using dynamic jdk proxies cglib proxies based requirements
remove given advisedsupportlistener proxy configuration listener listener deregister
activate proxy configuration advisedsupportlisteneractivated
add given advisedsupportlistener proxy configuration listener listener register
propagate advice change event advisedsupportlisteners advisedsupportlisteneradvicechanged
subclasses call get new aop proxy not create aop proxy this argument
create new proxycreatorsupport instance aopproxyfactory aopproxyfactory use
create advisor interceptor chain advisors sourced beanfactory refreshed time new prototype instance added interceptors added programmatically factory api unaffected changes
invoked advice chain created add given advice advisor object interceptor list three possibilities cant type signature strongly next advice advisor target object name bean name obtained object owning bean factory
add global interceptors pointcuts
look bean factory metadata work whether bean name concludes interceptornames list advisor advice may target beanname bean name check true its advisor advice
check interceptornames list whether contains target name final element found remove final name list set targetname
blow away recache singleton advice change
convert following object sourced calling getbean name interceptornames array advisor targetsource
return independent advisor chain need every time new prototype instance returned return distinct instances prototype advisors advices
return proxy invoked clients obtain beans factory bean create instance aop proxy returned factory instance cached singleton create call getobject proxy fresh aop proxy reflecting current state factory
return type proxy check singleton instance already created else fall back proxy interface in case single one target bean type targetsources target class orgspringframeworkaoptargetsourcegettargetclass
return singleton instance classs proxy object lazily creating hasnt created already shared singleton proxy
set classloader generate proxy class in default bean classloader ie classloader used containing beanfactory loading bean classes overridden specific proxies
return targetsource use creating proxy target specified end interceptornames list targetsource classs targetsource member otherwise get target bean wrap targetsource necessary
create new prototype instance classs created proxy object backed independent advisedsupport configuration totally independent proxy whose advice may manipulate isolation
equality means interfaces advisors targetsource equal the compared object may jdkdynamicaopproxy instance dynamic proxy wrapping jdkdynamicaopproxy instance
proxy uses hash code targetsource
finds equals hashcode method may defined supplied set interfaces proxiedinterfaces interfaces introspect
construct new jdkdynamicaopproxy given aop configuration config aop configuration advisedsupport object aopconfigexception config invalid try throw informative exception case rather let mysterious failure happen later
implementation invocationhandlerinvoke callers see exactly exception thrown target unless hook method throws exception
process return value wraps return this necessary proxy also verifies null returned primitive
create new cglibaopproxy given aop configuration config aop configuration advisedsupport object aopconfigexception config invalid try throw informative exception case rather let mysterious failure happen later
set constructor arguments use creating proxy constructorargs constructor argument values constructorargtypes constructor argument types
implementation callbackfilteraccept return index callback need the callbacks proxy built set fixed callbacks general use set callbacks specific method use static targets fixed advice chain the callback used determined thus for exposed proxies exposing proxy requires code execute methodchain invocation means must use dynamicadvisedinterceptor since interceptors avoid need trycatch block for objectfinalize no override method used for equals the equalsinterceptor used redirect equals calls special handler proxy for methods advised class the adviseddispatcher used dispatch call directly target for advised methods if target static advice chain frozen fixedchainstatictargetinterceptor specific method used invoke advice chain otherwise dynamicadvisedinterceptor used for nonadvised methods where determined method return this proxyfactorygetexposeproxy returns false dispatcher used static targets staticdispatcher used dynamic targets dynamicunadvisedinterceptor used possible method return this staticunadvisedinterceptor used static targets dynamicunadvisedinterceptor already considers this
cglib uses drive proxy creation
gives marginal performance improvement versus using reflection invoke target invoking public methods
check whether given method declared given interfaces
checks see whether supplied class already validated validates not
checks final methods given class well packagevisible methods across classloaders writes warnings log one found
determine targetsource given target or targetsource target target implementation targetsource used targetsource otherwise wrapped singletontargetsource targetsource object
create new proxyfactory given interface interceptor convenience method creating proxy single interceptor assuming interceptor handles calls rather delegating target like case remoting proxies proxyinterface interface proxy implement interceptor interceptor proxy invoke
create new proxyfactory will proxy interfaces given target implements target target object proxied
create proxyfactory specified targetsource making proxy implement specified interface proxyinterface interface proxy implement targetsource targetsource proxy invoke
create proxy specified targetsource implementing specified interface proxyinterface interface proxy implement targetsource targetsource proxy invoke proxy object proxyfactoryclass orgspringframeworkaoptargetsource
create new proxy given interface interceptor convenience method creating proxy single interceptor assuming interceptor handles calls rather delegating target like case remoting proxies proxyinterface interface proxy implement interceptor interceptor proxy invoke proxy object proxyfactoryclass orgaopallianceinterceptinterceptor
create proxy specified targetsource extends target class targetsource targetsource targetsource proxy invoke proxy object
make given proxy available via currentproxy method note caller careful keep old value appropriate proxy proxy expose or null reset it old proxy may null none bound currentproxy
try return current aop proxy method usable calling method invoked via aop aop framework set expose proxies otherwise method throw illegalstateexception current aop proxy never returns null illegalstateexception proxy cannot found method invoked outside aop invocation context aop framework configured expose proxy
set advisor chain factory use default defaultadvisorchainfactory
copy aop configuration given advisedsupport object allow substitution fresh targetsource given interceptor chain advisedsupport object take proxy configuration targetsource new targetsource advisors advisors chain
debuggingdiagnostic use
given advice included advisor within proxy configuration advice advice check inclusion whether advice instance included
count advices given class adviceclass advice class check count interceptors class subclasses
add given advisors proxy configuration advisors advisors register
cannot add introductions way unless advice implements introductioninfo
create advisedsupport instance given parameters interfaces proxied interfaces
determine list orgaopallianceinterceptmethodinterceptor objects given method based configuration method proxied method targetclass target class list methodinterceptors may also include interceptoranddynamicmethodmatchers
add new proxied interface intf additional interface proxy
set interfaces proxied
build configurationonly copy advisedsupport replacing targetsource
determine whether supplied advisedsupport orgspringframeworkaopspringproxy interface specified or proxy interfaces specified all
copy configuration config object object copy configuration
prepare proxyfactory given bean subclasses may customize handling target instance particular exposure target class default introspection interfaces nontargetclass proxies configured advisor applied afterwards customizeproxyfactory allows late customizations parts right proxy creation bean bean instance create proxy beanname corresponding bean name proxyfactory initialized processors proxyconfig settings specified bean 423 customizeproxyfactory
check whether given class eligible advising postprocessors advisor implements caching canapply results per bean target class targetclass class check aoputilscanapplyadvisor class
check interfaces given bean class apply proxyfactory appropriate calls isconfigurationcallbackinterface isinternallanguageinterface filter reasonable proxy interfaces falling back targetclass proxy otherwise beanclass class bean proxyfactory proxyfactory bean
determine whether given interface wellknown internal language interface therefore considered reasonable proxy interface if reasonable proxy interface found given bean get proxied full target class assuming users intention ifc interface check whether given interface internal language interface
set classloader generate proxy class in default bean classloader ie classloader used containing orgspringframeworkbeansfactorybeanfactory loading bean classes overridden specific proxies
determine whether given interface container callback therefore considered reasonable proxy interface if reasonable proxy interface found given bean get proxied full target class assuming users intention ifc interface check whether given interface container callback
return configured proxy classloader processor
determine ultimate target class given bean instance traversing toplevel proxy number nested proxies well long possible without side effects is singleton targets candidate instance check might aop proxy ultimate target class or plain class given object fallback never null orgspringframeworkaoptargetclassawaregettargetclass advisedgettargetsource
extract userspecified interfaces given proxy implements ie nonadvised interfaces proxy implements proxy proxy analyze usually jdk dynamic proxy userspecified interfaces proxy implements original order never null empty advised
adapt given arguments target signature given method necessary particular given vararg argument array match array type declared vararg parameter method method target method arguments given arguments cloned argument array original adaptation needed 423
obtain singleton target object behind given proxy any candidate potential proxy check singleton target object managed singletontargetsource null case not proxy existing singleton target 438 advisedgettargetsource singletontargetsourcegettarget
determine complete set interfaces proxy given aop configuration this always add advised interface unless advisedsupports advisedsupportsetopaque opaque flag on always adds orgspringframeworkaopspringproxy marker interface advised proxy config decoratingproxy whether expose decoratingproxy interface complete set interfaces proxy 43 springproxy advised decoratingproxy
check equality proxies behind given advisedsupport objects equality advisedsupport objects rather equality interfaces advisors target sources
determine whether advisors contain matching introductions
implementation returns shallow copy invocation object including independent copy original arguments array we want shallow copy case want use interceptor chain object references want independent value current interceptor index javalangobjectclone
construct new reflectivemethodinvocation given arguments proxy proxy object invocation made target target object invoke method method invoke arguments arguments invoke method targetclass target class methodmatcher invocations interceptorsanddynamicmethodmatchers interceptors applied along interceptoranddynamicmethodmatchers need evaluation runtime methodmatchers included struct must already found matched far possibly statically passing array might 10 faster would complicate code would work static pointcuts
invoke joinpoint using reflection subclasses override use custom invocation return value joinpoint throwable invoking joinpoint resulted exception
return user attributes associated invocation method provides invocationbound alternative threadlocal this map initialized lazily used aop framework itself user attributes associated invocation never null
implementation returns shallow copy invocation object using given arguments array clone we want shallow copy case want use interceptor chain object references want independent value current interceptor index javalangobjectclone
return method invoked proxied interface may may correspond method invoked underlying implementation interface
set names beans automatically get wrapped proxies name specify prefix match ending eg mybeantx match bean named mybean beans whose name start tx note case factorybean objects created factorybean get proxied default behavior applies spring 20 intend proxy factorybean instance a rare use case spring 12s default behavior specify bean name factorybean including factorybean prefix eg orgspringframeworkbeansfactoryfactorybean orgspringframeworkbeansfactorybeanfactoryfactorybeanprefix
identify bean proxy bean name configured list names
create new beanfactoryadvisorretrievalhelper given beanfactory beanfactory listablebeanfactory scan
find eligible advisor beans current bean factory ignoring factorybeans excluding beans currently creation list orgspringframeworkaopadvisor beans iseligiblebean
create target source bean instances uses targetsourcecreators set returns null custom targetsource used this implementation uses customtargetsourcecreators property subclasses override method use different mechanism beanclass class bean create targetsource beanname name bean targetsource bean setcustomtargetsourcecreators
resolves specified interceptor names advisor objects setinterceptornames
build cache key given bean class bean name note 423 implementation return concatenated classname string anymore rather efficient cache key possible plain bean name prepended beanfactoryfactorybeanprefix case factorybean bean name specified given bean class asis beanclass bean class beanname bean name cache key given class name
return whether given bean class represents infrastructure class never proxied the default implementation considers advices advisors aopinfrastructurebeans infrastructure classes beanclass class bean whether bean represents infrastructure class orgaopallianceaopadvice orgspringframeworkaopadvisor orgspringframeworkaopframeworkaopinfrastructurebean shouldskip
wrap given bean necessary ie eligible proxied bean raw bean instance beanname name bean cachekey cache key metadata access proxy wrapping bean raw bean instance asis
set whether proxy frozen preventing advice added created overridden super class prevent proxy configuration frozen proxy created
return owning beanfactory may null postprocessor doesnt need belong bean factory
determine whether given bean proxied target class rather interfaces checks autoproxyutilspreservetargetclassattribute preservetargetclass attribute corresponding bean definition beanclass class bean beanname name bean whether given bean proxied target class autoproxyutilsshouldproxytargetclass
create proxy configured interceptors bean identified one proxy subclass getadvicesandadvisorsforbean
create aop proxy given bean beanclass class bean beanname name bean specificinterceptors set interceptors specific bean may empty null targetsource targetsource proxy already preconfigured access bean aop proxy bean buildadvisors
determine advisors given bean including specific interceptors well common interceptor adapted advisor interface beanname name bean specificinterceptors set interceptors specific bean may empty null list advisors given bean
find candidate advisors use autoproxying list candidate advisors
autoproxy creator always returns prefiltered advisors
find eligible advisors autoproxying class beanclass clazz find advisors beanname name currently proxied bean empty list null pointcuts interceptors findcandidateadvisors sortadvisors extendadvisors
sort advisors based ordering subclasses may choose override method customize sorting strategy advisors source list advisors sorted list advisors orgspringframeworkcoreordered orgspringframeworkcoreannotationorder orgspringframeworkcoreannotationannotationawareordercomparator
search given candidate advisors find advisors apply specified bean candidateadvisors candidate advisors beanclass targets bean class beanname targets bean name list applicable advisors proxycreationcontextgetcurrentproxiedbeanname
return name currently proxied bean instance name bean null none available
set name currently proxied bean instance beanname name bean null reset
consider advisor beans specified prefix eligible activated setuseprefix setadvisorbeannameprefix
return prefix bean names cause included autoproxying object
determine original target class specified bean possible otherwise falling back regular gettype lookup beanfactory containing configurablelistablebeanfactory beanname name bean original target class stored bean definition 423 orgspringframeworkbeansfactorybeanfactorygettypestring
determine whether given bean name indicates original instance according autowirecapablebeanfactoryoriginalinstancesuffix skipping proxy attempts it beanname name bean beanclass corresponding bean class 51 autowirecapablebeanfactoryoriginalinstancesuffix
determine whether given bean proxied target class rather interfaces checks preservetargetclassattribute preservetargetclass attribute corresponding bean definition beanfactory containing configurablelistablebeanfactory beanname name bean whether given bean proxied target class
expose given target class specified bean possible beanfactory containing configurablelistablebeanfactory beanname name bean targetclass corresponding target class 423
build internal beanfactory resolving target beans containingfactory containing beanfactory originally defines beans independent internal beanfactory hold copies target beans
return internal beanfactory used specified bean beanname name target bean internal beanfactory used
destroys internal beanfactory shutdown targetsourcecreator getinternalbeanfactoryforbean
determine exception handle method given exception exception exception thrown handler given exception type null none found
create new throwsadviceinterceptor given throwsadvice throwsadvice advice object defines exception handler methods usually orgspringframeworkaopthrowsadvice implementation
create new defaultadvisoradapterregistry registering wellknown adapters
create new unknownadvicetypeexception given advice object create message text says object neither subinterface advice advisor advice advice object unknown type
create new methodbeforeadviceinterceptor given advice advice methodbeforeadvice wrap
create new afterreturningadviceinterceptor given advice advice afterreturningadvice wrap
generate scoped proxy supplied target bean registering target bean internal name setting targetbeanname scoped proxy definition original bean definition registry bean definition registry proxytargetclass whether create target class proxy scoped proxy definition
set name bean scoped
creates new instance defaultscopedobject class beanfactory configurablebeanfactory holds scoped target object targetbeanname name target bean
check see view name modelandview matches given expectedname mav modelandview test never null expectedname name model value
compare individual entry list sorted lists optionally using comparator mav modelandview test never null modelname name object add model never null expectedlist expected list comparator comparator use may null specifying comparator lists sorted using comparator
compare individual entry list without first sorting lists mav modelandview test never null modelname name object add model never null expectedlist expected list
checks whether model value given modelname exists checks type based expectedtype model entry exists type matches model value returned mav modelandview test never null modelname name object add model never null expectedtype expected type model value model value
compare given expectedvalue value model bound given modelname mav modelandview test never null modelname name object add model never null expectedvalue model value
assert whether model attribute available mav modelandview test never null modelname name object add model never null
inspect expectedmodel see elements model appear equal mav modelandview test never null expectedmodel expected model
constructor httphandler handle requests with
match primary value response header regex name header name pattern regex pattern
assert primary value response header matcher name header name consumer matcher sue 51
assert primary value response header matcher name header name matcher matcher sue 51
expect header given name present 503
expect contenttype header compatible given value
expect header given name present
match response status value hamcrest matcher consumer matcher use 51
match response status value hamcrest matcher matcher matcher use 51
assert response error message
assert response status integer
assert response status code httpstatuscreated 201
assert response status code 5xx range
applies jsonpathexpectationshelperhasjsonpath 503
applies jsonpathexpectationshelperassertvalueisarraystring
applies jsonpathexpectationshelperassertvalueisnotemptystring
consume result jsonpath evaluation provide target class 51
delegates jsonpathexpectationshelperassertvaluestring matcher class 51
applies jsonpathexpectationshelperassertvalueisemptystring
applies jsonpathexpectationshelperdoesnotexiststring
applies jsonpathexpectationshelperassertvalueismapstring
applies jsonpathexpectationshelperexistsstring
applies jsonpathexpectationshelperassertvaluestring object
applies jsonpathexpectationshelperassertvalueisnumberstring
applies jsonpathexpectationshelperassertvalueisbooleanstring
delegates jsonpathexpectationshelperassertvaluestring matcher 51
consume result jsonpath evaluation 51
applies jsonpathexpectationshelperdoesnothavejsonpath 503
copy constructor
consume count nodes result xpath evaluation 51
consume result xpath evaluation double 51
consume result xpath evaluation string 51
return entity extracted response body
return raw request body content written request note request content consumed reason yet use method trigger consumption illegalstateexception request body fully written
copy constructor use body decoded andor consumed
execute given runnable catch assertionerror decorate assertionerror containing diagnostic information request response rethrow
return raw request body content written response note response content consumed yet use method trigger consumption illegalstateexception response fully read
create instance http request response along promises serialized request response body content request http request response http response requestbody capture serialized request body content responsebody capture serialized response body content timeout long wait content materialize uritemplate uri template used set request
return original uri template used prepare request any
retrieve info given requestid header value
exactly n times
private constructor see static factory methods class
least min number times
max number times
return builder mockrestserviceserver used reply given asyncresttemplate 43 see deprecation notice orgspringframeworkwebclientasyncresttemplate
return builder mockrestserviceserver used reply given restgatewaysupport 43
shortcut bindtoasyncresttemplatebuild asyncresttemplate asyncresttemplate set mock testing created mock server see deprecation notice orgspringframeworkwebclientasyncresttemplate
invoke expectation matched the count given expectation incremented either stored remainingcount 0 removed otherwise
return details executed requests
return matching expectation null none match
subclasses must implement actual validation request matching declared expectations 503 subclasses implement matchrequestclienthttprequest instead return matched expectation leaving call create response separate step to invoked class
503 subclasses implement method instead validaterequestinternalclienthttprequest order match request expectation leaving call create response separate step to invoked class request current request matched expectation request count updated via requestexpectationincrementandvalidate 503
add expectations group 503 favor addallexpectations
return assertionerror subclass raise unexpected request
create new request expectation called number times indicated requestcount expectedcount expected request expectedcount
note 503 creation response may block intentionally separated request count tracking method longer increments count transparently instead incrementandvalidate must invoked independently
copy given headers
set body byte array
set contenttype header
protected constructor use static factory methods mockrestresponsecreators
set location header
set body resource
set body utf8 string
responsecreator 200 response ok content resourcebased body body response body contenttype type content may null
responsecreator 200 response ok byte body body response body contenttype type content may null
responsecreator 200 response ok string body body response body utf8 string contenttype type content may null
parse request body given string xml assert two similar ie contain elements attributes regardless order use matcher assumes hrefhttpxmlunitsourceforgenetxmlunit library available expectedxmlcontent expected xml content
class constructor direct instantiation use mockrestrequestmatcherscontent
parse request content node apply given matcher
assert request content type compatible given content type defined mediatypeiscompatiblewithmediatype
assert request content type mediatype
parse body form data compare given multivaluemap 43
compare body request given byte array
get body request utf8 string compare given string
parse request body given string json assert two similar ie contain attributevalue pairs regardless formatting can compare two modes depending strict parameter value true strict checking extensible strict array ordering false lenient checking extensible nonstrict array ordering use matcher requires hrefhttpjsonassertskyscreamerorgjsonassert library expectedjsoncontent expected json content strict enables strict checking 505
get body request utf8 string apply given matcher
parse request content domsource apply given matcher hrefhttpcodegooglecompxmlmatchershttpcodegooglecompxmlmatchers
evaluate json path expression request content assert resulting value given hamcrest matcher
evaluate json path expression request content assert result string 421
evaluate json path expression response content assert value possibly null exists if json path expression plain jsonpathisdefinite definite method asserts list values given path empty 503 exists isnotempty
evaluate json path expression request content assert result javautilmap 421
evaluate json path expression request content assert nonempty value exists given path for semantics empty consult javadoc orgspringframeworkutilobjectutilsisemptyobject 421 isempty exists doesnotexist
evaluate json path expression request content assert value exist given path if json path expression plain jsonpathisdefinite definite method asserts value given path empty
evaluate json path expression request content assert result array
evaluate json path expression request content assert empty value exists given path for semantics empty consult javadoc orgspringframeworkutilobjectutilsisemptyobject 421 isnotempty exists doesnotexist
evaluate json path expression request content assert nonnull value exists given path if json path expression plain jsonpathisdefinite definite method asserts value given path empty
evaluate json path expression request content assert result number 421
evaluate json path expression request content assert result equal supplied value
evaluate json path expression supplied content assert value including null values exist given path if json path expression plain jsonpathisdefinite definite method asserts list values given path empty 503 doesnotexist isempty
evaluate json path expression request content assert result boolean 421
overloaded variant valuematcher also accepts target type resulting value matcher work reliably against this useful matching numbers reliably example coerce integer double 433
assert request uri matches given string expecteduri expected uri request matcher
assert request header values
assert request query parameter values given hamcrest matchers
assert request uri string given hamcrest matcher matcher string matcher expected uri request matcher
access response body matchers using xpath inspect specific subset body xpath expression parameterized string using formatting specifiers defined stringformatstring object expression xpath optionally parameterized arguments namespaces namespaces referenced xpath expression args arguments parameterize xpath expression
assert httpmethod request method http method request matcher
variant requesttouri prepares uri uri template plus optional variables via uricomponentsbuilder including encoding expecteduri expected uri template urivars zero uri variables populate expected uri request matcher
assert request header values given hamcrest matchers
assert request query parameter values
expect request given uri uri expected uri request matcher
class constructor direct instantiation use mockrestrequestmatchersxpathstring object mockrestrequestmatchersxpathstring map object expression xpath expression namespaces xml namespaces referenced xpath expression null args arguments parameterize xpath expression using formatting specifiers defined stringformatstring object xpathexpressionexception expression compilation failed
assert content exists given xpath
apply xpath assert number found given matcher
apply xpath assert number nodes found
apply xpath assert boolean value found
apply xpath assert number nodes found given matcher
apply xpath assert number nodes found
assert content exist given xpath
apply xpath assert given matcher
apply xpath assert string content found
apply xpath assert string content found given matcher
private constructor direct instantiation orgspringframeworktestwebservletsetupmockmvcbuilders
general actions apply every performed request orgspringframeworktestwebservletsetupdefaultmockmvcbuilderalwaysdoresulthandler
expectations assert every performed request orgspringframeworktestwebservletsetupdefaultmockmvcbuilderalwaysexpectresultmatcher
perform request return type allows chaining actions asserting expectations result requestbuilder used prepare request execute see static factory methods orgspringframeworktestwebservletrequestmockmvcrequestbuilders instance resultactions never null orgspringframeworktestwebservletrequestmockmvcrequestbuilders orgspringframeworktestwebservletresultmockmvcresultmatchers
create new instance given request response
true latch count reached 0 within specified timeout
static method matching array result matchers matchers matchers 51
specify timeout value async execution spring mvc test value used determine long wait async execution complete test verify results synchronously timeout timeout value milliseconds
set semicolon content stripped request uri value provided turn set abstracthandlermappingsetremovesemicoloncontentboolean
add interceptors mapped incoming requests
register one orgspringframeworkwebbindannotationcontrolleradvice instances used tests specified class turned instance normally controlleradvice autodetected long theyre declared spring beans however since standalone setup load spring config need registered explicitly instead much like controllers 42
whether use suffix pattern match matching patterns requests enabled method mapped users also matches users the default value true
provide custom resolvers controller method arguments
provide custom validator instead one created default default implementation used assuming jsr303 classpath orgspringframeworkvalidationbeanvalidationlocalvalidatorfactorybean
set view resolution given viewresolver viewresolvers set internalresourceviewresolver used default
set handlerexceptionresolver types use list
set contentnegotiationmanager
provide localeresolver instance provided default one used acceptheaderlocaleresolver
standalone setup support placeholder values embedded request mappings method allows manually provided placeholder values resolved alternatively consider creating test initializes webapplicationcontext 428
provide custom handlers controller method return values
whether match urls irrespective presence trailing slash enabled method mapped users also matches users the default value true
provide conversion service custom formatters converters set defaultformattingconversionservice used default
add interceptors mapped set path patterns
set message converters use argument resolvers return value handlers support reading andor writing body request response message converters added list default list converters added instead
set handlerexceptionresolver types use array
sets single viewresolver always returns provided view instance convenient shortcut need use one view instance eg rendering generated content json xml atom
provide custom flashmapmanager instance provided sessionflashmapmanager used default
configure factory create custom requestmappinghandlermapping factory factory 50
build orgspringframeworktestwebservletmockmvc instance
protected constructor intended direct instantiation mockmvcbuilderswebappcontextsetupwebapplicationcontext
invoked mockmvc instance created mockmvc builder spring webapplicationcontext passed dispatcherservlet builder builder mockmvc context spring configuration post processor applied every request performed mockmvc instance
creates new instance
returns instance initialize applicationcontextaware beans
create new instance specified context path the path may null case first path segment url turned contextpath otherwise must conform javaxservlethttphttpservletrequestgetcontextpath states empty string otherwise must start character end character mockmvc mockmvc instance use never null webclient webclient use never null contextpath contextpath use
validate supplied contextpath if value null must conform javaxservlethttphttpservletrequestgetcontextpath states empty string otherwise must start character end character contextpath path validate
create new webconnection use mockmvc instance one specified webrequestmatcher instances matches webclient webclient use none specified webrequestmatcher instances matches never null new webconnection use mockmvc instance one specified webrequestmatcher matches 43 alwaysusemockmvc usemockmvcwebrequestmatcher usemockmvcforhostsstring
add additional webrequestmatcher instances ensure mockmvc used process request matcher matches web request matchers additional webrequestmatcher instances builder customization
create new instance using supplied mockmvc instance mockmvc mockmvc instance use never null
set context path use if supplied value null empty first path segment request url assumed context path default contextpath context path use builder customization
specify mockmvc always used regardless request looks like builder customization
add additional webrequestmatcher instances return true supplied host matches example examplecom examplecom8080 hosts additional hosts ensure mockmvc gets invoked builder customization
construct new htmlunitrequestbuilder sessions map session plain httpsessiongetid ids currently managed httpsession objects never null webclient webclient retrieving cookies webrequest webrequest transform mockhttpservletrequest never null
set contextpath used the value may null case first path segment url turned contextpath otherwise must conform httpservletrequestgetcontextpath states empty string must start end contextpath valid contextpath illegalargumentexception contextpath valid httpservletrequestgetcontextpath
supply webclient client plain build built builder delegate processing nonplain webrequestmatcher matching requests webclient webclient delegate requests match never null builder customization build
create new mockmvcwebclientbuilder based supplied webapplicationcontext context webapplicationcontext create mockmvc instance from never null mockmvcwebclientbuilder customize
create new mockmvcwebclientbuilder based supplied mockmvc instance mockmvc mockmvc instance use never null mockmvcwebclientbuilder customize
create new mockmvcwebclientbuilder based supplied webapplicationcontext mockmvcconfigurer context webapplicationcontext create mockmvc instance from never null configurer mockmvcconfigurer apply never null mockmvcwebclientbuilder customize
specify whether javascript enabled default true javascriptenabled true javascript enabled builder customizations build
create new mockmvchtmlunitdriverbuilder based supplied webapplicationcontext context webapplicationcontext create mockmvc instance never null mockmvchtmlunitdriverbuilder customize
create new mockmvchtmlunitdriverbuilder based supplied mockmvc instance mockmvc mockmvc instance use never null mockmvchtmlunitdriverbuilder customize
build htmlunitdriver configured via builder the returned driver use configured mockmvc instance processing plain webrequestmatcher matching requests delegate htmlunitdriver requests if plain withdelegate delegate explicitly configured used otherwise default webconnectionhtmlunitdriver browserversion set browserversionchrome chrome configured delegate htmlunitdriver use withdelegatewebconnectionhtmlunitdriver
create new mockmvchtmlunitdriverbuilder based supplied webapplicationcontext mockmvcconfigurer context webapplicationcontext create mockmvc instance never null configurer mockmvcconfigurer apply never null mockmvchtmlunitdriverbuilder customize
supply webconnectionhtmlunitdriver driver plain build built builder delegate processing nonplain webrequestmatcher matching requests driver webconnectionhtmlunitdriver delegate requests match never null builder customizations build
set webconnection used webclient webconnection webconnection use
modify supplied webclient retain reference webconnection plain getwebconnection accessible later use delegates htmlunitdrivermodifywebclient default behavior modifywebclientinternal customization webclient client modify modified client htmlunitdrivermodifywebclientwebclient modifywebclientinternalwebclient
return current webclient 43
add part components request parts one parts add 50
create new mockmultipartfile given content name name file content content file
add given mockmultipartfile file multipart file
packageprivate constructor use static factory methods mockmvcrequestbuilders for ways initialize mockmultiparthttpservletrequest see withrequestpostprocessor requestpostprocessor extension point urltemplate url template resulting url encoded urivariables zero uri variables
create new mockmultiparthttpservletrequest based supplied servletcontext mockmultipartfiles added builder
packageprivate constructor use static factory methods mockmvcrequestbuilders for ways initialize mockmultiparthttpservletrequest see withrequestpostprocessor requestpostprocessor extension point uri url 403
set request body utf8 string content body content
set http session use possibly reused across requests individual attributes provided via sessionattrstring object override content session provided here session http session
extension point initialization mockhttpservletrequest ways built directly mockhttpservletrequestbuilder implementation interface builderstyle methods made accessible static factory methods postprocessor postprocessor add
update contextpath servletpath pathinfo request
add header request values always added name header name values one header values
add request parameter mockhttpservletrequest if called once new values get added existing ones name parameter name values one values
set character encoding request encoding character encoding
merges properties parent requestbuilder accepting values already set this instance parent parent requestbuilder inherit properties result merge
set request attribute name attribute name value attribute value
set session attributes sessionattributes session attributes
set locale request overriding previous locales locale locale null reset localelocale
set session attribute name session attribute name value session attribute value
set flash attributes flashattributes flash attributes
specify portion requesturi represents context path context path specified must match start request uri in cases tests written omitting context path requesturi applications dont actually depend name theyre deployed specified here context path must start must end javaxservlethttphttpservletrequestgetcontextpath
set secure property servletrequest indicating use secure channel https secure whether request using secure channel
set contenttype header request contenttype content type
add headers request values always added httpheaders headers values add
set accept header given media types mediatypes one media types
set request body content body content
alternative constructor custom http methods httpmethod http method get post etc url url 43
add map request parameters mockhttpservletrequest example testing form submission if called once new values get added existing ones params parameters add 424
specify portion requesturi represents path servlet mapped typically portion requesturi context path in cases tests written omitting servlet path requesturi applications dont actually depend prefix servlet mapped example servlet mapped main tests written requesturi accounts1 opposed mainaccounts1 specified here servletpath must start must end javaxservlethttphttpservletrequestgetservletpath
set principal request principal principal
set accept header given media types mediatypes one media types
always returns true
add specified locales preferred request locales locales locales add 436 localelocale
specify portion requesturi represents pathinfo if left unspecified recommended pathinfo automatically derived removing contextpath servletpath requesturi using remaining part specified here pathinfo must start if specified pathinfo used asis javaxservlethttphttpservletrequestgetpathinfo
add given cookies request cookies always added cookies cookies add
set input flash attribute name flash attribute name value flash attribute value
set contenttype header request contenttype content type 412
build mockhttpservletrequest
create mockmultiparthttpservletrequestbuilder multipart request uri url 403 favor multiparturi
create requestbuilder async dispatch mvcresult request started async processing usage involves performing request starts async processing first classcode mvcresult mvcresult thismockmvcperformget1 andexpectrequestasyncstarted andreturn and performing async dispatch reusing mvcresult classcode thismockmvcperformasyncdispatchmvcresult andexpectstatusisok andexpectcontentcontenttypemediatypeapplicationjson andexpectcontentstringnamejoesomedouble00somebooleanfalse mvcresult result request started async processing
create mockmultiparthttpservletrequestbuilder multipart request urltemplate url template resulting url encoded urivars zero uri variables favor multipartstring object
assert cookies comment hamcrest matcher
assert cookies version value
assert cookies domain hamcrest matcher
assert cookies comment value
assert cookie path hamcrest matcher
assert whether cookie must sent secure protocol not
assert cookie value given hamcrest matcher
assert cookies domain value
assert cookies maxage hamcrest matcher
assert whether cookie must http only 439
assert cookie value
assert cookies version hamcrest matcher
assert cookies maxage value
assert cookie exist note existence check irrespective whether max age 0 ie expired
assert response status code 2xx range
assert response status code httpstatusrequestentitytoolarge 413 matching deprecation httpstatusrequestentitytoolarge ispayloadtoolarge
assert response status code httpstatusmethodfailure 420 matching deprecation httpstatusmethodfailure
assert response status code httpstatusmovedtemporarily 302 isfound favor isfound
assert response status code httpstatusinsufficientspaceonresource 419 matching deprecation httpstatusinsufficientspaceonresource
assert response status code 5xx range
assert response status code httpstatusrequesturitoolong 414 matching deprecation httpstatusrequesturitoolong isuritoolong
assert response status code httpstatusdestinationlocked 421 matching deprecation httpstatusdestinationlocked
assert response status code 3xx range
assert response status code 1xx range
assert response status code httpstatususeproxy 305 matching deprecation httpstatususeproxy
assert response status code 4xx range
assert type handler processed request
assert name controller method used process request
assert controller method used process request
assert controller method used process request the expected method specified mock controller method invocation similar mvcuricomponentsbuilderfrommethodcallobject for example given controller classcode restcontroller public class simplecontroller requestmapping public responseentityvoid handle return responseentityokbuild a test statically imported mvcuricomponentsbuilderon performed follows classcode mockmvcperformget andexpecthandlermethodcallonsimplecontrollerclasshandle obj either value returned mock controller invocation mock controller invocation
assert name controller method used process request using given hamcrest matcher
assert flash attributes value given hamcrest matcher
assert existence given flash attributes
assert result asynchronous processing this method used controller method returns callable webasynctask value matched value returned callable exception raised
assert session attribute value given hamcrest matcher
assert session attribute value
assert result asynchronous processing given matcher this method used controller method returns callable webasynctask
assert request attribute value given hamcrest matcher
assert request attribute value
assert whether asynchronous processing started usually result controller method returning callable deferredresult the test await completion callable asyncresultmatcher used assert resulting value neither callable deferredresult complete processing way since mockhttpservletrequest perform asynchronous dispatches
assert asynchronous processing started asyncstarted
assert values response header given hamcrest iterable matcher 43
assert values response header string values 43
assert primary value named response header parsed date using preferred date format described rfc 7231 the resultmatcher returned method throws assertionerror response contain specified header supplied value match primary value 42 hrefhttpstoolsietforghtmlrfc7231section7111section 7111 rfc 7231
assert named response header exists 503
assert named response header exist 40
assert primary value named response header long the resultmatcher returned method throws assertionerror response contain specified header supplied value match primary value
assert selected view name given hamcrest matcher
assert selected view name
protected constructor use mockmvcresultmatcherscontent
assert servletresponse content type parsing mediatype given content type must fully match including type subtype parameters checking type subtype see contenttypecompatiblewithmediatype
parse response content given string xml assert two similar ie contain elements attributes regardless order use matcher requires hrefhttpxmlunitsourceforgenetxmlunit library xmlcontent expected xml content mockmvcresultmatchersxpathstring object mockmvcresultmatchersxpathstring map object
parse response content given string json assert two similar ie contain attributevalue pairs regardless formatting can compare two modes depending strict parameter value true strict checking extensible strict array ordering false lenient checking extensible nonstrict array ordering use matcher requires hrefhttpjsonassertskyscreamerorgjsonassert library jsoncontent expected json content strict enables strict checking 42
parse response content node apply given hamcrest matcher
assert character encoding servletresponse httpservletresponsegetcharacterencoding
parse response content domsource apply given hamcrest matcher hrefhttpcodegooglecompxmlmatchersxmlmatchers
assert servletresponse content type compatible given content type defined mediatypeiscompatiblewithmediatype
apply xpath assert string value found given hamcrest matcher
evaluate xpath assert number nodes found given hamcrest matcher
protected constructor direct instantiation use mockmvcresultmatchersxpathstring object mockmvcresultmatchersxpathstring map object expression xpath expression namespaces xml namespaces referenced xpath expression null args arguments parameterize xpath expression using formatting specifiers defined stringformatstring object
apply xpath assert string value found
evaluate xpath assert double value found given hamcrest matcher
evaluate xpath assert node content found given hamcrest matcher
evaluate xpath assert content exists
evaluate xpath assert double value found
get response encoding explicitly defined response code null otherwise
evaluate xpath assert number nodes found
evaluate xpath assert content doesnt exist
evaluate xpath assert boolean value found
print modelandview
print supplied cookies humanreadable form assuming cookie implementation provide tostring 42
print output flash attributes
print mvcresult details
print request
print exceptions resolved handlerexceptionresolver
print response
print handler
asserts request forwarded given url template this method accepts exact matches expanded encoded url template urltemplate url template expanded url encoded urivars zero uri variables populate template uricomponentsbuilderfromuristringstring
asserts request redirected given url template this method accepts exact matches expanded encoded url template urltemplate url template expanded url encoded urivars zero uri variables populate template uricomponentsbuilderfromuristringstring
access response body assertions using xpath expression inspect specific subset body the xpath expression parameterized string using formatting specifiers defined stringformatstring object expression xpath expression optionally parameterized arguments namespaces namespaces referenced xpath expression args arguments parameterize xpath expression
asserts request forwarded given url this method accepts orgspringframeworkutilantpathmatcher patterns urlpattern antpath pattern match 40 orgspringframeworkutilantpathmatcher
asserts request redirected given url this method accepts orgspringframeworkutilantpathmatcher patterns urlpattern antpath pattern match 40 orgspringframeworkutilantpathmatcher
assert given model attributes exist
assert model attribute value given hamcrest matcher
assert model errors
assert model errors
assert number model attributes
assert given model attributes errors
assert given model attributes errors
assert field error code model attribute using orghamcrestmatcher 41
assert model attribute value
assert given model attributes errors
assert given model attribute fields errors
assert given model attributes exist
assert total number errors model
assert field error code model attribute using exact string match 41
configures current jsonpathresultmatchers instance verify json payload prepended given prefix use method json payloads prefixed avoid cross site script inclusion xssi attacks prefix string prefix prepended actual json payload 43
resolve testcontextbootstrapper type test class supplied bootstrapcontext instantiate it provide reference bootstrapcontext if bootstrapwith bootstrapwith annotation present test class either directly metaannotation bootstrapwithvalue value used bootstrapper type otherwise either orgspringframeworktestcontextsupportdefaulttestcontextbootstrapper defaulttestcontextbootstrapper orgspringframeworktestcontextwebwebtestcontextbootstrapper webtestcontextbootstrapper used depending presence orgspringframeworktestcontextwebwebappconfiguration webappconfiguration bootstrapcontext bootstrap context use fully configured testcontextbootstrapper
create bootstrapcontext specified plain class test class uses reflection create orgspringframeworktestcontextsupportdefaultbootstrapcontext uses orgspringframeworktestcontextcachedefaultcacheawarecontextloaderdelegate testclass test class bootstrap context created new bootstrapcontext never null
generate unique hash code properties contextconfigurationattributes instance excluding plain getname name
provide string representation context configuration attributes declaring class
construct new contextconfigurationattributes instance plain class test class declared contextconfiguration contextconfiguration annotation corresponding attributes declaringclass test class declared contextconfiguration locations resource locations declared via contextconfiguration classes annotated classes declared via contextconfiguration inheritlocations inheritlocations flag declared via contextconfiguration initializers context initializers declared via contextconfiguration inheritinitializers inheritinitializers flag declared via contextconfiguration contextloaderclass contextloader class declared via contextconfiguration illegalargumentexception declaringclass contextloaderclass null
get name context hierarchy level declared via contextconfiguration contextconfiguration name context hierarchy level null applicable contextconfigurationname 322
construct new contextconfigurationattributes instance default values declaringclass test class declared contextconfiguration either explicitly implicitly 43
construct new contextconfigurationattributes instance supplied annotationattributes parsed contextconfiguration contextconfiguration annotation plain class test class declared them declaringclass test class declared contextconfiguration annattrs annotation attributes retrieve attributes
construct new contextconfigurationattributes instance plain class test class declared contextconfiguration contextconfiguration annotation corresponding attributes declaringclass test class declared contextconfiguration locations resource locations declared via contextconfiguration classes annotated classes declared via contextconfiguration inheritlocations inheritlocations flag declared via contextconfiguration initializers context initializers declared via contextconfiguration inheritinitializers inheritinitializers flag declared via contextconfiguration name name level context hierarchy null applicable contextloaderclass contextloader class declared via contextconfiguration illegalargumentexception declaringclass contextloaderclass null
determine supplied object equal contextconfigurationattributes instance comparing objects plain getdeclaringclass declaring class plain getlocations locations plain getclasses annotated classes plain isinheritlocations inheritlocations flag plain getinitializers context initializer classes plain isinheritinitializers inheritinitializers flag getcontextloaderclass contextloader class
construct new contextconfigurationattributes instance supplied contextconfiguration contextconfiguration annotation plain class test class declared it declaringclass test class declared contextconfiguration contextconfiguration annotation retrieve attributes
attempt create copy supplied testcontext using copy constructor
hook postprocessing test after execution after lifecycle callbacks underlying test framework example tearing test fixtures ending transaction etc this method must called immediately frameworkspecific after lifecycle callbacks eg methods annotated junit 4s orgjunitafter after historical reasons method named aftertestmethod since introduction aftertestexecution suitable name method might something like aftertestteardown aftereach however unfortunately impossible rename method due backward compatibility concerns the managed testcontext updated supplied testinstance testmethod exception each registered testexecutionlistener given chance perform postprocessing listener throws exception remaining registered listeners still called listeners executed first caught exception rethrown subsequent exceptions plain throwableaddsuppressed suppressed first exception note registered listeners executed opposite testinstance current test instance never null testmethod test method executed test instance exception exception thrown execution test method testexecutionlistener null none thrown exception registered testexecutionlistener throws exception beforetestmethod beforetestexecution aftertestexecution gettestexecutionlisteners throwableaddsuppressedthrowable
get copy testexecutionlistener testexecutionlisteners registered testcontextmanager reverse order
hook preprocessing test immediately before execution plain javalangreflectmethod test method supplied plain testcontext test context example timing logging purposes this method must called frameworkspecific before lifecycle callbacks eg methods annotated junit 4s orgjunitbefore before the managed testcontext updated supplied testinstance testmethod an attempt made give registered testexecutionlistener chance perform preprocessing listener throws exception however remaining registered listeners not called testinstance current test instance never null testmethod test method executed test instance exception registered testexecutionlistener throws exception 50 beforetestmethod aftertestmethod beforetestexecution aftertestexecution gettestexecutionlisteners
hook postprocessing test immediately after execution plain javalangreflectmethod test method supplied plain testcontext test context example timing logging purposes this method must called frameworkspecific after lifecycle callbacks eg methods annotated junit 4s orgjunitafter after the managed testcontext updated supplied testinstance testmethod exception each registered testexecutionlistener given chance perform postprocessing listener throws exception remaining registered listeners still called listeners executed first caught exception rethrown subsequent exceptions plain throwableaddsuppressed suppressed first exception note registered listeners executed opposite order registered testinstance current test instance never null testmethod test method executed test instance exception exception thrown execution test method testexecutionlistener null none thrown exception registered testexecutionlistener throws exception 50 beforetestmethod aftertestmethod beforetestexecution gettestexecutionlisteners throwableaddsuppressedthrowable
hook postprocessing test class after execution tests within class called frameworkspecific after class methods eg methods annotated junit 4s orgjunitafterclass afterclass each registered testexecutionlistener given chance perform postprocessing listener throws exception remaining registered listeners still called listeners executed first caught exception rethrown subsequent exceptions plain throwableaddsuppressed suppressed first exception note registered listeners executed opposite exception registered testexecutionlistener throws exception 30 gettestexecutionlisteners throwableaddsuppressedthrowable
hook preprocessing test before execution before lifecycle callbacks underlying test framework example setting test fixtures starting transaction etc this method must called immediately prior frameworkspecific before lifecycle callbacks eg methods annotated junit 4s orgjunitbefore before historical reasons method named beforetestmethod since introduction beforetestexecution suitable name method might something like beforetestsetup beforeeach however unfortunately impossible rename method due backward compatibility concerns the managed testcontext updated supplied testinstance testmethod an attempt made give registered testexecutionlistener chance perform preprocessing listener throws exception however remaining registered listeners not called testinstance current test instance never null testmethod test method executed test instance exception registered testexecutionlistener throws exception aftertestmethod beforetestexecution aftertestexecution gettestexecutionlisteners
construct new testcontextmanager using supplied testcontextbootstrapper plain registertestexecutionlisteners register necessary testexecutionlistener testexecutionlisteners delegates supplied testcontextbootstrapper building testcontext retrieving testexecutionlisteners testcontextbootstrapper bootstrapper use testcontextbootstrapperbuildtestcontext testcontextbootstrappergettestexecutionlisteners registertestexecutionlisteners
register supplied array testexecutionlistener testexecutionlisteners appending list listeners used testcontextmanager
hook preprocessing test class before execution tests within class called prior frameworkspecific before class methods eg methods annotated junit 4s orgjunitbeforeclass beforeclass an attempt made give registered testexecutionlistener chance preprocess test class execution listener throws exception however remaining registered listeners not called exception registered testexecutionlistener throws exception 30 gettestexecutionlisteners
hook preparing test instance prior execution individual test methods example injecting dependencies etc called immediately instantiation test instance the managed testcontext updated supplied testinstance an attempt made give registered testexecutionlistener chance prepare test instance listener throws exception however remaining registered listeners not called testinstance test instance prepare never null exception registered testexecutionlistener throws exception gettestexecutionlisteners
provide string representation plain gettestclass test class plain getlocations locations plain getclasses annotated classes plain getcontextinitializerclasses context initializer classes plain getactiveprofiles active profiles plain getpropertysourcelocations property source locations plain getpropertysourceproperties property source properties plain getcontextcustomizers context customizers name getcontextloader contextloader plain getparent parent configuration
generate unique hash code properties mergedcontextconfiguration excluding plain gettestclass test class
get mergedcontextconfiguration parent application context context hierarchy parent configuration null parent getparentapplicationcontext 322
create new mergedcontextconfiguration instance supplied parameters testclass test class configuration merged locations merged context resource locations classes merged annotated classes contextinitializerclasses merged context initializer classes activeprofiles merged active bean definition profiles contextloader resolved contextloader cacheawarecontextloaderdelegate cacheaware context loader delegate retrieve parent context parent parent configuration null parent 322
get parent applicationcontext context defined mergedcontextconfiguration context cache if parent context yet loaded loaded stored cache returned parent applicationcontext null parent getparent 322
create new mergedcontextconfiguration instance supplied parameters testclass test class configuration merged locations merged context resource locations classes merged annotated classes activeprofiles merged active bean definition profiles contextloader resolved contextloader
determine supplied object equal mergedcontextconfiguration instance comparing objects plain getlocations locations plain getclasses annotated classes plain getcontextinitializerclasses context initializer classes plain getactiveprofiles active profiles plain getpropertysourcelocations property source locations plain getpropertysourceproperties property source properties plain getparent parents fully qualified names getcontextloader contextloaders
create new mergedcontextconfiguration instance supplied parameters if null value supplied locations classes activeprofiles propertysourcelocations propertysourceproperties empty array stored instead null value supplied contextinitializerclasses contextcustomizers empty set stored instead furthermore active profiles sorted duplicate profiles removed testclass test class configuration merged locations merged context resource locations classes merged annotated classes contextinitializerclasses merged context initializer classes activeprofiles merged active bean definition profiles propertysourcelocations merged propertysource locations propertysourceproperties merged propertysource properties contextcustomizers context customizers contextloader resolved contextloader cacheawarecontextloaderdelegate cacheaware context loader delegate retrieve parent context parent parent configuration null parent 43
create new mergedcontextconfiguration instance supplied parameters testclass test class configuration merged locations merged context resource locations classes merged annotated classes contextinitializerclasses merged context initializer classes activeprofiles merged active bean definition profiles contextloader resolved contextloader
create new mergedcontextconfiguration instance copying fields supplied mergedcontextconfiguration 41
create new mergedcontextconfiguration instance supplied parameters if null value supplied locations classes activeprofiles propertysourcelocations propertysourceproperties empty array stored instead null value supplied contextinitializerclasses empty set stored instead furthermore active profiles sorted duplicate profiles removed testclass test class configuration merged locations merged context resource locations classes merged annotated classes contextinitializerclasses merged context initializer classes activeprofiles merged active bean definition profiles propertysourcelocations merged propertysource locations propertysourceproperties merged propertysource properties contextloader resolved contextloader cacheawarecontextloaderdelegate cacheaware context loader delegate retrieve parent context parent parent configuration null parent 41
construct new defaultcacheawarecontextloaderdelegate using supplied contextcache defaultcacheawarecontextloaderdelegate
load applicationcontext supplied merged context configuration supports smartcontextloader contextloader spis exception error occurs loading application context
retrieve maximum size contextcache uses springproperties retrieve system property spring property named springtestcontextcachemaxsize falls back value contextcachedefaultmaxcontextcachesize property set property integer maximum size context cache contextcachemaxcontextcachesizepropertyname
create new defaultcontextcache using supplied maximum cache size maxsize maximum cache size illegalargumentexception supplied maxsize value positive 43 defaultcontextcache
generate text string containing implementation type cache statistics the string returned method contains information required compliance contract logstatistics string representation cache including statistics
execute given sql script use caution outside transaction the script normally loaded classpath do use method execute ddl expect rollback sqlresourcepath spring resource path sql script continueonerror whether continue without throwing exception event error dataaccessexception error executing statement resourcedatabasepopulator setsqlscriptencoding
set datasource typically provided via dependency injection this method also instantiates jdbctemplate instance variable
set applicationcontext used test instance provided via applicationcontextaware semantics applicationcontext applicationcontext test runs
construct new springjunit4classrunner initialize testcontextmanager provide spring testing functionality standard junit tests clazz test class run createtestcontextmanagerclass
wrap statement returned parent implementation runaftertestmethodcallbacks statement thus preserving default functionality adding support spring testcontext framework runaftertestmethodcallbacks
augment default junit behavior plain withpotentialrepeat potential repeats entire execution chain furthermore support timeouts moved execution chain order include execution orgjunitbefore before orgjunitafter after methods within timed execution note differs default junit behavior executing before after methods main thread executing actual test method separate thread thus net effect before after methods executed thread test method consequence junitspecified timeouts work fine combination spring transactions however junitspecific timeouts still differ springspecific timeouts former execute separate thread latter simply execute main thread like regular tests methodinvokerframeworkmethod object withbeforetestexecutioncallbacksframeworkmethod object statement withaftertestexecutioncallbacksframeworkmethod object statement possiblyexpectingexceptionsframeworkmethod object statement withbeforesframeworkmethod object statement withaftersframeworkmethod object statement withrulesreflectivelyframeworkmethod object statement withpotentialrepeatframeworkmethod object statement withpotentialtimeoutframeworkmethod object statement
wrap statement returned parent implementation runaftertestclasscallbacks statement thus preserving default junit functionality adding support spring testcontext framework runaftertestclasscallbacks
return true ignore ignore present supplied plain frameworkmethod test method test method disabled via ifprofilevalue profilevalueutilsistestenabledinthisenvironmentmethod class
get exception supplied plain frameworkmethod test method expected throw supports junits testexpected testexpected annotation can overridden subclasses expected exception null none specified
perform logic blockjunit4classrunnerwithpotentialtimeoutframeworkmethod object statement additional support springs timed annotation supports springs orgspringframeworktestannotationtimed timed junits testtimeout testtimeout annotations simultaneously either springfailontimeout failontimeout supplied statement appropriate getspringtimeoutframeworkmethod getjunittimeoutframeworkmethod
perform logic blockjunit4classrunnerpossiblyexpectingexceptionsframeworkmethod object statement except expected exception retrieved using getexpectedexceptionframeworkmethod
retrieve configured junit timeout test test annotation supplied plain frameworkmethod test method timeout 0 none specified
invoke junits private withrules method using reflection
wrap statement returned parent implementation runbeforetestclasscallbacks statement thus preserving default junit functionality adding support spring testcontext framework runbeforetestclasscallbacks
perform logic blockjunit4classrunnerrunchildframeworkmethod runnotifier except tests determined ignored istestmethodignoredframeworkmethod
check whether test enabled current execution environment this prevents classes nonmatching ifprofilevalue annotation running altogether even skipping execution preparetestinstance methods testexecutionlisteners profilevalueutilsistestenabledinthisenvironmentclass orgspringframeworktestannotationifprofilevalue orgspringframeworktestcontexttestexecutionlistener
return description suitable ignored test class test disabled via ifprofilevalue classlevel otherwise delegate parent implementation profilevalueutilsistestenabledinthisenvironmentclass
wrap statement returned parent implementation runbeforetestmethodcallbacks statement thus preserving default functionality adding support spring testcontext framework runbeforetestmethodcallbacks
delegate parent implementation creating test instance allow gettestcontextmanager testcontextmanager prepare test instance returning it testcontextmanagerpreparetestinstance
apply classlevel features spring testcontext framework supplied base statement specifically method retrieves testcontextmanager used rule associated springmethodrule invokes testcontextmanagerbeforetestclass beforetestclass testcontextmanageraftertestclass aftertestclass methods testcontextmanager in addition method checks whether test enabled current execution environment prevents classes nonmatching ifprofilevalue annotation running altogether even skipping execution beforetestclass methods testexecutionlisteners base base statement rule applied description description current test execution statement wraps supplied base classlevel features spring testcontext framework gettestcontextmanager withbeforetestclasscallbacks withaftertestclasscallbacks withprofilevaluecheck withtestcontextmanagercacheeviction
get testcontextmanager associated supplied test class testclass test class managed never null
apply instancelevel methodlevel features spring testcontext framework supplied base statement specifically method invokes testcontextmanagerpreparetestinstance preparetestinstance testcontextmanagerbeforetestmethod beforetestmethod testcontextmanageraftertestmethod aftertestmethod methods testcontextmanager potentially spring timeouts repetitions in addition method checks whether test enabled current execution environment prevents methods nonmatching ifprofilevalue annotation running altogether even skipping execution preparetestinstance methods testexecutionlisteners base base statement rule applied frameworkmethod method invoked test instance testinstance current test instance statement wraps supplied base instancelevel methodlevel features spring testcontext framework withbeforetestmethodcallbacks withaftertestmethodcallbacks withpotentialrepeat withpotentialtimeout withtestinstancepreparation withprofilevaluecheck
wrap supplied statement runaftertestmethodcallbacks statement runaftertestmethodcallbacks
wrap supplied statement runpreparetestinstancecallbacks statement runpreparetestinstancecallbacks
wrap supplied statement runbeforetestmethodcallbacks statement runbeforetestmethodcallbacks
invoke testcontextmanagerbeforetestmethodobject method evaluate next statement execution chain typically instance orgjunitinternalrunnersstatementsrunbefores runbefores
construct new runbeforetestmethodcallbacks statement next next statement execution chain testinstance current test instance never null testmethod test method executed test instance testcontextmanager testcontextmanager upon call beforetestmethod
evaluate next statement statement execution chain repeatedly using specified repeat count
construct new springrepeat statement supplied testmethod repeat count next next statement execution chain testmethod current test method repeat configured repeat count current test method
evaluate next statement execution chain typically instance orgjunitinternalrunnersstatementsrunafters runafters catching exceptions thrown invoke testcontextmanageraftertestclass if invocation aftertestclass throws exception also tracked multiple exceptions combined multiplefailureexception
construct new runaftertestclasscallbacks statement next next statement execution chain testcontextmanager testcontextmanager upon call aftertestclass
invoke testcontextmanagerpreparetestinstanceobject evaluate next statement execution chain typically instance runaftertestmethodcallbacks
construct new runpreparetestinstancecallbacks statement next next statement execution chain never null testinstance current test instance never null testcontextmanager testcontextmanager upon call preparetestinstance never null
evaluate next statement execution chain typically instance orgjunitinternalrunnersstatementsrunafters runafters catching exceptions thrown invoke testcontextmanageraftertestmethodobject method throwable supplying first caught exception if any if invocation aftertestmethod throws exception exception also tracked multiple exceptions combined multiplefailureexception
construct new runaftertestmethodcallbacks statement next next statement execution chain testinstance current test instance never null testmethod test method executed test instance testcontextmanager testcontextmanager upon call aftertestmethod
evaluate next statement statement execution chain typically instance springrepeat throw timeoutexception next statement executes longer specified timeout
construct new springfailontimeout statement supplied timeout if supplied timeout 0 execution next statement timed next next statement execution chain never null timeout configured timeout current test milliseconds never negative
determine test specified arguments plain profilevaluechecker constructor enabled current environment configured via ifprofilevalue ifprofilevalue annotation if test annotated ifprofilevalue considered enabled if test enabled method abort evaluation execution chain failed assumption otherwise method simply evaluate next statement execution chain profilevalueutilsistestenabledinthisenvironmentclass profilevalueutilsistestenabledinthisenvironmentmethod class assumptionviolatedexception test disabled throwable evaluation next statement fails
construct new profilevaluechecker statement next next statement execution chain never null testclass test class check never null testmethod test method check may null profilevaluechecker applied class level
evaluate next statement execution chain typically instance runbeforetestexecutioncallbacks catching exceptions thrown invoke testcontextmanageraftertestexecution supplying first caught exception if any if invocation aftertestexecution throws exception exception also tracked multiple exceptions combined multiplefailureexception
construct new runaftertestexecutioncallbacks statement next next statement execution chain testinstance current test instance never null testmethod test method executed test instance testcontextmanager testcontextmanager upon call aftertestexecution
invoke testcontextmanagerbeforetestclass evaluate next statement execution chain typically instance orgjunitinternalrunnersstatementsrunbefores runbefores
construct new runbeforetestclasscallbacks statement next next statement execution chain testcontextmanager testcontextmanager upon call beforetestclass
invoke testcontextmanagerbeforetestexecutionobject method evaluate next statement execution chain typically instance orgjunitinternalrunnersstatementsinvokemethod invokemethod
construct new runbeforetestexecutioncallbacks statement next next statement execution chain testinstance current test instance never null testmethod test method executed test instance testcontextmanager testcontextmanager upon call beforetestexecution
ensure supplied webmergedcontextconfiguration contain mergedcontextconfigurationgetclasses classes 404 abstractgenericwebcontextloadervalidatemergedcontextconfiguration
returns contextxml order support detection default xml config file
load bean definitions supplied genericwebapplicationcontext context locations supplied webmergedcontextconfiguration using xmlbeandefinitionreader abstractgenericwebcontextloaderloadbeandefinitions
returns webmergedcontextconfiguration test class supplied mergedcontextconfiguration annotated webappconfiguration webappconfiguration otherwise returns supplied instance unmodified
returns webdelegatingsmartcontextloader supplied class annotated webappconfiguration webappconfiguration otherwise delegates superclass
returns contextxml contextgroovy order support detection default xml config file groovy script
load bean definitions supplied genericwebapplicationcontext context locations supplied webmergedcontextconfiguration using groovybeandefinitionreader context context bean definitions loaded webmergedconfig merged context configuration abstractgenericwebcontextloaderloadbeandefinitions
genericgroovyxmlwebcontextloader supports groovy xml resource types detection defaults consequently method supported getresourcesuffixes unsupportedoperationexception implementation
annotationconfigwebcontextloader used orgspringframeworktestcontextsmartcontextloader smartcontextloader legacy orgspringframeworktestcontextcontextloader contextloader consequently method supported unsupportedoperationexception implementation orgspringframeworktestcontextsupportabstractcontextloadergeneratedefaultlocations
annotationconfigwebcontextloader used orgspringframeworktestcontextsmartcontextloader smartcontextloader legacy orgspringframeworktestcontextcontextloader contextloader consequently method supported unsupportedoperationexception implementation orgspringframeworktestcontextsupportabstractcontextloadermodifylocations
ensure supplied webmergedcontextconfiguration contain mergedcontextconfigurationgetlocations locations 404 abstractgenericwebcontextloadervalidatemergedcontextconfiguration
annotationconfigwebcontextloader used orgspringframeworktestcontextsmartcontextloader smartcontextloader legacy orgspringframeworktestcontextcontextloader contextloader consequently method supported unsupportedoperationexception implementation orgspringframeworktestcontextsupportabstractcontextloadergetresourcesuffix
register classes supplied plain genericwebapplicationcontext context classes supplied webmergedcontextconfiguration each class must represent annotated class annotatedbeandefinitionreader used register appropriate bean definitions context context annotated classes registered webmergedconfig merged configuration classes retrieved abstractgenericwebcontextloaderloadbeandefinitions
process annotated classes supplied contextconfigurationattributes if annotated classes null empty isgeneratedefaultlocations returns true smartcontextloader attempt plain detectdefaultconfigurationclasses detect default configuration classes defaults detected plain contextconfigurationattributessetclassesclass set supplied configuration attributes otherwise properties supplied configuration attributes modified configattributes context configuration attributes process orgspringframeworktestcontextsmartcontextloaderprocesscontextconfigurationcontextconfigurationattributes isgeneratedefaultlocations detectdefaultconfigurationclassesclass
returns 1000
sets threadlocal state test method via spring webs requestcontextholder plain testcontextgettestclass test class annotated webappconfiguration webappconfiguration testexecutionlistenerbeforetestmethodtestcontext setuprequestcontextifnecessarytestcontext
resetrequestcontextholderattribute supplied testcontext value booleantrue method 1 clean threadlocal state test method plain requestcontextholderresetrequestattributes resetting spring webs requestcontextholder 2 ensure new mocks injected test instance subsequent tests setting dependencyinjectiontestexecutionlistenerreinjectdependenciesattribute test context true the resetrequestcontextholderattribute populatedrequestcontextholderattribute subsequently removed test context regardless values testexecutionlisteneraftertestmethodtestcontext
sets threadlocal state test instance preparation callback phase via spring webs requestcontextholder plain testcontextgettestclass test class annotated webappconfiguration webappconfiguration testexecutionlistenerpreparetestinstancetestcontext setuprequestcontextifnecessarytestcontext
create new webmergedcontextconfiguration instance copying properties supplied mergedcontextconfiguration if empty value supplied resourcebasepath empty string used resourcebasepath resource path root directory web application 41
provide string representation plain gettestclass test class plain getlocations locations plain getclasses annotated classes plain getcontextinitializerclasses context initializer classes plain getactiveprofiles active profiles plain getpropertysourcelocations property source locations plain getpropertysourceproperties property source properties plain getcontextcustomizers context customizers plain getresourcebasepath resource base path name getcontextloader contextloader plain getparent parent configuration
generate unique hash code properties webmergedcontextconfiguration excluding plain gettestclass test class
create new webmergedcontextconfiguration instance supplied parameters if null value supplied locations classes activeprofiles propertysourcelocations propertysourceproperties empty array stored instead null value supplied contextinitializerclasses contextcustomizers empty set stored instead empty value supplied resourcebasepath empty string used furthermore active profiles sorted duplicate profiles removed testclass test class configuration merged locations merged context resource locations classes merged annotated classes contextinitializerclasses merged context initializer classes activeprofiles merged active bean definition profiles propertysourcelocations merged propertysource locations propertysourceproperties merged propertysource properties contextcustomizers context customizers resourcebasepath resource path root directory web application contextloader resolved contextloader cacheawarecontextloaderdelegate cacheaware context loader delegate retrieve parent context parent parent configuration null parent 43
create new webmergedcontextconfiguration instance supplied parameters if null value supplied locations classes activeprofiles propertysourcelocations propertysourceproperties empty array stored instead null value supplied contextinitializerclasses empty set stored instead empty value supplied resourcebasepath empty string used furthermore active profiles sorted duplicate profiles removed testclass test class configuration merged locations merged resource locations classes merged annotated classes contextinitializerclasses merged context initializer classes activeprofiles merged active bean definition profiles propertysourcelocations merged propertysource locations propertysourceproperties merged propertysource properties resourcebasepath resource path root directory web application contextloader resolved contextloader cacheawarecontextloaderdelegate cacheaware context loader delegate retrieve parent context parent parent configuration null parent 41
determine supplied object equal webmergedcontextconfiguration instance comparing objects plain getlocations locations plain getclasses annotated classes plain getcontextinitializerclasses context initializer classes plain getactiveprofiles active profiles plain getresourcebasepath resource base path plain getparent parents fully qualified names getcontextloader contextloaders
load spring webapplicationcontext supplied mergedcontextconfiguration implementation details calls validatemergedcontextconfigurationwebmergedcontextconfiguration allow subclasses validate supplied configuration proceeding creates genericwebapplicationcontext instance if supplied mergedcontextconfiguration references plain mergedcontextconfigurationgetparent parent configuration corresponding mergedcontextconfigurationgetparentapplicationcontext applicationcontext retrieved plain genericwebapplicationcontextsetparentapplicationcontext set parent context created method delegates configurewebresources create mockservletcontext set webapplicationcontext calls preparecontext allow customizing context bean definitions loaded calls customizebeanfactory allow customizing contexts defaultlistablebeanfactory delegates loadbeandefinitions populate context locations classes supplied mergedcontextconfiguration delegates annotationconfigutils plain annotationconfigutilsregisterannotationconfigprocessors registering annotation configuration processors calls customizecontext allow customizing context refreshed configurableapplicationcontextrefresh refreshes context registers jvm shutdown hook it new web application context orgspringframeworktestcontextsmartcontextloaderloadcontextmergedcontextconfiguration genericwebapplicationcontext
abstractgenericwebcontextloader used orgspringframeworktestcontextsmartcontextloader smartcontextloader legacy orgspringframeworktestcontextcontextloader contextloader consequently method supported orgspringframeworktestcontextcontextloaderloadcontextjavalangstring unsupportedoperationexception implementation
configures web resources supplied web application context wac implementation details if supplied wac parent parent wac supplied wac configured root wac see root wac configuration below otherwise context hierarchy supplied wac traversed find topmost wac ie root servletcontext root wac set servletcontext supplied wac root wac configuration the resource base path retrieved supplied webmergedcontextconfiguration a resourceloader instantiated mockservletcontext resource base path prefixed classpath defaultresourceloader used otherwise filesystemresourceloader used a mockservletcontext created using resource base path resource loader the supplied genericwebapplicationcontext stored mockservletcontext webapplicationcontextrootwebapplicationcontextattribute key finally mockservletcontext set webapplicationcontext context web application context configure web resources webmergedconfig merged context configuration use load web application context
customize genericwebapplicationcontext created context loader after bean definitions loaded context before context refreshed the default implementation simply delegates abstractcontextloadercustomizecontextconfigurableapplicationcontext mergedcontextconfiguration context newly created web application context webmergedconfig merged context configuration use load web application context loadcontextmergedcontextconfiguration customizecontextconfigurableapplicationcontext mergedcontextconfiguration
determine supplied parameter potentially autowired applicationcontext returns true supplied parameter type applicationcontext or subtype thereof annotated metaannotated autowired autowired qualifier qualifier value value parameter parameter whose dependency autowired parameterindex index parameter resolvedependency
resolve dependency supplied parameter supplied applicationcontext provides comprehensive autowiring support individual method parameters par springs dependency injection facilities autowired fields methods including support autowired autowired qualifier qualifier value value support property placeholders spel expressions value declarations the dependency required unless parameter annotated autowired autowired autowiredrequired required flag set false if explicit qualifier declared name parameter used qualifier resolving ambiguities parameter parameter whose dependency resolved parameterindex index parameter containingclass concrete class contains parameter may differ class declares parameter may subclass thereof potentially substituting type variables applicationcontext application context resolve dependency resolved object null none found beansexception dependency resolution failed isautowirable autowiredrequired synthesizingmethodparameterforparameterparameter autowirecapablebeanfactoryresolvedependencydependencydescriptor string
due bug javac jdk versions prior jdk 9 looking annotations directly parameter fail inner class constructors bug javac jdk 9 the parameter annotations array compiled byte code excludes entry implicit enclosing instance parameter inner class constructor workaround this method provides workaround offbyone error allowing caller access annotations preceding parameter object ie index 1 supplied index zero method returns empty annotatedelement warning the annotatedelement returned method never cast treated parameter since metadata eg parametergetname parametergettype etc match declared parameter given index inner class constructor supplied parameter effective parameter aforementioned bug effect
resolve value parameter supplied parametercontext retrieving corresponding dependency tests applicationcontext delegates parameterautowireutilsresolvedependency supportsparameter parameterautowireutilsresolvedependency
delegates testcontextmanagerpreparetestinstance
delegates testcontextmanagerbeforetestmethod
get testcontextmanager associated supplied extensioncontext testcontextmanager never null
delegates testcontextmanageraftertestclass
delegates testcontextmanagerbeforetestclass
delegates testcontextmanageraftertestexecution
determine value parameter supplied parametercontext autowired tests applicationcontext returns true parameter declared constructor annotated autowired autowired otherwise delegates parameterautowireutilsisautowirable warning parameter declared constructor annotated autowired spring assume responsibility resolving parameters constructor consequently registered parameterresolver able resolve parameters resolveparameter parameterautowireutilsisautowirable
delegates testcontextmanagerbeforetestexecution
delegates testcontextmanageraftertestmethod
containers tests enabled enabledif present corresponding test class test method configured expression evaluates true
containers tests disabled disabledif present corresponding test class test method configured expression evaluates true
evaluate expression configured via supplied annotation type annotatedelement supplied extensioncontext annotationtype type annotation process expressionextractor function extracts expression annotation reasonextractor function extracts reason annotation loadcontextextractor function extracts loadcontext flag annotation enabledontrue indicates whether returned conditionevaluationresult conditionevaluationresultenabled enabled expression evaluates true context extensioncontext conditionevaluationresultenabled enabled container test enabled otherwise conditionevaluationresultdisabled disabled
delegates configured testcontextmanager call plain testcontextmanagerbeforetestclass before test class callbacks exception registered testexecutionlistener throws exception
delegates configured testcontextmanager plain testcontextmanagerpreparetestinstanceobject prepare test instance prior execution individual tests example injecting dependencies etc exception registered testexecutionlistener throws exception
set applicationcontext used test instance provided via applicationcontextaware semantics applicationcontext applicationcontext test runs
delegates configured testcontextmanager call plain testcontextmanageraftertestclass after test class callbacks exception registered testexecutionlistener throws exception
delegates configured testcontextmanager plain testcontextmanagerbeforetestmethodobjectmethod preprocess test method actual test executed testmethod test method executed exception allows exceptions propagate
delegates plain ihookcallbackruntestmethoditestresult test method supplied callback execute actual test tracks exception thrown test execution any orgtestngihookablerunihookcallback itestresult
delegates configured testcontextmanager plain testcontextmanageraftertestmethodobject method throwable postprocess test method actual test executed testmethod test method executed test instance exception allows exceptions propagate
set datasource typically provided via dependency injection this method also instantiates jdbctemplate instance variable
execute given sql script use caution outside transaction the script normally loaded classpath do use method execute ddl expect rollback sqlresourcepath spring resource path sql script continueonerror whether continue without throwing exception event error dataaccessexception error executing statement resourcedatabasepopulator setsqlscriptencoding
resolve bean definition profiles given plain class test class based profiles configured declaratively via activeprofilesprofiles activeprofilesvalue testclass test class profiles resolved never null list bean definition profiles use loading applicationcontext never null
load spring applicationcontext supplied mergedcontextconfiguration implementation details calls validatemergedcontextconfigurationmergedcontextconfiguration allow subclasses validate supplied configuration proceeding creates genericapplicationcontext instance if supplied mergedcontextconfiguration references plain mergedcontextconfigurationgetparent parent configuration corresponding mergedcontextconfigurationgetparentapplicationcontext applicationcontext retrieved plain genericapplicationcontextsetparentapplicationcontext set parent context created method calls preparecontextgenericapplicationcontext backwards compatibility orgspringframeworktestcontextcontextloader contextloader spi calls preparecontextconfigurableapplicationcontext mergedcontextconfiguration allow customizing context bean definitions loaded calls customizebeanfactorydefaultlistablebeanfactory allow customizing contexts defaultlistablebeanfactory delegates loadbeandefinitionsgenericapplicationcontext mergedcontextconfiguration populate context locations classes supplied mergedcontextconfiguration delegates annotationconfigutils annotationconfigutilsregisterannotationconfigprocessors registering annotation configuration processors calls customizecontextgenericapplicationcontext allow customizing context refreshed calls customizecontextconfigurableapplicationcontext mergedcontextconfiguration allow customizing context refreshed configurableapplicationcontextrefresh refreshes context registers jvm shutdown hook it new application context orgspringframeworktestcontextsmartcontextloaderloadcontextmergedcontextconfiguration genericapplicationcontext 31
load spring applicationcontext supplied locations implementation details creates genericapplicationcontext instance calls preparecontextgenericapplicationcontext allow customizing context bean definitions loaded calls customizebeanfactorydefaultlistablebeanfactory allow customizing contexts defaultlistablebeanfactory delegates createbeandefinitionreadergenericapplicationcontext create beandefinitionreader used populate context specified locations delegates annotationconfigutils annotationconfigutilsregisterannotationconfigprocessors registering annotation configuration processors calls customizecontextgenericapplicationcontext allow customizing context refreshed configurableapplicationcontextrefresh refreshes context registers jvm shutdown hook it note method provide means set active bean definition profiles loaded context see loadcontextmergedcontextconfiguration abstractcontextloaderpreparecontextconfigurableapplicationcontext mergedcontextconfiguration alternative new application context orgspringframeworktestcontextcontextloaderloadcontext genericapplicationcontext loadcontextmergedcontextconfiguration 25
provide string representation bootstrap contexts state
construct new defaultbootstrapcontext supplied arguments testclass test class bootstrap context never null cacheawarecontextloaderdelegate context loader delegate use transparent interaction contextcache never null
construct new defaulttestcontext supplied arguments testclass test class test context mergedcontextconfiguration merged application context configuration test context cacheawarecontextloaderdelegate delegate use loading closing application context test context
copy constructor creating new defaulttestcontext based attributes immutable state supplied context immutable state includes arguments supplied plain defaulttestcontextclass mergedcontextconfiguration cacheawarecontextloaderdelegate standard constructor nullpointerexception supplied defaulttestcontext null
provide string representation test contexts state
get plain applicationcontext application context test context the default implementation delegates cacheawarecontextloaderdelegate supplied testcontext constructed illegalstateexception context returned context loader delegate active ie closed cacheawarecontextloaderdelegateloadcontext
supplied locations null empty isgeneratedefaultlocations returns true default locations generatedefaultlocationsclass generated ie detected specified class class configured plain getresourcesuffixes resource suffixes otherwise supplied locations plain modifylocations modified necessary returned clazz class locations associated used generating default locations locations unmodified locations use loading application context can null empty processed array application context resource locations 25 isgeneratedefaultlocations generatedefaultlocationsclass modifylocationsclass string orgspringframeworktestcontextcontextloaderprocesslocationsclass string processcontextconfigurationcontextconfigurationattributes
backwards compatibility contextloader spi default implementation simply delegates processlocationsclass string passing contextconfigurationattributesgetdeclaringclass declaring class contextconfigurationattributesgetlocations resource locations retrieved supplied contextconfigurationattributes configuration attributes processed locations contextconfigurationattributessetlocationsstring set supplied configuration attributes can overridden subclasses example process annotated classes instead resource locations 31 processlocationsclass string
prepare configurableapplicationcontext created smartcontextloader before bean definitions read the default implementation sets active bean definition profiles supplied mergedcontextconfiguration orgspringframeworkcoreenvenvironment environment context adds propertysource propertysources plain mergedcontextconfigurationgetpropertysourcelocations resource locations plain mergedcontextconfigurationgetpropertysourceproperties inlined properties supplied mergedcontextconfiguration environment context determines if any context initializer classes supplied via mergedcontextconfiguration instantiates plain applicationcontextinitializerinitialize invokes given application context any applicationcontextinitializers implementing orgspringframeworkcoreordered ordered annotated orgspringframeworkcoreannotationorder order sorted appropriately context newly created application context mergedconfig merged context configuration 32 testpropertysourceutilsaddpropertiesfilestoenvironment testpropertysourceutilsaddinlinedpropertiestoenvironment applicationcontextinitializerinitializeconfigurableapplicationcontext loadcontextmergedcontextconfiguration configurableapplicationcontextsetid
generate default classpath resource locations array based supplied class for example supplied class comexamplemytest generated locations contain single string value classpathcomexamplemytest value first configured plain getresourcesuffixes resource suffix generated location actually exists classpath as spring 31 implementation method adheres contract defined smartcontextloader spi specifically method preemptively verify generated default location actually exists exist method log warning return empty array subclasses override method implement different default location generation strategy clazz class default locations generated array default application context resource locations 25 getresourcesuffixes
customize configurableapplicationcontext created contextloader after bean definitions loaded context before context refreshed the default implementation delegates mergedcontextconfigurationgetcontextcustomizers context customizers registered supplied mergedconfig context newly created application context mergedconfig merged context configuration 43
creates new propertiesbeandefinitionreader new propertiesbeandefinitionreader propertiesbeandefinitionreader
ensure supplied mergedcontextconfiguration contain mergedcontextconfigurationgetclasses classes 404 abstractgenericcontextloadervalidatemergedcontextconfiguration
returns contextproperties
resolve active bean definition profiles supplied class note activeprofilesinheritprofiles inheritprofiles flag activeprofiles activeprofiles taken consideration specifically inheritprofiles flag set true profiles defined test class merged defined superclasses testclass class resolve active profiles must null set active profiles specified class including active profiles superclasses appropriate never null activeprofiles activeprofilesresolver orgspringframeworkcontextannotationprofile
create mergedtestpropertysources instance supplied locations properties locations resource locations properties files may empty never null properties properties form keyvalue pairs may empty never null
returns delegatingsmartcontextloader
detect default configuration classes supplied test class the returned class array contain static nested classes supplied class meet requirements configuration class implementations specified documentation configuration configuration the implementation method adheres contract defined orgspringframeworktestcontextsmartcontextloader smartcontextloader spi specifically method uses introspection detect default configuration classes comply constraints required configuration class implementations potential candidate configuration class meet requirements method log debug message potential candidate class ignored declaringclass test class declared contextconfiguration array default configuration classes potentially empty never null
determine supplied class meets criteria considered default configuration class candidate specifically candidates must null must private must final must static must annotated metaannotated configuration clazz class check true supplied class meets candidate criteria
resolve contextloader plain class class use supplied list contextconfigurationattributes instantiate return contextloader if user explicitly declared loader use value returned getdefaultcontextloaderclass used default context loader class details class resolution process see resolveexplicitcontextloaderclass getdefaultcontextloaderclass testclass test class contextloader resolved must null configattributeslist list configuration attributes process must null must ordered bottomup ie traversing class hierarchy resolved contextloader supplied testclass never null illegalstateexception getdefaultcontextloaderclassclass returns null
build mergedcontextconfiguration merged context configuration supplied class testclass context configuration attributes parent context configuration testclass test class mergedcontextconfiguration built must null configattributeslist list context configuration attributes specified test class ordered bottomup ie traversing class hierarchy never null empty parentconfig merged context configuration parent application context context hierarchy null parent cacheawarecontextloaderdelegate cacheaware context loader delegate passed mergedcontextconfiguration constructor requirelocationsclassesorinitializers whether locations classes initializers required typically true may set false configured loader supports empty configuration merged context configuration resolvecontextloader contextloaderutilsresolvecontextconfigurationattributes smartcontextloaderprocesscontextconfiguration contextloaderprocesslocations activeprofilesutilsresolveactiveprofiles applicationcontextinitializerutilsresolveinitializerclasses mergedcontextconfiguration
get names default testexecutionlistener classes bootstrapper the default implementation looks orgspringframeworktestcontexttestexecutionlistener entries configured metainfspringfactories files classpath this method invoked getdefaulttestexecutionlistenerclasses unmodifiable list names default testexecutionlistener classes springfactoriesloaderloadfactorynames
build new defaulttestcontext using plain class test class bootstrapcontext associated bootstrapper delegating buildmergedcontextconfiguration getcacheawarecontextloaderdelegate concrete subclasses may choose override method return custom testcontext implementation 42
resolve contextloader plain class class use supplied list contextconfigurationattributes beginning first level context configuration attributes hierarchy if contextconfigurationattributesgetcontextloaderclass contextloaderclass property contextconfigurationattributes configured explicit class class returned if explicit contextloader class specified current level hierarchy traverse next level hierarchy return step 1 configattributeslist list configuration attributes process must null must ordered bottomup ie traversing class hierarchy contextloader class use supplied configuration attributes null explicit loader found illegalargumentexception supplied configuration attributes null empty
get default testexecutionlistener classes bootstrapper this method invoked gettestexecutionlisteners delegates getdefaulttestexecutionlistenerclassnames retrieve class names if particular class cannot loaded debug message logged associated exception rethrown
returns contextxml contextgroovy order support detection default xml config file groovy script
load bean definitions supplied genericapplicationcontext context locations supplied mergedcontextconfiguration using groovybeandefinitionreader context context bean definitions loaded mergedconfig merged context configuration orgspringframeworktestcontextsupportabstractgenericcontextloaderloadbeandefinitions
genericgroovyxmlcontextloader supports groovy xml resource types detection defaults consequently method supported getresourcesuffixes unsupportedoperationexception implementation
test class supplied plain testcontext test context annotated dirtiescontext plain dirtiescontextclassmode class mode set classmodeafterclass afterclass plain applicationcontext application context test context plain testcontextmarkapplicationcontextdirty marked dirty dependencyinjectiontestexecutionlistenerreinjectdependenciesattribute reinjectdependenciesattribute test context set true
current test method supplied plain testcontext test context annotated dirtiescontext plain dirtiescontextmethodmode method mode set methodmodeaftermethod aftermethod test class annotated dirtiescontext plain dirtiescontextclassmode class mode set classmodeaftereachtestmethod aftereachtestmethod plain applicationcontext application context test context plain testcontextmarkapplicationcontextdirty marked dirty dependencyinjectiontestexecutionlistenerreinjectdependenciesattribute reinjectdependenciesattribute test context set true
returns 3000
ensure supplied mergedcontextconfiguration contain mergedcontextconfigurationgetclasses classes 404 abstractgenericcontextloadervalidatemergedcontextconfiguration
create new xmlbeandefinitionreader new xmlbeandefinitionreader
returns contextxml order support detection default xml config file
default implementation returns orderedlowestprecedence thereby ensuring custom listeners ordered default listeners supplied framework overridden subclasses necessary 41
resolve set merged applicationcontextinitializer classes supplied list contextconfigurationattributes note contextconfigurationinheritinitializers inheritinitializers flag contextconfiguration contextconfiguration taken consideration specifically inheritinitializers flag set true given level class hierarchy represented provided configuration attributes context initializer classes defined given level merged defined higher levels class hierarchy configattributeslist list configuration attributes process must null empty must ordered bottomup ie traversing class hierarchy set merged context initializer classes including superclasses appropriate never null 32
current test method supplied plain testcontext test context annotated dirtiescontext plain dirtiescontextmethodmode method mode set methodmodebeforemethod beforemethod test class annotated dirtiescontext plain dirtiescontextclassmode class mode set classmodebeforeeachtestmethod beforeeachtestmethod plain applicationcontext application context test context plain testcontextmarkapplicationcontextdirty marked dirty dependencyinjectiontestexecutionlistenerreinjectdependenciesattribute reinjectdependenciesattribute test context set true
test class supplied plain testcontext test context annotated dirtiescontext plain dirtiescontextclassmode class mode set classmodebeforeclass beforeclass plain applicationcontext application context test context plain testcontextmarkapplicationcontextdirty marked dirty dependencyinjectiontestexecutionlistenerreinjectdependenciesattribute reinjectdependenciesattribute test context set true
returns 1500
annotationconfigcontextloader used orgspringframeworktestcontextsmartcontextloader smartcontextloader legacy orgspringframeworktestcontextcontextloader contextloader consequently method supported unsupportedoperationexception implementation abstractcontextloadergetresourcesuffix
annotationconfigcontextloader used orgspringframeworktestcontextsmartcontextloader smartcontextloader legacy orgspringframeworktestcontextcontextloader contextloader consequently method supported unsupportedoperationexception implementation loadbeandefinitions abstractgenericcontextloadercreatebeandefinitionreader
register classes supplied genericapplicationcontext context classes supplied mergedcontextconfiguration each class must represent annotated class annotatedbeandefinitionreader used register appropriate bean definitions note method call createbeandefinitionreader since annotatedbeandefinitionreader instance beandefinitionreader context context annotated classes registered mergedconfig merged configuration classes retrieved abstractgenericcontextloaderloadbeandefinitions
process annotated classes supplied contextconfigurationattributes if annotated classes null empty isgeneratedefaultlocations returns true smartcontextloader attempt detectdefaultconfigurationclasses detect default configuration classes defaults detected contextconfigurationattributessetclassesclass set supplied configuration attributes otherwise properties supplied configuration attributes modified configattributes context configuration attributes process orgspringframeworktestcontextsmartcontextloaderprocesscontextconfigurationcontextconfigurationattributes isgeneratedefaultlocations detectdefaultconfigurationclassesclass
ensure supplied mergedcontextconfiguration contain mergedcontextconfigurationgetlocations locations 404 abstractgenericcontextloadervalidatemergedcontextconfiguration
annotationconfigcontextloader used orgspringframeworktestcontextsmartcontextloader smartcontextloader legacy orgspringframeworktestcontextcontextloader contextloader consequently method supported unsupportedoperationexception implementation abstractcontextloadergeneratedefaultlocations
annotationconfigcontextloader used orgspringframeworktestcontextsmartcontextloader smartcontextloader legacy orgspringframeworktestcontextcontextloader contextloader consequently method supported unsupportedoperationexception implementation abstractcontextloadermodifylocations
build context hierarchy map supplied plain class test class superclasses taking account context hierarchies declared via contexthierarchy contexthierarchy contextconfiguration contextconfiguration each value map represents consolidated list plain contextconfigurationattributes context configuration attributes given level context hierarchy potentially across test class hierarchy keyed contextconfigurationname name context hierarchy level if given level context hierarchy explicit name ie configured via contextconfigurationname name generated hierarchy level appending numerical level generatedcontexthierarchylevelprefix testclass class resolve context hierarchy map must null map context configuration attributes context hierarchy keyed context hierarchy level name never null illegalargumentexception lists context configuration attributes level contexthierarchy define unique context configuration within overall hierarchy 322 resolvecontexthierarchyattributesclass
convenience method creating contextconfigurationattributes instance supplied contextconfiguration annotation declaring class adding attributes supplied list
resolve list lists plain contextconfigurationattributes context configuration attributes supplied plain class test class superclasses taking account context hierarchies declared via contexthierarchy contexthierarchy contextconfiguration contextconfiguration the outer list represents topdown ordering context configuration attributes element list represents context configuration declared given test class class hierarchy nested list contains context configuration attributes declared either via single instance contextconfiguration particular class via multiple instances contextconfiguration declared within single contexthierarchy instance particular class furthermore nested list maintains order contextconfiguration instances declared note contextconfigurationinheritlocations inheritlocations contextconfigurationinheritinitializers inheritinitializers flags contextconfiguration contextconfiguration not taken consideration flags need honored must handled manually traversing nested lists returned method testclass class resolve context hierarchy attributes must null list lists configuration attributes specified class never null illegalargumentexception supplied class null neither contextconfiguration contexthierarchy present supplied class illegalstateexception test class composed annotation class hierarchy declares contextconfiguration contexthierarchy toplevel annotations 322 buildcontexthierarchymapclass resolvecontextconfigurationattributesclass
resolve list plain contextconfigurationattributes context configuration attributes supplied plain class test class superclasses note contextconfigurationinheritlocations inheritlocations contextconfigurationinheritinitializers inheritinitializers flags contextconfiguration contextconfiguration not taken consideration flags need honored must handled manually traversing list returned method testclass class resolve configuration attributes must null list configuration attributes specified class ordered bottomup ie traversing class hierarchy never null illegalargumentexception supplied class null contextconfiguration present supplied class
delegates appropriate candidate smartcontextloader load applicationcontext delegation based explicit knowledge implementations default loaders plain getxmlloader xml configuration files groovy scripts plain getannotationconfigloader annotated classes specifically delegation algorithm follows if resource locations supplied mergedcontextconfiguration empty annotated classes empty xmlbased loader load applicationcontext if annotated classes supplied mergedcontextconfiguration empty resource locations empty annotationbased loader load applicationcontext mergedconfig merged context configuration use load application context illegalargumentexception supplied merged configuration null illegalstateexception neither candidate loader capable loading applicationcontext supplied merged context configuration
abstractdelegatingsmartcontextloader support contextloaderloadcontextstring method call loadcontextmergedcontextconfiguration instead unsupportedoperationexception implementation
delegates candidate smartcontextloaders process supplied contextconfigurationattributes delegation based explicit knowledge implementations default loaders plain getxmlloader xml configuration files groovy scripts plain getannotationconfigloader annotated classes specifically delegation algorithm follows if resource locations annotated classes supplied contextconfigurationattributes empty appropriate candidate loader allowed process configuration as is without checks detection defaults otherwise xmlbased loader allowed process configuration order detect default resource locations xmlbased loader detects default resource locations info message logged subsequently annotationbased loader allowed process configuration order detect default configuration classes annotationbased loader detects default configuration classes info message logged configattributes context configuration attributes process illegalargumentexception supplied configuration attributes null supplied configuration attributes include resource locations annotated classes illegalstateexception xmlbased loader detects default configuration classes annotationbased loader detects default resource locations neither candidate loader detects defaults supplied context configuration candidate loaders detect defaults supplied context configuration
abstractdelegatingsmartcontextloader support contextloaderprocesslocationsclass string method call processcontextconfigurationcontextconfigurationattributes instead unsupportedoperationexception implementation
performs dependency injection testcontextgettestinstance test instance supplied testcontext test context autowirecapablebeanfactoryautowirebeanpropertiesobject int boolean autowiring autowirecapablebeanfactoryinitializebeanobject string initializing test instance via testcontextgetapplicationcontext application context without checking dependencies the reinjectdependenciesattribute subsequently removed test context regardless value
returns 2000
performs dependency injection bean initialization supplied testcontext described preparetestinstancetestcontext preparetestinstance the reinjectdependenciesattribute subsequently removed test context regardless value testcontext test context dependency injection performed never null exception allows exception propagate preparetestinstancetestcontext beforetestmethodtestcontext
reinjectdependenciesattribute supplied testcontext test context value booleantrue method effect preparetestinstancetestcontext preparetestinstance otherwise method effect
add properties files given resource locations environment supplied context this method simply delegates addpropertiesfilestoenvironmentconfigurableenvironment resourceloader string context application context whose environment updated never null locations resource locations properties files add environment potentially empty never null illegalstateexception error occurs processing properties file 415 resourcepropertysource testpropertysourcelocations addpropertiesfilestoenvironmentconfigurableenvironment resourceloader string
add given inlined properties in form keyvalue pairs supplied configurableenvironment environment all keyvalue pairs added environment single mappropertysource highest precedence for details parsing inlined properties consult javadoc convertinlinedpropertiestomap environment environment update never null inlinedproperties inlined properties add environment potentially empty never null 415 mappropertysource inlinedpropertiespropertysourcename testpropertysourceproperties convertinlinedpropertiestomap
convert supplied inlined properties in form keyvalue pairs map keyed property name preserving ordering property names returned map parsing keyvalue pairs achieved converting pairs virtual properties files memory delegating propertiesloadjavaioreader parse virtual file for full discussion inlined properties consult javadoc testpropertysourceproperties inlinedproperties inlined properties convert potentially empty never null new ordered map containing converted properties illegalstateexception given keyvalue pair cannot parsed given inlined property contains multiple keyvalue pairs 415 addinlinedpropertiestoenvironmentconfigurableenvironment string
add properties files given resource locations supplied configurableenvironment environment property placeholders resource locations ie plain environmentresolverequiredplaceholdersstring resolved environment each properties file converted resourcepropertysource added propertysources environment highest precedence environment environment update never null resourceloader resourceloader use load resource never null locations resource locations properties files add environment potentially empty never null illegalstateexception error occurs processing properties file 43 resourcepropertysource testpropertysourcelocations addpropertiesfilestoenvironmentconfigurableapplicationcontext string
add given inlined properties environment supplied context this method simply delegates addinlinedpropertiestoenvironmentconfigurableenvironment string context application context whose environment updated never null inlinedproperties inlined properties add environment potentially empty never null 415 testpropertysourceproperties addinlinedpropertiestoenvironmentconfigurableenvironment string
mark plain applicationcontext application context supplied plain testcontext test context plain testcontextmarkapplicationcontextdirtydirtiescontexthierarchymode dirty set dependencyinjectiontestexecutionlistenerreinjectdependenciesattribute reinjectdependenciesattribute test context true testcontext test context whose application context marked dirty hierarchymode context cache clearing mode applied context part hierarchy may null 322
perform actual work beforetestmethod aftertestmethod dirtying context appropriate ie according required modes testcontext test context whose application context potentially marked dirty never null requiredmethodmode method mode required context marked dirty current phase never null requiredclassmode class mode required context marked dirty current phase never null exception allows exception propagate 42 dirtycontext
perform actual work beforetestclass aftertestclass dirtying context appropriate ie according required mode testcontext test context whose application context potentially marked dirty never null requiredclassmode class mode required context marked dirty current phase never null exception allows exception propagate 42 dirtycontext
detect default properties file supplied class specified classlevel javadoc testpropertysource
get inlined properties declared via testpropertysource inlined properties potentially null empty testpropertysourceproperties
provide string representation testpropertysource attributes declaring class
create new testpropertysourceattributes instance supplied testpropertysource testpropertysource annotation plain class test class declared it enforcing configuration rules detecting default properties file necessary declaringclass class declared testpropertysource testpropertysource annotation retrieve attributes 42
convert supplied paths classpath resource paths for supplied paths a plain path example contextxml treated classpath resource relative package specified class defined a path starting slash treated absolute path within classpath example orgexampleschemasql a path prefixed url protocol eg resourceutilsclasspathurlprefix classpath resourceutilsfileurlprefix file http etc stringutilscleanpath cleaned otherwise unmodified clazz class paths associated paths paths converted new array converted resource paths converttoresources
retrieve datasource use supplied plain testcontext test context the following algorithm used retrieve datasource orgspringframeworkcontextapplicationcontext applicationcontext supplied test context look datasource type name supplied name nonempty throwing beansexception named datasource exist attempt look single datasource type attempt look primary datasource type attempt look datasource type plain defaultdatasourcename default data source name testcontext test context datasource retrieved never null name name datasource retrieve may null empty datasource use null found beansexception error occurs retrieving explicitly named datasource
retrieve plain platformtransactionmanager transaction manager use supplied plain testcontext test context the following algorithm used retrieve transaction manager orgspringframeworkcontextapplicationcontext applicationcontext supplied test context look transaction manager type explicit name supplied name nonempty throwing beansexception named transaction manager exist attempt look single transaction manager type attempt look primary transaction manager type attempt look transaction manager via transactionmanagementconfigurer present attempt look transaction manager type plain defaulttransactionmanagername default transaction manager name testcontext test context transaction manager retrieved never null name name transaction manager retrieve may null empty transaction manager use null found beansexception error occurs retrieving explicitly named transaction manager illegalstateexception one transactionmanagementconfigurer exists applicationcontext
create delegating transactionattribute supplied target transactionattribute testcontext using names test class test method build name transaction testcontext testcontext upon base name targetattribute transactionattribute delegate delegating transactionattribute
determine whether testmanaged transaction currently active true testmanaged transaction currently active start end
start new transaction configured test context only call method endtransaction called transaction previously started transactionexception starting transaction fails
immediately force commit rollback transaction configured test context according plain isflaggedforrollback rollback flag
returns 4000
run aftertransaction aftertransaction methods specified plain testcontext test context one methods fails caught exception logged error remaining methods given chance execute methods executed first caught exception any rethrown testcontext current test context
determine whether rollback transactions supplied plain testcontext test context taking consideration plain isdefaultrollbacktestcontext default rollback flag possible methodlevel override via rollback rollback annotation testcontext test context rollback flag retrieved rollback flag supplied test context exception error occurs determining rollback flag
get methods supplied class class superclasses annotated supplied annotationtype shadowed methods overridden subclasses default methods interfaces also detected clazz class retrieve annotated methods annotationtype annotation type search annotated methods supplied class superclasses well annotated interface default methods
transaction currently active supplied plain testcontext test context method end transaction run aftertransaction aftertransaction methods aftertransaction methods guaranteed invoked even error occurs ending transaction
test method supplied plain testcontext test context configured run within transaction method run beforetransaction beforetransaction methods start new transaction note beforetransaction method fails remaining beforetransaction methods invoked transaction started orgspringframeworktransactionannotationtransactional gettransactionmanagertestcontext string
run beforetransaction beforetransaction methods specified plain testcontext test context one methods fails however caught exception rethrown wrapped runtimeexception remaining methods not given chance execute testcontext current test context
determine whether rollback transactions default supplied plain testcontext test context supports rollback rollback commit commit classlevel testcontext test context default rollback flag retrieved default rollback flag supplied test context exception error occurs determining default rollback flag
get plain platformtransactionmanager transaction manager use supplied plain testcontext test context the default implementation simply delegates testcontexttransactionutilsretrievetransactionmanager testcontext test context transaction manager retrieved transaction manager use null found beansexception error occurs retrieving explicitly named transaction manager illegalstateexception one transactionmanagementconfigurer exists applicationcontext gettransactionmanagertestcontext string
get plain platformtransactionmanager transaction manager use supplied plain testcontext test context qualifier delegates gettransactionmanagertestcontext supplied qualifier null empty testcontext test context transaction manager retrieved qualifier qualifier selecting multiple bean matches may null empty transaction manager use null found beansexception error occurs retrieving transaction manager gettransactionmanagertestcontext
provide string representation merged sql script configuration
construct mergedsqlconfig instance merging configuration supplied local potentially methodlevel sqlconfig annotation classlevel configuration discovered supplied testclass local configuration overrides classlevel configuration if test class annotated sqlconfig merging takes place local configuration used as is
detect default sql script implementing algorithm defined sqlscripts
returns 5000
execute sql scripts configured via supplied sql sql annotation given executionphase testcontext special care must taken order properly support configured sqlconfigtransactionmode sql sql annotation parse executionphase current execution phase testcontext current testcontext classlevel true sql sql declared class level
execute sql scripts configured via sql sql supplied testcontext executionphase
execute sql scripts configured via sql sql supplied testcontext after current test method
execute sql scripts configured via sql sql supplied testcontext before current test method
determine supplied testclass enabled current environment specified ifprofilevalue ifprofilevalue annotation class level defaults true ifprofilevalue ifprofilevalue annotation declared testclass test class true test enabled current environment
determine supplied testmethod enabled current environment specified ifprofilevalue ifprofilevalue annotation may declared test method class level classlevel usage overrides methodlevel usage defaults true ifprofilevalue ifprofilevalue annotation declared profilevaluesource profilevaluesource use determine test enabled testmethod test method testclass test class true test enabled current environment
determine value or one values supplied ifprofilevalue ifprofilevalue annotation enabled current environment profilevaluesource profilevaluesource use determine test enabled ifprofilevalue annotation introspect may null true test enabled current environment supplied ifprofilevalue null
retrieves profilevaluesource type specified class test class configured via profilevaluesourceconfiguration profilevaluesourceconfiguration annotation instantiates new instance type if profilevaluesourceconfiguration profilevaluesourceconfiguration present specified class custom profilevaluesource declared default systemprofilevaluesource returned instead testclass test class profilevaluesource retrieved configured or default profilevaluesource specified class systemprofilevaluesource
get profile value indicated specified key system properties systemgetpropertystring
get timeout configured via timed timed annotation supplied method negative configured values converted 0 configured timeout 0 method annotated timed
get repeat count configured via repeat repeat annotation supplied method nonnegative configured values converted 1 configured repeat count 1 method annotated repeat
apply xpath expression assert resulting content integer exception content parsing expression evaluation fails
apply xpath expression assert resulting content given hamcrest matcher exception content parsing expression evaluation fails
apply xpath expression assert resulting content string exception content parsing expression evaluation fails
apply xpath expression assert resulting content given hamcrest matcher exception content parsing expression evaluation fails
apply xpath expression assert resulting content given hamcrest matcher exception content parsing expression evaluation fails
parse given xml content document xml content parse encoding optional content encoding provided metadata eg http headers parsed document
xpathexpectationshelper constructor expression xpath expression namespaces xml namespaces referenced xpath expression null args arguments parameterize xpath expression using formatting specifiers defined stringformatstring object xpathexpressionexception expression compilation failed
apply xpath expression assert resulting content double exception content parsing expression evaluation fails
apply xpath expression given document xpathexpressionexception expression evaluation failed
apply xpath expression assert resulting content exists exception content parsing expression evaluation fails
apply xpath expression assert resulting content exist exception content parsing expression evaluation fails
evaluate xpath return resulting value content content evaluate encoding encoding use optionally targetclass target class one number string boolean orgw3cnode nodelist exception content parsing expression evaluation fails 51
parse content evaluate xpath expression node assert given matcher
apply xpath expression assert resulting content boolean exception content parsing expression evaluation fails
parse expected actual content strings xml assert two similar ie contain elements attributes regardless order use method assumes hrefhttpsgithubcomxmlunitxmlunitxmlunit library available expected expected xml content actual actual xml content orgspringframeworktestwebservletresultmockmvcresultmatchersxpathstring object orgspringframeworktestwebservletresultmockmvcresultmatchersxpathstring map object
parse content domsource apply matcher hrefhttpsgithubcomdavidehringerxmlmatchersxmlmatchers
parse content node apply matcher
throws unsupportedoperationexception since type annotation represented getannotationattributes annotationattributes untypedannotationdescriptor unknown 42
provide textual representation annotationdescriptor
find annotationdescriptor supplied annotationtype supplied class traversing annotations interfaces superclasses annotation found given class itself this method explicitly handles classlevel annotations declared plain javalangannotationinherited inherited as well metaannotations the algorithm operates follows search annotation given class return corresponding annotationdescriptor found recursively search annotations given class declares recursively search interfaces implemented given class recursively search superclass hierarchy given class in context term recursively means search process continues returning step 1 current annotation interface superclass class look annotations on clazz class look annotations annotationtype type annotation look corresponding annotation descriptor annotation found otherwise null annotationutilsfindannotationdeclaringclassclass class findannotationdescriptorfortypesclass class
perform search algorithm findannotationdescriptorclass class avoiding endless recursion tracking annotations already visited clazz class look annotations visited set annotations already visited annotationtype type annotation look corresponding annotation descriptor annotation found otherwise null
find untypedannotationdescriptor first class inheritance hierarchy specified clazz including specified clazz itself declares least one specified annotationtypes this method traverses annotations interfaces superclasses specified clazz annotation found given class itself this method explicitly handles classlevel annotations declared plain javalangannotationinherited inherited as well metaannotations the algorithm operates follows search local declaration one annotation types given class return corresponding untypedannotationdescriptor found recursively search annotations given class declares recursively search interfaces implemented given class recursively search superclass hierarchy given class in context term recursively means search process continues returning step 1 current annotation interface superclass class look annotations on clazz class look annotations annotationtypes types annotations look corresponding annotation descriptor one annotations found otherwise null annotationutilsfindannotationdeclaringclassfortypesjavautillist class findannotationdescriptorclass class
perform search algorithm findannotationdescriptorfortypesclass class avoiding endless recursion tracking annotations already visited clazz class look annotations visited set annotations already visited annotationtypes types annotations look corresponding annotation descriptor one annotations found otherwise null
synthesize merged getannotationattributes annotationattributes descriptor back annotation target plain getannotationtype annotation type 42 getannotationattributes getannotationtype annotationutilssynthesizeannotationjavautilmap class javalangreflectannotatedelement
invoke setter method given name supplied target object supplied value this method traverses class hierarchy search desired method addition attempt made make non public methods accessible thus allowing one invoke protected private packageprivate setter methods in addition method supports javabeanstyle property names example wish set name property target object may pass either name setname method name target target object invoke specified setter method name name setter method invoke corresponding property name value value provide setter method type formal parameter type declared setter method reflectionutilsfindmethodclass string class reflectionutilsmakeaccessiblemethod reflectionutilsinvokemethodmethod object object
set static plain field field given name type provided targetclass supplied value this method delegates setfieldobject class string object class supplying null targetobject argument targetclass target class set static field never null name name field set may null type specified value value set type type field set may null name specified 42
get value plain field field given name provided targetobject targetclass if supplied targetobject proxy plain aoptestutilsgetultimatetargetobject unwrapped allowing field retrieved ultimate target proxy this method traverses class hierarchy search desired field addition attempt made make non public fields accessible thus allowing one get protected private packageprivate fields targetobject target object get field may null field static targetclass target class get field may null field instance field name name field get never null fields current value 42 getfieldobject string getfieldclass string reflectionutilsfindfieldclass string class reflectionutilsmakeaccessiblefield reflectionutilsgetfieldfield object aoptestutilsgetultimatetargetobjectobject
set plain field field given name type provided targetobject targetclass supplied value if supplied targetobject proxy plain aoptestutilsgetultimatetargetobject unwrapped allowing field set ultimate target proxy this method traverses class hierarchy search desired field addition attempt made make non public fields accessible thus allowing one set protected private packageprivate fields targetobject target object set field may null field static targetclass target class set field may null field instance field name name field set may null type specified value value set type type field set may null name specified 42 reflectionutilsfindfieldclass string class reflectionutilsmakeaccessiblefield reflectionutilssetfieldfield object object aoptestutilsgetultimatetargetobjectobject
invoke getter method given name supplied target object supplied value this method traverses class hierarchy search desired method addition attempt made make non public methods accessible thus allowing one invoke protected private packageprivate getter methods in addition method supports javabeanstyle property names example wish get name property target object may pass either name getname method name target target object invoke specified getter method name name getter method invoke corresponding property name value returned invocation reflectionutilsfindmethodclass string class reflectionutilsmakeaccessiblemethod reflectionutilsinvokemethodmethod object object
get value plain field field given name provided targetobject this method delegates getfieldobject class string supplying null targetclass argument targetobject target object get field never null name name field get never null fields current value getfieldclass string
get value static plain field field given name provided targetclass this method delegates getfieldobject class string supplying null targetobject argument targetclass target class get static field never null name name field get never null fields current value 42 getfieldobject string
invoke method given name supplied target object supplied arguments this method traverses class hierarchy search desired method addition attempt made make non public methods accessible thus allowing one invoke protected private packageprivate methods target target object invoke specified method name name method invoke args arguments provide method invocation result methodinvoker reflectionutilsmakeaccessiblemethod reflectionutilsinvokemethodmethod object object reflectionutilshandlereflectionexceptionexception
assert two objects equal raise assertionerror otherwise for example classcode assertnotequalsresponse header name expected actual message describes value checked expected expected value actual actual value
assert given condition true raise assertionerror not message message condition condition test
assert two objects equal raise assertionerror not for example classcode assertequalsresponse header name expected actual message describes value checked expected expected value actual actual value
get target object supplied candidate object if supplied candidate spring plain aoputilsisaopproxy proxy target proxy returned otherwise candidate returned as is candidate instance check potentially spring aop proxy never null target object candidate never null illegalstateexception error occurs unwrapping proxy advisedgettargetsource getultimatetargetobject
get ultimate target object supplied candidate object unwrapping toplevel proxy also number nested proxies if supplied candidate spring plain aoputilsisaopproxy proxy ultimate target nested proxies returned otherwise candidate returned as is candidate instance check potentially spring aop proxy never null target object candidate never null illegalstateexception error occurs unwrapping proxy advisedgettargetsource orgspringframeworkaopframeworkaopproxyutilsultimatetargetclass
variant evaluatejsonpathstring target type useful matching numbers reliably example coercing integer double content content evaluate result evaluation assertionerror evaluation fails
evaluate json path expression supplied content assert result equal expected value content json content expectedvalue expected value
evaluate json path expression supplied content assert value possibly null exists if json path expression plain jsonpathisdefinite definite method asserts list values given path empty content json content 503
evaluate json path expression supplied content assert resulting value string content json content 421
evaluate json path expression supplied content assert empty value exists given path for semantics empty consult javadoc objectutilsisemptyobject content json content
evaluate json path expression supplied content assert resulting value number content json content 421
evaluate json path expression supplied content assert resulting value map content json content 421
evaluate json path expression supplied content assert resulting value given matcher content json content matcher matcher assert result
evaluate json path expression supplied content assert nonnull value exist given path note json path expression plain jsonpathisdefinite definite method asserts list values given path empty content json content
evaluate json path expression supplied content assert value including null values exist given path if json path expression plain jsonpathisdefinite definite method asserts list values given path empty content json content 503
evaluate json path expression supplied content assert nonempty value exists given path for semantics empty consult javadoc objectutilsisemptyobject content json content
evaluate json path expression supplied content assert resulting value boolean content json content 421
evaluate json path expression supplied content assert resulting value array content json content
construct new jsonpathexpectationshelper expression jsonpath expression never null empty args arguments parameterize jsonpath expression with using formatting specifiers defined stringformatstring object
evaluate json path return resulting value content content evaluate result evaluation assertionerror evaluation fails
overloaded variant assertvaluestring matcher also accepts target type resulting value useful matching numbers reliably example coercing integer double content json content matcher matcher assert result targettype expected type resulting value 433
count rows given table using provided where clause if provided where clause contains text prefixed appended generated select statement example provided table name person provided clause name bob age 25 resulting sql statement execute select count0 person name bob age 25 jdbctemplate jdbctemplate perform jdbc operations tablename name table count rows whereclause where clause append query number rows table match provided where clause
delete rows given table using provided where clause if provided where clause contains text prefixed appended generated delete statement example provided table name person provided clause name bob age 25 resulting sql statement execute delete person name bob age 25 as alternative hardcoded values placeholder used within where clause binding given arguments jdbctemplate jdbctemplate perform jdbc operations tablename name table delete rows whereclause where clause append query args arguments bind query leaving preparedstatement guess corresponding sql type may also contain sqlparametervalue objects indicate argument value also sql type optionally scale number rows deleted table
drop specified tables jdbctemplate jdbctemplate perform jdbc operations tablenames names tables drop
count rows given table jdbctemplate jdbctemplate perform jdbc operations tablename name table count rows number rows table
delete rows specified tables jdbctemplate jdbctemplate perform jdbc operations tablenames names tables delete total number rows deleted specified tables
return headers
return body content
return body content string charset charset use turn body content string
alternative methodhttpmethod uri accepts uri template given uri may contain query parameters may added later via basebuilderqueryparam queryparam builder methods method http method get post etc urltemplate url template vars variables expand template created builder
aggregate response data convert string using contenttype charset utf8 default
configure custom handler consume response body by default response body content consumed full cached subsequent access tests use option take control response body consumed writehandler write handler use returning mono body written ie consumed
constructor response body inputstream
constructor response body byte array
default implementation returns configured setresponseclienthttpresponse response override method execute request provide response potentially different configured response
default constructor
set isexecuted executed flag true return configured setresponseclienthttpresponse response executeinternal
create instance given httpmethod uri
return response body aggregated converted string using charset contenttype response otherwise utf8
aggregate response data convert string using contenttype charset utf8 default
configure custom handler writing request body the default write handler consumes caches request body may accessed subsequently eg test assertions use property request body infinite stream writehandler write handler use returning mono body written ie consumed
convenient synonym setproperty returns current instance useful method chaining fluentstyle use mockpropertysource instance
convenient synonym setproperty returns current instance useful method chaining fluentstyle use mockenvironment instance mockpropertysourcewithproperty
create mockbodycontent given response content body content expose response servlet response wrap targetwriter target writer wrap
lazily initialize target writer
create mockjspwriter given response response servlet response wrap targetwriter target writer wrap
find headervalueholder name ignoring casing headers map header names headervalueholders name name desired header corresponding headervalueholder null none found
create new mockfilterconfig servletcontext servletcontext servlet runs filtername name filter
constructor part filename byte content getheaders
create new passthroughfilterchain delegates given servlet servlet servlet delegate
create new passthroughfilterchain delegates given filter calling given filterchain filter filter delegate nextfilterchain filterchain use next filter
pass call filterservlet
create delegatingservletoutputstream given target stream targetstream target stream never null
deserialize attributes session state object created serializestate state representation sessions serialized state
servlet 31 id session changed new session id 403
serialize attributes session object turned byte array standard java serialization representation sessions serialized state
invalidates session unbinds objects bound it illegalstateexception method called already invalidated session
create new mockhttpsession servletcontext servletcontext session runs id unique identifier session
clear sessions attributes
create new mockservletcontext using supplied resource base path resource loader registers mockrequestdispatcher servlet named literal default resourcebasepath root directory war should end slash resourceloader resourceloader use or null default registernameddispatcher
set name default servlet also unregisternameddispatcher unregisters current default requestdispatcher registernameddispatcher replaces mockrequestdispatcher provided defaultservletname defaultservletname name default servlet never null empty getdefaultservletname
register requestdispatcher typically mockrequestdispatcher acts wrapper named servlet name name wrapped servlet requestdispatcher dispatcher wraps named servlet getnameddispatcher unregisternameddispatcher
method always returns null javaxservletservletcontextgetservletregistrationjavalangstring
method always returns plain collectionsemptymap empty map javaxservletservletcontextgetservletregistrations
method always returns plain collectionsemptymap empty map javaxservletservletcontextgetfilterregistrations
build full resource location given path prepending resource base path mockservletcontext path path specified full resource path
unregister requestdispatcher given name name name dispatcher unregister getnameddispatcher registernameddispatcher
method always returns null javaxservletservletcontextgetfilterregistrationjavalangstring
adds mime type mapping use getmimetypestring fileextension file extension txt gif mimetype mime type
create new mockservletconfig servletcontext servletcontext servlet runs servletname name servlet
create new mockservletconfig servletcontext servletcontext jsp page runs request current httpservletrequest response current httpservletresponse servletconfig servletconfig hardly ever accessed within tag
create new mockpagecontext mockservletconfig servletcontext servletcontext jsp page runs request current httpservletrequest response current httpservletresponse only necessary actually writing response
create new mockmultipartfile given content name name file originalfilename original filename as clients machine contenttype content type if known content content file
create new mockmultipartfile given content name name file originalfilename original filename as clients machine contenttype content type if known contentstream content file stream ioexception reading stream failed
create new mockmultiparthttpservletrequest supplied servletcontext servletcontext servletcontext request runs may null use default mockservletcontext
add file request parameter name multipart form taken multipartfilegetname file multipart file added
invoke registered filter filters andor servlet also saving request response
reset mockfilterchain allowing invoked again
return request dofilter called with
return response dofilter called with
create filterchain filters servlet servlet servlet invoke filterchain filters filters invoke filterchain 32
return primary value given header any will return first value case multiple values name name header associated header value null none
return values given header list strings as servlet 30 method also defined httpservletresponse spring 31 returns list stringified values servlet 30 compatibility consider using getheadervaluesstring raw object access name name header associated header values empty list none
return primary value given header string any return first value case multiple values as servlet 30 method also defined httpservletresponse spring 31 returns stringified value servlet 30 compatibility consider using getheadervaluestring raw object access name name header associated header value null none
default implementation delegates encodeurl returning given url string asis can overridden subclasses appending session id like redirectspecific fashion general url encoding rules override common encodeurl method instead applying redirect urls well general urls
return names specified headers set strings as servlet 30 method also defined httpservletresponse set header name strings empty set none
default implementation returns given url string asis can overridden subclasses appending session id like
return values given header list value objects name name header associated header values empty list none
obtain underlying mockhttpservletresponse unwrapping httpservletresponsewrapper decorators necessary
create new mockrequestdispatcher given resource resource server resource dispatch to located particular path given particular name
return servletcontext request associated with not available standard httpservletrequest interface reason
remove already registered values specified http parameter any
add array values specified http parameter if already one values registered given parameter name given values added end list
add provided parameters without replacing existing values replace existing values use setparametersjavautilmap
set list preferred locales descending order effectively replacing existing locales 32 addpreferredlocale
set content request body byte array if supplied byte array represents text xml json setcharacterencoding character encoding typically set well setcharacterencodingstring getcontentasbytearray getcontentasstring
set provided parameters replacing existing values provided parameter names add without replacing existing values use addparametersjavautilmap
return long timestamp date header given name if internal value representation string method try parse date using supported date formats eee dd mmm yyyy hhmmss zzz eee ddmmmyy hhmmss zzz eee mmm dd hhmmss yyyy name header name hrefhttpstoolsietforghtmlrfc7231section7111section 7111 rfc 7231
add http header entry given name while method take object parameter recommended use following types string object converted using tostring see getheader string number date date headers see getdateheader string number integer headers see getintheader string collection multiple values see getheaders getheadernames getheaders getheader getdateheader
get content request body string using configured plain getcharacterencoding character encoding content string potentially null illegalstateexception character encoding set unsupportedencodingexception character encoding supported 50 setcontentbyte setcharacterencodingstring getcontentasbytearray
get content request body byte array content byte array potentially null 50 setcontentbyte getcontentasstring
add new preferred locale existing locales setpreferredlocales
invalidate request clearing state
set array values specified http parameter if already one values registered given parameter name replaced
return first preferred plain locale locale configured mock request if locales explicitly configured default preferred locale server mocked request localeenglish in contrast servlet specification mock implementation not take consideration locales specified via acceptlanguage header javaxservletservletrequestgetlocale addpreferredlocalelocale setpreferredlocaleslist
remove already registered entries specified http header any 4320
implementation servlet 31 method calls mockhttpsessionchangesessionid session mock session otherwise simply returns current session id 403
return true setsecure secure flag set true getscheme scheme https javaxservletservletrequestissecure
create new mockhttpservletrequest supplied servletcontext method requesturi the preferred locale set localeenglish servletcontext servletcontext request runs may null use default mockservletcontext method request method may null requesturi request uri may null setmethod setrequesturi setpreferredlocales mockservletcontext
return plain enumeration enumeration preferred plain locale locales configured mock request if locales explicitly configured default preferred locale server mocked request localeenglish in contrast servlet specification mock implementation not take consideration locales specified via acceptlanguage header javaxservletservletrequestgetlocales addpreferredlocalelocale setpreferredlocaleslist
default set 10000 10 seconds even though servlet api specifies default async request timeout 30 seconds keep mind timeout could impacted global configuration mvc java config xml namespace well overridden per request orgspringframeworkwebcontextrequestasyncdeferredresult deferredresult orgspringframeworkwebservletmvcmethodannotationsseemitter sseemitter timeout timeout value use asynccontextsettimeoutlong
return samesite attribute null set
factory method parses value setcookie header setcookieheader setcookie value never null empty created cookie
create delegatingservletinputstream given source stream sourcestream source stream never null
set session use exchange this method mutually exclusive sessionmanagerwebsessionmanager session session use mockwebsession
build mockserverwebexchange instance
provide websessionmanager instance use exchange this mutually exclusive sessionwebsession sessionmanager session manager use
name expected name specified constructor return object provided constructor name unexpected respective namingexception gets thrown
create new naming context given naming root given nameobject map jndi environment entries
create new naming context given naming root
bind given object given name note intended direct use applications setting jvmlevel jndi environment use simplenamingcontextbuilder set jndi bindings then orgspringframeworkmockjndisimplenamingcontextbuilderbind
look object given name note intended direct use applications used standard initialcontext jndi lookups javaxnamingnamenotfoundexception object could found
bind given object given name naming contexts context builder generate name jndi name object eg javacompenvjdbcmyds obj object bind eg datasource implementation
register context builder registering jndi namingmanager note done new initialcontext always return context factory use emptyactivatedcontextbuilder static method get empty context for example test methods illegalstateexception theres already naming context builder registered jndi namingmanager
simple initialcontextfactorybuilder implementation creating new simplenamingcontext instance simplenamingcontext
simplenamingcontextbuilder already configuring jndi create activate one otherwise take existing activated simplenamingcontextbuilder clear return it this mainly intended test suites want reinitialize jndi bindings scratch repeatedly empty simplenamingcontextbuilder used control jndi bindings
checks simplenamingcontextbuilder active current simplenamingcontextbuilder instance null none
temporarily deactivate context builder remain registered jndi namingmanager delegate standard jndi initialcontextfactory if configured instead exposing bound objects call activate order expose context builders bound objects again activatedeactivate sequences applied number times eg within larger integration test suite running vm activate
return custom webapplicationcontext id any
delegate options requests processrequest desired applies httpservlets standard options processing otherwise also still allow header set dispatching doservice
specify applicationcontextinitializer instances used initialize application context used frameworkservlet configureandrefreshwebapplicationcontext applyinitializers
initialize publish webapplicationcontext servlet delegates createwebapplicationcontext actual creation context overridden subclasses webapplicationcontext instance frameworkservletwebapplicationcontext setcontextclass setcontextconfiglocation
close webapplicationcontext servlet orgspringframeworkcontextconfigurableapplicationcontextclose
callback receives refresh events servlets webapplicationcontext the default implementation calls onrefresh triggering refresh servlets contextdependent state event incoming applicationcontext event
delegate post requests processrequest doservice
override parent class implementation order intercept patch requests
return name servletcontext attribute used retrieve webapplicationcontext servlet supposed use
delegate trace requests processrequest desired applies httpservlets standard trace processing otherwise doservice
overridden method httpservletbean invoked bean properties set creates servlets webapplicationcontext
delegate delete requests processrequest doservice
delegate put requests processrequest doservice
return servlets webapplicationcontext
instantiate webapplicationcontext servlet either default orgspringframeworkwebcontextsupportxmlwebapplicationcontext setcontextclass custom context class set this implementation expects custom contexts implement orgspringframeworkwebcontextconfigurablewebapplicationcontext interface overridden subclasses do forget register servlet instance application listener created context for triggering onrefresh callback call orgspringframeworkcontextconfigurableapplicationcontextrefresh returning context instance parent parent applicationcontext use null none webapplicationcontext servlet orgspringframeworkwebcontextsupportxmlwebapplicationcontext
build servletrequestattributes given request potentially also holding reference response taking prebound attributes and type consideration request current http request response current http response previousattributes prebound requestattributes instance servletrequestattributes bind null preserve previously bound instance or binding any none bound before requestcontextholdersetrequestattributes
refresh servlets application context well dependent state servlet getwebapplicationcontext orgspringframeworkcontextconfigurableapplicationcontextrefresh
build localecontext given request exposing requests primary locale current locale request current http request corresponding localecontext null none bind localecontextholdersetlocalecontext
delegate webapplicationcontext refreshed applicationcontextinitializer instances specified contextinitializerclasses servlet initparam see also postprocesswebapplicationcontext designed allow subclasses as opposed endusers modify application context called immediately method wac configured webapplicationcontext not refreshed yet createwebapplicationcontext postprocesswebapplicationcontext configurableapplicationcontextrefresh
return explicit context config location any
called spring via applicationcontextaware inject current application context method allows frameworkservlets registered spring beans inside existing webapplicationcontext rather findwebapplicationcontext finding orgspringframeworkwebcontextcontextloaderlistener bootstrapped context primarily added support use embedded servlet containers 40
determine username given request the default implementation takes name userprincipal any overridden subclasses request current http request username null none found javaxservlethttphttpservletrequestgetuserprincipal
process request publishing event regardless outcome the actual event handling performed abstract doservice template method
retrieve webapplicationcontext servletcontext attribute setcontextattribute configured name webapplicationcontext must already loaded stored servletcontext servlet gets initialized or invoked subclasses may override method provide different webapplicationcontext retrieval strategy webapplicationcontext servlet null found getcontextattribute
delegate get requests processrequestdoservice will also invoked httpservlets default implementation dohead nobodyresponse captures content length doservice dohead
create new modelandviewdefiningexception given modelandview typically representing specific error page modelandview modelandview view forward model expose
provide request parameters identifying request flashmap params map names values expected parameters
return target url path or null none specified
compare two flashmaps prefer one specifies target url path target url parameters comparing flashmap instances ensure match given request
provide request parameter identifying request flashmap name expected parameter name skipped empty value expected value skipped empty
return content type view predetermined can used check views content type upfront ie actual rendering attempt content type string optionally including character set null predetermined
intercept execution handler called handlermapping determined appropriate handler object handleradapter invokes handler dispatcherservlet processes handler execution chain consisting number interceptors handler end method interceptor decide abort execution chain typically sending http error writing custom response note special considerations apply asynchronous request processing details see orgspringframeworkwebservletasynchandlerinterceptor the default implementation returns true request current http request response current http response handler chosen handler execute type andor instance evaluation true execution chain proceed next interceptor handler itself else dispatcherservlet assumes interceptor already dealt response itself exception case errors
delegates handler interceptors tostring
apply prehandle methods registered interceptors true execution chain proceed next interceptor handler itself else dispatcherservlet assumes interceptor already dealt response itself
create new handlerexecutionchain handler handler object execute interceptors array interceptors apply in given order handler executes
trigger aftercompletion callbacks mapped handlerinterceptors invoke aftercompletion interceptors whose prehandle invocation successfully completed returned true
apply afterconcurrenthandlerstarted callback mapped asynchandlerinterceptors
return array interceptors apply in given order array handlerinterceptors instances may null
apply posthandle methods registered interceptors
constructor nohandlerfoundexception httpmethod http method requesturl http request url headers http request headers
return environment associated servlet if none specified default environment initialized via createenvironment
create new servletconfigpropertyvalues config servletconfig well use take propertyvalues requiredproperties set property names need cant accept default values servletexception required properties missing
overridden method simply returns null servletconfig set yet getservletconfig
map config parameters onto bean properties servlet invoke subclass initialization servletexception bean properties invalid or required properties missing subclass initialization fails
set environment servlet runs in any environment set overrides standardservletenvironment provided default illegalargumentexception environment assignable configurableenvironment
add attribute model attributename name object add model never null attributevalue object add model can null modelmapaddattributestring object getmodelmap
return view object null using view name resolved dispatcherservlet via viewresolver
return diagnostic information model view
return view name resolved dispatcherservlet via viewresolver null using view object
convenient constructor take single model object view view object render modelname name single entry model modelobject single model object
return configured http status response any 43
return model map may return null called dispatcherservlet evaluation model
add attribute model using parameter name generation attributevalue object add model never null modelmapaddattributeobject getmodelmap
create new modelandview given view name model http status viewname name view render resolved dispatcherservlets viewresolver model map model names strings model objects objects model entries may null model map may null model data status http status code use response to set prior view rendering 43
create new modelandview given view name http status viewname name view render resolved dispatcherservlets viewresolver status http status code use response to set prior view rendering 438
convenient constructor take single model object viewname name view render resolved dispatcherservlets viewresolver modelname name single entry model modelobject single model object
return underlying modelmap instance never null
create new modelandview given view object model note supplied model data copied internal storage class consider modify supplied map supplying class view view object render model map model names strings model objects objects model entries may null model map may null model data
create new modelandview given view name model viewname name view render resolved dispatcherservlets viewresolver model map model names strings model objects objects model entries may null model map may null model data
clear state modelandview object object empty afterwards can used suppress rendering given modelandview object posthandle method handlerinterceptor isempty handlerinterceptorposthandle
add attributes contained provided map model modelmap map attributename attributevalue pairs modelmapaddallattributesmap getmodelmap
create list default strategy objects given strategy interface the default implementation uses dispatcherservletproperties file in package dispatcherservlet class determine class names instantiates strategy objects contexts beanfactory context current webapplicationcontext strategyinterface strategy interface list corresponding strategy objects
return handleradapter handler object handler handler object find adapter servletexception handleradapter found handler fatal error
process actual dispatching handler the handler obtained applying servlets handlermappings order handleradapter obtained querying servlets installed handleradapters find first supports handler class all http methods handled method its handleradapters handlers decide methods acceptable request current http request response current http response exception case kind processing failure
create new dispatcherservlet create internal web application context based defaults values provided servlet initparams typically used servlet 25 earlier environments option servlet registration webxml requires use noarg constructor calling setcontextconfiglocation initparam contextconfiglocation dictate xml files loaded plain defaultcontextclass default xmlwebapplicationcontext calling setcontextclass initparam contextclass overrides default xmlwebapplicationcontext allows specifying alternative class annotationconfigwebapplicationcontext calling setcontextinitializerclasses initparam contextinitializerclasses indicates applicationcontextinitializer classes used configure internal application context prior refresh dispatcherservletwebapplicationcontext
implementation calls initstrategies
initialize flashmapmanager used servlet instance if implementation configured default orgspringframeworkwebservletsupportdefaultflashmapmanager
convert request multipart request make multipart resolver available if multipart resolver set simply use existing request request current http request processed request multipart wrapper necessary multipartresolverresolvemultipart
initialize requesttoviewnametranslator used servlet instance if implementation configured default defaultrequesttoviewnametranslator
restore request attributes include request current http request attributessnapshot snapshot request attributes include
check javaxservleterrorexception attribute multipart exception
determine error modelandview via registered handlerexceptionresolvers request current http request response current http response handler executed handler null none chosen time exception for example multipart resolution failed ex exception got thrown handler execution corresponding modelandview forward exception error modelandview found
obtain servlets multipartresolver any multipartresolver used servlet null none indicating multipart support available
initialize handlermappings used class if handlermapping beans defined beanfactory namespace default beannameurlhandlermapping
clean resources used given multipart request if any request current http request multipartresolvercleanupmultipart
create new dispatcherservlet given web application context constructor useful servlet 30 environments instancebased registration servlets possible servletcontextaddservlet api using constructor indicates following properties initparams ignored setcontextclassclass contextclass setcontextconfiglocationstring contextconfiglocation setcontextattributestring contextattribute setnamespacestring namespace the given web application context may may yet plain configurableapplicationcontextrefresh refreshed not already refreshed the recommended approach following occur if given context already plain configurableapplicationcontextsetparent parent root application context set parent if given context already assigned plain configurableapplicationcontextsetid id one assigned it servletcontext servletconfig objects delegated application context postprocesswebapplicationcontext called any applicationcontextinitializers specified contextinitializerclasses initparam setcontextinitializers property applied configurableapplicationcontextrefresh refresh called context implements configurableapplicationcontext context already refreshed none occur assumption user performed actions or not per specific needs see orgspringframeworkwebwebapplicationinitializer usage examples webapplicationcontext context use initwebapplicationcontext configureandrefreshwebapplicationcontext orgspringframeworkwebwebapplicationinitializer
need view name translation
exposes dispatcherservletspecific request attributes delegates dodispatch actual dispatching
handler found set appropriate http response status request current http request response current http response exception preparing response failed
render given modelandview this last stage handling request may involve resolving view name mv modelandview render request current http servlet request response current http servlet response servletexception view missing cannot resolved exception theres problem rendering view
translate supplied request default view name request current http servlet request view name or null default found exception view name translation failed
return handlerexecutionchain request tries handler mappings order request current http request handlerexecutionchain null handler could found
initialize handleradapters used class if handleradapter beans defined beanfactory namespace default simplecontrollerhandleradapter
initialize multipartresolver used class if bean defined given name beanfactory namespace multipart handling provided
initialize themeresolver used class if bean defined given name beanfactory namespace default fixedthemeresolver
return configured handlermapping beans detected type webapplicationcontext initialized based default set strategies literal dispatcherservletproperties note method may return null invoked prior onrefreshapplicationcontext immutable list configured mappings null initialized yet 50
handle result handler selection handler invocation either modelandview exception resolved modelandview
initialize strategy objects servlet uses may overridden subclasses order initialize strategy objects
build localecontext given request exposing requests primary locale current locale the default implementation uses dispatchers localeresolver obtain current locale might change request request current http request corresponding localecontext
return servlets themesource any else return null default return webapplicationcontext themesource provided implements themesource interface themesource getwebapplicationcontext
return default strategy object given strategy interface the default implementation delegates getdefaultstrategies expecting single object list context current webapplicationcontext strategyinterface strategy interface corresponding strategy object getdefaultstrategies
resolve given view name view object to rendered the default implementations asks viewresolvers dispatcher overridden custom resolution strategies potentially based specific model attributes request parameters viewname name view resolve model model passed view locale current locale request current http servlet request view object null none found exception view cannot resolved typically case problems creating actual view object viewresolverresolveviewname
initialize viewresolvers used class if viewresolver beans defined beanfactory namespace default internalresourceviewresolver
initialize handlerexceptionresolver used class if bean defined given name beanfactory namespace default exception resolver
initialize localeresolver used class if bean defined given name beanfactory namespace default acceptheaderlocaleresolver
return exception message indicates current theme
use theme messagesource theme message resolution
resolves message escapes demanded writes page or exposes variable resolvemessage orgspringframeworkwebutilhtmlutilshtmlescapestring orgspringframeworkwebutiljavascriptutilsjavascriptescapestring writemessagestring
resolve specified message concrete message string returned message string unescaped
resolve given arguments object arguments array arguments specified arguments object resolved arguments array jspexception argument conversion failed setarguments
create expose current requestcontext delegates dostarttaginternal actual work requestcontextpageattribute orgspringframeworkwebservletsupportjspawarerequestcontext
return current requestcontext
set path tag apply eg customer allow bind paths like addressstreet rather customeraddressstreet bindtagsetpath
reset previous nestedpath value
return path tag applies to
retrieve errors instance tag currently bound to intended cooperating nesting tags current errors instance null none
retrieve property tag currently bound to null bound object rather specific property intended cooperating nesting tags property tag currently bound to null none
return current bindstatus
return raw parameter name
return raw parameter value
return html escaping setting tag default setting overridden isdefaulthtmlescape
htmlencodes given string htmlescape setting enabled the response encoding taken account responseencodedhtmlescape setting enabled well content string escape escaped string 412 ishtmlescape isresponseencodedhtmlescape
read unescaped body content page original content ioexception reading failed
write escaped body content page can overridden subclasses eg testing purposes content content write ioexception writing failed
set value parameter optional
retrieve errors instance tag currently bound to intended cooperating nesting tags
set context path url defaults current context
build query string available parameters already applied template params the names values parameters url encoded params parameters build query string usedparams set parameter names applied template params includequerystringdelimiter true query string start instead query string
set value url
build url tag tag attributes parameters url value string
replace template markers url matching available parameters name matched parameters added used parameters set parameter values url encoded uri url template parameters replace params parameters used replace template markers usedparams set template parameter names replaced url template parameters replaced
set value argument optional set tags body content get evaluated value parameter value
flags type illegal dynamic attribute
passwordinputtag writes its value setshowpasswordboolean showpassword property value booleantrue true
return password causing rendered html input element type password
provide simple template method calls createtagwriter passes created tagwriter writetagcontenttagwriter method value returned writetagcontenttagwriter
evaluate supplied value supplied attribute name the default implementation simply returns given value asis
optionally writes supplied value supplied attribute name supplied tagwriter case supplied value evaluate evaluated first objectutilsgetdisplaystring string representation written attribute value resultant string representation null empty attribute written tagwriterwriteoptionalattributevaluestring string
overridden default true case explicit default given
writes html input tag supplied tagwriter including databound value writedefaultattributestagwriter getboundvalue
flags type illegal dynamic attribute
get text body rendered html tag
make sure select tag proceeding
return value label option element if setlabel label property set resolved value property used otherwise value resolvedvalue argument used
get value attribute rendered html tag
get next unique id within given pagecontext supplied name
set value name attribute
writes value attribute supplied tagwriter subclasses may choose override implementation control exactly value written
closes button block tag
get value value attribute
render inner option tags using supplied collection objects source value valueproperty field used rendering value option value labelproperty property used rendering label
write option tags configured optionsource supplied tagwriter
determine display value supplied object htmlescaped required
render inner option tags using supplied map source renderoptiontagwriter object object object
create new optionwriter supplied objectsource optionsource source options never null bindstatus bindstatus bound value never null valueproperty name property used render option values optional labelproperty name property used render option labels optional
render html option supplied value label marks value selected either item value match bound value
get value value attribute
renders inputradio element configured setvalueobject value marks element checked value matches getvalue bound value
get value label attribute
get value accesskey attribute
adds inputspecific optional attributes defined base class
get value onfocus attribute
get value onblur attribute
get value onchange attribute
get value id attribute may runtime expression
close label tag
determine for attribute value tag autogenerating one none specified getfor autogeneratefor
disposes tagwriter instance
overrides getname always return null name attribute supported label tag value html name attribute
writes opening label tag forces block tag body content written correctly javaxservletjsptagexttagevalbodyinclude
start new tag supplied name leaves tag open attributes inner text nested tags written it endtag
indicate currently open tag closed marked block level element useful plan write additional content body outside context current tagwriter
closes current opening tag marks block tag
close current opening tag if necessary appends supplied value inner text illegalstateexception tag open
create new instance tagwriter class writes supplied writer writer writer write tag content
close current tag allowing enforce full closing tag correctly writes empty tag inner text nested tags written enforceclosingtag whether full closing tag rendered case even case nonblock tag
write html attribute specified name value be sure write attributes before writing inner text nested tags illegalstateexception opening tag closed
create new instance tagwriter class writes supplied pagecontext pagecontext jsp pagecontext obtain writer
write html attribute supplied value null zero length writeattributestring string
returns true supplied candidate value equal value bound supplied bindstatus equality case differs standard java equality described detail hrefequalitycontracthere
get value rows attribute
get value onselect attribute
get value cols attribute
get value onselect attribute
writes input tag supplied tagwriter uses value returned gettype determine type input element render
flags typecheckbox typeradio illegal dynamic attributes
get value size attribute
get value maxlength attribute
get value autocomplete attribute
get value alt attribute
writes value attribute supplied tagwriter subclasses may choose override implementation control exactly value written
build display value supplied object html escaped required supplied value string supplied propertyeditor null propertyeditor used obtain display value getdisplaystringobject boolean
build display value supplied object html escaped required version not propertyeditoraware getdisplaystringobject javabeanspropertyeditor boolean
clean attributes stored resources
user customised output error messages flush buffered content main javaxservletjspjspwriter
shouldrender rendering flush buffered bodycontent or bodycontent supplied renderdefaultcontent render default content javaxservletjsptagexttagevalpage result
get value nested path may exposed nestedpathtag
determine id attribute value tag autogenerating one none specified getid autogenerateid
autogenerate id attribute value tag the default implementation simply delegates getname deleting invalid characters such
disposes bindstatus instance
get bindstatus tag
get value id attribute
exposes propertyeditor editorawaretag use getpropertyeditor internal rendering purposes
get bound value getbindstatus
set value id attribute may runtime expression defaults value getname note default value may valid certain tags
process given form field requestdatavalueprocessor instance one configured otherwise returns value
get propertyeditor any use value bound tag
get value html name attribute the default implementation simply delegates getpropertypath use property path name part desirable links serverside expectation data binding however subclasses may wish change value name attribute without changing bind path value html name attribute
get evaluate resolved property path formtagsetmodelattribute form object
get display string given value converted propertyeditor bindstatus may registered values class
build property path tag including nested path not prefixed name form attribute getnestedpath getpath
writes default set attributes supplied tagwriter abstract subclasses override method add additional default attributes must remember call super method concrete subclasses call method whenif want render default attributes tagwriter tagwriter attributes written
override resolve css class since error class supported
get value target attribute
process action requestdatavalueprocessor instance one configured otherwise returns action unmodified
get value action attribute
get value autocomplete attribute
writes given values hidden fields
get value name attribute
clears stored tagwriter
closes form block tag removes form object name javaxservletjsppagecontext
unsupported forms unsupportedoperationexception always
get value onreset attribute
writes opening part block form tag exposes form object name javaxservletjsppagecontext tagwriter tagwriter form content written javaxservletjsptagexttagevalbodyinclude
get value enctype attribute
autogenerated ids correspond form object name
resolve value action attribute if user configured action value result evaluating value used user configured servletrelativeaction value value prepended context servlet paths result used otherwise orgspringframeworkwebservletsupportrequestcontextgetrequesturi originating uri used value used action attribute
get servletrelative value action attribute 323
unsupported forms unsupportedoperationexception always
get value onsubmit attribute
evaluate resolves returns name form object illegalargumentexception form object resolves null
get value acceptcharset attribute
removes bind status error messages previously stored messagesattribute key pagecontextpagescope exposeattributes
rendering tag proceed all only renders output errors configured setpath path true errors configured setpath path
get value html name attribute simply returns null name attribute validate attribute span element
exposes bind status error messages messagesattribute key pagecontextpagescope only called shouldrender returns true removeattributes
set html element must used render error messages defaults html tag
get value html id attribute appends errors value returned getpropertypath model attribute name tags path attribute omitted value html id attribute getpropertypath
get name property mapped value attribute input typecheckboxradio tag
set name property mapped value attribute input typecheckboxradio tag may runtime expression
set html element used enclose input typecheckboxradio tag defaults html tag
get javautilcollection javautilmap array objects used generate input typecheckboxradio tags
set javautilcollection javautilmap array objects used generate input typecheckboxradio tags typically runtime expression items said items
get value displayed part input typecheckboxradio tag
set value displayed part input typecheckboxradio tag may runtime expression
return delimiter used input typeradio tag
appends counter specified id well since were dealing multiple html elements
renders input typeradio element configured setitemsobject values marks element checked value matches bound value
get javautilcollection javautilmap array objects used generate inner option tags typically runtime expression
return name property mapped value attribute option tag
set name property mapped value attribute option tag required wishing render option tags array javautilcollection
get name property mapped label inner text option tag
set name property mapped label inner text option tag
appends counter specified id since were dealing multiple html elements
clears tagwriter might left using nested optiontag options
get value itemlabel attribute may runtime expression
get value items attribute may runtime expression
returns true bound value requires resultant select tag multiselect
get value size attribute
renders html select tag supplied tagwriter renders nested option tags setitems items property set otherwise exposes bound value nested optiontag optiontags
using multiselect hidden element needed make sure items correctly unselected serverside response null post
get value html multiple attribute rendered final select element
closes block tag might opened using nested optiontag options
get value itemvalue attribute may runtime expression
css class use field bound particular tag errors may runtime expression
writes optional attributes configured via base class supplied tagwriter set optional attributes rendered includes nonstandard dynamic attributes called writedefaultattributestagwriter
get value onmousemove attribute may runtime expression
get value onkeydown attribute may runtime expression
get value tabindex attribute may runtime expression
get value onmouseup attribute may runtime expression
get value lang attribute may runtime expression
get value onkeyup attribute may runtime expression
get value ondblclick attribute may runtime expression
get value onmousedown attribute may runtime expression
writes default attributes configured via base class supplied tagwriter subclasses call want base attribute set written output
get value dir attribute may runtime expression
get map dynamic attributes
get value onkeypress attribute may runtime expression
get value style attribute may runtime expression
gets appropriate css class use based state current orgspringframeworkwebservletsupportbindstatus object
get value class attribute may runtime expression
get value onclick attribute may runtime expression
get value onmouseout attribute may runtime expression
get value title attribute may runtime expression
get value onmouseover attribute may runtime expression
flags type illegal dynamic attribute
render inputcheckbox supplied value marking input element checked supplied value matches bound value
return unique id bound name within current pagecontext
render inputcheckbox supplied value marking input element checked supplied boolean true
convenience constructor allows specifying setprefix prefix setsuffix suffix constructor arguments prefix prefix gets prepended view names building url suffix suffix gets appended view names building url 43
resolver requires internalresourceview
sets default setviewclass view class requiredviewclass default internalresourceview jstlview jstl api present
return url resource view wraps
initialize view beanfactory resourcebundle given locale locale synchronized access parallel threads locale target locale view factory given locale beansexception case initialization errors
close bundle view factories context shutdown
eagerly initialize locales necessary setlocalestoinitialize
exposes jstl localizationcontext springs locale messagesource jstlutilsexposelocalizationcontext
wraps messagesource jstlaware messagesource aware jstls javaxservletjspjstlfmtlocalizationcontext contextparam jstlutilsgetjstlawaremessagesource
create new jstlview given url url url forward messagesource messagesource expose jstl tags will wrapped jstlaware messagesource aware jstls javaxservletjspjstlfmtlocalizationcontext contextparam jstlutilsgetjstlawaremessagesource
create actual view object the default implementation delegates loadview overridden resolve certain view names special fashion delegating actual loadview implementation provided subclass viewname name view retrieve locale locale retrieve view view instance null found optional allow viewresolver chaining exception view couldnt resolved loadview
provides functionality clear cache certain view this handy case developer able modify views eg freemarker templates runtime youd need clear cache specified view viewname view name cached view object if any needs removed locale locale view object removed
clear entire view cache removing cached view objects subsequent resolve calls lead recreation demanded view objects
initialize view bean factory xml file synchronized access parallel threads beansexception case initialization errors
implementation returns view name xmlviewresolver doesnt support localized resolution
close view bean factory context shutdown
preinitialize factory xml file effective caching enabled
apply views content type specified contenttype bean property given response only applies views contenttype content type set response before allows handlers override default content type beforehand response current http response setcontenttype
find registered requestdatavalueprocessor any allow update redirect target url targeturl given redirect url updated url url one passed
determine whether given model element exposed query property the default implementation considers strings primitives eligible also arrays collectionsiterables corresponding elements overridden subclasses key key model element value value model element whether element eligible query property
create new redirectview given url the given url considered relative web server relative current servletcontext url url redirect redirectviewstring boolean
append query string current request target redirect url targeturl stringbuilder append properties request current request 41
create new redirectview given url url url redirect contextrelative whether interpret given url relative current servletcontext http10compatible whether stay compatible http 10 clients exposemodelattributes whether model attributes exposed query parameters
return configured application hosts 43
create new redirectview given url url url redirect contextrelative whether interpret given url relative current servletcontext http10compatible whether stay compatible http 10 clients
append query properties redirect url stringifies urlencodes formats model attributes query properties targeturl stringbuilder append properties model map contains model attributes encodingscheme encoding scheme use unsupportedencodingexception string encoding failed queryproperties
convert model request parameters redirect given url appendqueryproperties sendredirect
replace uri template variables target url encoded model attributes uri variables current request model attributes referenced url removed model targeturl redirect url model map contains model attributes currenturivariables current request uri variables use encodingscheme encoding scheme use unsupportedencodingexception string encoding failed
create target url checking redirect string uri template first expanding given model optionally appending simple type model attributes query string parameters
send redirect back http client request current http request allows reacting request method response current http response for sending response headers targeturl target url redirect http10compatible whether stay compatible http 10 clients ioexception thrown response methods
determine namevalue pairs query strings stringified urlencoded formatted appendqueryproperties this implementation filters model checking iseligiblepropertystring object element default accepting strings primitives primitive wrappers only model original model map filtered map eligible query properties iseligiblepropertystring object
create new redirectview given url url url redirect contextrelative whether interpret given url relative current servletcontext
whether given targeturl host foreign system case httpservletresponseencoderedirecturl applied method returns true sethostsstring property configured target url host match targeturl target redirect url true target url remote host false url host host property configured 43
applicationcontext strictly required redirectview
determines status code use http 11 compatible requests the default implementation returns setstatuscodehttpstatus statuscode property set value responsestatusattribute attribute neither set defaults httpstatusseeother 303 request request inspect response servlet response targeturl target url response status
returns true indicating view performs redirect
set list view viewresolvers delegate to
implementation returns view name viewresolver doesnt support localized resolution
creates new view instance specified view class configures it not perform lookup predefined view instances spring lifecycle methods defined bean container called here applied loadview method method returns subclasses typically call superbuildviewviewname first setting properties themselves loadview apply spring lifecycle methods end process viewname name view build view instance exception view couldnt resolved loadviewstring javautillocale
return whether views resolved resolver add path variables model not
return view names or name patterns handled orgspringframeworkwebservletviewresolver
indicates whether orgspringframeworkwebservletviewresolver handle supplied view name not createviewstring javautillocale return null default implementation checks configured setviewnames view names viewname name view retrieve locale locale retrieve view whether resolver applies specified view orgspringframeworkutilpatternmatchutilssimplematchstring string
return configured application hosts redirect purposes 43
overridden implement check redirect prefix not possible loadview since overridden loadview versions subclasses might rely superclass always creating instances required view class loadview requiredviewclass
return content type views any
set view class used create views viewclass class assignable required view class by default abstracturlbasedview abstracturlbasedview
apply containing applicationcontexts lifecycle methods given view instance context available viewname name view view freshly created view instance preconfigured abstracturlbasedviews properties view instance use either original one decorated variant 50 getapplicationcontext applicationcontextgetautowirecapablebeanfactory orgspringframeworkbeansfactoryconfigautowirecapablebeanfactoryinitializebean
return name requestcontext attribute views any
delegates buildview creating new instance specified view class applies following spring lifecycle methods as supported generic spring bean factory applicationcontextawares setapplicationcontext initializingbeans afterpropertiesset viewname name view retrieve view instance exception view couldnt resolved buildviewstring orgspringframeworkcontextapplicationcontextawaresetapplicationcontext orgspringframeworkbeansfactoryinitializingbeanafterpropertiesset
set static attributes map views returned resolver allows set kind attribute values example bean references can populated map props element xml bean definitions attributes map name strings keys attribute objects values abstractviewsetattributesmap
return view class used create views
prepare rendering determine request dispatcher path forward or include this implementation simply returns configured url subclasses override determine resource render typically interpreting url different manner request current http request response current http response request dispatcher path use exception preparations failed geturl
obtain requestdispatcher use forwardinclude the default implementation simply calls httpservletrequestgetrequestdispatcherstring overridden subclasses request current http request path target url as returned prepareforrendering corresponding requestdispatcher
applicationcontext strictly required internalresourceview
render internal resource given specified model includes setting model request attributes
create new internalresourceview given url url url forward alwaysinclude whether always include view rather forward
return contentnegotiationmanager use determine requested media types 419
determines list mediatype given httpservletrequest request current servlet request list media types requested
return specific acceptable producible media types qvalue former
return views name never null view correctly configured
creates combined output map never null includes dynamic values static attributes dynamic values take precedence static attributes
return name requestcontext attribute any
get request handle expose rendermergedoutputmodel ie view the default implementation wraps original request exposure spring beans request attributes if demanded originalrequest original servlet request provided engine wrapped request original request wrapping necessary setexposecontextbeansasattributes setexposedcontextbeannames orgspringframeworkwebcontextsupportcontextexposinghttpservletrequest
set static attributes view map allows set kind attribute values example bean references static attributes fixed attributes specified view instance configuration dynamic attributes hand values passed part model can populated map props element xml bean definitions attributes map name strings keys attribute objects values
prepare given response rendering the default implementation applies workaround ie bug sending download content via https request current http request response current http response
return content type view
set static attributes csv string format is attname0value1attname1value1 static attributes fixed attributes specified view instance configuration dynamic attributes hand values passed part model
write given temporary outputstream http response response current http response baos temporary outputstream write ioexception writingflushing failed
set views name helpful traceability framework code must call constructing views
prepares view given specified model merging static attributes requestcontext attribute necessary delegates rendermergedoutputmodel actual rendering rendermergedoutputmodel
expose model objects given map request attributes names taken model map method suitable resources reachable javaxservletrequestdispatcher model map model objects expose request current http request
set content type response configured setcontenttypestring content type unless viewselectedcontenttype request attribute present set concrete media type
create requestcontext expose specified attribute name the default implementation creates standard requestcontext instance given request model overridden subclasses custom instances request current http request model combined output map never null dynamic values taking precedence static attributes requestcontext instance setrequestcontextattribute orgspringframeworkwebservletsupportrequestcontext
transform request uri in context webapp stripping slashes extensions replacing separator required lookuppath lookup path current request determined urlpathhelper transformed path slashes extensions stripped desired
set orgspringframeworkwebutilurlpathhelper use resolution lookup paths use override default urlpathhelper custom subclass share common urlpathhelper settings across multiple web components
translates request uri incoming httpservletrequest view name based configured parameters orgspringframeworkwebutilurlpathhelpergetlookuppathforrequest transformpath
autodetect markuptemplateengine via applicationcontext called markuptemplateengine manually configured
invoked startup settemplateenginemarkuptemplateengine templateengine manually set method looks groovymarkupconfig bean type uses obtain groovy markup template engine groovymarkupconfig settemplateenginegroovytextmarkupmarkuptemplateengine
return template compiled configured groovy markup template engine given view url
create parent classloader groovy use parent classloader loading compiling templates
resolve template given template path the default implementation uses locale associated current request obtained orgspringframeworkcontexti18nlocalecontextholder localecontextholder find template file effectively locale configured engine level ignored localecontextholder setlocale
method used since considered locale resolving templates locale current http request
resolver supports i18n cache keys contain locale
convenience constructor allows specifying setprefix prefix setsuffix suffix constructor arguments prefix prefix gets prepended view names building url suffix suffix gets appended view names building url 43
set objectmapper view set default objectmapperobjectmapper objectmapper used setting customconfigured objectmapper one way take control json serialization process option use jacksons provided annotations types serialized case customconfigured objectmapper unnecessary
filter optionally wrap model mappingjacksonvalue container model model passed rendermergedoutputmodel request current http request wrapped unwrapped value rendered
whether use default pretty printer writing output shortcut setting objectmapper follows classcode objectmapper mapper new objectmapper mapperconfigureserializationfeatureindentoutput true the default value false
set jsonencoding view default plain jsonencodingutf8 utf8 used
write actual json content stream stream output stream use object value rendered returned filtermodel ioexception writing failed
filter undesired attributes given model return value either another map single value object the default implementation removes bindingresult instances entries included setmodelkeys modelkeys property model model passed rendermergedoutputmodel value rendered
return attributes model rendered view
initialize freemarkerconfigurationfactorys configuration overridden preconfigured freemarker configuration sets classtemplateloader use loading spring macros createconfiguration setconfiguration
initialize taglibfactory given servletcontext
return configuration object wrapped bean
return taglibfactory object wrapped bean
implementation registers additional classtemplateloader springprovided macros added end list
requires freemarkerview
convenience constructor allows specifying setprefix prefix setsuffix suffix constructor arguments prefix prefix gets prepended view names building url suffix suffix gets appended view names building url 43
retrieve freemarker template given locale rendering view by default template specified url bean property retrieved locale current locale freemarker template render ioexception template file could retrieved seturl gettemplatestring javautillocale
build freemarker template model given model map the default implementation builds allhttpscopeshashmodel model model use rendering request current http request response current servlet response freemarker template model simplehash subclass thereof
retrieve freemarker template specified given name using encoding specified encoding bean property can called subclasses retrieve specific template example render multiple templates single view name file name desired template locale current locale freemarker template ioexception template file could retrieved
invoked startup looks single freemarkerconfig bean find relevant configuration factory checks template default locale found freemarker check nonlocalespecific templates localespecific one found freemarkercachetemplatecachegettemplate
render freemarker view given response using given model map contains complete template model use the default implementation renders template specified url bean property retrieved via gettemplate delegates processtemplate method merge template instance given template model adds standard freemarker hash models model request parameters request session application servletcontext well jsp tag library hash model can overridden customize behavior example render multiple templates single view model model use rendering request current http request response current servlet response ioexception template file could retrieved exception rendering failed seturl orgspringframeworkwebservletsupportrequestcontextutilsgetlocale gettemplatejavautillocale processtemplate freemarkerextservletfreemarkerservlet
return freemarker configuration used view
autodetect freemarkerconfig object via applicationcontext configuration instance use freemarkerviews beansexception configuration instance could found getapplicationcontext setconfiguration
check freemarker template used view exists valid can overridden customize behavior example case multiple templates rendered single view
build freemarker httpsessionhashmodel given request detecting whether session already exists reacting accordingly request current http request response current servlet response freemarker httpsessionhashmodel
obtain freemarker configuration actual use freemarker configuration never null illegalstateexception case configuration object set 50
return configured freemarker objectwrapper objectwrapperdefaultwrapper default wrapper none specified freemarkertemplateconfigurationgetobjectwrapper
process freemarker template servlet response can overridden customize behavior template template process model model template response servlet response use get outputstream writer ioexception template file could retrieved templateexception thrown freemarker freemarkertemplatetemplateprocessobject javaiowriter
process model map merging freemarker template output directed servlet response this method overridden custom behavior needed
return encoding freemarker template
invokes buildfeeditemsmap httpservletrequest httpservletresponse get list feed items
create new channel instance hold entries by default returns rss 20 channel subclass specify channel
create new feed instance hold entries by default returns atom 10 feed subclass specify feed setfeedtypestring
invokes buildfeedentriesmap httpservletrequest httpservletresponse get list feed entries
resolver requires tilesview
create tiles request this implementation creates servletrequest request current request response current response tiles request
creates exposes tilescontainer web application delegating tilesinitializer tilesexception case setup failure
removes tilescontainer web application tilesexception case cleanup failure
specify whether apply tiles 30s completeautoload configuration see orgapachetilesextrascompletecompleteautoloadtilescontainerfactory details completeautoload mode note specifying completeautoload mode effectively disables bean properties configurer entire initialization procedure left orgapachetilesextrascompletecompleteautoloadtilesinitializer orgapachetilesextrascompletecompleteautoloadtilescontainerfactory orgapachetilesextrascompletecompleteautoloadtilesinitializer
convenience constructor allows specifying setprefix prefix setsuffix suffix constructor arguments prefix prefix gets prepended view names building url suffix suffix gets appended view names building url 43
create new renderingcontext applicationcontext application context locale locale rendered template templateloader function takes template path input returns template content string url url rendered template
return content type use response 421
create new scripttemplateview given url 421
see scripttemplateconfigurersetresourceloaderpathstring documentation
constructs new marshallingview given marshaller set
construct new marshallingview marshaller set marshaller must set construction invoking setmarshaller
locate object marshalled the default implementation first attempts look configured plain setmodelkeystring model key any attempting locate object plain marshallersupportsclass supported type model model map object marshalled or null none found illegalstateexception model object specified plain setmodelkeystring model key supported marshaller setmodelkeystring
check whether given value current views model eligible marshalling configured marshaller the default implementation calls marshallersupportsclass unwrapping given jaxbelement first applicable modelkey values key model never null value value check never null whether given value considered eligible marshallersupportsclass
convert supplied object xslt source object type getsourcetypes supported source original source object adapted xslt source illegalargumentexception given object supported type
configure supplied transformer instance the default implementation copies parameters model transformers transformersetparameter parameter set implementation also copies setoutputproperties output properties transformer transformersetoutputproperty output properties indentation properties set well model merged output map never null response current http response transformer target transformer copymodelparametersmap transformer copyoutputpropertiestransformer configureindentationtransformer
close underlying resource managed supplied source applicable only works streamsource streamsources source xslt source close may null
create transformer instance used prefer xslt transformation the default implementation simply calls templatesnewtransformer configures transformer custom uriresolver specified templates xslt templates instance create transformer transformer object transformerconfigurationexception case creation failure
return transformerfactory xsltview uses transformerfactory never null
locate source object supplied model converting objects required default implementation first attempts look configured setsourcekey source key any attempting locate object getsourcetypes supported type model merged model map xslt source object or null none found exception error occurred locating source setsourcekey convertsource
copy configured output properties any transformersetoutputproperty output property set supplied transformer transformer target transformer
instantiate new transformerfactory view the default implementation simply calls javaxxmltransformtransformerfactorynewinstance settransformerfactoryclass transformerfactoryclass specified explicitly default constructor specified class called instead can overridden subclasses transformerfactoryclass specified factory class if any new transactionfactory instance settransformerfactoryclass gettransformerfactory
initialize xsltviews transformerfactory
configure supplied httpservletresponse the default implementation method sets httpservletresponsesetcontenttype content type httpservletresponsesetcharacterencoding encoding mediatype encoding output properties specified transformer model merged output map never null response current http response transformer target transformer
get xslt source xslt template seturl configured url source object
configure indentation settings supplied transformer transformer target transformer orgspringframeworkutilxmltransformerutilsenableindentingjavaxxmltransformtransformer orgspringframeworkutilxmltransformerutilsdisableindentingjavaxxmltransformtransformer
load templates instance stylesheet configured location
actual render step taking poi workbook rendering given response workbook poi workbook render response current http response ioexception thrown io methods were delegating
renders excel view given specified model
prepare given pdfwriter called building pdf document is call documentopen useful registering page event listener example default implementation sets viewer preferences returned classs getviewerpreferences method model model case meta information must populated writer pdfwriter prepare request case need locale etc shouldnt look attributes documentexception thrown writer preparation comlowagietextdocumentopen comlowagietextpdfpdfwritersetpageevent comlowagietextpdfpdfwritersetviewerpreferences getviewerpreferences
read raw pdf resource itext pdfreader the default implementation resolve specified url property applicationcontext resource pdfreader instance ioexception resource access failed seturl
implementation creates sxssfworkbook streaming xlsx format
implementation disposes sxssfworkbook done rendering orgapachepoixssfstreamingsxssfworkbookdispose
implementation creates xssfworkbook xlsx format
registers httprequesthandleradapter wellknown name unless already registered
registers map corsconfiguration mapped corsconfigurations wellknown name unless already registered bean definition may updated nonnull cors configuration provided runtimebeanreference map corsconfiguration instance
registers httprequesthandleradapter wellknown name unless already registered
find contentnegotiationmanager bean created registered annotationdriven element bean definition bean reference null none defined
adds alias existing wellknown name registers new instance urlpathhelper wellknown name unless already registered runtimebeanreference urlpathhelper instance
registers handlermappingintrospector wellknown name unless already registered
registers simplecontrollerhandleradapter wellknown name unless already registered
adds alias existing wellknown name registers new instance pathmatcher wellknown name unless already registered runtimebeanreference pathmatcher instance
create defaultservlethandlerconfigurer instance servletcontext servletcontext use
enable forwarding default servlet identified given name this useful default servlet cannot autodetected example manually configured defaultservlethttprequesthandler
return handler mapping instance ordered integermaxvalue containing defaultservlethttprequesthandler instance mapped null default servlet handling enabled 4312
specify amount time milliseconds asynchronous request handling times out servlet 3 timeout begins main request processing thread exited ends request dispatched processing concurrently produced result if value set default timeout underlying implementation used eg 10 seconds tomcat servlet 3 timeout timeout value milliseconds
configure lifecycle interceptors callbacks around concurrent request execution starts controller returns deferredresult interceptors interceptors register
configure lifecycle interceptors callbacks around concurrent request execution starts controller returns javautilconcurrentcallable interceptors interceptors register
provided task executor used to handle callable controller method return values perform blocking writes streaming response reactive eg reactor rxjava controller method return value by default simpleasynctaskexecutor used however using two use cases its recommended configure executor backed thread pool threadpooltaskexecutor taskexecutor task executor instance use default
return registered corsconfiguration objects keyed path pattern 42
returns requestmappinghandleradapter processing requests annotated controller methods consider overriding one finegrained methods addargumentresolvers adding custom argument resolvers addreturnvaluehandlers adding custom return value handlers configuremessageconverters adding custom message converters
set javaxservletservletcontext eg resource handling looking file extensions etc
return formattingconversionservice use annotated controllers see addformatters alternative overriding method
return requestmappinghandlermapping ordered 0 mapping requests annotated controllers
resourceurlprovider bean use mvc dispatcher 41
return associated javaxservletservletcontext 42
provide access shared return value handlers used requestmappinghandleradapter exceptionhandlerexceptionresolver this method cannot overridden use addreturnvaluehandlers instead 43
returns httprequesthandleradapter processing requests httprequesthandler httprequesthandlers
return configurablewebbindinginitializer use initializing webdatabinder instances
register viewresolvercomposite contains chain view resolvers use view resolution default resolver ordered 0 unless content negotiation view resolution used case order raised orgspringframeworkcoreorderedhighestprecedence orderedhighestprecedence if resolvers configured viewresolvercompositeresolveviewnamestring locale returns null order allow potential viewresolver beans resolve views 41
return instance compositeuricomponentscontributor use orgspringframeworkwebservletmvcmethodannotationmvcuricomponentsbuilder 40
callback building pathmatchconfigurer delegates configurepathmatch 41
return global validator instance example validating modelattribute requestbody method arguments delegates getvalidator first returns null checks classpath presence jsr303 implementations creating optionalvalidatorfactorybeanif jsr303 implementation available noop validator returned
return beannameurlhandlermapping ordered 2 map url paths controller bean names
return contentnegotiationmanager instance use determine requested plain mediatype media types given request
return handler mapping ordered 1 map url paths directly view names configure view controllers override addviewcontrollers
provide access shared handler interceptors used configure handlermapping instances with this method cannot overridden use addinterceptors instead
return global urlpathhelper instance path matching patterns handlermapping handlermappings instance configured using pathmatchconfigurer configurepathmatchpathmatchconfigurer 41
override method provide custom validator
set spring applicationcontext eg resource loading
provide access shared custom argument resolvers used requestmappinghandleradapter exceptionhandlerexceptionresolver this method cannot overridden use addargumentresolvers instead 43
returns simplecontrollerhandleradapter processing requests interfacebased controllers
method available subclasses adding default handlerexceptionresolver handlerexceptionresolvers adds following exception resolvers exceptionhandlerexceptionresolver handling exceptions orgspringframeworkwebbindannotationexceptionhandler methods responsestatusexceptionresolver exceptions annotated orgspringframeworkwebbindannotationresponsestatus defaulthandlerexceptionresolver resolving known spring exception types
provides access shared httpmessageconverter httpmessageconverters used requestmappinghandleradapter exceptionhandlerexceptionresolver this method cannot overridden use configuremessageconverters instead also see adddefaulthttpmessageconverters adding default message converters
return associated spring applicationcontext 42
returns handlerexceptionresolvercomposite containing list exception resolvers obtained either configurehandlerexceptionresolvers adddefaulthandlerexceptionresolvers note method cannot made final due cglib constraints rather overriding it consider overriding configurehandlerexceptionresolvers allows providing list resolvers
override method provide custom messagecodesresolver
adds set default httpmessageconverter instances given list subclasses call method configuremessageconverters messageconverters list add default message converters
return global pathmatcher instance path matching patterns handlermapping handlermappings instance configured using pathmatchconfigurer configurepathmatchpathmatchconfigurer 41
return handler mapping ordered integermaxvalue mapped default servlet handler configure default servlet handling override configuredefaultservlethandling
return handler mapping ordered integermaxvalue1 mapped resource handlers configure resource handling override addresourcehandlers
favorpathextension favorpathextension set property determines whether use registered mediatype mappings resolve path extension specific mediatype by default set case pathextensioncontentnegotiationstrategy use defaults available
similar mediatype replacing existing mappings mediatypestring mediatype mediatypesmap
whether ignore requests path extension cannot resolved media type setting false result httpmediatypenotacceptableexception match by default set true
build contentnegotiationmanager based configurers settings 4312 contentnegotiationmanagerfactorybeangetobject
class constructor javaxservletservletcontext
set default content types use content type requested order priority if destinations present support given media types consider appending mediatypeall end by default set defaultcontenttypestrategy
set custom contentnegotiationstrategy use determine content type use content type requested by default set 412 defaultcontenttype
whether path extension url path used determine requested media type by default set true case request hotelspdf interpreted request applicationpdf regardless accept header
add mapping key extracted path extension query parameter mediatype required order parameter strategy work extensions explicitly registered also whitelisted purpose reflected file download attack detection see spring framework reference documentation details rfd attack protection the path extension strategy also try use servletcontextgetmimetype mediatypefactory resolve path extensions change behavior see useregisteredextensionsonly property extension key look mediatype media type mediatypesmap replacemediatypesmap
whether disable checking accept request header by default value set false
set query parameter name use favorparameter on the default parameter name format
alternative mediatype mediatypestring mediatype replacemediatypesmap
whether request parameter format default used determine requested media type option work must register mediatypestring mediatype media type mappings by default set false parameternamestring
favorpathextension set property determines whether allow use jaf java activation framework resolve path extension specific mediatype 50 favor useregisteredextensionsonlyboolean reverse behavior
whether propagate query parameters current request target redirect url default false
set specific redirect 3xx status code use if set orgspringframeworkwebservletviewredirectview select httpstatusmovedtemporarily 302 default
whether interpret given redirect url starts slash relative current servletcontext ie relative web application root default true
set list headers preflight request list allowed use actual request special value may used allow headers a header name required listed one of cachecontrol contentlanguage expires lastmodified pragma per cors spec by default headers allowed
configure long seconds response preflight request cached clients by default set 1800 seconds 30 minutes
set list response headers simple headers ie cachecontrol contentlanguage contenttype expires lastmodified pragma actual response might exposed note supported property by default set
whether browser send credentials cookies along cross domain requests annotated endpoint configured value set accesscontrolallowcredentials response header preflight requests note aware option establishes high level trust configured domains also increases surface attack web application exposing sensitive userspecific information cookies csrf tokens by default set case accesscontrolallowcredentials header also set credentials therefore allowed
list allowed origins specific origins eg httpdomain1com origins a matched origin listed accesscontrolalloworigin response header preflight actual cors requests by default origins allowed note cors checks use values forwarded hrefhttptoolsietforghtmlrfc7239rfc 7239 xforwardedhost xforwardedport xforwardedproto headers present order reflect clientoriginated address consider using forwardedheaderfilter order choose central place whether extract use discard headers see spring framework reference filter
set http methods allow eg get post etc special value allows methods by default simple methods ie get head post allowed
set status code set response optional if set response status 200 ok
class constructor contentnegotiationmanager applicationcontext 4312
register bean name view resolver interprets view names names orgspringframeworkwebservletview beans
register viewresolver bean instance may useful configure custom or 3rd party resolver implementation may also used alternative registration methods class dont expose advanced property needs set
register tiles 3x view resolver note must also configure tiles adding orgspringframeworkwebservletviewtiles3tilesconfigurer bean
register jsp view resolver specified prefix suffix when method invoked once call register new viewresolver instance note since its easy determine jsp exists without forwarding it using multiple jspbased view resolvers makes sense combination viewnames property resolver indicating view names handled resolver
register script template view resolver empty default view name prefix suffix 42
register groovy markup view resolver empty default view name prefix default suffix tpl
register freemarker view resolver empty default view name prefix default suffix ftl note must also configure freemarker adding orgspringframeworkwebservletviewfreemarkerfreemarkerconfigurer bean
enable use contentnegotiatingviewresolver front configured view resolvers select among selected views based media types requested client eg accept header if invoked multiple times provided default views added default views may configured already contentnegotiatingviewresolversetdefaultviews
provide custom messagecodesresolver building message codes data binding validation error codes leave return value null keep default
provide custom validator instead one created default default implementation assuming jsr303 classpath is orgspringframeworkvalidationbeanvalidationoptionalvalidatorfactorybean leave return value null keep default
set prefix gets prepended view names building url orgspringframeworkwebservletviewurlbasedviewresolversetprefix
enable disable caching this equivalent setting cachelimit cachelimit property default limit 1024 0 respectively default true caching enabled disable debugging development orgspringframeworkwebservletviewurlbasedviewresolversetcacheboolean
specify maximum number entries view cache default 1024 orgspringframeworkwebservletviewurlbasedviewresolversetcacheboolean
set view names or name patterns handled view resolver view names contain simple wildcards my report repo match view name myreport orgspringframeworkwebservletviewurlbasedviewresolversetviewnames
set static attributes added model every request views resolved view resolver allows setting kind attribute values example bean references orgspringframeworkwebservletviewurlbasedviewresolversetattributesmap
set suffix gets appended view names building url orgspringframeworkwebservletviewurlbasedviewresolversetsuffix
set view class used create views orgspringframeworkwebservletviewurlbasedviewresolversetviewclass
add resource transformer chain transformer transformer add current instance chained method invocation
add resource resolver chain resolver resolver add current instance chained method invocation
map simple controller given url path or pattern order set response status given code without rendering body 41
map view controller given url path or pattern order render response preconfigured status code view patterns like admin articlesarticlenamew allowed see orgspringframeworkutilantpathmatcher details syntax
map view controller given url path or pattern order redirect another url default redirect url expected relative current servletcontext ie relative web application root 41
return handlermapping contains registered view controller mappings null registrations 4312
return registered corsconfiguration objects keyed path pattern
enable crossorigin request handling specified path pattern exact path mapping uris such admin supported well antstyle path patterns such admin by default origins headers credentials get head post methods allowed max age set 30 minutes the following defaults applied corsregistration allow origins allow simple methods get head post allow headers set max age 1800 seconds 30 minutes
return registered interceptors
adds provided webrequestinterceptor interceptor interceptor add interceptorregistration allows optionally configure registered interceptor example adding url patterns apply to
adds provided handlerinterceptor interceptor interceptor add interceptorregistration allows optionally configure registered interceptor example adding url patterns apply to
return resourcehttprequesthandler instance
configure chain resource resolvers transformers use useful example apply version strategy resource urls if method invoked default simple pathresourceresolver used order match url paths resources configured locations cacheresources whether cache result resource resolution setting true recommended production and false development especially applying version strategy resourcehandlerregistration instance chained method invocation 41
create resourcehandlerregistration instance pathpatterns one resource url path patterns
configure chain resource resolvers transformers use useful example apply version strategy resource urls if method invoked default simple pathresourceresolver used order match url paths resources configured locations cacheresources whether cache result resource resolution setting true recommended production and false development especially applying version strategy cache cache use storing resolved transformed resources default orgspringframeworkcacheconcurrentconcurrentmapcache used since resources arent serializable dependent application host one use distributed cache rather inmemory cache resourcehandlerregistration instance chained method invocation 41
specify orgspringframeworkhttpcachecontrol used resource handler setting custom value override configuration set setcacheperiod cachecontrol cachecontrol configuration use resourcehandlerregistration instance chained method invocation 42
add one resource locations serve static content location must point valid directory multiple locations may specified commaseparated list locations checked given resource order specified for example classpathmetainfpublicwebresources allows resources served web application root jar classpath contains metainfpublicwebresources directory resources web application root taking precedence for orgspringframeworkcoreiourlresource urlbased resources eg files http urls etc method supports special prefix indicate charset associated url relative paths appended encoded correctly eg charsetwindows31jhttpexampleorgpath resourcehandlerregistration instance chained method invocation
specify cache period resources served resource handler seconds default send cache headers rely lastmodified timestamps only set 0 order send cache headers prevent caching positive number seconds send cache headers given maxage value cacheperiod time cache resources seconds resourcehandlerregistration instance chained method invocation
this implementation returns null
this implementation returns null
whether resource handler already registered given path pattern
return handler mapping mapped resource handlers null case registrations
variant resourcehandlerregistryapplicationcontext servletcontext contentnegotiationmanager also accepts urlpathhelper used mapping requests static resources 4313
add resource handler serving static resources based specified url path patterns handler invoked every incoming request matches one specified path patterns patterns like static cssfilenamewcss allowed see orgspringframeworkutilantpathmatcher details syntax resourcehandlerregistration use configure registered resource handler
create new resource handler registry given application context applicationcontext spring application context servletcontext corresponding servlet context contentnegotiationmanager content negotiation manager use 43
specify order use resource handling relative handlermapping handlermappings configured spring mvc application context the default value used integermaxvalue1
pathmatcher implementation use interceptor optional advanced property required using custom pathmatcher implementations support mapping metadata ant path patterns supported default
create interceptorregistration instance
listbased variant excludepathpatternsstring 503
listbased variant addpathpatternsstring 503
specify order position used default 0 50
build underlying interceptor url patterns provided returned type mappedinterceptor otherwise handlerinterceptor
set pathmatcher implementation use matching url paths registered url patterns default antpathmatcher orgspringframeworkutilantpathmatcher
whether match urls irrespective presence trailing slash enabled method mapped users also matches users the default value true
set urlpathhelper use resolution lookup paths use override default urlpathhelper custom subclass share common urlpathhelper settings across multiple handlermappings methodnameresolvers
configure path prefix apply matching controller methods prefixes used enrich mappings every requestmapping method whose controller type matched corresponding predicate prefix first matching predicate used consider using orgspringframeworkwebmethodhandlertypepredicate handlertypepredicate group controllers prefix prefix apply predicate predicate matching controller types 51
whether use suffix pattern match matching patterns requests enabled method mapped users also matches users by default set true registeredsuffixpatternmatch
whether suffix pattern matching work path extensions explicitly registered webmvcconfigurerconfigurecontentnegotiation configure content negotiation generally recommended reduce ambiguity avoid issues appears path reasons by default set false webmvcconfigurerconfigurecontentnegotiation
destroy wrapped servlet instance javaxservletservletdestroy
initialize wrapped servlet instance javaxservletservletinitjavaxservletservletconfig
invoke wrapped servlet instance javaxservletservletservicejavaxservletservletrequest javaxservletservletresponse
set urlpathhelper use resolution lookup paths use override default urlpathhelper custom subclass share common urlpathhelper settings across multiple handlermappings methodnameresolvers only relevant cachemappings setting setcachemappings orgspringframeworkwebservlethandlerabstracturlhandlermappingseturlpathhelper
map specific url paths specific cache seconds overrides default cache seconds setting interceptor specify 1 exclude url path default caching supports direct matches eg registered test matches test various antstyle pattern matches eg registered t matches test team details see antpathmatcher javadoc note path patterns supposed overlap request matches several mappings effectively undefined one apply due lack key ordering javautilproperties cachemappings mapping url paths as keys cache seconds as values need integerparsable setcacheseconds orgspringframeworkutilantpathmatcher
implementation empty
set pathmatcher implementation use matching url paths registered url patterns determining cache mappings default antpathmatcher addcachemapping setcachemappings orgspringframeworkutilantpathmatcher
implementation empty
map specific url paths specific orgspringframeworkhttpcachecontrol overrides default cache seconds setting interceptor specify empty orgspringframeworkhttpcachecontrol instance exclude url path default caching supports direct matches eg registered test matches test various antstyle pattern matches eg registered t matches test team details see antpathmatcher javadoc note path patterns supposed overlap request matches several mappings effectively undefined one apply due lack key ordering underlying javautilhashmap cachecontrol cachecontrol use paths url paths map given cachecontrol 42 setcacheseconds orgspringframeworkutilantpathmatcher
look orgspringframeworkhttpcachecontrol instance given url path supports direct matches eg registered test matches test various antstyle pattern matches eg registered t matches test team details see antpathmatcher class urlpath url bean mapped associated cachecontrol null found orgspringframeworkutilantpathmatcher
look cacheseconds integer value given url path supports direct matches eg registered test matches test various antstyle pattern matches eg registered t matches test team details see antpathmatcher class urlpath url bean mapped cacheseconds integer value null found orgspringframeworkutilantpathmatcher
return name view delegate to null using view instance
return configured http status code null 41
return view object null using view name resolved dispatcherservlet via viewresolver 41
return modelandview object specified view name the content requestcontextutilsgetinputflashmap input flashmap also added model getviewname
set urlpathhelper use resolution lookup paths use override default urlpathhelper custom subclass share common urlpathhelper settings across multiple methodnameresolvers handlermappings orgspringframeworkwebservlethandlerabstracturlhandlermappingseturlpathhelper
retrieves url path use lookup delegates getviewnameforrequest also adds content requestcontextutilsgetinputflashmap model
returns view name based url filename prefixsuffix applied appropriate extractviewnamefromurlpath setprefix setsuffix
extract url filename given request uri uri request uri example indexhtml extracted uri filename example index
returns view name based url filename prefixsuffix applied appropriate uri request uri example indexhtml extracted uri filename example index extractviewnamefromurlpath postprocessviewname
extract url path given request suitable view name extraction request current http request url use view name extraction
recreate requestmappinginfo given custom request condition
return custom condition requestmappinginfo null
compares this info ie current instance another info context request note assumed instances obtained via getmatchingconditionhttpservletrequest ensure conditions content relevant current request
return custom pathmatcher use patternsrequestcondition any
set whether suffix pattern matching restricted registered file extensions only setting property also sets suffixpatternmatchtrue requires setcontentnegotiationmanager also configured order obtain registered file extensions
creates new instance given request conditions
combine this request mapping info ie current instance another request mapping info instance example combine type methodlevel request mappings new request mapping info instance never null
return file extensions use suffix pattern matching registeredsuffixpatternmatchtrue extensions obtained configured contentnegotiationmanager
return custom urlpathhelper use patternsrequestcondition any
return contentnegotiationmanager use producesrequestcondition any
return name mapping null
checks conditions request mapping info match provided request returns potentially new request mapping info conditions tailored current request for example returned instance may contain subset url patterns match current request sorted best matching patterns top new instance case conditions match null otherwise
partial matches methods consumes produces params
create new partialmatch instance info requestmappinginfo matches url path request current request
iterate requestmappinginfos again look match url least raise exceptions according doesnt match httprequestmethodnotsupportedexception matches url http method httpmediatypenotacceptableexception matches url consumableproducible media types
return declared producible types among also match methods consumes conditions
get url path patterns associated requestmappinginfo
provide comparator sort requestmappinginfos matched request
check given requestmappinginfo matches current request return potentially new instance conditions match current request example subset url patterns info case match null otherwise
return declared http methods
partial matches methods consumes
expose uri template variables matrix variables producible media types request handlermappinguritemplatevariablesattribute handlermappingmatrixvariablesattribute handlermappingproduciblemediatypesattribute
partial matches methods consumes produces
return declared params conditions among also match methods consumes params conditions
partial matches methods
return declared consumable types among also match methods condition
implementation expects handler handlermethod handler handler instance check whether adapter adapt given handler
implementation expects handler handlermethod
implementation expects handler handlermethod
send object formatted single sse data line its equivalent to static import sseemitter sseemitter emitter new sseemitter emittersendeventdatamyobject please see responsebodyemittersendobject parent javadoc important notes exception handling object object write ioexception raised io error occurs javalangillegalstateexception wraps errors
send sse event prepared given builder example static import sseemitter sseemitter emitter new sseemitter emittersendeventnameupdateid1datamyobject builder builder sse formatted event ioexception raised io error occurs
send object formatted single sse data line its equivalent to static import sseemitter sseemitter emitter new sseemitter emittersendeventdatamyobject mediatypeapplicationjson please see responsebodyemittersendobject parent javadoc important notes exception handling object object write mediatype mediatype hint selecting httpmessageconverter ioexception raised io error occurs
process given reactive return value decide whether adapt responsebodyemitter deferredresult emitter streaming null handled internally deferredresult
return custom return value handlers null
return list return value handlers use including builtin custom handlers provided via setreturnvaluehandlers
find exceptionhandler method given exception default implementation searches methods class hierarchy controller first found continues searching additional exceptionhandler methods assuming plain controlleradvice controlleradvice springmanaged beans detected handlermethod method exception raised may null exception raised exception method handle exception null none
return list argument resolvers use including builtin resolvers custom resolvers provided via setcustomargumentresolvers
return configured argument resolvers possibly null initialized yet via afterpropertiesset
add one components invoked execution controller method annotated responsebody returning responseentity body written response selected httpmessageconverter
configure complete list supported argument types thus overriding resolvers would otherwise configured default
return configured handlers possibly null initialized yet via afterpropertiesset
return custom argument resolvers null
find exceptionhandler method invoke handle raised exception
configure complete list supported return value types thus overriding handlers would otherwise configured default
set modelandviewcontainersetrequesthandledboolean false indicate method signature provides access response subsequently underlying method returns null request considered directly handled
create instance list objects either type controlleradvicebean requestbodyadvice
create uricomponentsbuilder invoking mock controller method controller method supplied argument values used delegate frommethodclass method object for example given controller classcode requestmappingpeopleidaddresses class addresscontroller requestmappingcountry public httpentityvoid getaddressesforcountrypathvariable string country requestmappingvalue methodrequestmethodpost public void addaddressaddress address uricomponentsbuilder created classcode inline style static import mvcuricomponentsbuilderon mvcuricomponentsbuilderfrommethodcall onaddresscontrollerclassgetaddressesforcountryusbuildandexpand1 longer form useful repeated invocation and void controller methods addresscontroller controller mvcuricomponentsbuilderonaddresscontrollerclass controlleraddaddressnull builder mvcuricomponentsbuilderfrommethodcallcontroller controllergetaddressesforcountryus builder mvcuricomponentsbuilderfrommethodcallcontroller note method extracts values forwarded xforwarded headers found see classlevel docs info either value returned mock controller invocation mock controller invocation uricomponents instance onclass controllerclass
default constructor protected prevent direct instantiation fromcontrollerclass frommethodnameclass string object frommethodcallobject frommappingnamestring frommethodclass method object
return mock controller instance requestmapping method controller invoked supplied argument values remembered result used create uricomponentsbuilder via frommethodcallobject this longer version onclass needed controller methods returning void well repeated invocations classcode foocontroller foocontroller controllerfoocontrollerclass foocontrollersavefoo1 null builder mvcuricomponentsbuilderfrommethodcallfoocontroller foocontrollersavefoo2 null builder mvcuricomponentsbuilderfrommethodcallfoocontroller note method extracts values forwarded xforwarded headers found see classlevel docs controllertype target controller
create new methodargumentbuilder instance 42
alternative frommethodclass method object accepts uricomponentsbuilder representing base url useful using mvcuricomponentsbuilder outside context processing request apply custom baseurl matching current request note method extracts values forwarded xforwarded headers found see classlevel docs baseurl builder base url builder cloned therefore modified may reused calls controllertype controller type method controller method args argument values controller method uricomponentsbuilder instance never null 42
alternative frommethodcallobject accepts uricomponentsbuilder representing base url useful using mvcuricomponentsbuilder outside context processing request apply custom baseurl matching current request note method extracts values forwarded xforwarded headers found see classlevel docs builder builder base url builder cloned therefore modified may reused calls info either value returned mock controller invocation mock controller invocation uricomponents instance
alternative frommappingnamestring accepts uricomponentsbuilder representing base url useful using mvcuricomponentsbuilder outside context processing request apply custom baseurl matching current request note method extracts values forwarded xforwarded headers found see classlevel docs builder builder base url builder cloned therefore modified may reused calls name mapping name builder prepare uri string illegalargumentexception mapping name found unique match 42
alternative fromcontrollerclass accepts uricomponentsbuilder representing base url useful using mvcuricomponentsbuilder outside context processing request apply custom baseurl matching current request note method extracts values forwarded xforwarded headers found see classlevel docs builder builder base url builder cloned therefore modified may reused calls controllertype controller build uri uricomponentsbuilder instance never null
use method need apply strong encoding expanded uri variables quoting characters reserved meaning 508
alternative frommethodnameclass string object accepts uricomponentsbuilder representing base url useful using mvcuricomponentsbuilder outside context processing request apply custom baseurl matching current request note method extracts values forwarded xforwarded headers found see classlevel docs builder builder base url builder cloned therefore modified may reused calls controllertype controller methodname method name args argument values uricomponentsbuilder instance never null illegalargumentexception matching one matching method
create uricomponentsbuilder mapping controller method array method argument values method delegates frommethodclass method object note method extracts values forwarded xforwarded headers found see classlevel docs controllertype controller methodname method name args argument values uricomponentsbuilder instance never null illegalargumentexception matching one matching method
return sessionattributeshandler instance given handler type never null
return configured argument resolvers possibly null initialized yet via afterpropertiesset
configure complete list supported argument types thus overriding resolvers would otherwise configured default
always return true since method argument return value type processed way method argument recognized handlermethodargumentresolver interpreted request parameter simple type model attribute otherwise return value recognized handlermethodreturnvaluehandler interpreted model attribute
return configured handlers possibly null initialized yet via afterpropertiesset
configurablebeanfactory expected resolving expressions method argument default values
configure complete list supported return value types thus overriding handlers would otherwise configured default
return configured modelandviewresolver modelandviewresolvers null
return list argument resolvers use including builtin resolvers custom resolvers provided via setcustomargumentresolvers
return list argument resolvers use initbinder methods including builtin custom resolvers
implementation always returns 1 requestmapping method calculate lastmodified value call webrequestchecknotmodifiedlong return null result call true
return list return value handlers use including builtin custom handlers provided via setreturnvaluehandlers
template method create new initbinderdatabinderfactory instance the default implementation creates servletrequestdatabinderfactory overridden custom servletrequestdatabinder subclasses bindermethods initbinder methods initbinderdatabinderfactory instance use exception case invalid state arguments
return configured webbindinginitializer null none
return custom argument resolvers null
return argument resolvers initbinder methods possibly null initialized yet via afterpropertiesset
return owning factory bean instance null none
configure supported argument types initbinder methods
return custom return value handlers null
add one responsebodyadvice instances intercept response responsebody responseentity return values written response body
add one requestbodyadvice instances intercept request read converted requestbody httpentity method arguments
invoke requestmapping handler method preparing modelandview view resolution required 42 createinvocablehandlermethodhandlermethod
set response status according responsestatus annotation
bridge controller methodlevel annotations
bridge actual return value generic type within declared async return type eg foo instead deferredresult
bridge actual controller typelevel annotations
invoke method handle return value one configured handlermethodreturnvaluehandler handlermethodreturnvaluehandlers webrequest current request mavcontainer modelandviewcontainer request providedargs given arguments matched type not resolved
bridge controller methodlevel annotations
merge uri variables property values use data binding
constructor converters request responsebodyadvice
whether given plain methodparameter method parameter multipart supported supports following annotated requestpart of type multipartfile unless annotated requestparam of type javaxservlethttppart unless annotated requestparam
complete request processing error a dispatch made app server spring mvc pass exception exception handling mechanism note however stage request processing response committed response status longer changed note method called application complete request processing error used container related events error sendobject sending
complete request processing performing dispatch servlet container spring mvc invoked more completes request processing lifecycle note method called application complete request processing used container related events error sendobject sending
return configured timeout value any
overloaded variant sendobject also accepts mediatype hint serialize given object object object write mediatype mediatype hint selecting httpmessageconverter ioexception raised io error occurs javalangillegalstateexception wraps errors
return map uri template variables empty map
adapt given argument method parameter necessary arg resolved argument parameter method parameter descriptor adapted argument original resolved argument asis 435
constructor converters request responsebodyadvice 42
whether raise fatal bind exception validation errors binder data binder used perform data binding parameter method parameter descriptor true next method argument type errors 415
create new httpinputmessage given nativewebrequest webrequest web request create input message input message
create method argument value expected parameter type reading given httpinputmessage expected type argument value created inputmessage http input message representing current request parameter method parameter descriptor targettype target type necessarily method parameter type eg httpentity created method argument value ioexception reading request fails httpmediatypenotsupportedexception suitable message converter found
create method argument value expected parameter type reading given request expected type argument value created webrequest current request parameter method parameter descriptor may null paramtype type argument value created created method argument value ioexception reading request fails httpmediatypenotsupportedexception suitable message converter found
validate binding target applicable the default implementation checks javaxvalidationvalid springs orgspringframeworkvalidationannotationvalidated custom annotations whose name starts valid binder databinder used parameter method parameter descriptor 415 isbindexceptionrequired
return media types supported provided message converters sorted specificity via mediatypesortbyspecificitylist
return generic type returntype or nested type httpentity
writes given return value given web request delegates writewithmessageconvertersobject methodparameter servletserverhttprequest servletserverhttpresponse
constructor list converters contentnegotiationmanager well requestresponse body advice instances
check path file extension whether extension either whitelistedextensions whitelisted explicitly contentnegotiationmanagergetallfileextensions registered not status 2xx range contentdisposition header safe attachment file name ftxt added prevent rfd exploits
return whether returned value declared return type extends resource
returns media types produced resulting media types are the producible media types specified request mappings media types configured converters write specific return value mediatypeall 42
constructor list converters contentnegotiationmanager
return specific acceptable producible media types qvalue former
creates new httpoutputmessage given nativewebrequest webrequest web request create output message output message
returns media types produced getproduciblemediatypeshttpservletrequest class type
writes given return type given output message value value write output message returntype type value inputmessage input messages used inspect accept header outputmessage output message write ioexception thrown case io errors httpmediatypenotacceptableexception thrown conditions indicated accept header request cannot met message converters
complete constructor resolving requestbody method arguments handling responsebody consider also providing contentnegotiationmanager 42
throws methodargumentnotvalidexception validation fails httpmessagenotreadableexception requestbodyrequired true body content suitable converter read content with
complete constructor resolving requestbody handling responsebody
basic constructor converters contentnegotiationmanager suitable resolving requestbody handling responsebody without request responsebodyadvice
complete constructor resolving httpentity handling responseentity
complete constructor resolving httpentity method arguments handling responseentity consider also providing contentnegotiationmanager 42
basic constructor converters contentnegotiationmanager suitable resolving httpentity handling responseentity without request responsebodyadvice
create new instance bindermethods one initbinder methods initializer provides global data binder initialization
returns instance extendedservletrequestdatabinder
return configured redirect patterns any 41
provides handling standard spring mvc exceptions ex target exception request current request
customize response servletrequestbindingexception this method delegates handleexceptioninternal ex exception headers headers written response status selected response status request current request responseentity instance
customize response httpmediatypenotacceptableexception this method delegates handleexceptioninternal ex exception headers headers written response status selected response status request current request responseentity instance
customize response httpmessagenotreadableexception this method delegates handleexceptioninternal ex exception headers headers written response status selected response status request current request responseentity instance
customize response httprequestmethodnotsupportedexception this method logs warning sets allow header delegates handleexceptioninternal ex exception headers headers written response status selected response status request current request responseentity instance
customize response httpmediatypenotsupportedexception this method sets accept header delegates handleexceptioninternal ex exception headers headers written response status selected response status request current request responseentity instance
customize response missingpathvariableexception this method delegates handleexceptioninternal ex exception headers headers written response status selected response status request current request responseentity instance 42
customize response conversionnotsupportedexception this method delegates handleexceptioninternal ex exception headers headers written response status selected response status request current request responseentity instance
customize response nohandlerfoundexception this method delegates handleexceptioninternal ex exception headers headers written response status selected response status request current request responseentity instance 40
customize response nohandlerfoundexception this method delegates handleexceptioninternal ex exception headers headers written response status selected response status webrequest current request responseentity instance 428
customize response httpmessagenotwritableexception this method delegates handleexceptioninternal ex exception headers headers written response status selected response status request current request responseentity instance
customize response methodargumentnotvalidexception this method delegates handleexceptioninternal ex exception headers headers written response status selected response status request current request responseentity instance
customize response bindexception this method delegates handleexceptioninternal ex exception headers headers written response status selected response status request current request responseentity instance
single place customize response body exception types the default implementation sets webutilserrorexceptionattribute request attribute creates responseentity given body headers status ex exception body body response headers headers response status response status request current request
customize response missingservletrequestparameterexception this method delegates handleexceptioninternal ex exception headers headers written response status selected response status request current request responseentity instance
customize response typemismatchexception this method delegates handleexceptioninternal ex exception headers headers written response status selected response status request current request responseentity instance
customize response missingservletrequestpartexception this method delegates handleexceptioninternal ex exception headers headers written response status selected response status request current request responseentity instance
delegates createrequestmappinginforequestmapping requestcondition supplying appropriate custom requestcondition depending whether supplied annotatedelement class method getcustomtypeconditionclass getcustommethodconditionmethod
create requestmappinginfo supplied requestmapping requestmapping annotation either directly declared annotation metaannotation synthesized result merging annotation attributes within annotation hierarchy
provide custom methodlevel request condition custom requestcondition type long condition type returned calls method order ensure custom request conditions combined compared consider extending abstractrequestcondition custom condition types using compositerequestcondition provide multiple custom conditions method handler method create condition condition null
expects handler either typelevel controller annotation typelevel requestmapping annotation
return file extensions use suffix pattern matching
set contentnegotiationmanager use determine requested media types set default constructor used
provide custom typelevel request condition custom requestcondition type long condition type returned calls method order ensure custom request conditions combined compared consider extending abstractrequestcondition custom condition types using compositerequestcondition provide multiple custom conditions handlertype handler type create condition condition null
whether suffix pattern matching work path extensions explicitly registered contentnegotiationmanager generally recommended reduce ambiguity avoid issues appears path reasons by default set false
uses method typelevel requestmapping annotations create requestmappinginfo created requestmappinginfo null method requestmapping annotation getcustommethodconditionmethod getcustomtypeconditionclass
resolve placeholder values given array patterns new array updated patterns
always returns true see classlevel note
simple constructor reactive type support based default instance reactiveadapterregistry orgspringframeworkcoretasksynctaskexecutor contentnegotiationmanager accept header strategy
complete constructor pluggable reactive type support messageconverters converters write emitted objects reactiveregistry reactive return value type support executor blocking io writes items emitted reactive types manager detecting streaming media types 50
implementation downcasts webdatabinder servletrequestdatabinder binding servletrequestdatabinderfactory
instantiate model attribute uri template variable request parameter name matches model attribute name appropriate type conversion strategy none true delegate back base class createattributefromrequestvalue
obtain value request may used instantiate model attribute type conversion string target type the default implementation looks attribute name match uri variable first request parameter attributename model attribute name request current request request value try convert null none
create model attribute string request value eg uri template variable request parameter using type conversion the default implementation converts registered converter perform conversion sourcevalue source value create model attribute attributename name attribute never null parameter method parameter binderfactory creating webdatabinder instance request current request created model attribute null suitable conversion found
configured redirect patterns any
default implementation returns inputmessage passed in
default implementation returns body passed in
default implementation returns body passed in
each attribute value formatted string added
formats attribute value string adding it
each attribute value formatted string merged
each attribute value formatted string added
return attributes candidate flash storage empty map
each value formatted string added
formats attribute value string adding it
the value formatted string added
handle case argument annotated valid requestbody requestpart argument fails validation by default http 400 error sent back client request current http request response current http response handler executed handler empty modelandview indicating exception handled ioexception potentially thrown httpservletresponsesenderror
sets plain setorderint order lowestprecedence
handle case required parameter missing the default implementation sends http 400 error returns empty modelandview alternatively fallback view could chosen missingservletrequestparameterexception could rethrown asis ex missingservletrequestparameterexception handled request current http request response current http response handler executed handler empty modelandview indicating exception handled ioexception potentially thrown httpservletresponsesenderror
handle case orgspringframeworkwebbindwebdatabinder conversion error occurs the default implementation sends http 400 error returns empty modelandview alternatively fallback view could chosen typemismatchexception could rethrown asis ex typemismatchexception handled request current http request response current http response handler executed handler empty modelandview indicating exception handled ioexception potentially thrown httpservletresponsesenderror
handle case plain modelattribute modelattribute method argument binding validation errors followed another method argument type bindingresult by default http 400 error sent back client request current http request response current http response handler executed handler empty modelandview indicating exception handled ioexception potentially thrown httpservletresponsesenderror
handle case plain orgspringframeworkhttpconverterhttpmessageconverter message converter cannot write http request the default implementation sends http 500 error returns empty modelandview alternatively fallback view could chosen httpmessagenotwritableexception could rethrown asis ex httpmessagenotwritableexception handled request current http request response current http response handler executed handler empty modelandview indicating exception handled ioexception potentially thrown httpservletresponsesenderror
handle case declared path variable match extracted uri variable the default implementation sends http 500 error returns empty modelandview alternatively fallback view could chosen missingpathvariableexception could rethrown asis ex missingpathvariableexception handled request current http request response current http response handler executed handler empty modelandview indicating exception handled ioexception potentially thrown httpservletresponsesenderror 42
handle case plain requestpart requestpart multipartfile javaxservlethttppart argument required missing by default http 400 error sent back client request current http request response current http response handler executed handler empty modelandview indicating exception handled ioexception potentially thrown httpservletresponsesenderror
handle case orgspringframeworkwebbindwebdatabinder conversion cannot occur the default implementation sends http 500 error returns empty modelandview alternatively fallback view could chosen conversionnotsupportedexception could rethrown asis ex conversionnotsupportedexception handled request current http request response current http response handler executed handler empty modelandview indicating exception handled ioexception potentially thrown httpservletresponsesenderror
handle case request handler method found particular http request method the default implementation logs warning sends http 405 error sets allow header returns empty modelandview alternatively fallback view could chosen httprequestmethodnotsupportedexception could rethrown asis ex httprequestmethodnotsupportedexception handled request current http request response current http response handler executed handler null none chosen time exception for example multipart resolution failed empty modelandview indicating exception handled ioexception potentially thrown httpservletresponsesenderror
handle case plain orgspringframeworkhttpconverterhttpmessageconverter message converters found put posted content the default implementation sends http 415 error sets accept header returns empty modelandview alternatively fallback view could chosen httpmediatypenotsupportedexception could rethrown asis ex httpmediatypenotsupportedexception handled request current http request response current http response handler executed handler empty modelandview indicating exception handled ioexception potentially thrown httpservletresponsesenderror
handle case plain orgspringframeworkhttpconverterhttpmessageconverter message converter cannot read http request the default implementation sends http 400 error returns empty modelandview alternatively fallback view could chosen httpmessagenotreadableexception could rethrown asis ex httpmessagenotreadableexception handled request current http request response current http response handler executed handler empty modelandview indicating exception handled ioexception potentially thrown httpservletresponsesenderror
handle case plain orgspringframeworkhttpconverterhttpmessageconverter message converters found acceptable client expressed via accept header the default implementation sends http 406 error returns empty modelandview alternatively fallback view could chosen httpmediatypenotacceptableexception could rethrown asis ex httpmediatypenotacceptableexception handled request current http request response current http response handler executed handler empty modelandview indicating exception handled ioexception potentially thrown httpservletresponsesenderror
handle case handler found dispatch the default implementation sends http 404 error returns empty modelandview alternatively fallback view could chosen nohandlerfoundexception could rethrown asis ex nohandlerfoundexception handled request current http request response current http response handler executed handler null none chosen time exception for example multipart resolution failed empty modelandview indicating exception handled ioexception potentially thrown httpservletresponsesenderror 40
handle case unrecoverable binding exception occurs eg required header required cookie the default implementation sends http 400 error returns empty modelandview alternatively fallback view could chosen exception could rethrown asis ex exception handled request current http request response current http response handler executed handler empty modelandview indicating exception handled ioexception potentially thrown httpservletresponsesenderror
invoked send server error sets status 500 also sets request attribute javaxservleterrorexception exception
handle case async request timed out the default implementation sends http 503 error ex asyncrequesttimeoutexception to handled request current http request response current http response handler executed handler null none chosen time exception for example multipart resolution failed empty modelandview indicating exception handled ioexception potentially thrown httpservletresponsesenderror 428
apply resolved status code reason response the default implementation sends response error using httpservletresponsesenderrorint httpservletresponsesenderrorint string reason returns empty modelandview statuscode http status code reason associated reason may null empty response current http response 50
template method handles responsestatus responsestatus annotation the default implementation delegates applystatusandreason status code reason annotation responsestatus responsestatus annotation request current http request response current http response handler executed handler null none chosen time exception eg multipart resolution failed ex exception empty modelandview ie exception resolved
template method handles responsestatusexception the default implementation delegates applystatusandreason status code reason exception ex exception request current http request response current http response handler executed handler null none chosen time exception eg multipart resolution failed empty modelandview ie exception resolved 50
private constructor accepting parsed media type expressions
returns other instance expressions returns this instance otherwise practically means methodlevel consumes overrides typelevel consumes condition
whether condition media type expressions
returns 0 two conditions number expressions less 0 this specific media type expressions greater 0 other specific media type expressions it assumed instances obtained via getmatchingconditionhttpservletrequest instance contains matching consumable media type expression otherwise empty
checks contained media type expressions match given request contenttype header returns instance guaranteed contain matching expressions only match performed via mediatypeincludesmediatype request current request instance condition contains expressions new condition matching expressions only null expressions match
returns media types condition excluding negated expressions
preflight request match wouldbe actual request hence empty conditions match otherwise try match http method accesscontrolrequestmethod header
returns 0 two conditions contain number http request methods less 0 this instance http request method other doesnt greater 0 other http request method this doesnt it assumed instances obtained via getmatchingconditionhttpservletrequest therefore instance contains matching http request method otherwise empty
returns new instance union http request methods this other instance
check http request methods match given request return instance contains matching http request method only request current request instance condition empty unless request method http options new condition matched request method null match condition empty request method options
one instance empty return other instances conditions combine individual conditions ensuring type number
one instance empty wins instances conditions compare order provided
whether instance contains 0 conditions not
delegate all contained conditions match request return resulting matching condition instances an empty compositerequestcondition matches requests
private constructor already parsed media type expressions
checks contained media type expressions match given request contenttype header returns instance guaranteed contain matching expressions only match performed via mediatypeiscompatiblewithmediatype request current request instance expressions new condition matching expressions null expressions match
return contained producible media types excluding negated expressions
compares another produces condition follows sort accept header media types quality value via mediatypesortbyqualityvaluelist iterate list get first index matching media types produces condition first matching mediatypeequalsobject mediatypeincludesmediatype if lower index found condition index wins if indexes equal media types index compared mediatypespecificitycomparator it assumed instances obtained via getmatchingconditionhttpservletrequest instance contains matching producible media type expression otherwise empty
returns other instance expressions returns this instance otherwise practically means methodlevel produces overrides typelevel produces condition
whether condition media type expressions
producesrequestconditionstring string also accepting contentnegotiationmanager produces expressions syntax defined requestmappingproduces headers expressions syntax defined requestmappingheaders manager used determine requested media types
additional constructor flags using suffix pattern trailing slash matches patterns url patterns use 0 condition match every request urlpathhelper determining lookup path request pathmatcher path matching patterns usesuffixpatternmatch whether enable matching suffix usetrailingslashmatch whether match irrespective trailing slash
checks patterns match given request returns instance guaranteed contain matching patterns sorted via pathmatchergetpatterncomparatorstring a matching pattern obtained making checks following order direct match pattern match appended pattern doesnt already contain pattern match pattern match appended pattern doesnt already end request current request instance condition contains patterns new condition sorted matching patterns null patterns match
private constructor accepting collection patterns
find patterns matching given lookup path invoking method yield results equivalent calling getmatchingconditionjavaxservlethttphttpservletrequest method provided alternative used request available eg introspection tooling etc lookuppath lookup path match existing patterns collection matching patterns sorted closest match top
creates new instance given url patterns pattern empty start prepended patterns url patterns use 0 condition match every request urlpathhelper urlpathhelper determining lookup path request pathmatcher pathmatcher pattern path matching usesuffixpatternmatch whether enable matching suffix usetrailingslashmatch whether match irrespective trailing slash fileextensions list file extensions consider path matching
compare two conditions based url patterns contain patterns compared one time top bottom via pathmatchergetpatterncomparatorstring compared patterns match equally one instance patterns considered closer match it assumed instances obtained via getmatchingconditionhttpservletrequest ensure contain patterns match request sorted best matches top
returns new instance url patterns current instance this other instance follows if patterns instances combine patterns this patterns other using pathmatchercombinestring string if one instance patterns use them if neither instance patterns use empty string ie
compare another condition based header expressions condition considered specific match has a greater number expressions a greater number nonnegated expressions concrete value it assumed instances obtained via getmatchingconditionhttpservletrequest instance contains matching header expression otherwise empty
returns new instance union header expressions this other instance
returns this instance request matches expressions null otherwise
returns this instance request matches param expressions null otherwise
compare another condition based parameter expressions condition considered specific match has a greater number expressions a greater number nonnegated expressions concrete value it assumed instances obtained via getmatchingconditionhttpservletrequest instance contains matching parameter expressions otherwise empty
returns new instance union param expressions this other instance
compare request conditions held two requestconditionholder instances making sure conditions type one holder empty holder preferred
ensure held request conditions type
combine request conditions held two requestconditionholder instances making sure conditions type one holder empty holder returned
return held request condition null holding one
get matching condition held request condition wrap new requestconditionholder instance otherwise empty holder return holder instance
create new holder wrap given request condition requestcondition condition hold may null
determine default time zone given request called timezone cookie found the default implementation returns specified default time zone any null otherwise request request resolve time zone default time zone or null none defined setdefaulttimezone
determine default locale given request called locale cookie found the default implementation returns specified default locale any else falls back requests acceptheader locale request request resolve locale default locale never null setdefaultlocale javaxservlethttphttpservletrequestgetlocale
return fixed timezone resolver return cookie found any 40
parse given locale value coming incoming cookie the default implementation calls stringutilsparselocalestring accepting localetostring format well bcp 47 language tags localevalue locale value parse corresponding locale instance 43 stringutilsparselocalestring
return fixed locale resolver return cookie found any
determine default time zone given request called timezone session attribute found the default implementation returns specified default time zone any null otherwise request request resolve time zone default time zone or null none defined setdefaulttimezone
determine default locale given request called locale session attribute found the default implementation returns specified default locale any else falls back requests acceptheader locale request request resolve locale default locale never null setdefaultlocale javaxservlethttphttpservletrequestgetlocale
return default locale resolver supposed fall back to any
create fixedlocaleresolver exposes given locale time zone locale locale expose timezone time zone expose
return default timezone resolver supposed fall back to any
configure supported locales check requested locales determined via httpservletrequestgetlocales configured httpservletrequestgetlocale used instead locales supported locales 43
configured default locale any 43
specify whether parse request parameter values bcp 47 language tags instead javas legacy locale specification format note 51 resolver leniently accepts legacy localetostring format well bcp 47 language tags 43 localeforlanguagetagstring localetolanguagetag 51 since accepts true
parse given locale value coming request parameter the default implementation calls stringutilsparselocalestring accepting localetostring format well bcp 47 language tags localevalue locale value parse corresponding locale instance 43
return whether use bcp 47 language tags instead javas legacy locale specification format 43 51 since always returns true
return configured http methods 42
create new webcontentgenerator restrictdefaultsupportedmethods true generator support http methods get head post default false unrestricted
return whether http 11 cachecontrol header used 42 favor getcachecontrol
prevent response cached called http 10 compatibility mode see httpwwwmnotnetcachedocs 42 favor applycachecontrol
option add mustrevalidate every cachecontrol header may useful annotated controller methods programmatically lastmodified calculation described orgspringframeworkwebcontextrequestwebrequestchecknotmodifiedlong default false 42 favor setcachecontrol
return whether http 10 expires header used 42 favor getcachecontrol
apply given cache seconds generate respective http headers that is allow caching given number seconds case positive value prevent caching given 0 value else nothing ie leave caching client response current http response cacheseconds positive number seconds future response cacheable for 0 prevent caching negative value leave caching client mustrevalidate whether client revalidate resource typically necessary controllers lastmodified support 42 favor applycachecontrol
set whether use http 10 expires header default false 42 note cache headers get applied caching enabled or explicitly prevented current request 42 since going forward http 11 cachecontrol header required http 10 headers disappearing
set http headers allow caching given number seconds tells browser revalidate resource mustrevalidate true response current http response seconds number seconds future response cacheable mustrevalidate whether client revalidate resource typically necessary controllers lastmodified support 42 favor applycachecontrol
prepare given response according settings generator applies number cache seconds specified generator response current http response 42
get orgspringframeworkhttpcachecontrol instance builds cachecontrol http response header 42
set whether use http 11 cachecontrol header value nostore preventing caching default true 42 favor setcachecontrol
return whether mustrevalidate added every cachecontrol header 42 favor getcachecontrol
check prepare given request response according settings generator checkrequesthttpservletrequest applycachesecondshttpservletresponse int 42 since lastmodified flag effectively ignored mustrevalidate header generated explicitly configured
apply given cache seconds generate corresponding http headers ie allow caching given number seconds case positive value prevent caching given 0 value nothing else tell browser revalidate resource response current http response cacheseconds positive number seconds future response cacheable for 0 prevent caching
set http cachecontrol header according given settings response current http response cachecontrol preconfigured cache control settings 42
return allow header value use response http options request based configured setsupportedmethods supported methods also automatically adding options list even present supported method means subclasses dont explicitly list options supported method long http options requests handled making call checkrequesthttpservletrequest 43
return configured request header names vary response header 43
check prepare given request response according settings generator checkrequesthttpservletrequest prepareresponsehttpservletresponse 42 since lastmodified flag effectively ignored mustrevalidate header generated explicitly configured
set http methods content generator support default get head post simple form controller types unrestricted general controllers interceptors
set whether use http 11 cachecontrol header default true note cache headers get applied caching enabled or explicitly prevented current request 42 since going forward http 11 cachecontrol header required http 10 headers disappearing
return whether http 11 cachecontrol header value nostore used 42 favor getcachecontrol
check given request supported methods required session any request current http request servletexception request cannot handled check failed 42
return http methods content generator supports
set http headers allow caching given number seconds tell browser revalidate resource response current http response seconds number seconds future response cacheable 42 favor applycachecontrol
whether given flashmap matches current request uses expected request path query parameters saved flashmap
return flashmap contained given list matches request matching flashmap null
return list expired flashmap instances contained given list
obtain mutex modifying flashmap list handled retrieveflashmaps updateflashmaps the default implementation returns shared static mutex subclasses encouraged return specific mutex null indicate synchronization necessary request current request mutex use may null none applicable 403
set urlpathhelper use match flashmap instances requests
specify filters add map dispatcherservlet array filters null registerservletfilterservletcontext filter
add given filter servletcontext map dispatcherservlet follows a default filter name chosen based concrete type the asyncsupported flag set depending return value isasyncsupported asyncsupported a filter mapping created dispatcher types request forward include conditionally async depending return value isasyncsupported asyncsupported if defaults suitable insufficient override method register filters directly servletcontext servletcontext servlet context register filters filter filter registered filter registration
specify application context initializers applied servletspecific application context dispatcherservlet created with 42 createservletapplicationcontext dispatcherservletsetcontextinitializers getrootapplicationcontextinitializers
register dispatcherservlet given servlet context this method create dispatcherservlet name returned getservletname initializing application context returned createservletapplicationcontext mapping patterns returned getservletmappings further customization achieved overriding customizeregistrationservletregistrationdynamic createdispatcherservletwebapplicationcontext servletcontext context register servlet
this implementation creates annotationconfigwebapplicationcontext providing annotated classes returned getservletconfigclasses
this implementation creates annotationconfigwebapplicationcontext providing annotated classes returned getrootconfigclasses returns null getrootconfigclasses returns null
extract error codes objecterror list
return bind expression used html forms input name respective field null fieldspecific returns bind path appropriate resubmission eg addressstreet note complete bind path required bind tag customeraddressstreet bound customer bean
return errors instance typically bindingresult bind status currently associated with current errors instance null none orgspringframeworkvalidationbindingresult
return actual value field ie raw property value null available
return suitable display value field ie stringified value null empty string case null value this value htmlescaped string original value nonnull tostring result original value get htmlescaped
create new bindstatus instance representing field object status requestcontext current requestcontext path bean property path values errors resolved eg customeraddressstreet htmlescape whether htmlescape error messages string values illegalstateexception corresponding errors object found
get class type field favor instead getvaluegetclass since getvalue may return null
return first error message field object any
return propertyeditor property bind status currently bound to current propertyeditor null none
extract error messages objecterror list
find propertyeditor given value class associated property bound status currently bound to valueclass value class editor needed associated propertyeditor null none
return current value field ie either property value rejected update null fieldspecific this value htmlescaped string original value already string
exposes best available session mutex orgspringframeworkwebutilwebutilsgetsessionmutex orgspringframeworkwebutilhttpsessionmutexlistener
retrieves saved flashmap instances http session any
saves given flashmap instances http session
return flashmapmanager instance save flash attributes as 50 convenience method saveoutputflashmap may used save output flashmap request current request flashmapmanager instance never null within dispatcherservlethandled request
retrieve current locale given request using localeresolver bound request dispatcherservlet if available falling back requests acceptheader locale this method serves straightforward alternative standard servlet javaxservlethttphttpservletrequestgetlocale method falling back latter specific locale found consider using orgspringframeworkcontexti18nlocalecontextholdergetlocale normally populated locale request current http request current locale given request either localeresolver plain request getlocaleresolver orgspringframeworkcontexti18nlocalecontextholdergetlocale
look webapplicationcontext associated dispatcherservlet initiated request processing global context none found associated current request global context found via servletcontext via contextloaders current context note variant remains compatible servlet 25 explicitly checking given servletcontext instead deriving request request current http request servletcontext current servlet context requestspecific webapplicationcontext global one requestspecific context found null none 421 dispatcherservletwebapplicationcontextattribute webapplicationcontextutilsgetwebapplicationcontextservletcontext contextloadergetcurrentwebapplicationcontext
return localeresolver bound request dispatcherservlet request current http request current localeresolver null found
look webapplicationcontext associated dispatcherservlet initiated request processing global context none found associated current request global context found via servletcontext via contextloaders current context note variant requires servlet 30 generally recommended forwardlooking custom user code request current http request requestspecific webapplicationcontext global one requestspecific context found null none 421 findwebapplicationcontexthttpservletrequest servletcontext servletrequestgetservletcontext contextloadergetcurrentwebapplicationcontext
convenience method retrieves getoutputflashmap output flashmap updates path query params target url saves using getflashmapmanager flashmapmanager location target url redirect request current request response current response 50
return themeresolver bound request dispatcherservlet request current http request current themeresolver null found
return themesource bound request dispatcherservlet request current http request current themesource
retrieves current theme given request using themeresolver themesource bound request dispatcherservlet request current http request current theme null found getthemeresolver
retrieve current time zone given request using timezoneawarelocaleresolver bound request dispatcherservlet if available falling back systems default time zone note method returns null specific time zone resolved given request contrast getlocale always requests acceptheader locale fall back to consider using orgspringframeworkcontexti18nlocalecontextholdergettimezone normally populated timezone method differs terms fallback system time zone localeresolver hasnt provided specific time zone instead methods null request current http request current time zone given request either timezoneawarelocaleresolver null none associated getlocaleresolver orgspringframeworkcontexti18nlocalecontextholdergettimezone
return readonly input flash attributes request redirect request current request readonly map null found flashmap
create new jspawarerequestcontext given page context using given model attributes errors retrieval pagecontext current jsp page context model model attributes current view can null using request attributes errors retrieval
implementation checks jstl locale attribute page request session application scope found returns httpservletrequestgetlocale
implementation checks jstl time zone attribute page request session application scope found returns null
checks jstls javaxservletjspjstlfmtlocalizationcontext contextparam creates corresponding child message source provided springdefined messagesource parent servletcontext servletcontext were running to check jstlrelated contextparams webxml messagesource messagesource expose typically applicationcontext current dispatcherservlet messagesource expose jstl first checking jstldefined bundle springdefined messagesource orgspringframeworkcontextapplicationcontext
exposes jstlspecific request attributes specifying locale resource bundle jstls formatting message tags using springs locale messagesource requestcontext context current http request including applicationcontext expose messagesource
exposes jstlspecific request attributes specifying locale resource bundle jstls formatting message tags using springs locale messagesource request current http request messagesource messagesource expose typically current applicationcontext may null exposelocalizationcontextrequestcontext
return requestdatavalueprocessor instance use obtained webapplicationcontext name requestdatavalueprocessor null matching bean found
determine fallback locale context the default implementation checks jstl locale attribute request session application scope found returns httpservletrequestgetlocale fallback locale never null javaxservlethttphttpservletrequestgetlocale
return underlying servletcontext intended cooperating classes package
return default setting use response encoding html escape setting differentiating default specified explicit value whether default use response encoding html escaping enabled null explicit default 412
retrieve given messagesourceresolvable eg objecterror instance resolvable messagesourceresolvable htmlescape message htmlescaped message orgspringframeworkcontextnosuchmessageexception found
return default html escape setting differentiating default specified explicit value whether default html escaping enabled null explicit default
change current theme specified theme name storing new theme name configured themeresolver themename name new theme themeresolversetthemename
create new requestcontext given request using given model attributes errors retrieval this works view implementations typically used view implementations if servletcontext specified requestcontext also work root webapplicationcontext outside dispatcherservlet request current http request response current http response servletcontext servlet context web application can null necessary fallback root webapplicationcontext model model attributes current view can null using request attributes errors retrieval orgspringframeworkwebcontextwebapplicationcontext orgspringframeworkwebservletdispatcherservlet
retrieve message given code code code message args arguments message null none htmlescape message htmlescaped message orgspringframeworkcontextnosuchmessageexception found
retrieve errors instance given bind object using defaulthtmlescape setting name name bind object errors instance null found
return current theme never null resolved lazily efficiency theme support used
return contextaware url given relative url relativeurl relative url part url points back server absolute path also urlencoded accordingly
retrieve theme message given code note theme messages never htmlescaped typically denote themespecific resource paths clientvisible messages code code message args arguments message list null none defaultmessage string return lookup fails message
return model map requestcontext encapsulates any populated model map null none available
return path url mappings within current servlet including context path servlet path original request useful building links resources within application servlet mapping style main used delegates urlpathhelper determine context servlet path
change current theme specified one storing new theme name configured themeresolver theme new theme themeresolversetthemename
determine fallback time zone context the default implementation checks jstl time zone attribute request session application scope returns null found fallback time zone or null none derivable request
change current locale specified locale time zone context storing new locale context configured localeresolver locale new locale timezone new time zone localecontextresolversetlocalecontext orgspringframeworkcontexti18nsimpletimezoneawarelocalecontext
retrieve model object given model name either model request attributes modelname name model object model object
retrieve errors instance given bind object name name bind object htmlescape create errors instance automatic html escaping errors instance null found
retrieve message given code code code message args arguments message null none defaultmessage string return lookup fails htmlescape message htmlescaped message
set urlpathhelper use context path request uri decoding used pass shared urlpathhelper instance in a default urlpathhelper always available
return current timezone or null none derivable request typically coming dispatcherservlets localecontextresolver also includes fallback check jstls timezone attribute requestcontextutilsgettimezone
determine fallback theme context the default implementation returns default theme with name theme fallback theme never null
return contextaware url given relative url placeholders named keys braces example send relative url foobarspamspam parameter map barbazspamnuts result contextpathfoobazspamnuts relativeurl relative url part params map parameters insert placeholders url url points back server absolute path also urlencoded accordingly
retrieve theme message given code note theme messages never htmlescaped typically denote themespecific resource paths clientvisible messages code code message args arguments message null none defaultmessage string return lookup fails message
retrieve theme message given code note theme messages never htmlescaped typically denote themespecific resource paths clientvisible messages code code message defaultmessage string return lookup fails message
change current locale specified one storing new locale configured localeresolver locale new locale localeresolversetlocale changelocalejavautillocale javautiltimezone
initialize builder scheme hostand port but path query
prepare builder host port scheme path but query httpservletrequest
prepare builder host port scheme context path servlet mapping given httpservletrequest if servlet mapped name eg main path end main servlet mapped otherwise eg do result calling fromcontextpathhttpservletrequest
prepare builder copying scheme host port path query string httpservletrequest
prepare builder host port scheme context path given httpservletrequest
remove path extension httpservletrequestgetrequesturi requesturi method must invoked calls pathstring pathsegmentstring get httpfoocomrestbooks6json servleturicomponentsbuilder builder servleturicomponentsbuilderfromrequesturithisrequest string ext builderremovepathextension string uri builderpathpages1extbuildandexpandexttouristring assertequalshttpfoocomrestbooks6pages1json result removed path extension possible reuse null 40
obtain current request requestcontextholder
create deep copy given servleturicomponentsbuilder builder copy
create new webrequesthandlerinterceptoradapter given webrequestinterceptor requestinterceptor webrequestinterceptor wrap
calls registerhandlers method addition superclasss initialization
register handlers specified url map corresponding paths urlmap map url paths keys handler beans bean names values beansexception handler couldnt registered illegalstateexception conflicting handler registered
prepare response exceptional case the default implementation prevents response cached setpreventresponsecaching preventresponsecaching property set true ex exception got thrown handler execution response current http response preventcaching
log given exception warn level provided warn logging activated setwarnlogcategory warnlogcategory property calls buildlogmessage order determine concrete message log ex exception got thrown handler execution request current http request useful obtaining metadata setwarnlogcategory buildlogmessage orgapachecommonslogginglogwarnobject throwable
check whether resolver supposed apply given handler the default implementation checks configured plain setmappedhandlers handlers plain setmappedhandlerclasses handler classes any request current http request handler executed handler null none chosen time exception for example multipart resolution failed whether resolved proceed resolving exception given request handler setmappedhandlers setmappedhandlerclasses
check whether resolver supposed apply ie supplied handler matches configured plain setmappedhandlers handlers plain setmappedhandlerclasses handler classes delegate doresolveexception template method
create instance matching pattern matchingpattern matching pattern possibly input pattern eg inputpatternfoo matchingpatternfoo lookuppath lookup path extracted request pathmatcher pathmatcher used
determine view name given exception first checking setexcludedexceptionsclass excludedexecptions searching setexceptionmappings exceptionmappings finally using setdefaulterrorview defaulterrorview fallback ex exception got thrown handler execution request current http request useful obtaining metadata resolved view name null excluded none found
actually resolve given exception got thrown handler execution returning modelandview represents specific error page appropriate may overridden subclasses order apply specific exception checks note template method invoked after checking whether resolved applies mappedhandlers etc implementation may simply proceed actual exception handling request current http request response current http response handler executed handler null none chosen time exception for example multipart resolution failed ex exception got thrown handler execution corresponding modelandview forward to null default processing resolution chain
apply specified http status code given response possible that is executing within include request request current http request response current http response statuscode status code apply determinestatuscode setdefaultstatuscode httpservletresponsesetstatus
set http status code exception resolver apply given resolved error view keys view names values status codes note error code get applied case toplevel request set include request since http status cannot modified within include if specified default status code applied setdefaultstatuscodeint
determine http status code apply given error view the default implementation returns status code given view name specified setstatuscodesproperties statuscodes property falls back setdefaultstatuscode defaultstatuscode match override custom subclass customize behavior request current http request viewname name error view http status code use null servlet containers default 200 case standard error view setdefaultstatuscode applystatuscodeifpossible
find matching view name given exception mappings exceptionmappings mappings exception class names error view names ex exception got thrown handler execution view name null none found setexceptionmappings
return modelandview given view name exception the default implementation adds specified exception attribute overridden subclasses viewname name error view ex exception got thrown handler execution modelandview instance setexceptionattribute
implementation always returns true
implementation empty
implementation empty
implementation empty
path application interceptor mapped to
determine match given lookup path lookuppath current request path pathmatcher path matcher path pattern matching true interceptor applies given request path
create new mappedinterceptor instance includepatterns path patterns map empty matching paths excludepatterns path patterns exclude empty specific excludes interceptor handlerinterceptor instance map given patterns
create new mappedinterceptor instance includepatterns path patterns map empty matching paths excludepatterns path patterns exclude empty specific excludes interceptor webrequestinterceptor instance map given patterns
configured pathmatcher null none
checks name aliases given bean urls starting
handle request authorized according interceptor default implementation sends http status code 403 forbidden this method overridden write custom message forward redirect error page login page throw servletexception request current http request response current http response handler chosen handler execute type andor instance evaluation javaxservletservletexception internal error javaioioexception case io error writing response
resolve exception iterating list configured exception resolvers the first one return modelandview wins otherwise null returned
creates new conversionserviceexposinginterceptor conversionservice conversion service export request scope interceptor invoked
register specified handler given url path urlpath url bean mapped handler handler instance handler bean name string a bean name automatically resolved corresponding handler bean beansexception handler couldnt registered illegalstateexception conflicting handler registered
look handler instance given url path supports direct matches eg registered test matches test various antstyle pattern matches eg registered t matches test team details see antpathmatcher class looks exact pattern exact defined longest path pattern urlpath url bean mapped request current http request to expose path within mapping to associated handler instance null found exposepathwithinmapping orgspringframeworkutilantpathmatcher
build handler object given raw handler exposing actual handler pathwithinhandlermappingattribute well uritemplatevariablesattribute executing handler the default implementation builds handlerexecutionchain special interceptor exposes path attribute uri template variables rawhandler raw handler expose pathwithinmapping path expose executing handler uritemplatevariables uri template variables null variables found final handler object
register specified handler given url paths urlpaths urls bean mapped beanname name handler bean beansexception handler couldnt registered illegalstateexception conflicting handler registered
expose path within current mapping request attribute pathwithinmapping path within current mapping request request expose path pathwithinhandlermappingattribute
return root handler handler mapping registered null none
look handler url path given request request current http request handler instance null none found
constructor detects configured handlermappings given applicationcontext falls back dispatcherservletproperties like dispatcherservlet 4312 favor setapplicationcontext
find handlermapping would handle given request return matchablehandlermapping used test requestmatching criteria if matching handlermapping instance matchablehandlermapping illegalstateexception raised request current request resolved matcher null exception handlermappings raise exception
shortcut property underlying seturlpathhelper urlpathhelper orgspringframeworkwebutilurlpathhelpersetalwaysusefullpathboolean
configure custom corsprocessor use apply matched corsconfiguration request by default defaultcorsprocessor used 42
retrieve cors configuration given handler handler handler check never null request current request cors configuration handler null none 42
adapt given interceptor object handlerinterceptor interface by default supported interceptor types handlerinterceptor webrequestinterceptor given webrequestinterceptor wrapped webrequesthandlerinterceptoradapter overridden subclasses interceptor specified interceptor object interceptor wrapped handlerinterceptor orgspringframeworkwebservlethandlerinterceptor orgspringframeworkwebcontextrequestwebrequestinterceptor webrequesthandlerinterceptoradapter
get global cors configurations 51 since possible set corsconfigurationsource urlbasedcorsconfigurationsource expected removed 52
shortcut property underlying seturlpathhelper urlpathhelper orgspringframeworkwebutilurlpathhelperseturldecodeboolean
look handler given request falling back default handler specific one found request current http request corresponding handler instance default handler gethandlerinternal
detect beans type mappedinterceptor add list mapped interceptors this called addition mappedinterceptor mappedinterceptors may provided via setinterceptors default adding beans type mappedinterceptor current context ancestors subclasses override refine policy mappedinterceptors empty list add mappedinterceptor instances
initializes interceptors extendinterceptorsjavautillist initinterceptors
set urlpathhelper use resolution lookup paths use override default urlpathhelper custom subclass share common urlpathhelper settings across multiple handlermappings methodnameresolvers
return configured mappedinterceptor mappedinterceptors array array mappedinterceptor mappedinterceptors null none
update handlerexecutionchain corsrelated handling for preflight requests default implementation replaces selected handler simple httprequesthandler invokes configured setcorsprocessor for actual requests default implementation inserts handlerinterceptor makes corsrelated checks adds cors headers request current request chain handler chain config applicable cors configuration possibly null 42
return default handler handler mapping null none
shortcut property underlying seturlpathhelper urlpathhelper orgspringframeworkwebutilurlpathhelpersetremovesemicoloncontentboolean
set global cors configuration source default first matching url pattern combined cors configuration handler any 51 setcorsconfigurationsmap
set pathmatcher implementation use matching url paths registered url patterns default antpathmatcher orgspringframeworkutilantpathmatcher
set global cors configurations based url patterns default first matching url pattern combined cors configuration handler any 42 setcorsconfigurationsourcecorsconfigurationsource
build handlerexecutionchain given handler including applicable interceptors the default implementation builds standard handlerexecutionchain given handler handler mappings common interceptors mappedinterceptor mappedinterceptors matching current request url interceptors added order registered subclasses may override order extendrearrange list interceptors note passedin handler object may raw handler prebuilt handlerexecutionchain method handle two cases explicitly either building new handlerexecutionchain extending existing chain for simply adding interceptor custom subclass consider calling supergethandlerexecutionchainhandler request invoking handlerexecutionchainaddinterceptor returned chain object handler resolved handler instance never null request current http request handlerexecutionchain never null getadaptedinterceptors
return adapted interceptors handlerinterceptor array array handlerinterceptor handlerinterceptors null none
initialize specified interceptors checking mappedinterceptor mappedinterceptors adapting handlerinterceptors webrequestinterceptor handlerinterceptors webrequestinterceptors necessary setinterceptors adaptinterceptor
register handlers found current applicationcontext the actual url determination handler concrete determineurlsforhandlerstring implementation bean urls could determined simply considered handler orgspringframeworkbeansbeansexception handler couldnt registered determineurlsforhandlerstring
calls detecthandlers method addition superclasss initialization
determine names candidate beans application context 51 setdetecthandlermethodsinancestorcontexts beanfactoryutilsbeannamesfortypeincludingancestors
invoked matching mapping found mappings registered mappings lookuppath mapping lookup path within current servlet mapping request current request servletexception case errors
register given mapping this method may invoked runtime initialization completed mapping mapping handler method handler handler method method
scan beans applicationcontext detect register handler methods getcandidatebeannames processcandidatebean handlermethodsinitialized
return readonly map mappings handlermethods
create handlermethod instance handler either bean name actual handler instance method target method created handlermethod
return handler methods given mapping name mappingname mapping name list matching handlermethods null returned list never modified safe iterate sethandlermethodmappingnamingstrategy
look handler method given request
unregister given mapping this method may invoked runtime initialization completed mapping mapping unregister
return cors configuration threadsafe concurrent use
look handler methods specified handler bean handler either bean name actual handler instance getmappingformethod
return matches given url path threadsafe acquirereadlock
extract return cors configuration mapping
return configured naming strategy null
determine type specified candidate bean call detecthandlermethods identified handler type this implementation avoids bean creation checking orgspringframeworkbeansfactorybeanfactorygettype calling detecthandlermethods bean name beanname name candidate bean 51 ishandler detecthandlermethods
look bestmatching handler method current request multiple matches found best match selected lookuppath mapping lookup path within current servlet mapping request current request bestmatching handler method null match handlematchobject string httpservletrequest handlenomatchset string httpservletrequest
detects handler methods initialization inithandlermethods
invoked handler methods detected handlermethods readonly map handler methods mappings
checks handler handlermethod delegates base class implementation shouldapplytohttpservletrequest object passing bean handlermethod otherwise returns false
configure supported content codings order preference first coding present literal acceptencoding header given request file present associated extension used note coding must associated file extension via registerextension setextensions also customizations list codings matched customizations list cachingresourceresolver ensure encoded variants resource cached separate keys by default property set literal br gzip codings one supported content codings
configure supported content codings literal acceptencoding header cache resource variations the codings configured generally expected match configured encodedresourceresolversetcontentcodingslist by default property set literal br gzip based value encodedresourceresolverdefaultcodings codings one supported content codings 51
return specified cors configuration
set headers given servlet response called get requests well head requests response current servlet response resource identified resource never null mediatype resources media type never null ioexception case errors setting headers
look pathresourceresolver among configured resource resolvers set allowedlocations property if empty match setlocations locations configured class
check whether given path contains invalid escape sequences path path validate true path invalid false otherwise
set list resource locations use sources serving static resources setlocationvalueslist
identifies invalid resource paths default rejects paths contain webinf metainf paths contain call orgspringframeworkutilstringutilscleanpath paths represent orgspringframeworkutilresourceutilsisurl valid url would represent one leading slash removed note method assumes leading duplicate control characters eg white space trimmed path starts predictably single one path path validate true path invalid false otherwise 306
configure list resourceresolver resourceresolvers use by default pathresourceresolver configured using property recommended add pathresourceresolver last resolver
configure list resourcetransformer resourcetransformers use by default transformers configured use
alternative setlocationslist accepts list stringbased location values support urlresources eg files http urls special prefix indicate charset use appending relative paths example charsetwindows31jhttpexampleorgpath 4313
return configured content negotiation manager 43
return configured resource region converter 43
configured urlpathhelper 4313
return configured resource converter 43
process given resource path the default implementation replaces backslash forward slash duplicate occurrences slash single slash any combination leading slash control characters 001f 7f single example foobar becomes foobar 3212
processes resource request checks existence requested resource configured list locations resource exist 404 response returned client resource exists request checked presence lastmodified header value compared lastmodified timestamp given resource returning 304 status code lastmodified value greater resource newer lastmodified value header present content resource resource written response caching headers set expire one year future
determine media type given request resource matched it implementation tries determine mediatype based file extension resource via servletpathextensioncontentnegotiationstrategygetmediatypeforresource request current request resource resource check corresponding media type null none found
initialize content negotiation strategy depending contentnegotiationmanager setup availability servletcontext servletpathextensioncontentnegotiationstrategy pathextensioncontentnegotiationstrategy
create new fixedversionstrategy given version string version fixed version string use
find resource given location the default implementation checks readable resource given path relative location resourcepath path resource location location check resource null none found
configure charsets associated locations static resource found orgspringframeworkcoreiourlresource url resource location charset used encode relative path note charset used seturlpathhelper urlpathhelper property also configured urldecode property set true 4313
configured urlpathhelper 4313
perform additional checks resolved resource beyond checking whether resources exists readable default implementation also verifies resource either location relative found one setallowedlocations allowed locations resource resource check location location relative resource found true resource valid location false otherwise 412
set map url paths keys versionstrategy values supports direct url matches antstyle pattern matches syntax details see orgspringframeworkutilantpathmatcher javadoc map map urls keys version strategies values
register custom versionstrategy apply resource urls match given path patterns strategy custom strategy pathpatterns one resource url path patterns relative pattern configured resource handler current instance chained method invocation versionstrategy
insert contentbased version resource urls match given path patterns version computed content file eg cssmaine36d2e05253c6c7085a91522ce43a0b4css good default strategy use except cannot be example using javascript module loaders use addfixedversionstrategy instead serving javascript files pathpatterns one resource url path patterns relative pattern configured resource handler current instance chained method invocation contentversionstrategy
find versionstrategy request path requested resource instance versionstrategy null none matches request path
insert fixed prefixbased version resource urls match given path patterns example versionjsmainjs useful vs contentbased versions using javascript module loaders the version may random number current date value fetched git commit sha property file environment variable set spel expressions configuration eg see value java config if done already variants given pathpatterns prefixed version also configured example adding js path pattern also cofigure automatically v100js v100 version string given argument version version string pathpatterns one resource url path patterns relative pattern configured resource handler current instance chained method invocation fixedversionstrategy
transformer use method resource transformed contains links resources links need replaced public facing link determined resource resolver chain eg public url may version inserted resourcepath path resource needs rewritten request current request resource resource transformed transformerchain transformer chain resolved url resolvable
transform given relative request path absolute path taking path given request point reference resulting path also cleaned sequences like path path relative path transform request referer request absolute request path given resource path
return configured resourceurlprovider
defaultservletname property explicitly set attempts locate default servlet using known common containerspecific names
compare given path configured resource handler mappings match found use resourceresolver chain matched resourcehttprequesthandler resolve url path expose public use it expected given path spring mvc would use request mapping purposes ie excluding context servlet path portions if several handler mappings match handler used one configured specific pattern lookuppath lookup path check resolved public url path null unresolved
variation getforlookuppathstring accepts full request url path ie including context servlet path returns full request url path expose public use request current request requesturl request url path resolve resolved public url path null unresolved
manually configure resource mappings note default resource mappings autodetected spring applicationcontext however property used autodetection turned off
return super class specified element null element represents object
return interfaces directly implemented specified element empty list element implement interface
create new metadataprocessor instance processingenvironment processing environment build previousmetadata previous metadata null
create webexchangedatabinder apply data binding validation target command object exchange current exchange target object create data binder name name target object created data binder servererrorexception initbinder method invocation fails
return value returned handler any
configure exception handler may used produce alternative result result handling fails especially async return value errors may occur invocation handler function error handler current instance
create new handlerresult handler handler handled request returnvalue return value handler possibly null returntype return value type context binding context used request handling
return handlermapping beans detected type setapplicationcontext injected context also annotationawareordercomparatorsortlist sorted note method may return null invoked prior setapplicationcontextapplicationcontext immutable list configured mappings null
inserter write given publisher alternatively consider using body shortcuts orgspringframeworkwebreactivefunctionclientwebclient webclient orgspringframeworkwebreactivefunctionserverserverresponse serverresponse publisher publisher write elementclass type elements publisher type elements contained publisher publisher type inserter write publisher
inserter write inserter
inserter write given object alternatively consider using syncbodyobject shortcuts orgspringframeworkwebreactivefunctionclientwebclient webclient orgspringframeworkwebreactivefunctionserverserverresponse serverresponse body body write response type body inserter write single object
inserter write given publisher alternatively consider using body shortcuts orgspringframeworkwebreactivefunctionclientwebclient webclient orgspringframeworkwebreactivefunctionserverserverresponse serverresponse publisher publisher write typereference type elements contained publisher type elements contained publisher publisher type inserter write publisher
variant frommultipartasyncdatastring publisher class accepts parameterizedtypereference element type allows specifying generic type information note also build multipart data externally multipartbodybuilder pass resulting map directly syncbodyobject shortcut method webclient name part name publisher publisher forms part value typereference type contained publisher inserter allows adding parts
return multipartinserter write given multivaluemap multipart data values map object httpentity note also build multipart data externally multipartbodybuilder pass resulting map directly syncbodyobject shortcut method webclient multipartdata form data write output message inserter allows adding parts multipartbodybuilder
inserter write given resource if resource resolved plain resourcegetfile file copied using hrefhttpsenwikipediaorgwikizerocopyzerocopy resource resource write output message type resource inserter write publisher
return multipartinserter write given asynchronous parts multipart data note also build multipart data externally multipartbodybuilder pass resulting map directly syncbodyobject shortcut method webclient name part name publisher publisher forms part value elementclass class contained publisher inserter allows adding parts
inserter write given publisher body publisher data buffer publisher write type publisher inserter write directly body reactivehttpoutputmessagewritewithpublisher
return multipartinserter write given parts multipart data values map object httpentity note also build multipart data externally multipartbodybuilder pass resulting map directly syncbodyobject shortcut method webclient name part name value part value object httpentity inserter allows adding parts
return forminserter write given keyvalue pair urlencoded form data returned inserter allows additional entries added via forminserterwithstring object name key add form value value add form inserter allows adding form data
extractor read form data multivaluemap string as 51 method also used client side read form data server response eg oauth bodyextractor form data
return request contenttype header parsed successfully null otherwise
constructor specified contenttype invalid
return body type context exception generated applicable exception raised result trying encode decode specific java type body type null available 51
constructor trying encode decode specific java type 51
create new builder plain httpstatuscreated 201 created status location header set given uri location location uri created builder
create builder plain httpstatusseeother 303 see other status location header set given uri location location uri created builder
create builder plain httpstatustemporaryredirect 307 temporary redirect status location header set given uri location location uri created builder
create builder plain httpstatuspermanentredirect 308 permanent redirect status location header set given uri location location uri created builder
adapt given request processor function filter function operates serverrequest requestprocessor request processor filter adaptation request processor
return composed filter function first applies filter applies after filter filter apply filter applied composed filter first applies function applies after function
adapt given response processor function filter function operates serverresponse responseprocessor response processor filter adaptation request processor
apply filter given handler function resulting filtered handler function handler handler function filter filtered handler function
return mutable builder handlerstrategies default initialization builder
return requestpredicate tests requests plain serverrequestheadersaccept accept header plain mediatypeiscompatiblewithmediatype compatible given media types mediatypes media types match requests accept header predicate tests requests accept header given media types
return function creates new pathmatching requestpredicates pattern strings using given pathpatternparser this method used specify nondefault customized pathpatternparser resolving path patterns patternparser parser used parse patterns given returned function function resolves pattern string pathmatching requestpredicates instance
return requestpredicate tests requests plain serverrequestheaderscontenttype content type plain mediatypeincludesmediatype included given media types mediatypes media types match requests content type predicate tests requests content type given media types
return requestpredicate matches requests path given extension extension path extension match against ignoring case predicate matches requests path given file extension
return requestpredicate tests request path given path pattern pattern pattern match predicate tests given path pattern
create builder given publisher publisher publisher represents body response typereference type elements contained publisher type elements contained publisher type publisher created builder
create builder given publisher publisher publisher represents body response elementclass class elements contained publisher type elements contained publisher type publisher created builder
get first query parameter given name present name parameter name parameter value
get http method http method httpmethod enum value null resolvable eg case nonstandard http method
get path variable given name present name variable name variable value illegalargumentexception path variable given name
route given handler function given request predicate applies for instance following example routes get requests user listusers method usercontroller classcode routerfunctionserverresponse route routerfunctionsrouterequestpredicatesgetuser usercontrollerlistusers predicate predicate test handlerfunction handler function route predicate applies type response returned handler function router function routes handlerfunction predicate evaluates true requestpredicates
convert given plain routerfunction router function httphandler using given strategies the returned httphandler adapted run servlet 31 using orgspringframeworkhttpserverreactiveservlethttphandleradapter reactor using orgspringframeworkhttpserverreactivereactorhttphandleradapter undertow using orgspringframeworkhttpserverreactiveundertowhttphandleradapter routerfunction router function convert strategies strategies use http handler handles http request using given router function
convert given plain routerfunction router function webhandler using given strategies routerfunction router function convert strategies strategies use web handler handles web request using given router function
route given router function given request predicate applies method used create nested routes group routes share common path prefix header request predicate for instance following example first creates composed route resolves listusers get createuser post composed route gets nested user path predicate get requests user list users post request user create new user classcode routerfunctionserverresponse userroutes routerfunctionsrouterequestpredicatesmethodhttpmethodget thislistusers androuterequestpredicatesmethodhttpmethodpost thiscreateuser routerfunctionserverresponse nestedroute routerfunctionsnestrequestpredicatespathuser userroutes predicate predicate test routerfunction nested router function delegate predicate applies type response returned handler function router function routes routerfunction predicate evaluates true requestpredicates
return configured routerfunction note router functions detected applicationcontext method may return null invoked prior afterpropertiesset router function null
initialized router functions detecting application context
create new headerswrapper wraps given request headers headers wrap
create new serverrequestwrapper wraps given request delegate request wrap
apply filter given plain exchangefunction resulting filtered exchange function exchange exchange function filter filtered exchange function
adapt given response processor function filter function operates clientresponse processor response processor resulting filter adapter
adapt given request processor function filter function operates clientrequest processor request processor resulting filter adapter
return composed filter function first applies filter applies given after filter afterfilter filter apply filter composed filter
create builder given method url method http method get post etc url url as uri instance created builder favor createhttpmethod uri
create new instance unknownhttpstatuscodeexception given parameters
create new instance unknownhttpstatuscodeexception given parameters 514
constructor response data only default message 51
constructor response data only default message 514
return corresponding request 514
constructor prepared message
create webclientresponseexception http status specific subclass 514
create webclientresponseexception http status specific subclass 51
constructor prepared message 514
return filter generates error signal given httpstatus predicate matches statuspredicate predicate check http status exceptionfunction function create exception filter generate error signal
consume specified number bytes response body cancel data arrives internally delegates databufferutilstakeuntilbytecount maxbytecount limit number bytes filter limit response size 51
variant basicauthenticationstring string looks credentials credentials basicauthenticationcredentialsattribute request attribute filter use credentials spring 51 favor using httpheaderssetbasicauthstring string building request
return filter applies http basic authentication request headers via httpheaderssetbasicauthstring string user user password password filter add authentication headers httpheaderssetbasicauthstring string httpheaderssetbasicauthstring string charset
create new credentials instance given username password username username password password
return literal consumer stores given user password request attribute type credentials turn used exchangefilterfunctionsbasicauthentication user user password password consumer passed plain clientrequestbuilderattributesjavautilfunctionconsumer clientrequestbuilderattributesjavautilfunctionconsumer basicauthenticationcredentialsattribute
return builder preconfigured default configuration start withdefaults returns mutable builder customizations
create response builder given status code message body readers statuscode status code messagereaders message readers created builder
create new clientresponsewrapper wraps given response delegate response wrap
select best media type current request content negotiation algorithm exchange current request producibletypessupplier media types produced current request selected media type null none
get reactiveadapter toplevel return value type matching adapter null none
checks conditions request mapping info match provided request returns potentially new request mapping info conditions tailored current request for example returned instance may contain subset url patterns match current request sorted best matching patterns top new instance case conditions match null otherwise
compares this info ie current instance another info context request note assumed instances obtained via getmatchingconditionserverwebexchange ensure conditions content relevant current request
combines this request mapping info ie current instance another request mapping info instance example combine type methodlevel request mappings new request mapping info instance never null
return name mapping null
returns custom condition requestmappinginfo null
creates new instance given request conditions
recreate requestmappinginfo given custom request condition
partial matches methods consumes
iterate requestmappinginfos again look match url least raise exceptions accordingly methodnotallowedexception matches url http method unsupportedmediatypestatusexception matches url http method consumable media types notacceptablestatusexception matches url http method producible media types serverwebinputexception matches url http method query parameter conditions
expose uri template variables matrix variables producible media types request handlermappinguritemplatevariablesattribute handlermappingmatrixvariablesattribute handlermappingproduciblemediatypesattribute
create new partialmatch instance info requestmappinginfo matches url path exchange current exchange
partial matches methods
return declared producible types among also match methods consumes conditions
return declared http methods
return declared params conditions among also match methods consumes params conditions
partial matches methods consumes produces params
provide comparator sort requestmappinginfos matched request
check given requestmappinginfo matches current request return potentially new instance conditions match current request example subset url patterns info case match null otherwise
partial matches methods consumes produces
return declared consumable types among also match methods condition
by default simply delegates resolveargumentvalue synchronous resolution
iterate registered handlermethodargumentresolver handlermethodargumentresolvers invoke one supports it illegalstateexception suitable handlermethodargumentresolver found
add given handlermethodargumentresolver handlermethodargumentresolvers
whether given plain methodparameter method parameter supported registered handlermethodargumentresolver
find registered handlermethodargumentresolver supports given method parameter
add given handlermethodargumentresolver
add given handlermethodargumentresolver handlermethodargumentresolvers
invoke method given exchange exchange current exchange bindingcontext binding context use providedargs optional list argument values match type mono handlerresult
evaluate predicate method parameter type generic type within reactive type wrapper
evaluate predicate method parameter type raise illegalstateexception matches generic type within reactive type wrapper
evaluate predicate method parameter type given annotation nesting within javautiloptional necessary raise illegalstateexception matches generic type within reactive type wrapper
return configured argument resolvers
invoke method given exchange exchange current exchange bindingcontext binding context use providedargs optional list argument values match type mono handlerresult servererrorexception method argument resolution method invocation fails
return readonly map mappings handlermethods
look bestmatching handler method current request multiple matches found best match selected exchange current exchange bestmatching handler method null match handlematch handlenomatch
look handler method given request exchange current exchange
detects handler methods initialization
return cors configuration threadsafe concurrent use
unregister given mapping this method may invoked runtime initialization completed mapping mapping unregister
invoked matching mapping found mappings registered mappings exchange current exchange alternative handlermethod null exception provides details translated error status code
create handlermethod instance handler either bean name actual handler instance method target method created handlermethod
register given mapping this method may invoked runtime initialization completed mapping mapping handler method handler handler method method
extract return cors configuration mapping
look handler methods handler handler bean name handler handler instance
scan beans applicationcontext detect register handler methods ishandlerclass getmappingformethodmethod class handlermethodsinitializedmap
create new abstractnamedvaluesyncargumentresolver factory bean factory use resolving placeholder spel expressions default values null default values expected expressions registry checking reactive type wrappers
class constructor default resolution mode flag adapterregistry adapting reactive types mono usedefaultresolution true nonsimple method arguments return values considered model attributes without modelattribute annotation present
create new pathvariablemethodargumentresolver factory bean factory use resolving placeholder spel expressions default values null default values expected contain expressions registry checking reactive type wrappers
constructor reactiveadapterregistry instance writers writers serializing response body resolver determine requested content type registry adaptation reactive types
basic constructor default reactiveadapterregistry writers writers serializing response body resolver determine requested content type
initialize orgspringframeworkuimodel model based typelevel sessionattributes annotation modelattribute methods handlermethod target controller method bindingcontext context containing model exchange current exchange mono model populated
derive model attribute name given method parameter based modelattribute parameter annotation if present falling back parameter type based conventions parameter descriptor method parameter derived name conventionsgetvariablenameforparametermethodparameter
find modelattribute arguments also listed sessionattributes
configure resolvers custom controller method arguments resolver resolvers add
constructor httpmessagewriter httpmessagewriters requestedcontenttyperesolver messagewriters serializing objects response body stream contenttyperesolver resolving requested content type
write given body response httpmessagewriter body object write bodyparameter methodparameter body write actualparam actual return type method returned value could different bodyparameter processing httpentity example exchange current exchange indicates completion error 502
constructor additional reactiveadapterregistry messagewriters serializing objects response body stream contenttyperesolver resolving requested content type adapterregistry adapting reactive types eg rxobservable rxsingle etc flux mono
return configured resolvers controller method arguments
configurableapplicationcontext expected resolving expressions method argument default values well detecting controlleradvice beans
return configured webbindinginitializer null none
configure http message readers deserialize request body with by default set servercodecconfigurers readers defaults
return configured registry adapting reactive types
create new requestattributemethodargumentresolver instance factory bean factory use resolving placeholder spel expressions default values null default values expected expressions registry checking reactive type wrappers
constructor reactiveadapterregistry instance writers writers serializing response body resolver determine requested content type registry adaptation reactive types
create new expressionvaluemethodargumentresolver instance factory bean factory use resolving placeholder spel expressions default values null default values expected contain expressions registry checking reactive type wrappers
class constructor default resolution mode flag factory bean factory used resolving placeholder spel expressions default values null default values expected contain expressions registry checking reactive type wrappers usedefaultresolution default resolution mode method argument simple type defined beanutilsissimpleproperty treated request parameter even isnt annotated request parameter name derived method parameter name
save model attributes session based typelevel declarations sessionattributes annotation
provide context required apply savemodel controller method invoked
read body method argument httpmessagereader bodyparam represents element type body actualparam actual method argument type possibly different bodyparam eg httpentity argument isbodyrequired true body required bindingcontext binding context use exchange current exchange mono value use method argument 502
constructor also accepts reactiveadapterregistry messagereaders readers convert request body adapterregistry adapting reactive types flux mono
read body method argument httpmessagereader bodyparameter methodparameter read isbodyrequired true body required bindingcontext binding context use exchange current exchange body readbodymethodparameter methodparameter boolean bindingcontext serverwebexchange
check given methodparameter requires validation return possibly empty object validation hints return value null indicates validation required
find initbinder methods controlleradvice components controller given requestmapping method
return invocablehandlermethod given requestmapping method initialized argument resolvers
find modelattribute methods controlleradvice components controller given requestmapping method
return handler typelevel sessionattributes annotation based given controller method
find exceptionhandler method controlleradvice components controller given requestmapping method
create new cookievaluemethodargumentresolver instance factory bean factory use resolving placeholder spel expressions default values null default values expected contain expressions registry checking reactive type wrappers
create new requestheadermethodargumentresolver instance factory bean factory use resolving placeholder spel expressions default values null default values expected expressions registry checking reactive type wrappers
apply type conversion necessary
create new abstractnamedvalueargumentresolver instance factory bean factory use resolving placeholder spel expressions default values null default values expected contain expressions registry checking reactive type wrappers
null results false value booleans exception primitives
invoked named value required resolvenamestring methodparameter serverwebexchange returned null default value subclasses typically throw exception case name name value parameter method parameter
invoked value resolved arg resolved argument value name argument name parameter argument parameter type model model exchange current exchange
create new namedvalueinfo based given namedvalueinfo sanitized values
obtain named value given method parameter
resolve default value any
invoked named value required resolvenamestring methodparameter serverwebexchange returned null default value subclasses typically throw exception case name name value parameter method parameter exchange current exchange
resolve given annotationspecified value potentially containing placeholders expressions
resolve placeholder values given array patterns new array updated patterns
set requestedcontenttyperesolver use determine requested media types set default constructor used
uses method typelevel requestmapping annotations create requestmappinginfo created requestmappinginfo null method requestmapping annotation getcustommethodconditionmethod getcustomtypeconditionclass
delegates createrequestmappinginforequestmapping requestcondition supplying appropriate custom requestcondition depending whether supplied annotatedelement class method getcustomtypeconditionclass getcustommethodconditionmethod
configure path prefixes apply controller methods prefixes used enrich mappings every requestmapping method whose controller type matched corresponding predicate map prefix first matching predicate used assuming input map predictable order consider using orgspringframeworkwebmethodhandlertypepredicate handlertypepredicate group controllers prefixes map path prefixes key 51 orgspringframeworkwebmethodhandlertypepredicate
provide custom typelevel request condition custom requestcondition type long condition type returned calls method order ensure custom request conditions combined compared consider extending orgspringframeworkwebreactiveresultconditionabstractrequestcondition abstractrequestcondition custom condition types using orgspringframeworkwebreactiveresultconditioncompositerequestcondition compositerequestcondition provide multiple custom conditions handlertype handler type create condition condition null
provide custom methodlevel request condition custom requestcondition type long condition type returned calls method order ensure custom request conditions combined compared consider extending orgspringframeworkwebreactiveresultconditionabstractrequestcondition abstractrequestcondition custom condition types using orgspringframeworkwebreactiveresultconditioncompositerequestcondition compositerequestcondition provide multiple custom conditions method handler method create condition condition null
create requestmappinginfo supplied requestmapping requestmapping annotation either directly declared annotation metaannotation synthesized result merging annotation attributes within annotation hierarchy
expects handler typelevel controller annotation
create new session attributes handler session attribute names types extracted sessionattributes annotation present given type handlertype controller type
retrieve known attributes session ie attributes listed name sessionattributes attributes previously stored model matched type session current session map handler session attributes possibly empty
whether attribute name type match names types specified via sessionattributes underlying controller attributes successfully resolved method remembered subsequently used retrieveattributeswebsession also cleanupattributeswebsession attributename attribute name check attributetype type attribute
store subset given attributes session attributes declared session attributes via sessionattributes ignored session current session attributes candidate attributes session storage
basic constructor default reactiveadapterregistry viewresolvers resolver use contenttyperesolver determine requested content type
set default views consider always resolving view names trying satisfy best matching content type
select default view name controller specify it use request path leading trailing slash stripped
constructor reactiveadapterregistry instance viewresolvers view resolver use contenttyperesolver determine requested content type registry adaptation reactive types
return url resource view wraps
return actual value field ie raw property value null available
extract error codes objecterror list
return bind expression used html forms input name respective field null fieldspecific returns bind path appropriate resubmission eg addressstreet note complete bind path required bind tag customeraddressstreet bound customer bean
return suitable display value field ie stringified value null empty string case null value this value htmlescaped string original value nonnull tostring result original value get htmlescaped
create new bindstatus instance representing field object status requestcontext current requestcontext path bean property path values errors resolved eg customeraddressstreet htmlescape whether htmlescape error messages string values illegalstateexception corresponding errors object found
get class type field favor instead getvaluegetclass since getvalue may return null
return first error message field object any
return errors instance typically bindingresult bind status currently associated with current errors instance null none orgspringframeworkvalidationbindingresult
extract error messages objecterror list
find propertyeditor given value class associated property bound status currently bound to valueclass value class editor needed associated propertyeditor null none
return current value field ie either property value rejected update null fieldspecific this value htmlescaped string original value already string
return propertyeditor property bind status currently bound to current propertyeditor null none
the implementation method httpmessagewriterview delegates httpmessagewritergetwritablemediatypes
constructor fully initialized httpmessagewriter
set attributes model rendered view set model attributes ignored matching attributes narrowed httpmessagewritercanwrite matching attributes processed follows 0 nothing written response body 1 matching attribute passed writer 2n writer supports map write matches otherwise raise illegalstateexception
retrieve given messagesourceresolvable eg objecterror instance resolvable messagesourceresolvable htmlescape message htmlescaped message orgspringframeworkcontextnosuchmessageexception found
change current locale specified locale time zone context
return default html escape setting differentiating default specified explicit value whether default html escaping enabled null explicit default
return contextaware url given relative url relativeurl relative url part url points back current web application absolute path also urlencoded accordingly
retrieve errors instance given bind object name name bind object htmlescape create errors instance automatic html escaping errors instance null found
retrieve errors instance given bind object using defaulthtmlescape setting name name bind object errors instance null found
retrieve message given code code code message args arguments message null none defaultmessage string return lookup fails htmlescape message htmlescaped message
return contextaware url given relative url placeholders named keys braces example send relative url foobarspamspam parameter map barbazspamnuts result contextpathfoobazspamnuts relativeurl relative url part params map parameters insert placeholders url url points back current web application absolute path also urlencoded accordingly
return requestdatavalueprocessor instance apply form tag libraries redirect urls
retrieve model object given model name either model request attributes modelname name model object model object
retrieve message given code code code message args arguments message null none htmlescape message htmlescaped message orgspringframeworkcontextnosuchmessageexception found
return model map requestcontext encapsulates any populated model map null none available
set default charset view used plain setsupportedmediatypeslist content type contain one default plain standardcharsetsutf8 utf 8
set supported media types view default texthtmlcharsetutf8
return configured application hosts
append query current request target redirect url
convert model request parameters redirect given url
create new redirectview given url alternate redirect status code httpstatustemporaryredirect httpstatuspermanentredirect
set alternate redirect status code httpstatustemporaryredirect httpstatuspermanentredirect
whether given targeturl host foreign system case javaxservlethttphttpservletresponseencoderedirecturl applied method returns true sethostsstring property configured target url host match targeturl target redirect url true target url remote host false url host host property configured
send redirect back http client targeturl target url redirect exchange current exchange
create target url and necessary prepend contextpath expand uri template variables append current request query apply configured getrequestdatavalueprocessor requestdatavalueprocessor
expand uri template variables target url either model attribute values fallback uri variable values current request values encoded
return containing applicationcontext any setapplicationcontext
return view class used create views
creates new view instance specified view class configures it not perform lookup predefined view instances spring lifecycle methods defined bean container called here automatically applied afterwards provided setapplicationcontext applicationcontext available viewname name view build view instance getviewclass applylifecyclemethods
return name requestcontext attribute views any
apply containing applicationcontexts lifecycle methods given view instance context available viewname name view view freshly created view instance preconfigured abstracturlbasedviews properties view instance use either original one decorated variant getapplicationcontext applicationcontextgetautowirecapablebeanfactory orgspringframeworkbeansfactoryconfigautowirecapablebeanfactoryinitializebean
set view class instantiate createviewstring viewclass class assignable required view class default abstracturlbasedview
return view names or name patterns handled viewresolver
accept containing applicationcontext any to used initialization newly created view instances applying lifecycle callbacks providing access containing environment setviewclass createview applylifecyclemethods
indicates whether viewresolver handle supplied view name not empty result returned default implementation checks configured setviewnames view names viewname name view retrieve locale locale retrieve view whether resolver applies specified view orgspringframeworkutilpatternmatchutilssimplematchstring string
return views name never null view correctly configured
return requestdatavalueprocessor use the default implementation looks getapplicationcontext spring configuration requestdatavalueprocessor bean name requestdatavalueprocessorbeanname requestdatavalueprocessor null none application context
set supported media types view default texthtmlcharsetutf8
set default charset view used plain setsupportedmediatypeslist content type contain one default plain standardcharsetsutf8 utf 8
set views name helpful traceability framework code must call constructing views
return name requestcontext attribute any
prepare model use rendering the default implementation creates combined output map includes model well static attributes former taking precedence
return configured media types supported view
default resolve async attributes supported reactiveadapterregistry blocking counterparts view implementations capable taking advantage reactive types override method needed mono completion async attributes resolution
prepare model render model map name strings keys corresponding model objects values map also null case empty model contenttype content type selected render match one getsupportedmediatypes supported media types exchange current exchange mono represent rendering succeeds
obtain applicationcontext actual use applicationcontext never null illegalstateexception case applicationcontext set
implementation registers additional classtemplateloader springprovided macros added end list
return configuration object wrapped bean
initialize freemarkerconfigurationfactorys configuration overridden preconfigured freemarker configuration sets classtemplateloader use loading spring macros createconfiguration setconfiguration
convenience constructor prefix suffix suffix suffix prepend view names prefix prefix prepend view names
requires freemarkerview
obtain freemarker configuration actual use freemarker configuration never null illegalstateexception case configuration object set 50
return encoding freemarker template
check freemarker template used view exists valid can overridden customize behavior example case multiple templates rendered single view
return freemarker configuration used view
retrieve freemarker template given locale rendering view by default template specified url bean property retrieved locale current locale freemarker template render
autodetect freemarkerconfig object via applicationcontext configuration instance use freemarkerviews beansexception configuration instance could found setconfiguration
build freemarker template model given model map the default implementation builds simplehash model model use rendering exchange current exchange freemarker template model simplehash subclass thereof
return configured freemarker objectwrapper objectwrapperdefaultwrapper default wrapper none specified freemarkertemplateconfigurationgetobjectwrapper
convenience constructor allows specifying setprefix prefix setsuffix suffix constructor arguments prefix prefix gets prepended view names building url suffix suffix gets appended view names building url
create new renderingcontext applicationcontext application context locale locale rendered template templateloader function takes template path input returns template content string url url rendered template
see scripttemplateconfigurersetresourceloaderpathstring documentation
returns 0 two conditions number expressions less 0 this specific media type expressions greater 0 other specific media type expressions it assumed instances obtained via getmatchingconditionserverwebexchange instance contains matching consumable media type expression otherwise empty
returns media types condition excluding negated expressions
private constructor accepting parsed media type expressions
returns other instance expressions returns this instance otherwise practically means methodlevel consumes overrides typelevel consumes condition
checks contained media type expressions match given request contenttype header returns instance guaranteed contain matching expressions only match performed via mediatypeincludesmediatype exchange current exchange instance condition contains expressions new condition matching expressions only null expressions match
preflight request match wouldbe actual request hence empty conditions match otherwise try match http method accesscontrolrequestmethod header
check http request methods match given request return instance contains matching http request method only exchange current exchange instance condition empty unless request method http options new condition matched request method null match condition empty request method options
returns 0 two conditions contain number http request methods less 0 this instance http request method other doesnt greater 0 other http request method this doesnt it assumed instances obtained via getmatchingconditionserverwebexchange therefore instance contains matching http request method otherwise empty
returns new instance union http request methods this other instance
one instance empty wins instances conditions compare order provided
delegate all contained conditions match request return resulting matching condition instances an empty compositerequestcondition matches requests
whether instance contains 0 conditions not
one instance empty return other instances conditions combine individual conditions ensuring type number
private constructor already parsed media type expressions
whether condition media type expressions
producesrequestconditionstring string also accepting contentnegotiationmanager produces expressions syntax defined requestmappingproduces headers expressions syntax defined requestmappingheaders resolver used determine requested content type
checks contained media type expressions match given request contenttype header returns instance guaranteed contain matching expressions only match performed via mediatypeiscompatiblewithmediatype exchange current exchange instance expressions new condition matching expressions null expressions match
return contained producible media types excluding negated expressions
compares another produces condition follows sort accept header media types quality value via mediatypesortbyqualityvaluelist iterate list get first index matching media types produces condition first matching mediatypeequalsobject mediatypeincludesmediatype if lower index found condition index wins if indexes equal media types index compared mediatypespecificitycomparator it assumed instances obtained via getmatchingconditionserverwebexchange instance contains matching producible media type expression otherwise empty
returns other instance expressions returns this instance otherwise practically means methodlevel produces overrides typelevel produces condition
checks patterns match given request returns instance guaranteed contain matching patterns sorted exchange current exchange instance condition contains patterns new condition sorted matching patterns null patterns match
compare two conditions based url patterns contain patterns compared one time top bottom compared patterns match equally one instance patterns considered closer match it assumed instances obtained via getmatchingconditionserverwebexchange ensure contain patterns match request sorted best matches top
returns new instance url patterns current instance this other instance follows if patterns instances combine patterns this patterns other using pathpatterncombinepathpattern if one instance patterns use them if neither instance patterns use empty string ie
find patterns matching given lookup path invoking method yield results equivalent calling getmatchingconditionserverwebexchange method provided alternative used request available eg introspection tooling etc exchange current exchange sorted set matching patterns sorted closest match first
returns new instance union header expressions this other instance
compare another condition based header expressions condition considered specific match has a greater number expressions a greater number nonnegated expressions concrete value it assumed instances obtained via getmatchingconditionserverwebexchange instance contains matching header expression otherwise empty
returns this instance request matches expressions null otherwise
compare another condition based parameter expressions condition considered specific match has a greater number expressions a greater number nonnegated expressions concrete value it assumed instances obtained via getmatchingconditionserverwebexchange instance contains matching parameter expressions otherwise empty
returns this instance request matches param expressions null otherwise
returns new instance union param expressions this other instance
create new holder wrap given request condition requestcondition condition hold may null
compare request conditions held two requestconditionholder instances making sure conditions type one holder empty holder preferred
return held request condition null holding one
combine request conditions held two requestconditionholder instances making sure conditions type one holder empty holder returned
ensure held request conditions type
get matching condition held request condition wrap new requestconditionholder instance otherwise empty holder return holder instance
set list headers preflight request list allowed use actual request the special value may used allow headers a header name required listed one of cachecontrol contentlanguage expires lastmodified pragma per cors spec by default headers allowed
whether browser send credentials cookies along cross domain requests annotated endpoint configured value set accesscontrolallowcredentials response header preflight requests note aware option establishes high level trust configured domains also increases surface attack web application exposing sensitive userspecific information cookies csrf tokens by default set case accesscontrolallowcredentials header also set credentials therefore allowed
set http methods allow eg get post etc the special value allows methods by default simple methods get head post allowed
set list response headers simple headers ie cachecontrol contentlanguage contenttype expires lastmodified pragma actual response might exposed note supported property by default set
list allowed origins specific origins eg httpdomain1com origins a matched origin listed accesscontrolalloworigin response header preflight actual cors requests by default origins allowed note cors checks use values forwarded hrefhttptoolsietforghtmlrfc7239rfc 7239 xforwardedhost xforwardedport xforwardedproto headers present order reflect clientoriginated address consider using forwardedheaderfilter order choose central place whether extract use discard headers see spring framework reference filter
configure long seconds response preflight request cached clients by default set 1800 seconds 30 minutes
register script template view resolver empty default view name prefix suffix note must also configure script templating adding scripttemplateconfigurer bean 504
register freemarkerviewresolver ftl suffix note must also configure freemarker adding freemarkerconfigurer bean
set prefix gets prepended view names building url urlbasedviewresolversetprefix
set view class used create views urlbasedviewresolversetviewclass
set view names or name patterns handled view resolver view names contain simple wildcards my report repo match view name myreport urlbasedviewresolversetviewnames
set suffix gets appended view names building url urlbasedviewresolversetsuffix
add resource transformer chain transformer transformer add current instance chained method invocation
add resource resolver chain resolver resolver add current instance chained method invocation
enable cross origin request handling specified path pattern exact path mapping uris such admin supported well antstyle path patterns such admin the following defaults applied corsregistration allow origins allow simple methods get head post allow headers set max age 1800 seconds 30 minutes
returns resourcewebhandler instance
configure chain resource resolvers transformers use useful example apply version strategy resource urls if method invoked default simple pathresourceresolver used order match url paths resources configured locations cacheresources whether cache result resource resolution setting true recommended production and false development especially applying version strategy resourcehandlerregistration instance chained method invocation
add one resource locations serve static content location must point valid directory multiple locations may specified commaseparated list locations checked given resource order specified for example classpathmetainfpublicwebresources allows resources served web application root jar classpath contains metainfpublicwebresources directory resources web application root taking precedence resourcehandlerregistration instance chained method invocation
configure chain resource resolvers transformers use useful example apply version strategy resource urls if method invoked default simple pathresourceresolver used order match url paths resources configured locations cacheresources whether cache result resource resolution setting true recommended production and false development especially applying version strategy cache cache use storing resolved transformed resources default orgspringframeworkcacheconcurrentconcurrentmapcache used since resources arent serializable dependent application host one use distributed cache rather inmemory cache resourcehandlerregistration instance chained method invocation
specify cachecontrol used resource handler cachecontrol cachecontrol configuration use resourcehandlerregistration instance chained method invocation
create resourcehandlerregistration instance resourceloader resource loader turning string location resource pathpatterns one resource url path patterns
provide custom messagecodesresolver use data binding annotated controller method arguments instead one created default orgspringframeworkvalidationdatabinder
provide custom validator by default validator standard bean validation created bean validation api present classpath the configured validator used validating annotated controller method arguments
whether resource handler already registered given path pattern
return handler mapping mapped resource handlers null case registrations
add resource handler serving static resources based specified url path patterns handler invoked every incoming request matches one specified path patterns patterns like static cssfilenamewcss allowed see orgspringframeworkwebutilpatternpathpattern details syntax resourcehandlerregistration use configure registered resource handler
specify order use resource handling relative handlermappings configured spring configuration the default value used integermaxvalue1
configure path prefix apply matching controller methods prefixes used enrich mappings every requestmapping method whose controller type matched corresponding predicate prefix first matching predicate used consider using orgspringframeworkwebmethodhandlertypepredicate handlertypepredicate group controllers prefix path prefix apply predicate predicate matching controller types 51
whether match urls irrespective presence trailing slash enabled method mapped users also matches users the default value true
whether match urls irrespective case enabled method mapped users wont match users the default value false
return configurer http message readers writers use configurehttpmessagecodecsservercodecconfigurer configure readers writers
return configurablewebbindinginitializer use initializing webdatabinder instances
return global validator instance example validating requestbody method arguments delegates getvalidator first returns null checks classpath presence jsr303 implementations creating optionalvalidatorfactorybean jsr303 implementation available noop validator returned
return formattingconversionservice use annotated controllers see addformatters alternative overriding method
return handler mapping ordered integermaxvalue1 mapped resource handlers configure resource handling override addresourcehandlers
override method provide custom validator
callback building pathmatchconfigurer method final use configurepathmatching customize path matching
return reactiveadapterregistry adapting reactive types
callback building global cors configuration method final use addcorsmappingscorsregistry customize cors conifg
callback building viewresolverregistry method final use configureviewresolvers customize view resolvers
override method provide custom messagecodesresolver
constructor targetting serverside use extra information handshake remote address preexisting log prefix correlation uri endpoint url headers request headers server response headers client principal principal session protocol negotiated subprotocol may null remoteaddress remote address handshake came attributes initial attributes use websocket session logprefix log prefix used handshake correlating log messages any 51
subprotocol negotiated handshake time null none hrefhttpstoolsietforghtmlrfc6455section19 httpstoolsietforghtmlrfc6455section19
log prefix used handshake correlate log messages any log prefix null specified 51
serverside session remote address handshake request came from 51
constructor websocketmessage see static factory methods websocketsession alternatively use websocketsessionbufferfactory create payload invoke constructor
retain data buffer message payload useful runtimes eg netty pooled buffers shortcut for databuffer payload messagegetpayload databufferutilsretainpayload databufferutilsretaindatabuffer
shortcut decoding raw content message text given character encoding useful text websocket messages otherwise payload expected contain text charset character encoding 505
create new closestatus one specified reason reason reason new closestatus instance
create new closestatus instance code status code reason reason
return reason null none
upgrade websocket session handle given handler exchange current exchange websockethandler handler websocket session subprotocol selected subprotocol got handler completion mono indicate outcome websocket session handling 51 favor upgradeserverwebexchange websockethandler string supplier
upgrade websocket session handle given handler exchange current exchange websockethandler handler websocket session subprotocol selected subprotocol got handler handshakeinfofactory factory create handshakeinfo websocket session completion mono indicate outcome websocket session handling 51
constructor path javaxwebsocketendpoint path endpoint path endpoint endpoint instance
return configured websocketpolicy any
alternative constructor websocketservice use
return configured predicate initialization websocket session attributes websession attributes 51
alternative constructor requestupgradestrategy use upgradestrategy strategy use
constructor additional maxframepayloadlength argument 51
constructor session using defaultframemaxsize value
create new websocket session
handle close callback websockethandler adapter
subclasses invoke sending message false receiving async send callback true effective translating async completion callback simple flow control
handle error callback websockethandler adapter
base constructor delegate native websocket session channel connection id session id handshakeinfo handshake info bufferfactory databuffer factor current connection
alternative constructor completion monovoid propagate session completion success error for clientside use
default constructor creates manages instance jetty orgeclipsejettywebsocketclientwebsocketclient websocketclient instance obtained getjettyclient configuration note constructor used lifecycle methods class delegated jetty websocketclient
constructor accepts existing instance jetty orgeclipsejettywebsocketclientwebsocketclient websocketclient note use constructor implies jetty websocketclient externally managed hence lifecycle methods class delegated it
constructor accepts existing httpclient builder 51
create connectionbuilder given uri the default implementation creates builder configured getxnioworker xnioworker getbytebufferpool bytebufferpool passes getconnectionbuilderconsumer consumer provided construction time
set ioundertowconnectorbytebufferpool bytebufferpool pass ioundertowwebsocketsclientwebsocketclientconnectionbuilder by default indirect ioundertowserverdefaultbytebufferpool buffer size 8192 used 508 defaultpoolbuffersize
alternate constructor providing additional control connectionbuilder websocket connection worker xnio worker use create connectionbuilders bytebufferpool bytebufferpool use create connectionbuilders builderconsumer consumer configure connectionbuilders 508
set name parameter use determine requested media types by default set literal format
build requestedcontenttyperesolver delegates list resolvers configured builder
private factory method create resolver
set name parameter use determine requested media types by default set literal format
configure mapping lookup key extracted query parameter value corresponding mediatype key lookup key mediatype mediatype key
mapbased variant mediatypestring mediatype mediatypes mappings copy
add resolver get requested content type query parameter default query parameter name format
constructor ordered list default mediatypes return use applications support variety content types consider appending mediatypeall end destinations present support default media types
calls registerhandlers method addition superclasss initialization
register handlers specified url map corresponding paths urlmap map url paths keys handler beans bean names values beansexception handler couldnt registered illegalstateexception conflicting handler registered
look handler instance given url lookup path supports direct matches eg registered test matches test various path pattern matches eg registered t matches test team details see pathpattern class lookuppath url handler mapped exchange current exchange associated handler instance null found orgspringframeworkwebutilpatternpathpattern
register specified handler given url path urlpath url bean mapped handler handler instance handler bean name string a bean name automatically resolved corresponding handler bean beansexception handler couldnt registered illegalstateexception conflicting handler registered
register specified handler given url paths urlpaths urls bean mapped beanname name handler bean beansexception handler couldnt registered illegalstateexception conflicting handler registered
retrieve cors configuration given handler handler handler check never null exchange current exchange cors configuration handler null none
set global cors configurations based url patterns default first matching url pattern combined handlerlevel cors configuration any setcorsconfigurationsourcecorsconfigurationsource
configure custom corsprocessor use apply matched corsconfiguration request by default instance defaultcorsprocessor used
set global cors configuration source default first matching url pattern combined cors configuration handler any 51 setcorsconfigurationsmap
configure supported content codings order preference first coding present literal acceptencoding header given request file present associated extension used note coding must associated file extension via registerextension setextensions also customizations list codings matched customizations list cachingresourceresolver ensure encoded variants resource cached separate keys by default property set literal br gzip codings one supported content codings
configure supported content codings literal acceptencoding header cache resource variations the codings configured generally expected match configured encodedresourceresolversetcontentcodingslist by default property set literal br gzip based value encodedresourceresolverdefaultcodings codings one supported content codings 51
create new fixedversionstrategy given version string version fixed version string use
perform additional checks resolved resource beyond checking whether resources exists readable default implementation also verifies resource either location relative found one setallowedlocations allowed locations resource resource check location location relative resource found true resource valid location false otherwise
find resource given location the default implementation checks readable resource given path relative location resourcepath path resource location location check resource empty mono none found
insert fixed prefixbased version resource urls match given path patterns example versionjsmainjs useful vs contentbased versions using javascript module loaders the version may random number current date value fetched git commit sha property file environment variable set spel expressions configuration eg see value java config if done already variants given pathpatterns prefixed version also configured example adding js path pattern also cofigure automatically v100js v100 version string given argument version version string pathpatterns one resource url path patterns relative pattern configured resource handler current instance chained method invocation fixedversionstrategy
register custom versionstrategy apply resource urls match given path patterns strategy custom strategy pathpatterns one resource url path patterns relative pattern configured resource handler current instance chained method invocation versionstrategy
set map url paths keys versionstrategy values supports direct url matches antstyle pattern matches syntax details see antpathmatcher javadoc map map urls keys version strategies values
insert contentbased version resource urls match given path patterns version computed content file eg cssmaine36d2e05253c6c7085a91522ce43a0b4css good default strategy use except cannot be example using javascript module loaders use addfixedversionstrategy instead serving javascript files pathpatterns one resource url path patterns relative pattern configured resource handler current instance chained method invocation contentversionstrategy
find versionstrategy request path requested resource instance versionstrategy null none matches request path
return configured resourceurlprovider
transform given relative request path absolute path taking path given request point reference resulting path also cleaned sequences like path path relative path transform exchange current exchange absolute request path given resource path
transformer use method resource transformed contains links resources links need replaced public facing link determined resource resolver chain eg public url may version inserted resourcepath path resource needs rewritten exchange current exchange resource resource transformed transformerchain transformer chain resolved url empty mono
manually configure resource handler mappings note default resource mappings autodetected spring applicationcontext property used autodetection turned off
get public resource url given uri string the uri string expected path contains query fragment preserved resulting public resource url uristring uri string transform exchange current exchange resolved public resource url path empty unresolved
configure list resourcetransformer resourcetransformers use by default transformers configured use
check whether given path contains invalid escape sequences path path validate true path invalid false otherwise
return configured resource message writer
identifies invalid resource paths default rejects paths contain webinf metainf paths contain call stringutilscleanpath paths represent resourceutilsisurl valid url would represent one leading slash removed note method assumes leading duplicate control characters eg white space trimmed path starts predictably single one path path validate true path invalid false otherwise
processes resource request checks existence requested resource configured list locations resource exist 404 response returned client resource exists request checked presence lastmodified header value compared lastmodified timestamp given resource returning 304 status code lastmodified value greater resource newer lastmodified value header present content resource resource written response caching headers set expire one year future
accepts list stringbased location values resolved resource locations 51
set headers response called get head requests exchange current exchange resource identified resource never null mediatype resources media type never null
process given resource path the default implementation replaces backslash forward slash duplicate occurrences slash single slash any combination leading slash control characters 001f 7f single example foobar becomes foobar 3212
set list resource paths use sources serving static resources
return orgspringframeworkhttpcachecontrol instance build cachecontrol http response header
configure list resourceresolver resourceresolvers use by default pathresourceresolver configured using property recommended add pathresourceresolver last resolver
look pathresourceresolver among configured resource resolvers set allowedlocations property if empty match setlocations locations configured class
create new springobjenesis instance given standard instantiator strategy strategy instantiator strategy use
create new instance given class via objenesis clazz class create instance usecache whether use instantiator cache typically true set false eg reloadable classes new instance never null objenesisexception instance creation failed
visits iinc instruction var index local variable incremented increment amount increment local variable by
constructs new methodvisitor api asm api version implemented visitor must one opcodesasm4 opcodesasm5 opcodesasm6 opcodesasm7 methodvisitor method visitor visitor must delegate method calls may null
visits zero operand instruction opcode opcode instruction visited opcode either nop aconstnull iconstm1 iconst0 iconst1 iconst2 iconst3 iconst4 iconst5 lconst0 lconst1 fconst0 fconst1 fconst2 dconst0 dconst1 iaload laload faload daload aaload baload caload saload iastore lastore fastore dastore aastore bastore castore sastore pop pop2 dup dupx1 dupx2 dup2 dup2x1 dup2x2 swap iadd ladd fadd dadd isub lsub fsub dsub imul lmul fmul dmul idiv ldiv fdiv ddiv irem lrem frem drem ineg lneg fneg dneg ishl lshl ishr lshr iushr lushr iand land ior lor ixor lxor i2l i2f i2d l2i l2f l2d f2i f2l f2d d2i d2l d2f i2b i2c i2s lcmp fcmpl fcmpg dcmpl dcmpg ireturn lreturn freturn dreturn areturn return arraylength athrow monitorenter monitorexit
visits annotation instruction method must called after annotated instruction called several times instruction typeref reference annotated type sort type reference must typereferenceinstanceof typereferencenew typereferenceconstructorreference typereferencemethodreference typereferencecast typereferenceconstructorinvocationtypeargument typereferencemethodinvocationtypeargument typereferenceconstructorreferencetypeargument typereferencemethodreferencetypeargument see typereference typepath path annotated type argument wildcard bound array element type static inner type within typeref may literal null annotation targets typeref whole descriptor class descriptor annotation class visible literal true annotation visible runtime visitor visit annotation values literal null visitor interested visiting annotation
visits non standard attribute method attribute attribute
visits annotation exception handler type method must called after visittrycatchblock annotated exception handler called several times exception handler typeref reference annotated type sort type reference must typereferenceexceptionparameter see typereference typepath path annotated type argument wildcard bound array element type static inner type within typeref may literal null annotation targets typeref whole descriptor class descriptor annotation class visible literal true annotation visible runtime visitor visit annotation values literal null visitor interested visiting annotation
visits method instruction method instruction instruction invokes method opcode opcode type instruction visited opcode either invokevirtual invokespecial invokestatic invokeinterface owner internal name methods owner class see typegetinternalname name methods name descriptor methods descriptor see type isinterface methods owner class interface
visits try catch block start beginning exception handlers scope inclusive end end exception handlers scope exclusive handler beginning exception handlers code type internal name type exceptions handled handler literal null catch exceptions for finally blocks illegalargumentexception one labels already visited visitor by visitlabel method
visits default value annotation interface method visitor visit actual default value annotation interface method literal null visitor interested visiting default value name parameters passed methods annotation visitor ignored moreover exacly one visit method must called annotation visitor followed visitend
visits invokedynamic instruction name methods name descriptor methods descriptor see type bootstrapmethodhandle bootstrap method bootstrapmethodarguments bootstrap method constant arguments argument must integer float long double string type handle constantdynamic value method allowed modify content array caller expect array may change
visits multianewarray instruction descriptor array type descriptor see type numdimensions number dimensions array allocate
visits local variable instruction local variable instruction instruction loads stores value local variable opcode opcode local variable instruction visited opcode either iload lload fload dload aload istore lstore fstore dstore astore ret var operand instruction visited operand index local variable
visits annotation method descriptor class descriptor annotation class visible literal true annotation visible runtime visitor visit annotation values literal null visitor interested visiting annotation
visits line number declaration line line number number refers source file class compiled start first instruction corresponding line number illegalargumentexception start already visited visitor by visitlabel method
visits label label designates instruction visited it label label object
visits parameter method name parameter name null none provided access parameters access flags accfinal accsynthetic orand accmandated allowed see opcodes
visits current state local variables operand stack elements method must called just before instruction i follows unconditional branch instruction goto throw target jump instruction starts exception handler block visited types must describe values local variables operand stack elements just before i executed mandatory classes whose version greater equal opcodesv16 frames method must given either expanded form compressed form all frames must use format ie must mix expanded compressed frames within single method in expanded form frames must fnew type in compressed form frames basically deltas state previous frame opcodesfsame representing frame exactly locals previous frame empty stack opcodesfsame1 representing frame exactly locals previous frame single value stack numstack 1 stack0 contains value type stack item opcodesfappend representing frame current locals locals previous frame except additional locals defined numlocal 1 2 3 local elements contains values representing added types opcodesfchop representing frame current locals locals previous frame except last 13 locals absent empty stack numlocal 1 2 3 opcodesffull representing complete frame data cases first frame corresponding methods parameters access flags implicit must visited also illegal visit two frames code location ie least one instruction must visited two calls visitframe type type stack map frame must opcodesfnew expanded frames opcodesffull opcodesfappend opcodesfchop opcodesfsame opcodesfappend opcodesfsame1 compressed frames numlocal number local variables visited frame local local variable types frame array must modified primitive types represented opcodestop opcodesinteger opcodesfloat opcodeslong opcodesdouble opcodesnull opcodesuninitializedthis long double represented single element reference types represented string objects representing internal names uninitialized types label objects this label designates new instruction created uninitialized value numstack number operand stack elements visited frame stack operand stack types frame array must modified content format local array illegalstateexception frame visited another one without instruction two unless frame opcodesfsame frame case silently ignored
visits annotation parameter method parameter parameter index index must strictly smaller number parameters method descriptor strictly smaller parameter count specified visitannotableparametercount important note a parameter index required correspond ith parameter descriptor method descriptor particular case synthetic parameters see httpsdocsoraclecomjavasespecsjvmsse9htmljvms4htmljvms4718 descriptor class descriptor annotation class visible literal true annotation visible runtime visitor visit annotation values literal null visitor interested visiting annotation
visits end method method last one called used inform visitor annotations attributes method visited
visits maximum stack size maximum number local variables method maxstack maximum stack size method maxlocals maximum number local variables method
visits local variable declaration name name local variable descriptor type descriptor local variable signature type signature local variable may literal null local variable type use generic types start first instruction corresponding scope local variable inclusive end last instruction corresponding scope local variable exclusive index local variables index illegalargumentexception one labels already visited visitor by visitlabel method
starts visit methods code ie non abstract method
visits lookupswitch instruction dflt beginning default handler block keys values keys labels beginnings handler blocks labelsi beginning handler block keysi key
visits method instruction method instruction instruction invokes method opcode opcode type instruction visited opcode either invokevirtual invokespecial invokestatic invokeinterface owner internal name methods owner class see typegetinternalname name methods name descriptor methods descriptor see type use visitmethodinsnint string string string boolean instead
visits annotation local variable type typeref reference annotated type sort type reference must typereferencelocalvariable typereferenceresourcevariable see typereference typepath path annotated type argument wildcard bound array element type static inner type within typeref may literal null annotation targets typeref whole start fist instructions corresponding continuous ranges make scope local variable inclusive end last instructions corresponding continuous ranges make scope local variable exclusive array must size start array index local variables index range array must size start array descriptor class descriptor annotation class visible literal true annotation visible runtime visitor visit annotation values literal null visitor interested visiting annotation
visits instruction single int operand opcode opcode instruction visited opcode either bipush sipush newarray operand operand instruction visited opcode bipush operand value byteminvalue bytemaxvalue opcode sipush operand value shortminvalue shortmaxvalue opcode newarray operand value one opcodestboolean opcodestchar opcodestfloat opcodestdouble opcodestbyte opcodestshort opcodestint opcodestlong
visits annotation type method signature typeref reference annotated type sort type reference must typereferencemethodtypeparameter typereferencemethodtypeparameterbound typereferencemethodreturn typereferencemethodreceiver typereferencemethodformalparameter typereferencethrows see typereference typepath path annotated type argument wildcard bound array element type static inner type within typeref may literal null annotation targets typeref whole descriptor class descriptor annotation class visible literal true annotation visible runtime visitor visit annotation values literal null visitor interested visiting annotation
visits number method parameters annotations default ie method called method parameters defined method descriptor annotations parametercount number method parameters annotations number must less equal number parameter types method descriptor strictly less method synthetic parameters parameters ignored computing parameter indices purpose parameter annotations see httpsdocsoraclecomjavasespecsjvmsse9htmljvms4htmljvms4718 visible literal true define number method parameters annotations visible runtime literal false define number method parameters annotations invisible runtime
visits tableswitch instruction min minimum key value max maximum key value dflt beginning default handler block labels beginnings handler blocks labelsi beginning handler block min i key
visits jump instruction jump instruction instruction may jump another instruction opcode opcode type instruction visited opcode either ifeq ifne iflt ifge ifgt ifle ificmpeq ificmpne ificmplt ificmpge ificmpgt ificmple ifacmpeq ifacmpne goto jsr ifnull ifnonnull label operand instruction visited operand label designates instruction jump instruction may jump
visits field instruction field instruction instruction loads stores value field object opcode opcode type instruction visited opcode either getstatic putstatic getfield putfield owner internal name fields owner class see typegetinternalname name fields name descriptor fields descriptor see type
visits ldc instruction note new constant types may added future versions java virtual machine easily detect new constant types implementations method check unexpected constant types like this cst instanceof integer else cst instanceof float else cst instanceof long else cst instanceof double else cst instanceof string else cst instanceof type int sort type cstgetsort sort typeobject else sort typearray else sort typemethod else throw exception else cst instanceof handle else cst instanceof constantdynamic else throw exception value constant loaded stack parameter must non null integer float long double string type object array sort class constants classes whose version 49 type method sort methodtype handle methodhandle constants classes whose version 51 constantdynamic constant dynamic classes whose version 55
visits type instruction type instruction instruction takes internal name class parameter opcode opcode type instruction visited opcode either new anewarray checkcast instanceof type operand instruction visited operand must internal name object array class see typegetinternalname
returns result typegetargumentsandreturnsizes value result typegetargumentsandreturnsizes value memoized info efficiency used constantmethodreftag constantinterfacemethodreftag constantinvokedynamictag symbols
constructs new symbol constructor cant used directly symbol class abstract instead use factory methods symboltable class index symbol index constant pool bootstrapmethods attribute asm specific type table class depending tag tag symbol type must one static tag values defined class owner internal name symbols owner class maybe literal null name name symbols corresponding class field method maybe literal null value string value symbol maybe literal null data numeric value symbol
sets frame value given frame warning method called two frames share data structures recommended discard given frame avoid unexpected side effects frame new frame value
put given abstract type given bytevector using jvms verificationtypeinfo format used stackmaptable attributes symboltable type table use lookup store type symbol abstracttype abstract type restricted frameconstantkind framereferencekind frameuninitializedkind types output abstract type must put hrefhttpsdocsoraclecomjavasespecsjvmsse9htmljvms4htmljvms474jvms 474
sets input frame given method description method used initialize first frame method implicit ie stored explicitly stackmaptable attribute symboltable type table use lookup store type symbol access methods access flags descriptor method descriptor maxlocals maximum number local variables method
pops many abstract types output frame stack described given descriptor descriptor type method descriptor in case argument types popped
merges type given index given abstract type array given type returns literal true type array modified operation symboltable type table use lookup store type symbol sourcetype abstract type abstract type array element must merged type constantkind referencekind uninitializedkind kind positive null array dimensions dsttypes array abstract types types constantkind referencekind uninitializedkind kind positive null array dimensions dstindex index type must merged dsttypes literal true type array modified operation
adds abstract type list types constructor invoked basic block abstracttype abstract type constructor invoked
merges input frame given frame input output frames frame returns literal true given frame changed operation the input output frames frame never changed symboltable type table use lookup store type symbol dstframe frame whose input frame must updated frame successor control flow graph basic block corresponding frame catchtypeindex frame corresponds exception handler basic block type table index caught exception type otherwise 0 literal true input frame frame changed operation
simulates action given instruction output stack frame opcode opcode instruction arg numeric operand instruction any argsymbol symbol operand instruction any symboltable type table use lookup store type symbol
returns abstract type stored given local variable index output frame localindex index local variable whose value must returned abstract type stored given local variable index output frame
sets input frame given public api frame description symboltable type table use lookup store type symbol numlocal number local variables local local variable types described using format methodvisitorvisitframe numstack number operand stack elements stack operand stack types described using format methodvisitorvisitframe
returns abstract type corresponding given type descriptor symboltable type table use lookup store type symbol buffer string ending type descriptor offset start offset type descriptor buffer abstract type corresponding given type descriptor
returns abstract type corresponding internal name class symboltable type table use lookup store type symbol internalname internal name class must not array type descriptor abstract type value corresponding given internal name
pops given number abstract types output frame stack elements number abstract types must popped
pushes given abstract type output frame stack abstracttype abstract type
returns initialized abstract type corresponding given abstract type symboltable type table use lookup store type symbol abstracttype abstract type referencekind abstract type corresponding abstracttype uninitializedthis uninitializedkind abstract type one types constructor invoked basic block otherwise returns abstracttype
makes given methodwriter visit input frame frame visit done methodwritervisitframestart methodwritervisitabstracttype methodwritervisitframeend methods methodwriter methodwriter visit input frame frame
pushes abstract type corresponding given descriptor output frame stack symboltable type table use lookup store type symbol descriptor type method descriptor in case return type pushed
returns abstract type corresponding given public api frame element type symboltable type table use lookup store type symbol type frame element type described using format methodvisitorvisitframe ie either opcodestop opcodesinteger opcodesfloat opcodeslong opcodesdouble opcodesnull opcodesuninitializedthis internal name class label designating new instruction for uninitialized types abstract type corresponding given frame element type
pops abstract type output frame stack returns value abstract type popped output frame stack
replaces abstract type stored given local variable index output frame localindex index output frame local variable must set abstracttype value must set
visits enumeration value annotation name value name descriptor class descriptor enumeration class value actual enumeration value
visits array value annotation note arrays primitive types such byte boolean short char int long float double passed value visit visit classreader does name value name visitor visit actual array value elements literal null visitor interested visiting values name parameters passed methods visitor ignored all array values must visited calling methods annotation visitor
visits primitive value annotation name value name value actual value whose type must byte boolean character short integer long float double string type typeobject typearray sort value also array byte boolean short char int long float double values this equivalent using visitarray visiting array element turn convenient
constructs new annotationvisitor api asm api version implemented visitor must one opcodesasm4 opcodesasm5 opcodesasm6 opcodesasm7 annotationvisitor annotation visitor visitor must delegate method calls may null
visits nested annotation value annotation name value name descriptor class descriptor nested annotation class visitor visit actual nested annotation value literal null visitor interested visiting nested annotation the nested annotation value must fully visited calling methods annotation visitor
visits end annotation
puts module modulepackages modulemainclass attributes generated modulewriter given bytevector output attributes must put
returns size module modulepackages modulemainclass attributes generated modulewriter also add names attributes constant pool size bytes module modulepackages modulemainclass attributes
visits annotation field descriptor class descriptor annotation class visible literal true annotation visible runtime visitor visit annotation values literal null visitor interested visiting annotation
visits end field method last one called used inform visitor annotations attributes field visited
visits non standard attribute field attribute attribute
constructs new fieldvisitor api asm api version implemented visitor must one opcodesasm4 opcodesasm5 opcodesasm6 opcodesasm7 fieldvisitor field visitor visitor must delegate method calls may null
visits annotation type field typeref reference annotated type sort type reference must typereferencefield see typereference typepath path annotated type argument wildcard bound array element type static inner type within typeref may literal null annotation targets typeref whole descriptor class descriptor annotation class visible literal true annotation visible runtime visitor visit annotation values literal null visitor interested visiting annotation
finds basic blocks end subroutine starting basic block corresponding label and one them adds outgoing edge basic block following given subroutine call words completes control flow graph adding edges corresponding return subroutine called given caller basic block note precondition postcondition method labels must null nextlistelement subroutinecaller basic block ends jsr basic block corresponding label label supposed correspond start subroutine
makes given visitor visit label source line numbers applicable methodvisitor method visitor visitlinenumbers whether visit labels source line numbers any
sets bytecode offset label given value resolves forward references label any method must called label added bytecode method ie bytecode offset becomes known method fills blanks left bytecode forward reference previously added label code bytecode method bytecodeoffset bytecode offset label literal true blank left label small store offset case corresponding jump instruction replaced equivalent asm specific instruction using unsigned two bytes offset asm specific instructions later replaced standard bytecode instructions wider offsets 4 bytes instead 2 classreader
returns bytecode offset corresponding label offset computed start methods bytecode this method intended attribute sub classes normally needed class generators adapters bytecode offset corresponding label illegalstateexception label resolved yet
adds source line number corresponding label linenumber source line number which strictly positive
returns string representation label string representation label
puts reference label bytecode method bytecode offset label known relative bytecode offset label instruction referencing computed written directly otherwise null relative offset written new forward reference declared label code bytecode method reference appended sourceinsnbytecodeoffset bytecode offset instruction contains reference appended widereference whether reference must stored 4 bytes instead 2 bytes
finds basic blocks belong subroutine starting basic block corresponding label marks blocks belonging subroutine method follows control flow graph find blocks reachable current basic block without following jsr target note precondition postcondition method labels must null nextlistelement subroutineid id subroutine starting basic block corresponding label
adds successors label methods control flow graph except corresponding jsr target already list labels given list blocks process returns new list listoflabelstoprocess list basic blocks process linked together nextlistelement field new list blocks process
adds forward reference label method must called true forward reference ie label resolved yet backward references relative bytecode offset reference be must be computed stored directly sourceinsnbytecodeoffset bytecode offset instruction contains reference stored referencehandle referencetype either forwardreferencetypeshort forwardreferencetypewide referencehandle offset bytecode forward reference value must stored
returns total size bytes attributes attribute list begins attribute size includes 6 header bytes attributenameindex attributelength per attribute also adds attribute type names constant pool symboltable constants used attributes must stored code bytecode method corresponding code attributes literal null code attributes corresponds code field code attribute codelength length bytecode method corresponding code attributes 0 code attributes corresponds codelength field code attribute maxstack maximum stack size method corresponding code attributes 1 code attributes maxlocals maximum number local variables method corresponding code attributes 1 code attribute size attributes attribute list size includes size attribute headers
returns byte array form content attribute 6 header bytes attributenameindex attributelength must not added returned bytevector classwriter class attribute must added parameter used add items corresponds attribute constant pool class code bytecode method corresponding code attribute literal null attribute code attribute corresponds code field code attribute codelength length bytecode method corresponding code attribute 0 attribute code attribute corresponds codelength field code attribute maxstack maximum stack size method corresponding code attribute 1 attribute code attribute maxlocals maximum number local variables method corresponding code attribute 1 attribute code attribute byte array form attribute
puts attributes attribute list begins attribute given byte vector includes 6 header bytes attributenameindex attributelength per attribute symboltable constants used attributes must stored output attributes must written
puts attributes attribute list begins attribute given byte vector includes 6 header bytes attributenameindex attributelength per attribute symboltable constants used attributes must stored code bytecode method corresponding code attributes literal null code attributes corresponds code field code attribute codelength length bytecode method corresponding code attributes 0 code attributes corresponds codelength field code attribute maxstack maximum stack size method corresponding code attributes 1 code attributes maxlocals maximum number local variables method corresponding code attributes 1 code attribute output attributes must written
returns number attributes attribute list begins attribute number attributes attribute list begins attribute
reads type attribute method must return new attribute object type type corresponding length bytes starting offset given classreader classreader class contains attribute read offset index first byte attributes content classreaderb 6 attribute header bytes attributenameindex attributelength taken account here length length attributes content excluding 6 attribute header bytes charbuffer buffer used call classreader methods requiring charbuffer parameter codeattributeoffset index first byte content enclosing code attribute classreaderb 1 attribute read code attribute 6 attribute header bytes attributenameindex attributelength taken account here labels labels methods code literal null attribute read code attribute new attribute object corresponding specified bytes
returns total size bytes attributes attribute list begins attribute size includes 6 header bytes attributenameindex attributelength per attribute also adds attribute type names constant pool symboltable constants used attributes must stored size attributes attribute list size includes size attribute headers
adds merged type type table symbol table nothing type table already contains similar type typetableindex1 symboltypetag type specified index type table typetableindex2 another symboltypetag type specified index type table index new already existing symboltypetag type symbol corresponding common super class given types
adds constantutf8info constant pool symbol table nothing constant pool already contains similar item value string new already existing symbol given value
adds bootstrap method bootstrapmethods attribute symbol table nothing bootstrapmethods already contains similar bootstrap method bootstrapmethodhandle bootstrap method handle bootstrapmethodarguments bootstrap method arguments new already existing symbol given value
adds constantdynamic constantinvokedynamicinfo constant pool symbol table nothing constant pool already contains similar item tag one symbolconstantdynamictag symbolconstantinvokedynamictag name method name descriptor field descriptor constantdynamictag method descriptor constantinvokedynamictag bootstrapmethodindex index bootstrap method bootstrapmethods attribute new already existing symbol given value
adds frameitemuninitialized type type table symbol table nothing type table already contains similar type value internal class name bytecodeoffset bytecode offset new instruction created frameitemuninitialized type value index new already existing type symbol given value
adds constantintegerinfo constantfloatinfo constant pool symbol table nothing constant pool already contains similar item tag one symbolconstantintegertag symbolconstantfloattag value int float constant pool constant given tag primitive values
adds new constantdynamicinfo constantinvokedynamicinfo constant pool symbol table tag one symbolconstantdynamictag symbolconstantinvokedynamictag index constant pool index new symbol name method name descriptor field descriptor constantdynamictag method descriptor constantinvokedynamictag bootstrapmethodindex index bootstrap method bootstrapmethods attribute
adds type type table symbol table nothing type table already contains similar type value internal class name index new already existing type symbol given value
adds new constantfieldrefinfo constantmethodrefinfo constantinterfacemethodrefinfo constant pool symbol table index constant pool index new symbol tag one symbolconstantfieldreftag symbolconstantmethodreftag symbolconstantinterfacemethodreftag owner internal name class name field method name descriptor field method descriptor
adds constantdynamicinfo constant pool symbol table also adds related bootstrap method bootstrapmethods symbol table nothing constant pool already contains similar item name method name descriptor field descriptor bootstrapmethodhandle bootstrap method handle bootstrapmethodarguments bootstrap method arguments new already existing symbol given value
adds constantclassinfo constantstringinfo constantmethodtypeinfo constantmoduleinfo constantpackageinfo constant pool symbol table nothing constant pool already contains similar item tag one symbolconstantclasstag symbolconstantstringtag symbolconstantmethodtypetag symbolconstantmoduletag symbolconstantpackagetag value internal class name arbitrary string method descriptor module package name depending tag new already existing symbol given value
adds constantmethodrefinfo constantinterfacemethodrefinfo constant pool symbol table nothing constant pool already contains similar item owner internal name class name method name descriptor method descriptor isinterface whether owner interface not new already existing symbol given value
sets major version name class symbol table belongs also adds class name constant pool majorversion major classfile version number classname internal class name constant pool index new already existing symbol given class name
adds given entry entries hash set method not check whether entries already contains similar entry not not resize entries necessary entry entry which must already contained entries
adds constantnameandtypeinfo constant pool symbol table nothing constant pool already contains similar item name field method name descriptor field method descriptor new already existing symbol given value
returns size bytes symbol tables bootstrapmethods attribute also adds attribute name constant pool size bytes symbol tables bootstrapmethods attribute
adds new constantmethodhandleinfo constant pool symbol table index constant pool index new symbol referencekind one opcodeshgetfield opcodeshgetstatic opcodeshputfield opcodeshputstatic opcodeshinvokevirtual opcodeshinvokestatic opcodeshinvokespecial opcodeshnewinvokespecial opcodeshinvokeinterface owner internal name class interface name field method name descriptor field method descriptor
constructs new symboltable given classwriter initialized constant pool bootstrap methods given classreader classwriter classwriter classreader classreader whose constant pool bootstrap methods must copied initialize symboltable
puts given entry entries hash set method not check whether entries already contains similar entry not entries resized necessary avoid hash collisions multiple entries needing stored entries array index much possible reasonable memory usage entry entry which must already contained entries given entry
adds constantmethodhandleinfo constant pool symbol table nothing constant pool already contains similar item referencekind one opcodeshgetfield opcodeshgetstatic opcodeshputfield opcodeshputstatic opcodeshinvokevirtual opcodeshinvokestatic opcodeshinvokespecial opcodeshnewinvokespecial opcodeshinvokeinterface owner internal name class interface name field method name descriptor field method descriptor isinterface whether owner interface not new already existing symbol given value
constructs new empty symboltable given classwriter classwriter classwriter
adds constantinvokedynamicinfo constant pool symbol table also adds related bootstrap method bootstrapmethods symbol table nothing constant pool already contains similar item name method name descriptor method descriptor bootstrapmethodhandle bootstrap method handle bootstrapmethodarguments bootstrap method arguments new already existing symbol given value
adds new constantnameandtypeinfo constant pool symbol table index constant pool index new symbol name field method name descriptor field method descriptor
adds given type symbol typetable entry symboltypetag symboluninitializedtypetag type symbol index symbol must equal current value typecount index typetable given type added also equal entrys index hypothesis
adds constantfieldrefinfo constantmethodrefinfo constantinterfacemethodrefinfo constant pool symbol table nothing constant pool already contains similar item tag one symbolconstantfieldreftag symbolconstantmethodreftag symbolconstantinterfacemethodreftag owner internal name class name field method name descriptor field method descriptor new already existing symbol given value
puts symbol tables bootstrapmethods attribute given bytevector includes 6 attribute header bytes numbootstrapmethods value output jvms bootstrapmethods attribute must put
adds number string constant constant pool symbol table nothing constant pool already contains similar item value value constant added constant pool parameter must integer byte character short boolean float long double string type handle new already existing symbol given value
adds bootstrap method bootstrapmethods attribute symbol table nothing bootstrapmethods already contains similar bootstrap method more precisely reverts content bootstrapmethods remove last duplicate bootstrap method offset offset last bootstrap method bootstrapmethods bytes length length bootstrap method bootstrapmethods bytes hashcode hash code bootstrap method new already existing symbol given value
read bootstrapmethods bootstrapmethods array binary content add entries symboltable classreader classreader whose bootstrap methods must copied initialize symboltable charbuffer buffer used read strings constant pool
adds constantlonginfo constantdoubleinfo constant pool symbol table nothing constant pool already contains similar item tag one symbolconstantlongtag symbolconstantdoubletag value long double constant pool constant given tag primitive values
puts runtimeinvisibletypeannotations attribute containing annotations predecessors see previousannotation given bytevector annotations put order visited attributenameindex constant pool index attribute name one runtimeinvisibletypeannotations output attribute must put
puts runtimeinvisibleparameterannotations attribute containing annotation lists given annotationwriter subarray given bytevector attributenameindex constant pool index attribute name one runtimeinvisibleparameterannotations annotationwriters array annotationwriter lists designated last element annotableparametercount number elements annotationwriters put elements 0annotableparametercount put output attribute must put
returns size runtimeinvisibleparameterannotations attribute containing annotation lists given annotationwriter subarray also adds attribute name constant pool class attributename one runtimeinvisibleparameterannotations annotationwriters array annotationwriter lists designated last element annotableparametercount number elements annotationwriters take account elements 0annotableparametercount taken account size bytes runtimeinvisibleparameterannotations attribute corresponding given subarray annotationwriter lists includes size attributenameindex attributelength fields
constructs new annotationwriter symboltable constants used annotationwriter must stored usenamedvalues whether values named not annotationdefault annotation arrays use unnamed values annotation annotation typeannotation jvms structure corresponding visited content must stored bytevector must already contain fields structure except last one the elementvaluepairs array previousannotation previously visited annotation runtimeinvisibletypeannotations attribute annotation belongs null cases eg nested array annotations
constructs new annotationwriter using named values symboltable constants used annotationwriter must stored annotation annotation typeannotation jvms structure corresponding visited content must stored bytevector must already contain fields structure except last one the elementvaluepairs array previousannotation previously visited annotation runtimeinvisibletypeannotations attribute annotation belongs null cases eg nested array annotations
returns size runtimeinvisibletypeannotations attribute containing annotation predecessors see previousannotation also adds attribute name constant pool class if null attributename one runtimeinvisibletypeannotations null size bytes runtimeinvisibletypeannotations attribute containing annotation predecessors includes size attributenameindex attributelength fields
constructs new edge info see info successor see successor nextedge see nextedge
visits nest host class class nest set classes package share access private members one classes called host lists members nest turn link host nest method must called visited class nonhost member nest class implicitly nest its invalid call method visited class name argument nesthost internal name host class nest
visits enclosing class class method must called class enclosing class owner internal name enclosing class class name name method contains class literal null class enclosed method enclosing class descriptor descriptor method contains class literal null class enclosed method enclosing class
visits annotation type class signature typeref reference annotated type sort type reference must typereferenceclasstypeparameter typereferenceclasstypeparameterbound typereferenceclassextends see typereference typepath path annotated type argument wildcard bound array element type static inner type within typeref may literal null annotation targets typeref whole descriptor class descriptor annotation class visible literal true annotation visible runtime visitor visit annotation values literal null visitor interested visiting annotation
visit module corresponding class name fully qualified name using dots module access module access flags among accopen accsynthetic accmandated version module version literal null visitor visit module values literal null visitor interested visiting module
visits field class access fields access flags see opcodes parameter also indicates field synthetic andor deprecated name fields name descriptor fields descriptor see type signature fields signature may literal null fields type use generic types value fields initial value parameter may literal null field initial value must integer float long double string for int float long string fields respectively this parameter used static fields value ignored non static fields must initialized bytecode instructions constructors methods visitor visit field annotations attributes literal null class visitor interested visiting annotations attributes
visits end class method last one called used inform visitor fields methods class visited
visits member nest nest set classes package share access private members one classes called host lists members nest turn link host nest method must called visited class host nest nest host implicitly member nest its invalid call method visited class name argument nestmember internal name nest member
visits header class version class version minor version stored 16 significant bits major version 16 least significant bits access classs access flags see opcodes parameter also indicates class deprecated name internal name class see typegetinternalname signature signature class may literal null class generic one extend implement generic classes interfaces supername internal name super class see typegetinternalname interfaces super class object may literal null object class interfaces internal names classs interfaces see typegetinternalname may literal null
visits information inner class inner class necessarily member class visited name internal name inner class see typegetinternalname outername internal name class inner class belongs see typegetinternalname may literal null member classes innername simple name inner class inside enclosing class may literal null anonymous inner classes access access flags inner class originally declared enclosing class
visits non standard attribute class attribute attribute
visits annotation class descriptor class descriptor annotation class visible literal true annotation visible runtime visitor visit annotation values literal null visitor interested visiting annotation
visits method class method must return new methodvisitor instance or literal null time called ie return previously returned visitor access methods access flags see opcodes parameter also indicates method synthetic andor deprecated name methods name descriptor methods descriptor see type signature methods signature may literal null method parameters return type exceptions use generic types exceptions internal names methods exception classes see typegetinternalname may literal null object visit byte code method literal null class visitor interested visiting code method
visits source class source name source file class compiled may literal null debug additional debug information compute correspondence source compiled elements class may literal null
constructs new classvisitor api asm api version implemented visitor must one opcodesasm4 opcodesasm5 opcodesasm6 opcodesasm7 classvisitor class visitor visitor must delegate method calls may null
returns size methodinfo jvms structure generated methodwriter also add names attributes method constant pool size bytes methodinfo jvms structure
computes maximum stack size method
constructs new methodwriter symboltable constants used annotationwriter must stored access methods access flags see opcodes name methods name descriptor methods descriptor see type signature methods signature may literal null exceptions internal names methods exceptions may literal null compute indicates must computed see compute
puts given public api frame element type stackmaptableentries using jvms verificationtypeinfo format used stackmaptable attributes type frame element type described using format methodvisitorvisitframe ie either opcodestop opcodesinteger opcodesfloat opcodeslong opcodesdouble opcodesnull opcodesuninitializedthis internal name class label designating new instruction for uninitialized types
computes stack map frames method scratch
ends visit currentframe writing stackmaptable entries updating stackmaptable numberofentries except current frame first one implicit stackmaptable resets currentframe literal null
compresses writes currentframe new stackmaptable entry
puts abstract types currentframe stackmaptableentries using jvms verificationtypeinfo format used stackmaptable attributes start index first type currentframe write end index last type currentframe write exclusive
collects attributes method given set attribute prototypes attributeprototypes set attribute prototypes
ends current basic block method must used case current basic block successor warning method must called currently visited instruction put code if frames computed method inserts new label start new basic block current instruction
returns whether attributes method copied attributes given method assuming method visitor given classreader methodwriter method called methodwriter created content visited returns true attributes corresponding constructor arguments at signature exception deprecated synthetic attribute corresponding attributes given method source source classreader attributes method might copied methodinfooffset offset sourceb methodinfo jvms structure attributes method might copied methodinfolength length sourceb methodinfo jvms structure attributes method might copied hassyntheticattribute whether methodinfo jvms structure attributes method might copied contains synthetic attribute hasdeprecatedattribute whether methodinfo jvms structure attributes method might copied contains deprecated attribute descriptorindex descriptorindex field methodinfo jvms structure attributes method might copied signatureindex constant pool index contained signature attribute methodinfo jvms structure attributes method might copied 0 exceptionsoffset offset sourceb exceptions attribute methodinfo jvms structure attributes method might copied 0 whether attributes method copied attributes methodinfo jvms structure sourceb methodinfooffset methodinfooffset methodinfolength
starts visit new stack map frame stored currentframe offset bytecode offset instruction frame corresponds numlocal number local variables frame numstack number stack elements frame index next element written frame
puts content methodinfo jvms structure generated methodwriter given bytevector output methodinfo structure must put
constructs new classtoolargeexception classname internal name class constantpoolcount number constant pool items class
constructs new field method handle tag kind field method designated handle must opcodeshgetfield opcodeshgetstatic opcodeshputfield opcodeshputstatic opcodeshinvokevirtual opcodeshinvokestatic opcodeshinvokespecial opcodeshnewinvokespecial opcodeshinvokeinterface owner internal name class owns field method designated handle name name field method designated handle descriptor descriptor field method designated handle constructor superseded handleint string string string boolean
returns textual representation handle textual representation is for reference class owner name descriptor tag for reference interface owner name descriptor tag itf
constructs new field method handle tag kind field method designated handle must opcodeshgetfield opcodeshgetstatic opcodeshputfield opcodeshputstatic opcodeshinvokevirtual opcodeshinvokestatic opcodeshinvokespecial opcodeshnewinvokespecial opcodeshinvokeinterface owner internal name class owns field method designated handle name name field method designated handle descriptor descriptor field method designated handle isinterface whether owner interface not
constructs new fieldwriter symboltable constants used fieldwriter must stored access fields access flags see opcodes name fields name descriptor fields descriptor see type signature fields signature may literal null constantvalue fields constant value may literal null
returns size fieldinfo jvms structure generated fieldwriter also adds names attributes field constant pool size bytes fieldinfo jvms structure
puts content fieldinfo jvms structure generated fieldwriter given bytevector output fieldinfo structure must put
puts typepath jvms structure corresponding given typepath given bytevector typepath typepath instance literal null empty paths output type path must put
returns string representation type path arrayelement steps represented innertype steps wildcardbound steps typeargument steps type argument index decimal form followed
returns length path ie number steps length path
constructs new typepath typepathcontainer byte array containing typepath jvms structure typepathoffset offset first byte typepath structure typepathcontainer
returns value given step path index index 0 getlength exclusive one arrayelement innertype wildcardbound typeargument
returns index type argument given step stepping into method used steps whose value typeargument index index 0 getlength exclusive index type argument given step stepping into
converts type path string form format used tostring typepath object typepath type path string form format used tostring may literal null empty corresponding typepath object literal null path empty
visit package current module packaze internal name package
visit open package current module packaze internal name opened package access access flag opened package valid values among accsynthetic accmandated modules fully qualified names using dots modules use deep reflection classes open package literal null
visit service used current module name must internal name interface class service internal name service
visit implementation service service internal name service providers internal names implementations service there least one provider
constructs new modulevisitor api asm api version implemented visitor must one opcodesasm6 opcodesasm7 modulevisitor module visitor visitor must delegate method calls may null
visits end module method last one called used inform visitor everything visited
visit main class current module mainclass internal name main class current module
visit exported package current module packaze internal name exported package access access flag exported package valid values among accsynthetic accmandated modules fully qualified names using dots modules access public classes exported package literal null
visits dependence current module module fully qualified name using dots dependence access access flag dependence among acctransitive accstaticphase accsynthetic accmandated version module version compile time literal null
returns reference type parameter bound generic class method sort one classtypeparameter methodtypeparameter paramindex type parameter index boundindex type bound index within type parameters reference given generic class method type parameter bound
puts given targettype targetinfo jvms structures given bytevector targettypeandinfo targettype targetinfo structures encoded targettypeandinfo localvariable resourcevariable target types supported output type reference must put
returns size constant size constant ie 2 long double 1 otherwise
constructs new constantdynamic name constant name can arbitrary descriptor constant type must field descriptor bootstrapmethod bootstrap method use compute constant value runtime bootstrapmethodarguments arguments pass bootstrap method order compute constant value runtime
returns size values type method must used method types size values type ie 2 long double 0 void 1 otherwise
appends descriptor given class given string builder clazz class whose descriptor must computed stringbuilder string builder descriptor must appended
returns type values corresponding argument types given method method method type values corresponding argument types given method
tests given object equal type object object compared type literal true given object equal type
returns string representation type descriptor type
returns type values corresponding argument types given method descriptor methoddescriptor method descriptor type values corresponding argument types given method descriptor
returns type corresponding given internal name internalname internal name type corresponding given internal name
returns descriptor corresponding given constructor constructor constructor object descriptor given constructor
returns type corresponding given field method descriptor descriptorbuffer buffer containing field method descriptor descriptorbegin beginning index inclusive field method descriptor descriptorbuffer descriptorend end index exclusive field method descriptor descriptorbuffer type corresponding given type descriptor
constructs reference type sort sort type see sort valuebuffer buffer containing value field method type valuebegin beginning index inclusive value field method type valuebuffer valueend end index exclusive value field method type valuebuffer
returns number dimensions array type method used array type number dimensions array type
appends descriptor corresponding type given string buffer stringbuilder string builder descriptor must appended
returns binary name class corresponding type method must used method types binary name class corresponding type
returns hash code value type hash code value type
returns descriptor corresponding given class clazz object class primitive class array class descriptor corresponding given class
computes size arguments return value method methoddescriptor method descriptor size arguments method plus one implicit argument argumentssize size return value returnsize packed single int argumentssize 2 returnsize argumentssize therefore equal 2 returnsize 0x03
returns descriptor corresponding given argument return types returntype return type method argumenttypes argument types method descriptor corresponding given argument return types
returns type corresponding given class clazz class type corresponding given class
returns type elements array type method used array type returns type elements array type
returns jvm instruction opcode adapted type method must used method types opcode jvm instruction opcode opcode must one iload istore iaload iastore iadd isub imul idiv irem ineg ishl ishr iushr iand ior ixor ireturn opcode similar given opcode adapted type example type float opcode ireturn method returns freturn
returns descriptor corresponding given method method method object descriptor given method
returns type corresponding return type given method descriptor methoddescriptor method descriptor type corresponding return type given method descriptor
returns descriptor corresponding type descriptor corresponding type
constructs new methodtoolargeexception classname internal name owner class methodname name method descriptor descriptor method codesize size methods code attribute bytes
adds handle constant pool class build nothing constant pool already contains similar item this method intended attribute sub classes normally needed class generators adapters tag kind handle must opcodeshgetfield opcodeshgetstatic opcodeshputfield opcodeshputstatic opcodeshinvokevirtual opcodeshinvokestatic opcodeshinvokespecial opcodeshnewinvokespecial opcodeshinvokeinterface owner internal name field method owner class name name field method descriptor descriptor field method isinterface true owner interface index new already existing method type reference item
returns equivalent given class file asm specific instructions replaced standard ones done classreader classwriter round trip classfile class file containing asm specific instructions generated classwriter hasframes whether least one stack map frames classfile equivalent classfile asm specific instructions replaced standard ones
returns common super type two given types default implementation method loads two given classes uses javalangclass methods find common super class overridden compute common super type ways particular without actually loading class take account class currently generated classwriter course loaded since construction type1 internal name class type2 internal name another class internal name common super class two given classes
returns classloader used default implementation getcommonsuperclassstring string classwriters runtime type default classloader
constructs new classwriter object enables optimizations mostly add bytecode transformations optimizations following the constant pool bootstrap methods original class copied new class saves time new constant pool entries new bootstrap methods added end necessary unused constant pool entries bootstrap methods wont removed methods transformed copied new class directly original class bytecode ie without emitting visit events method instructions saves lot time untransformed methods detected fact classreader receives methodvisitor objects come classwriter and classvisitor instance classreader classreader used read original class used copy entire constant pool bootstrap methods original class also copy fragments original bytecode applicable flags option flags used modify default behavior classmust zero computemaxs computeframes these option flags affect methods copied new class means neither maximum stack size stack frames computed methods
returns prototypes attributes used class fields methods prototypes attributes used class fields methods
returns content class file built classwriter binary content jvms classfile structure built classwriter classtoolargeexception constant pool class large methodtoolargeexception code attribute method large
adds handle constant pool class build nothing constant pool already contains similar item this method intended attribute sub classes normally needed class generators adapters tag kind handle must opcodeshgetfield opcodeshgetstatic opcodeshputfield opcodeshputstatic opcodeshinvokevirtual opcodeshinvokestatic opcodeshinvokespecial opcodeshnewinvokespecial opcodeshinvokeinterface owner internal name field method owner class name name field method descriptor descriptor field method index new already existing method type reference item method superseded newhandleint string string string boolean
adds dynamic constant reference constant pool class build nothing constant pool already contains similar item this method intended attribute sub classes normally needed class generators adapters name name invoked method descriptor field descriptor constant type bootstrapmethodhandle bootstrap method bootstrapmethodarguments bootstrap method constant arguments index new already existing dynamic constant reference item
adds method reference constant pool class build nothing constant pool already contains similar item this method intended attribute sub classes normally needed class generators adapters owner internal name methods owner class name methods name descriptor methods descriptor isinterface literal true owner interface index new already existing method reference item
adds invokedynamic reference constant pool class build nothing constant pool already contains similar item this method intended attribute sub classes normally needed class generators adapters name name invoked method descriptor descriptor invoke method bootstrapmethodhandle bootstrap method bootstrapmethodarguments bootstrap method constant arguments index new already existing invokedynamic reference item
puts long byte vector byte vector automatically enlarged necessary longvalue long byte vector
puts two bytes short byte vector byte vector automatically enlarged necessary bytevalue1 byte bytevalue2 another byte shortvalue short byte vector
puts array bytes byte vector byte vector automatically enlarged necessary bytearrayvalue array bytes may literal null put bytelength null bytes byte vector byteoffset index first byte bytearrayvalue must copied bytelength number bytes bytearrayvalue must copied byte vector
puts int byte vector byte vector automatically enlarged necessary intvalue int byte vector
puts one byte two shorts byte vector byte vector automatically enlarged necessary bytevalue byte shortvalue1 short shortvalue2 another short byte vector
puts two bytes byte vector byte vector automatically enlarged necessary bytevalue1 byte bytevalue2 another byte byte vector
puts short byte vector byte vector automatically enlarged necessary shortvalue short byte vector
enlarges byte vector receive size bytes size number additional bytes byte vector able receive
constructs new bytevector given initial data data initial data new byte vector
puts utf8 string byte vector byte vector automatically enlarged necessary string length encoded two bytes encoded characters space ie thislength offset 2 0 stringvalue string encode offset index first character encode previous characters supposed already encoded using one byte per character maxbytelength maximum byte length encoded string including already encoded characters byte vector
puts byte short byte vector byte vector automatically enlarged necessary bytevalue byte shortvalue short byte vector
puts byte byte vector byte vector automatically enlarged necessary bytevalue byte byte vector
constructs new handler given one different scope handler existing handler startpc startpc field jvms exceptiontable entry endpc endpc field jvms exceptiontable entry
returns number elements handler list begins given element firsthandler beginning handler list may literal null number elements handler list begins handler
removes range start end handler list begins given element firsthandler beginning handler list may literal null start start range removed end end range removed maybe literal null exception handler list startend range removed
constructs new handler startpc startpc field jvms exceptiontable entry endpc endpc field jvms exceptiontable entry handlerpc handlerpc field jvms exceptiontable entry catchtype catchtype field jvms exceptiontable entry catchtypedescriptor internal name type exceptions handled handler literal null catch exceptions
puts jvms exceptiontable corresponding handler list begins given element this includes exceptiontablelength field firsthandler beginning handler list may literal null output exceptiontablelength exceptiontable structures must put
reads constantdynamic constant pool entry b constantpoolentryindex index constantdynamic entry classs constant pool table charbuffer buffer used read string buffer must sufficiently large automatically resized constantdynamic corresponding specified constantdynamic entry
reads numeric string constant pool entry b this method intended attribute sub classes normally needed class generators adapters constantpoolentryindex index constantinteger constantfloat constantlong constantdouble constantclass constantstring constantmethodtype constantmethodhandle constantdynamic entry classs constant pool charbuffer buffer used read strings buffer must sufficiently large automatically resized integer float long double string type handle constantdynamic corresponding specified constant pool entry
returns internal name super class see typegetinternalname interfaces super class object internal name super class literal null object class classvisitorvisitint int string string string string
reads jvms fieldinfo structure makes given visitor visit it classvisitor visitor must visit field context information class parsed fieldinfooffset start offset fieldinfo structure offset first byte following fieldinfo structure
reads element values jvms annotation structure makes given visitor visit them method also used read values jvms arrayvalue field annotations elementvalue annotationvisitor visitor must visit values annotationoffset start offset annotation structure excluding typeindex field arrayvalue structure named annotation values named not true parse values jvms annotation structure false parse jvms arrayvalue annotations elementvalue charbuffer buffer used read strings constant pool end offset jvms annotation arrayvalue structure
returns bytecode offset corresponding specified jvms typeannotation structure 1 typeannotation bytecode offset typeannotationoffsets offset typeannotation entry runtimeinvisibletypeannotations attribute null typeannotationindex index typeannotation entry typeannotationoffsets bytecode offset corresponding specified jvms typeannotation structure 1 typeannotation bytecode offset
reads constantutf8 constant pool entry b constantpoolentryindex index constantutf8 entry classs constant pool table charbuffer buffer used read string buffer must sufficiently large automatically resized string corresponding specified constantutf8 entry
reads bootstrapmethods attribute compute offset bootstrap method maxstringlength conservative estimate maximum length strings contained constant pool class offsets bootstrap methods null
parses runtimeinvisibletypeannotations attribute find offset typeannotation entry contains find corresponding labels visit try catch block annotations methodvisitor method visitor used visit try catch block annotations context information class parsed runtimetypeannotationsoffset start offset runtimeinvisibletypeannotations attribute excluding attributeinfos attributenameindex attributelength fields visible true attribute parse runtimevisibletypeannotations attribute false runtimeinvisibletypeannotations attribute start offset entry runtimeinvisibletypeannotationsattributes annotations array field
constructs new classreader object classfilebuffer byte array containing jvms classfile structure read classfileoffset offset bytebuffer first byte classfile read classfilelength length bytes classfile read
reads constantclass constantstring constantmethodtype constantmodule constantpackage constant pool entry b this method intended attribute sub classes normally needed class generators adapters offset start offset unsigned short value b whose value index constantclass constantstring constantmethodtype constantmodule constantpackage entry classs constant pool table charbuffer buffer used read item buffer must sufficiently large automatically resized string corresponding specified constant pool entry
reads jvms code attribute makes given visitor visit it methodvisitor visitor must visit code attribute context information class parsed codeoffset start offset b code attribute excluding attributenameindex attributelength fields
constructs new classreader object classname fully qualified name class read classfile structure retrieved current class loaders classloadergetsystemresourceasstream ioexception exception occurs reading
reads jvms verificationtypeinfo structure stores given index given array verificationtypeinfooffset start offset verificationtypeinfo structure read frame array parsed type must stored index index frame parsed type must stored charbuffer buffer used read strings constant pool labels labels method currently parsed indexed offset parsed type itemuninitialized new label corresponding new instruction stored array already exist end offset jvms verificationtypeinfo structure
computes implicit frame method currently parsed as defined given context stores given context context information class parsed
reads jvms elementvalue structure makes given visitor visit it annotationvisitor visitor must visit elementvalue structure elementvalueoffset start offset b elementvalue structure read elementname name elementvalue structure read literal null charbuffer buffer used read strings constant pool end offset jvms elementvalue structure
reads signed int value b this method intended attribute sub classes normally needed class generators adapters offset start offset value read b read value
reads unsigned short value b this method intended attribute sub classes normally needed class generators adapters offset start index value read b read value
constructs new classreader object this internal constructor must exposed public api classfilebuffer byte array containing jvms classfile structure read classfileoffset offset bytebuffer first byte classfile read checkclassversion whether check class version not
returns offset b first classfiles attributes array field entry offset b first classfiles attributes array field entry
reads module modulepackages modulemainclass attributes visit them classvisitor current class visitor context information class parsed moduleoffset offset module attribute excluding attributeinfos attributenameindex attributelength fields modulepackagesoffset offset modulepackages attribute excluding attributeinfos attributenameindex attributelength fields 0 modulemainclass string corresponding modulemainclass attribute null
reads jvms methodinfo structure makes given visitor visit it classvisitor visitor must visit method context information class parsed methodinfooffset start offset methodinfo structure offset first byte following methodinfo structure
makes given visitor visit jvms classfile structure passed constructor classreader classvisitor visitor must visit class attributeprototypes prototypes attributes must parsed visit class attribute whose type equal type one prototypes parsed byte array value passed unchanged classwriter this may corrupt value contains references constant pool syntactic semantic links class element transformed class adapter reader writer parsingoptions options use parse class one skipcode skipdebug skipframes expandframes
creates label without labelflagdebugonly flag set given bytecode offset label created call readlabel labelflagdebugonly flag cleared bytecodeoffset bytecode offset method labels already created labels indexed offset label without labelflagdebugonly flag set
returns internal names implemented interfaces see typegetinternalname internal names directly implemented interfaces inherited implemented interfaces returned classvisitorvisitint int string string string string
reads jvms stackmapframe structure stores result given context object method also used read fullframe structure excluding frametype field this used parse legacy stackmap attributes stackmapframeoffset start offset b stackmapframevalue structure read start offset fullframe structure excluding frametype field compressed true read stackmapframe structure false read fullframe structure without frametype field expand stack map frame must expanded see expandframes context parsed stack map frame must stored end offset jvms stackmapframe fullframe structure
reads given input stream returns content byte array inputstream input stream close true close input stream reading content given input stream ioexception problem occurs reading
reads runtimeinvisibleparameterannotations attribute makes given visitor visit it methodvisitor visitor must visit parameter annotations context information class parsed runtimeparameterannotationsoffset start offset runtimeinvisibleparameterannotations attribute excluding attributeinfos attributenameindex attributelength fields visible true attribute parse runtimevisibleparameterannotations attribute false runtimeinvisibleparameterannotations attribute
returns label corresponding given bytecode offset default implementation method creates label given offset already created bytecodeoffset bytecode offset method labels already created labels indexed offset label already exists bytecodeoffset method must create new one otherwise must store new label array non null label must equal labelsbytecodeoffset
returns internal name class see typegetinternalname internal class name classvisitorvisitint int string string string string
reads signed long value b this method intended attribute sub classes normally needed class generators adapters offset start offset value read b read value
reads signed short value b this method intended attribute sub classes normally needed class generators adapters offset start offset value read b read value
creates label labelflagdebugonly flag set already existing label given bytecode offset otherwise nothing label created call readlabel bytecodeoffset bytecode offset method labels already created labels indexed offset
reads utf8 string b utfoffset start offset utf8 string read utflength length utf8 string read charbuffer buffer used read string buffer must sufficiently large automatically resized string corresponding specified utf8 string
reads non standard jvms attribute structure b attributeprototypes prototypes attributes must parsed visit class attribute whose type equal type one prototypes parsed byte array value passed unchanged classwriter type type attribute offset start offset jvms attribute structure b 6 attribute header bytes attributenameindex attributelength taken account here length length attributes content excluding 6 attribute header bytes charbuffer buffer used read strings constant pool codeattributeoffset start offset enclosing code attribute b 1 attribute read code attribute 6 attribute header bytes attributenameindex attributelength taken account here labels labels methods code literal null attribute read code attribute attribute read
parses header jvms typeannotation structure extract targettype targetinfo targetpath the result stored given context returns start offset rest typeannotation structure context information class parsed extracted targettype targetpath must stored typeannotationoffset start offset typeannotation structure start offset rest typeannotation structure
sets currentframe input stack map frame next current instruction ie instruction given one assumed value object method called stack map frame status given instruction executed
sort given array default ordercomparator optimized skip sorting lists size 0 1 order avoid unnecessary array extraction array array sort javautilarrayssortobject javautilcomparator
determine order value given object the default implementation checks given ordersourceprovider using findorder falls back regular getorderobject call obj object check order value orderedlowestprecedence fallback
sort given list default ordercomparator optimized skip sorting lists size 0 1 order avoid unnecessary array extraction list list sort javautillistsortjavautilcomparator
determine priority value given object any the default implementation always returns null subclasses may override give specific kinds values priority characteristic addition order semantics priority indicates may used selecting one object another addition serving ordering purposes listarray obj object check priority value null none 41
sort given array list default ordercomparator necessary simply skips sorting given value optimized skip sorting lists size 0 1 order avoid unnecessary array extraction value array list sort javautilarrayssortobject javautilcomparator
find order value indicated given object the default implementation checks ordered interface overridden subclasses obj object check order value null none found
determine order value given object the default implementation checks ordered interface delegating findorder overridden subclasses obj object check order value orderedlowestprecedence fallback
return emptyvalue instance underlying reactive async type use type implies supportsempty true
private constructor see static factory methods
determine conventional variable name given parameter taking generic collection type any account as 50 method supports reactive types mono becomes productmono flux becomes myproductflux observable becomes myproductobservable parameter method constructor parameter generated variable name
determine conventional variable name return type given method taking generic collection type any account falling back given return value method declaration specific enough eg object return type untyped collection as 50 method supports reactive types mono becomes productmono flux becomes myproductflux observable becomes myproductobservable method method generate variable name resolvedtype resolved return type method value return value may null available generated variable name
determine conventional variable name supplied object based concrete type convention used return uncapitalized short name class according javabeans property naming rules for example commyappproduct becomes product commyappmyproduct becomes myproduct commyappukproduct becomes ukproduct for arrays pluralized version array component type used collections attempt made peek ahead determine component type return pluralized version value value generate variable name generated variable name
retrieve class element collection exact element class retrieved depend concrete collection implementation
return attribute name qualified given enclosing class example attribute name foo qualified class commyappsomeclass would commyappsomeclassfoo
convert strings attribute name format eg lowercase hyphens separating words property name format camelcase example transactionmanager becomes transactionmanager
determine class use naming variable containing given value will return class given value except encountering jdk proxy case determine primary interface implemented proxy value value check class use naming variable
create key object given method target class method method wrap must null targetclass target class method invoked may null identical declaring class
resolve given generic type given context class substituting type variables far possible generictype potentially generic type contextclass context class target type example class target type appears method signature can null resolved type possibly given generic type asis 50
resolve single type argument given generic interface given target method assumed return given interface implementation it method target method check return type genericifc generic interface superclass resolve type argument resolved parameter type method return type null resolvable single argument type wildcardtype
determine target type given generic parameter type methodparameter method parameter specification implementationclass class resolve type variables corresponding generic parameter return type
resolve single type argument given generic interface given target class assumed implement generic interface possibly declare concrete type type variable clazz target class check genericifc generic interface superclass resolve type argument resolved type argument null resolvable
resolve specified generic type given typevariable map used spring data generictype generic type resolve map typevariable map resolved type resolves class objectclass otherwise
build mapping typevariablegetname typevariable names class concrete classes specified class searches super types enclosing types interfaces resolvetypetype map
determine target type generic return type given method formal type variables declared given class method method introspect clazz class resolve type variables corresponding generic parameter return type
resolve type arguments given generic interface given target class assumed implement generic interface possibly declare concrete types type variables clazz target class check genericifc generic interface superclass resolve type argument resolved type argument array size matching number actual type arguments null resolvable
create new methodparameter given method method method specify parameter parameterindex index parameter 1 method return type 0 first method parameter 1 second method parameter etc nestinglevel nesting level target type typically 1 eg case list lists 1 would indicate nested list whereas 2 would indicate element nested list
create new methodparameter given method constructor this convenience factory method scenarios method constructor reference treated generic fashion methodorconstructor method constructor specify parameter parameterindex index parameter corresponding methodparameter instance 50 favor forexecutable
obtain lazily constructed typeindexesperlevel map
return annotations associated specific methodconstructor parameter
return nested generic type methodconstructor parameter parameter type never null 42 getnestinglevel
decrease parameters nesting level getnestinglevel
return wrapped method any note either method constructor available method null none
return parameter descriptor methodconstructor parameter 50
check whether method parameter annotated variant nullable annotation eg javaxannotationnullable eduumdcsfindbugsannotationsnullable
return variant methodparameter points parameter one nesting level deeper effectively increasenestinglevel independent methodparameter object eg case original cached 43
return nested type methodconstructor parameter parameter type never null 31 getnestinglevel
return methodconstructor annotation given type available annotationtype annotation type look annotation object null found
return wrapped constructor any note either method constructor available constructor null none
create new methodparameter given method constructor this convenience factory method scenarios method constructor reference treated generic fashion executable method constructor specify parameter parameterindex index parameter corresponding methodparameter instance 50
create new methodparameter given constructor constructor constructor specify parameter parameterindex index parameter nestinglevel nesting level target type typically 1 eg case list lists 1 would indicate nested list whereas 2 would indicate element nested list
copy constructor resulting independent methodparameter object based metadata cache state original object in original original methodparameter object copy
return type index specified nesting level nestinglevel nesting level check corresponding type index null none specified indicating default type index
return type index current nesting level corresponding type index null none specified indicating default type index getnestinglevel
return generic type methodconstructor parameter parameter type never null 30
return name methodconstructor parameter parameter name may null parameter name metadata contained class file initparameternamediscovery parameternamediscoverer set begin with
return parameter annotation given type available annotationtype annotation type look annotation object null found
return type methodconstructor parameter parameter type never null
check whether specified methodparameter represents nullable kotlin type optional parameter with default value kotlin declaration
return whether method indicates parameter required either form java 8s javautiloptional variant parameterlevel nullable annotation such jsr305 findbugs set annotations languagelevel nullable type declaration kotlin 43
cast given type subtype enum enumtype enum type never null given type subtype enum illegalargumentexception given type subtype enum
create approximate map given map warning since parameterized type k bound type keys contained supplied map type safety cannot guaranteed supplied map enummap scenarios caller responsible ensuring key type supplied map enum type matching type k alternative caller may wish treat return value raw map map keyed object map original map object potentially null capacity initial capacity new empty map instance isapproximablemaptype javautilenummap javautiltreemap javautillinkedhashmap
create appropriate collection given collection type warning since parameterized type e bound supplied elementtype type safety cannot guaranteed desired collectiontype enumset scenarios caller responsible ensuring supplied elementtype enum type matching type e alternative caller may wish treat return value raw collection collection object collectiontype desired type target collection never null elementtype collections element type null unknown note relevant enumset creation capacity initial capacity new collection instance 413 javautillinkedhashset javautilarraylist javautiltreeset javautilenumset illegalargumentexception supplied collectiontype null desired collectiontype enumset supplied elementtype subtype enum
create appropriate map given map type warning since parameterized type k bound supplied keytype type safety cannot guaranteed desired maptype enummap scenarios caller responsible ensuring keytype enum type matching type k alternative caller may wish treat return value raw map map keyed object similarly type safety cannot enforced desired maptype multivaluemap maptype desired type target map never null keytype maps key type null unknown note relevant enummap creation capacity initial capacity new map instance 413 javautillinkedhashmap javautiltreemap orgspringframeworkutillinkedmultivaluemap javautilenummap illegalargumentexception supplied maptype null desired maptype enummap supplied keytype subtype enum
create approximate collection given collection warning since parameterized type e bound type elements contained supplied collection type safety cannot guaranteed supplied collection enumset scenarios caller responsible ensuring element type supplied collection enum type matching type e alternative caller may wish treat return value raw collection collection object collection original collection object potentially null capacity initial capacity new empty collection instance isapproximablecollectiontype javautillinkedlist javautilarraylist javautilenumset javautiltreeset javautillinkedhashset
create variant javautilproperties automatically adapts nonstring values string representations propertiesgetproperty new properties instance 434
check whether exception contains exception given type either given class contains nested cause given type extype exception type look whether nested exception specified type
retrieve innermost cause exception any innermost exception null none 20
retrieve specific cause exception is either innermost cause root cause exception itself differs getrootcause falls back present exception root cause specific cause never null 203
return detail message including message nested exception one
return string representation type fully resolved form including generic parameters
return resolvabletype specified base type interface base class given implementation class example resolvabletypeforclasslistclass myarraylistclass basetype base type must null implementationclass implementation class resolvabletype specified base type backed given implementation class forclassclass forclasswithgenericsclass class
private constructor used create new resolvabletype cache key purposes upfront resolution
return resolvabletype specified method parameter method source method must null parameterindex parameter index resolvabletype specified method parameter formethodparametermethod int class formethodparametermethodparameter
return resolvabletype specified methodparameter given implementation type use variant class declares method includes generic parameter variables satisfied implementation type methodparameter source method parameter must null implementationtype implementation type resolvabletype specified method parameter formethodparametermethodparameter
return underlying java class managed available otherwise null
return resolvabletype specified field given implementation use variant class declares field includes generic parameter variables satisfied implementation class field source field implementationclass implementation class resolvabletype specified field forfieldfield
return resolvabletype specified instance instance convey generic information implements resolvabletypeprovider precise resolvabletype used simple one based forclassclass class instance instance instance resolvabletype specified instance 42 resolvabletypeprovider
resolve toplevel parameter type given methodparameter methodparameter method parameter resolve 419 methodparametersetparametertype
return true type contains unresolvable generics only is substitute declared type variables
return true type resolves class represents array getcomponenttype
return type resolvabletype specified class searches getsupertype supertype getinterfaces interface hierarchies find match returning none type implement extend specified class type required type typically narrowed resolvabletype representing object specified type none resolvable type ascollection asmap getsupertype getinterfaces
private constructor used create new resolvabletype class basis avoids instanceof checks order create straight class wrapper 42
return resolvabletype specified method return type method source method return type resolvabletype specified method return formethodreturntypemethod class
convenience method getgenericint get resolve resolve specific generic parameters indexes indexes refer generic parameter may omitted return first generic resolved class null getgenericint resolve
return resolvabletype specified field given nesting level field source field nestinglevel nesting level 1 outer level 2 nested generic type etc forfieldfield
clear internal resolvabletype serializabletypewrapper cache 42
return resolvabletype specified methodparameter overriding target type resolve specific given type methodparameter source method parameter must null targettype type resolve a part method parameters type resolvabletype specified method parameter formethodparametermethod int
return resolvabletype specified constructor parameter constructor source constructor must null parameterindex parameter index resolvabletype specified constructor parameter forconstructorparameterconstructor int class
return resolvabletype specified field given implementation use variant class declares field includes generic parameter variables satisfied implementation type field source field implementationtype implementation type resolvabletype specified field forfieldfield
return resolvabletype specified method parameter given implementation use variant class declares method includes generic parameter variables satisfied implementation class method source method must null parameterindex parameter index implementationclass implementation class resolvabletype specified method parameter formethodparametermethod int class formethodparametermethodparameter
return resolvabletype representing generic parameter given indexes indexes zero based example given type map list getgeneric0 access integer nested generics accessed specifying multiple indexes example getgeneric1 0 access string nested list convenience indexes specified first generic returned if generic available specified indexes none returned indexes indexes refer generic parameter may omitted return first generic resolvabletype specified generic none hasgenerics getgenerics resolvegenericint resolvegenerics
return resolvabletype array specified componenttype componenttype component type resolvabletype array specified component type
convenience method getgenerics get resolve resolve generic parameters using specified fallback type cannot resolved fallback fallback class use resolution fails array resolved generic parameters getgenerics resolve
return array resolvabletype resolvabletypes representing generic parameters type generics available empty array returned need access specific generic consider using getgenericint method allows access nested generics protects indexoutofboundsexceptions array resolvabletype resolvabletypes representing generic parameters never null hasgenerics getgenericint resolvegenericint resolvegenerics
resolve type javalangclass returning null type cannot resolved method consider bounds typevariable typevariables wildcardtype wildcardtypes direct resolution fails however bounds objectclass ignored if method returns nonnull class hasgenerics returns false given type effectively wraps plain class allowing plain class processing desirable resolved class null resolvable resolveclass resolvegenericint resolvegenerics
return resolvabletype representing direct supertype type supertype available method returns none note resulting resolvabletype instance may serializable getinterfaces
adapts resolvabletype variableresolver
return resolvabletype specified method return type use variant class declares method includes generic parameter variables satisfied implementation class method source method return type implementationclass implementation class resolvabletype specified method return formethodreturntypemethod
get wildcardbounds instance specified type returning null specified type cannot resolved wildcardtype type source type wildcardbounds instance null
private constructor used create new resolvabletype uncached purposes upfront resolution lazily calculated hash
convenience method getgenerics get resolve resolve generic parameters array resolved generic parameters the resulting array never null may contain null elements getgenerics resolve
return resolvabletype specified class predeclared generics clazz class or interface introspect generics generics class resolvabletype specific class generics forclasswithgenericsclass resolvabletype
return resolvabletype specified field given implementation given nesting level use variant class declares field includes generic parameter variables satisfied implementation class field source field nestinglevel nesting level 1 outer level 2 nested generic type etc implementationclass implementation class resolvabletype specified field forfieldfield
determine whether underlying type unresolvable generics either unresolvable type variable type implementing generic interface raw fashion ie without substituting interfaces type variables result true two scenarios
return underlying source resolvable type return field methodparameter type depending resolvabletype constructed exception none constant method never return null method primarily provide access additional type information metadata alternative jvm languages may provide
return resolvabletype specified field field source field resolvabletype specified field forfieldfield class
return resolvabletype specified class assignability checks raw class analogous classisassignablefrom serves wrapper for example resolvabletypeforrawclasslistclass clazz class introspect null semantically equivalent objectclass typical use cases here resolvabletype specified class 42 forclassclass getrawclass
internal constructor create new wildcardbounds instance kind kind bounds bounds bounds getresolvabletype
determine whether underlying type represents wildcard without specific bounds ie equal extends object
return resolvabletype representing component type array none type represent array isarray
return resolvabletype specified constructor parameter given implementation use variant class declares constructor includes generic parameter variables satisfied implementation class constructor source constructor must null parameterindex parameter index implementationclass implementation class resolvabletype specified constructor parameter forconstructorparameterconstructor int
return resolvabletype array representing direct interfaces implemented type type implement interfaces empty array returned note resulting resolvabletype instances may serializable getsupertype
private constructor used create new resolvabletype cache value purposes upfront resolution precalculated hash 42
return resolvabletype specified type backed given owner type note resulting resolvabletype instance may serializable type source type null owner owner type used resolve variables resolvabletype specified type owner fortypetype
resolve type single level returning resolved value none note returned resolvabletype used intermediary cannot serialized
return true bounds assignable specified types types types test true bounds assignable types
return resolvabletype specified class predeclared generics clazz class or interface introspect generics generics class resolvabletype specific class generics forclasswithgenericsclass class
return resolvabletype specified type backed given variableresolver type source type null typeprovider type provider null variableresolver variable resolver null resolvabletype specified type variableresolver
return resolvabletype specified nesting level the nesting level refers specific generic parameter returned nesting level 1 indicates type 2 indicates first nested generic 3 second on example given list level 1 refers list level 2 set level 3 integer the typeindexesperlevel map used reference specific generic given level example index 0 would refer map key whereas 1 would refer value map contain value specific level last generic used eg map value nesting levels may also apply array types example given string nesting level 2 refers string if type hasgenerics contain generics getsupertype supertype hierarchy considered nestinglevel required nesting level indexed 1 current type 2 first nested generic 3 second typeindexesperlevel map containing generic index given nesting level may null resolvabletype nested level none
determine whether underlying type type variable cannot resolved associated variable resolver
retrieve specific cause given exception is either innermost cause root cause exception itself differs getrootcause falls back original exception root cause original original exception introspect specific cause never null 439
build message given base message root cause message base message cause root cause full exception message
retrieve innermost cause given exception any original original exception introspect innermost exception null none 439
constructor adapter functions convert target reactive async type reactive streams publisher descriptor reactive type descriptor topublisherfunction adapter publisher frompublisherfunction adapter publisher
adapt given instance reactive streams publisher source source object adapt from given object null reactivetypedescriptorgetemptyvalue used publisher representing adaptation
return full version string present spring codebase null cannot determined packagegetimplementationversion
return detail message including message nested exception one
inspects target class exceptions logged maker map returned indicate lack debug information
create new overridingclassloader given classloader parent classloader build overriding classloader overridedelegate classloader delegate overriding 43
load defining bytes given class turned class object defineclass call the default implementation delegates openstreamforclass transformifnecessary name name class byte content with transformers already applied null class defined name classnotfoundexception class given name couldnt loaded
load specified class overriding purposes classloader the default implementation delegates findloadedclass loadbytesforclass defineclass name name class class object null class defined name classnotfoundexception class given name couldnt loaded
open inputstream specified class the default implementation loads standard class file parent classloaders getresourceasstream method name name class inputstream containing byte code specified class
create new namedthreadlocal given name name descriptive name threadlocal
add class name exclude decoration eg overriding any class name registered handled parent classloader usual fashion classname class name exclude
add package name exclude decoration eg overriding any class whose fullyqualified name starts name registered handled parent classloader usual fashion packagename package name exclude
determine whether specified class excluded decoration class loader the default implementation checks excluded packages classes classname class name check whether specified class eligible excludepackage excludeclass
returns true type signature supplied methodgetgenericparametertypes generic method concrete method equal resolving types declaringtype otherwise returns false
compare signatures bridge method method bridges parameter return types same visibility bridge method introduced java 6 fix httpbugssuncomviewbugdobugid6342411 see also httpstasblogspotblogspotcom201003javabridgemethodsexplainedhtml whether signatures match described
determines whether bridge method bridge supplied candidate method
find original method supplied method bridge method it safe call method passing nonbridge method instance case supplied method instance returned directly caller callers not required check bridging calling method bridgemethod method introspect original method either bridged method passedin method specific one could found
returns true supplied candidatemethod consider validate candidate method methodisbridge bridged supplied method bridge method method performs inexpensive checks used quickly filter set possible matches
supplied class declared method whose signature matches supplied method matching method returned otherwise null returned
searches generic method declaration whose erased signature matches supplied bridge method illegalstateexception generic declaration cannot found
searches bridged method given candidates candidatemethods list candidate methods bridgemethod bridge method bridged method null none found
select methods given target type based filter callers define methods interest methodfilter parameter targettype target type search methods methodfilter methodfilter help recognize handler methods interest selected methods empty set case match
select invocable method target type either given method actually exposed target type otherwise corresponding method one target types interfaces target type itself matches userdeclared interfaces preferred since likely contain relevant metadata corresponds method target class method method check targettype target type search methods typically interfacebased jdk proxy corresponding invocable method target type illegalstateexception given method invocable given target type typically due proxy mismatch
select methods given target type based lookup associated metadata callers define methods interest metadatalookup parameter allowing collect associated metadata result map targettype target type search methods metadatalookup metadatalookup callback inspect methods interest returning nonnull metadata associated given method match null match selected methods associated metadata in order retrieval empty map case match
copy attributes supplied attributeaccessor accessor source attributeaccessor copy
create new exceptiondepthcomparator given exception exception target exception compare sorting depth
obtain closest match given exception types given target exception exceptiontypes collection exception types targetexception target exception find match closest matching exception type given collection
create new exceptiondepthcomparator given exception type exceptiontype target exception type compare sorting depth
return serializable variant fieldgetgenerictype
return serializable type backed typeprovider if type artifacts generally serializable current runtime environment delegate simply return original type asis
unwrap given type effectively returning original nonserializable type type type unwrap original nonserializable type
return serializable variant methodparametergetgenericparametertype
return source type null known the default implementations returns null
check whether exception contains exception given type either given class contains nested cause given type extype exception type look whether nested exception specified type
retrieve innermost cause exception any innermost exception null none
retrieve specific cause exception is either innermost cause root cause exception itself differs getrootcause falls back present exception root cause specific cause never null 203
return detail message including message nested exception one
create new namedinheritablethreadlocal given name name descriptive name threadlocal
get adapter given reactive type source object provided actual type used instead reactivetype reactive type may null concrete source object given source instance reactive type ie adapt from may null reactive type specified
register reactive type along functions adapt reactive streams publisher functions assume input never null optional
return shared default reactiveadapterregistry instance lazily building needed note highly recommend passing longlived preconfigured reactiveadapterregistry instance customization purposes accessor meant fallback code paths want fall back default instance one isnt provided shared reactiveadapterregistry instance never null 502
get adapter given reactive type
create registry autoregister default adapters getsharedinstance
look given value within given group constants will return first match value constant value look nameprefix prefix constant names search may null name constant field constantexception value wasnt found
parse given string upper lower case accepted return appropriate value its name constant field class were analysing code name field never null object value constantexception theres field
return names given group constants note method assumes constants named accordance standard java convention constant values ie uppercase supplied namesuffix uppercased in localeinsensitive fashion prior main logic method kicking in namesuffix suffix constant names search may null set constant names
return constant value cast number code name field never null number value constantexception field name wasnt found type wasnt compatible number asobject
return values given group constants note method assumes constants named accordance standard java convention constant values ie uppercase supplied namesuffix uppercased in localeinsensitive fashion prior main logic method kicking in namesuffix suffix constant names search may null set values
convert given bean property name constant name prefix uses common naming idiom turning lower case characters upper case prepending upper case characters underscore example imagesize imagesize example imagesize imagesize example imagesize imagesize example imagesize imagesize propertyname name bean property corresponding constant name prefix getvaluesforproperty tocodeforproperty
create new constants converter class wrapping given class all public static final variables exposed whatever type clazz class analyze illegalargumentexception supplied clazz null
look given value within given group constants will return first match value constant value look namesuffix suffix constant names search may null name constant field constantexception value wasnt found
return names given group constants note method assumes constants named accordance standard java convention constant values ie uppercase supplied nameprefix uppercased in localeinsensitive fashion prior main logic method kicking in nameprefix prefix constant names search may null set constant names
return values given group constants note method assumes constants named accordance standard java convention constant values ie uppercase supplied nameprefix uppercased in localeinsensitive fashion prior main logic method kicking in nameprefix prefix constant names search may null set values
retrieve property value given key checking local spring properties first falling back jvmlevel system properties key property key associated property value null none found
programmatically set local property overriding entry springproperties file if any key property key value associated property value null reset
resolve given class name fallback class loader the default implementation simply rethrows original exception since fallback available classname class name resolve ex original exception thrown attempting load class newly resolved class never null
create new configurableobjectinputstream given inputstream classloader inputstream read classloader classloader use loading local classes acceptproxyclasses whether accept deserialization proxy classes may deactivated security measure javaioobjectinputstreamobjectinputstreamjavaioinputstream
return fallback classloader use classloader specified objectinputstreams default class loader failed the default implementation simply returns null indicating specific fallback available
check whether given name points back given alias alias direction already catching circular reference upfront throwing corresponding illegalstateexception name candidate name alias candidate alias registeralias hasalias
determine whether given name given alias registered name name check alias alias look 421
determine raw name resolving aliases canonical names name userspecified name transformed name
resolve alias target names aliases registered factory applying given stringvalueresolver them the value resolver may example resolve placeholders target bean names even alias names valueresolver stringvalueresolver apply
transitively retrieve aliases given name name target name find aliases result resulting aliases list
build parameterizedtypereference wrapping given type type generic type possibly obtained via reflection eg javalangreflectmethodgetgenericreturntype corresponding reference may passed parameterizedtypereferenceaccepting methods 4312
create new instance resourceeditor class using given resourceloader resourceloader resourceloader use propertyresolver propertyresolver use ignoreunresolvableplaceholders whether ignore unresolvable placeholders corresponding property could found given propertyresolver
resolve given path replacing placeholders corresponding property values environment necessary path original file path resolved file path propertyresolverresolveplaceholders propertyresolverresolverequiredplaceholders
create new classrelativeresourceloader given class clazz class load resources
implementation returns hash code underlying inputstream
implementation always returns true
implementation always returns true
implementation throws illegalstateexception attempting read underlying stream multiple times
create new inputstreamresource inputstream inputstream use description inputstream comes
implementation compares underlying inputstream
implementation returns description includes passedin description any
create new filesystemresource file path note building relative resources via createrelative makes difference whether specified resource base path ends slash not case cdir1 relative paths built underneath root eg relative path dir2 cdir1dir2 case cdir1 relative paths apply directory level relative path dir2 cdir2 path file path filesystemresourcepath
implementation compares underlying file references
implementation opens filechannel underlying file javaniochannelsfilechannel
create new filesystemresource file handle note building relative resources via createrelative relative path apply at directory level eg new filecdir1 relative path dir2 cdir2 prefer relative paths built underneath given root directory use filesystemresourcestring constructor file path append trailing slash root path cdir1 indicates directory root relative paths file file handle filesystemresourcepath getfile
implementation returns description includes absolute path file javaiofilegetabsolutepath
create new filesystemresource path handle performing file system interactions via nio2 instead file in contrast pathresource variant strictly follows general filesystemresource conventions particular terms path cleaning createrelativestring handling filepath path handle file 51 filesystemresourcefile
implementation always indicates file
implementation returns underlying filepath lastmodified time
create new filesystemresource filesystem handle locating specified path this alternative filesystemresourcestring performing file system interactions via nio2 instead file filesystem filesystem locate path within path file path 511 filesystemresourcefile
implementation checks whether underlying file marked writable and corresponds actual file content directory javaiofilecanwrite javaiofileisdirectory
implementation returns underlying filepath length
implementation opens fileoutputstream underlying file javaiofileoutputstream
implementation checks whether underlying file marked readable and corresponds actual file content directory javaiofilecanread javaiofileisdirectory
implementation returns underlying file reference
implementation returns name file javaiofilegetname
implementation opens nio file stream underlying file javaiofileinputstream
implementation creates filesystemresource applying given path relative path underlying file resource descriptor orgspringframeworkutilstringutilsapplyrelativepathstring string
implementation returns uri underlying file javaiofiletouri
implementation returns hash code underlying file reference
implementation returns whether underlying file exists javaiofileexists
implementation returns url underlying file javaiofiletouri
implementation opens filechannel underlying file javaniochannelsfilechannel
resolve resource paths file system paths note even given path starts slash get interpreted relative current vm working directory path path resource corresponding resource handle filesystemresource orgspringframeworkwebcontextsupportservletcontextresourceloadergetresourcebypath
create new classpathresource classloader usage leading slash removed classloader resource access methods accept it path absolute path within classpath classloader class loader load resource with null thread context class loader classloadergetresourceasstreamstring
implementation returns name file class path resource refers to orgspringframeworkutilstringutilsgetfilenamestring
implementation checks resolution resource url javalangclassloadergetresourcestring javalangclassgetresourcestring
implementation creates classpathresource applying given path relative path underlying resource descriptor orgspringframeworkutilstringutilsapplyrelativepathstring string
implementation compares underlying class path locations
implementation returns url underlying class path resource available javalangclassloadergetresourcestring javalangclassgetresourcestring
implementation opens inputstream given class path resource javalangclassloadergetresourceasstreamstring javalangclassgetresourceasstreamstring
implementation returns hash code underlying class path location
create new classpathresource class usage path relative given class absolute within classpath via leading slash path relative absolute path within class path clazz class load resources javalangclassgetresourceasstream
implementation returns description includes class path location
resolves url underlying class path resource resolved url null resolvable
create new classpathresource optional classloader class internal usage path relative absolute path within classpath classloader class loader load resource with clazz class load resources with 4313 favor selective use classpathresourcestring classloader vs classpathresourcestring class
return classloader resource obtained from
create new vfsresource wrapping given resource handle resource orgjbossvfsvirtualfile instance untyped order avoid static dependency vfs api
implementation returns bytearrayinputstream underlying byte array javaiobytearrayinputstream
implementation compares underlying byte array javautilarraysequalsbyte byte
create new bytearrayresource description bytearray byte array wrap description byte array comes
implementation returns hash code based underlying byte array
implementation returns description includes passedin description any
implementation returns length underlying byte array
implementation always returns true
implementation returns file reference given uriidentified resource provided refers file file system 50 getfileuri
implementation returns file reference given uriidentified resource provided refers file file system orgspringframeworkutilresourceutilsgetfilejavaneturi string
implementation returns file reference underlying class path resource provided refers file file system orgspringframeworkutilresourceutilsgetfilejavaneturl string
customize given urlconnection obtained course exists contentlength lastmodified call calls resourceutilsusecachesifnecessaryurlconnection delegates customizeconnectionhttpurlconnection possible overridden subclasses con urlconnection customize ioexception thrown urlconnection methods
implementation determines underlying file or jar file case resource jarzip
implementation returns filechannel given uriidentified resource provided refers file file system 50 getfile
implementation returns description resource getdescription
implementation returns channelsnewchannelinputstream result getinputstream this resources corresponding default method mirrored efficient jvmlevel dispatching class hierarchy
implementation always returns true resource exists exists revised 51
implementation throws filenotfoundexception assuming relative resources cannot created resource
implementation throws filenotfoundexception assuming resource cannot resolved absolute file path
implementation builds uri based url returned geturl
implementation checks timestamp underlying file available getfileforlastmodifiedcheck
implementation always returns false
implementation returns descriptions hash code getdescription
implementation throws filenotfoundexception assuming resource cannot resolved url
implementation compares description strings getdescription
implementation always returns null assuming resource type filename
implementation checks whether file opened falling back whether inputstream opened cover directories content resources
implementation reads entire inputstream calculate content length subclasses almost always able provide optimal version this eg checking file length getinputstream
implementation always returns false
implementation compares underlying description string
implementation returns hash code underlying description string
implementation compares underlying url references
implementation opens inputstream given url it sets usecaches flag false mainly avoid jar file locking windows javaneturlopenconnection javaneturlconnectionsetusecachesboolean javaneturlconnectiongetinputstream
implementation returns file reference underlying urluri provided refers file file system orgspringframeworkutilresourceutilsgetfilejavaneturl string
implementation returns hash code underlying url reference
create new urlresource based uri specification the given parts automatically get encoded necessary protocol url protocol use eg jar file without colon also known scheme location location eg file path within protocol also known schemespecific part fragment fragment within location eg anchor html page following separator malformedurlexception given url specification valid javaneturiuristring string string
implementation returns description includes url
implementation returns name file url refers to javaneturlgetpath
implementation returns underlying uri directly possible
create new urlresource based given uri object uri uri malformedurlexception given url path valid 25
implementation returns underlying url reference
create new urlresource based given url object url url
implementation creates urlresource applying given path relative path underlying url resource descriptor javaneturlurljavaneturl string
create new urlresource based url path note given path needs preencoded necessary path url path malformedurlexception given url path valid javaneturlurlstring
determine cleaned url given original url originalurl original url originalpath original url path cleaned url possibly original url asis orgspringframeworkutilstringutilscleanpath
implementation compares underlying path references
implementation returns uri underlying file javaniofilepathtouri
implementation returns whether underlying file exists javaniofilefilesexistspath javaniofilelinkoption
implementation opens channel underlying file filesnewbytechannelpath openoption
create new pathresource path handle note unlike filesystemresource building relative resources via createrelative relative path built underneath given root eg pathsgetcdir1 relative path dir2 cdir1dir2 path path handle
implementation returns url underlying file javaniofilepathtouri javaneturitourl
implementation checks whether underlying file marked writable and corresponds actual file content directory javaniofilefilesiswritablepath javaniofilefilesisdirectorypath javaniofilelinkoption
implementation returns underlying file reference
implementation creates pathresource applying given path relative path underlying file resource descriptor javaniofilepathresolvestring
implementation returns underlying files length
create new pathresource path handle note unlike filesystemresource building relative resources via createrelative relative path built underneath given root eg pathsgetcdir1 relative path dir2 cdir1dir2 path path javaniofilepathsgetstring string
implementation opens outputstream underlying file javaniofilespifilesystemprovidernewoutputstreampath openoption
implementation checks whether underlying file marked readable and corresponds actual file content directory javaniofilefilesisreadablepath javaniofilefilesisdirectorypath javaniofilelinkoption
implementation returns hash code underlying path reference
implementation returns underlying files timestamp javaniofilefilesgetlastmodifiedtimepath javaniofilelinkoption
implementation always indicates file
implementation returns name file javaniofilepathgetfilename
implementation opens channel underlying file filesnewbytechannelpath openoption
implementation opens inputstream underlying file javaniofilespifilesystemprovidernewinputstreampath openoption
create new pathresource path handle note unlike filesystemresource building relative resources via createrelative relative path built underneath given root eg pathsgetcdir1 relative path dir2 cdir1dir2 uri path uri javaniofilepathsgeturi
obtain cache given value type keyed resource valuetype value type eg asm metadatareader cache map shared resourceloader level 50
return classloader load class path resources with will get passed classpathresources constructor classpathresource objects created resource loader classpathresource
register given resolver resource loader allowing additional protocols handled any resolver invoked ahead loaders standard resolution rules may therefore also override default rules 43 getprotocolresolvers
create new localizedresourcehelper given resourceloader resourceloader resourceloader use
find specific localized resource given name extension locale the file searched locations following order similar javautilresourcebundles search order namelanguagecountryvariantextension namelanguagecountryextension namelanguageextension nameextension if none specific files found resource descriptor default location returned name name file without localization part extension extension file extension eg xls locale current locale may null specific localized resource found javautilresourcebundle
treat given text location pattern convert resource array
create new resourcearraypropertyeditor given resourcepatternresolver propertyresolver typically environment resourcepatternresolver resourcepatternresolver use propertyresolver propertyresolver use
create new resourcearraypropertyeditor given resourcepatternresolver propertyresolver typically environment resourcepatternresolver resourcepatternresolver use propertyresolver propertyresolver use ignoreunresolvableplaceholders whether ignore unresolvable placeholders corresponding system property could found
resolve given path replacing placeholders corresponding system property values necessary path original file path resolved file path propertyresolverresolveplaceholders propertyresolverresolverequiredplaceholdersstring
treat given value collection array convert resource array considers string elements location patterns takes resource elements asis
return encoding use reading plain getresource resource null none specified
return charset use reading plain getresource resource null none specified
open inputstream specified resource ignoring specified getcharset charset plain getencoding encoding ioexception opening inputstream failed requiresreader getreader
open javaioreader specified resource using specified getcharset charset plain getencoding encoding if any ioexception opening reader failed requiresreader getinputstream
return whether given resource location url either special classpath classpath pseudo url standard url resourcelocation location string check whether location qualifies url resourcepatternresolverclasspathallurlprefix orgspringframeworkutilresourceutilsclasspathurlprefix orgspringframeworkutilresourceutilsisurlstring javaneturl
return default resourcepatternresolver given resourceloader this might resourceloader itself implements resourcepatternresolver extension pathmatchingresourcepatternresolver built given resourceloader resourceloader resourceloader build pattern resolver may null indicate default resourceloader resourcepatternresolver pathmatchingresourcepatternresolver
load instantiate factory implementations given type value factoriesresourcelocation using given class loader the returned factories sorted annotationawareordercomparator if custom instantiation strategy required use loadfactorynames obtain registered factory names factoryclass interface abstract class representing factory classloader classloader use loading can null use default illegalargumentexception factory implementation class cannot loaded error occurs instantiating factory loadfactorynames
load fully qualified class names factory implementations given type value factoriesresourcelocation using given class loader factoryclass interface abstract class representing factory classloader classloader use loading resources null use default illegalargumentexception error occurs loading factory names loadfactories
fill given properties given resource in iso88591 encoding props properties instance fill resource resource load ioexception loading failed
load properties specified class path resource in iso88591 encoding using given class loader merges properties one resource name found class path resourcename name class path resource classloader classloader use loading or null use default class loader populated properties instance ioexception loading failed
fill given properties given encodedresource potentially defining specific encoding properties file props properties instance load resource resource load ioexception case io errors
load properties given resource in iso88591 encoding resource resource load populated properties instance ioexception loading failed fillpropertiesjavautilproperties resource
actually load properties given encodedresource given properties instance props properties instance load resource resource load persister propertiespersister use ioexception case io errors
load properties given encodedresource potentially defining specific encoding properties file fillpropertiesjavautilproperties encodedresource
create propertysource based properties loaded given resource name propertysource generated based resourcegetdescription description given resource
create propertysource based properties loaded given resource name propertysource generated based resourcegetdescription description given resource
create propertysource given name based properties loaded given encoded resource
create propertysource given name based properties loaded given encoded resource
return potentially adapted variant resourcepropertysource overriding previously given name if any original resource name equivalent name generated nameless constructor variants 41
return potentially adapted variant resourcepropertysource overriding previously given or derived name specified name 404
return description given resource description empty return class name resource plus identity hash code orgspringframeworkcoreioresourcegetdescription
return merged properties instance containing loaded properties properties set factorybean
set propertiespersister use parsing properties files default defaultpropertiespersister orgspringframeworkutildefaultpropertiespersister
load properties given instance props properties instance load ioexception case io errors setlocations
create new resourceregion given resource region resource represented start position byte count within given resource resource resource position start position region resource count byte count region resource
check whether given file path duplicate differently structured entry existing result ie without leading slash filepath file path with without leading slash result current result true duplicate ie ignore given file path false proceed adding corresponding resource current result
set pathmatcher implementation use resource pattern resolver default antpathmatcher orgspringframeworkutilantpathmatcher
determine sorted list files given directory dir directory introspect sorted list files by default alphabetical order 51 filelistfiles
find class location resources given location via classloader delegates dofindallclasspathresourcesstring location absolute path within classpath result resource array ioexception case io errors javalangclassloadergetresources convertclassloaderurl
create new pathmatchingresourcepatternresolver classloader access happen via thread context class loader resourceloader resourceloader load root directories actual resources
find resources file system match given location pattern via antstyle pathmatcher rootdirresource root directory resource subpattern sub pattern match below root directory mutable set matching resource instances ioexception case io errors retrievematchingfiles orgspringframeworkutilpathmatcher
resolve given jar file url jarfile object
find class location resources given path via classloader called findallclasspathresourcesstring path absolute path within classpath never leading slash mutable set matching resource instances 411
retrieve files match given path pattern checking given directory subdirectories rootdir directory start pattern pattern match against relative root directory mutable set matching resource instances ioexception directory contents could retrieved
find resources jar files match given location pattern via antstyle pathmatcher rootdirresource root directory resource rootdirurl preresolved root directory url subpattern sub pattern match below root directory mutable set matching resource instances ioexception case io errors 43 javanetjarurlconnection orgspringframeworkutilpathmatcher
find resources file system match given location pattern via antstyle pathmatcher rootdir root directory file system subpattern sub pattern match below root directory mutable set matching resource instances ioexception case io errors retrievematchingfiles orgspringframeworkutilpathmatcher
determine jar file references javaclasspath manifest property add given set resources form pointers root jar file content result set resources add jar roots 43
search urlclassloader urls jar file references add given set resources form pointers root jar file content classloader classloader search including ancestors result set resources add jar roots 411
find resources match given location pattern via antstyle pathmatcher supports resources jar files zip files file system locationpattern location pattern match result resource array ioexception case io errors dofindpathmatchingjarresources dofindpathmatchingfileresources orgspringframeworkutilpathmatcher
determine root directory given location used determining starting point file matching resolving root directory location javaiofile passing retrievematchingfiles remainder location pattern will return webinf pattern webinfxml example location location check part location denotes root directory retrievematchingfiles
recursively retrieve files match given pattern adding given result list fullpattern pattern match against prepended root directory path dir current directory result set matching file instances add ioexception directory contents could retrieved
write given charsequence using given charset starting current writing position charsequence char sequence write buffer charset charset encode char sequence buffer 514
creates new defaultdatabufferfactory indicating whether direct buffers created allocatebuffer allocatebufferint capacity used allocatebuffer preferdirect true direct buffers preferred false otherwise
this implementation creates single defaultdatabuffer contain data databuffers
create new nettydatabuffer based given bytebuff bytebuf buffer base buffer
writes one netty bytebuf bytebufs buffer starting current writing position bytebufs buffers write buffer buffer
calculate capacity buffer ionettybufferabstractbytebufallocatorcalculatenewcapacityint int
relay buffers given publisher total plain databufferreadablebytecount byte count reaches given maximum byte count publisher complete publisher publisher filter maxbytecount maximum byte count flux whose maximum byte count maxbytecount
write given stream databuffer databuffers given outputstream not close output stream flux terminated not plain releasedatabuffer release data buffers source releasing required subscribe returned flux releaseconsumer note writing process start returned flux subscribed to source stream data buffers written outputstream output stream write flux containing buffers source starts writing process subscribed to publishes writing errors completion signal
read given resource flux databuffers starting given position if resource file read asynchronousfilechannel turned flux via readasynchronousfilechannelcallable databufferfactory int else fall back readbytechannelcallable databufferfactory int closes channel flux terminated resource resource read position position start reading databufferfactory factory create data buffers buffersize maximum size data buffers flux data buffers read given channel
write given stream databuffer databuffers given writablebytechannel not close channel flux terminated not plain releasedatabuffer release data buffers source releasing required subscribe returned flux releaseconsumer note writing process start returned flux subscribed to source stream data buffers written channel channel write flux containing buffers source starts writing process subscribed to publishes writing errors completion signal
return new databuffer composed joining together given databuffers elements depending databuffer type returned buffer may single buffer containing data provided buffers may zerocopy composite references given buffers if databuffers produces error cancel signal accumulated buffers plain releasedatabuffer released note given data buffers not released released part returned composite databuffers data buffers composed buffer composed databuffers argument 503
obtain asynchronousfilechannel given supplier read flux databuffers closes channel flux terminated channelsupplier supplier channel read databufferfactory factory create data buffers buffersize maximum size data buffers flux data buffers read given channel
obtain readablebytechannel given supplier read flux databuffers closes channel flux terminated channelsupplier supplier channel read databufferfactory factory create data buffers buffersize maximum size data buffers flux data buffers read given channel
obtain inputstream given supplier read flux databuffers closes input stream flux terminated inputstreamsupplier supplier input stream read databufferfactory factory create data buffers buffersize maximum size data buffers flux data buffers read given channel
skip buffers given publisher total plain databufferreadablebytecount byte count reaches given maximum byte count publisher complete publisher publisher filter maxbytecount maximum byte count flux remaining part given publisher
write given stream databuffer databuffers given asynchronousfilechannel not close channel flux terminated not plain releasedatabuffer release data buffers source releasing required subscribe returned flux releaseconsumer note writing process start returned flux subscribed to source stream data buffers written channel channel write position file position write begin must nonnegative flux containing buffers source starts writing process subscribed to publishes writing errors completion signal
obtain asynchronousfilechannel given supplier read flux databuffers starting given position closes channel flux terminated channelsupplier supplier channel read position position start reading databufferfactory factory create data buffers buffersize maximum size data buffers flux data buffers read given channel
read given resource flux databuffers if resource file read asynchronousfilechannel turned flux via readasynchronousfilechannelcallable databufferfactory int else fall back readbytechannelcallable databufferfactory int closes channel flux terminated resource resource read databufferfactory factory create data buffers buffersize maximum size data buffers flux data buffers read given channel
retain given data buffer pooleddatabuffer databuffer data buffer retain retained buffer
release given data buffer pooleddatabuffer plain pooleddatabufferisallocated allocated databuffer data buffer release true buffer released false otherwise
return given netty databuffer bytebuf returns plain nettydatabuffergetnativebuffer native buffer buffer nettydatabuffer returns unpooledwrappedbufferbytebuffer otherwise buffer databuffer return bytebuf netty bytebuf
this implementation uses nettys compositebytebuf
create new nettydatabufferfactory based given factory bytebufallocator factory use ionettybufferpooledbytebufallocator ionettybufferunpooledbytebufallocator
get property names option arguments
return list values associated given option null signifies option present empty list signifies values associated option
add option argument given option name add given value list values associated option of may zero more given value may null indicating option specified without associated value eg foo vs foobar
customize set property sources appropriate standard java environment value systempropertiespropertysourcename value systemenvironmentpropertysourcename properties present value systempropertiespropertysourcename take precedence value systemenvironmentpropertysourcename abstractenvironmentcustomizepropertysourcesmutablepropertysources getsystemproperties getsystemenvironment
returns value specified key mapped null map contains mapping key key name system attribute retrieve illegalargumentexception given key nonstring
parse given string array based rules described plain simplecommandlineargsparser above returning fullypopulated commandlineargs object args command line arguments typically main method
add given property source object highest precedence
remove return property source given name null found name name property source find remove
replace property source given name given property source object name name property source find replace propertysource replacement property source illegalargumentexception property source given name present contains
add given property source object lowest precedence
add given property source object precedence immediately lower named relative property source
add given property source object precedence immediately higher named relative property source
create new mutablepropertysources given propertysources object preserving original order contained propertysource objects
add given property source particular index list
assert named property source present return index name plain propertysourcegetname name property source find illegalargumentexception named property source present
ensure given property source added relative itself
implementation first checks see name specified special plain setnonoptionargspropertynamestring nonoption arguments property delegates abstract getnonoptionargs method checking see whether returns empty collection otherwise delegates returns value abstract containsoptionstring method
implementation first checks see name specified special plain setnonoptionargspropertynamestring nonoption arguments property delegates abstract getnonoptionargs method collection nonoption arguments empty method returns null empty returns commaseparated string nonoption arguments otherwise delegates returns result abstract getoptionvaluesstring method
add given propertysource start chain propertysource propertysource add 41
propertysource object equal given object if they instance the name properties objects equal no properties name evaluated
produce concise output type name current log level include debug debug enabled produce verbose output including hash code propertysource instance every namevalue property pair this variable verbosity useful property source system properties environment variables may contain arbitrary number property pairs potentially leading difficult read exception log messages logisdebugenabled
return hash code derived name property propertysource object
create new propertysource given name source object
create new propertysource given name new object instance underlying source often useful testing scenarios creating anonymous implementations never query actual source rather return hardcoded values
always returns null
log given key found given propertysource resulting given value the default implementation writes debug log message key source 433 log value anymore order avoid accidental logging sensitive settings subclasses may override method change log level andor log message including propertys value desired key key found propertysource propertysource key found value corresponding value 431
return set default profiles explicitly set via setdefaultprofilesstring current set default profiles consists plain getreserveddefaultprofiles reserved default profiles check presence value defaultprofilespropertyname property assign value if any set default profiles abstractenvironment getdefaultprofiles defaultprofilespropertyname getreserveddefaultprofiles
specify set profiles made active default profiles explicitly made active setactiveprofiles calling method removes overrides reserved default profiles may added construction environment abstractenvironment getreserveddefaultprofiles
return set active profiles explicitly set setactiveprofiles current set active profiles empty check presence value activeprofilespropertyname property assign value set active profiles getactiveprofiles activeprofilespropertyname
validate given profile called internally prior adding set active default profiles subclasses may override impose restrictions profile syntax illegalargumentexception profile null empty whitespaceonly begins profile operator acceptsprofiles addactiveprofile setdefaultprofiles
return whether given profile active active profiles empty whether profile active default illegalargumentexception per validateprofilestring
set suffix placeholders replaced resolver must end with the default orgspringframeworkutilsystempropertyutilsplaceholdersuffix
set prefix placeholders replaced resolver must begin with the default orgspringframeworkutilsystempropertyutilsplaceholderprefix
set whether throw exception encountering unresolvable placeholder nested within value given property false value indicates strict resolution ie exception thrown true value indicates unresolvable nested placeholders passed unresolved form the default false 32
convert given value specified target type necessary value original property value targettype specified target type property retrieval converted value original value conversion necessary 435
specify separating character placeholders replaced resolver associated default value null special character processed value separator the default orgspringframeworkutilsystempropertyutilsvalueseparator
resolve placeholders within given string deferring value setignoreunresolvablenestedplaceholders determine whether unresolvable placeholders raise exception ignored invoked getproperty variants implicitly resolving nested placeholders contrast resolveplaceholders resolverequiredplaceholders not delegate method rather perform handling unresolvable placeholders specified methods 32 setignoreunresolvablenestedplaceholders
return whether propertysource contains property given name this implementation checks presence given name within getpropertynames array name name property find
return true property given name underscoreuppercase variant thereof exists property source
implementation returns true property given name underscoreuppercase variant thereof exists property source
check see property source contains property given name underscore uppercase variation thereof return resolved name one found otherwise original name never returns null
format given value via tostring quoting charsequence possibly truncating 100 limitlength set true value value format limitlength whether truncate large formatted values over 100 formatted value
use log message different levels detail or different messages trace vs debug log levels effectively substitute for classcode loggerisdebugenabled string str loggeristraceenabled loggeristraceenabled loggertracestr else loggerdebugstr logger logger use log message messagefactory function accepts boolean set value logistraceenabled
create composite logger delegates primary falls back secondary logger logging primary logger enabled this may used fallback logging lower level packages logically log together higher level package two dont happen share suitable parent package eg logging web lower level http codec packages cases primary classbased logger wrapped shared fallback logger primarylogger primary logger try first secondarylogger secondary logger tertiaryloggers optionally fallback loggers resulting logger use
constructor list loggers optimal performance constructor checks remembers logger log category loggers loggers use
return source type requested convert from
create new conversion executor found exception sourcetype source type requested convert targettype target type requested convert
create new type descriptor given type use instruct conversion system convert object specific target type type location method parameter field available provide additional conversion context generally prefer use forobjectobject constructing type descriptors source objects handles null object case type class may null indicate objectclass corresponding type descriptor
type array returns arrays component type type stream returns streams component type type collection parameterized returns collections element type collection parameterized returns null indicating element type declared array component type collection element type null type collection element type parameterized illegalstateexception type javautilcollection array type
returns true object type descriptor assigned location described given type descriptor for example valueofstringclassisassignabletovalueofcharsequenceclass returns true string value assigned charsequence variable hand valueofnumberclassisassignabletovalueofintegerclass returns false because integers numbers numbers integers for arrays collections maps element keyvalue types checked declared example liststring field value assignable collectioncharsequence field listnumber assignable listinteger true type assignable type represented provided type descriptor getobjecttype
create new type descriptor methodparameter use constructor source target conversion point constructor parameter method parameter method return value methodparameter method parameter
create type descriptor nested type declared within method parameter for example methodparameter list nesting level 1 nested type descriptor stringclass if methodparameter list nesting level 2 nested type descriptor also stringclass if methodparameter map string nesting level 1 nested type descriptor string derived map value if methodparameter list string nesting level 2 nested type descriptor string derived map value returns null nested type cannot obtained declared example method parameter list nested type descriptor returned null methodparameter method parameter nestinglevel 1 nestinglevel nesting level collectionarray element map keyvalue declaration within method parameter nested type descriptor specified nesting level null could obtained illegalargumentexception nesting level input methodparameter argument 1 types specified nesting level collection array map types
create new type descriptor javautilcollection type useful converting typed collections for example list could converted list converting targettype built method method call construct typedescriptor would look something like collectionlistclass typedescriptorvalueofemailaddressclass collectiontype collection type must implement collection elementtypedescriptor descriptor collections element type used convert collection elements collection type descriptor
type map value type parameterized returns maps value type if maps value type parameterized returns null indicating value type declared map value type null type map value type parameterized illegalstateexception type javautilmap
type map creates mapkey typedescriptor provided map key narrows getmapkeytypedescriptor mapkeytype property class provided map key example describes javautilmapjavalangnumber javalangstring key argument javalanginteger returned typedescriptor javalanginteger describes javautilmap key argument javalanginteger returned typedescriptor javalanginteger well annotation nested type context preserved narrowed typedescriptor returned mapkey map key map key type descriptor illegalstateexception type javautilmap narrowobject
create new type descriptor resolvabletype this constructor used internally may also used subclasses support nonjava languages extended type systems public 514 whereas protected before resolvabletype resolvable type type backing type or null get resolved annotations type annotations 40
create type descriptor nested type declared within field for example field list nesting level 1 nested type descriptor stringclass if field list nesting level 2 nested type descriptor also stringclass if field map string nesting level 1 nested type descriptor string derived map value if field list string nesting level 2 nested type descriptor string derived map value returns null nested type cannot obtained declared example field list nested type descriptor returned null field field nestinglevel nesting level collectionarray element map keyvalue declaration within field nested type descriptor specified nesting level null could obtained illegalargumentexception types specified nesting level collection array map types
type map creates mapvalue typedescriptor provided map value narrows getmapvaluetypedescriptor mapvaluetype property class provided map value example describes javautilmapjavalangstring javalangnumber value argument javalanginteger returned typedescriptor javalanginteger describes javautilmap value argument javalanginteger returned typedescriptor javalanginteger well annotation nested type context preserved narrowed typedescriptor returned mapvalue map value map value type descriptor illegalstateexception type javautilmap narrowobject
obtain annotation specified annotationtype type descriptor as spring framework 42 method supports arbitrary levels metaannotations annotationtype annotation type annotation null annotation exists type descriptor
create new type descriptor javautilmap type useful converting typed maps for example mapstring string could converted mapid emailaddress converting targettype built method method call construct typedescriptor would look something like classcode mapmapclass typedescriptorvalueofidclass typedescriptorvalueofemailaddressclass maptype map type must implement map keytypedescriptor descriptor maps key type used convert map keys valuetypedescriptor maps value type used convert map values map type descriptor
type map key type parameterized returns maps key type maps key type parameterized returns null indicating key type declared map key type null type map key type parameterized illegalstateexception type javautilmap
narrows typedescriptor setting type class provided value if value null narrowing performed typedescriptor returned unchanged designed called binding frameworks read property field method return values allows frameworks narrow typedescriptor built declared property field method return value type example field declared javalangobject would narrowed javautilhashmap set javautilhashmap value narrowed typedescriptor used convert hashmap type annotation nested type context preserved narrowed copy value value use narrowing type descriptor typedescriptor narrowed returns copy type updated class provided value
create new type descriptor field use constructor source target conversion point field field field
determine type descriptor specified annotation as spring framework 42 method supports arbitrary levels metaannotations annotationtype annotation type true annotation present
create new type descriptor property use constructor source target conversion point property java class property property
create type descriptor nested type declared within property for example property list nesting level 1 nested type descriptor stringclass if property list nesting level 2 nested type descriptor also stringclass if property map string nesting level 1 nested type descriptor string derived map value if property list string nesting level 2 nested type descriptor string derived map value returns null nested type cannot obtained declared example property list nested type descriptor returned null property property nestinglevel nesting level collectionarray element map keyvalue declaration within property nested type descriptor specified nesting level null could obtained illegalargumentexception types specified nesting level collection array map types
cast typedescriptor superclass implemented interface preserving annotations nested type context supertype super type cast can null new typedescriptor upcast type illegalargumentexception type assignable supertype 32
create new type descriptor object use factory method introspect source object asking conversion system convert another type if provided object null returns null else calls valueofclass build typedescriptor objects class source source object type descriptor
create new type descriptor array specified type for example create map use classcode typedescriptorarraytypedescriptormapmapclass typedescriptorvaluestringclass typedescriptorvaluestringclass elementtypedescriptor typedescriptor array element null array typedescriptor null elementtypedescriptor null 321
type collection array creates element typedescriptor provided collection array element narrows getelementtypedescriptor elementtype property class provided collection array element example describes javautillistjavalangnumber element argument javalanginteger returned typedescriptor javalanginteger describes javautillist element argument javalanginteger returned typedescriptor javalanginteger well annotation nested type context preserved narrowed typedescriptor returned element collection array element element type descriptor narrowed type provided element illegalstateexception type javautilcollection array type narrowobject
property getter method eg getfoo
property setter method eg setfoostring
return offending value
return source type tried convert value from
create new conversion exception sourcetype values original type targettype values target type value value tried convert cause cause conversion failure
add common collection converters converterregistry registry converters add must also castable conversionservice eg configurableconversionservice classcastexception given converterregistry could cast conversionservice 423
return shared default conversionservice instance lazily building needed note highly recommend constructing individual conversionservice instances customization purposes accessor meant fallback code paths need simple type coercion cannot access longerlived conversionservice instance way shared conversionservice instance never null 435
add converters appropriate environments converterregistry registry converters add must also castable conversionservice eg configurableconversionservice classcastexception given converterregistry could cast conversionservice
returns ordered class hierarchy given type type type ordered list classes given type extends implements
find genericconverter given source target type this method attempt match possible converters working class interface hierarchy types sourcetype source type targettype target type matching genericconverter null none found
return whether conversion source type target type bypassed more precisely method return true objects sourcetype converted target type returning source object unchanged sourcetype context source type convert may null source null targettype context target type convert required true conversion bypassed false otherwise illegalargumentexception targettype null 32
template method convert null source the default implementation returns null java 8 javautiloptionalempty instance target type javautiloptional subclasses may override return custom null objects specific target types sourcetype source type convert targettype target type convert converted null object
convenience operation converting source object specified targettype target type descriptor provides additional conversion context simply delegates convertobject typedescriptor typedescriptor encapsulates construction source type descriptor using typedescriptorforobjectobject source source object targettype target type converted value conversionexception conversion exception occurred illegalargumentexception targettype null sourcetype null source null
return default converter converter found given sourcetypetargettype pair returns noop converter source type assignable target type returns null otherwise indicating suitable converter could found sourcetype source type convert targettype target type convert default generic converter perform conversion
hook method lookup converter given sourcetypetargettype pair first queries conversionservices converter cache cache miss performs exhaustive search matching converter converter matches returns default converter sourcetype source type convert targettype target type convert generic converter perform conversion null suitable converter found getdefaultconvertertypedescriptor typedescriptor
validate specified sourcetype converted collection type stream elements elementtype type stream elements sourcetype type convert
validate collection elements held within stream converted specified targettype elementtype type stream elements targettype type convert
create new convertingpropertyeditoradapter given orgspringframeworkcoreconvertconversionservice given target type conversionservice conversionservice delegate targetdescriptor target type convert
register given converter objects given target converterregistry converters converter objects implementing converter converterfactory genericconverter registry target registry
create new convertingcomparator instance comparator underlying comparator used compare converted values converter converter
create new convertingcomparator instance comparator underlying comparator conversionservice conversion service targettype target type
create new sourcetotarget pair sourcetype source type targettype target type
read supplied inputstream deserialize contents object objectinputstreamreadobject
writes source object output stream using java serialization source object must implement serializable objectoutputstreamwriteobjectobject
create serializingconverter delegates provided serializer
serializes source object returns byte array result
create deserializingconverter delegates provided deserializer
create serializationdelegate default serializerdeserializer given classloader defaultdeserializer defaultdeserializerdefaultdeserializerclassloader
create serializationdelegate given serializerdeserializer serializer serializer use never null deserializer deserializer use never null
create new standardmethodmetadata wrapper given method providing option return nested annotations annotation arrays form orgspringframeworkcoreannotationannotationattributes instead actual javalangannotationannotation instances introspectedmethod method introspect nestedannotationsasmap return nested annotations annotation arrays orgspringframeworkcoreannotationannotationattributes compatibility asmbased annotationmetadata implementations 311
create new standardannotationmetadata wrapper given class providing option return nested annotations annotation arrays form orgspringframeworkcoreannotationannotationattributes instead actual annotation instances introspectedclass class introspect nestedannotationsasmap return nested annotations annotation arrays orgspringframeworkcoreannotationannotationattributes compatibility asmbased annotationmetadata implementations 311
create new standardclassmetadata wrapper given class introspectedclass class introspect
retrieve merged attributes annotation given type any supplied attributesmap annotation attribute values appearing lower annotation hierarchy ie closer declaring class override defined higher annotation hierarchy attributesmap map annotation attribute lists keyed annotation type name metaannotationmap map meta annotation relationships keyed annotation type name annotationname fully qualified class name annotation type look merged annotation attributes null matching annotation present attributesmap 403
create new simplemetadatareaderfactory given class loader classloader classloader use
create new cachingmetadatareaderfactory given classloader using local resource cache classloader classloader use
specify maximum number entries metadatareader cache default 256 local cache whereas shared cache typically unbounded method enforces local resource cache even resourceloader supports shared resource cache
create new cachingmetadatareaderfactory default class loader using local resource cache
return maximum number entries metadatareader cache
create new cachingmetadatareaderfactory given resourceloader using shared resource cache supported local resource cache otherwise resourceloader spring resourceloader use also determines classloader use defaultresourceloadergetresourcecache
clear local metadatareader cache any removing cached class metadata
override match super type name
override match interface type name
create new annotationtypefilter given annotation type annotationtype annotation type match considermetaannotations whether also match metaannotations considerinterfaces whether also match interfaces
create new assignabletypefilter given type targettype type match
create new defaulttostringstyler valuestyler valuestyler use
create tostringcreator given object using provided style obj object stringified styler tostringstyler encapsulating prettyprint instructions
return string representation tostringcreator built
append provided value value value append this support callchaining
append field value fieldname name field usually member variable name value field value this support callchaining
create stringdecoder supports mime types delimiters delimiter strings use split input stream stripdelimiter whether remove delimiters resulting input strings
find given delimiter given data buffer index delimiter 1 found
create stringdecoder textplain ignored ignored spring 504 favor textplainonly textplainonlylist boolean
join given list buffers single buffer
split given data buffer delimiter boundaries returned flux contains endframe buffer delimiter
create stringdecoder supports mime types ignored ignored spring 504 favor allmimetypes allmimetypeslist boolean
determine possible contentlength given resource without reading it resource resource instance contentlength resource
merge two maps hints creating copying new map values returning nonempty map empty map empty hints1 1st map hints hints2 2nd map hints single map hints
obtain value required hint hints hints map hintname required hint name hint type cast hint value illegalargumentexception hint found
merge single hint map hints possibly creating copying hints new map otherwise map hints empty creating new single entry map hints map hints merge hintname hint name merge hintvalue hint value merge single map hints
perform search algorithm searchwithgetsemantics method avoiding endless recursion tracking annotated elements already visited the metadepth parameter explained processorprocess process method processor api element annotated element annotationtypes annotation types find annotationname fully qualified class name annotation type find as alternative annotationtype containertype type container holds repeatable annotations null annotation repeatable processor processor delegate visited set annotated elements already visited metadepth metadepth annotation result processor potentially null
search annotations specified annotationname annotationtype specified element following find semantics element annotated element annotationtypes annotation types find annotationname fully qualified class name annotation type find as alternative annotationtype containertype type container holds repeatable annotations null annotation repeatable processor processor delegate result processor potentially null 43
get first annotation specified annotationname within annotation hierarchy above supplied element merge annotations attributes matching attributes annotations lower levels annotation hierarchy aliasfor aliasfor semantics fully supported within single annotation within annotation hierarchy this method delegates getmergedannotationattributesannotatedelement string boolean boolean supplying false classvaluesasstring nestedannotationsasmap element annotated element annotationname fully qualified class name annotation type find merged annotationattributes null found 42 getmergedannotationattributesannotatedelement string boolean boolean findmergedannotationattributesannotatedelement string boolean boolean findmergedannotationannotatedelement class getallannotationattributesannotatedelement string
build adapted annotatedelement given annotations typically use methods annotatedelementutils annotations annotations expose annotatedelement 43
get annotation attributes all annotations specified annotationname annotation hierarchy supplied annotatedelement store results multivaluemap note contrast getmergedannotationattributesannotatedelement string method not support attribute overrides this method follows get semantics described plain annotatedelementutils classlevel javadoc element annotated element annotationname fully qualified class name annotation type find multivaluemap keyed attribute name containing annotation attributes annotations found null found getallannotationattributesannotatedelement string boolean boolean
get first annotation specified annotationtype within annotation hierarchy above supplied element merge annotations attributes matching attributes annotations lower levels annotation hierarchy aliasfor aliasfor semantics fully supported within single annotation within annotation hierarchy this method delegates getmergedannotationattributesannotatedelement string element annotated element annotationtype annotation type find merged annotationattributes null found 42 getmergedannotationattributesannotatedelement string boolean boolean findmergedannotationattributesannotatedelement string boolean boolean getmergedannotationannotatedelement class findmergedannotationannotatedelement class
find repeatable annotations specified annotationtype within annotation hierarchy above supplied element annotation found merge annotations attributes matching attributes annotations lower levels annotation hierarchy synthesize results back annotation specified annotationtype aliasfor aliasfor semantics fully supported within single annotation within annotation hierarchies this method follows find semantics described plain annotatedelementutils classlevel javadoc element annotated element never null annotationtype annotation type find never null containertype type container holds annotations may null container type looked via javalangannotationrepeatable set merged repeatable annotations found empty set none found illegalargumentexception element annotationtype null container type cannot resolved annotationconfigurationexception supplied containertype valid container annotation supplied annotationtype 43 findmergedannotationannotatedelement class findallmergedannotationsannotatedelement class
search annotations specified annotationname annotationtype specified element following get semantics element annotated element annotationtype annotation type find annotationname fully qualified class name annotation type find as alternative annotationtype processor processor delegate result processor potentially null
find all annotations specified annotationtype within annotation hierarchy above supplied element annotation found merge annotations attributes matching attributes annotations lower levels annotation hierarchy synthesize results back annotation specified annotationtype aliasfor aliasfor semantics fully supported within single annotation within annotation hierarchies this method follows find semantics described plain annotatedelementutils classlevel javadoc element annotated element never null annotationtype annotation type find never null set merged synthesized annotations found empty set none found 43 findmergedannotationannotatedelement class getallmergedannotationsannotatedelement class
find all annotations specified annotationtypes within annotation hierarchy above supplied element annotation found merge annotations attributes matching attributes annotations lower levels annotation hierarchy synthesize results back annotation corresponding annotationtype aliasfor aliasfor semantics fully supported within single annotation within annotation hierarchies this method follows find semantics described plain annotatedelementutils classlevel javadoc element annotated element never null annotationtypes annotation types find set merged synthesized annotations found empty set none found 51 findallmergedannotationsannotatedelement class
find first annotation specified annotationtype within annotation hierarchy above supplied element merge annotations attributes matching attributes annotations lower levels annotation hierarchy attributes lower levels annotation hierarchy override attributes name higher levels aliasfor aliasfor semantics fully supported within single annotation within annotation hierarchy in contrast getallannotationattributes search algorithm used method stop searching annotation hierarchy first annotation specified annotationtype found consequence additional annotations specified annotationtype ignored this method follows find semantics described plain annotatedelementutils classlevel javadoc element annotated element annotationtype annotation type find classvaluesasstring whether convert class references strings preserve class references nestedannotationsasmap whether convert nested annotation instances annotationattributes maps preserve annotation instances merged annotationattributes null found 42 findmergedannotationannotatedelement class getmergedannotationattributesannotatedelement string boolean boolean
determine annotation specified annotationtype available supplied annotatedelement within annotation hierarchy above specified element if method returns true findmergedannotationattributes return nonnull value this method follows find semantics described plain annotatedelementutils classlevel javadoc element annotated element annotationtype annotation type find true matching annotation present 43 isannotatedannotatedelement class
find first annotation specified annotationname within annotation hierarchy above supplied element merge annotations attributes matching attributes annotations lower levels annotation hierarchy attributes lower levels annotation hierarchy override attributes name higher levels aliasfor aliasfor semantics fully supported within single annotation within annotation hierarchy in contrast getallannotationattributes search algorithm used method stop searching annotation hierarchy first annotation specified annotationname found consequence additional annotations specified annotationname ignored this method follows find semantics described plain annotatedelementutils classlevel javadoc element annotated element annotationname fully qualified class name annotation type find classvaluesasstring whether convert class references strings preserve class references nestedannotationsasmap whether convert nested annotation instances annotationattributes maps preserve annotation instances merged annotationattributes null found 42 findmergedannotationannotatedelement class getmergedannotationattributesannotatedelement string boolean boolean
find first annotation specified annotationtype within annotation hierarchy above supplied element merge annotations attributes matching attributes annotations lower levels annotation hierarchy synthesize result back annotation specified annotationtype aliasfor aliasfor semantics fully supported within single annotation within annotation hierarchy this method follows find semantics described plain annotatedelementutils classlevel javadoc element annotated element annotationtype annotation type find merged synthesized annotation null found 42 findallmergedannotationsannotatedelement class findmergedannotationattributesannotatedelement string boolean boolean getmergedannotationattributesannotatedelement class
resolve container type supplied repeatable annotationtype delegates annotationutilsresolvecontainerannotationtypeclass annotationtype annotation type resolve container container type never null illegalargumentexception container type cannot resolved 43
postprocess aggregated results set synthesized annotations element annotated element aggregatedresults aggregated results given element set annotations
get repeatable annotations specified annotationtype within annotation hierarchy above supplied element annotation found merge annotations attributes matching attributes annotations lower levels annotation hierarchy synthesize results back annotation specified annotationtype aliasfor aliasfor semantics fully supported within single annotation within annotation hierarchies this method follows get semantics described plain annotatedelementutils classlevel javadoc element annotated element never null annotationtype annotation type find never null containertype type container holds annotations may null container type looked via javalangannotationrepeatable set merged repeatable annotations found empty set none found illegalargumentexception element annotationtype null container type cannot resolved annotationconfigurationexception supplied containertype valid container annotation supplied annotationtype 43 getmergedannotationannotatedelement class getallmergedannotationsannotatedelement class
search annotations specified annotationname annotationtype specified element following find semantics element annotated element annotationtype annotation type find annotationname fully qualified class name annotation type find as alternative annotationtype processor processor delegate result processor potentially null 42
get all annotations specified annotationtype within annotation hierarchy above supplied element annotation found merge annotations attributes matching attributes annotations lower levels annotation hierarchy synthesize results back annotation specified annotationtype aliasfor aliasfor semantics fully supported within single annotation within annotation hierarchies this method follows get semantics described plain annotatedelementutils classlevel javadoc element annotated element never null annotationtype annotation type find never null set merged synthesized annotations found empty set none found 43 getmergedannotationannotatedelement class getallannotationattributesannotatedelement string findallmergedannotationsannotatedelement class
find repeatable annotations specified annotationtype within annotation hierarchy above supplied element annotation found merge annotations attributes matching attributes annotations lower levels annotation hierarchy synthesize results back annotation specified annotationtype the container type holds repeatable annotations looked via javalangannotationrepeatable aliasfor aliasfor semantics fully supported within single annotation within annotation hierarchies this method follows find semantics described plain annotatedelementutils classlevel javadoc element annotated element never null annotationtype annotation type find never null set merged repeatable annotations found empty set none found illegalargumentexception element annotationtype null container type cannot resolved 43 findmergedannotationannotatedelement class findallmergedannotationsannotatedelement class findmergedrepeatableannotationsannotatedelement class class
determine annotation specified annotationtype present supplied annotatedelement within annotation hierarchy above specified element if method returns true getmergedannotationattributes return nonnull value this method follows get semantics described plain annotatedelementutils classlevel javadoc element annotated element annotationtype annotation type find true matching annotation present 423 hasannotationannotatedelement class
get all annotations specified annotationtypes within annotation hierarchy above supplied element annotation found merge annotations attributes matching attributes annotations lower levels annotation hierarchy synthesize results back annotation corresponding annotationtype aliasfor aliasfor semantics fully supported within single annotation within annotation hierarchies this method follows get semantics described plain annotatedelementutils classlevel javadoc element annotated element never null annotationtypes annotation types find set merged synthesized annotations found empty set none found 51 getallmergedannotationsannotatedelement class
get repeatable annotations specified annotationtype within annotation hierarchy above supplied element annotation found merge annotations attributes matching attributes annotations lower levels annotation hierarchy synthesize results back annotation specified annotationtype the container type holds repeatable annotations looked via javalangannotationrepeatable aliasfor aliasfor semantics fully supported within single annotation within annotation hierarchies this method follows get semantics described plain annotatedelementutils classlevel javadoc element annotated element never null annotationtype annotation type find never null set merged repeatable annotations found empty set none found illegalargumentexception element annotationtype null container type cannot resolved 43 getmergedannotationannotatedelement class getallmergedannotationsannotatedelement class getmergedrepeatableannotationsannotatedelement class class
perform search algorithm searchwithfindsemantics method avoiding endless recursion tracking annotated elements already visited the metadepth parameter explained processorprocess process method processor api element annotated element never null annotationtypes annotation types find annotationname fully qualified class name annotation type find as alternative annotationtype containertype type container holds repeatable annotations null annotation repeatable processor processor delegate visited set annotated elements already visited metadepth metadepth annotation result processor potentially null 42
get first annotation specified annotationname within annotation hierarchy above supplied element merge annotations attributes matching attributes annotations lower levels annotation hierarchy attributes lower levels annotation hierarchy override attributes name higher levels aliasfor aliasfor semantics fully supported within single annotation within annotation hierarchy in contrast getallannotationattributes search algorithm used method stop searching annotation hierarchy first annotation specified annotationname found consequence additional annotations specified annotationname ignored this method follows get semantics described plain annotatedelementutils classlevel javadoc element annotated element annotationname fully qualified class name annotation type find classvaluesasstring whether convert class references strings preserve class references nestedannotationsasmap whether convert nested annotation instances annotationattributes maps preserve annotation instances merged annotationattributes null found 42 findmergedannotationannotatedelement class findmergedannotationattributesannotatedelement string boolean boolean getallannotationattributesannotatedelement string boolean boolean
get first annotation specified annotationtype within annotation hierarchy above supplied element merge annotations attributes matching attributes annotations lower levels annotation hierarchy synthesize result back annotation specified annotationtype aliasfor aliasfor semantics fully supported within single annotation within annotation hierarchy this method delegates getmergedannotationattributesannotatedelement class annotationutilssynthesizeannotationmap class annotatedelement element annotated element annotationtype annotation type find merged synthesized annotation null found 42 getmergedannotationattributesannotatedelement class findmergedannotationannotatedelement class annotationutilssynthesizeannotationmap class annotatedelement
validate supplied containertype proper container annotation supplied repeatable annotationtype ie declares value attribute holds array annotationtype annotationconfigurationexception supplied containertype valid container annotation supplied annotationtype 43
search annotations specified annotationname annotationtype specified element following get semantics element annotated element annotationtypes annotation types find annotationname fully qualified class name annotation type find as alternative annotationtype containertype type container holds repeatable annotations null annotation repeatable processor processor delegate result processor potentially null 43
get annotation attributes all annotations specified annotationname annotation hierarchy supplied annotatedelement store results multivaluemap note contrast getmergedannotationattributesannotatedelement string method not support attribute overrides this method follows get semantics described plain annotatedelementutils classlevel javadoc element annotated element annotationname fully qualified class name annotation type find classvaluesasstring whether convert class references strings preserve class references nestedannotationsasmap whether convert nested annotation instances annotationattributes maps preserve annotation instances multivaluemap keyed attribute name containing annotation attributes annotations found null found
get array raw unsynthesized annotations value attribute supplied repeatable annotation container 43
method invoked searchwithgetsemantics perform actual search within supplied list annotations this method invoked first locally declared annotations subsequently inherited annotations thereby allowing local annotations take precedence inherited annotations the metadepth parameter explained processorprocess process method processor api element element annotated supplied annotations used contextual logging may null unknown annotations annotations search annotationtypes annotation types find annotationname fully qualified class name annotation type find as alternative annotationtype containertype type container holds repeatable annotations null annotation repeatable processor processor delegate visited set annotated elements already visited metadepth metadepth annotation result processor potentially null 42
implementation checks order order javaxannotationpriority priority various kinds elements addition orgspringframeworkcoreordered check superclass
implementation retrieves javaxannotationpriority value allowing additional semantics regular order annotation typically selecting one object another case multiple matches one object returned
sort given array list default annotationawareordercomparator necessary simply skips sorting given value optimized skip sorting lists size 0 1 order avoid unnecessary array extraction value array list sort javautilarrayssortobject javautilcomparator
sort given list default annotationawareordercomparator optimized skip sorting lists size 0 1 order avoid unnecessary array extraction list list sort javautillistsortjavautilcomparator
sort given array default annotationawareordercomparator optimized skip sorting lists size 0 1 order avoid unnecessary array extraction array array sort javautilarrayssortobject javautilcomparator
create new empty annotationattributes instance
get value stored specified attributename class attributename name attribute get never null empty value illegalargumentexception attribute exist expected type
get value stored specified attributename ensuring value expectedtype if expectedtype array value stored specified attributename single element component type expected array type single element wrapped singleelement array appropriate type returning it attributename name attribute get never null empty expectedtype expected type never null value illegalargumentexception attribute exist expected type
create new empty annotationattributes instance given initial capacity optimize performance initialcapacity initial size underlying map
get value stored specified attributename number attributename name attribute get never null empty value illegalargumentexception attribute exist expected type
create new empty annotationattributes instance specified annotationtype annotationtype annotation type name represented annotationattributes instance never null classloader classloader try load annotation type on null store annotation type name 432
store supplied value map specified key unless value already stored key key key store value value value store current value stored map null value previously stored map get put 42
get array type annotationtype stored specified attributename if value stored specified attributename annotation wrapped singleelement array returning it attributename name attribute get never null empty annotationtype expected annotation type never null annotation array illegalargumentexception attribute exist expected type 42
create new empty annotationattributes instance specified annotationtype annotationtype type annotation represented annotationattributes instance never null 42
create new annotationattributes instance wrapping provided map keyvalue pairs map original source annotation attribute keyvalue pairs frommapmap
return annotationattributes instance based given map if map already annotationattributes instance cast returned immediately without creating new instance otherwise new instance created passing supplied map annotationattributesmap constructor map original source annotation attribute keyvalue pairs
create new annotationattributes instance wrapping provided map keyvalue pairs original source annotation attribute keyvalue pairs frommapmap
get value stored specified attributename enum attributename name attribute get never null empty value illegalargumentexception attribute exist expected type
get type annotation represented annotationattributes annotation type null unknown 42
construct new mapannotationattributeextractor the supplied map must contain keyvalue pair every attribute defined supplied annotationtype aliased default value attributes map annotation attributes never null annotationtype type annotation synthesize never null annotatedelement element annotated annotation supplied type may null unknown
enrich validate supplied attributes map ensuring contains nonnull entry annotation attribute specified annotationtype type entry matches return type corresponding annotation attribute if entry map presumably annotation attributes attempt made synthesize annotation it similarly entry array maps attempt made synthesize array annotations maps if attribute missing supplied map set either value alias if alias exists value attributes default value if defined otherwise illegalargumentexception thrown
return order specified type takes care order order javaxannotationpriority type type handle order value null none found getpriorityclass
return order specified type specified default value none found takes care order order javaxannotationpriority type type handle priority value specified default order none found 50 getpriorityclass
return order specified type specified default value none found takes care order order javaxannotationpriority type type handle priority value specified default order none found getpriorityclass
return value javaxannotationpriority annotation declared specified type null none type type handle priority value annotation declared null none
construct new abstractaliasawareannotationattributeextractor annotationtype annotation type synthesize never null annotatedelement element annotated annotation supplied type may null unknown source underlying source annotation attributes never null
create new synthesizingmethodparameter given method constructor this convenience factory method scenarios method constructor reference treated generic fashion executable method constructor specify parameter parameterindex index parameter corresponding synthesizingmethodparameter instance 50
construct new synthesizedannotationinvocationhandler supplied annotationattributeextractor attributeextractor extractor delegate
see annotationhashcode definition required algorithm
clone provided array ensuring original component type retained array array clone
see annotationtostring guidelines recommended format
warning use nullsafehashcode methods springs objectutils hash code generation algorithms comply requirements specified annotationhashcode array array compute hash code
see annotationequalsobject definition required algorithm object compare
synthesize array annotations supplied array maps annotation attributes creating new array annotationtype size populating plain synthesizeannotationmap class annotatedelement synthesized versions maps input array maps array maps annotation attributes synthesize annotationtype type annotations synthesize never null new array synthesized annotations null supplied array null annotationconfigurationexception invalid configuration aliasfor detected 421 synthesizeannotationmap class annotatedelement synthesizeannotationarrayannotation object
handle supplied annotation introspection exception if supplied exception annotationconfigurationexception simply thrown allowing propagate caller nothing logged otherwise method logs introspection failure in particular typenotpresentexceptions moving on assuming nested class values resolvable within annotation attributes thereby effectively pretending annotations specified element element element tried introspect annotations ex exception encountered rethrowannotationconfigurationexception
perform search algorithm findannotationannotatedelement class avoiding endless recursion tracking annotations already visited annotatedelement annotatedelement find annotation annotationtype annotation type look for locally metaannotation visited set annotations already visited first matching annotation null found 42
determine descriptor supplied descriptor effectively represent aliases attribute target annotation either explicitly implicitly this method searches attribute override hierarchy beginning descriptor order detect implicit transitively implicit aliases true descriptor supplied descriptor effectively alias annotation attribute isoverridefor
create aliasdescriptor from declaration aliasfor supplied annotation attribute validate configuration aliasfor attribute annotation attribute annotated aliasfor alias descriptor null attribute annotated aliasfor validateagainst
find first class inheritance hierarchy specified clazz including specified clazz itself annotation specified annotationtype directly present if supplied clazz interface interface checked inheritance hierarchy interfaces traversed metaannotations not searched the standard class api provide mechanism determining class inheritance hierarchy actually declares annotation need handle explicitly annotationtype annotation type look clazz class check annotation may null first class inheritance hierarchy declares annotation specified annotationtype null found classisannotationpresentclass classgetdeclaredannotations findannotationdeclaringclassfortypeslist class isannotationdeclaredlocallyclass class
synthesize array annotations supplied array annotations creating new array size type populating plain synthesizeannotationannotation synthesized versions annotations input array annotations array annotations synthesize annotatedelement element annotated supplied array annotations may null unknown new array synthesized annotations null supplied array null annotationconfigurationexception invalid configuration aliasfor detected 42 synthesizeannotationannotation annotatedelement synthesizeannotationmap class annotatedelement
find single annotation annotationtype supplied class traversing interfaces annotations superclasses annotation directly present given class itself this method explicitly handles classlevel annotations declared javalangannotationinherited inherited as well metaannotations annotations interfaces the algorithm operates follows search annotation given class return found recursively search annotations given class declares recursively search interfaces given class declares recursively search superclass hierarchy given class note context term recursively means search process continues returning step 1 current interface annotation superclass class look annotations on clazz class look annotations annotationtype type annotation look first matching annotation null found
adapt given value according given class nested annotation settings nested annotations plain synthesizeannotationannotation annotatedelement synthesized annotatedelement element annotated used contextual logging may null unknown value annotation attribute value classvaluesasstring whether convert class references strings for compatibility orgspringframeworkcoretypeannotationmetadata preserve class references nestedannotationsasmap whether convert nested annotations annotationattributes maps for compatibility orgspringframeworkcoretypeannotationmetadata preserve annotation instances adapted value original value adaptation needed
get declared repeatable plain annotation annotations annotationtype supplied annotatedelement annotations either directly present indirectly present metapresent element this method mimics functionality java 8s javalangreflectannotatedelementgetdeclaredannotationsbytypeclass support automatic detection container annotation declared via javalangannotationrepeatable when running java 8 higher additional support metaannotations handles single annotations annotations nested within container annotation correctly handles bridge methods generated compiler supplied element method metaannotations searched annotation present supplied element annotatedelement element look annotations annotationtype annotation type look annotations found empty set never null 42 getrepeatableannotationsannotatedelement class getrepeatableannotationsannotatedelement class class getdeclaredrepeatableannotationsannotatedelement class class annotatedelementutilsgetmergedrepeatableannotationsannotatedelement class orgspringframeworkcorebridgemethodresolverfindbridgedmethod javalangannotationrepeatable javalangreflectannotatedelementgetdeclaredannotationsbytype
get repeatable plain annotation annotations annotationtype supplied annotatedelement annotations either present indirectly present metapresent element this method mimics functionality java 8s javalangreflectannotatedelementgetannotationsbytypeclass additional support metaannotations handles single annotations annotations nested within container annotation correctly handles bridge methods generated compiler supplied element method metaannotations searched annotation present supplied element annotatedelement element look annotations annotationtype annotation type look containerannotationtype type container holds annotations may null container supported looked via javalangannotationrepeatable running java 8 higher annotations found empty set never null 42 getrepeatableannotationsannotatedelement class getdeclaredrepeatableannotationsannotatedelement class getdeclaredrepeatableannotationsannotatedelement class class annotatedelementutilsgetmergedrepeatableannotationsannotatedelement class class orgspringframeworkcorebridgemethodresolverfindbridgedmethod javalangannotationrepeatable javalangreflectannotatedelementgetannotationsbytype
postprocess supplied annotationattributes specifically method enforces attribute alias semantics annotation attributes annotated aliasfor aliasfor replaces default value placeholders original default values annotatedelement element annotated annotation annotation hierarchy supplied attributes created may null unknown attributes annotation attributes postprocess classvaluesasstring whether convert class references strings for compatibility orgspringframeworkcoretypeannotationmetadata preserve class references nestedannotationsasmap whether convert nested annotations annotationattributes maps for compatibility orgspringframeworkcoretypeannotationmetadata preserve annotation instances 42 retrieveannotationattributesobject annotation boolean boolean getdefaultvalueclass string
get single annotation annotationtype supplied annotatedelement annotation either present metapresent annotatedelement note method supports single level metaannotations support arbitrary levels metaannotations use findannotationannotatedelement class instead annotatedelement annotatedelement get annotation annotationtype annotation type look for locally metaannotation first matching annotation null found 31
find single annotation annotationtype supplied method traversing super methods ie superclasses interfaces annotation directly present given method itself correctly handles bridge method methods generated compiler metaannotations searched annotation directly present method annotations methods inherited default need handle explicitly method method look annotations annotationtype annotation type look first matching annotation null found getannotationmethod class
check whether expose synthesizedannotation marker given annotation type annotationtype annotation type create synthesized proxy
get annotation annotations present supplied method correctly handles bridge method methods generated compiler metaannotations not searched method method retrieve annotations annotations found empty array null resolvable eg nested class values annotation attributes failed resolve runtime orgspringframeworkcorebridgemethodresolverfindbridgedmethodmethod annotatedelementgetannotations
retrieve value value attribute singleelement annotation given annotation instance annotation annotation instance retrieve value attribute value null found unless attribute value cannot retrieved due annotationconfigurationexception case exception rethrown getvalueannotation string
get name aliased attribute configured via supplied aliasfor aliasfor annotation supplied attribute original attribute aliased one specified indicating reference goes samenamed attribute metaannotation this method returns value either attribute value attribute aliasfor ensuring one attributes declared simultaneously ensuring least one attributes declared aliasfor aliasfor annotation retrieve aliased attribute name attribute attribute annotated aliasfor name aliased attribute never null empty annotationconfigurationexception invalid configuration aliasfor detected
get single annotation annotationtype supplied annotation either given annotation direct metaannotation thereof note method supports single level metaannotations support arbitrary levels metaannotations use one find methods instead annotation annotation check annotationtype annotation type look for locally metaannotation first matching annotation null found 40
resolve container type supplied repeatable annotationtype automatically detects container annotation declared via javalangannotationrepeatable supplied annotation type annotated repeatable method simply returns null 42
get single annotation annotationtype supplied method annotation either present metapresent method correctly handles bridge method methods generated compiler note method supports single level metaannotations support arbitrary levels metaannotations use findannotationmethod class instead method method look annotations annotationtype annotation type look first matching annotation null found orgspringframeworkcorebridgemethodresolverfindbridgedmethodmethod getannotationannotatedelement class
retrieve given annotations attributes annotationattributes map this method provides fully recursive annotation reading capabilities par reflectionbased orgspringframeworkcoretypestandardannotationmetadata note variant getannotationattributes intended use within framework following special rules apply default values replaced default value placeholders the resulting merged annotation attributes eventually plain postprocessannotationattributes postprocessed order ensure placeholders replaced actual default values order enforce aliasfor semantics annotatedelement element annotated supplied annotation may null unknown annotation annotation retrieve attributes classvaluesasstring whether convert class references strings for compatibility orgspringframeworkcoretypeannotationmetadata preserve class references nestedannotationsasmap whether convert nested annotations annotationattributes maps for compatibility orgspringframeworkcoretypeannotationmetadata preserve annotation instances annotation attributes a specialized map attribute names keys corresponding attribute values values never null 42 postprocessannotationattributes
retrieve default value named attribute given annotation instance annotation annotation instance retrieve default value attributename name attribute value retrieve default value named attribute null found getdefaultvalueclass string
get name overridden attribute configured via aliasfor aliasfor supplied annotation attribute attribute attribute retrieve override never null metaannotationtype type metaannotation overridden attribute allowed declared name overridden attribute null found applicable specified metaannotation type illegalargumentexception supplied attribute method null annotation supplied metaannotation type null annotation annotationconfigurationexception invalid configuration aliasfor detected 42
synthesize annotation supplied annotation wrapping dynamic proxy transparently enforces attribute alias semantics annotation attributes annotated aliasfor aliasfor annotation annotation synthesize annotatedelement element annotated supplied annotation may null unknown synthesized annotation supplied annotation synthesizable null supplied annotation null otherwise supplied annotation unmodified annotationconfigurationexception invalid configuration aliasfor detected 42 synthesizeannotationmap class annotatedelement synthesizeannotationclass
given method override given candidate method method overriding method candidate potentially overridden method 508
get annotation annotations present supplied annotatedelement metaannotations not searched annotatedelement method constructor field retrieve annotations annotations found empty array null resolvable eg nested class values annotation attributes failed resolve runtime 408 annotatedelementgetannotations
check declared attributes given annotation particular covering google app engines late arrival typenotpresentexceptionproxy class values instead early classgetannotations failure this method failing indicates getannotationattributesannotation wont failure either when attempted later on annotation annotation validate illegalstateexception declared class attribute could read 4315 classgetannotations getannotationattributesannotation
retrieve given annotations attributes annotationattributes map this method provides fully recursive annotation reading capabilities par reflectionbased orgspringframeworkcoretypestandardannotationmetadata annotatedelement element annotated supplied annotation may null unknown annotation annotation retrieve attributes classvaluesasstring whether convert class references strings for compatibility orgspringframeworkcoretypeannotationmetadata preserve class references nestedannotationsasmap whether convert nested annotations annotationattributes maps for compatibility orgspringframeworkcoretypeannotationmetadata preserve annotation instances annotation attributes a specialized map attribute names keys corresponding attribute values values never null 42
retrieve potentially cached array declared annotations given element element annotated element introspect potentially cached array declared annotations only internal iteration purposes external exposure 51
get methods declared supplied annotationtype match javas requirements annotation attributes all methods returned list plain reflectionutilsmakeaccessiblemethod made accessible annotationtype type search attribute methods never null annotation attribute methods specified annotation type never null though potentially empty 42
get names aliased attributes configured via aliasfor aliasfor supplied annotation attribute attribute attribute find aliases names aliased attributes never null though potentially empty illegalargumentexception supplied attribute method null annotation annotationconfigurationexception invalid configuration aliasfor detected 42 getattributeoverridenamemethod class
retrieve default value value attribute singleelement annotation given class annotation type annotationtype annotation type default value retrieved default value null found getdefaultvalueclass string
get declared repeatable plain annotation annotations annotationtype supplied annotatedelement annotations either directly present indirectly present metapresent element this method mimics functionality java 8s javalangreflectannotatedelementgetdeclaredannotationsbytypeclass additional support metaannotations handles single annotations annotations nested within container annotation correctly handles bridge methods generated compiler supplied element method metaannotations searched annotation present supplied element annotatedelement element look annotations annotationtype annotation type look containerannotationtype type container holds annotations may null container supported looked via javalangannotationrepeatable running java 8 higher annotations found empty set never null 42 getrepeatableannotationsannotatedelement class getrepeatableannotationsannotatedelement class class getdeclaredrepeatableannotationsannotatedelement class annotatedelementutilsgetmergedrepeatableannotationsannotatedelement class class orgspringframeworkcorebridgemethodresolverfindbridgedmethod javalangannotationrepeatable javalangreflectannotatedelementgetdeclaredannotationsbytype
perform actual work findannotationannotatedelement class honoring synthesize flag clazz class look annotations annotationtype type annotation look synthesize true result plain synthesizeannotationannotation synthesized first matching annotation null found 421
determine annotation type metaannotationtype metapresent supplied annotationtype annotationtype annotation type search metaannotationtype type metaannotation search true annotation metapresent 421
determine whether annotation specified annotationtype declared locally ie directly present supplied clazz the supplied class may represent type metaannotations not searched note method not determine annotation plain javalangannotationinherited inherited greater clarity regarding inherited annotations consider using isannotationinheritedclass class instead annotationtype annotation type look clazz class check annotation true annotation specified annotationtype directly present javalangclassgetdeclaredannotations javalangclassgetdeclaredannotationclass isannotationinheritedclass class
synthesize annotation supplied map annotation attributes wrapping map dynamic proxy implements annotation specified annotationtype transparently enforces attribute alias semantics annotation attributes annotated aliasfor aliasfor the supplied map must contain keyvalue pair every attribute defined supplied annotationtype aliased default value nested maps nested arrays maps recursively synthesized nested annotations nested arrays annotations respectively note annotationattributes specialized type map ideal candidate methods attributes argument attributes map annotation attributes synthesize annotationtype type annotation synthesize annotatedelement element annotated annotation corresponding supplied attributes may null unknown synthesized annotation illegalargumentexception required attribute missing attribute correct type annotationconfigurationexception invalid configuration aliasfor detected 42 synthesizeannotationannotation annotatedelement synthesizeannotationclass getannotationattributesannotatedelement annotation getannotationattributesannotatedelement annotation boolean boolean
determine given annotated element defined java orgspringframeworklang package annotatedelement annotated element check true given element java package orgspringframeworklang package 51
register annotationdeclared default values given attributes available attributes annotation attributes process 432
supplied throwable annotationconfigurationexception cast annotationconfigurationexception thrown allowing propagate caller otherwise method nothing ex throwable inspect 42
determine whether specified method searchable annotations ie javalang orgspringframeworklang annotations deprecated nullable ifcmethod interface method check 505
clear internal annotation metadata cache 4315
get repeatable plain annotation annotations annotationtype supplied annotatedelement annotations either present indirectly present metapresent element this method mimics functionality java 8s javalangreflectannotatedelementgetannotationsbytypeclass support automatic detection container annotation declared via javalangannotationrepeatable when running java 8 higher additional support metaannotations handles single annotations annotations nested within container annotation correctly handles bridge methods generated compiler supplied element method metaannotations searched annotation present supplied element annotatedelement element look annotations annotationtype annotation type look annotations found empty set never null 42 getrepeatableannotationsannotatedelement class class getdeclaredrepeatableannotationsannotatedelement class class annotatedelementutilsgetmergedrepeatableannotationsannotatedelement class orgspringframeworkcorebridgemethodresolverfindbridgedmethod javalangannotationrepeatable javalangreflectannotatedelementgetannotationsbytype
determine annotations supplied annotationtype synthesizable ie need wrapped dynamic proxy provides functionality standard jdk annotation specifically annotation synthesizable declares attributes configured aliased pairs via aliasfor aliasfor nested annotations used annotation declare aliased pairs 42 synthesizedannotation synthesizedannotationinvocationhandler
determine methods given type searchable annotations them basetype superclass interface search cached set annotated methods 505
get map attribute aliases declared via aliasfor supplied annotation type the map keyed attribute name value representing list names aliased attributes for explicit alias pairs x y ie x aliasfory y aliasforx two entries map x y y x for implicit aliases ie attributes declared attribute overrides attribute metaannotation n entries map example x y z implicit aliases map contain following entries x y z y x z z x y an empty return value implies annotation declare attribute aliases annotationtype annotation type find attribute aliases map containing attribute aliases never null 42
postprocess supplied annotationattributes preserving nested annotations annotation instances specifically method enforces attribute alias semantics annotation attributes annotated aliasfor aliasfor replaces default value placeholders original default values annotatedelement element annotated annotation annotation hierarchy supplied attributes created may null unknown attributes annotation attributes postprocess classvaluesasstring whether convert class references strings for compatibility orgspringframeworkcoretypeannotationmetadata preserve class references 432 postprocessannotationattributesobject annotationattributes boolean boolean getdefaultvalueclass string
find first class inheritance hierarchy specified clazz including specified clazz itself least one specified annotationtypes directly present if supplied clazz interface interface checked inheritance hierarchy interfaces traversed metaannotations not searched the standard class api provide mechanism determining class inheritance hierarchy actually declares one several candidate plain annotation annotations need handle explicitly annotationtypes annotation types look clazz class check annotations on null first class inheritance hierarchy declares annotation least one specified annotationtypes null found 322 classisannotationpresentclass classgetdeclaredannotations findannotationdeclaringclassclass class isannotationdeclaredlocallyclass class
find single annotation annotationtype supplied annotatedelement metaannotations searched annotation directly present supplied element warning method operates generically annotated elements words method execute specialized search algorithms classes methods require specific semantics findannotationclass class findannotationmethod class invoke one methods instead annotatedelement annotatedelement find annotation annotationtype annotation type look for locally metaannotation first matching annotation null found 42
retrieve default value value attribute singleelement annotation given annotation instance annotation annotation instance retrieve default value default value null found getdefaultvalueannotation string
retrieve value named attribute given annotation instance annotation annotation instance retrieve value attributename name attribute value retrieve attribute value null found unless attribute value cannot retrieved due annotationconfigurationexception case exception rethrown getvalueannotation rethrowannotationconfigurationexceptionthrowable
retrieve default value named attribute given class annotation type annotationtype annotation type default value retrieved attributename name attribute value retrieve default value named attribute null found getdefaultvalueannotation string
get annotation supplied annotationname supplied element element element search annotationname fully qualified class name annotation type find annotation found null otherwise 42
perform search algorithm findannotationclass class avoiding endless recursion tracking annotations already visited clazz class look annotations annotationtype type annotation look visited set annotations already visited first matching annotation null found
retrieve given annotations attributes annotationattributes map this method provides fully recursive annotation reading capabilities par reflectionbased orgspringframeworkcoretypestandardannotationmetadata annotation annotation retrieve attributes classvaluesasstring whether convert class references strings for compatibility orgspringframeworkcoretypeannotationmetadata preserve class references nestedannotationsasmap whether convert nested annotations annotationattributes maps for compatibility orgspringframeworkcoretypeannotationmetadata preserve annotation instances annotation attributes a specialized map attribute names keys corresponding attribute values values never null 311
executes given task synchronously direct invocation its runnablerun run method illegalargumentexception given task null
return external factory use creating new threads any
template method actual execution task the default implementation creates new thread starts it task runnable execute setthreadfactory createthread javalangthreadstart
executes given task within concurrency throttle configured through superclasss settings executes urgent tasks with immediate timeout directly bypassing concurrency throttle if active tasks subject throttling timeoutimmediate doexecuterunnable
executes given task within concurrency throttle configured through superclasss settings doexecuterunnable
create new concurrentexecutoradapter given spring taskexecutor taskexecutor spring taskexecutor wrap
create new taskexecutoradapter using given jdk concurrent executor concurrentexecutor jdk concurrent executor delegate
delegates specified jdk concurrent executor javautilconcurrentexecutorexecuterunnable
actually execute given runnable which may usersupplied task wrapper around usersupplied task given executor concurrentexecutor underlying jdk concurrent executor delegate taskdecorator specified decorator applied runnable runnable execute rejectedexecutionexception given runnable cannot accepted 43
create new executorserviceadapter using given target executor taskexecutor target executor delegate
return variant given inputstream calling inputstreamclose close effect inputstream decorate version inputstream ignores calls close
copy contents given inputstream given outputstream leaves streams open done inputstream copy outputstream copy number bytes copied ioexception case io errors
copy contents given string given output outputstream leaves stream open done string copy charset charset outputstream copy ioexception case io errors
copy range content given inputstream given outputstream if specified range exceeds length inputstream copies end stream returns actual number copied bytes leaves streams open done inputstream copy outputstream copy start position start copying end position end copying number bytes copied ioexception case io errors 43
drain remaining content given inputstream leaves inputstream open done inputstream drain number bytes read ioexception case io errors 43
return variant given outputstream calling outputstreamclose close effect outputstream decorate version outputstream ignores calls close
copy contents given inputstream new byte array leaves stream open done stream copy may null empty new byte array copied possibly empty ioexception case io errors
copy contents given byte array given outputstream leaves stream open done byte array copy outputstream copy ioexception case io errors
copy contents given inputstream string leaves stream open done inputstream copy may null empty string copied possibly empty ioexception case io errors
copy contents given byte array given output file byte array copy file copy ioexception case io errors
copy contents given inputstream new byte array closes stream done stream copy may null empty new byte array copied possibly empty ioexception case io errors
copy contents given byte array given outputstream closes stream done byte array copy outputstream copy ioexception case io errors
copy contents given reader given writer closes done reader copy writer copy number characters copied ioexception case io errors
copy contents given reader string closes reader done reader copy may null empty string copied possibly empty ioexception case io errors
copy contents given input file new byte array file copy new byte array copied ioexception case io errors
copy contents given input file given output file file copy file copy number bytes copied ioexception case io errors
copy contents given string given output writer closes writer done string copy writer copy ioexception case io errors
copy contents given inputstream given outputstream closes streams done stream copy stream copy number bytes copied ioexception case io errors
create regular copy map shallow copy map reusing maps valueholding list entries even entries shared unmodifiable along lines standard mapput semantics 42 putobject list putallmap linkedmultivaluemaplinkedmultivaluemapmap deepcopy
create deep copy map copy map including copy valueholding list entry consistently using independent modifiable linkedlist entry along lines multivaluemapaddall semantics 42 addallmultivaluemap clone
return whether given resource location url either special classpath pseudo url standard url resourcelocation location string check whether location qualifies url classpathurlprefix javaneturl
extract url actual jar file given url which may point resource jar file jar file itself jarurl original url url actual jar file malformedurlexception valid jar file url could extracted
extract url outermost archive given jarwar url which may point resource jar file jar file itself in case jar file nested within war file return url war file since one resolvable file system jarurl original url url actual jar file malformedurlexception valid jar file url could extracted 418 extractjarfileurlurl
resolve given resource url javaiofile ie file file system resourceurl resource url resolve description description original resource url created for example class path location corresponding file object filenotfoundexception url cannot resolved file file system
determine whether given url points resource jar file ie protocol jar war zip vfszip wsjar url url check whether url identified jar url
resolve given resource location javaneturl does check whether url actually exists simply returns url given location would correspond to resourcelocation resource location resolve either classpath pseudo url file url plain file path corresponding url object filenotfoundexception resource cannot resolved url
resolve given resource uri javaiofile ie file file system resourceuri resource uri resolve description description original resource uri created for example class path location corresponding file object filenotfoundexception url cannot resolved file file system 25
determine whether given url points resource file system ie protocol file vfsfile vfs url url check whether url identified file system url
determine whether given url points jar file itself is protocol file ends jar extension url url check whether url identified jar file url 41
resolve given resource location javaiofile ie file file system does check whether file actually exists simply returns file given location would correspond to resourcelocation resource location resolve either classpath pseudo url file url plain file path corresponding file object filenotfoundexception resource cannot resolved file file system
assert boolean expression throwing illegalstateexception expression evaluates false call istrue wish throw illegalargumentexception assertion failure classcodeassertstateid null the id property must already initialized expression boolean expression message exception message use assertion fails illegalstateexception expression false
assert object null classcode assertnotnullclazz the class clazzgetname must null object object check messagesupplier supplier exception message use assertion fails illegalargumentexception object null 50
assert array contains elements is must null must contain least one element classcode assertnotemptyarray the arraytype array must contain elements array array check messagesupplier supplier exception message use assertion fails illegalargumentexception object array null contains elements 50
assert supertypeisassignablefromsubtype true classcodeassertisassignablenumberclass myclass number expected supertype super type check subtype sub type check message message prepended provide context empty ends full exception message appended ends space name offending sub type appended case space name offending sub type appended illegalargumentexception classes assignable
assert object null classcode assertisnullvalue the value value must null object object check messagesupplier supplier exception message use assertion fails illegalargumentexception object null 50
assert collection contains elements is must null must contain least one element classcodeassertnotemptycollection collection must contain elements collection collection check message exception message use assertion fails illegalargumentexception collection null contains elements
assert given string empty is must null empty string classcodeasserthaslengthname name must empty text string check message exception message use assertion fails illegalargumentexception text empty stringutilshaslength
assert collection contains elements is must null must contain least one element 437 favor notemptycollection string
assert given string contains valid text content is must null must contain least one nonwhitespace character classcodeasserthastextname name must empty text string check message exception message use assertion fails illegalargumentexception text contain valid text content stringutilshastext
assert boolean expression throwing illegalstateexception expression evaluates false 437 favor stateboolean string
assert object null classcodeassertnotnullclazz the class must null object object check message exception message use assertion fails illegalargumentexception object null
assert map contains entries is must null must contain least one entry classcodeassertnotemptymap map must contain entries map map check message exception message use assertion fails illegalargumentexception map null contains entries
assert given text contain given substring classcodeassertdoesnotcontainname rod name must contain rod texttosearch text search substring substring find within text message exception message use assertion fails illegalargumentexception text contains substring
assert array contains null elements note complain array empty classcodeassertnonullelementsarray the array must contain nonnull elements array array check message exception message use assertion fails illegalargumentexception object array contains null element
assert object null classcodeassertisnullvalue the value must null object object check message exception message use assertion fails illegalargumentexception object null
assert provided object instance provided class classcodeassertinstanceoffooclass foo foo expected type type check obj object check message message prepended provide context empty ends full exception message appended ends space name offending objects type appended case space name offending objects type appended illegalargumentexception object instance type
assert object null 437 favor notnullobject string
assert given string contains valid text content is must null must contain least one nonwhitespace character classcode asserthastextname name account accountgetid must empty text string check messagesupplier supplier exception message use assertion fails illegalargumentexception text contain valid text content 50 stringutilshastext
assert given text contain given substring classcode assertdoesnotcontainname forbidden name must contain forbidden texttosearch text search substring substring find within text messagesupplier supplier exception message use assertion fails illegalargumentexception text contains substring 50
assert array contains elements is must null must contain least one element classcodeassertnotemptyarray the array must contain elements array array check message exception message use assertion fails illegalargumentexception object array null contains elements
assert map contains entries is must null must contain least one entry classcode assertnotemptymap the maptype map must contain entries map map check messagesupplier supplier exception message use assertion fails illegalargumentexception map null contains entries 50
assert array contains null elements 437 favor nonullelementsobject string
assert given text contain given substring 437 favor doesnotcontainstring string string
assert supertypeisassignablefromsubtype true classcode assertisassignablenumberclass myclass processing myattributename supertype super type check subtype sub type check messagesupplier supplier exception message use assertion fails see isassignableclass class string details illegalargumentexception classes assignable 50
assert boolean expression throwing illegalstateexception expression evaluates false call istrue wish throw illegalargumentexception assertion failure classcode assertstateid null id entitygetname must already initialized expression boolean expression messagesupplier supplier exception message use assertion fails illegalstateexception expression false 50
assert map contains entries is must null must contain least one entry 437 favor notemptymap string
assert boolean expression throwing illegalargumentexception expression evaluates false classcodeassertistruei 0 the value must greater zero expression boolean expression message exception message use assertion fails illegalargumentexception expression false
assert boolean expression throwing illegalargumentexception expression evaluates false classcode assertistruei 0 the value must greater zero expression boolean expression messagesupplier supplier exception message use assertion fails illegalargumentexception expression false 50
assert array contains null elements note complain array empty classcode assertnonullelementsarray the arraytype array must contain nonnull elements array array check messagesupplier supplier exception message use assertion fails illegalargumentexception object array contains null element 50
assert given string empty is must null empty string 437 favor haslengthstring string
assert given string contains valid text content is must null must contain least one nonwhitespace character 437 favor hastextstring string
assert object null 437 favor isnullobject string
assert array contains elements is must null must contain least one element 437 favor notemptyobject string
assert provided object instance provided class classcode assertinstanceoffooclass foo processing fooclassgetsimplename type type check obj object check messagesupplier supplier exception message use assertion fails see isinstanceofclass object string details illegalargumentexception object instance type 50
assert boolean expression throwing illegalargumentexception expression evaluates false 437 favor istrueboolean string
assert collection contains elements is must null must contain least one element classcode assertnotemptycollection the collectiontype collection must contain elements collection collection check messagesupplier supplier exception message use assertion fails illegalargumentexception collection null contains elements 50
assert given string empty is must null empty string classcode asserthaslengthname name account accountgetid must empty text string check messagesupplier supplier exception message use assertion fails illegalargumentexception text empty 50 stringutilshaslength
return string representation contents specified array the string representation consists list arrays elements enclosed curly braces adjacent elements separated characters a followed space returns null array null array array build string representation string representation array
return string representation contents specified array the string representation consists list arrays elements enclosed curly braces adjacent elements separated characters a followed space returns null array null array array build string representation string representation array
return value doublehashcodedouble spring framework 50 favor native jdk 8 variant
return value booleanhashcodeboolean spring framework 50 favor native jdk 8 variant
return hash code based contents specified array array null method returns 0
return hash code based contents specified array array null method returns 0
unwrap given object potentially javautiloptional obj candidate object either value held within optional null optional empty simply given object asis 50
return hash code based contents specified array array null method returns 0
return string representation objects overall identity obj object may null objects identity string representation empty string object null
return string representation contents specified array the string representation consists list arrays elements enclosed curly braces adjacent elements separated characters a followed space returns null array null array array build string representation string representation array
return value floathashcodefloat spring framework 50 favor native jdk 8 variant
return hash code based contents specified array array null method returns 0
return hash code based contents specified array array null method returns 0
return string representation contents specified array the string representation consists list arrays elements enclosed curly braces adjacent elements separated characters a followed space returns null array null array array build string representation string representation array
return hash code given object typically value objecthashcode object array method delegate nullsafehashcode methods arrays class object null method returns 0 objecthashcode nullsafehashcodeobject nullsafehashcodeboolean nullsafehashcodebyte nullsafehashcodechar nullsafehashcodedouble nullsafehashcodefloat nullsafehashcodeint nullsafehashcodelong nullsafehashcodeshort
convert given array which may primitive array object array if necessary primitive wrapper objects a null source value converted empty object array source potentially primitive array corresponding object array never null illegalargumentexception parameter array
determine whether given object empty this method supports following object types optional considered empty optionalempty array considered empty length zero charsequence considered empty length zero collection delegates collectionisempty map delegates mapisempty if given object nonnull one aforementioned supported types method returns false obj object check true object null empty 42 optionalispresent objectutilsisemptyobject stringutilshaslengthcharsequence stringutilsisemptyobject collectionutilsisemptyjavautilcollection collectionutilsisemptyjavautilmap
return string representation contents specified array the string representation consists list arrays elements enclosed curly braces adjacent elements separated characters a followed space returns null array null array array build string representation string representation array
append given object given array returning new array consisting input array contents plus given object array array append can null obj object append new array of component type never null
return string representation contents specified array the string representation consists list arrays elements enclosed curly braces adjacent elements separated characters a followed space returns null array null array array build string representation string representation array
return hash code based contents specified array array null method returns 0
return hash code based contents specified array array null method returns 0
check whether given array enum constants contains constant given name enumvalues enum values check typically obtained via myenumvalues constant constant name find must null empty string casesensitive whether case significant determining match whether constant found given array
compare given arrays arraysequals performing equality check based array elements rather array reference o1 first array compare o2 second array compare whether given objects equal nullsafeequalsobject object javautilarraysequals
return string representation specified object builds string representation contents case array returns null obj null obj object build string representation string representation obj
return hash code based contents specified array array null method returns 0
return contentbased string representation obj null otherwise returns empty string differs nullsafetostringobject returns empty string rather null null value obj object build display string display string representation obj nullsafetostringobject
return string representation contents specified array the string representation consists list arrays elements enclosed curly braces adjacent elements separated characters a followed space returns null array null array array build string representation string representation array
return hash code based contents specified array array null method returns 0
check whether given exception compatible specified exception types declared throws clause ex exception check declaredexceptions exception types declared throws clause whether given exception compatible
return string representation contents specified array the string representation consists list arrays elements enclosed curly braces adjacent elements separated characters a followed space returns null array null array array build string representation string representation array
determine given objects equal returning true null false one null compares arrays arraysequals performing equality check based array elements rather array reference o1 first object compare o2 second object compare whether given objects equal objectequalsobject javautilarraysequals
check whether given array contains given element array array check may null case return value always false element element check whether element found given array
return value longhashcodelong spring framework 50 favor native jdk 8 variant
case insensitive alternative enumvalueofclass string concrete enum type enumvalues array enum constants question usually per enumvalues constant constant get enum value illegalargumentexception given constant found given array enum values use containsconstantenum string guard avoid exception
return string representation contents specified array the string representation consists list arrays elements enclosed curly braces adjacent elements separated characters a followed space returns null array null array array build string representation string representation array
retrieve last element given set using sortedsetlast otherwise iterating elements assuming linked set set set check may null empty last element null none 503 sortedset linkedhashmapkeyset javautillinkedhashset
convert supplied array list primitive array gets converted list appropriate wrapper type note generally prefer standard arraysaslist method arraytolist method meant deal incoming object value might object primitive array runtime a null source value converted empty list source potentially primitive array converted list result objectutilstoobjectarrayobject arraysaslistobject
find common element type given collection any collection collection check common element type null clear common type found or collection empty
check whether given enumeration contains given element enumeration enumeration check element element look true found false otherwise
marshal elements given enumeration array given type enumeration elements must assignable type given array array returned different instance array given
find single value given type given collection collection collection search type type look value given type found clear match null none one value found
merge given properties instance given map copying properties keyvalue pairs over uses propertiespropertynames even catch default properties linked original properties instance props properties instance merge may null map target map merge properties
find single value one given types given collection searching collection value first type searching value second type etc collection collection search types types look for prioritized order value one given types found clear match null none one value found
retrieve last element given list accessing highest index list list check may null empty last element null none 503
check whether given iterator contains given element iterator iterator check element element look true found false otherwise
determine whether given collection contains single unique object collection collection check true collection contains single reference multiple references instance false otherwise
check whether given collection contains given element instance enforces given instance present rather returning true equal element well collection collection check element element look true found false otherwise
merge given array given collection array array merge may null collection target collection merge array
return unmodifiable view specified multivalue map map map unmodifiable view returned unmodifiable view specified multivalue map 31
return true element candidates contained source otherwise returns false source source collection candidates candidates search whether candidates found
return first element candidates contained source element candidates present source returns null iteration order collection implementation specific source source collection candidates candidates search first present object null found
replaces placeholders format name value returned supplied placeholderresolver value value containing placeholders replaced placeholderresolver placeholderresolver use replacement supplied value placeholders replaced inline
replaces placeholders format name corresponding property supplied properties value value containing placeholders replaced properties properties use replacement supplied value placeholders replaced inline
creates new propertyplaceholderhelper uses supplied prefix suffix placeholderprefix prefix denotes start placeholder placeholdersuffix suffix denotes end placeholder valueseparator separating character placeholder variable associated default value ignoreunresolvableplaceholders indicates whether unresolvable placeholders ignored true cause exception false
create new linkedcaseinsensitivemap wraps linkedhashmap given initial capacity stores caseinsensitive keys according given locale by default lower case initialcapacity initial capacity locale locale use caseinsensitive key conversion convertkeystring
copy constructor
grow internal buffer size additionalcapacity number bytes add current buffer size resizablebytearrayoutputstreamsize
resize internal buffer size specified capacity targetcapacity desired size buffer illegalargumentexception given capacity smaller actual size content stored buffer already resizablebytearrayoutputstreamsize
check righthand side type may assigned lefthand side type following java generics rules lhstype target type rhstype value type assigned target type true rhs assignable lhs
unlike collectioncontainsobject relies mimetypeequalsobject method checks type subtype otherwise ignores parameters mimetypes list mime types perform check whether list contains given mime type 514
similar equalsobject based type subtype only ie ignoring parameters mime type compare whether two mime types type subtype 514
indicate whether mime type compatible given mime type for instance text compatible textplain texthtml vice versa effect method similar includes except is symmetric reference mime type compare true mime type compatible given mime type false otherwise
determine parameters mimetype supplied mimetype equal performing caseinsensitive comparisons charset charsets 42
indicate whether mime type includes given mime type for instance text includes textplain texthtml applicationxml includes applicationsoapxml etc method not symmetric reference mime type compare true mime type includes given mime type false otherwise
checks given token string illegal characters defined rfc 2616 section 22 illegalargumentexception case illegal characters hrefhttptoolsietforghtmlrfc2616section22http 11 section 22
return generic parameter value given parameter name name parameter name parameter value null present
create new mimetype given type subtype parameters type primary type subtype subtype parameters parameters may null illegalargumentexception parameters contains illegal characters
return character set indicated charset parameter any character set null available 43
compares mime type another alphabetically mime type compare mimetypeutilssortbyspecificitylist
base64encode given byte array src original byte array encoded byte array
base64decode given byte array src encoded byte array original byte array
base64decode given byte array using rfc 4648 url filename safe alphabet src encoded byte array original byte array 424
base64encode given byte array using rfc 4648 url filename safe alphabet src original byte array encoded byte array 424
base64decode given byte array utf8 string src encoded utf8 string original byte array
base64encode given byte array string src original byte array may null encoded byte array utf8 string
match string given pattern supporting following simple pattern styles xxx xxx xxx xxxyyy matches with arbitrary number pattern parts well direct equality pattern pattern match str string match whether string matches given pattern
match string given patterns supporting following simple pattern styles xxx xxx xxx xxxyyy matches with arbitrary number pattern parts well direct equality patterns patterns match str string match whether string matches given patterns
creates new autopopulatinglist backed supplied list creates new elements demand using supplied elementfactory
get element supplied index creating element index
create new invalidcontenttypeexception given content type mimetype offending media type message detail message indicating invalid part
turn given source string array sorted array array source array sorted array never null
delete character given string instring original string charstodelete set characters delete eg azn delete as zs new lines resulting string
replace occurrences substring within string another string instring string examine oldpattern string replace newpattern string insert string replacements
quote given string single quotes str input string eg mystring quoted string eg mystring null input null
trim trailing whitespace given string str string check trimmed string javalangcharacteriswhitespace
convert collection delimited string eg csv useful tostring implementations coll collection convert potentially null empty delim delimiter use typically prefix string start element suffix string end element delimited string
test whether given string matches given substring given index str original string or stringbuilder index index original string start matching substring substring match given index
trim occurrences supplied leading character given string str string check leadingcharacter leading character trimmed trimmed string
take array strings split element based given delimiter properties instance generated left delimiter providing key right delimiter providing value will trim key value adding properties instance array array process delimiter split element using typically equals symbol charstodelete one characters remove element prior attempting split operation typically quotation mark symbol null removal occur properties instance representing array contents null array process null empty
take string delimited list convert string array a single delimiter may consist one character still considered single delimiter string rather bunch potential delimiter characters contrast tokenizetostringarray str input string potentially null empty delimiter delimiter elements this single delimiter rather bunch individual delimiter characters charstodelete set characters delete useful deleting unwanted line breaks eg rnf delete new lines line feeds string array tokens list tokenizetostringarray
extract filename extension given java resource path eg mypathmyfiletxt txt path file path may null extracted filename extension null none
tokenize given string string array via stringtokenizer the given delimiters string consist number delimiter characters characters used separate tokens delimiter always single character multicharacter delimiters consider using delimitedlisttostringarray str string tokenize potentially null empty delimiters delimiter characters assembled string each characters individually considered delimiter trimtokens trim tokens via stringtrim ignoreemptytokens omit empty tokens result array only applies tokens empty trimming stringtokenizer consider subsequent delimiters token first place array tokens javautilstringtokenizer stringtrim delimitedlisttostringarray
remove duplicate strings given array as 42 preserves original order uses linkedhashset array string array potentially empty array without duplicates natural sort order
parse given string representation locale for many parsing scenarios inverse operation localetostring locales tostring lenient sense method aim strict locale design compliance rather specifically tailored typical spring parsing needs note delegate accept bcp 47 language tag format please use parselocale lenient parsing formats localestring locale string following locales tostring format en enuk etc also accepting spaces separators as alternative underscores corresponding locale instance null none illegalargumentexception case invalid locale specification
trim elements given string array calling stringtrim them array original string array potentially empty resulting array of size trimmed elements
normalize path suppressing sequences like path inner simple dots the result convenient path comparison uses notice windows separators replaced simple slashes path original path normalized path
turn given object string single quotes string keeping object asis else obj input object eg mystring quoted string eg mystring input object asis string
test given string ends specified suffix ignoring upperlower case str string check suffix suffix look javalangstringendswith
take array strings split element based given delimiter properties instance generated left delimiter providing key right delimiter providing value will trim key value adding properties array array process delimiter split element using typically equals symbol properties instance representing array contents null array process null empty
concatenate given string arrays one overlapping array elements included twice the order elements original arrays preserved array1 first array can null array2 second array can null new array null given arrays null
merge given string arrays one overlapping array elements included once the order elements original arrays preserved with exception overlapping elements included first occurrence array1 first array can null array2 second array can null new array null given arrays null 4315 favor manual merging via linkedhashset with every entry included once even entries within first array
determine rfc 3066 compliant language tag used http acceptlanguage header locale locale transform language tag rfc 3066 compliant language tag string 504 favor localetolanguagetag
parse given string value locale accepting localetostring format well bcp 47 language tags localevalue locale value following either locales tostring format en enuk etc also accepting spaces separators as alternative underscores bcp 47 eg enuk specified localeforlanguagetag java 7 corresponding locale instance null none illegalargumentexception case invalid locale specification 504 parselocalestring localeforlanguagetag
trim leading trailing whitespace given string str string check trimmed string javalangcharacteriswhitespace
convert delimited list eg row csv file set note suppress duplicates 42 elements returned set preserve original order linkedhashset str input string potentially null empty set string entries list removeduplicatestringsstring
trim leading whitespace given string str string check trimmed string javalangcharacteriswhitespace
append given string given string array returning new array consisting input array contents plus given string array array append can null str string append new array never null
trim all whitespace given string leading trailing characters str string check trimmed string javalangcharacteriswhitespace
check whether given charsequence contains whitespace characters str charsequence check may null true charsequence empty contains least 1 whitespace character characteriswhitespace
convert string array delimited string eg csv useful tostring implementations arr array display potentially null empty delim delimiter use typically delimited string
extract filename given java resource path eg mypathmyfiletxt myfiletxt path file path may null extracted filename null none
apply given relative path given java resource path assuming standard java folder separation ie separators path path start usually full file path relativepath relative path apply relative full file path above full file path results applying relative path
strip filename extension given java resource path eg mypathmyfiletxt mypathmyfile path file path path stripped filename extension
split string first occurrence delimiter include delimiter result tosplit string split potentially null empty delimiter split string potentially null empty two element array index 0 delimiter index 1 delimiter neither element includes delimiter null delimiter wasnt found given input string
test given string starts specified prefix ignoring upperlower case str string check prefix prefix look javalangstringstartswith
trim occurrences supplied trailing character given string str string check trailingcharacter trailing character trimmed trimmed string
parse given timezonestring value timezone timezonestring time zone string following timezonegettimezonestring throwing illegalargumentexception case invalid time zone specification corresponding timezone instance illegalargumentexception case invalid time zone specification
decode given encoded uri component value based following rules alphanumeric characters a z a z 0 9 stay same special characters stay same a sequence xy interpreted hexadecimal representation character source encoded string charset character set decoded value illegalargumentexception given source contains invalid encoded sequences 50 javaneturldecoderdecodestring string
count occurrences substring sub string str str string search sub string search
create new commonslogwriter given commons logging logger logger commons logging logger write
invoked main execution logic concrete subclasses beforeaccess
invoked main execution logic concrete subclasses this implementation applies concurrency throttle afteraccess
tokenize given path pattern parts based matchers settings performs caching based setcachepatterns delegating tokenizepathstring actual tokenization algorithm pattern pattern tokenize tokenized pattern parts
create new instance defaultpathseparator
actually match given path given pattern pattern pattern match path path string test fullmatch whether full pattern match required else pattern match far given base path goes sufficient true supplied path matched false didnt
set path separator use pattern parsing default ant
main entry point true string matches pattern false otherwise
returns length given pattern template variables considered 1 long
convenient alternative constructor use custom path separator pathseparator path separator use must null 41
compare two patterns determine match first ie specific regarding current path negative integer zero positive integer pattern1 specific equally specific less specific pattern2
build retrieve antpathstringmatcher given pattern the default implementation checks antpathmatchers internal cache see setcachepatterns creating new antpathstringmatcher instance cached copy found when encountering many patterns cache runtime the threshold 65536 turns default cache off assuming arbitrary permutations patterns coming in little chance encountering recurring pattern this method may overridden implement custom cache strategy pattern pattern match never null corresponding antpathstringmatcher never null setcachepatterns
test whether string matches pattern pattern pattern match never null str string must matched pattern never null true string matches pattern false otherwise
given full path returns comparator suitable sorting patterns order explicitness this comparator plain javautillistsortcomparator sort list specific patterns without uri templates wild cards come generic patterns given list following patterns hotelsnew hotelshotel hotels returned comparator sort list order indicated the full path given parameter used test exact matches given path hotels2 pattern hotels2 sorted hotels1 path full path use comparison comparator capable sorting patterns order explicitness
given pattern full path determine patternmapped part for example docscvscommithtml docscvscommithtml docs docscvscommit cvscommit docscvshtml docscvscommithtml commithtml docs docscvscommit cvscommit docshtml docscvscommithtml cvscommithtml html docscvscommithtml docscvscommithtml html docscvscommithtml docscvscommithtml docscvscommithtml docscvscommithtml assumes match returns true pattern path not enforce this
combine two patterns new pattern this implementation simply concatenates two patterns unless first pattern contains file extension match eg html case second pattern merged first otherwise illegalargumentexception thrown examples border1 pattern 1pattern 2result null null hotels nullhotels nullhotelshotels hotelsbookingshotelsbookings hotelsbookingshotelsbookings hotelsbookingshotelsbookings hotelsbookingshotelsbookings hotelshotelhotelshotel hotelshotelhotelshotel hotelshotelhotelshotel htmlhotelshtmlhotelshtml htmlhotelshotelshtml htmltxt illegalargumentexception pattern1 first pattern pattern2 second pattern combination two patterns illegalargumentexception two patterns cannot combined
serialize given object byte array object object serialize array bytes representing object portable fashion
deserialize byte array object bytes serialized object result deserializing bytes
recursively copy contents src filedirectory dest filedirectory src source directory dest destination directory ioexception case io errors
delete supplied file directories recursively delete nested directories files well root root file delete true file existed deleted false exist ioexception case io errors 50
delete supplied file directories recursively delete nested directories files well note like filedelete method throw exception rather silently returns false case io errors consider using deleterecursivelypath niostyle handling io errors clearly differentiating nonexistence failure delete existing file root root file delete true file successfully deleted otherwise false
recursively copy contents src filedirectory dest filedirectory src source directory dest destination directory ioexception case io errors 50
perform given callback operation matching methods given class locally declared equivalent thereof such default methods java 8 based interfaces given class implements clazz class introspect mc callback invoke method illegalstateexception introspection fails 42 dowithmethods
attempt find method supplied class supplied name parameters searches superclasses object returns null method found clazz class introspect name name method method object null none found
invoke given callback fields target class going class hierarchy get declared fields clazz target class analyze fc callback invoke field ff filter determines fields apply callback illegalstateexception introspection fails
get declared methods leaf class superclasses leaf class methods included first leafclass class introspect illegalstateexception introspection fails
rethrow given throwable exception presumably target exception invocationtargetexception called checked exception expected thrown target method rethrows underlying exception cast exception error appropriate otherwise throws undeclaredthrowableexception ex exception rethrow exception rethrown exception in case checked exception
rethrow given throwable exception presumably target exception invocationtargetexception called checked exception expected thrown target method rethrows underlying exception cast runtimeexception error appropriate otherwise throws undeclaredthrowableexception ex exception rethrow runtimeexception rethrown exception
determine whether given method explicitly declares given exception one superclasses means exception type propagated asis within reflective invocation method declaring method exceptiontype exception throw true exception thrown asis false needs wrapped
get unique set declared methods leaf class superclasses leaf class methods included first traversing superclass hierarchy methods found signatures matching method already included filtered out leafclass class introspect illegalstateexception introspection fails
set field represented supplied field field object specified object target object specified value accordance fieldsetobject object semantics new value automatically unwrapped underlying field primitive type thrown exceptions handled via call handlereflectionexceptionexception field field set target target object set field value value set may null
attempt find field field supplied class supplied name andor class type searches superclasses object clazz class introspect name name field may null type specified type type field may null name specified corresponding field object null found
determine whether given method equals method javalangobjectequalsobject
make given method accessible explicitly setting accessible necessary setaccessibletrue method called actually necessary avoid unnecessary conflicts jvm securitymanager if active method method make accessible javalangreflectmethodsetaccessible
invoke given callback locally declared fields given class clazz target class analyze fc callback invoke field illegalstateexception introspection fails 42 dowithfields
determine whether given field public static final constant field field check
determine whether given method originally declared javalangobject
invoke specified jdbc api method supplied target object supplied arguments method method invoke target target object invoke method args invocation arguments may null invocation result sqlexception jdbc api sqlexception rethrow if any invokemethodjavalangreflectmethod object object 5011 favor custom sqlexception handling
invoke specified method supplied target object supplied arguments target object null invoking static method thrown exceptions handled via call handlereflectionexception method method invoke target target object invoke method args invocation arguments may null invocation result
determine whether given method cglib renamed method following pattern cglibmethodname0 renamedmethod method check orgspringframeworkcglibproxyenhancerrename
obtain accessible constructor given class parameters clazz clazz check parametertypes parameter types desired constructor constructor reference nosuchmethodexception constructor exists 50
invoke specified jdbc api method supplied target object arguments method method invoke target target object invoke method invocation result sqlexception jdbc api sqlexception rethrow if any invokejdbcmethodjavalangreflectmethod object object 5011 favor custom sqlexception handling
given source object destination must class subclass copy fields including inherited fields designed work objects public noarg constructors illegalstateexception introspection fails
variant retrieves classgetdeclaredfields local cache order avoid jvms securitymanager check defensive array copying clazz class introspect cached array fields illegalstateexception introspection fails classgetdeclaredfields
invoke specified method supplied target object arguments target object null invoking static method thrown exceptions handled via call handlereflectionexception method method invoke target target object invoke method invocation result invokemethodjavalangreflectmethod object object
get field represented supplied field field object specified object target object accordance fieldgetobject semantics returned value automatically wrapped underlying field primitive type thrown exceptions handled via call handlereflectionexceptionexception field field get target target object get field fields current value
make given constructor accessible explicitly setting accessible necessary setaccessibletrue method called actually necessary avoid unnecessary conflicts jvm securitymanager if active ctor constructor make accessible javalangreflectconstructorsetaccessible
make given field accessible explicitly setting accessible necessary setaccessibletrue method called actually necessary avoid unnecessary conflicts jvm securitymanager if active field field make accessible javalangreflectfieldsetaccessible
variant retrieves classgetdeclaredmethods local cache order avoid jvms securitymanager check defensive array copying addition also includes java 8 default methods locally implemented interfaces since effectively treated like declared methods clazz class introspect cached array methods illegalstateexception introspection fails classgetdeclaredmethods
attempt find field field supplied class supplied name searches superclasses object clazz class introspect name name field corresponding field object null found
clear internal methodfield cache 424
handle given reflection exception called checked exception expected thrown target method throws underlying runtimeexception error case invocationtargetexception root cause throws illegalstateexception appropriate message undeclaredthrowableexception otherwise ex reflection exception handle
perform given callback operation matching methods given class superclasses or given interface superinterfaces the named method occurring subclass superclass appear twice unless excluded specified methodfilter clazz class introspect mc callback invoke method mf filter determines methods apply callback illegalstateexception introspection fails
attempt find method supplied class supplied name parameter types searches superclasses object returns null method found clazz class introspect name name method paramtypes parameter types method may null indicate signature method object null none found
get next power 2 number ex next power 2 119 128
create new fastbytearrayoutputstream specified initial capacity initialblocksize initial buffer size bytes
creates newly allocated byte array its size current size output stream valid contents buffer copied it current contents output stream byte array size tobytearrayunsafe
write buffers content given outputstream outputstream write
update message digest remaining bytes stream messagedigest message digest update
resize internal buffer size specified capacity targetcapacity desired size buffer illegalargumentexception given capacity smaller actual size content stored buffer already fastbytearrayoutputstreamsize
create new fastbytearrayoutputstreaminputstream backed given fastbytearrayoutputstream
create new buffer store linkedlist adds new buffer store least mincapacity bytes
update message digest next len bytes stream avoids creating new byte arrays use internal buffers performance messagedigest message digest update len many bytes read stream use update message digest
convert streams data byte array return byte array also replaces internal structures byte array conserve memory byte array made anyways mind well use it approach also means method called twice without writes between second call noop this method unsafe returns internal buffer callers modify returned buffer current contents output stream byte array size tobytearray
reset contents fastbytearrayoutputstream all currently accumulated output output stream discarded output stream used again
convert buffers contents string decoding bytes using platforms default character set length new string function character set hence may equal size buffer this method always replaces malformedinput unmappablecharacter sequences default replacement string platforms default character set plain javaniocharsetcharsetdecoder class used control decoding process required string decoded buffers contents
determine specified code instance matches filter
create new instance based includesexcludes collections a particular element match matches one element includes list match one element excludes list subclasses may redefine matching means default element match another equals according objectequalsobject if collections empty matchifempty defines element matches not includes collection includes excludes collection excludes matchifempty matching result includes excludes collections empty
determine specified instance matches one candidates if candidates collection null returns false instance instance check candidates list candidates true instance match candidates collection null
return string table describing tasks performed custom reporting call gettaskinfo use task info directly
return name last task
stop current task results undefined timing methods called without invoking least one pair start stop methods start
return name currently running task any 422 isrunning
start named task results undefined stop timing methods called without invoking method taskname name task start stop
return time taken last task
return last task taskinfo object
return informative string describing tasks performed custom reporting call gettaskinfo use task info directly
return array data tasks performed
resolve placeholders given text replacing corresponding system property values unresolvable placeholders default value ignored passed unchanged flag set true text string resolve ignoreunresolvableplaceholders whether unresolved placeholders ignored resolved string illegalargumentexception unresolvable placeholder placeholderprefix placeholdersuffix ignoreunresolvableplaceholders flag false
find available port sockettype randomly selected range minport maxport minport minimum port number maxport maximum port number available port number socket type illegalstateexception available port could found
find requested number available ports sockettype randomly selected range minport maxport numrequested number available ports find minport minimum port number maxport maximum port number sorted set available port numbers socket type illegalstateexception requested number available ports could found
find pseudorandom port number within range minport maxport minport minimum port number maxport maximum port number random port number within specified range
parse commaseparated string list mimetype objects mimetypes string parse list mime types invalidmimetypeexception string cannot parsed
sorts given list mimetype objects specificity given two mime types if either mime type plain mimetypeiswildcardtype wildcard type mime type without wildcard ordered other if two mime types different plain mimetypegettype types considered equal remain current order if either mime type plain mimetypeiswildcardsubtype wildcard subtype mime type without wildcard sorted other if two mime types different plain mimetypegetsubtype subtypes considered equal remain current order if two mime types different amount plain mimetypegetparameterstring parameters mime type parameters ordered other for example audiobasic audio audiobasiclevel1 audiobasic audiobasic texthtml audiobasic audiowave mimetypes list mime types sorted hrefhttptoolsietforghtmlrfc7231section532http 11 semantics content section 532
parse given string single mimetype mimetype string parse mime type invalidmimetypeexception string cannot parsed
tokenize given commaseparated string mimetype objects list unlike simple tokenization method takes account quoted parameters mimetypes string tokenize list tokens 513
generate random mime boundary bytes often used multipart mime types
return string representation given list mimetype objects mimetypes string parse list mime types illegalargumentexception string cannot parsed
lazily initialize securerandom generatemultipartboundary
register given common classes classutils cache
determine name package given fullyqualified class name eg javalang javalangstring class name fqclassname fullyqualified class name package name empty string class defined default package
check whether given class loadable given classloader clazz class check typically interface classloader classloader check 506
build string consists names classesinterfaces given collection basically like abstractcollectiontostring stripping class interface prefix every class name classes collection class objects may null string form comfoobar comfoobaz javautilabstractcollectiontostring
convert based fully qualified class name based resource path classname fully qualified class name corresponding resource path pointing class
determine whether given class public constructor given signature return available else return null essentially translates nosuchmethodexception null clazz clazz analyze paramtypes parameter types method constructor null found classgetconstructor
return qualified name given class usually simply class name component type class name arrays clazz class qualified name class
given class one superclasses least one methods supplied name with argument types includes nonpublic methods clazz clazz check methodname name method whether least one method given name
override thread context classloader environments bean classloader necessary ie bean classloader equivalent thread context classloader already classloadertouse actual classloader use thread context original thread context classloader null overridden
create composite interface class given interfaces implementing given interfaces one single class this implementation builds jdk proxy class given interfaces interfaces interfaces merge classloader classloader create composite class merged interface class illegalargumentexception specified interfaces expose conflicting method signatures or similar constraint violated javalangreflectproxygetproxyclass
return default classloader use typically thread context classloader available classloader loaded classutils class used fallback call method intend use thread context classloader scenario clearly prefer nonnull classloader reference example class path resource loading but necessarily classforname accepts null classloader reference well default classloader only null even system classloader isnt accessible threadgetcontextclassloader classloadergetsystemclassloader
return interfaces given class implements set including ones implemented superclasses if class interface gets returned sole interface clazz class analyze interfaces classloader classloader interfaces need visible may null accepting declared interfaces interfaces given object implements set
determine common ancestor given classes any clazz1 class introspect clazz2 class introspect common ancestor ie common superclass one interface extending other null none found given classes null class returned 326
return userdefined class given class usually simply given class original class case cglibgenerated subclass clazz class check userdefined class
check given class represents primitive wrapper ie boolean byte character short integer long float double clazz class check whether given class primitive wrapper class
return public static method class clazz class defines method methodname static method name args parameter types method static method null static method found illegalargumentexception method name blank clazz null
check given class represents array primitive wrappers ie boolean byte character short integer long float double clazz class check whether given class primitive wrapper array class
determine whether class identified supplied name present loaded return false either class one dependencies present cannot loaded classname name class check classloader class loader use may null indicates default class loader whether specified class present including superclasses interfaces illegalstateexception corresponding class resolvable readability mismatch inheritance hierarchy class typically missing dependency declaration jigsaw module definition superclass interface implemented class checked here
return qualified name given method consisting fully qualified interfaceclass name method name method method clazz clazz method invoked may null indicate methods declaring class qualified name method 434
resolve given class name class instance supports primitives like int array class names like string this effectively equivalent forname method arguments difference exceptions thrown case class loading failure classname name class classloader class loader use may null indicates default class loader class instance supplied name illegalargumentexception class name resolvable that is class could found class file could loaded illegalstateexception corresponding class resolvable readability mismatch inheritance hierarchy class typically missing dependency declaration jigsaw module definition superclass interface implemented class loaded here fornamestring classloader
determine name class file relative containing package eg stringclass clazz class file name class file
determine given type assignable given value assuming setting reflection considers primitive wrapper classes assignable corresponding primitive types type target type value value assigned type type assignable value
given method may come interface target class used current reflective invocation find corresponding target method one eg method may ifoobar target class may defaultfoo case method may defaultfoobar enables attributes method found note contrast orgspringframeworkaopsupportaoputilsgetmostspecificmethod method not resolve java 5 bridge methods automatically call orgspringframeworkcorebridgemethodresolverfindbridgedmethod bridge method resolution desirable eg obtaining metadata original method definition note since spring 311 java security settings disallow reflective access eg calls classgetdeclaredmethods etc implementation fall back returning originally provided method method method invoked may come interface targetclass target class current invocation may null may even implement method specific target method original method targetclass implement getinterfacemethodifpossible
check whether given class matches userspecified type name clazz class check typename type name match
return interfaces given instance implements set including ones implemented superclasses instance instance analyze interfaces interfaces given instance implements set
return path suitable use classloadergetresource also suitable use classgetresource prepending slash return value built taking package specified class file converting dots slashes adding trailing slash necessary concatenating specified resource name this as such function may used build path suitable loading resource file package class file although orgspringframeworkcoreioclasspathresource usually even convenient clazz class whose package used base resourcename resource name append leading slash optional builtup resource path classloadergetresource classgetresource
return interfaces given instance implements array including ones implemented superclasses instance instance analyze interfaces interfaces given instance implements array
determine name package given class eg javalang javalangstring class clazz class package name empty string class defined default package
return short string name java class uncapitalized javabeans property format strips outer class name case inner class clazz class short name rendered standard javabeans property format javabeansintrospectordecapitalizestring
check whether given class cachesafe given context ie whether loaded given classloader parent it clazz class analyze classloader classloader potentially cache metadata may null indicates system class loader
resolve given class primitive class returning corresponding primitive wrapper type instead clazz class check original class primitive wrapper original primitive type
get class name without qualified package name classname classname get short name class name class without package name illegalargumentexception classname empty
resolve given class name primitive class appropriate according jvms naming rules primitive classes also supports jvms internal class names primitive arrays not support suffix notation primitive arrays supported fornamestring classloader name name potentially primitive class primitive class null name denote primitive class primitive array class
determine corresponding interface method given method handle possible this particularly useful arriving public exported type jigsaw reflectively invoked without illegal access warning method method invoked potentially implementation class corresponding interface method original method none found 51 getmostspecificmethod
return descriptive name given objects type usually simply class name component type class name arrays appended list implemented interfaces jdk proxies value value introspect qualified name class
determine whether given class public method given signature return available else return null in case signature specified returns method unique candidate ie single public method specified name essentially translates nosuchmethodexception null clazz clazz analyze methodname name method paramtypes parameter types method may null indicate signature method null found classgetmethod
return userdefined class given instance usually simply class given instance original class case cglibgenerated subclass instance instance check userdefined class
determine whether given method overridable given target class method method check targetclass target class check
return number methods given name with argument types given class andor superclasses includes nonpublic methods clazz clazz check methodname name method number methods given name
check righthand side type may assigned lefthand side type assuming setting reflection considers primitive wrapper classes assignable corresponding primitive types lhstype target type rhstype value type assigned target type target type assignable value type typeutilsisassignable
convert based resource path based fully qualified class name resourcepath resource path pointing class corresponding fully qualified class name
check given class represents array primitives ie boolean byte char short int long float double clazz class check whether given class primitive array class
replacement classforname also returns class instances primitives eg int array class names eg string furthermore also capable resolving inner class names java source style eg javalangthreadstate instead javalangthreadstate name name class classloader class loader use may null indicates default class loader class instance supplied name classnotfoundexception class found linkageerror class file could loaded classfornamestring boolean classloader
determine whether given method declared user least pointing userdeclared method checks methodissynthetic for implementation methods well groovyobject interface for interface methods implementation class implementations groovyobject methods marked synthetic anyway note that despite synthetic bridge methods methodisbridge considered userlevel methods since eventually pointing userdeclared generic method method method check true method considered userdeclared false otherwise
check given class represents primitive ie boolean byte char short int long float double primitive wrapper ie boolean byte character short integer long float double clazz class check whether given class primitive primitive wrapper class
determine whether given class public method given signature return available else throws illegalstateexception in case signature specified returns method unique candidate ie single public method specified name essentially translates nosuchmethodexception illegalstateexception clazz clazz analyze methodname name method paramtypes parameter types method may null indicate signature method never null illegalstateexception method found classgetmethod
check whether given class visible given classloader clazz class check typically interface classloader classloader check may null case method always return true
given input class object return string consists classs package name pathname ie dots replaced slashes neither leading trailing slash added result could concatenated slash name resource fed directly classloadergetresource fed classgetresource instead leading slash would also prepended returned value clazz input class null value default empty package result empty string returned path represents package name classloadergetresource classgetresource
add given iterator composite
update message digest rest bytes stream using method optimized since avoids creating new byte arrays call messagedigest message digest update ioexception propagated read
update message digest next len bytes stream using method optimized since avoids creating new byte arrays call messagedigest message digest update len many bytes read stream use update message digest ioexception propagated read
raise overflow exception given number target class number number tried convert targetclass target class tried convert illegalargumentexception overflow
determine whether given value string indicates hex number ie needs passed integerdecode instead integervalueof etc
check biginteger bigdecimal long overflow returning given number long value number number convert targetclass target class convert long value convertible without overflow illegalargumentexception overflow raiseoverflowexception
decode javamathbiginteger supplied string value supports decimal hex octal notation bigintegerbigintegerstring int
convert given number instance given target class number number convert targetclass target class convert converted number illegalargumentexception target class supported ie standard number subclass included jdk javalangbyte javalangshort javalanginteger javalanglong javamathbiginteger javalangfloat javalangdouble javamathbigdecimal
parse given text number instance given target class using corresponding decode valueof method trims whitespace leading trailing characters input string attempting parse number supports numbers hex format with leading 0x 0x well text text convert targetclass target class parse parsed number illegalargumentexception target class supported ie standard number subclass included jdk bytedecode shortdecode integerdecode longdecode decodebigintegerstring floatvalueof doublevalueof javamathbigdecimalbigdecimalstring
parse given text number instance given target class using supplied numberformat trims input string attempting parse number text text convert targetclass target class parse numberformat numberformat use parsing if null method falls back parsenumberstring class parsed number illegalargumentexception target class supported ie standard number subclass included jdk javatextnumberformatparse convertnumbertotargetclass parsenumberstring class
template method creation new thread the default implementation creates new thread given runnable applying appropriate thread name runnable runnable execute nextthreadname
return thread group threads created or null default group
return target object call target method
algorithm judges match declared parameter types candidate method specific list arguments method supposed invoked with determines weight represents class hierarchy difference types arguments direct match ie type integer arg class integer increase result direct matches means weight 0 match type object arg class integer would increase weight 2 due superclass 2 steps hierarchy ie object last one still matches required type object type number class integer would increase weight 1 accordingly due superclass 1 step hierarchy ie number still matching required type number therefore arg type integer constructor integer would preferred constructor number would turn preferred constructor object argument weights get accumulated note algorithm used methodinvoker also algorithm used constructor factory method selection springs bean container in case lenient constructor resolution default regular bean definitions paramtypes parameter types match args arguments match accumulated weight arguments
invoke specified method the invoker needs prepared before object possibly null returned method invocation null method void return type invocationtargetexception target method threw exception illegalaccessexception target method couldnt accessed prepare
return name method invoked
prepare specified method method invoked number times afterwards getpreparedmethod invoke
return prepared method object invoked can example used determine return type prepared method object never null illegalstateexception invoker hasnt prepared yet prepare invoke
set target object call target method necessary target method static else target class sufficient settargetclass settargetmethod
find matching method specified name specified arguments matching method null none gettargetclass gettargetmethod getarguments
return target class call target method
create new messagedigest given algorithm necessary messagedigest threadsafe
execute task ref found reference or null entry found entry or null entries access underlying entries result task executereference entry
calculate shift value used create poweroftwo value specified maximum minimum values minimumvalue minimum value maximumvalue maximum value calculated shift use 1 shift obtain value
remove entries garbage collected longer referenced normal circumstances garbage collected entries automatically purged items added removed map method used force purge useful map read frequently updated less often
return reference entry specified key null found key key can null restructure types restructure allowed call reference null found
apply update operation segment segment locked update hash hash key key key task update operation result operation
convenience method used tasks need access entries ref found reference or null entry found entry or null result task executereference entry entries
return reference garbage collected purged underlying structure null references need purging method must thread safe ideally block returning null references returned once reference purge null
restructure underlying data structure becomes necessary method increase size references table well purge references garbage collected allowresize resizing permitted
clear items segment
create new concurrentreferencehashmap instance initialcapacity initial capacity map loadfactor load factor average number references per table exceeds value resize attempted concurrencylevel expected number threads concurrently write map referencetype reference type used entries soft weak
get hash given object apply additional hash function reduce collisions implementation uses wangjenkins algorithm concurrenthashmap subclasses override provide alternative hashing o object hash may null resulting hash code
factory method used create new reference entry entry contained reference hash hash next next reference chain null none new reference
return dataunit matching specified suffix suffix one standard suffix dataunit matching specified suffix illegalargumentexception suffix match enums constants
obtain datasize representing amount specified dataunit amount amount size measured terms unit positive negative corresponding datasize
obtain datasize text string 12mb using specified default dataunit unit specified string starts number followed optionally unit matching one supported dataunit suffixes examples 12kb parses 12 kilobytes 5mb parses 5 megabytes 20 parses 20 kilobytes where defaultunit dataunitkilobytes text text parse parsed datasize
build singletonsupplier given singleton instance instance singleton instance potentially null singleton supplier null instance null
build singletonsupplier given singleton instance default supplier case instance null instance singleton instance potentially null defaultsupplier default supplier fallback
build singletonsupplier given supplier supplier instance supplier potentially null singleton supplier null instance supplier null
get shared singleton instance supplier singleton instance or null none
obtain shared singleton instance supplier singleton instance never null illegalstateexception case instance
build singletonsupplier given instance supplier default supplier case instance null instancesupplier immediate instance supplier defaultsupplier default supplier fallback
resolve given supplier getting result immediately returning null supplier null supplier supplier resolve suppliers result null none
create invertiblecomparator sorts based provided order actual comparison specified comparator used comparator comparator decorate ascending sort order ascending true descending false
create invertiblecomparator sorts ascending default actual comparison specified comparator used comparator comparator decorate
return comparable adapter accepts null values sorts higher nonnull values nullsafecomparatornullshigh
return comparable adapter accepts null values sorts lower nonnull values nullsafecomparatornullslow
return comparable adapter comparablecomparatorinstance
add comparator end chain the comparator default ascending sort order unless invertiblecomparator comparator comparator add end chain invertiblecomparator
add comparator end chain using provided sort order comparator comparator add end chain ascending sort order ascending true descending false
replace comparator given index the comparator default ascending sort order unless invertiblecomparator index index comparator replace comparator comparator place given index invertiblecomparator
invert sort order sort definition contained compound comparator
construct compoundcomparator comparators provided array all comparators default ascending sort order unless invertiblecomparators comparators comparators build compound comparator invertiblecomparator
create new instancecomparator instance instanceorder ordered list classes used comparing objects classes earlier list given higher priority
create nullsafecomparator sorts null based provided flag decorating given comparator when comparing two nonnull objects specified comparator used given underlying comparator must able handle elements comparator applied to comparator comparator use comparing two nonnull objects nullslow whether treat nulls lower higher nonnull objects
create nullsafecomparator sorts null based provided flag working comparables when comparing two nonnull objects comparable implementation used means nonnull elements that comparator applied to need implement comparable as convenience use default shared instances nullsafecomparatornullslow nullsafecomparatornullshigh nullslow whether treat nulls lower higher nonnull objects comparable nullslow nullshigh
return xmleventwriter given stax result result jaxp 14 staxresult xmlstreamreader illegalargumentexception source isnt jaxp 14 staxresult custom stax result
return xmlstreamreader given stax source source jaxp 14 staxsource xmlstreamreader illegalargumentexception source isnt jaxp 14 staxsource custom stax source
variant createdefensiveinputfactory custom instance instancesupplier supplier input factory instance new defensively initialized input factory instance use 5012
return xmleventreader given stax source source jaxp 14 staxsource xmleventreader illegalargumentexception source isnt jaxp 14 staxsource custom stax source
return xmlstreamwriter given stax result result jaxp 14 staxresult xmlstreamreader illegalargumentexception source isnt jaxp 14 staxresult custom stax result
check reader closed throws xmlstreamexception so xmlstreamexception reader closed close
implementation throws illegalargumentexception property illegalargumentexception called
constructs new instance staxeventxmlreader reads given xmleventreader supplied event reader must xmlstreamconstantsstartdocument xmlstreamconstantsstartelement state reader xmleventreader read illegalstateexception reader start document element
construct new instance staxstreamxmlreader reads given xmlstreamreader supplied stream reader must xmlstreamconstantsstartdocument xmlstreamconstantsstartelement state reader xmleventreader read illegalstateexception reader start document element
convert namespace uri dom sax qualified name qname qualified name form prefixlocalname localname namespaceuri namespace uri qualifiedname qualified name qname
implementation throws saxnotrecognizedexception exception feature outside httpxmlorgsaxfeatures namespace returns false feature within
throws saxnotrecognizedexception exception given property signify lexical handler property name lexical handler httpxmlorgsaxpropertieslexicalhandler
throws saxnotrecognizedexception exception given property signify lexical handler property name lexical handler httpxmlorgsaxpropertieslexicalhandler
implementation throws saxnotrecognizedexception exception feature outside httpxmlorgsaxfeatures namespace accepts false value feature within
create new instance domcontenthandler given node node node publish events
start prefix mapping given prefix orgxmlsaxcontenthandlerstartprefixmappingstring string
parse stax xml reader passed constructiontime note given system identifier read ignored ignored ignored saxexception sax exception possibly wrapping xmlstreamexception
end prefix mapping given prefix orgxmlsaxcontenthandlerendprefixmappingstring
parse stax xml reader passed constructiontime note given inputsource read ignored ignored ignored saxexception sax exception possibly wrapping xmlstreamexception
convert qname qualified name used dom sax returned string format prefixlocalname prefix set localname not qname qname qualified name
enable indenting supplied javaxxmltransformtransformer if underlying xslt engine xalan special output key indentamount also set value defaultindentamount characters transformer target transformer indentamount size indent 2 characters 3 characters etc javaxxmltransformtransformersetoutputpropertystring string javaxxmltransformoutputkeysindent
disable indenting supplied javaxxmltransformtransformer transformer target transformer javaxxmltransformoutputkeysindent
consume next comment token update incomment flag return remaining content
try consume supplied token supplied content update comment parse state supplied value returns index content token 1 token found
detect validation mode xml document supplied inputstream note supplied inputstream closed method returning inputstream inputstream parse ioexception case io failure validationdtd validationxsd
supplied content contain xml opening tag parse state currently xml comment method always returns false expected comment tokens consumed supplied content passing remainder method
consumes leading comment data given string returns remaining content may empty since supplied content might comment data purposes important strip leading comment content line since first piece non comment content either doctype declaration root element document
construct new instance staxeventcontenthandler writes given xmleventwriter default xmleventfactory created eventwriter writer write events
construct new instance staxeventcontenthandler uses given event factory create events writes given xmleventconsumer eventwriter writer write events factory factory used create events
remove given prefix context prefix prefix removed
bind given prefix given namespace prefix namespace prefix namespaceuri namespace uri
remove declared prefixes
throws unsupportedoperationexception unsupportedoperationexception always
return xmleventwriter used staxresult if staxresult created xmlstreamwriter result null stax event writer used result staxresultjavaxxmlstreamxmleventwriter
return xmlstreamwriter used staxresult if staxresult created xmleventconsumer result null stax stream writer used result staxresultjavaxxmlstreamxmlstreamwriter
construct new instance staxresult specified xmleventwriter eventwriter xmleventwriter write
throws unsupportedoperationexception unsupportedoperationexception always
construct new instance staxresult specified xmlstreamwriter streamwriter xmlstreamwriter write
throws unsupportedoperationexception unsupportedoperationexception always
construct new instance staxsource specified xmleventreader supplied event reader must xmlstreamconstantsstartdocument xmlstreamconstantsstartelement state eventreader xmleventreader read illegalstateexception reader start document element
construct new instance staxsource specified xmlstreamreader supplied stream reader must xmlstreamconstantsstartdocument xmlstreamconstantsstartelement state streamreader xmlstreamreader read illegalstateexception reader start document element
throws unsupportedoperationexception unsupportedoperationexception always
return xmleventreader used staxsource if staxsource created xmlstreamreader result null stax event reader used source staxsourcestaxsourcejavaxxmlstreamxmleventreader
return xmlstreamreader used staxsource if staxsource created xmleventreader result null stax event reader used source staxsourcestaxsourcejavaxxmlstreamxmleventreader
extracts text value given dom element ignoring xml comments appends characterdata nodes entityreference nodes single string value excluding comment nodes exposes actual userspecified text default values kind characterdata entityreference comment
retrieves child elements given dom element match given element names looks direct child level given element go depth in contrast dom apis getelementsbytagname method ele dom element analyze childelenames child element names look list child orgw3cdomelement instances orgw3cdomelement orgw3cdomelementgetelementsbytagname
utility method returns first child element value identified name ele dom element analyze childelename child element name look extracted text value null child element found
retrieves child elements given dom element ele dom element analyze list child orgw3cdomelement instances
utility method returns first child element identified name ele dom element analyze childelename child element name look orgw3cdomelement instance null none found
namespaceaware equals comparison returns true either nodegetlocalname nodegetnodename equals desiredname otherwise returns false
create new adapter given completablefuture
expose listenablefuture jdk completablefuture 50
constructs new futureadapter given adaptee adaptee future delegate
retrieve value this method returns value set via setobject throws javautilconcurrentexecutionexception exception set via setexceptionthrowable throws javautilconcurrentcancellationexception future cancelled value associated future
retrieve value this method returns value set via setobject throws javautilconcurrentexecutionexception exception set via setexceptionthrowable throws javautilconcurrentcancellationexception future cancelled timeout maximum time wait unit unit timeout argument value associated future
set exception future method return true exception set successfully false future already set cancelled exception value set true exception successfully set else false
trigger listenablefuturecallbackonfailurethrowable call added callbacks given throwable ex exception trigger callbacks
add given failure callback registry callback failure callback add 41
add given callback registry callback callback add
add given success callback registry callback success callback add 41
trigger listenablefuturecallbackonsuccessobject call added callbacks given result result result trigger callbacks
create instance supplied settings initialinterval initial interval milliseconds multiplier multiplier should greater equal 1
value multiply current interval retry attempt
create instance interval interval two attempts maxattempts maximum number attempts
invoke original super method specified object obj enhanced object must object passed first argument methodinterceptor args arguments passed intercepted method may substitute different argument array long types compatible throwable bare exceptions thrown called method passed without wrapping invocationtargetexception methodinterceptorintercept
invoke original method different object type obj compatible object recursion result use object passed first argument methodinterceptor usually want args arguments passed intercepted method may substitute different argument array long types compatible throwable bare exceptions thrown called method passed without wrapping invocationtargetexception methodinterceptorintercept
return methodproxy used intercepting method matching given signature type class generated enhancer sig signature match methodproxy instance null applicable matching method found illegalargumentexception class created enhancer use methodinterceptor
return orgspringframeworkcglibreflectfastclass method index method used invokesuper index uniquely identifies method within generated proxy therefore useful reference external metadata getsupername
internal use enhancer only see orgspringframeworkcglibreflectfastmethod class similar functionality
helper method create intercepted object finer control generated instance use new instance enhancer instead static method superclass class extend interface implement interfaces array interfaces implement null filter callback filter use generating new class callbacks callback implementations use enhanced object
method called regular flow technically speaking wrapcachedclassclass uses enhancerfactorydata cache value latter enables faster instantiation plain old reflection lookup invoke method left intact backward compatibility reasons case ever used type class instantiate newly created proxy instance exception something goes wrong
generate new class necessary uses specified callbacks if any create new object instance uses constructor superclass matching argumenttypes parameter given arguments argumenttypes constructor signature arguments compatible wrapped arguments pass constructor new instance
filter list constructors superclass constructors remain included generated class default implementation filter private constructors subclasses may extend enhancer override behavior sc superclass constructors list declared constructors superclass illegalargumentexception nonprivate constructors
generate new class necessary return without creating new instance ignores callbacks set create new instance use reflection methods called constructor intercepted avoid problem use multiarg create method createclass object
instantiates proxy instance assigns callback values implementation detail javalangreflect instances cached method used hot path method used setusecacheboolean set false type class instantiate newly created instance
creates proxy instance given argument types assigns callbacks ideally proxy class one set argument types used otherwise would spend time constructor lookup technically reimplementation enhancercreateusingreflectionclass cache setthreadcallbacks primaryconstructor argumenttypes constructor argument types arguments constructor arguments callbacks callbacks set new instance newly created proxy createusingreflectionclass
determine class generated using enhancer type class whether class generated using enhancer
helper method create intercepted object finer control generated instance use new instance enhancer instead static method type class extend interface implement callback callback use methods
set array callback types use may used instead setcallbacks calling createclass since may possible array actual callback instances must use callbackfilter specify index array method proxied class callbacktypes array callback types
set array callbacks use ignored use createclass must use callbackfilter specify index array method proxied class callbacks callback array setcallbackfilter setcallback
helper method create intercepted object finer control generated instance use new instance enhancer instead static method superclass class extend interface implement interfaces array interfaces implement null callback callback use methods
generate new class necessary uses specified callbacks if any create new object instance uses noarg constructor superclass new instance
set class generated class extend convenience supplied superclass actually interface setinterfaces called appropriate argument instead noninterface argument must declared final must accessible constructor superclass class extend interface implement setinterfacesclass
override default naming policy namingpolicy custom policy null use default defaultnamingpolicy
set strategy use create bytecode generator default instance defaultgeneratorstrategy used
use addcustomizerkeyfactorycustomizer instead
constructor allows wrapping invalidmimetypeexception
create new invalidmediatypeexception given media type mediatype offending media type message detail message indicating invalid part
return value literal name parameter null defined
return charset defined literal filename parameter null defined
return value literal creationdate parameter null defined
encode given header field param describe rfc 5987 input header field param charset charset header field param string usascii utf8 iso88591 charsets supported encoded header field param hrefhttpstoolsietforghtmlrfc5987rfc 5987
return value literal readdate parameter null defined
decode given header field param describe rfc 5987 only usascii utf8 iso88591 charsets supported input header field param encoded header field param hrefhttpstoolsietforghtmlrfc5987rfc 5987
return disposition type like example literal inline literal attachment literal formdata null defined
return value literal filename parameter or value literal filename one decoded defined rfc 5987 null defined
return header value content disposition defined rfc 2183 parsestring
return value literal size parameter null defined
return value literal modificationdate parameter null defined
private constructor see static factory methods class
parse literal contentdisposition header value defined rfc 2183 contentdisposition literal contentdisposition header value parsed content disposition tostring
constructor method url headers body body body headers headers method method url url
constructor method url headers body type body body headers headers method method url url type type used generic type resolution 43
return type requests body requests body type null known 43
return http method request http method httpmethod enum value
factory method obtain builder serverdefined cookie starts namevalue pair may also include attributes name cookie name value cookie value created cookie instance
return cookie samesite attribute null set this limits scope cookie attached site requests strict crosssite requests lax hrefhttpstoolsietforghtmldraftietfhttpbisrfc6265bissection4127rfc6265 bis 51
private constructor see fromstring string
return cookie domain attribute null set
return cookie path attribute null set
return enum constant type corresponding series statuscode http status code potentially nonstandard enum constant type corresponding series illegalargumentexception enum corresponding constant
return enum constant type specified numeric value statuscode numeric value enum returned enum constant specified numeric value illegalargumentexception enum constant specified numeric value
resolve given status code httpstatus possible statuscode http status code potentially nonstandard corresponding httpstatus null found 50
return string representation status code
resolve given status code httpstatusseries possible statuscode http status code potentially nonstandard corresponding series null found 513
shortcut creating responseentity given body plain httpstatusok ok status empty body plain httpstatusnotfound found status case plain optionalempty parameter created responseentity 51
create builder given status status response status created builder 41
shortcut creating responseentity given body status set plain httpstatusok ok created responseentity 41
create new builder plain httpstatuscreated created status location header set given uri location location uri created builder 41
return http status code response http status int value 43
create new httpentity given body headers status code used behind nested builder api body entity body headers entity headers status status code as httpstatus integer value
create new httpentity given body headers status code body entity body headers entity headers status status code
return http status code response http status httpstatus enum entry
return replica instance quality value removed instance media type doesnt contain quality value new one otherwise
sorts given list mediatype objects quality value given two media types if two media types different plain getqualityvalue quality value media type highest quality value ordered other if either media type plain iswildcardtype wildcard type media type without wildcard ordered other if two media types different plain gettype types considered equal remain current order if either media type plain iswildcardsubtype wildcard subtype media type without wildcard sorted other if two media types different plain getsubtype subtypes considered equal remain current order if two media types different amount plain getparameterstring parameters media type parameters ordered other mediatypes list media types sorted getqualityvalue
return quality factor indicated q parameter any defaults 10 quality factor double value
parse commaseparated string list mediatype objects this method used parse accept contenttype header mediatypes string parse list media types invalidmediatypeexception media type value cannot parsed
sorts given list mediatype objects specificity given two media types if either media type plain iswildcardtype wildcard type media type without wildcard ordered other if two media types different plain gettype types considered equal remain current order if either media type plain iswildcardsubtype wildcard subtype media type without wildcard sorted other if two media types different plain getsubtype subtypes considered equal remain current order if two media types different plain getqualityvalue quality value media type highest quality value ordered other if two media types different amount plain getparameterstring parameters media type parameters ordered other for example audiobasic audio audio audioq07 audioq03 audiobasiclevel1 audiobasic audiobasic texthtml audiobasic audiowave mediatypes list media types sorted hrefhttptoolsietforghtmlrfc7231section532http 11 semantics content section 532
parse given list potentially commaseparated strings list mediatype objects this method used parse accept contenttype header mediatypes string parse list media types invalidmediatypeexception media type value cannot parsed 432
parse given string single mediatype mediatype string parse media type invalidmediatypeexception media type value cannot parsed
return replica instance quality value given mediatype instance given mediatype doesnt quality value new one otherwise
sorts given list mediatype objects specificity primary criteria quality value secondary mediatypesortbyspecificitylist mediatypesortbyqualityvaluelist
recreate given mime type media type 50
parse mimetypes file found resources format is comments begin format mime type space separated file extensions example textplain txt text would map filetxt filetext to mime type textplain multivalue map mapping media types file extensions
determine media type given resource possible resource resource introspect corresponding media type null none found
determine media types given file name possible filename file name plus extension corresponding media types empty list none found
resolve given method value httpmethod method method value string corresponding httpmethod null found 424
create new httpentity given body headers body entity body headers entity headers
returns body entity
parse given commaseparated string list httprange objects this method used parse range header ranges string parse list ranges illegalargumentexception string cannot parsed number ranges greater 100
turn resource resourceregion using range information contained current httprange resource resource select region selected region given resource 43
convert httprange resourceregion selecting appropriate segment given resource using http range information ranges list ranges resource resource select regions list regions given resource illegalargumentexception sum ranges exceeds resource length 43
return string representation given list httprange objects this method used range header ranges ranges create string string representation
return http method request http method httpmethod enum value null resolvable eg case nonstandard http method getmethodvalue httpmethodresolvestring
create primary logger given class wrap composite delegates fallback logger orgspringframeworkwebhttplogging primary enabled primaryloggerclass class name primary logger resulting composite logger
return new location resource specified location header returns null location unknown
return parsed representation literal contentdisposition header 50 setcontentdispositioncontentdisposition
helps format http header values http header values contain commaseparated values become confusing regular map formatting also uses commas entries headers headers format headers string 514
return values given header name even header set multiple times headername header name associated values 43
turn given list header values commadelimited result headervalues list header values combined result delimitation
retrieve combined result field values etag header headername header name combined result 43
parse first header value given header name date return null value also case invalid value if rejectinvalidfalse raise illegalargumentexception value cannot parsed date headername header name rejectinvalid whether reject invalid values illegalargumentexception true rather return null case false parsed date header null none or invalid
return plain mediatype media type body specified contenttype header returns null contenttype unknown
set new value host header if given plain inetsocketaddressgetport port 0 host header contain plain inetsocketaddressgethoststring host name 50
set given single header value given name headername header name headervalue header value unsupportedoperationexception adding headers supported putstring list addstring string
return value cachecontrol header
return value accesscontrolalloworigin response header
set value plain authorization authorization header basic authentication based given username password username username password password charset charset use convert credentials octet sequence defaults plain standardcharsetsiso88591 iso88591 illegalargumentexception username password contains characters cannot encoded given charset 51 hrefhttpstoolsietforghtmlrfc7617rfc 7617
set list acceptable plain charset charsets specified acceptcharset header
construct new httpheaders instance backed existing map 51
return first locale content languages specified literal contentlanguage header returns null content language unknown use getvaluesaslistcontentlanguage need get multiple content languages 50
parse first header value given header name date return null value raise illegalargumentexception value cannot parsed date headername header name parsed date header null none 50
set acceptable language ranges specified literal acceptlanguage header 50
return httpheaders object read written to 511
retrieve combined result field values multivalued headers headername header name combined result 43
return value pragma header
set new entity tag body specified etag header
variant setacceptlanguagelist using locales 50
return value host header available if header value contain port plain inetsocketaddressgetport port returned address 0 50
return set allowed httpmethod http methods specified allow header returns empty set allowed methods unspecified
sets new value range header
set given header value remove header null headername header name headervalue header value null none
return httpheaders object read written to
return value accesscontrolmaxage response header returns 1 max age unknown
return length body bytes specified contentlength header returns 1 contentlength unknown
set contentdisposition header creating multipartformdata request applications typically would set header directly rather prepare multivaluemap object containing object orgspringframeworkcoreioresource part pass resttemplate webclient name control name filename filename may null getcontentdisposition
return language ranges literal acceptlanguage header if need sorted preferred locales use getacceptlanguageaslocales need filter based list supported locales pass returned list localefilterlist collection illegalargumentexception value cannot converted language range 50
return value range header returns empty list range unknown
parse first header value given header name date return 1 value also case invalid value if rejectinvalidfalse raise illegalargumentexception value cannot parsed date headername header name rejectinvalid whether reject invalid values illegalargumentexception true rather return 1 case false parsed date header 1 none or invalid getfirstzoneddatetimestring boolean
return list acceptable plain charset charsets specified acceptcharset header
return value accesscontrolallowmethods response header
variant getacceptlanguage converts javautillocalelanguagerange locale locales empty list illegalargumentexception value cannot converted locale 50
return first header value given header name any headername header name first header value null none
return entity tag body specified etag header
set plain mediatype media type body specified contenttype header
return value origin header
return value upgrade header
add given single header value given name headername header name headervalue header value unsupportedoperationexception adding headers supported putstring list setstring string
return value accesscontrolrequestmethod request header
add maxage directive this directive well suited publicly caching resources knowing wont change within configured amount time additional directives also used case resources shouldnt cached cacheprivate transformed notransform shared caches in order prevent caches reuse cached response even become stale ie maxage delay passed mustrevalidate directive set mustrevalidate maxage maximum time response cached unit time unit maxage argument this facilitate method chaining hrefhttpstoolsietforghtmlrfc7234section5228rfc7234 section 5228
add nostore directive this directive well suited preventing caches browsers proxies cache content responses this facilitate method chaining hrefhttpstoolsietforghtmlrfc7234section5223rfc7234 section 5223
add nocache directive this directive well suited telling caches response reused client revalidates server directive wont disable cache altogether may result clients sending conditional requests with etag ifmodifiedsince headers server responding 304 modified status in order disable caching minimize requestsresponses exchanges nostore directive used instead nocache this facilitate method chaining hrefhttpstoolsietforghtmlrfc7234section5222rfc7234 section 5222
add public directive this directive indicates cache may store response even response would normally noncacheable cacheable within private cache this facilitate method chaining hrefhttpstoolsietforghtmlrfc7234section5225rfc7234 section 5225
add stalewhilerevalidate directive this directive indicates caches may serve response appears becomes stale indicated number seconds cached response served stale due presence extension cache attempt revalidate still serving stale responses ie without blocking stalewhilerevalidate maximum time response used revalidated unit time unit stalewhilerevalidate argument this facilitate method chaining hrefhttpstoolsietforghtmlrfc5861section3rfc5861 section 3
return cachecontrol header value header value potentially empty
add smaxage directive this directive indicates that shared caches maximum age specified directive overrides maximum age specified directives smaxage maximum time response cached unit time unit smaxage argument this facilitate method chaining hrefhttpstoolsietforghtmlrfc7234section5229rfc7234 section 5229
add proxyrevalidate directive this directive meaning mustrevalidate directive except apply private caches ie browsers http clients this facilitate method chaining hrefhttpstoolsietforghtmlrfc7234section5227rfc7234 section 5227
add notransform directive this directive indicates intermediaries caches others transform response content useful force caches cdns automatically gzip optimize response content this facilitate method chaining hrefhttpstoolsietforghtmlrfc7234section5224rfc7234 section 5224
return cachecontrol header value any header value null directive added
add staleiferror directive this directive indicates error encountered cached stale response may used satisfy request regardless freshness information staleiferror maximum time response used errors encountered unit time unit staleiferror argument this facilitate method chaining hrefhttpstoolsietforghtmlrfc5861section4rfc5861 section 4
add private directive this directive indicates response message intended single user must stored shared cache this facilitate method chaining hrefhttpstoolsietforghtmlrfc7234section5226rfc7234 section 5226
add mustrevalidate directive this directive indicates become stale cache must use response satisfy subsequent requests without successful validation origin server this facilitate method chaining hrefhttpstoolsietforghtmlrfc7234section5221rfc7234 section 5221
use javaxservletservletrequestgetparametermap reconstruct body form post providing predictable outcome opposed reading body fail code used servletrequest access parameter thus causing input stream consumed
construct new instance servletserverhttprequest based given httpservletrequest servletrequest servlet request
construct new instance servletserverhttpresponse based given httpservletresponse servletresponse servlet response
constructor accepting request response pair expected type servletserverhttprequest servletserverhttpresponse respectively
return http status code response http status integer value 501
apply beforecommitsupplier beforecommit actions apply response status headerscookies write response body writeaction action write response body may null completion publisher
invoke setcomplete without writing rfc 7302 allows http head response without contentlength its something computed streaming response
apply fluxreduceobject bifunction reduce body count number bytes produced release data buffers without writing set literal contentlength header
return servlet path servlet deployed checking servlet registration initservletconfig path empty string servlet deployed without prefix ie null method invoked initservletconfig servlet container callback
set size input buffer used reading bytes by default set 8192
cannot combine errorlistener handlerresultsubscriber due to httpsissuesjbossorgbrowsewfly8515
completion signal upstream write publisher also used subclasses delegate completion notifications container
invoked writing possible either thread check via iswritepossible callback underlying container
invoked error completion callback underlying container cancel upstream subscription
error signal upstream write publisher also used subclasses delegate error notifications container
template method invoked data item write received via subscriberonnextobject default implementation saves data item writing possible
create instance given log prefix 51
completion signal upstream write publisher also used subclasses delegate completion notifications container
error signal upstream write publisher also used subclasses delegate error notifications container
create instance given log prefix 51
invoked error completion callback underlying container cancel upstream subscription
invoke delegate error signal subscriber
invoke delegate completion signal subscriber
return ssl session information request transmitted secure protocol including ssl certificates available session information null none available 502
return remote address request connected to available
invoked reading possible either thread check via checkondataavailable callback underlying container
subclasses call delegate container error notifications
read publish data one time data demand perhaps completed mean time true demand false demand completed
subclasses call method delegate contain notification data read
method parsing query namevalue pairs return value turned immutable map cached note method invoked lazily first access getqueryparams invocation synchronized parsing threadsafe nevertheless
constructor uri headers request uri uri request contextpath context path request headers headers request
internal use logging http adapter layer 51
obtain request id use null case object identity request instance used 51
read request body inputstream return databuffer invoked servletinputstreamisready returns true databuffer data read eofbuffer input stream returned 1 null 0 bytes read
write databuffer response body outputstream invoked servletoutputstreamisready returns true readable bytes databuffer greater 0 number bytes written
template method preparing given httpurlconnection the default implementation prepares connection input output sets http method connection connection prepare httpmethod http request method get post etc ioexception case io errors
opens returns connection given url the default implementation uses given plain setproxyjavanetproxy proxy open connection url url open connection proxy proxy use may null opened connection ioexception case io errors
setting settaskexecutor taskexecutor property required calling method
create new instance interceptingclienthttprequestfactory given parameters requestfactory request factory wrap interceptors interceptors applied can null
create new instance httpcomponentsasyncclienthttprequestfactory given httpasyncclient instance default httpclient asyncclient httpasyncclient instance use request factory 4310
create new instance httpcomponentsasyncclienthttprequestfactory default httpasyncclient httpclient
set httpasyncclient used plain createasyncrequesturi httpmethod synchronous execution 4310 sethttpclienthttpclient
create new instance httpcomponentsasyncclienthttprequestfactory given httpclient httpasyncclient instances httpclient httpclient instance use request factory asyncclient httpasyncclient instance use request factory 4310
create new instance httpcomponentsasyncclienthttprequestfactory given closeablehttpclient closeablehttpasyncclient instances httpclient closeablehttpclient instance use request factory asyncclient closeablehttpasyncclient instance use request factory
create new instance httpcomponentsasyncclienthttprequestfactory given closeablehttpasyncclient instance default httpclient asyncclient closeablehttpasyncclient instance use request factory
set closeablehttpasyncclient used plain createasyncrequesturi httpmethod asynchronous execution 4310 favor setasyncclienthttpasyncclient
return closeablehttpasyncclient used plain createasyncrequesturi httpmethod asynchronous execution 4310 favor getasyncclient
create factory given okhttpclient instance client client use
set underlying write timeout milliseconds value 0 specifies infinite timeout
create factory default okhttpclient instance
set underlying connect timeout milliseconds value 0 specifies infinite timeout
set underlying read timeout milliseconds value 0 specifies infinite timeout
create abstractclienthttprequestfactorywrapper wrapping given request factory requestfactory request factory wrapped
implementation simply calls createrequesturi httpmethod clienthttprequestfactory wrapped request factory provided plain abstractclienthttprequestfactorywrapperclienthttprequestfactory constructor
add given headers given http connection connection connection add headers headers headers add
return multivaluemap configured parts
variant partstring object also accepts mediatype used determine encode part name name part add part part data contenttype media type part builder allows customization part headers
variant asyncpartstring publisher class accepts parameterizedtypereference element type allows specifying generic type information name name part add publisher part contents typereference type elements contained publisher builder allows customization part headers
add asynchronous part publisherbased content name name part add publisher part contents elementclass type elements contained publisher builder allows customization part headers
add given headers given http request httprequest request add headers headers headers add
create new instance interceptingasyncclienthttprequest requestfactory async request factory interceptors list interceptors uri request uri httpmethod http method
set socket read timeout underlying requestconfig timeout value 0 specifies infinite timeout additional properties configured specifying requestconfig instance custom httpclient timeout timeout value milliseconds requestconfiggetsockettimeout
create default requestconfig use given client return null indicate custom request config set defaults httpclient used the default implementation tries merge defaults client local customizations factory instance any client httpclient or httpasyncclient check actual requestconfig use may null 42 mergerequestconfigrequestconfig
merge given httpclientlevel requestconfig factorylevel requestconfig necessary clientconfig config held current merged request config 42
set connection timeout underlying requestconfig timeout value 0 specifies infinite timeout additional properties configured specifying requestconfig instance custom httpclient this options affect connection timeouts ssl handshakes connect requests that required use orgapachehttpconfigsocketconfig httpclient itself timeout timeout value milliseconds requestconfiggetconnecttimeout orgapachehttpconfigsocketconfiggetsotimeout
create commons httpmethodbase object given http method uri specification httpmethod http method uri uri commons httpmethodbase object
template methods creates httpcontext given http method uri the default implementation returns null httpmethod http method uri uri http context
shutdown hook closes underlying orgapachehttpconnhttpclientconnectionmanager clientconnectionmanagers connection pool any
set timeout milliseconds used requesting connection connection manager using underlying requestconfig timeout value 0 specifies infinite timeout additional properties configured specifying requestconfig instance custom httpclient connectionrequesttimeout timeout value request connection milliseconds requestconfiggetconnectionrequesttimeout
set httpclient used plain createrequesturi httpmethod synchronous execution
create new instance interceptingasyncclienthttprequestfactory delegated request factory list interceptors delegate request factory delegate interceptors list interceptors use
create new netty4clienthttprequestfactory default nioeventloopgroup
template method changing properties given socketchannelconfig the default implementation sets connect timeout based set property config channel configuration
create new netty4clienthttprequestfactory given eventloopgroup note given group not plain eventloopgroupshutdowngracefully shutdown factory becomes responsibility caller
apply beforecommitsupplier beforecommit actions apply request headerscookies write request body writeaction action write request body may null completion publisher
return configured connectionprovider
add consumer configuring global reactor netty resources startup option used setuseglobalresources also enabled consumer consumer apply setuseglobalresourcesboolean
return configured loopresources
return configured bytebufferpool
return configured executor
configure thread prefix initialize queuedthreadpool executor with used executor instance isnt setexecutorexecutor provided by default set jettyhttp threadprefix thread prefix use
return configured scheduler
constructor preconfigured httpclient instance httpclient client use 51
constructor initialized httpclient
constructor jettyresourcefactory manage shared resources resourcefactory jettyresourcefactory use customizer lambda used customize httpclient
create new clienthttprequest via templates clienthttprequestfactory url url connect method http method execute get post etc created request ioexception case io errors getrequestfactory clienthttprequestfactorycreaterequesturi httpmethod
set request factory accessor uses obtaining client request handles the default simpleclienthttprequestfactory based jdks http libraries javanethttpurlconnection note standard jdk http library support http patch method configure apache httpcomponents okhttp request factory enable patch createrequesturi httpmethod simpleclienthttprequestfactory orgspringframeworkhttpclienthttpcomponentsasyncclienthttprequestfactory orgspringframeworkhttpclientokhttp3clienthttprequestfactory
create new interceptor adds basic authentication given username password encoded using specified charset username username use password password use charset charset use httpheaderssetbasicauthstring string charset
overridden expose interceptingclienthttprequestfactory necessary getinterceptors
set request interceptors accessor use the interceptors get sorted according order clienthttprequestfactory built getrequestfactory annotationawareordercomparator
return uri wrapped request
create new httprequest wrapping given request object request request object wrapped
return headers wrapped request
return method wrapped request
return method value wrapped request
set request factory accessor uses obtaining orgspringframeworkhttpclientclienthttprequest httprequests
return request factory accessor uses obtaining orgspringframeworkhttpclientclienthttprequest httprequests
create new orgspringframeworkhttpclientasyncclienthttprequest via templates orgspringframeworkhttpclientasyncclienthttprequestfactory url url connect method http method execute get post etc created request ioexception case io errors
create new interceptor adds basic authorization header given username password username username use password password use
serverside alternative writepublisher resolvabletype mediatype reactivehttpoutputmessage map additional context available actualtype actual return type method returned value annotated controllers methodparameter accessed via resolvabletypegetsource elementtype type objects input stream mediatype content type use possibly null indicating default content type writer used request current request response current response mono indicates completion writing error
set default character set use reading form data request contenttype header explicitly specify it by default set utf8
get additional hints encoding example based server request annotations controller method parameters default delegate encoder instance httpmessageencoder
create instance wrapping given encoder
get decoding hints based server request annotations target controller method parameter actualtype actual source type encode possibly reactive wrapper sourced orgspringframeworkcoremethodparameter ie providing access method annotations elementtype element type within fluxmono were trying encode request current request response current response map hints possibly empty
serverside alternative readmonoresolvabletype reactivehttpinputmessage map additional context available actualtype actual type target method parameter annotated controllers methodparameter accessed via resolvabletypegetsource elementtype type objects output stream request current request response current response hints additional information read body decoded stream elements
serverside alternative readresolvabletype reactivehttpinputmessage map additional context available actualtype actual type target method parameter annotated controllers methodparameter accessed via resolvabletypegetsource elementtype type objects output stream request current request response current response hints additional information read body decoded stream elements
return id field event available
return event field event available
return retry field event available
return comment event available
return data field event available
set default character set use writing form data response contenttype header explicitly specify it by default set utf8
create instance wrapping given decoder
get additional hints decoding example based server request annotations controller method parameters default delegate decoder instance httpmessagedecoder
determine contenttype http message based contenttype header otherwise default mediatypeapplicationoctetstream inputmessage http message mediatype possibly null
return configured encoder any
return configured decoder
configure streaming media types flushing performed automatically vs end stream by default set mediatypeapplicationstreamjson mediatypes one media types add list httpmessageencodergetstreamingmediatypes
determine json encoding use given mime type mimetype mime type requested caller json encoding use never null 505
constructor jackson objectmapper use
tokenize given flux flux databuffers source data buffers jsonfactory factory use tokenizearrayelements true top level json object array element returned individually immediately received result token buffers
constructor jackson objectmapper use
constructor explicit list writers serializing parts writer plain form data fall back media type specified actual map consists string values only partwriters writers serializing parts formwriter fallback writer form data null default
constructor default list part writers string resource
set character set use part headers contentdisposition and filename parameter by default set utf8
construct new protobufdecoder initializer allows registration message extensions extensionregistry message extension registry
create new messagebuilder instance given class this method uses concurrenthashmap caching method lookups
parse message size varint input stream updating messagebytestoread offset fields needed allow processing upcoming chunks inspired codedinputstreamreadrawvarint32int javaioinputstream code true message size parsed successfully code false message size truncated href httpsdevelopersgooglecomprotocolbuffersdocsencodingvarintsbase 128 varints
create new messagebuilder instance given class this method uses concurrenthashmap caching method lookups
returns qualified name given class according mapping rules jaxb specification
return readers need end others
return writers support specific types formultipart whether returns writers general use false multipart requests true generally two sets except multipart writer itself
return object writers json xml sse formultipart whether returns writers general use false multipart requests true generally two sets except multipart writer itself
return object readers json xml sse
return writers need end others
return readers support specific types
constructor base basedefaultcodecs use client server specific variant
internal method returns configured writers formultipart whether returns writers general use false multipart requests true generally two sets except multipart writer itself
return list supported charset charsets by default returns charsetavailablecharsets overridden subclasses list accepted charsets
sets cache directory property set existing directory converter cache image data
sets default contenttype used writing illegalargumentexception given content type supported java image io api
returns default contenttype used writing called write invoked without specified content type parameter
implementation sets default headers calling adddefaultheaders calls writeinternal
create new instance resourcehttpmessageconverter supportsreadstreaming whether converter support read streaming ie convert inputstreamresource 50
create new instance resourcehttpmessageconverter supports read streaming ie convert httpinputmessage inputstreamresource
implementation sets default headers calling adddefaultheaders calls writeinternal
return default character set any 43
implementation checks given class plain supportsclass supported plain getsupportedmediatypes supported media types plain mediatypeincludesmediatype include given media type
set list mediatype objects supported converter
returns default content type given type called write invoked without specified content type parameter by default returns first element setsupportedmediatypeslist supportedmediatypes property any overridden subclasses type return content type content type null known
returns content length given type by default returns null meaning content length unknown overridden subclasses type return content length content length null known
returns true plain setsupportedmediatypeslist supported media types mediatypeincludesmediatype include given media type mediatype media type read null specified typically value contenttype header true supported media types include media type media type null
implementation simple delegates readinternalclass httpinputmessage future implementations might add default behavior however
implementation checks given class plain supportsclass supported plain getsupportedmediatypes supported media types plain mediatypeincludesmediatype include given media type
returns true given media type includes plain setsupportedmediatypeslist supported media types mediatype media type write null specified typically value accept header true supported media types compatible media type media type null
construct abstracthttpmessageconverter default charset multiple supported media types defaultcharset default character set supportedmediatypes supported media types 43
add default headers output message this implementation delegates getdefaultcontenttypeobject content type provided set necessary default character set calls getcontentlength sets corresponding headers 42
create new httpmessagenotreadableexception msg detail message httpinputmessage original http message 51
create new httpmessagenotreadableexception msg detail message cause root cause if any httpinputmessage original http message 51
return original http message 51
create new httpmessagenotreadableexception msg detail message 51 favor httpmessagenotreadableexceptionstring httpinputmessage
create new httpmessagenotreadableexception msg detail message cause root cause if any 51 favor httpmessagenotreadableexceptionstring throwable httpinputmessage
constructor accepting conversionservice well default charset conversionservice conversion service defaultcharset default charset
set default character set use reading writing form data request response contenttype header explicitly specify it as 43 also used default charset conversion text bodies multipart request as 50 also used part headers including contentdisposition and filename parameter unless the mutually exclusive setmultipartcharset also set case part headers encoded ascii filename encoded encodedword syntax rfc 2047 by default set utf8
return filename given multipart part value used contentdisposition header the default implementation returns resourcegetfilename part resource null cases overridden subclasses part part determine file name filename null known
set message body converters use converters used convert objects mime parts
add message body converter converter used convert objects mime parts
apply configured charset default registered part converters
set gson instance use set default gsongson gson instance used setting customconfigured gson one way take control json serialization process gsonhttpmessageconvertergson
construct new gsonhttpmessageconverter given delegate gson gson instance use 50
return jackson filter provider use 42 comfasterxmljacksondatabindobjectmapperwriterfilterprovider comfasterxmljacksonannotationjsonfilter
return serialization view use comfasterxmljacksondatabindobjectmapperwriterwithviewclass comfasterxmljacksonannotationjsonview
construct new jsonbhttpmessageconverter given delegate jsonb jsonb instance use
set jsonb instance use set default jsonb instance created setting customconfigured jsonb one way take control json serialization process jsonbhttpmessageconverterjsonb jsonbhttpmessageconverterjsonbconfig jsonbbuilder
shortcut mapperfeatureautodetectsetters mapperfeatureautodetectgetters mapperfeatureautodetectisgetters options
set annotationintrospector serialization deserialization
configure custom serializers given types serializersjsonserializer
specify features disable comfasterxmljacksoncorejsonparserfeature comfasterxmljacksoncorejsongeneratorfeature comfasterxmljacksondatabindserializationfeature comfasterxmljacksondatabinddeserializationfeature comfasterxmljacksondatabindmapperfeature
override default locale use formatting default value used localegetdefault 415
add mixin annotations use augmenting specified class interface target class or interface whose annotations effectively override mixinsource class or interface whose annotations added targets annotations value 412 comfasterxmljacksondatabindobjectmapperaddmixinannotationsclass class
shortcut serializationfeatureindentoutput option
configure custom deserializer given type 412
set classloader use loading jackson extension modules
define format datetime given dateformat note setting property makes exposed objectmapper nonthreadsafe according jacksons thread safety rules simpledateformatstring
set true xmlmapper created using default constructor applicable build calls configure calls
specify one modules registered objectmapper modules specified registered springs autodetection jsr310 jodatime jacksons finding modules see findmodulesviaserviceloader allowing eventually override configuration specify either modules both 415 comfasterxmljacksondatabindmodule
configure custom deserializers deserializer registered type returned jsondeserializerhandledtype must null 43 deserializersbytypemap
set whether let jackson find available modules via jdk serviceloader based metainf metadata classpath if mode set springs jackson2objectmapperbuilder try find jsr310 jodatime support modules classpath provided java 8 jodatime available respectively comfasterxmljacksondatabindobjectmapperfindmodules
override default locale use formatting default value used localegetdefault localestring locale id string representation 415
customize construction jackson handlers jsonserializer jsondeserializer keydeserializer typeresolverbuilder typeidresolver 413 jackson2objectmapperbuilderapplicationcontextapplicationcontext
define wrapper used indexed list array properties default only applies xmlmapper 43
define datetime format simpledateformat note setting property makes exposed objectmapper nonthreadsafe according jacksons thread safety rules dateformatdateformat
shortcut mapperfeaturedefaultviewinclusion option
define jsonfactory used create objectmapper instance 50
add mixin annotations use augmenting specified class interface mixins map entries target classes or interface whose annotations effectively override key mixin classes or interface whose annotations added targets annotations value 412 comfasterxmljacksondatabindobjectmapperaddmixinannotationsclass class
specify comfasterxmljacksondatabindpropertynamingstrategy configure objectmapper with
configure custom deserializers given types
override default timezone use formatting default value used utc not local timezone 415
set global filters use order support jsonfilter jsonfilter annotated pojo 42 mappingjacksonvaluesetfiltersfilterprovider
set spring applicationcontext order autowire jackson handlers jsonserializer jsondeserializer keydeserializer typeresolverbuilder typeidresolver 413 springhandlerinstantiator
set custom inclusion strategy serialization comfasterxmljacksonannotationjsonincludeinclude
specify visibility limit kind properties autodetected 51 comfasterxmljacksonannotationpropertyaccessor comfasterxmljacksonannotationjsonautodetectvisibility
configure custom serializer given type 412 serializersjsonserializer
shortcut deserializationfeaturefailonunknownproperties option
specify one modules class registered objectmapper modules specified registered springs autodetection jsr310 jodatime jacksons finding modules see findmodulesviaserviceloader allowing eventually override configuration specify either modules both modulestoinstallmodule comfasterxmljacksondatabindmodule
shortcut mapperfeatureautodetectfields option
override default timezone use formatting default value used utc not local timezone timezonestring zone id string representation 415
configure custom serializers serializer registered type returned jsonserializerhandledtype must null serializersbytypemap
configure existing objectmapper instance builders settings applied number objectmappers objectmapper objectmapper configure
set complete list modules registered objectmapper note set finding modules going happen jackson spring either see findmodulesviaserviceloader consequence specifying empty list suppress kind module detection specify either modulestoinstall both modulesmodule comfasterxmljacksondatabindmodule
build new objectmapper instance each build operation produces independent objectmapper instance builders settings get modified subsequent build operation producing new objectmapper based recent settings newly built objectmapper
specify typeresolverbuilder use jacksons default typing 422
specify features enable comfasterxmljacksoncorejsonparserfeature comfasterxmljacksoncorejsongeneratorfeature comfasterxmljacksondatabindserializationfeature comfasterxmljacksondatabinddeserializationfeature comfasterxmljacksondatabindmapperfeature
shortcut serializationfeaturefailonemptybeans option
return singleton objectmapper
specify one modules class or class name xml registered objectmapper modules specified registered springs autodetection jsr310 jodatime jacksons finding modules see setfindmodulesviaserviceloader allowing eventually override configuration specify either setmodules both 401 comfasterxmljacksondatabindmodule
set builder applicationcontext order autowire jackson handlers jsonserializer jsondeserializer keydeserializer typeresolverbuilder typeidresolver 413 jackson2objectmapperbuilderapplicationcontextapplicationcontext springhandlerinstantiator
create new springhandlerinstantiator given beanfactory beanfactory target beanfactory
43
43
43
43
43
43
return jackson javatype specified type context class type generic type return jackson javatype contextclass context class target type example class target type appears method signature can null jackson javatype
determine json encoding use given content type contenttype media type requested caller json encoding use never null
set objectmapper view set default objectmapperobjectmapper objectmapper used setting customconfigured objectmapper one way take control json serialization process example extended comfasterxmljacksondatabindserserializerfactory configured provides custom serializers specific types option refining serialization process use jacksons provided annotations types serialized case customconfigured objectmapper unnecessary
determine whether log given exception coming objectmappercandeserialize objectmappercanserialize check type class jackson tested deserializability cause jacksonthrown exception evaluate typically jsonmappingexception 43
whether use defaultprettyprinter writing json shortcut setting objectmapper follows classcode objectmapper mapper new objectmapper mapperconfigureserializationfeatureindentoutput true convertersetobjectmappermapper
return created gson instance
obtain gsonbuilder base64encodes byte properties reading writing json a custom comgooglegsontypeadapter registered via gsonbuilderregistertypehierarchyadapterclass object serializes byte property base64encoded string instead json array
construct new protobufjsonformathttpmessageconverter given jsonformatparser jsonformatprinter configuration also accepting initializer allows registration message extensions parser json parser configuration printer json printer configuration registryinitializer initializer message extensions 51 favor protobufjsonformathttpmessageconverterjsonformatparser jsonformatprinter extensionregistry
construct new protobufjsonformathttpmessageconverter given jsonformatparser jsonformatprinter configuration also accepting registry specifies protocol message extensions parser json parser configuration printer json printer configuration extensionregistry registry populate 51
construct new protobufjsonformathttpmessageconverter given jsonformatparser jsonformatprinter configuration parser json parser configuration printer json printer configuration
construct new protobufhttpmessageconverter initializer allows registration message extensions registryinitializer initializer message extensions spring framework 51 use protobufhttpmessageconverterextensionregistry instead
create new messagebuilder instance given class this method uses concurrentreferencehashmap caching method lookups
set xprotobuf http headers responding message content type applicationxprotobuf note outputmessagegetbody called writes http headers making read only
jaxb2collectionhttpmessageconverter read generic collection generic type jaxb type annotated xmlrootelement xmltype
create collection given type given initial capacity if supported collection type collectionclass type collection instantiate created collection instance
always returns false since jaxb2collectionhttpmessageconverter convert collections xml
always returns false since jaxb2collectionhttpmessageconverter convert collections xml
always returns false since jaxb2collectionhttpmessageconverter required generic type information order read collection
construct new marshallingmessageconverter given marshaller set if given marshaller also implements unmarshaller interface used marshalling unmarshalling otherwise exception thrown note marshaller implementations spring also implement unmarshaller interface safely use constructor marshaller object used marshaller unmarshaller
construct new marshallingmessageconverter given marshaller unmarshaller marshaller marshaller use unmarshaller unmarshaller use
indicates whether external xml entities processed converting source default false meaning external entities resolved note setting option true also automatically sets setsupportdtd true
indicates whether external xml entities processed converting source default false meaning external entities resolved note setting option true also automatically sets setsupportdtd true
objectmapper parameter must xmlmapper instance
construct new mappingjackson2xmlhttpmessageconverter custom objectmapper must xmlmapper instance use jackson2objectmapperbuilder build easily jackson2objectmapperbuilderxml
return jaxbcontext given class clazz class return context jaxbcontext httpmessageconversionexception case jaxb errors
create new unmarshaller given class clazz class create unmarshaller unmarshaller httpmessageconversionexception case jaxb errors
create new marshaller given class clazz class create marshaller marshaller httpmessageconversionexception case jaxb errors
objectmapper must configured smilefactory instance
construct new mappingjackson2smilehttpmessageconverter custom objectmapper must configured smilefactory instance use jackson2objectmapperbuilder build easily jackson2objectmapperbuildersmile
objectmapper must configured cborfactory instance
construct new mappingjackson2cborhttpmessageconverter custom objectmapper must configured cborfactory instance use jackson2objectmapperbuilder build easily jackson2objectmapperbuildercbor
return actually supported http methods httpmethod instances null known 32
return actually supported http methods null known
create new httprequestmethodnotsupportedexception method unsupported http request method supportedmethods actually supported http methods msg detail message
return name expected session attribute any 43
create new httpsessionrequiredexception msg detail message
create new httpsessionrequiredexception msg detail message expectedattribute name expected session attribute 43
delegate servletcontext webapplicationinitializer implementations present application classpath because class declares handlestypeswebapplicationinitializerclass servlet 30 containers automatically scan classpath implementations springs webapplicationinitializer interface provide set types webappinitializerclasses parameter method if webapplicationinitializer implementations found classpath method effectively noop infolevel log message issued notifying user servletcontainerinitializer indeed invoked webapplicationinitializer implementations found assuming one webapplicationinitializer types detected instantiated and sorted orgspringframeworkcoreannotationorder order annotation present orgspringframeworkcoreordered ordered interface implemented webapplicationinitializeronstartupservletcontext method invoked instance delegating servletcontext instance may register configure servlets springs dispatcherservlet listeners springs contextloaderlistener servlet api componentry filters webappinitializerclasses implementations webapplicationinitializer found application classpath servletcontext servlet context initialized webapplicationinitializeronstartupservletcontext annotationawareordercomparator
create new httpmediatypeexception message exception message
create new httpmediatypeexception list supported media types supportedmediatypes list supported media types
return http request content type method caused failure
create new httpmediatypenotsupportedexception contenttype unsupported content type supportedmediatypes list supported media types msg detail message
create new httpmediatypenotsupportedexception message exception message
create new httpmediatypenotsupportedexception contenttype unsupported content type supportedmediatypes list supported media types
constructor 500 error reason only favor servererrorexceptionstring throwable
constructor 500 error methodparameter optional cause
return specific method parameter associated error any
constructor 500 error reason optional cause 505
constructor 500 error linked specific methodparameter favor servererrorexceptionstring methodparameter throwable
return handler method associated error any 505
constructor 500 error handler method optional cause 505
return session attribute value present name attribute name attribute type attribute value
return session attribute value present raise illegalargumentexception name attribute name attribute type attribute value
return session attribute value default fallback value name attribute name defaultvalue default value return instead attribute type attribute value
return methodparameter associated error any
constructor 400 error root cause
constructor trying encode decode specific java type 51
constructor specified contenttype invalid
return request contenttype header parsed successfully null otherwise
return body type context exception generated this applicable exception raised result trying encode decode specific java type body type null available 51
reason explaining exception potentially null empty
constructor response status reason add exception message explanation well nested exception status http status required reason associated reason optional cause nested exception optional
constructor contenttype supported
constructor contenttype invalid
constructor requested contenttype supported
constructor requested contenttype invalid
return request attribute value present raise illegalargumentexception name attribute name attribute type attribute value
return request attribute value default fallback value name attribute name defaultvalue default value return instead attribute type attribute value
return request attribute value present name attribute name attribute type attribute value
configure clock use set lastaccesstime every created session calculate expired this may useful align different timezone set clock back test eg clockoffsetclock durationofminutes31 order simulate session expiration by default clocksystemzoneidofgmt clock clock use
set name session header use session id name used extract session id request headers well set session id response headers by default set defaultheadername headername header name
configure id resolution strategy by default instance cookiewebsessionidresolver sessionidresolver resolver use
configure persistence strategy by default instance inmemorywebsessionstore sessionstore persistence strategy use
set name cookie use session id by default set session cookiename cookie name
add consumer responsecookiebuilder invoked cookie built call build initializer consumer cookie builder 51
configure custom servercodecconfigurer provided instance set created defaultserverwebexchange by default set servercodecconfigurercreate codecconfigurer codec configurer use
configure custom websessionmanager use managing web sessions provided instance set created defaultserverwebexchange by default set defaultwebsessionmanager sessionmanager session manager use
configure custom localecontextresolver provided instance set created defaultserverwebexchange by default set orgspringframeworkwebserveri18nacceptheaderlocalecontextresolver resolver locale context resolver use
method must invoked properties set complete initialization
return configured applicationcontext any 503
enable processing forwarded headers either extracting removing remove only by default set transformer transformer use 51
return configured forwardedheadertransformer 51
register servletcontextlistener closes given application context servlet context destroyed servletcontext servlet context listen applicationcontext application context closed servletcontext destroyed
refresh given application context necessary
return spring configuration contains application beans including ones detected webhttphandlerbuilderapplicationcontext
private constructor use initialized applicationcontext
manipulate live list currently configured exception handlers consumer consumer use
configure forwardedheadertransformer extracting andor removing forwarded headers transformer transformer 51
manipulate live list currently configured filters consumer consumer use
add given exception handlers handlers exception handlers
configure servercodecconfigurer set webserverexchange codecconfigurer codec configurer
copy constructor
build httphandler
static factory method create new builder instance detecting beans applicationcontext following detected webhandler 1 looked name webhandlerbeanname webfilter 0n detected type ordered see annotationawareordercomparator webexceptionhandler 0n detected type ordered websessionmanager 01 looked name websessionmanagerbeanname servercodecconfigurer 01 looked name servercodecconfigurerbeanname localecontextresolver 01 looked name localecontextresolverbeanname context application context use lookup prepared builder
add given filters filters filters add thats
configure localecontextresolver set serverwebexchange webserverexchange localecontextresolver locale context resolver
clone webhttphandlerbuilder cloned builder instance
configure websessionmanager set serverwebexchange webserverexchange by default defaultwebsessionmanager used manager session manager httpwebhandleradaptersetsessionmanagerwebsessionmanager
whether request forwarded headers request request
apply remove remove forwarded type headers request request
configured default locale any
configure supported locales check requested locales determined via httpheadersgetacceptlanguageaslocales locales supported locales
create fixedlocaleresolver exposes given locale time zone locale locale expose timezone time zone expose
determine http status implied given exception ex exception introspect associated http status 505
constructor filters chain filters
public constructor list filters target handler use handler target handler filters filters ahead handler 51
public constructor list filters target handler use handler target handler filters filters ahead handler 51 constructor deprecated favor defaultwebfilterchainwebhandler list
private constructor represent one link chain
find names beans annotated plain controlleradvice controlleradvice given applicationcontext wrap controlleradvicebean instances
return type contained bean if bean type cglibgenerated class original userdefined class returned
returns order value extracted controlleradvice annotation orderedlowestprecedence otherwise
create instance bean instance method name parameter types nosuchmethodexception method cannot found
copy constructor use subclasses
return short representation handler method log message purposes 43
recreate handlermethod resolved handler
return specified response status any 438 responsestatuscode
provided instance contains bean name rather object instance bean name resolved handlermethod created returned
return handlermethod handlermethod instance resolved via createwithresolvedbean
assert target bean class instance class given method declared cases actual controller instance request processing time may jdk dynamic proxy lazy initialization prototype beans others controllers require proxying prefer classbased proxy mechanisms
return single annotation underlying method traversing super methods annotation found given method itself also supports merged composed annotations attribute overrides spring framework 422 annotationtype type annotation introspect method annotation null none found annotatedelementutilsfindmergedannotation
return associated response status reason any 438 responsestatusreason
create instance bean instance method
create instance bean name method beanfactory method createwithresolvedbean may used later recreate handlermethod initialized bean
match handlers declared base package eg orgexample packages one base package classes
match types annotated one given annotations annotations one annotations check
predicate applies handlers
typesafe alternative forbasepackagestring specify base package class packageclasses one base package names
private constructor see static factory methods
match handlers annotated specific annotation annotations one annotations check
match handlers assignable given type types one handler super types
iterate registered handlermethodargumentresolver handlermethodargumentresolvers invoke one supports it illegalstateexception suitable handlermethodargumentresolver found
add given handlermethodargumentresolver
add given handlermethodargumentresolver handlermethodargumentresolvers 43
find registered handlermethodargumentresolver supports given method parameter
add given handlermethodargumentresolver handlermethodargumentresolvers
whether given plain methodparameter method parameter supported registered handlermethodargumentresolver
iterate registered handlermethodreturnvaluehandler handlermethodreturnvaluehandlers invoke one supports it illegalstateexception suitable handlermethodreturnvaluehandler found
add given handlermethodreturnvaluehandler handlermethodreturnvaluehandlers
whether given plain methodparameter method return type supported registered handlermethodreturnvaluehandler
add given handlermethodreturnvaluehandler
invoke method resolving argument values context given request argument values commonly resolved handlermethodargumentresolver handlermethodargumentresolvers providedargs parameter however may supply argument values used directly ie without argument resolution examples provided argument values include webdatabinder sessionstatus thrown exception instance provided argument values checked argument resolvers delegates getmethodargumentvalues calls doinvoke resolved arguments request current request mavcontainer modelandviewcontainer request providedargs given arguments matched type resolved raw value returned invoked method exception raised suitable argument resolver found method raised exception getmethodargumentvalues doinvoke
get method argument values current request checking provided argument values falling back configured argument resolvers the resulting array passed doinvoke 512
invoke handler method given argument values
construct new handler method given bean instance method name parameters bean object bean methodname method name parametertypes method parameter types nosuchmethodexception method cannot found
overloaded method uses conversionservice created construction
create instance collection uricomponentscontributor uricomponentscontributors handlermethodargumentresolver handlermethodargumentresolvers since tend implemented class convenient option obtain configured handlermethodargumentresolvers requestmappinghandleradapter provide constructor contributors collection uricomponentscontributor handlermethodargumentresolver handlermethodargumentresolvers
create instance collection uricomponentscontributor uricomponentscontributors handlermethodargumentresolver handlermethodargumentresolvers since tend implemented class convenient option obtain configured handlermethodargumentresolvers requestmappinghandleradapter provide constructor if conversionservice argument null orgspringframeworkformatsupportdefaultformattingconversionservice used default contributors collection uricomponentscontributor handlermethodargumentresolver handlermethodargumentresolvers cs conversionservice use method argument values need formatted strings added uri
return diagnostic information
add supplied attribute underlying model shortcut getmodeladdattributeobject
return view object null using view name resolved dispatcherservlet via viewresolver
copy attributes supplied map existing objects name taking precedence ie getting replaced shortcut getmodelmergeattributesmap
return view name resolved dispatcherservlet via viewresolver null view object set
return configured http status any 43
copy attributes underlying model shortcut getmodeladdallattributesmap
return model use either default redirect model default model used redirectmodelscenariofalse redirect model ie redirectattributes declared method argument ignoredefaultmodelonredirectfalse
remove given attributes model
add supplied attribute underlying model shortcut getmodeladdattributestring object
register whether data binding occur corresponding model attribute corresponding modelattributebindingtruefalse declaration note flag taken account isbindingdisabled hard setbindingdisabled declaration always override it attributename name attribute 4313
find method handle given exception use exceptiondepthcomparator one match found exception exception method handle exception null none found
return method mapped given exception type null none
find method handle given exception type useful exception instance available eg tools exceptiontype exception type method handle exception null none found
find method handle given throwable use exceptiondepthcomparator one match found exception exception method handle exception null none found 50
extract exception mappings exceptionhandler annotation first fallback method signature itself
constructor finds exceptionhandler methods given type handlertype type introspect
construct new attribute instance given constructor called createattributestring methodparameter webdatabinderfactory nativewebrequest constructor resolution ctor constructor use attributename name attribute never null binderfactory creating webdatabinder instance webrequest current request created model attribute never null bindexception case constructor argument binding failure exception case constructor invocation failure 51
determine validation triggered given annotation ann annotation potentially validation annotation validation hints apply possibly empty array null annotation trigger validation 51
validate specified candidate value applicable the default implementation checks javaxvalidationvalid springs orgspringframeworkvalidationannotationvalidated custom annotations whose name starts valid binder databinder used parameter method parameter declaration targettype target type fieldname name field value candidate value 51 validateifapplicablewebdatabinder methodparameter smartvalidatorvalidatevalueclass string object errors object
returns true parameter annotated modelattribute or default resolution mode method parameter simple type
validate model attribute applicable the default implementation checks javaxvalidationvalid springs orgspringframeworkvalidationannotationvalidated custom annotations whose name starts valid binder databinder used parameter method parameter declaration webdatabindervalidateobject smartvalidatorvalidateobject errors object
add nonnull return values modelandviewcontainer
construct new attribute instance given constructor 50 51 favor constructattributeconstructor string methodparameter webdatabinderfactory nativewebrequest
whether raise fatal bind exception validation errors parameter method parameter declaration true next method parameter type errors 50
return true methodlevel modelattribute or default resolution mode return value type simple type
extension point create model attribute found model subsequent parameter binding bean properties unless suppressed the default implementation typically uses unique public noarg constructor available also handles primary constructor approach data classes understands javabeans constructorproperties annotation well runtimeretained parameter names bytecode associating request parameters constructor arguments name constructor found default constructor used even public assuming subsequent bean property bindings setter methods attributename name attribute never null parameter method parameter declaration binderfactory creating webdatabinder instance webrequest current request created model attribute never null bindexception case constructor argument binding failure exception case constructor invocation failure constructattributeconstructor string methodparameter webdatabinderfactory nativewebrequest beanutilsfindprimaryconstructorclass
resolve argument model found instantiate default available model attribute populated request values via data binding optionally validated javavalidationvalid present argument bindexception data binding validation result error next method parameter type errors exception webdatabinder initialization fails
supports following requestparamannotated method arguments excludes map params annotation specify name see requestparammapmethodargumentresolver instead params arguments type multipartfile unless annotated requestpart arguments type part unless annotated requestpart in default resolution mode simple type arguments even requestparam
create new requestparammethodargumentresolver instance beanfactory bean factory used resolving placeholder spel expressions default values null default values expected contain expressions usedefaultresolution default resolution mode method argument simple type defined beanutilsissimpleproperty treated request parameter even isnt annotated request parameter name derived method parameter name
initialize webdatabinder initbinder methods if initbinder annotation specifies attributes names invoked names include target object name exception one invoked initbinder methods fails isbindermethodapplicable
determine whether given initbinder method used initialize given webdatabinder instance default check specified attribute names annotation value any
create new initbinderdatabinderfactory instance bindermethods initbinder methods initializer global data binder initialization
delegate webargumentresolver instance illegalstateexception resolved value assignable method parameter
create new instance
actually resolve value check resolved value webargumentresolverunresolved absorbing any exceptions
find modelattribute arguments also listed sessionattributes
invoke model attribute methods populate model attributes added already present model
add bindingresult attributes model attributes require it
whether given attribute requires bindingresult model
create new instance given modelattribute methods handlermethods modelattribute methods invoke binderfactory preparation bindingresult attributes attributehandler access session attributes
promote model attributes listed sessionattributes session add bindingresult attributes necessary request current request container contains model update exception creating bindingresult attributes fails
populate model following order retrieve known session attributes listed sessionattributes invoke modelattribute methods find modelattribute method arguments also listed sessionattributes ensure theyre present model raising exception necessary request current request container container model initialized handlermethod method model initialized exception may arise modelattribute methods
derive model attribute name given method parameter based modelattribute parameter annotation if present falling back parameter type based conventions parameter descriptor method parameter derived name conventionsgetvariablenameforparametermethodparameter
derive model attribute name given return value results based on the method modelattribute annotation value the declared return type specific object the actual return value type returnvalue value returned method invocation returntype descriptor return type method derived name never null empty string
retrieve known attributes session ie attributes listed name sessionattributes attributes previously stored model matched type request current request map handler session attributes possibly empty
create new session attributes handler session attribute names types extracted sessionattributes annotation present given type handlertype controller type sessionattributestore used session access
remove known attributes session ie attributes listed name sessionattributes attributes previously stored model matched type request current request
passthrough call underlying sessionattributestore request current request attributename name attribute interest attribute value null none
store subset given attributes session attributes declared session attributes via sessionattributes ignored request current request attributes candidate attributes session storage
whether attribute name type match names types specified via sessionattributes underlying controller attributes successfully resolved method remembered subsequently used retrieveattributeswebrequest cleanupattributeswebrequest attributename attribute name check attributetype type attribute
create new namedvalueinfo based given namedvalueinfo sanitized values
obtain named value given method parameter
invoked named value required resolvenamestring methodparameter nativewebrequest returned null default value subclasses typically throw exception case name name value parameter method parameter request current request 43
null results false value booleans exception primitives
create new abstractnamedvaluemethodargumentresolver instance beanfactory bean factory use resolving placeholder spel expressions default values null default values expected contain expressions
invoked named value required resolvenamestring methodparameter nativewebrequest returned null default value subclasses typically throw exception case name name value parameter method parameter
resolve given annotationspecified value potentially containing placeholders expressions
constructor maxuploadsizeexceededexception maxuploadsize maximum upload size allowed 1 size limit isnt known ex root cause multipart parsing api use
implementation returns description multipart name
implementation throws illegalstateexception attempting read underlying stream multiple times
implementation always returns true
implementation always returns true
create new requestpartservletserverhttprequest instance request current servlet request partname name part adapt serverhttprequest contract missingservletrequestpartexception request part cannot found multipartexception multiparthttpservletrequest cannot initialized
create new standardmultiparthttpservletrequest wrapper given request request servlet request wrap lazyparsing whether multipart parsing triggered lazily first access multipart files parameters multipartexception immediate parsing attempt failed 329
obtain multipartfile map retrieval lazily initializing necessary initializemultipart
set map parameter names keys list multipartfile objects values invoked subclasses initialization
look multipartresolver bean root web application context supports multipartresolverbeanname filter init param default bean name filtermultipartresolver this overridden use custom multipartresolver instance example using spring web application context multipartresolver instance
check multipart request via filters multipartresolver wrap original request multiparthttpservletrequest appropriate all later elements filter chain importantly servlets benefit proper parameter extraction multipart case able cast multiparthttpservletrequest need to
obtain multipart parameter map retrieval lazily initializing necessary initializemultipart
obtain multipart parameter content type map retrieval lazily initializing necessary initializemultipart
wrap given httpservletrequest multiparthttpservletrequest request servlet request wrap mpfiles map multipart files mpparams map parameters expose strings keys string arrays values
return description storage location multipart content tries specific possible mentions file location case temporary file
create instance wrapping given fileitem fileitem fileitem wrap
determine whether multipart content still available temporary file moved content longer available
determine encoding given request overridden subclasses the default implementation checks request encoding falling back default encoding specified resolver request current http request encoding request never null javaxservletservletrequestgetcharacterencoding setdefaultencoding
initialize underlying orgapachecommonsfileuploadservletservletfileupload instance overridden use custom subclass eg testing purposes fileitemfactory commons fileitemfactory use new servletfileupload instance
parse given servlet request resolving multipart elements request request parse parsing result multipartexception multipart resolution failed
constructor standalone usage determines servlet containers temporary directory via given servletcontext servletcontext servletcontext use
set temporary directory uploaded files get stored default servlet containers temporary directory web application orgspringframeworkwebutilwebutilstempdircontextattribute
instantiate new commonsfileuploadsupport corresponding fileitemfactory fileupload instances newfileitemfactory newfileupload
parse given list commons fileitems spring multipartparsingresult containing spring multipartfile instances map multipart parameter fileitems commons fileitems parse encoding encoding use form fields spring multipartparsingresult commonsmultipartfilecommonsmultipartfileorgapachecommonsfileuploadfileitem
determine default encoding use parsing requests setdefaultencoding
cleanup spring multipartfiles created multipart parsing potentially holding temporary data disk deletes underlying commons fileitem instances multipartfiles collection multipartfile instances orgapachecommonsfileuploadfileitemdelete
determine appropriate fileupload instance given encoding default implementation returns shared fileupload instance encoding matches else creates new fileupload instance configuration desired encoding encoding character encoding use appropriate fileupload instance
create commonsmultipartfile wrapper given commons fileitem fileitem commons fileitem wrap corresponding commonsmultipartfile potentially custom subclass 435 setpreservefilenameboolean commonsmultipartfilesetpreservefilenameboolean
find root webapplicationcontext web app typically loaded via orgspringframeworkwebcontextcontextloaderlistener will rethrow exception happened root context startup differentiate failed context startup context all fc facescontext find web application context root webapplicationcontext web app null none orgspringframeworkwebcontextwebapplicationcontextrootwebapplicationcontextattribute
return best available mutex given session is object synchronize given session returns session mutex attribute available usually means httpsessionmutexlistener needs defined webxml falls back session reference mutex attribute found the session mutex guaranteed object entire lifetime session available key defined sessionmutexattribute constant serves safe reference synchronize locking current session in many cases session reference safe mutex well since always object reference active logical session however guaranteed across different servlet containers 100 safe way session mutex fc facescontext find session mutex mutex object never null orgspringframeworkwebutilwebutilssessionmutexattribute orgspringframeworkwebutilhttpsessionmutexlistener
find root webapplicationcontext web app typically loaded via orgspringframeworkwebcontextcontextloaderlistener will rethrow exception happened root context startup differentiate failed context startup context all fc facescontext find web application context root webapplicationcontext web app illegalstateexception root webapplicationcontext could found orgspringframeworkwebcontextwebapplicationcontextrootwebapplicationcontextattribute
obtain delegate phaselistener beans spring root webapplicationcontext facescontext current jsf context collection phaselistener objects getbeanfactory orgspringframeworkbeansfactorylistablebeanfactorygetbeansoftypeclass
handle navigation request implied specified parameters delegating target bean spring application context the target bean needs extend jsf navigationhandler class extends springs decoratingnavigationhandler overloaded handlenavigation method original navigationhandler argument used else standard handlenavigation method called
return target navigationhandler delegate to by default bean name jsfnavigationhandler obtained spring root webapplicationcontext every invocation facescontext current jsf context target navigationhandler delegate gettargetbeanname getbeanfactory
method called subclasses intending delegate next handler navigationhandler chain always call appropriate next handler either decorated navigationhandler passed constructor argument original navigationhandler passed method according position instance chain will call decorated navigationhandler specified constructor argument any case decoratingnavigationhandler target original navigationhandler passed method passed next element chain ensures propagation original handler last element handler chain might delegate back to case standard navigationhandler target original handler simply get passed on delegating back original possible chain scenario if decorated navigationhandler specified constructor argument instance last element chain hence method call original navigationhandler passed method original navigationhandler passed for example instance last element chain standard navigationhandlers earlier elements method corresponds noop facescontext current jsf context fromaction action binding expression evaluated retrieve specified outcome null outcome acquired means outcome logical outcome returned previous invoked application action which may null originalnavigationhandler original navigationhandler null none
return fixed original navigationhandler decorated handler that is passed constructor
implementation standard jsf handlenavigation method delegates overloaded variant passing constructorinjected navigationhandler argument handlenavigationjavaxfacescontextfacescontext string string javaxfacesapplicationnavigationhandler
retrieve web application context delegate bean name resolution to the default implementation delegates facescontextutils elcontext current jsf elcontext spring web application context never null orgspringframeworkwebjsffacescontextutilsgetrequiredwebapplicationcontext
retrieve webapplicationcontext reference expose the default implementation delegates facescontextutils returning null webapplicationcontext found elcontext current jsf elcontext spring web application context orgspringframeworkwebjsffacescontextutilsgetwebapplicationcontext
constructor missingpathvariableexception variablename name missing path variable parameter method parameter
return prefix parameters mark potentially empty fields
determine empty value specified field the default implementation delegates getemptyvalueclass field type known otherwise falls back null field name field fieldtype type field empty value for fields null
return prefix parameters mark default fields
check given property values field markers ie fields start field marker prefix the existence field marker indicates specified field existed form property values contain corresponding field value field considered empty reset appropriately mpvs property values bound can modified getfieldmarkerprefix getemptyvaluestring class
determine empty value specified field the default implementation returns booleanfalse boolean fields an empty array array types collection implementations collection types map implementations map types else null used default fieldtype type field empty value for fields null 50
implementation performs field default marker check delegating superclass binding process checkfielddefaults checkfieldmarkers
check given property values field defaults ie fields start field default prefix the existence field defaults indicates specified value used field otherwise present mpvs property values bound can modified getfielddefaultprefix
bind multipart files contained given request in case multipart request called subclasses multipart files added property values empty were configured bind empty multipart files too multipartfiles map field name string multipartfile object mpvs property values bound can modified orgspringframeworkwebmultipartmultipartfile setbindemptymultipartfiles
constructor missingrequestheaderexception headername name missing request header parameter method parameter
create new escapederrors instance given source instance
constructor missingmatrixvariableexception variablename name missing matrix variable parameter method parameter
get array int parameters throwing exception found one number request current http request name name parameter multiple possible values servletrequestbindingexception subclass servletexception doesnt need caught
get array string parameters return empty array found request current http request name name parameter multiple possible values
get float parameter fallback value never throws exception pass distinguished value default enable checks whether supplied request current http request name name parameter defaultval default value use fallback
get boolean parameter throwing exception isnt found isnt boolean accepts true on yes any case 1 values true treats every nonempty value false ie parses leniently request current http request name name parameter servletrequestbindingexception subclass servletexception doesnt need caught
get double parameter throwing exception isnt found isnt number request current http request name name parameter servletrequestbindingexception subclass servletexception doesnt need caught
get string parameter fallback value never throws exception pass distinguished value default enable checks whether supplied request current http request name name parameter defaultval default value use fallback
get float parameter throwing exception isnt found isnt number request current http request name name parameter servletrequestbindingexception subclass servletexception doesnt need caught
get array long parameters return empty array found request current http request name name parameter multiple possible values
get boolean parameter fallback value never throws exception pass distinguished value default enable checks whether supplied accepts true on yes any case 1 values true treats every nonempty value false ie parses leniently request current http request name name parameter defaultval default value use fallback
get long parameter throwing exception isnt found isnt number request current http request name name parameter servletrequestbindingexception subclass servletexception doesnt need caught
get double parameter fallback value never throws exception pass distinguished value default enable checks whether supplied request current http request name name parameter defaultval default value use fallback
get array boolean parameters return empty array found accepts true on yes any case 1 values true treats every nonempty value false ie parses leniently request current http request name name parameter multiple possible values
get int parameter throwing exception isnt found isnt number request current http request name name parameter servletrequestbindingexception subclass servletexception doesnt need caught
get array double parameters return empty array found request current http request name name parameter multiple possible values
get string parameter null present request current http request name name parameter string value null present servletrequestbindingexception subclass servletexception doesnt need caught
get boolean parameter null present throws exception parameter value isnt boolean accepts true on yes any case 1 values true treats every nonempty value false ie parses leniently request current http request name name parameter boolean value null present servletrequestbindingexception subclass servletexception doesnt need caught
get array float parameters return empty array found request current http request name name parameter multiple possible values
get double parameter null present throws exception parameter value isnt number request current http request name name parameter double value null present servletrequestbindingexception subclass servletexception doesnt need caught
get int parameter fallback value never throws exception pass distinguished value default enable checks whether supplied request current http request name name parameter defaultval default value use fallback
get float parameter null present throws exception parameter value isnt number request current http request name name parameter float value null present servletrequestbindingexception subclass servletexception doesnt need caught
get array int parameters return empty array found request current http request name name parameter multiple possible values
get array string parameters throwing exception found request current http request name name parameter servletrequestbindingexception subclass servletexception doesnt need caught
get long parameter null present throws exception parameter value isnt number request current http request name name parameter long value null present servletrequestbindingexception subclass servletexception doesnt need caught
get integer parameter null present throws exception parameter value isnt number request current http request name name parameter integer value null present servletrequestbindingexception subclass servletexception doesnt need caught
get array boolean parameters throwing exception found one isnt boolean accepts true on yes any case 1 values true treats every nonempty value false ie parses leniently request current http request name name parameter servletrequestbindingexception subclass servletexception doesnt need caught
get array double parameters throwing exception found one number request current http request name name parameter multiple possible values servletrequestbindingexception subclass servletexception doesnt need caught
get array float parameters throwing exception found one number request current http request name name parameter multiple possible values servletrequestbindingexception subclass servletexception doesnt need caught
get long parameter fallback value never throws exception pass distinguished value default enable checks whether supplied request current http request name name parameter defaultval default value use fallback
get array long parameters throwing exception found one number request current http request name name parameter multiple possible values servletrequestbindingexception subclass servletexception doesnt need caught
get string parameter throwing exception isnt found request current http request name name parameter servletrequestbindingexception subclass servletexception doesnt need caught
create new unsatisfiedservletrequestparameterexception paramconditions parameter conditions violated actualparams actual parameter map associated servletrequest
create new unsatisfiedservletrequestparameterexception paramconditions sets parameter conditions violated actualparams actual parameter map associated servletrequest 42
bind parameters given request binders target also binding multipart files case multipart request this call create field errors representing basic binding errors like required field code required type mismatch value bean property code typemismatch multipart files bound via parameter name like normal http parameters ie uploadedfile uploadedfile bean property invoking setuploadedfile setter method the type target property multipart file multipartfile byte string latter two receive contents uploaded file metadata like original file name content type etc lost cases request request parameters bind can multipart orgspringframeworkwebmultipartmultiparthttpservletrequest orgspringframeworkwebmultipartmultipartfile bindorgspringframeworkbeanspropertyvalues
treats errors fatal use method its error input isnt valid might appropriate input dropdowns example servletrequestbindingexception subclass servletexception binding problem
constructor methodargumentnotvalidexception parameter parameter failed validation bindingresult results validation
create new servletrequestpropertyvalues supplying prefix prefix separator request http request prefix prefix parameters the full prefix consist plus separator prefixseparator separator delimiting prefix eg spring rest parameter name param1 param2
constructor missingservletrequestparameterexception parametername name missing parameter parametertype expected type missing parameter
constructor missingrequestcookieexception cookiename name missing request cookie parameter method parameter
initialize given databinder given servlet request binder databinder initialize request web request data binding happens within 50 favor initbinderwebdatabinder
extension point create webdatabinder instance default webrequestdatabinder target binding target null type conversion objectname binding target object name webrequest current request exception case invalid state arguments
create new webdatabinder given target object initialize webbindinginitializer exception case invalid state arguments
extension point initialize created data binder instance eg initbinder methods global initialization via webbindinginitializer databinder data binder instance customize webrequest current request exception initialization fails
return strategy use resolving errors message codes
return conversionservice apply every databinder
return strategy use processing binding errors
return validator apply binding step any
return propertyeditorregistrars applied every databinder
retrieve spring webapplicationcontext use default implementation returns current webapplicationcontext registered thread context class loader current webapplicationcontext never null contextloadergetcurrentwebapplicationcontext
treats errors fatal use method its error input isnt valid might appropriate input dropdowns example bindexception binding errors encountered
bind parameters given request binders target also binding multipart files case multipart request this call create field errors representing basic binding errors like required field code required type mismatch value bean property code typemismatch multipart files bound via parameter name like normal http parameters ie uploadedfile uploadedfile bean property invoking setuploadedfile setter method the type target property multipart file part multipartfile byte string latter two receive contents uploaded file metadata like original file name content type etc lost cases request request parameters bind can multipart orgspringframeworkwebmultipartmultipartrequest orgspringframeworkwebmultipartmultipartfile javaxservlethttppart bindorgspringframeworkbeanspropertyvalues
check request multipart request by checking contenttype header request request parameters bind
combine query params form data multipart form data body request map object values use data binding purposes exchange current exchange mono values bind orgspringframeworkhttpserverreactiveserverhttprequestgetqueryparams serverwebexchangegetformdata serverwebexchangegetmultipartdata
bind query params form data multipart form data binder target exchange current exchange mono binding complete
returns diagnostic information errors held object
set cors configuration based url patterns
set urlpathhelper use resolution lookup paths use override default urlpathhelper custom subclass
set pathmatcher implementation use matching url paths registered url patterns default antpathmatcher orgspringframeworkutilantpathmatcher
handle given request
invoked one cors checks failed default implementation sets response status 403 writes invalid cors request response
check headers determine headers response preflight request default implementation simply delegates orgspringframeworkwebcorscorsconfigurationcheckoriginstring
check http method determine methods response preflight request default implementation simply delegates orgspringframeworkwebcorscorsconfigurationcheckoriginstring
check origin determine origin response default implementation simply delegates orgspringframeworkwebcorscorsconfigurationcheckoriginstring
construct new corsconfiguration instance copying values supplied corsconfiguration
return allowed actual request headers null none addallowedheaderstring setallowedheaderslist
return allowed http methods null case get head allowed addallowedmethodhttpmethod addallowedmethodstring setallowedmethodslist
add response header expose note valid exposed header value
check origin request configured allowed origins requestorigin origin check origin use response null means request origin allowed
return configured origins allow null none addallowedoriginstring setallowedoriginslist
check http request method or method accesscontrolrequestmethod header preflight request configured allowed methods requestmethod http request method check list http methods list response preflight request null supplied requestmethod allowed
return configured maxage value null none setmaxagelong
add actual request header allow
add origin allow
default newly created corsconfiguration permit crossorigin requests must configured explicitly indicate allowed use method flip initialization model start open defaults permit crossorigin requests get head post requests note however method override existing values already set the following defaults applied already set allow origins allow simple methods get head post allow headers set max age 1800 seconds 30 minutes
return configured allowcredentials flag null none setallowcredentialsboolean
set list response headers simple headers ie cachecontrol contentlanguage contenttype expires lastmodified pragma actual response might exposed note valid exposed header value by default set
check supplied request headers or headers listed accesscontrolrequestheaders preflight request configured allowed headers requestheaders request headers check list allowed headers list response preflight request null none supplied request headers allowed
add http method allow
return configured response headers expose null none addexposedheaderstring setexposedheaderslist
set http methods allow eg get post put etc the special value allows methods if set get head allowed by default set note cors checks use values forwarded hrefhttptoolsietforghtmlrfc7239rfc 7239 xforwardedhost xforwardedport xforwardedproto headers present order reflect clientoriginated address consider using forwardedheaderfilter order choose central place whether extract use discard headers see spring framework reference filter
combine nonnull properties supplied corsconfiguration one when combining single values like allowcredentials maxage this properties overridden nonnull other properties any combining lists like allowedorigins allowedmethods allowedheaders exposedheaders done additive way example combining get post patch results get post patch keep mind combining get post results notice default permit values set corsconfigurationapplypermitdefaultvalues overridden value explicitly defined combined corsconfiguration this configuration supplied configuration null
returns true request valid cors preflight one
construct new urlbasedcorsconfigurationsource instance supplied pathpatternparser
set cors configuration based url patterns
check headers determine headers response preflight request default implementation simply delegates corsconfigurationcheckoriginstring
handle given request
check origin determine origin response default implementation simply delegates corsconfigurationcheckoriginstring
check http method determine methods response preflight request default implementation simply delegates corsconfigurationcheckoriginstring
constructor accepting corsconfigurationsource used filter find corsconfiguration use incoming request custom corsprocessor use apply matched corsconfiguration request urlbasedcorsconfigurationsource
returns true request valid cors preflight one
check request sameorigin one based origin host headers note 51 method ignores forwarded xforwarded headers specify clientoriginated address consider using forwardedheaderfilter extract use discard headers true request sameorigin one false case crossorigin request
create new instance resttemplate using default settings default httpmessageconverter httpmessageconverters initialized
to provide requestcallback responseextractor only both consider using acceptheaderrequestcallbackclass httpentitycallbackobject httpentitycallbackobject type responseentityextractortype
handle given response performing appropriate logging invoking responseerrorhandler necessary can overridden subclasses url fullyexpanded url connect method http method execute get post etc response resulting clienthttpresponse ioexception propagated responseerrorhandler 416 seterrorhandler
execute given method provided uri the clienthttprequest processed using requestcallback response responseextractor url fullyexpanded url connect method http method execute get post etc requestcallback object prepares request can null responseextractor object extracts return value response can null arbitrary object returned responseextractor
to provide requestcallback responseextractor only both consider using acceptheaderrequestcallbackclass httpentitycallbackobject httpentitycallbackobject type responseentityextractortype
create new instance resttemplate using given list httpmessageconverter use messageconverters list httpmessageconverter use 327
configure default uri variable values shortcut for classcode defaulturibuilderfactory factory new defaulturibuilderfactory handlersetdefaulturivariables resttemplate resttemplate new resttemplate resttemplateseturitemplatehandlerhandler urivars default uri variable values 43
set error handler by default resttemplate uses defaultresponseerrorhandler
set message body converters use these converters used convert http requests responses
configure strategy expanding uri templates by default defaulturibuilderfactory used backwards compatibility encoding mode set encodingmodeuricomponent uricomponent 508 prefer using encodingmodetemplateandvalues templateandvalues note 50 switch orgspringframeworkwebutildefaulturitemplatehandler defaulturitemplatehandler deprecated 43 default use defaulturibuilderfactory brings different default parsepath property switching false true handler uri template handler use
create new instance resttemplate based given clienthttprequestfactory requestfactory http request factory use orgspringframeworkhttpclientsimpleclienthttprequestfactory orgspringframeworkhttpclienthttpcomponentsclienthttprequestfactory
to provide requestcallback responseextractor only both consider using acceptheaderrequestcallbackclass httpentitycallbackobject httpentitycallbackobject type responseentityextractortype
construct new instance httpstatuscodeexception based httpstatus status text response body content rawstatuscode raw status code value statustext status text responseheaders response headers may null responsebody response body content may null responsecharset response body charset may null
determine contenttype response based contenttype header otherwise default mediatypeapplicationoctetstream response response mediatype possibly null
construct new instance given response data statuscode raw status code value statustext status text responseheaders response headers may null responsebody response body content may null responsecharset response body charset may null
return response body string
return http response headers
creates new instance asyncresttemplate using given asynchronous synchronous request factories asyncrequestfactory asynchronous request factory syncrequestfactory synchronous request factory
create new instance asyncresttemplate using given orgspringframeworkhttpclientasyncclienthttprequestfactory synchronous resttemplate requestfactory asynchronous request factory use resttemplate synchronous template use
execute given method provided uri orgspringframeworkhttpclientclienthttprequest processed using requestcallback response responseextractor url fullyexpanded url connect method http method execute get post etc requestcallback object prepares request can null responseextractor object extracts return value response can null arbitrary object returned responseextractor
configure default uri variable values shortcut for classcode defaulturitemplatehandler handler new defaulturitemplatehandler handlersetdefaulturivariables asyncresttemplate resttemplate new asyncresttemplate resttemplateseturitemplatehandlerhandler defaulturivariables default uri variable values 43
create new instance asyncresttemplate using given asynctaskexecutor this constructor uses simpleclienthttprequestfactory combination given asynctaskexecutor asynchronous execution
read body given response for inclusion status exception response response inspect response body byte array empty byte array body could read 438
delegates handleerrorclienthttpresponse httpstatus response status code unknownhttpstatuscodeexception case unresolvable status code handleerrorclienthttpresponse httpstatus
handle error given response given resolved status code the default implementation throws httpclienterrorexception status code httpstatusseriesclienterror httpservererrorexception httpstatusseriesservererror unknownhttpstatuscodeexception cases 50 httpclienterrorexceptioncreate httpservererrorexceptioncreate
determine charset response for inclusion status exception response response inspect associated charset null none 438
delegates haserrorhttpstatus for standard status enum value haserrorint for unknown status code response status code clienthttpresponsegetrawstatuscode haserrorhttpstatus haserrorint
template method called haserrorclienthttpresponse the default implementation checks given status code httpstatusseriesclienterror clienterror httpstatusseriesservererror servererror overridden subclasses unknownstatuscode http status code raw value true response indicates error false otherwise 4321 httpstatusseriesclienterror httpstatusseriesservererror
determine http status given response response response inspect associated http status ioexception case io errors unknownhttpstatuscodeexception case unknown status code cannot represented httpstatus enum 438 50 favor handleerrorclienthttpresponse httpstatus
create httpclienterrorexception http status specific subclass 51
constructor status code status text content
constructor status code status text headers content
create httpservererrorexception http status specific subclass 51
constructor status code status text content
constructor status code status text headers content
set mapping http status code restclientexception subclass mapping match plain clienthttpresponsegetstatuscode status code given clienthttpresponse haserrorclienthttpresponse return true handleerrorclienthttpresponse attempt use plain setmessageconverterslist configured message converters convert response mapped subclass restclientexception
set mapping http status series restclientexception subclass mapping match plain clienthttpresponsegetstatuscode status code given clienthttpresponse haserrorclienthttpresponse return true handleerrorclienthttpresponse attempt use plain setmessageconverterslist configured message converters convert response mapped subclass restclientexception
construct instance httpstatus status text content response charset statuscode status code statustext status text responseheaders response headers may null responsebody response body content may null responsecharset response body charset may null 312
construct instance httpstatus status text content statuscode status code statustext status text responsebody response body content may null responsecharset response body charset may null 305
indicates whether response empty message body implementation tries read first bytes response stream if bytes available message body empty otherwise empty stream reset start reading true response zerolength message body false otherwise ioexception case io errors
indicates whether response message body implementation returns false for a response status 1xx 204 304 a contentlength header 0 true response message body false otherwise ioexception case io errors
construct new instance restgatewaysupport given clienthttprequestfactory resttemplateresttemplateclienthttprequestfactory
sets resttemplate gateway
override provide handling key resolved via lookupmediatype subclasses take steps determine media types mediatype returned method added cache base class
alternative resolvemediatypesnativewebrequest accepts already extracted key 3216
find contentnegotiationstrategy given type strategytype strategy type first matching strategy null none 43
at startup method returns extensions explicitly registered either pathextensioncontentnegotiationstrategy parametercontentnegotiationstrategy runtime path extension strategy pathextensioncontentnegotiationstrategysetuseregisteredextensionsonlyboolean useregisteredextensionsonly property set false list extensions may increase file extensions resolved via orgspringframeworkhttpmediatypefactory cached
collectionbased alternative contentnegotiationmanagercontentnegotiationstrategy strategies strategies use 322
constructor ordered list default mediatypes return use applications support variety content types consider appending mediatypeall end destinations present support default media types 50
extends base class pathextensioncontentnegotiationstrategygetmediatypeforresource ability also look servletcontext resource resource look mediatype extension null none found 43
create instance given extensiontomediatype lookup
resolve file extension via servletcontextgetmimetypestring also delegate base class potential orgspringframeworkhttpmediatypefactory lookup
httpmediatypenotacceptableexception accept header cannot parsed
add mapping key extracted path extension query parameter mediatype required order parameter strategy work extensions explicitly registered also whitelisted purpose reflected file download attack detection see spring framework reference documentation details rfd attack protection the path extension strategy also try use servletcontextgetmimetype orgspringframeworkhttpmediatypefactory resolve path extensions mediatypes media type mappings addmediatypestring mediatype addmediatypesmap
invoked spring inject servletcontext
actually build contentnegotiationmanager 50
alternative setmediatypes use java code setmediatypes addmediatype
set query parameter name use setfavorparameter on the default parameter name format
indicate whether use java activation framework fallback option map file extensions media types 50 favor setuseregisteredextensionsonlyboolean reverse behavior
set name parameter use determine requested media types by default set format
public method exposing knowledge path extension strategy resolve file extensions mediatype case given resource method first looks explicitly registered file extensions first falls back mediatypefactory available resource resource look mediatype extension null none found 43
create instance given map file extensions media types
indicate whether use java activation framework fallback option map file extensions media types 50 favor setuseregisteredextensionsonlyboolean
map extension mediatype ignore extension already mapped
use method reverse lookup extension mediatype mediatype key null none found
create instance given map file extensions media types
close root web application context
initialize root web application context
specify application context initializers applied root application context contextloaderlistener created with 42 createrootapplicationcontext contextloaderlistenersetcontextinitializers
register contextloaderlistener given servlet context contextloaderlistener initialized application context returned createrootapplicationcontext template method servletcontext servlet context register listener
find servletcontext attributes implement disposablebean destroy them removing affected servletcontext attributes eventually sc servletcontext check
return applicationcontextinitializer implementation classes use specified contextinitializerclassesparam servletcontext current servlet context contextinitializerclassesparam
obtain spring root web application context current thread ie current threads context classloader needs web applications classloader current root web application context null none found orgspringframeworkwebcontextsupportspringbeanautowiringsupport
return webapplicationcontext implementation class use either default xmlwebapplicationcontext custom context class specified servletcontext current servlet context webapplicationcontext implementation class use contextclassparam orgspringframeworkwebcontextsupportxmlwebapplicationcontext
customize configurablewebapplicationcontext created contextloader config locations supplied context context refreshed the default implementation plain determinecontextinitializerclassesservletcontext determines if any context initializer classes specified plain contextinitializerclassesparam context init parameters plain applicationcontextinitializerinitialize invokes each given web application context any applicationcontextinitializers implementing orgspringframeworkcoreordered ordered marked orgspringframeworkcoreannotationorder order sorted appropriately sc current servlet context wac newly created application context contextinitializerclassesparam applicationcontextinitializerinitializeconfigurableapplicationcontext
close springs web application context given servlet context if overriding loadparentcontextservletcontext may override method well servletcontext servletcontext webapplicationcontext runs
instantiate root webapplicationcontext loader either default context class custom context class specified this implementation expects custom contexts implement configurablewebapplicationcontext interface overridden subclasses in addition customizecontext gets called prior refreshing context allowing subclasses perform custom modifications context sc current servlet context root webapplicationcontext configurablewebapplicationcontext
initialize springs web application context given servlet context using application context provided construction time creating new one according contextclassparam contextclass configlocationparam contextconfiglocation contextparams servletcontext current servlet context new webapplicationcontext contextloaderwebapplicationcontext contextclassparam configlocationparam
template method default implementation which may overridden subclass load obtain applicationcontext instance used parent context root webapplicationcontext return value method null parent context set the main reason load parent context allow multiple root web application contexts children shared ear context alternately also share parent context visible ejbs pure web applications usually need worry parent context root web application context the default implementation simply returns null 50 servletcontext current servlet context parent application context null none
specify applicationcontextinitializer instances used initialize application context used contextloader 42 configureandrefreshwebapplicationcontext customizecontext
bind given requestattributes current thread attributes requestattributes expose null reset threadbound context inheritable whether expose requestattributes inheritable child threads using inheritablethreadlocal
reset requestattributes current thread
return requestattributes currently bound thread exposes previously bound requestattributes instance any falls back current jsf facescontext any requestattributes currently bound thread illegalstateexception requestattributes object bound current thread setrequestattributes servletrequestattributes facesrequestattributes javaxfacescontextfacescontextgetcurrentinstance
return requestattributes currently bound thread requestattributes currently bound thread null none bound
create new servletrequestattributes instance given request request current http request
update accessed session attributes sessionsetattribute calls explicitly indicating container might modified
register given callback executed session termination note callback object serializable order survive web app restarts name name attribute register callback callback callback executed destruction
exposes native httpservletresponse were wrapping if any
create new servletrequestattributes instance given request request current http request response current http response for optional exposure
exposes httpsession were wrapping allowcreate whether allow creation new session none exists yet
return http method request 402
return jsf attribute map specified scope scope constant indicating request session scope map representation attributes specified scope scoperequest scopesession
create new facesrequestattributes adapter given facescontext facescontext current facescontext javaxfacescontextfacescontextgetcurrentinstance
signal request completed executes request destruction callbacks updates session attributes accessed request processing
remove request destruction callback specified attribute any name name attribute remove callback
register given callback executed request completion name name attribute register callback callback callback executed destruction
execute callbacks registered execution request completion
conversation id concept request method returns null
whether async request processing completed it important avoid use request response objects async processing completed servlet containers often reuse them
servlet 3 async processing timeout period begins container processing thread exited
obtain webasyncmanager current request found create associate request
obtain webasyncmanager current request found create associate request
implementation returns true default allowing interceptors given chance handle timeout
implementation empty
implementation empty
implementation returns true default allowing interceptors given chance handle error
start concurrent request processing initialize given deferredresult deferredresulthandler saves result dispatches request resume processing result asyncwebrequest also updated completion handler expires deferredresult timeout handler assuming deferredresult default timeout result deferredresult deferredresult instance initialize processingcontext additional context save accessed via getconcurrentresultcontext exception concurrent processing failed start getconcurrentresult getconcurrentresultcontext
start concurrent request processing execute given task settaskexecutorasynctaskexecutor asynctaskexecutor result task execution saved request dispatched order resume processing result task raises exception saved result raised exception callable unit work executed asynchronously processingcontext additional context save accessed via getconcurrentresultcontext exception concurrent processing failed start getconcurrentresult getconcurrentresultcontext
register callableprocessinginterceptor given key key key interceptor interceptor register
get deferredresultprocessinginterceptor registered given key key key interceptor registered key null none
register one deferredresultprocessinginterceptor deferredresultprocessinginterceptors without specified key default key derived interceptor class name hash code interceptors one interceptors register
get callableprocessinginterceptor registered given key key key interceptor registered key null none
use given webasynctask configure task executor well timeout value asyncwebrequest delegating startcallableprocessingcallable object webasynctask webasynctask containing target callable processingcontext additional context save accessed via getconcurrentresultcontext exception concurrent processing failed start
register callableprocessinginterceptor without key key derived class name hashcode interceptors one interceptors register
configure asyncwebrequest use property may set single request accurately reflect current state request eg following forward requestresponse wrapping etc however set concurrent handling progress ie isconcurrenthandlingstarted true asyncwebrequest web request use
register deferredresultprocessinginterceptor given key key key interceptor interceptor register
clear plain getconcurrentresult concurrentresult plain getconcurrentresultcontext concurrentresultcontext
provide handler use handle result value resulthandler handler deferredresultprocessinginterceptor
variant deferredresultlong object accepts dynamic fallback value based supplier timeout timeout value milliseconds ignored null timeoutresult result supplier use 511
create deferredresult timeout value default result use case timeout timeout timeout value milliseconds ignored null timeoutresult result use
return result null result wasnt set since result also null recommended use hasresult first check result prior calling method 40
return configured timeout value milliseconds
determine error handling bypassed true continue error handling false bypass error handling
invoked container thread error occurred processing async request deferredresult set implementations may invoke deferredresultsetresultobject setresult deferredresultseterrorresultobject seterrorresult resume processing request current request deferredresult deferredresult current request deferredresult set concurrent processing resumed subsequent interceptors invoked error occurred request processing true error handling continue false interceptors bypassed invoked exception case errors
invoked container thread async request times deferredresult set implementations may invoke deferredresultsetresultobject setresult deferredresultseterrorresultobject seterrorresult resume processing request current request deferredresult deferredresult current request deferredresult set concurrent processing resumed subsequent interceptors invoked true processing continue false interceptors invoked exception case errors
create webasynctask wrapping given callable callable callable concurrent handling
return timeout value milliseconds null timeout set
return asynctaskexecutor use concurrent handling null none specified
create webasynctask timeout value callable timeout timeout value milliseconds callable callable concurrent handling
create webasynctask timeout value executor instance callable timeout timeout value milliseconds ignored null executor executor use callable callable concurrent handling
create webasynctask timeout value executor name callable timeout timeout value milliseconds ignored null executorname name executor bean use callable callable concurrent handling
create new servletrequesthandledevent source component published event requesturl url request clientaddress ip address request came method http method request usually get post servletname name servlet handled request sessionid id http session username name user associated request usually userprincipal processingtimemillis processing time request milliseconds
create new servletrequesthandledevent source component published event requesturl url request clientaddress ip address request came method http method request usually get post servletname name servlet handled request sessionid id http session username name user associated request usually userprincipal processingtimemillis processing time request milliseconds failurecause cause failure statuscode http status code response
create new servletrequesthandledevent source component published event requesturl url request clientaddress ip address request came method http method request usually get post servletname name servlet handled request sessionid id http session username name user associated request usually userprincipal processingtimemillis processing time request milliseconds failurecause cause failure
customize set property sources contributed superclasses well appropriate standard servletbased environments value servletconfigpropertysourcename value servletcontextpropertysourcename value jndipropertysourcename properties present value servletconfigpropertysourcename take precedence value servletcontextpropertysourcename properties found either take precedence found value jndipropertysourcename properties take precedence system properties environment variables contributed standardenvironment superclass the servletrelated property sources added stubpropertysource stubs stage plain initpropertysourcesservletcontext servletconfig fully initialized actual servletcontext object becomes available standardenvironmentcustomizepropertysources orgspringframeworkcoreenvabstractenvironmentcustomizepropertysources servletconfigpropertysource servletcontextpropertysource orgspringframeworkjndijndipropertysource orgspringframeworkcontextsupportabstractapplicationcontextinitpropertysources initpropertysourcesservletcontext servletconfig
create new requesthandledevent session information source component published event sessionid id http session username name user associated request usually userprincipal processingtimemillis processing time request milliseconds
return full description event involving available context data
return id http session any
return name user associated request usually userprincipal javaxservlethttphttpservletrequestgetuserprincipal
return short description event involving important context data
create new requesthandledevent session information source component published event sessionid id http session username name user associated request usually userprincipal processingtimemillis processing time request milliseconds failurecause cause failure
return cause failure any
implementation delegates servletcontextgetresource throws filenotfoundexception resource found javaxservletservletcontextgetresourcestring
implementation returns name file servletcontext resource refers to orgspringframeworkutilstringutilsgetfilenamestring
implementation delegates servletcontextgetresourceasstream throws filenotfoundexception resource found javaxservletservletcontextgetresourceasstreamstring
implementation checks servletcontextgetresource javaxservletservletcontextgetresourcestring
implementation compares underlying servletcontext resource locations
implementation returns description includes servletcontext resource location
create new servletcontextresource the servlet spec requires resource paths start slash even many containers accept paths without leading slash too consequently given path prepended slash doesnt already start one servletcontext servletcontext load path path resource
implementation creates servletcontextresource applying given path relative path underlying file resource descriptor orgspringframeworkutilstringutilsapplyrelativepathstring string
implementation resolves file urls alternatively delegates servletcontextgetrealpath throwing filenotfoundexception found resolvable javaxservletservletcontextgetresourcestring javaxservletservletcontextgetrealpathstring
implementation returns hash code underlying servletcontext resource location
implementation delegates servletcontextgetresourceasstream returns null case nonreadable resource eg directory javaxservletservletcontextgetresourceasstreamstring
return custom beannamegenerator use annotatedbeandefinitionreader andor classpathbeandefinitionscanner any
register orgspringframeworkbeansfactoryconfigbeandefinition classes specified registerclass scan packages specified scanstring for values specified setconfiglocationstring setconfiglocationsstring attempt first load location class registering beandefinition class loading successful class loading fails ie classnotfoundexception raised assume value package attempt scan annotated classes enables default set annotation configuration post processors autowired required associated annotations used configuration class bean definitions registered generated bean definition names unless value attribute provided stereotype annotation beanfactory bean factory load bean definitions registerclass scanstring setconfiglocationstring setconfiglocationsstring annotatedbeandefinitionreader classpathbeandefinitionscanner
register one annotated classes processed note refresh must called order context fully process new classes annotatedclasses one annotated classes eg orgspringframeworkcontextannotationconfiguration configuration classes scanstring loadbeandefinitionsdefaultlistablebeanfactory setconfiglocationstring refresh
perform scan within specified base packages note refresh must called order context fully process new classes basepackages packages check annotated classes loadbeandefinitionsdefaultlistablebeanfactory registerclass setconfiglocationstring refresh
return custom scopemetadataresolver use annotatedbeandefinitionreader andor classpathbeandefinitionscanner any
create new livebeansview given servletcontext servletcontext current servletcontext
load bean definitions given xmlbeandefinitionreader the lifecycle bean factory handled refreshbeanfactory method therefore method supposed load andor register bean definitions delegates resourcepatternresolver resolving location patterns resource instances ioexception required xml document isnt found refreshbeanfactory getconfiglocations getresources getresourcepatternresolver
loads bean definitions via xmlbeandefinitionreader orgspringframeworkbeansfactoryxmlxmlbeandefinitionreader initbeandefinitionreader loadbeandefinitions
default location root context webinfapplicationcontextxml webinftestservletxml context namespace testservlet like dispatcherservlet instance servletname test
register requestsession scopes servletcontextawareprocessor etc
implementation supports file paths beneath root servletcontext servletcontextresource
create return new standardservletenvironment subclasses may override order configure environment specialize environment type returned
implementation supports pattern matching unexpanded wars too servletcontextresourcepatternresolver
replace servletrelated property sources
initialize theme capability
implementation supports file paths beneath root web application servletcontextresource
process autowired injection given target object based current web application context intended use delegate target target object process orgspringframeworkwebcontextcontextloadergetcurrentwebapplicationcontext
process autowired injection given target object based current root web application context stored servletcontext intended use delegate target target object process servletcontext servletcontext find spring web application context webapplicationcontextutilsgetwebapplicationcontextjavaxservletservletcontext
set servletcontext webapplicationcontext runs in
register servletcontextawareprocessor servletcontextawareprocessor
implementation supports file paths beneath root servletcontext servletcontextresource
replace servletrelated property sources
create new genericwebapplicationcontext given defaultlistablebeanfactory beanfactory defaultlistablebeanfactory instance use context servletcontext servletcontext run registerbeandefinition refresh
implementation supports pattern matching unexpanded wars too servletcontextresourcepatternresolver
create return new standardservletenvironment
initialize theme capability
register webspecific environment beans contextparameters contextattributes given beanfactory used webapplicationcontext bf beanfactory configure servletcontext servletcontext were running within servletconfig servletconfig
find root webapplicationcontext web app typically loaded via orgspringframeworkwebcontextcontextloaderlistener will rethrow exception happened root context startup differentiate failed context startup context all sc servletcontext find web application context root webapplicationcontext web app illegalstateexception root webapplicationcontext could found orgspringframeworkwebcontextwebapplicationcontextrootwebapplicationcontextattribute
return current requestattributes instance servletrequestattributes requestcontextholdercurrentrequestattributes
find unique webapplicationcontext web app either root web app context preferred unique webapplicationcontext among registered servletcontext attributes typically coming single dispatcherservlet current web application note dispatcherservlets exposure context controlled publishcontext property true default selectively switched publish single context despite multiple dispatcherservlet registrations web app sc servletcontext find web application context desired webapplicationcontext web app null none 42 getwebapplicationcontextservletcontext servletcontextgetattributenames
register webspecific scopes request session globalsession application given beanfactory used webapplicationcontext beanfactory beanfactory configure sc servletcontext were running within
replace servletbased stubpropertysource stub property sources actual instances populated given servletcontext servletconfig objects this method idempotent respect fact may called number times perform replacement stub property sources corresponding actual property sources once sources mutablepropertysources initialize must null servletcontext current servletcontext ignored null standardservletenvironmentservletcontextpropertysourcename servlet context property source already initialized servletconfig current servletconfig ignored null standardservletenvironmentservletconfigpropertysourcename servlet config property source already initialized orgspringframeworkcoreenvpropertysourcestubpropertysource orgspringframeworkcoreenvconfigurableenvironmentgetpropertysources
find root webapplicationcontext web app typically loaded via orgspringframeworkwebcontextcontextloaderlistener will rethrow exception happened root context startup differentiate failed context startup context all sc servletcontext find web application context root webapplicationcontext web app null none orgspringframeworkwebcontextwebapplicationcontextrootwebapplicationcontextattribute
find custom webapplicationcontext web app sc servletcontext find web application context attrname name servletcontext attribute look desired webapplicationcontext web app null none
load bean definitions given groovybeandefinitionreader the lifecycle bean factory handled refreshbeanfactory method therefore method supposed load andor register bean definitions delegates resourcepatternresolver resolving location patterns resource instances ioexception required groovy script xml file isnt found refreshbeanfactory getconfiglocations getresources getresourcepatternresolver
default location root context webinfapplicationcontextgroovy webinftestservletgroovy context namespace testservlet like dispatcherservlet instance servletname test
loads bean definitions via groovybeandefinitionreader orgspringframeworkbeansfactorygroovygroovybeandefinitionreader initbeandefinitionreader loadbeandefinitions
create new servletcontextawareprocessor given context config
returns servletcontext injected null method overridden subclasses context obtained postprocessor registered
returns servletconfig injected null method overridden subclasses context obtained postprocessor registered
overridden version checks servletcontextresource uses servletcontextgetresourcepaths find matching resources web application root directory case resources delegates superclass version doretrievematchingservletcontextresources servletcontextresource javaxservletservletcontextgetresourcepaths
extract entries given jar pattern jarfilepath path jar file entrypattern pattern jar entries match result set matching resources add
recursively retrieve servletcontextresources match given pattern adding given result set servletcontext servletcontext work fullpattern pattern match against preprended root directory path dir current directory result set matching resources add ioexception directory contents could retrieved servletcontextresource javaxservletservletcontextgetresourcepaths
calls initservletcontextjavaxservletservletcontext given applicationcontext webapplicationcontext
return current servletcontext illegalstateexception running within required servletcontext iscontextrequired
return current application context webapplicationcontext note use actually need access webapplicationcontextspecific functionality preferably use getapplicationcontext getservletcontext else able run nonwebapplicationcontext environments well illegalstateexception running webapplicationcontext getapplicationcontext
overrides base class behavior enforce running applicationcontext accessors throw illegalstateexception running context getapplicationcontext getmessagesourceaccessor getwebapplicationcontext getservletcontext gettempdir
return temporary directory current web application provided servlet container file representing temporary directory illegalstateexception running within servletcontext orgspringframeworkwebutilwebutilsgettempdirjavaxservletservletcontext
invoke registered destruction callbacks called servletcontext shutdown orgspringframeworkwebcontextcontextcleanuplistener
create new scope wrapper given servletcontext servletcontext servletcontext wrap
create new contextexposinghttpservletrequest given request originalrequest original httpservletrequest context webapplicationcontext request runs exposedcontextbeannames names beans context supposed exposed if nonnull beans set eligible exposure attributes
create return new standardservletenvironment
initialize theme capability
register requestsession scopes servletcontextawareprocessor etc
implementation supports file paths beneath root servletcontext servletcontextresource
staticwebapplicationcontext class support method unsupportedoperationexception always
implementation supports pattern matching unexpanded wars too servletcontextresourcepatternresolver
set servletcontext webapplicationcontext runs in
staticwebapplicationcontext class support method unsupportedoperationexception always
set converter use parsing form content by default instance allencompassingformhttpmessageconverter
set parameter name look http methods defaultmethodparam
configure custom corsprocessor use apply matched corsconfiguration request by default defaultcorsprocessor used
constructor accepting corsconfigurationsource used filter find corsconfiguration use incoming request urlbasedcorsconfigurationsource
make servletcontext filter available subclasses analogous genericservlets getservletcontext takes filterconfigs servletcontext default initialized bean spring application context falls back servletcontext bean factory runs in servletcontext instance illegalstateexception servletcontext available javaxservletgenericservletgetservletcontext javaxservletfilterconfiggetservletcontext setservletcontext
stores servletcontext bean factory runs in only relevant case initialization bean servletcontext fallback context usually provided filterconfig instance orgspringframeworkwebcontextservletcontextaware getservletcontext
return environment associated filter if none specified default environment initialized via createenvironment 439
make filterconfig filter available any analogous genericservlets getservletconfig public resemble getfilterconfig method servlet filter version shipped weblogic 61 filterconfig instance null none available javaxservletgenericservletgetservletconfig
set environment filter runs in any environment set overrides standardservletenvironment provided default this environment object used resolving placeholders resource paths passed initparameters filter initparams used environment essentially ignored
stores bean name defined spring bean factory only relevant case initialization bean name fallback filter name usually provided filterconfig instance orgspringframeworkbeansfactorybeannameaware getfiltername
standard way initializing filter map config parameters onto bean properties filter invoke subclass initialization filterconfig configuration filter servletexception bean properties invalid or required properties missing subclass initialization fails initfilterbean
make name filter available subclasses analogous genericservlets getservletname takes filterconfigs filter name default initialized bean spring application context falls back bean name defined bean factory filter name null none available javaxservletgenericservletgetservletname javaxservletfilterconfiggetfiltername setbeanname
calls initfilterbean method might contain custom initialization subclass only relevant case initialization bean standard initfilterconfig method wont called initfilterbean initjavaxservletfilterconfig
create new filterconfigpropertyvalues config filterconfig well use take propertyvalues requiredproperties set property names need cant accept default values servletexception required properties missing
writes log message request processed
writes log message request processed
set converter use parsing form content by default instance allencompassingformhttpmessageconverter
writes log message request processed
writes log message request processed
set default http status use redirects by default httpstatusseeother status 3xx redirect status use
set whether configured setencoding encoding filter supposed override existing request response encodings default false ie modify encoding javaxservlethttphttpservletrequestgetcharacterencoding returns nonnull value switch true enforce specified encoding case applying default response encoding well this equivalent setting setforcerequestencodingboolean setforceresponseencodingboolean setforcerequestencodingboolean setforceresponseencodingboolean
return configured encoding requests andor responses 43
create characterencodingfilter given encoding encoding encoding apply forcerequestencoding whether specified encoding supposed override existing request encodings forceresponseencoding whether specified encoding supposed override existing response encodings 43 setencoding setforcerequestencodingboolean setforceresponseencodingboolean
dofilter implementation stores request attribute already filtered proceeding without filtering attribute already there getalreadyfilteredattributename shouldnotfilter dofilterinternal
return name request attribute identifies request already filtered the default implementation takes configured name concrete filter instance appends filtered filter fully initialized falls back class name getfiltername alreadyfilteredsuffix
return webapplicationcontext passed construction time available otherwise attempt retrieve webapplicationcontext servletcontext attribute plain setcontextattribute configured name set otherwise look webapplicationcontext wellknown root application context attribute webapplicationcontext must already loaded stored servletcontext filter gets initialized or invoked subclasses may override method provide different webapplicationcontext retrieval strategy webapplicationcontext proxy null found delegatingfilterproxystring webapplicationcontext getcontextattribute webapplicationcontextutilsgetwebapplicationcontextjavaxservletservletcontext webapplicationcontextrootwebapplicationcontextattribute
return name target bean spring application context
actually invoke delegate filter given request response delegate delegate filter request current http request response current http response filterchain current filterchain servletexception thrown filter ioexception thrown filter
destroy filter delegate default implementation simply calls filterdestroy it delegate filter delegate never null istargetfilterlifecycle javaxservletfilterdestroy
create new delegatingfilterproxy retrieve named target bean given spring webapplicationcontext for use servlet 30 environments instancebased registration filters supported the target bean must implement standard servlet filter interface the given webapplicationcontext may may refreshed passed in not context implements configurableapplicationcontext configurableapplicationcontextrefresh refresh attempted retrieving named target bean this proxys environment inherited given webapplicationcontext targetbeanname name target filter bean spring application context must null wac application context target filter retrieved null application context looked servletcontext fallback findwebapplicationcontext setenvironmentorgspringframeworkcoreenvenvironment
initialize filter delegate defined bean given spring application context the default implementation fetches bean application context calls standard filterinit method it passing filterconfig filter proxy wac root application context initialized delegate filter servletexception thrown filter gettargetbeanname istargetfilterlifecycle getfilterconfig javaxservletfilterinitjavaxservletfilterconfig
create new delegatingfilterproxy given filter delegate bypasses entirely need interacting spring application context specifying plain settargetbeanname target bean name etc for use servlet 30 environments instancebased registration filters supported delegate filter instance proxy delegate manage lifecycle must null dofilterservletrequest servletresponse filterchain invokedelegatefilter servletrequest servletresponse filterchain destroy setenvironmentorgspringframeworkcoreenvenvironment
return name servletcontext attribute used retrieve webapplicationcontext load delegate filter bean
clean filters supplied calling ones destroy method turn reverse order filterinitfilterconfig
forms temporary chain list delegate filters supplied setfilters executes order filter delegates next one list achieving normal behavior filterchain despite fact filter filterdofilterservletrequest servletresponse filterchain
initialize filters calling ones init method turn order supplied filterinitfilterconfig
indicates whether given request response eligible etag generation the default implementation returns true conditions match response status codes 2xx series request method get response cachecontrol header set contain nostore directive request http request response http response responsestatuscode http response status code inputstream response body true eligible etag generation false otherwise
default value false filter may delay generation etag last asynchronously dispatched thread
method used disable content caching response wrapper shallowetagheaderfilter done start http streaming example response written asynchronously context servlet container thread 42
generate etag header value given response body byte array the default implementation generates md5 hash inputstream response body inputstream isweak whether generated etag weak etag header value orgspringframeworkutildigestutils
constructor required information delegaterequest supplier current httpservletrequestwrappergetrequest delegate request may change forward eg tomcat pathhelper path helper instance baseurl host scheme port based forwarded headers
returns false filter may set request context error dispatch
returns false filter may set request context asynchronously dispatched thread
set maximum length payload body included log message default 50 characters 30
create log message given request prefix suffix if includequerystring true inner part log message take form requesturiquerystring otherwise message simply form requesturi the final message composed inner part described supplied prefix suffix
default value false filter may log before message start request processing after message end last asynchronously dispatched thread exiting
forwards request next filter chain delegates subclasses perform actual request logging request processed beforerequest afterrequest
extracts message payload portion message created createmessagehttpservletrequest string string isincludepayload returns true 503
transform http post another method based methodparamname exchange current server exchange chain provides way delegate next filter mono indicate request processing complete
set name form parameter http method use by default set method
replace uri template variables values given map the given map keys represent variable names corresponding values represent variable values order variables significant urivariables map uri variables expanded uri components
remove nested uri vars regular expressions
replace uri template variables values given array the given array represents variable values order variables significant urivariablevalues uri variable values expanded uri components
return scheme null
return fragment null
replace uri template variables values given uritemplatevariables urivariables uri template values expanded uri components
simple passthrough touristring
return appropriate response object specified type available unwrapping given response far necessary response servlet response introspect requiredtype desired type response object matching response object null none type available
check given request origin list allowed origins list containing means origins allowed empty list means origin allowed note 51 method ignores forwarded xforwarded headers specify clientoriginated address consider using forwardedheaderfilter extract use discard headers true request origin valid false otherwise 415 hrefhttpstoolsietforghtmlrfc6454rfc 6454 web origin concept
return whether default html escaping enabled web application ie value defaulthtmlescape contextparam webxml if any this method differentiates param specified actual boolean value specified allowing contextspecific default case setting global level servletcontext servlet context web application whether default html escaping enabled given application null explicit default
return best available mutex given session is object synchronize given session returns session mutex attribute available usually means httpsessionmutexlistener needs defined webxml falls back httpsession mutex attribute found the session mutex guaranteed object entire lifetime session available key defined sessionmutexattribute constant serves safe reference synchronize locking current session in many cases httpsession reference safe mutex well since always object reference active logical session however guaranteed across different servlet containers 100 safe way session mutex session httpsession find mutex mutex object never null sessionmutexattribute httpsessionmutexlistener
return whether response encoding used html escaping characters thus escaping xml markup significant characters utf encodings option enabled web application servletcontext param ie value responseencodedhtmlescape contextparam webxml if any this method differentiates param specified actual boolean value specified allowing contextspecific default case setting global level servletcontext servlet context web application whether response encoding used html escaping null explicit default 412
return temporary directory current web application provided servlet container servletcontext servlet context web application file representing temporary directory
return appropriate request object specified type available unwrapping given request far necessary request servlet request introspect requiredtype desired type request object matching request object null none type available
clear servlet specs error attributes javaxservlethttphttpservletrequest attributes keys defined servlet 23 specification javaxservleterrorstatuscode javaxservleterrorexceptiontype javaxservleterrormessage javaxservleterrorexception javaxservleterrorrequesturi javaxservleterrorservletname request current servlet request
return map containing parameters given prefix maps single values string multiple values string array for example prefix spring springparam1 springparam2 result map param1 param2 keys request http request look parameters prefix beginning parameter names if null empty string parameters match map containing request parameters without prefix containing either string string array values javaxservletservletrequestgetparameternames javaxservletservletrequestgetparametervalues javaxservletservletrequestgetparametermap
retrieve first cookie given name note multiple cookies name different paths domains request current servlet request name cookie name first cookie given name null none found
determine session id given request any request current http request session id null none
check given request session attribute given name returns null session session attribute create new session none existed before request current http request name name session attribute value session attribute null found
check given request session attribute given name throws exception session session attribute create new session none existed before request current http request name name session attribute value session attribute null found illegalstateexception session attribute could found
return real path given path within web application provided servlet container prepends slash path already start slash throws filenotfoundexception path cannot resolved resource in contrast servletcontexts getrealpath returns null servletcontext servlet context web application path path within web application corresponding real path filenotfoundexception path cannot resolved resource javaxservletservletcontextgetrealpath
expose specified request attribute already present request current servlet request name name attribute value suggested value attribute
set session attribute given name given value removes session attribute value null session existed all create new session necessary request current http request name name session attribute value value session attribute
remove system property points web app root directory called shutdown web application servletcontext servlet context web application setwebapprootsystemproperty
check request sameorigin one based origin host forwarded xforwardedproto xforwardedhost xforwardedport headers note 51 method ignores forwarded xforwarded headers specify clientoriginated address consider using forwardedheaderfilter extract use discard headers true request sameorigin one false case crossorigin request 42
obtain named parameter given request parameters see findparametervaluejavautilmap string description lookup algorithm request current http request name logical name request parameter value parameter null parameter exist given request
check specific input typesubmit parameter sent request either via button directly name via image name x name y request current http request name name parameter parameter sent submitimagesuffixes
set system property web application root directory key system property defined webapprootkey contextparam webxml default webapproot can used tools support substitution systemgetproperty values like log4js key syntax within log file locations servletcontext servlet context web application illegalstateexception system property already set war file expanded webapprootkeyparam defaultwebapprootkey webapprootlistener
obtain named parameter given request parameters this method try obtain parameter value using following algorithm try get parameter value using given logical name handles parameters form logicalname value normal parameters eg submitted using hidden html form field return requested value try obtain parameter value parameter name parameter name request form logicalnamevalue xyz configured delimiter deals parameter values submitted using html form submit button if value obtained previous step x y suffix remove that handles cases value submitted using html form image button case parameter request would actually form logicalnamevaluex 123 parameters available parameter map name logical name request parameter value parameter null parameter exist given request
expose servlet specs error attributes javaxservlethttphttpservletrequest attributes keys defined servlet 23 specification error pages rendered directly rather servlet containers error page resolution javaxservleterrorstatuscode javaxservleterrorexceptiontype javaxservleterrormessage javaxservleterrorexception javaxservleterrorrequesturi javaxservleterrorservletname does override values already present respect attribute values exposed explicitly before exposes status code 200 default set javaxservleterrorstatuscode attribute explicitly before after order expose different status code request current servlet request ex exception encountered servletname name offending servlet
parse given string matrix variables example string would look like q1aq1bq2abc resulting map would contain keys q1 q2 values ab abc respectively matrixvariables unparsed matrix variables string map matrix variable names values never null 32
copy cached body content response complete whether set corresponding content length complete cached body content 42
return detail message including message nested exception one
identical encode skipping uri variable placeholders also variableencoder initialized given charset use later uri variables expanded
packageprivate constructor arguments optional null scheme scheme userinfo user info host host port port path path query query parameters fragment fragment encoded whether components already encoded
indicates whether given character subdelims set hrefhttpwwwietforgrfcrfc3986txtrfc 3986 appendix a
check uri components contain illegal characters illegalargumentexception component illegal characters
return map query parameters empty query set
encode given source encoded string using rules specified given component given options source source string charset encoding source string type uri component source encoded uri illegalargumentexception given value valid uri component
create uricomponentsbuilder uri template string implementation also breaks path path segments depending whether setparsepath parsepath enabled
determine whether supplied tag ancestor tag supplied type tag tag whose ancestors checked ancestortagclass ancestor class searched true supplied tag ancestor tag supplied type illegalargumentexception either supplied arguments null supplied ancestortagclass typeassignable tag class
determine whether supplied tag ancestor tag supplied type throwing illegalstateexception not tag tag whose ancestors checked ancestortagclass ancestor class searched tagname name tag example option ancestortagname name ancestor tag example select illegalstateexception supplied tag tag supplied parenttagclass ancestor illegalargumentexception supplied arguments null case stringtyped arguments composed wholly whitespace supplied ancestortagclass typeassignable tag class hasancestoroftypejavaxservletjsptagexttag class
determines scope given input string if string match request session page application method return pagecontextpagescope scope string inspect scope found pagecontextpagescope scope matched illegalargumentexception supplied scope null
encode given uri query parameter given encoding queryparam query parameter encoded encoding character encoding encode encoded query parameter
convenience method apply encodestring charset given uri variable values urivariables uri variable values encoded encoded string 50
extract file extension given uri path path uri path eg productsindexhtml extracted file extension eg html 432
convenience method apply encodestring charset given uri variable values urivariables uri variable values encoded encoded string 50
resolve placeholders given text replacing corresponding servlet context init parameter system property values unresolvable placeholders default value ignored passed unchanged flag set true text string resolve servletcontext servletcontext use lookups ignoreunresolvableplaceholders flag determine unresolved placeholders ignored resolved string illegalargumentexception unresolvable placeholder flag false systempropertyutilsplaceholderprefix systempropertyutilsplaceholdersuffix systempropertyutilsresolveplaceholdersstring boolean
return query string part given requests url forwarded request correctly resolves query string original request request current http request query string
return servlet path given request detecting include request url called within requestdispatcher include request current http request servlet path
sanitize given path uses following rules replace
return path within servlet mapping given request ie part requests url beyond part called servlet whole url used identify servlet detects include request url called within requestdispatcher include eg servlet mapping request uri testa testa eg servlet mapping request uri testa testa eg servlet mapping test request uri testa a eg servlet mapping test request uri test eg servlet mapping test request uri atest request current http request path within servlet mapping
return path within web application given request detects include request url called within requestdispatcher include request current http request path within web application
return context path given request detecting include request url called within requestdispatcher include as value returned requestgetcontextpath not decoded servlet container method decode it request current http request context path
decode supplied uri string strips extraneous portion
decode given matrix variables via decoderequeststringhttpservletrequest string unless seturldecodeboolean set true case assumed url path variables extracted already decoded call getlookuppathforrequesthttpservletrequest request current http request vars uri variables extracted url path map new map instance
remove semicolon content given request uri plain setremovesemicoloncontentboolean removesemicoloncontent property set true note jssessionid always removed requesturi request uri string remove content updated uri string
return request uri given request detecting include request url called within requestdispatcher include as value returned requestgetrequesturi not decoded servlet container method decode it the uri web container resolves should correct containers like jbossjetty incorrectly include strings like jsessionid uri method cuts incorrect appendices request current http request request uri
return context path given request detecting include request url called within requestdispatcher include as value returned requestgetcontextpath not decoded servlet container method decode it request current http request context path
decode given uri path variables via decoderequeststringhttpservletrequest string unless seturldecodeboolean set true case assumed url path variables extracted already decoded call getlookuppathforrequesthttpservletrequest request current http request vars uri variables extracted url path map new map instance
determine encoding given request overridden subclasses the default implementation checks request encoding falling back default encoding specified resolver request current http request encoding request never null javaxservletservletrequestgetcharacterencoding setdefaultencoding
return request uri given request forwarded request correctly resolves request uri original request
match given mapping start requesturi match return extra part method needed context path servlet path returned httpservletrequest stripped semicolon content unlike requesuri
decode given source string urldecoder encoding taken request falling back default iso88591 the default implementation uses urldecoderdecodeinput enc request current http request source string decode decoded string webutilsdefaultcharacterencoding javaxservletservletrequestgetcharacterencoding javaneturldecoderdecodestring string javaneturldecoderdecodestring
return mapping lookup path given request within current servlet mapping applicable else within web application detects include request url called within requestdispatcher include request current http request lookup path getpathwithinapplication getpathwithinservletmapping
return servlet path given request regarding include request url called within requestdispatcher include as value returned requestgetservletpath already decoded servlet container method attempt decode it request current http request servlet path
create uri components builder given http url string note presence reserved characters prevent correct parsing uri string example query parameter contains characters query string cannot parsed unambiguously values substituted uri variables enable correct parsing classcode string urlstring httpsexamplecomhotels42filtervalue uricomponentsbuilderfromhttpurlurlstringbuildandexpandhotcold httpurl source uri uri components uri
create builder initialized given uri uri uri initialize new uricomponentsbuilder
adapt builders schemehostport given headers specifically forwarded hrefhttptoolsietforghtmlrfc7239rfc 7239 xforwardedhost xforwardedport xforwardedproto forwarded found note method uses values forwarded headers present order reflect clientoriginated protocol address consider using forwardedheaderfilter order choose central place whether extract use discard headers see spring framework reference filter headers http headers consider uricomponentsbuilder 427
create deep copy given uricomponentsbuilder builder copy 413
build uricomponents instance various components contained builder encoded whether components set builder encoded true false uri components
append given path existing path builder given path may contain uri template variables path uri path uricomponentsbuilder
add given query parameters params params uricomponentsbuilder 40
variant encode charset utf8 charset charset use encoding 508
initialize components builder components given uri uri uri uricomponentsbuilder
set path builder overriding existing path path segment values path uri path a null value results empty path uricomponentsbuilder
create builder initialized given path path path initialize new uricomponentsbuilder
set uri host given host may contain uri template variables may also null clear host builder host uri host uricomponentsbuilder
set query parameter values overriding existing query values parameter values given query parameter removed name query parameter name values query parameter values uricomponentsbuilder
append given query existing query builder given query may contain uri template variables note presence reserved characters prevent correct parsing uri string example query parameter contains characters query string cannot parsed unambiguously values substituted uri variables enable correct parsing classcode uricomponentsbuilderfromuristringhotels42 queryfiltervalue buildandexpandhotcold query query string uricomponentsbuilder
set uri scheme given scheme may contain uri template variables may also null clear scheme builder scheme uri scheme uricomponentsbuilder
set uri user info given user info may contain uri template variables may also null clear user info builder userinfo uri user info uricomponentsbuilder
create builder initialized given uri string note presence reserved characters prevent correct parsing uri string example query parameter contains characters query string cannot parsed unambiguously values substituted uri variables enable correct parsing classcode string uristring hotels42filtervalue uricomponentsbuilderfromuristringuristringbuildandexpandhotcold uri uri string initialize new uricomponentsbuilder
create instance parsing origin header http request hrefhttpstoolsietforghtmlrfc6454rfc 6454
public declaration objects clone method delegates clonebuilder
set uri port use method port needs parameterized uri variable otherwise use portint passing null clear port builder port uri port uricomponentsbuilder
set uri fragment given fragment may contain uri template variables may also null clear fragment builder fragment uri fragment uricomponentsbuilder
configure uri variables expanded build time the provided variables may subset required ones build time available ones expanded unresolved uri placeholders left place still expanded later in contrast uricomponentsexpandmap buildandexpandmap method useful need supply uri variables without building uricomponents instance yet perhaps preexpand shared default values host port urivariables uri variables use uricomponentsbuilder 508
build uri string effectively shortcut building encoding returning string representation classcode string uri builderbuildencodetouristring however urivariablesmap uri variables provided uri template preencoded separately uri variables see encode details ie equivalent to string uri builderencodebuildtouristring 41 uricomponentstouristring
set uri port passing 1 clear port builder port uri port uricomponentsbuilder
set query parameter values overriding existing query values params query parameter name uricomponentsbuilder 42
append given query parameter existing query parameters given name values may contain uri template variables values given resulting uri contain query parameter name ie foo instead foobar name query parameter name values query parameter values uricomponentsbuilder
append path segments existing path path segment may contain uri template variables contain slashes use path subsequently ensure trailing slash pathsegments uri path segments uricomponentsbuilder
set query builder overriding existing query parameters query query string null value removes query parameters uricomponentsbuilder
set append individual uri components builder values given uricomponents instance for semantics component ie set vs append check builder methods class example hoststring sets pathstring appends uricomponents uricomponents copy uricomponentsbuilder
set uri schemespecificpart invoked method overwrites plain userinfostring userinfo plain hoststring host plain portint port plain pathstring path querystring query ssp uri schemespecificpart may contain uri template parameters uricomponentsbuilder
provide default uri variable values use expanding uri templates map variables defaulturivariables default uri variable values
configure default uri variable values use every expanded uri template default values apply expanding map array map supplied expandstring map override default values defaulturivariables default uri variable values 43
configure base url prepend uri templates with base url must scheme host may optionally contain port path base url must fully expanded encoded done via uricomponentsbuilder baseurl base url
insert base url if configured unless given url host already
return configured base url
turn special characters html character references handles complete character set defined html 401 recommendation escapes special characters corresponding numeric reference hex format xhex least required specified encoding words special character escaped given encoding may be reference hrefhttpwwww3orgtrhtml4sgmlentitieshtml httpwwww3orgtrhtml4sgmlentitieshtml input unescaped input string encoding name supported javaniocharsetcharset charset escaped string 412
turn special characters html character references handles complete character set defined html 401 recommendation escapes special characters corresponding entity reference eg least required specified encoding words special character escaped given encoding may be reference hrefhttpwwww3orgtrhtml4sgmlentitieshtml httpwwww3orgtrhtml4sgmlentitieshtml input unescaped input string encoding name supported javaniocharsetcharset charset escaped string 412
turn special characters html character references handles complete character set defined html 401 recommendation escapes special characters corresponding numeric reference decimal format decimal least required specified encoding words special character escaped given encoding may be reference hrefhttpwwww3orgtrhtml4sgmlentitieshtml httpwwww3orgtrhtml4sgmlentitieshtml input unescaped input string encoding name supported javaniocharsetcharset charset escaped string 412
return domain cookies created generator any
create cookie given value using cookie descriptor settings generator except cookiemaxage cookievalue value cookie crate cookie setcookiename setcookiedomain setcookiepath
return given name cookies created generator
add cookie given value response using cookie descriptor settings generator delegates createcookie cookie creation response http response add cookie cookievalue value cookie add setcookiename setcookiedomain setcookiepath setcookiemaxage
return maximum age cookies created generator
remove cookie generator describes response generate cookie empty value max age 0 delegates createcookie cookie creation response http response remove cookie setcookiename setcookiedomain setcookiepath
create new contentcachingrequestwrapper given servlet request request original servlet request
create new contentcachingrequestwrapper given servlet request request original servlet request contentcachelimit maximum number bytes cache per request 436 handlecontentoverflowint
construct new uritemplate given uri string uritemplate uri template string
match given uri map variable values keys returned map variable names values variable values occurred given uri example classcode uritemplate template new uritemplatehttpexamplecomhotelshotelbookingsbooking systemoutprintlntemplatematchhttpexamplecomhotels1bookings42 print hotel1 booking42 uri uri match map variable values
indicate whether given uri matches template uri uri match true matches false otherwise
given map variables expands template uri map keys represent variable names map values variable values order variables significant example classcode uritemplate template new uritemplatehttpexamplecomhotelshotelbookingsbooking mapstring string urivariables new hashmapstring string urivariablesputbooking 42 urivariablesputhotel rest relax systemoutprintlntemplateexpandurivariables print httpexamplecomhotelsrest202620relaxbookings42 urivariables map uri variables expanded uri illegalargumentexception urivariables null contain values variable names
given array variables expand template full uri array represent variable values order variables significant example classcode uritemplate template new uritemplatehttpexamplecomhotelshotelbookingsbooking systemoutprintlntemplateexpandrest relax 42 print httpexamplecomhotelsrest202620relaxbookings42 urivariablevalues array uri variables expanded uri illegalargumentexception urivariables null contain sufficient variables
return char mapped given entityreference 1
return reference mapped given character null none found
return reference mapped given character null none found 412
returns new set character entity references reflecting html 40 character set
turn javascript special characters escaped characters input input string string escaped characters
create new capturetherestpathelement instance pos position path element within path pattern text capturedescriptor character array containing contents like a b separator separator used path pattern
matching separator easy basically character candidateindex must separator
matching wildcardpathelement quite straight forward scan candidate candidateindex onwards next separator end candidate
reset flags position markers computed path element processing
processing separator quick peek whether followed and end pattern next separator
used knowledge built whilst processing since last path element determine kind path element create new path element
record new captured variable clashes existing one report error
package private delegate pathpatternparserparsestring
push path element chain build newpathelement new path element add
hit want jump regex specification variable pos pointing want skip nested pairs dont escaped abcvarx12def an escaped treated end regex abcvarxydef a separator indicate end regex escaped
path element representing captured variable locate constraint pattern assumes constraint pattern data complete path expression eg aaabbbccc offset start capture pattern interest index character within pattern expression relative start whole expression
create new capturevariablepathelement instance pos position pattern capture element capturedescriptor form aaaaapattern
create new path element pos position path element starts pattern data separator separator use path pattern
match beginning given path return remaining portion covered pattern useful matching nested routes path matched incrementally level pathcontainer candidate path attempt match info object match result null match
whether pattern matches given path pathcontainer candidate path attempt match true path matches pattern
return string form pattern built walking path element chain string form pattern
return decoded value specified element pathindex path element index decoded value
match pattern given uri path return extracted uri template variables well path parameters matrix variables pathcontainer candidate path attempt match info object extracted variables null match
determine patternmapped part given path for example docscvscommithtml docscvscommithtml docs docscvscommit cvscommit docscvshtml docscvscommithtml commithtml docs docscvscommit cvscommit notes assumes matches returns true path not enforce this duplicate occurrences separators within returned result removed leading trailing separators removed returned result path path matches pattern subset path matched pattern none matched pattern elements
join two paths together including separator necessary extraneous separators removed if first path ends one second path starts one path1 first path path2 second path joined path may include separator necessary
combine pattern another currently produce new pathpattern produces new string
compare pattern supplied pattern return 101 pattern specific less specific supplied pattern aim sort specific patterns first
return detailed message includes original pattern text pointer error position well error message
return formatted message inserts applied
calculate full endpoint address given endpoint endpoint jaxws provider endpoint object servicename given service name full endpoint address
return namespace uri service
set wsdl document url resource 32
create jaxws service according parameters factory setservicename setwsdldocumenturl
return url wsdl document describes service
return name service
return password specify stub
allow map access custom properties set stub option add override specific entries useful specifying entries directly example via custompropertiesmykey particularly useful adding overriding entries child bean definitions
return underlying jaxws port stub interceptor delegates method invocation proxy
return prepared qname port setportname getqname
return username specify stub
initialize jaxws port interceptor
initialize client interceptors properties given webservice annotation necessary possible ie wsdldocumenturl namespaceuri servicename portname havent set corresponding values declared annotation level specified service interface ann webservice annotation found specified service interface
return soap action uri specify stub
set bean classloader use interceptor primarily building client proxy jaxwsportproxyfactorybean subclass
perform jaxws service invocation given port stub invocation aop method invocation portstub rmi port stub invoke invocation result throwable case invocation failure getportstub
return name port
return endpoint address specify stub
obtain port stub given jaxws service service service object obtain port portqname name desired port specified corresponding port object returned servicegetport
return interface service factory create proxy for
return whether client interceptor already prepared ie already looked jaxws service port
return reference existing jaxws service instance any
return bean classloader use interceptor
perform jaxws service invocation based given method invocation invocation aop method invocation invocation result throwable case invocation failure getportstub doinvokeorgaopallianceinterceptmethodinvocation object
set interface service factory create proxy for
prepare given jaxws port stub applying properties it called prepare stub current jaxws port stub setusername setpassword setendpointaddress setmaintainsession setcustomproperties
build httpcontext given endpoint endpoint jaxws provider endpoint object servicename given service name fully populated httpcontext
immediately publish endpoints fully configured publishendpoints
create actual endpoint instance bean service object wrap endpoint instance endpointcreateobject endpointcreatestring object
stops published endpoints taking web services offline
publish javaxjwswebservice annotated beans containing beanfactory publishendpoint
obtains web service beans publishes jaxws endpoints
reads remote invocation request executes it writes remote invocation result response readremoteinvocationhttpservletrequest invokeandcreateresultorgspringframeworkremotingsupportremoteinvocation object writeremoteinvocationresulthttpservletrequest httpservletresponse remoteinvocationresult
return outputstream use writing remote invocation results potentially decorating given original outputstream the default implementation returns given stream asis overridden example custom encryption compression request current http request response current http response os original outputstream potentially decorated outputstream ioexception case io failure
write given remoteinvocationresult given http response request current http request response current http response result remoteinvocationresult object ioexception case io failure
read remoteinvocation given http request delegates readremoteinvocationhttpservletrequest inputstream httpservletrequestgetinputstream servlet requests input stream request current http request remoteinvocation object ioexception case io failure classnotfoundexception thrown deserialization
serialize given remoteinvocation given outputstream the default implementation gives decorateoutputstream chance decorate stream first for example custom encryption compression creates javaioobjectoutputstream final stream calls dowriteremoteinvocationresult actually write object can overridden custom serialization invocation request current http request response current http response result remoteinvocationresult object os outputstream write ioexception case io failure decorateoutputstream dowriteremoteinvocationresult
deserialize remoteinvocation object given inputstream gives decorateinputstream chance decorate stream first for example custom encryption compression creates orgspringframeworkremotingrmicodebaseawareobjectinputstream calls doreadremoteinvocation actually read object can overridden custom serialization invocation request current http request inputstream read remoteinvocation object ioexception case io failure classnotfoundexception thrown deserialization
execute given remote invocation via httpinvokerrequestexecutor this implementation delegates executerequestremoteinvocation overridden react specific original methodinvocation invocation remoteinvocation execute originalinvocation original methodinvocation can eg cast proxymethodinvocation interface accessing user attributes remoteinvocationresult object exception case errors
return codebase url download classes found locally
return httpinvokerrequestexecutor used remote accessor creates default simplehttpinvokerrequestexecutor executor initialized already
convert given http invoker access exception appropriate spring remoteaccessexception ex exception convert remoteaccessexception throw null original exception propagated caller
serialize given remoteinvocation given outputstream the default implementation gives decorateoutputstream chance decorate stream first for example custom encryption compression creates objectoutputstream final stream calls dowriteremoteinvocation actually write object can overridden custom serialization invocation invocation remoteinvocation object os outputstream write ioexception thrown io methods decorateoutputstream dowriteremoteinvocation
serialize given remoteinvocation bytearrayoutputstream invocation remoteinvocation object bytearrayoutputstream serialized remoteinvocation ioexception thrown io methods
specify content type use sending http invoker requests default applicationxjavaserializedobject
deserialize remoteinvocationresult object given inputstream gives decorateinputstream chance decorate stream first for example custom encryption compression creates objectinputstream via createobjectinputstream calls doreadremoteinvocationresult actually read object can overridden custom serialization invocation inputstream read codebaseurl codebase url load classes found locally remoteinvocationresult object ioexception thrown io methods classnotfoundexception thrown deserialization decorateinputstream createobjectinputstream doreadremoteinvocationresult
return bean classloader executor supposed use
perform actual reading invocation object given objectinputstream the default implementation simply calls readobject overridden deserialization custom wrapper object rather plain invocation example encryptionaware holder ois objectinputstream read remoteinvocationresult object ioexception thrown io methods classnotfoundexception class name serialized object couldnt get resolved javaioobjectoutputstreamwriteobject
create requestconfig given configuration return null indicate custom request config set defaults httpclient used the default implementation tries merge defaults client local customizations instance any config http invoker configuration specifies target service requestconfig use
validate given response contained httppost object throwing exception correspond successful http response default implementation rejects http status code beyond 2xx avoid parsing response body trying deserialize corrupted stream config http invoker configuration specifies target service response resulting httpresponse validate javaioioexception validation failed
create httppost given configuration the default implementation creates standard httppost applicationxjavaserializedobject contenttype header config http invoker configuration specifies target service httppost instance javaioioexception thrown io methods
create new instance httpcomponentshttpinvokerrequestexecutor default httpclient uses default orgapachehttpimplconnpoolingclientconnectionmanager
set socket read timeout underlying httpclient timeout value 0 specifies infinite timeout additional properties configured specifying requestconfig instance custom httpclient timeout timeout value milliseconds defaultreadtimeoutmilliseconds requestconfiggetsockettimeout
execute given request httpclient this method implements basic processing workflow actual work happens classs template methods createhttppost setrequestbody executehttppost validateresponse getresponsebody
determine whether given response indicates gzip response the default implementation checks whether http contentencoding header contains gzip in casing httpresponse resulting httpresponse check whether given response indicates gzip response
extract response body given executed remote invocation request the default implementation simply fetches httpposts response body stream response recognized gzip response inputstream get wrapped gzipinputstream config http invoker configuration specifies target service httpresponse resulting httpresponse read response body inputstream response body javaioioexception thrown io methods isgzipresponse javautilzipgzipinputstream
set connection timeout underlying httpclient timeout value 0 specifies infinite timeout additional properties configured specifying requestconfig instance custom httpclient timeout timeout value milliseconds requestconfiggetconnecttimeout
set given serialized remote invocation request body the default implementation simply sets serialized invocation httpposts request body overridden example write specific encoding potentially set appropriate http request headers config http invoker configuration specifies target service httppost httppost set request body baos bytearrayoutputstream contains serialized remoteinvocation object javaioioexception thrown io methods
execute given httppost instance config http invoker configuration specifies target service httpclient httpclient execute httppost httppost execute resulting httpresponse javaioioexception thrown io methods
execute given request standard httpurlconnection this method implements basic processing workflow actual work happens classs template methods openconnection prepareconnection writerequestbody validateresponse readresponsebody
open httpurlconnection given remote invocation request config http invoker configuration specifies target service httpurlconnection given request ioexception thrown io methods javaneturlopenconnection
prepare given http connection the default implementation specifies post method applicationxjavaserializedobject contenttype header given content length contentlength header connection http connection prepare contentlength length content send ioexception thrown httpurlconnection methods javanethttpurlconnectionsetrequestmethod javanethttpurlconnectionsetrequestproperty
determine whether given response gzip response default implementation checks whether http contentencoding header contains gzip in casing con httpurlconnection check
set given serialized remote invocation request body the default implementation simply write serialized invocation httpurlconnections outputstream overridden example write specific encoding potentially set appropriate http request headers config http invoker configuration specifies target service con httpurlconnection write request body baos bytearrayoutputstream contains serialized remoteinvocation object ioexception thrown io methods javanethttpurlconnectiongetoutputstream javanethttpurlconnectionsetrequestproperty
validate given response contained httpurlconnection object throwing exception correspond successful http response default implementation rejects http status code beyond 2xx avoid parsing response body trying deserialize corrupted stream config http invoker configuration specifies target service con httpurlconnection validate ioexception validation failed javanethttpurlconnectiongetresponsecode
extract response body given executed remote invocation request the default implementation simply reads serialized invocation httpurlconnections inputstream response recognized gzip response inputstream get wrapped gzipinputstream config http invoker configuration specifies target service con httpurlconnection read response body inputstream response body ioexception thrown io methods isgzipresponse javautilzipgzipinputstream javanethttpurlconnectiongetinputstream javanethttpurlconnectiongetheaderfieldint javanethttpurlconnectiongetheaderfieldkeyint
read remoteinvocation given http request delegates readremoteinvocationhttpexchange inputstream httpexchangegetrequestbody requests input stream exchange current http requestresponse remoteinvocation object javaioioexception case io failure classnotfoundexception thrown deserialization
deserialize remoteinvocation object given inputstream gives decorateinputstream chance decorate stream first for example custom encryption compression creates orgspringframeworkremotingrmicodebaseawareobjectinputstream calls doreadremoteinvocation actually read object can overridden custom serialization invocation exchange current http requestresponse inputstream read remoteinvocation object javaioioexception case io failure classnotfoundexception thrown deserialization
reads remote invocation request executes it writes remote invocation result response readremoteinvocationhttpexchange invokeandcreateresultremoteinvocation object writeremoteinvocationresulthttpexchange remoteinvocationresult
write given remoteinvocationresult given http response exchange current http requestresponse result remoteinvocationresult object javaioioexception case io failure
serialize given remoteinvocation given outputstream the default implementation gives decorateoutputstream chance decorate stream first for example custom encryption compression creates javaioobjectoutputstream final stream calls dowriteremoteinvocationresult actually write object can overridden custom serialization invocation exchange current http requestresponse result remoteinvocationresult object os outputstream write javaioioexception case io failure decorateoutputstream dowriteremoteinvocationresult
processes incoming hessian request creates hessian response
initialize exporter
actually invoke skeleton given streams skeleton skeleton invoke inputstream request stream outputstream response stream throwable invocation failed
perform invocation exported object inputstream request stream outputstream response stream throwable invocation failed
set whether version 2 hessian protocol used parsing requests replies default false comcauchohessianclienthessianproxyfactorysethessian2request
convert given hessian access exception appropriate spring remoteaccessexception ex exception convert remoteaccessexception throw
initialize hessian proxy interceptor remotelookupfailureexception service url invalid
create hessian proxy wrapped interceptor proxyfactory proxy factory use hessian proxy malformedurlexception thrown proxy factory comcauchohessianclienthessianproxyfactorycreate
processes incoming hessian request creates hessian response
trigger cancellation scheduled task
create new intervaltask runnable underlying task execute interval often milliseconds task executed initialdelay initial delay first execution task
create new task runnable underlying task execute
create new triggertask runnable underlying task execute trigger specifies task executed
add fixeddelay intervaltask 32 taskschedulerschedulewithfixeddelayrunnable long
add triggertask 32 taskschedulerscheduleatfixedraterunnable long
schedule specified fixeddelay task either right away possible initialization scheduler handle scheduled task allowing cancel or null processing previously registered task 502
schedule registered tasks underlying plain settaskschedulertaskscheduler task scheduler
schedule specified trigger task either right away possible initialization scheduler handle scheduled task allowing cancel 43
set taskscheduler register scheduled tasks with javautilconcurrentscheduledexecutorservice wrapped taskscheduler
specify triggered tasks map runnables the tasks fixedrate values taskschedulerscheduleatfixedraterunnable long
get fixedrate tasks unmodifiable list intervaltask objects list tasks never null 42
add crontask 32
schedule specified cron task either right away possible initialization scheduler handle scheduled task allowing cancel or null processing previously registered task 43
get cron tasks unmodifiable list crontask objects list tasks never null 42
specify triggered tasks map runnables the tasks cron expressions crontrigger
return whether scheduledtaskregistrar tasks registered 32
schedule specified fixedrate task either right away possible initialization scheduler handle scheduled task allowing cancel or null processing previously registered task 502
schedule specified fixedrate task either right away possible initialization scheduler handle scheduled task allowing cancel or null processing previously registered task 43 502 favor schedulefixedratetaskfixedratetask
set taskscheduler register scheduled tasks with
schedule specified fixeddelay task either right away possible initialization scheduler handle scheduled task allowing cancel or null processing previously registered task 43 502 favor schedulefixeddelaytaskfixeddelaytask
add fixedrate intervaltask 32 taskschedulerscheduleatfixedraterunnable long
get trigger tasks unmodifiable list triggertask objects list tasks never null 42
specify triggered tasks map runnables the tasks trigger objects typically custom implementations trigger interface
calls scheduletasks bean construction time
return taskscheduler instance registrar may null
return locally registered tasks scheduled registrar 502 addtriggertask addcrontask addfixedratetask addfixeddelaytask
get fixeddelay tasks unmodifiable list intervaltask objects list tasks never null 42
specify triggered tasks map runnables the tasks fixeddelay values taskschedulerschedulewithfixeddelayrunnable long
create new crontask runnable underlying task execute crontrigger cron trigger defining task executed
decorate task error handling provided errorhandler null used otherwise repeating tasks errors suppressed default whereas oneshot tasks errors propagated default since errors may expected returned future cases errors logged
create scheduledmethodrunnable given target instance calling specified method name target target instance call method methodname name target method nosuchmethodexception specified method exist
create scheduledmethodrunnable given target instance calling specified method target target instance call method method target method call
determine whether specified expression represents valid cron pattern expression expression evaluate true given expression valid cron expression 43
construct cronsequencegenerator pattern provided using specified timezone expression spaceseparated list time fields timezone timezone use generated trigger times illegalargumentexception pattern cannot parsed
reset calendar setting fields provided zero
search bits provided next set bit value provided reset calendar bits bitset representing allowed values field value current value field calendar calendar increment move bits field field increment calendar calendar static constants defining valid fields lowerorders calendar field ids reset ie ones lower significance field interest value calendar field next sequence
get next date sequence matching cron pattern value provided return value whole number seconds input value date seed value next value matching pattern
replace values commaseparated list case insensitive index list new string values list replaced
parse given pattern expression
create new delegatingerrorhandlingrunnable delegate runnable implementation delegate errorhandler errorhandler handling exceptions
create trigger given period time unit time unit apply period also initialdelay value configured trigger later via setinitialdelaylong
returns time task run again
build message invocation failure exception error message including target method name etc
update holders state latest time values lastscheduledexecutiontime last scheduled execution time lastactualexecutiontime last actual execution time lastcompletiontime last completion time
create simpletriggercontext given time values lastscheduledexecutiontime last scheduled execution time lastactualexecutiontime last actual execution time lastcompletiontime last completion time
determine next execution time according given trigger context next execution times calculated based plain triggercontextlastcompletiontime completion time previous execution therefore overlapping executions wont occur
register specified scheduledexecutortask scheduledexecutortasks given scheduledexecutorservice tasks specified scheduledexecutortasks never empty executor scheduledexecutorservice register tasks on
determine actual runnable schedule given task wraps tasks runnable orgspringframeworkschedulingsupportdelegatingerrorhandlingrunnable catch log exception necessary suppress exception according setcontinuescheduledexecutionafterexception continuescheduledexecutionafterexception flag task scheduledexecutortask schedule actual runnable schedule may decorator
set scheduledexecutorservices pool size default 1
create new scheduledexecutorservice instance the default implementation creates scheduledthreadpoolexecutor overridden subclasses provide custom scheduledexecutorservice instances poolsize specified pool size threadfactory threadfactory use rejectedexecutionhandler rejectedexecutionhandler use new scheduledexecutorservice instance afterpropertiesset javautilconcurrentscheduledthreadpoolexecutor
cancel given remaining task never commended execution returned executorserviceshutdownnow task task cancel typically runnablefuture 505 shutdown runnablefuturecancelboolean
set rejectedexecutionhandler use executorservice default executorservices default abort policy javautilconcurrentthreadpoolexecutorabortpolicy
perform shutdown underlying executorservice javautilconcurrentexecutorserviceshutdown javautilconcurrentexecutorserviceshutdownnow
set executorservice
wait executor terminate according value setawaitterminationseconds awaitterminationseconds property
calls shutdown beanfactory destroys task executor instance shutdown
calls initialize container applied property values initialize
return runnable schedule executor task
create new scheduledexecutortask default onetime execution given delay executortask runnable schedule delay delay starting task first time ms
create new scheduledexecutortask executortask runnable schedule delay delay starting task first time ms period period repeated task executions ms fixedrate whether schedule fixedrate execution
specify javautilconcurrentexecutor delegate to autodetects jsr236 javaxenterpriseconcurrentmanagedexecutorservice order expose javaxenterpriseconcurrentmanagedtask adapters it
create new concurrenttaskexecutor using single thread executor default javautilconcurrentexecutorsnewsinglethreadexecutor
create new concurrenttaskexecutor using given javautilconcurrentexecutor autodetects jsr236 javaxenterpriseconcurrentmanagedexecutorservice order expose javaxenterpriseconcurrentmanagedtask adapters it executor javautilconcurrentexecutor delegate
create blockingqueue use threadpoolexecutor a linkedblockingqueue instance created positive capacity value synchronousqueue else queuecapacity specified queue capacity blockingqueue instance javautilconcurrentlinkedblockingqueue javautilconcurrentsynchronousqueue
create new instance threadpoolexecutor subclass thereof the default implementation creates standard threadpoolexecutor overridden provide custom threadpoolexecutor subclasses corepoolsize specified core pool size maxpoolsize specified maximum pool size keepaliveseconds specified keepalive time seconds queue blockingqueue use threadfactory threadfactory use rejectedexecutionhandler rejectedexecutionhandler use new threadpoolexecutor instance afterpropertiesset
return current pool size requires underlying scheduledthreadpoolexecutor getscheduledthreadpoolexecutor javautilconcurrentscheduledthreadpoolexecutorgetpoolsize
create new scheduledexecutorservice instance the default implementation creates scheduledthreadpoolexecutor overridden subclasses provide custom scheduledexecutorservice instances poolsize specified pool size threadfactory threadfactory use rejectedexecutionhandler rejectedexecutionhandler use new scheduledexecutorservice instance afterpropertiesset javautilconcurrentscheduledthreadpoolexecutor
return number currently active threads requires underlying scheduledthreadpoolexecutor getscheduledthreadpoolexecutor javautilconcurrentscheduledthreadpoolexecutorgetactivecount
return underlying scheduledthreadpoolexecutor available underlying scheduledexecutorservice never null illegalstateexception threadpooltaskscheduler hasnt initialized yet underlying scheduledexecutorservice isnt scheduledthreadpoolexecutor getscheduledexecutor
return underlying scheduledexecutorservice native access underlying scheduledexecutorservice never null illegalstateexception threadpooltaskscheduler hasnt initialized yet
return current setting removeoncancel mode requires underlying scheduledthreadpoolexecutor
set scheduledexecutorservices pool size default 1 this setting modified runtime example jmx
set removeoncancel mode scheduledthreadpoolexecutor default false set true target executor switched removeoncancel mode if possible soft fallback otherwise this setting modified runtime example jmx
create new concurrenttaskscheduler using single thread executor default javautilconcurrentexecutorsnewsinglethreadscheduledexecutor
create new concurrenttaskscheduler using given javautilconcurrentexecutor javautilconcurrentscheduledexecutorservice delegates autodetects jsr236 javaxenterpriseconcurrentmanagedscheduledexecutorservice order use triggerbased scheduling possible instead springs local trigger management concurrentexecutor javautilconcurrentexecutor delegate orgspringframeworkschedulingschedulingtaskexecutor invocations scheduledexecutor javautilconcurrentscheduledexecutorservice delegate taskscheduler invocations
provide errorhandler strategy
create new concurrenttaskscheduler using given javautilconcurrentscheduledexecutorservice shared delegate autodetects jsr236 javaxenterpriseconcurrentmanagedscheduledexecutorservice order use triggerbased scheduling possible instead springs local trigger management scheduledexecutor javautilconcurrentscheduledexecutorservice delegate orgspringframeworkschedulingschedulingtaskexecutor well taskscheduler invocations
create blockingqueue use threadpoolexecutor a linkedblockingqueue instance created positive capacity value synchronousqueue else queuecapacity specified queue capacity blockingqueue instance javautilconcurrentlinkedblockingqueue javautilconcurrentsynchronousqueue
return threadpoolexecutors core pool size
return current pool size javautilconcurrentthreadpoolexecutorgetpoolsize
return threadpoolexecutors keepalive seconds
return underlying threadpoolexecutor native access underlying threadpoolexecutor never null illegalstateexception threadpooltaskexecutor hasnt initialized yet
return number currently active threads javautilconcurrentthreadpoolexecutorgetactivecount
set threadpoolexecutors core pool size default 1 this setting modified runtime example jmx
set threadpoolexecutors keepalive seconds default 60 this setting modified runtime example jmx
note method exposes executorservice base class stores actual threadpoolexecutor handle internally override method replacing executor rather decorating executorservice handle storing custom state
return threadpoolexecutors maximum pool size
set threadpoolexecutors maximum pool size default integermaxvalue this setting modified runtime example jmx
return qualifier bean name executor used executing given method specified via asyncvalue method declaring class level async specified method class level methods value takes precedence even empty string indicating default executor used preferentially method method inspect executor qualifier metadata qualifier specified otherwise empty string indicating plain setexecutorexecutor default executor used determineasyncexecutormethod
making beanfactory available optional set schedulingconfigurer beans wont get autodetected setscheduler scheduler explicitly configured
process given scheduled method declaration given bean scheduled scheduled annotation method method annotation declared bean target bean instance createrunnableobject method
return currently scheduled tasks scheduled methods well programmatic schedulingconfigurer interaction 502
create runnable given bean instance calling specified scheduled method the default implementation creates scheduledmethodrunnable target target bean instance method scheduled method call 51 scheduledmethodrunnablescheduledmethodrunnableobject method
create scheduledannotationbeanpostprocessor delegating specified scheduledtaskregistrar registrar scheduledtaskregistrar register scheduled tasks 51
setting applicationcontext optional set registered tasks activated contextrefreshedevent phase set happen aftersingletonsinstantiated time
executor instance used processing async method invocations
asyncuncaughtexceptionhandler instance used exception thrown asynchronous method execution void return type
collect asyncconfigurer beans autowiring
configure postprocessor given executor exception handler suppliers applying corresponding default supplier resolvable 51
set async annotation type detected either class method level default async annotation ejb 31 javaxejbasynchronous annotation detected this setter property exists developers provide nonspringspecific annotation type indicate method or methods given class invoked asynchronously asyncannotationtype desired annotation type
returns proxyasyncconfiguration aspectjasyncconfiguration proxy aspectj values enableasyncmode respectively
create new asyncannotationadvisor given task executor executor task executor use asynchronous methods can null trigger default executor resolution exceptionhandler asyncuncaughtexceptionhandler use handle unexpected exception thrown asynchronous method executions annotationasyncexecutioninterceptorgetdefaultexecutorbeanfactory
set async annotation type the default async annotation type async annotation well ejb 31 javaxejbasynchronous annotation if present this setter property exists developers provide nonspringspecific annotation type indicate method executed asynchronously asyncannotationtype desired annotation type
set beanfactory used looking executors qualifier
calculate pointcut given async annotation types any asyncannotationtypes async annotation types introspect applicable pointcut object null none
create new asyncannotationadvisor given task executor executor task executor use asynchronous methods can null trigger default executor resolution exceptionhandler asyncuncaughtexceptionhandler use handle unexpected exception thrown asynchronous method executions 51 annotationasyncexecutioninterceptorgetdefaultexecutorbeanfactory
determine exposed exception either cause given executionexception original exception asis original original given forexecutionexception exposed exception
create new asyncresult holder value value pass
copy overrides given classloader classloader copy
create new instrumentationloadtimeweaver given classloader classloader classloader registered transformers supposed apply
ability weave current class loader starting jvm way instrumentable class loader always current loader
implementation always returns simplethrowawayclassloader
remove registered transformers inverse order registration
obtain instrumentation instance current vm available instrumentation instance null none found isinstrumentationavailable
create new simpleloadtimeweaver given class loader classloader classloader delegate weaving must support required weaving methods illegalstateexception supplied classloader support required weaving methods
add given classfiletransformer list transformers classloader apply transformer classfiletransformer
copy classfiletransformers given classloader list transformers classloader apply classloader copy
determine whether given class excluded shadowing classname name class whether specified class shadowed
create new shadowingclassloader decorating given classloader enclosingclassloader classloader decorate defaultexcludes whether apply defaultexcludedpackages 438
apply transformation given class byte definition method always return nonnull byte array if transformation taken place array content identical original one classname full qualified name class format ie somepackagesomeclass internalname class name internal name format ie somepackagesomeclass bytes class byte definition pd protection domain used can null possibly transformed class byte definition
add class file transformer applied weaver transformer class file transformer register
apply transformation given class byte definition method always return nonnull byte array if transformation taken place array content identical original one classname full qualified name class format ie somepackagesomeclass bytes class byte definition possibly transformed class byte definition
create new simpleinstrumentableclassloader given classloader parent classloader build instrumentable classloader
implementation builds simplethrowawayclassloader
create new simpleloadtimeweaver given classloader classloader classloader build simple instrumentable classloader top
create new instance tomcatloadtimeweaver class using supplied classloader classloader classloader delegate weaving
creates new instance weblogicloadtimeweaver class using supplied classloader classloader classloader delegate weaving
construct new weblogicclasspreprocessoradapter
create new instance glassfishloadtimeweaver class using supplied classloader classloader classloader delegate weaving
create new instance websphereloadtimeweaver class using supplied classloader classloader classloader delegate weaving
create new websphereclasspredefineplugin transformer classfiletransformer adapted must null
create new instance jbossloadtimeweaver class using supplied classloader classloader classloader delegate weaving
determine caching attribute method invocation defaults classs caching attribute method attribute found method method current invocation never null targetclass target class invocation may null cacheoperation method null method cacheable
create new compositecacheoperationsource given sources cacheoperationsources cacheoperationsource instances combine
clear caches
create evaluationcontext caches current caches method method args method arguments target target object targetclass target class result return value can null noresult return time evaluation context
return identifying description caching operation available subclasses inclusion tostring result
implementation returns tostrings hash code tostring
return identifying description cache operation returned value produced calling buildergetoperationdescription object construction method used hashcode equals buildergetoperationdescription
create new cacheoperation instance given builder 43
implementation compares tostring results tostring
create new simplekey instance elements elements key
generate key based specified parameters
return cachemanager instance uses
load param information needed
create new cacheputoperation instance given builder 43
create new cacheableoperation instance given builder 43
create new cacheevictoperation instance given builder 43
add attribute cacheable method method names exact matches pattern xxx xxx xxx matching multiple methods methodname name method ops operation associated method
execute cacheevictobject specified cache invoke error handler exception occurs
execute cachegetobject specified cache invoke error handler exception occurs return null handler throw exception simulates cache miss case error cachegetobject
execute cacheclear specified cache invoke error handler exception occurs
execute cacheputobject object specified cache invoke error handler exception occurs
return bean specified name type used resolve services referenced name cacheoperation beanname name bean defined operation expectedtype type bean bean matching name orgspringframeworkbeansfactorynosuchbeandefinitionexception bean exist cacheoperationkeygenerator cacheoperationcachemanager cacheoperationcacheresolver
configure aspect given error handler key generator cache resolvermanager suppliers applying corresponding default supplier resolvable 51
find cached item cacheableoperation passes condition contexts cacheable operations cachevaluewrapper holding cached item null none found
set containing beanfactory cachemanager service lookups 43
return default cacheresolver cache aspect delegates to
return cacheoperationmetadata specified operation resolve cacheresolver keygenerator used operation operation operation method method operation invoked targetclass target type resolved metadata operation
compute key given caching operation
return cacheoperationsource cache aspect
clear cached metadata
collect cacheputrequest cacheoperation using specified result item contexts contexts handle result result item never null putrequests collection update
set one cache operation sources used find cache attributes one source provided aggregated using compositecacheoperationsource setcacheoperationsource
convenience method return string representation method use logging overridden subclasses provide different identifier given method method method were interested targetclass class method log message identifying method orgspringframeworkutilclassutilsgetqualifiedmethodname
return simplecacheresolver given cachemanager cachemanager cachemanager potentially null simplecacheresolver null cachemanager null 51
registers cache aspect classcode bean idcacheaspect classorgspringframeworkcacheaspectjannotationcacheaspect factorymethodaspectof property namecachemanager refcachemanager property namekeygenerator refkeygenerator bean
parses tag aopnamespaceutilsregisterautoproxycreatorifnecessary register autoproxycreator container necessary
parse cache resolution strategy use cacheresolver attribute set injected otherwise cachemanager set setboth true service actually injected
create noopcache instance specified name name name cache
convert given value internal store user value returned get method adapting null storevalue store value value return user
wrap given store value simplevaluewrapper also going fromstorevalue conversion useful getobject putifabsentobject object implementations storevalue original value wrapped value
convert given user value passed put method value internal store adapting null uservalue given user value value store
dynamically register additional cache manager cache cache register spring 43 favor getmissingcachestring
update exposed cachenames set given name this always called within full cachemap lock effectively behaves like copyonwritearrayset preserved order exposed unmodifiable reference name name cache added
return missing cache specified name null cache exist could created fly some caches may created runtime native provider supports it lookup name yield result subclass gets chance register cache runtime returned cache automatically added instance name name cache retrieve missing cache null cache exists could created 41 getcachestring
initialize static configuration caches triggered startup afterpropertiesset also called reinitialize runtime 422 loadcaches
check registered cache given name contrast getcachestring method trigger lazy creation missing caches via getmissingcachestring name cache identifier must null associated cache instance null none found 41 getcachestring getmissingcachestring
simply returns value given construction time
implementation always returns cache implementation store items additionally request cache remembered manager consistency
implementation returns name caches previously requested
specify set cache names cachemanagers static mode the number caches names fixed call method creation cache regions runtime calling null collection argument resets mode dynamic allowing creation caches again
specify whether cache manager stores copy entry true reference false caches default false value stored serializable contract required cached values note change storebyvalue setting reset existing caches any reconfigure new storebyvalue requirement 43
specify whether accept convert null values caches cache manager default true despite concurrenthashmap supporting null values internal holder object used store userlevel nulls note change nullvalue setting reset existing caches any reconfigure new nullvalue requirement
create new concurrentmapcache instance specified cache name name name cache concurrentmapcache or decorator thereof
create new concurrentmapcache specified name given internal concurrentmap use serializationdelegate specified isstorebyvalue storebyvalue enabled name name cache store concurrentmap use internal store allownullvalues whether allow null values adapting internal null holder value serialization serializationdelegate use serialize cache entry null store reference 43
return imports use advicemode set advicemodeaspectj take care adding necessary jsr107 import available
return imports use advicemode set advicemodeproxy take care adding necessary jsr107 import available
returns proxycachingconfiguration aspectjcachingconfiguration proxy aspectj values enablecachingmode respectively potentially includes corresponding jcache configuration well
apply defaults specified cacheoperationbuilder builder operation builder update
validates specified cacheoperation throws illegalstateexception state operation invalid might multiple sources default values ensure operation proper state returned ae annotated element cache operation operation cacheoperation validate
extract configuration nominated cachingconfigurer
create default annotationcacheoperationsource supporting public methods carry cacheable cacheevict annotations publicmethodsonly whether support annotated public methods typically use proxybased aop protectedprivate methods well typically used aspectj class weaving
determine cache operations given cacheoperationprovider this implementation delegates configured cacheannotationparser cacheannotationparsers parsing known annotations springs metadata attribute class can overridden support custom annotations carry caching metadata provider cache operation provider use configured caching operations null none found
default public methods made cacheable
create custom annotationcacheoperationsource annotationparser cacheannotationparser use
create custom annotationcacheoperationsource annotationparsers cacheannotationparser use
create custom annotationcacheoperationsource annotationparsers cacheannotationparser use
create new instance notificationlistenerbean class notificationlistener encapsulated listener
sets managed resource expose stores classloader
switches threadgetcontextclassloader context classloader managed resources classloader allowing invocation occur javaxmanagementmodelmbeanmodelmbeangetattribute
switches threadgetcontextclassloader context classloader managed resources classloader allowing invocation occur javaxmanagementmodelmbeanmodelmbeangetattributes
switches threadgetcontextclassloader context classloader managed resources classloader allowing invocation occur javaxmanagementmodelmbeanmodelmbeansetattribute
switches threadgetcontextclassloader context classloader managed resources classloader allowing invocation occur javaxmanagementmodelmbeanmodelmbeaninvoke
switches threadgetcontextclassloader context classloader managed resources classloader allowing invocation occur javaxmanagementmodelmbeanmodelmbeansetattributes
return whether specified bean definition considered abstract
register configured notificationlistener notificationlisteners mbeanserver
called mbean registered notifies registered mbeanexporterlistener mbeanexporterlisteners registration event please note mbeanexporterlistener throws runtime exception notified essentially interrupt notification process remaining listeners yet notified obviously receive mbeanexporterlistenermbeanregisteredjavaxmanagementobjectname callback objectname objectname registered mbean
set autodetection mode use name illegalargumentexception supplied value resolvable one autodetect constants null setautodetectmodeint autodetectall autodetectassembler autodetectmbean autodetectnone
registers existing mbean mbean adapter plain bean mbeanserver bean bean register either mbean plain bean beankey key associated bean beans map objectname bean registered mbeanserver
gets modelmbeaninfo bean supplied key supplied type
replace bean names used keys notificationlistener mappings corresponding objectname values beanname name bean registered objectname objectname bean registered mbeanserver
notifies registered mbeanexporterlistener mbeanexporterlisteners registration mbean identified supplied objectname
set autodetection mode use illegalargumentexception supplied value one autodetect constants setautodetectmodenamestring autodetectall autodetectassembler autodetectmbean autodetectnone
retrieve objectname bean if bean implements selfnaming interface objectname retrieved using selfnaminggetobjectname otherwise configured objectnamingstrategy used bean name bean beanfactory beankey key associated bean beans map objectname supplied bean javaxmanagementmalformedobjectnameexception retrieved objectname malformed
add name bean excluded autodetection
register individual bean setserver mbeanserver this method responsible deciding how bean exposed mbeanserver specifically supplied mapvalue name bean configured lazy initialization proxy resource registered mbeanserver lazy load behavior honored bean already mbean registered directly mbeanserver without intervention beans bean names resource registered mbeanserver directly mapvalue value configured bean beans map may either string name bean bean beankey key associated bean beans map objectname resource registered mbeanexportexception export failed setbeans registerbeaninstance registerlazyinit
performs actual autodetection process delegating autodetectcallback instance vote inclusion given bean callback autodetectcallback use deciding whether include bean
return whether specified bean definition considered lazyinit beanfactory bean factory supposed contain bean definition beanname name bean check orgspringframeworkbeansfactoryconfigconfigurablelistablebeanfactorygetbeandefinition orgspringframeworkbeansfactoryconfigbeandefinitionislazyinit
called mbean unregistered notifies registered mbeanexporterlistener mbeanexporterlisteners unregistration event please note mbeanexporterlistener throws runtime exception notified essentially interrupt notification process remaining listeners yet notified obviously receive mbeanexporterlistenermbeanunregisteredjavaxmanagementobjectname callback objectname objectname unregistered mbean
set list names beans excluded autodetection
notifies registered mbeanexporterlistener mbeanexporterlisteners unregistration mbean identified supplied objectname
build adapted mbean given bean instance possible the default implementation builds jmx 12 standardmbean targets mbeanmxbean interface case aop proxy delegating interfaces management operations proxy bean original bean instance adapted mbean null possible
register beans configured lazy initialization mbeanserver indirectly proxy beanname name bean beanfactory beankey key associated bean beans map objectname bean registered mbeanserver
unregister configured notificationlistener notificationlisteners mbeanserver
supplied managed resource implements notificationpublisheraware instance orgspringframeworkjmxexportnotificationnotificationpublisher injected
callback required resolution bean names setbeansjavautilmap beans map autodetection mbeans in latter case listablebeanfactory required setbeans setautodetect
unregisters beans exported exposed via jmx enclosing applicationcontext destroyed
set notificationlistener notificationlisteners register javaxmanagementmbeanserver the key entry map string representation javaxmanagementobjectname bean name mbean listener registered for specifying asterisk key cause listener associated mbeans registered class startup time the value entry javaxmanagementnotificationlistener register advanced options registering javaxmanagementnotificationfilter notificationfilters handback objects see setnotificationlistenersnotificationlistenerbean
kick bean registration automatically regular singleton instantiation phase registerbeans
register defined beans mbeanserver each bean exposed mbeanserver via modelmbean actual implementation modelmbean interface used depends implementation modelmbeanprovider interface configured default requiredmodelmbean class supplied jmx implementations used the management interface produced bean dependent mbeaninfoassembler implementation used objectname given bean dependent implementation objectnamingstrategy interface used
indicates whether particular bean name present excluded beans list
creates mbean configured appropriate management interface supplied managed resource managedresource resource exported mbean beankey key associated managed bean createmodelmbean getmbeaninfoobject string
replaces notification source necessary so notification javadoc it strongly recommended notification senders use object name rather reference mbean object source notification notification whose javaxmanagementnotificationgetsource might need massaging
create new instance modelmbeannotificationpublisher class publish javaxmanagementnotification notifications supplied modelmbean modelmbean target modelmbean must null objectname objectname source modelmbean managedresource managed resource exposed supplied modelmbean illegalargumentexception parameters null
send supplied notification using wrapped modelmbean instance notification notification sent illegalargumentexception supplied notification null unabletosendnotificationexception supplied notification could sent
used autodetection beans checks see beans class managedresource attribute add list included beans beanclass class bean beanname name bean bean factory
reads mbeanparameterinfo managedoperationparameter attributes attached method returns empty array mbeanparameterinfo attributes found
adds descriptor fields managedattribute attribute managedmetric attribute attribute descriptor
create new metadatambeaninfoassembler given jmxattributesource attributesource jmxattributesource use
creates description attribute corresponding property descriptor attempts create description using metadata either getter setter attributes otherwise uses property name
locates value descriptor based values attached getter setter methods values supplied value attached getter preferred getter object value associated get method setter object value associated set method appropriate object use value descriptor
throws illegalargumentexception encounters jdk dynamic proxy metadata read target classes cglib proxies
votes inclusion attribute mutator method mutator method beankey key associated mbean beans map whether method appropriate metadata
votes inclusion operation method operation method beankey key associated mbean beans map whether method appropriate metadata
adds descriptor fields managedattribute attribute attribute descriptor specifically adds currencytimelimit descriptor field present metadata
locates value descriptor based values attached getter setter methods values supplied value attached getter preferred supplied default value used check see value associated getter changed default getter string value associated get method setter string value associated set method appropriate string use value descriptor
adds descriptor fields managedresource attribute mbean descriptor specifically adds currencytimelimit persistpolicy persistperiod persistlocation persistname descriptor fields present metadata
set jmxattributesource implementation use reading metadata bean class orgspringframeworkjmxexportannotationannotationjmxattributesource
vote inclusion attribute accessor method accessor method beankey key associated mbean beans map whether method appropriate metadata
reads managednotification metadata class managed resource generates returns corresponding modelmbeannotificationinfo metadata
retrieves description supplied method metadata uses method name description present metadata
reads managed resource description source level metadata returns empty string description found
always returns true
always returns true
always returns true
resolve given class names class objects classnames class names resolve beankey bean key class names associated resolved class
checks see given method declared managed interface given bean
check see method declared one configured interfaces public method operation method beankey key associated mbean beans map true method declared one configured interfaces otherwise false
set array interfaces use creating management info interfaces used bean entry corresponding bean found interfacemappings property managedinterfaces array classes indicating interfaces use entry must interface setinterfacemappings
check see method declared one configured interfaces public method accessor method beankey key associated mbean beans map true method declared one configured interfaces otherwise false
resolve given interface mappings turning class names class objects mappings specified interface mappings resolved interface mappings with class objects values
check see method declared one configured interfaces public method mutator method beankey key associated mbean beans map true method declared one configured interfaces otherwise false
determine whether given method supposed included is configured ignored method operation method beankey key associated mbean beans map mbeanexporter
set mappings bean keys commaseparated list method names these method names ignored creating management interface the property key must match bean key property value must match list method names searching method names ignore bean spring check mappings first
set mappings bean keys commaseparated list method names property key match bean key property value match list method names searching method names bean spring check mappings first mappings mappings bean keys method names
return default value jmx field currencytimelimit any
create parameter info given method the default implementation returns empty array mbeanparameterinfo method method get parameter information beankey key associated mbean beans map mbeanexporter mbeanparameterinfo array
creates instance modelmbeanoperationinfo given method populates parameter info operation method method create modelmbeanoperationinfo name logical name operation method name property name used default implementation possibly subclasses beankey key associated mbean beans map mbeanexporter modelmbeanoperationinfo
return class used jmx descriptor field class applied exposeclassdescriptor property true the default implementation returns first implemented interface jdk proxy target class else managedbean bean instance might aop proxy class expose descriptor field class setexposeclassdescriptor getclasstoexposeclass orgspringframeworkaopframeworkaopproxyutilsproxieduserinterfacesobject
set currencytimelimit field specified defaultcurrencytimelimit by default none desc jmx attribute operation descriptor setdefaultcurrencytimelimitinteger
iterate methods mbean class gives subclasses chance vote inclusion particular method corresponds accessor mutator attribute included management interface corresponding operation exposed role descriptor field set appropriate value managedbean bean instance might aop proxy beankey key associated mbean beans map mbeanexporter operation metadata populateoperationdescriptor
allows subclasses add extra fields descriptor mbean the default implementation sets currencytimelimit field specified defaultcurrencytimelimit by default none descriptor descriptor mbean resource managedbean bean instance might aop proxy beankey key associated mbean beans map mbeanexporter setdefaultcurrencytimelimitinteger applydefaultcurrencytimelimitjavaxmanagementdescriptor
return parameternamediscoverer use resolving method parameter names needed may null order skip parameter detection
iterate properties mbean class gives subclasses chance vote inclusion accessor mutator particular accessor mutator voted inclusion appropriate metadata assembled passed subclass descriptor population managedbean bean instance might aop proxy beankey key associated mbean beans map mbeanexporter attribute metadata jmexception case errors populateattributedescriptor
apply given jmx currencytimelimit value given descriptor the default implementation sets value 0 asis as number cache seconds turns value 0 integermaxvalue always cache sets defaultcurrencytimelimit if any indicating never cache case value 0 follows recommendation jmx 12 specification desc jmx attribute operation descriptor currencytimelimit currencytimelimit value apply setdefaultcurrencytimelimitinteger applydefaultcurrencytimelimitjavaxmanagementdescriptor
allows subclasses add extra fields descriptor particular attribute the default implementation sets currencytimelimit field specified defaultcurrencytimelimit by default none desc attribute descriptor getter accessor method attribute setter mutator method attribute beankey key associated mbean beans map mbeanexporter setdefaultcurrencytimelimitinteger applydefaultcurrencytimelimitjavaxmanagementdescriptor
get notification metadata mbean resource subclasses implement method return appropriate metadata notifications exposed management interface managed resource default implementation returns empty array modelmbeannotificationinfo managedbean bean instance might aop proxy beankey key associated mbean beans map mbeanexporter notification metadata jmexception case errors
create instance modelmbeaninfosupport class supplied jmx implementations populates metadata calls subclass managedbean bean exposed might aop proxy beankey key associated managed bean populated modelmbeaninfo instance jmexception case errors getdescriptionobject string getattributeinfoobject string getconstructorinfoobject string getoperationinfoobject string getnotificationinfoobject string populatembeandescriptorjavaxmanagementdescriptor object string
get constructor metadata mbean resource subclasses implement method return appropriate metadata constructors exposed management interface managed resource default implementation returns empty array modelmbeanconstructorinfo managedbean bean instance might aop proxy beankey key associated mbean beans map mbeanexporter constructor metadata jmexception case errors
get description mbean resource default implementation returns simple description mbean based class name managedbean bean instance might aop proxy beankey key associated mbean beans map mbeanexporter jmexception case errors
reads objectname sourcelevel metadata associated managed resources class
set implementation jmxattributesource interface use reading sourcelevel metadata
create new metadatanamingstrategy given jmxattributesource attributesource jmxattributesource use
returns instance objectname based identity managed resource
attempts retrieve objectname via given key trying find mapped value mappings first
merges properties configured mappings mappinglocations final properties instance used objectname resolution
return jmx objectname managed resource
return description notification
return name notification
return list notification types
convert supplied managednotification corresponding javaxmanagementmodelmbeanmodelmbeannotificationinfo
return default value attribute
description metrics values change time
category metric ex throughput performance utilization
persist policy metric
display name metric
expected unit measurement values
return java 6 mxbean interface exists given class that is interface whose name ends mxbean andor carries appropriate mxbean annotation clazz class check whether mxbean interface given class
create string representing argument signature method element array fully qualified class name corresponding argument methods signature method method build argument signature signature array argument types
return jmx attribute name use given javabeans property when using strict casing javabean property getter method getfoo translates attribute called foo strict casing disabled getfoo would translate foo property javabeans property descriptor usestrictcasing whether use strict casing jmx attribute name use
return standard mbean interface given class that is interface whose name matches class name given class suffix mbean clazz class check standard mbean interface given class
convert array mbeanparameterinfo array class instances corresponding parameters paraminfo jmx parameter info classloader classloader use loading parameter types parameter types classes classnotfoundexception parameter type could resolved
attempt find locally running mbeanserver fails mbeanserver found logs warning one mbeanserver found returning first one list agentid agent identifier mbeanserver retrieve parameter null registered mbeanservers considered empty string given platform mbeanserver returned mbeanserver found mbeanservernotfoundexception mbeanserver could found javaxmanagementmbeanserverfactoryfindmbeanserverstring
convert array mbeanparameterinfo array class instances corresponding parameters paraminfo jmx parameter info parameter types classes classnotfoundexception parameter type could resolved
append additional keyvalue pair existing objectname key static value identity value identity hash code managed resource exposed supplied objectname used provide unique objectname distinct instance particular bean class useful generating objectname objectnames runtime set managed resources based template value supplied orgspringframeworkjmxexportnamingobjectnamingstrategy objectname original jmx objectname managedresource mbean instance objectname mbean identity added malformedobjectnameexception case invalid object name specification orgspringframeworkutilobjectutilsgetidentityhexstringobject
determine whether given bean class qualifies mbean asis this implementation checks javaxmanagementdynamicmbean classes well classes corresponding mbean interface standard mbeans corresponding mxbean interface java 6 mxbeans clazz bean class analyze whether class qualifies mbean orgspringframeworkjmxexportmbeanexporterismbeanclass
return arbitrary object handed back asis javaxmanagementnotificationbroadcaster notifying javaxmanagementnotificationlistener handback object may null javaxmanagementnotificationlistenerhandlenotificationjavaxmanagementnotification object
return javaxmanagementnotificationfilter associated encapsulated getnotificationlistener notificationlistener may null
set javaxmanagementobjectnamestyle name single mbean encapsulated getnotificationfilter notificationfilter registered listen javaxmanagementnotification notifications specified objectname instance string setmappedobjectnames
get javaxmanagementnotificationlistener
return list javaxmanagementobjectname string representations encapsulated getnotificationfilter notificationfilter registered listener javaxmanagementnotification notifications malformedobjectnameexception objectname malformed
connects remote mbeanserver using configured service url environment properties
creates jmxconnector given settings exposes associated mbeanserverconnection
creates lazy proxies jmxconnector mbeanserverconnection
set environment properties used construct jmxconnector map string keys arbitrary object values
closes underlying jmxconnector
unregisters mbeanserver instance necessary
create new mbeanserver instance register mbeanserverfactory desired defaultdomain default domain null none registerwithfactory whether register mbeanserver mbeanserverfactory javaxmanagementmbeanserverfactorycreatembeanserver javaxmanagementmbeanserverfactorynewmbeanserver
creates mbeanserver instance
stop jmxconnectorserver managed instance class automatically called applicationcontext shutdown ioexception error stopping connector server
start connector server threaded flag set true jmxconnectorserver started separate thread daemon flag set true thread started daemon thread jmexception problem occurred registering connector server mbeanserver ioexception problem starting connector server
set environment properties used construct jmxconnector map string keys arbitrary object values
return mbeanserver beans registered with
unregisters beans registered instance class
actually unregister specified mbean server objectname suggested objectname mbean
policy use attempting register mbean javaxmanagementobjectname already exists registrationpolicy policy use 32
return objectname objectnames registered beans
actually register mbean server behavior encountering existing mbean configured using setregistrationpolicy mbean mbean instance objectname suggested objectname mbean jmexception registration failed
retrieve objectname instance specified domain name supplied keyname properties domainname domain name objectname properties properties objectname objectname instance malformedobjectnameexception case invalid object name specification objectnameobjectnamestring javautilhashtable objectnamegetinstancestring javautilhashtable
retrieve objectname instance specified domain single property supplied key value domainname domain name objectname key key single property objectname value value single property objectname objectname instance malformedobjectnameexception case invalid object name specification objectnameobjectnamestring string string objectnamegetinstancestring string string
retrieve objectname instance corresponding supplied name objectname objectname objectname string format objectname instance malformedobjectnameexception case invalid object name specification objectnameobjectnamestring objectnamegetinstancestring
allow map access environment set connector option add override specific entries useful specifying entries directly example via environmentmykey particularly useful adding overriding entries child bean definitions
unregisters specified notificationlistener
registers specified notificationlistener ensures mbeanserverconnection configured attempts detect local connection one supplied
closes jmxconnector may managed interceptor
connects remote mbeanserver using configured jmxserviceurl specified jmx service local mbeanserver service url specified serviceurl jmx service url connect may null environment jmx environment connector may null agentid local jmx mbeanservers agent id may null
create new instance methodcachekey supplied method name parameter list name name method parametertypes arguments method signature
return whether client interceptor already prepared ie already looked server cached metadata
prepares mbeanserverconnection connectonstartup turned which default
allow map access environment set connector option add override specific entries useful specifying entries directly example via environmentmykey particularly useful adding overriding entries child bean definitions
refresh connection retry mbean invocation possible if configured refresh connect failure method simply rethrows original exception invocation invocation failed ex exception raised remote invocation result value new invocation succeeded throwable exception raised new invocation failed well setrefreshonconnectfailure doinvoke
routes method invocation not property getset corresponding operation managed resource method method corresponding operation managed resource args invocation arguments value returned method invocation
route invocation configured managed resource invocation methodinvocation reroute value returned result rerouted invocation throwable invocation error propagated user doinvoke handleconnectfailure
convert given result object from attribute access operation invocation specified target class returning proxy method result result object returned mbeanserver parameter method parameter proxy method thats invoked converted result object passedin object conversion necessary
ensures mbeanserverconnection configured attempts detect local connection one supplied
loads management interface info configured mbean caches information used proxy determining whether invocation matches valid operation attribute management interface managed resource
return management interface target mbean null none specified
route invocation configured managed resource correctly routes javabean property access mbeanserverconnectiongetsetattribute method invocation mbeanserverconnectioninvoke invocation methodinvocation reroute value returned result rerouted invocation throwable invocation error propagated user
checks proxyinterface specified generates proxy target mbean
add keyed nonkeyed entries supplied field supplied field list
concatenate given elements delimiting defaultmessagecodesresolvercodeseparator skipping zerolength null elements altogether
build code list given code field objectfieldspecific code fieldspecific code plain error code arrays lists maps resolved specific elements whole collection see defaultmessagecodesresolver class level javadoc details generated codes list codes
actually set nested path delegated setnestedpath pushnestedpath
check whether given fielderror matches given field field field looking fielderrors fielderror candidate fielderror whether fielderror matches given field
transform given field full path regarding nested path instance
create new mapbindingresult instance target target map bind onto objectname name target object
return rejected field value
create new fielderror instance objectname name affected object field affected field object rejectedvalue rejected field value bindingfailure whether error represents binding failure like type mismatch else validation failure codes codes used resolve message arguments array arguments used resolve message defaultmessage default message used resolve message
check source behind error possibly exception typically orgspringframeworkbeanspropertyaccessexception bean validation javaxvalidationconstraintviolation the cause outermost exception introspected well eg underlying conversion exception exception thrown setter instead unwrap propertyaccessexception turn whether error caused source object given type 504
unwrap source behind error possibly exception typically orgspringframeworkbeanspropertyaccessexception bean validation javaxvalidationconstraintviolation the cause outermost exception introspected well eg underlying conversion exception exception thrown setter instead unwrap propertyaccessexception turn source object given type illegalargumentexception source object available ie none specified available anymore deserialization 504
create new instance objecterror class objectname name affected object codes codes used resolve message arguments array arguments used resolve message defaultmessage default message used resolve message
preserve source behind error possibly exception typically orgspringframeworkbeanspropertyaccessexception bean validation javaxvalidationconstraintviolation note source object stored transient is wont part serialized error representation source source object 504
find bindingresult given name given model model model search name name target object find bindingresult bindingresult null none found illegalstateexception attribute found type bindingresult
find required bindingresult given name given model model model search name name target object find bindingresult bindingresult never null illegalstateexception bindingresult found
implementation exposes propertyeditor adapter formatter applicable
determines field type property type getpropertyaccessor
retrieve custom propertyeditor given field any fixedfield fully qualified field name custom propertyeditor null
returns underlying propertyaccessor getpropertyaccessor
fetches field value propertyaccessor getpropertyaccessor
formats field value based registered propertyeditors getcustomeditor
returns canonical property name orgspringframeworkbeanspropertyaccessorutilscanonicalpropertyname
invoke given validator smartvalidator supplied object errors instance validator validator invoked target object bind parameters errors errors instance store errors validationhints one hint objects passed validation engine illegalargumentexception either validator errors arguments null supplied validator validatorsupportsclass support validation supplied objects type
reject given field given error code error arguments default message value empty contains whitespace an empty value context means either null empty string consisting wholly whitespace the object whose field validated need passed errors instance resolve field values it usually hold internal reference target object errors errors instance register errors field field name check errorcode error code interpretable message key errorargs error arguments argument binding via messageformat can null defaultmessage fallback default message
reject given field given error code default message value empty contains whitespace an empty value context means either null empty string consisting wholly whitespace the object whose field validated need passed errors instance resolve field values it usually hold internal reference target object errors errors instance register errors field field name check errorcode error code interpretable message key defaultmessage fallback default message
reject given field given error code error arguments value empty contains whitespace an empty value context means either null empty string consisting wholly whitespace the object whose field validated need passed errors instance resolve field values it usually hold internal reference target object errors errors instance register errors field field name check errorcode error code interpretable message key errorargs error arguments argument binding via messageformat can null
reject given field given error code error arguments default message value empty an empty value context means either null empty string the object whose field validated need passed errors instance resolve field values it usually hold internal reference target object errors errors instance register errors field field name check errorcode error code interpretable message key errorargs error arguments argument binding via messageformat can null defaultmessage fallback default message
create new bindexception instance bindingresult bindingresult bindingresult instance wrap
create new bindexception instance target bean target target bean bind onto objectname name target object beanpropertybindingresult
returns diagnostic information errors held object
return internal bindingresult held databinder abstractpropertybindingresult
check given property values required fields generating missing field errors appropriate mpvs property values bound can modified getrequiredfields getbindingerrorprocessor bindingerrorprocessorprocessmissingfielderror
add custom formatter applying specified field types only any otherwise fields matching formatterdeclared type registers corresponding propertyeditor adapter underneath covers formatter formatter add does need generically declare field type field types explicitly specified parameters fieldtypes field types apply formatter to none derived given formatter implementation class 42 registercustomeditorclass propertyeditor
specify spring 30 conversionservice use converting property values alternative javabeans propertyeditors
initialize direct field access databinder alternative default bean property access initbeanpropertyaccess createdirectfieldbindingresult
add custom formatter applying fields matching formatterdeclared type registers corresponding propertyeditor adapter underneath covers formatter formatter add generically declared specific type 42 registercustomeditorclass propertyeditor
invoke specified validators any setvalidatorvalidator getbindingresult
actual implementation binding process working passedin mutablepropertyvalues instance mpvs property values bind mutablepropertyvalues instance checkallowedfields checkrequiredfields applypropertyvalues
return wrapped target object
initialize standard javabean property access databinder this default explicit call leads eager initialization initdirectfieldaccess createbeanpropertybindingresult
return underlying typeconverter binders bindingresult
replace validators apply binding step setvalidatorvalidator addvalidatorsvalidator
add custom formatter field type specified formatter class applying specified fields only any otherwise fields registers corresponding propertyeditor adapter underneath covers formatter formatter add generically declared specific type fields fields apply formatter to none applied 42 registercustomeditorclass string propertyeditor
close databinder may result throwing bindexception encountered errors model map containing target object errors instance bindexception errors bind operation bindingresultgetmodel
set strategy use processing binding errors is required field errors propertyaccessexceptions default defaultbindingerrorprocessor defaultbindingerrorprocessor
return given field allowed binding invoked passedin property value the default implementation checks xxx xxx xxx matches well direct equality specified lists allowed fields disallowed fields field matching disallowed pattern accepted even also happens match pattern allowed list can overridden subclasses field field check field allowed setallowedfields setdisallowedfields orgspringframeworkutilpatternmatchutilssimplematchstring string
create abstractpropertybindingresult instance using direct field access 421
return binders underlying simpletypeconverter
set whether binder attempt autogrow nested path contains null value if true null path location populated default object value traversed instead resulting exception flag also enables autogrowth collection elements accessing outofbounds index default true standard databinder note since spring 41 feature supported bean property access databinders default mode field access initbeanpropertyaccess orgspringframeworkbeansbeanwrappersetautogrownestedpaths
check given property values allowed fields removing values fields allowed mpvs property values bound can modified getallowedfields isallowedstring
create abstractpropertybindingresult instance using standard javabean property access 421
return fields allowed binding array field names
return underlying typeconverter binders bindingresult
return primary validator apply binding step any
apply given property values target object default implementation applies supplied property values bean property values default unknown fields ignored mpvs property values bound can modified gettarget getpropertyaccessor isignoreunknownfields getbindingerrorprocessor bindingerrorprocessorprocesspropertyaccessexception
return fields required binding process array field names
return associated conversionservice any
invoke specified validators any given validation hints note validation hints may get ignored actual target validator validationhints one hint objects passed smartvalidator 31 setvalidatorvalidator smartvalidatorvalidateobject errors object
set validator apply binding step addvalidatorsvalidator replacevalidatorsvalidator
register fields required binding process if one specified fields contained list incoming property values corresponding missing field error created error code required by default binding error processor requiredfields array field names setbindingerrorprocessor defaultbindingerrorprocessormissingfielderrorcode
specify limit array collection autogrowing default 256 preventing outofmemoryerrors case large indexes raise limit autogrowing needs unusually high initbeanpropertyaccess orgspringframeworkbeansbeanwrappersetautogrowcollectionlimit
create new databinder instance target target object bind onto or null binder used convert plain parameter value objectname name target object
bind given property values binders target this call create field errors representing basic binding errors like required field code required type mismatch value bean property code typemismatch note given propertyvalues throwaway instance efficiency modified contain allowed fields implements mutablepropertyvalues interface else internal mutable copy created purpose pass copy propertyvalues want original instance stay unmodified case pvs property values bind dobindorgspringframeworkbeansmutablepropertyvalues
add validators apply binding step setvalidatorvalidator replacevalidatorsvalidator
return fields not allowed binding array field names
set strategy use resolving errors message codes applies given strategy underlying errors holder default defaultmessagecodesresolver beanpropertybindingresultsetmessagecodesresolver defaultmessagecodesresolver
return fielderror arguments binding error given field invoked missing required field type mismatch the default implementation returns single argument indicating field name of type defaultmessagesourceresolvable objectnamefield field codes objectname name target object field field caused binding error object array represents fielderror arguments orgspringframeworkvalidationfielderrorgetarguments orgspringframeworkcontextsupportdefaultmessagesourceresolvable
set strategy use resolving errors message codes default defaultmessagecodesresolver defaultmessagecodesresolver
return list fields suppressed bind process can used determine whether field values targeting disallowed fields databindersetallowedfields
return model map obtained state exposing errors instance modelkeyprefix modelkeyprefix objectname object itself note map constructed every time youre calling method adding things map recalling method work the attributes model map returned method usually included modelandview form view uses springs bind tag needs access errors instance getobjectname modelkeyprefix
implementation returns null
format given value specified field the default implementation simply returns field value asis field field check value value field either rejected value binding error actual field value formatted value
default implementation determines type based actual field value any subclasses override determine type descriptor even null values getactualfieldvalue
implementation delegates getpropertyeditorregistry propertyeditorregistrys editor lookup facility available
mark specified disallowed field suppressed the data binder invokes field value detected target disallowed field databindersetallowedfields
returns beanwrapper instance uses creates new one none existed before createbeanwrapper
create new beanwrapper underlying target object gettarget
creates new instance beanpropertybindingresult class target target bean bind onto objectname name target object autogrownestedpaths whether autogrow nested path contains null value autogrowcollectionlimit limit array collection autogrowing
create new directfieldaccessor underlying target object gettarget
create new directfieldbindingresult instance target target object bind onto objectname name target object autogrownestedpaths whether autogrow nested path contains null value
returns directfieldaccessor instance uses creates new one none existed before createdirectfieldaccessor
validate supplied value specified field target type reporting validation errors value would bound field instance target class targettype target type fieldname name field value candidate value errors contextual state validation process validationhints one hint objects passed validation engine 51 javaxvalidationvalidatorvalidatevalueclass string object class
determine validation groups validate given method invocation default validation groups specified validated annotation containing target class method invocation current methodinvocation applicable validation groups class array
create new localecontextmessageinterpolator wrapping given target interpolator targetinterpolator target messageinterpolator wrap
specify bean validation properties passed validation provider map can populated map props element xml bean definitions javaxvalidationconfigurationaddpropertystring string
specify desired provider class any if specified jsr303s default search mechanism used javaxvalidationvalidationbyproviderclass javaxvalidationvalidationbydefaultprovider
determine field given constraint violation the default implementation returns stringified property path violation current jsr303 constraintviolation springreported field for use errors 42 javaxvalidationconstraintviolationgetpropertypath orgspringframeworkvalidationfielderrorgetfield
turn specified validation hints jsr303 validation groups 51
build resolvable wrapper specified field allowing resolve fields name messagesource the default implementation returns first argument indicating field type defaultmessagesourceresolvable objectnamefield field codes plain field name default message objectname name target object field field caused binding error corresponding messagesourceresolvable specified field 43
return fielderror arguments validation error given field invoked violated constraint the default implementation returns first argument indicating field name see getresolvablefield afterwards adds actual constraint annotation attributes ie excluding message groups payload alphabetical order attribute names can overridden eg add attributes constraint descriptor objectname name target object field field caused binding error descriptor jsr303 constraint descriptor object array represents fielderror arguments orgspringframeworkvalidationfielderrorgetarguments orgspringframeworkcontextsupportdefaultmessagesourceresolvable orgspringframeworkvalidationdefaultbindingerrorprocessorgetargumentsforbinderror
extract rejected value behind given constraint violation exposure spring errors representation field field caused binding error violation corresponding jsr303 constraintviolation bindingresult spring bindingresult backing object contains current fields value invalid value expose part field error 42 javaxvalidationconstraintviolationgetinvalidvalue orgspringframeworkvalidationfielderrorgetrejectedvalue
process given jsr303 constraintviolations adding corresponding errors provided spring errors object violations jsr303 constraintviolation results errors spring errors object register
create new springvalidatoradapter given jsr303 validator targetvalidator jsr303 validator wrap
perform validation given bean bean bean instance validate javaxvalidationvalidatorvalidate
create new springconstraintvalidatorfactory given beanfactory beanfactory target beanfactory
build messagesourceresourcebundlelocator given messagesource messagesource spring messagesource wrap
set validated annotation type default validated annotation type validated annotation this setter property exists developers provide nonspringspecific annotation type indicate class supposed validated sense applying method validation validatedannotationtype desired annotation type
set jsr303 validator delegate validating methods default default validatorfactorys default validator
lookup variant returns specified defaultobject if any case lookup failure located object defaultobject fallback namingexception case lookup failure without fallback setdefaultobject
look jndi object store it
return singleton jndi object
look object given name current jndi context name jndi name object object found cannot null wellbehaved jndi implementations returns null namingexception gets thrown namingexception object given name bound jndi
execute given jndi context callback implementation contextcallback jndicallback implementation use result object returned callback null namingexception thrown callback implementation createinitialcontext
return environment jndi initialcontext any
release jndi context obtained getcontext ctx jndi context release may null getcontext
look object given name current jndi context name jndi name object requiredtype type jndi object must match interface superclass actual class null match example value objectclass method succeed whatever class returned instance object found cannot null wellbehaved jndi implementations returns null namingexception gets thrown namingexception object given name bound jndi
create new jndi initial context invoked getcontext the default implementation use templates environment settings subclassed custom contexts eg testing initial context instance namingexception case initialization errors
rebind given object current jndi context using given name overwrites existing binding name jndi name object object object rebind namingexception thrown jndi
bind given object current jndi context using given name name jndi name object object object bind namingexception thrown jndi mostly name already bound
remove binding given name current jndi context name jndi name object namingexception thrown jndi mostly name found
construct new typemismatchnamingexception building explanation text given arguments jndiname jndi name requiredtype required type lookup actualtype actual type lookup returned
implementation looks returns value associated given name underlying jndilocatordelegate namingexception thrown call jndilocatordelegatelookupstring returns null issues debuglevel log statement exception message
check whether default jndi environment java ee environment available jvm true default initialcontext used false
configure jndilocatordelegate resourceref property set true meaning names prefixed javacompenv setresourceref
perform actual jndi lookup locators target resource located target object namingexception jndi lookup failed located jndi object assignable expected type setjndiname setexpectedtype lookupstring class
return type located jndi object supposed assignable to any
return jndi name look up
return jndi environment use jndi lookups
convert given jndi name actual jndi name use the default implementation applies javacompenv prefix resourceref true scheme eg java given jndiname original jndi name jndi name use containerprefix setresourceref
perform actual jndi lookup given name via jnditemplate if name doesnt begin javacompenv prefix added resourceref set true jndiname jndi name look requiredtype required type object obtained object namingexception jndi lookup failed setresourceref
remove given ejb instance invoked concrete remote slsb invoker subclasses ejb ejb instance remove javaxejbejbobjectremove
return new instance stateless session bean invoked concrete remote slsb invoker subclasses can overridden change algorithm namingexception thrown jndi invocationtargetexception thrown create method create
check ejb3style home object serves ejb component directly
fetches ejb home object delegates doinvoke if configured refresh connect failure call refreshandretry corresponding rmi exceptions gethome doinvoke refreshandretry
refresh ejb home object retry given invocation called invoke connect failure invocation aop method invocation invocation result throwable case invocation failure invoke
return ejb home object use called invocation default implementation returns home created initialization any else invokes lookup get new proxy invocation can overridden subclasses example cache home object given amount time recreating it test home object whether still alive ejb home object use invocation namingexception proxy creation failed lookup getcreatemethod
invokes create method cached ejb home object new ejbobject ejblocalobject namingexception thrown jndi invocationtargetexception thrown create method
fetches ejb home startup necessary setlookuphomeonstartup refreshhome
refresh cached home object applicable also caches create method home object namingexception thrown jndi lookup lookup getcreatemethod
prepares thread context necessary delegates invokeincontext
determine create method given ejb home object home ejb home object create method ejbaccessexception method couldnt retrieved
return business interface ejb were proxying
reset cached session bean instance necessary
remove cached session bean instance necessary
return ejb component instance delegate call to the default implementation delegates newsessionbeaninstance ejb component instance namingexception thrown jndi invocationtargetexception thrown create method newsessionbeaninstance
implementation creates new ejb instance invocation overridden custom invocation strategies alternatively override getsessionbeaninstance releasesessionbeaninstance change ejb instance creation example hold single shared ejb component instance
release given ejb instance the default implementation delegates removesessionbeaninstance ejb ejb component instance release removesessionbeaninstance
remove given ejb instance ejb ejb instance remove javaxejbejblocalobjectremove
return new instance stateless session bean overridden change algorithm namingexception thrown jndi invocationtargetexception thrown create method create
check ejb3style home object serves ejb component directly
implementation creates new ejb instance invocation overridden custom invocation strategies alternatively override getsessionbeaninstance releasesessionbeaninstance change ejb instance creation example hold single shared ejb instance
return business interface ejb were proxying
set global date formatter register if specified general formatter nonannotated date calendar fields registered
add date converters specified registry converterregistry registry converters add
install converters converter registry registry converter registry
return users time zone any
return users chronology calendar system any
get datetimeformatter contexts settings applied base formatter formatter base formatter establishes default formatting rules generally contextindependent contextual datetimeformatter
associate given datetimecontext current thread datetimecontext current datetimecontext null reset threadbound context
return datetimecontext associated current thread any current datetimecontext null none
obtain datetimeformatter userspecific settings applied given base formatter formatter base formatter establishes default formatting rules generally user independent locale current user locale may null known userspecific datetimeformatter
factory method used create datetimeformatter annotation format annotation field fieldtype declared type field datetimeformatter instance
create new temporalaccessorparser given temporalaccessor type temporalaccessortype specific temporalaccessor class localdate localtime localdatetime zoneddatetime offsetdatetime offsettime formatter base datetimeformatter instance
set two characters use format date values jodatime style the first character used date style second time style supported characters are s small m medium l long f full omitted this method mimics styles supported jodatime note jsr310 natively favors javatimeformatformatstyle used setdatestyle settimestyle setdatetimestyle style two characters set s m l f
create new datetimeformatter using factory if specific pattern style defined supplied fallbackformatter used fallbackformatter fallback formatter use specific factory properties set new date time formatter
set style use date time types
set whether standard iso formatting applied datetime types default false no if set true datestyle timestyle datetimestyle properties effectively ignored
factory method used create datetimeformatter annotation format annotation field fieldtype type field datetimeformatter instance 32
set whether standard iso formatting applied datetime types default false no if set true datestyle timestyle datetimestyle properties effectively ignored
install converters converter registry registry converter registry
associate given jodatimecontext current thread jodatimecontext current jodatimecontext null reset threadbound context
return jodatimecontext associated current thread any current jodatimecontext null none
obtain datetimeformatter userspecific settings applied given base formatter formatter base formatter establishes default formatting rules generally user independent locale current user locale may null known userspecific datetimeformatter
return users chronology calendar system any
return users time zone any
get datetimeformatter contexts settings applied base formatter formatter base formatter establishes default formatting rules generally contextindependent contextual datetimeformatter
create new datetimeformatter using factory if specific pattern style defined supplied fallbackformatter used fallbackformatter fallback formatter use specific factory properties set new date time formatter
create new formatterpropertyeditoradapter given formatter formatter formatter wrap
add formatters appropriate environments including number formatters jsr354 money currency formatters jsr310 datetime andor jodatime formatters depending presence corresponding api classpath formatterregistry service register default formatters
create new defaultformattingconversionservice set plain defaultconversionserviceadddefaultconverters default converters and based value registerdefaultformatters set plain adddefaultformatters default formatters embeddedvalueresolver delegated setembeddedvalueresolverstringvalueresolver prior calling adddefaultformatters registerdefaultformatters whether register default formatters
obtain monetaryamountformat given locale the default implementation simply calls javaxmoneyformatmonetaryformatsgetamountformat either configured format name given locale locale current locale monetaryamountformat never null setformatname
constructor scriptcompilationexception scriptsource source offending script msg detail message 42
return source offending script source null available
constructor scriptcompilationexception msg detail message
constructor scriptcompilationexception scriptsource source offending script msg detail message cause root cause usually using underlying script compiler api
constructor scriptcompilationexception scriptsource source offending script cause root cause usually using underlying script compiler api
constructor scriptcompilationexception msg detail message cause root cause usually using underlying script compiler api
create new groovyscriptfactory given script source specifying strategy interface create custom metaclass supply missing methods otherwise change behavior object scriptsourcelocator locator points source script interpreted postprocessor actually creates script groovyobjectcustomizer customizer set custom metaclass make changes groovyobject created factory may null groovyobjectcustomizercustomize
build groovyclassloader given classloader classloader classloader build groovyclassloader 433
create new groovyscriptfactory given script source we dont need specify script interfaces here since groovy script defines java interfaces itself scriptsourcelocator locator points source script interpreted postprocessor actually creates script
create new groovyscriptfactory given script source specifying strategy interface create custom metaclass supply missing methods otherwise change behavior object scriptsourcelocator locator points source script interpreted postprocessor actually creates script compilerconfiguration custom compiler configuration applied groovyclassloader may null 433 groovyclassloadergroovyclassloaderclassloader compilerconfiguration
loads parses groovy script via groovyclassloader groovylanggroovyclassloader
create new groovyscriptfactory given script source specifying strategy interface customize groovys compilation process within underlying groovyclassloader scriptsourcelocator locator points source script interpreted postprocessor actually creates script compilationcustomizers one customizers applied groovyclassloader compiler configuration 433 compilerconfigurationaddcompilationcustomizers orgcodehausgroovycontrolcustomizersimportcustomizer
return groovyclassloader used script factory
groovy scripts need config interface since expose setters public methods
groovy scripts determine interfaces themselves hence dont need explicitly expose interfaces here null always
instantiate given groovy script class run necessary scriptsource source underlying script scriptclass groovy script class result object either instance script class result running script instance scriptcompilationexception case instantiation failure
set custom compiler configuration evaluator 433 setcompilationcustomizers
evaluate specified beanshell script based given script source returning class defined script the script may either declare full class return actual instance scripted object in case class object returned case returned class null scriptsource script source text classloader classloader use evaluating script scripted java class null none could determined evalerror case beanshell parsing failure
evaluate specified beanshell script based given script source keeping returned script class script object asis the script may either simple script needs corresponding proxy generated implementing specified interfaces declare full class return actual instance scripted object in case specified interfaces any need implemented classinstance scriptsource script source text scriptinterfaces interfaces scripted java object supposed implement may null empty script declares full class returns actual instance scripted object classloader classloader use evaluating script scripted java class java object evalerror case beanshell parsing failure
create new beanshellscripted object given script source the script may either simple script needs corresponding proxy generated implementing specified interfaces declare full class return actual instance scripted object in case specified interfaces any need implemented classinstance scriptsource script source text scriptinterfaces interfaces scripted java object supposed implement may null empty script declares full class returns actual instance scripted object classloader classloader use evaluating script scripted java object evalerror case beanshell parsing failure
beanshell scripts require config interface
create new bshscriptfactory given script source with bshscriptfactory variant script needs declare full class return actual instance scripted object scriptsourcelocator locator points source script interpreted postprocessor actually creates script
load parse beanshell script via bshscriptutils bshscriptutilscreatebshobjectstring class classloader
create new bshscriptfactory given script source the script may either simple script needs corresponding proxy generated implementing specified interfaces declare full class return actual instance scripted object in case specified interfaces any need implemented classinstance scriptsourcelocator locator points source script interpreted postprocessor actually creates script scriptinterfaces java interfaces scripted object supposed implement may null
register scriptfactorypostprocessor bean definition supplied beandefinitionregistry scriptfactorypostprocessor hasnt already registered registry beandefinitionregistry register script processor scriptfactorypostprocessor bean definition new already registered
parses dynamic object element returns resulting bean definition registers scriptfactorypostprocessor needed
scripted beans may anonymous well
resolves script source either scriptsource attribute inlinescript element logs xmlreadercontexterror returns null neither values specified
create bean definition scripted object based given script definition extracting definition data relevant scripted object that is everything bean class constructor arguments bd full script bean definition scriptfactorybeanname name internal scriptfactory bean scriptsource scriptsource scripted bean interfaces interfaces scripted bean supposed implement extracted scriptfactory bean definition orgspringframeworkscriptingscriptfactorygetscriptedobject
prepare script beans internal beanfactory postprocessor uses original bean definition split scriptfactory definition scripted object definition bd original bean definition main beanfactory scriptfactorybeanname name internal scriptfactory bean scriptedobjectbeanname name internal scripted object bean
create config interface given bean definition defining setter methods defined property values well init method destroy method if defined this implementation creates interface via cglibs interfacemaker determining property types given interfaces as far possible bd bean definition property values etc create config interface interfaces interfaces check might define getters corresponding setters were supposed generate config interface orgspringframeworkcglibproxyinterfacemaker orgspringframeworkbeansbeanutilsfindpropertytype
create refreshable proxy given aop targetsource ts refreshable targetsource interfaces proxy interfaces may null indicate proxying interfaces implemented target class generated proxy refreshablescripttargetsource
destroy inner bean factory used scripts shutdown
convert given script source locator scriptsource instance by default supported locators spring resource locations such filecmyscriptbsh classpathmypackagemyscriptbsh inline scripts inlinemyscripttext beanname name scripted bean scriptsourcelocator script source locator resourceloader resourceloader use if necessary scriptsource instance
get refresh check delay given scriptfactory beandefinition beandefinition orgspringframeworkcoreattributeaccessor metadata attribute key refreshcheckdelayattribute valid number type value used otherwise defaultrefreshcheckdelay value used beandefinition beandefinition check refresh check delay
obtain scriptsource given bean lazily creating cached already beanname name scripted bean scriptsourcelocator script source locator associated bean corresponding scriptsource instance converttoscriptsource
create scriptfactory bean definition based given script definition extracting definition data relevant scriptfactory that is bean class constructor arguments bd full script bean definition extracted scriptfactory bean definition orgspringframeworkscriptingscriptfactory
set globally scoped bindings underlying script engine manager shared scripts alternative script argument bindings 422 evaluatescriptsource map javaxscriptscriptenginemanagersetbindingsbindings javaxscriptsimplebindings
obtain jsr223 scriptengine use given script script script evaluate scriptengine never null
create new resourcescriptsource given resource resource encodedresource load script
create new resourcescriptsource given resource resource resource load script using utf8 encoding
retrieve current lastmodified timestamp underlying resource current timestamp 0 determinable
construct new script eval exception specified original exception
load parse script via jsr223s scriptengine
create new standardscriptfactory given script source scriptenginename name jsr223 scriptengine use explicitly given instead inferred script source scriptsourcelocator locator points source script interpreted postprocessor actually creates script scriptinterfaces java interfaces scripted object supposed implement
retrieve scriptengine given scriptenginemanager name delegating scriptenginemanagergetenginebyname throwing descriptive exception found initialization failed scriptenginemanager scriptenginemanager use enginename name engine corresponding scriptengine never null illegalargumentexception matching engine found illegalstateexception desired engine failed initialize
obtain fresh target object retrieving factorybean necessary
create new refreshablescripttargetsource beanfactory beanfactory fetch scripted bean beanname name target bean scriptfactory scriptfactory delegate determining whether refresh required scriptsource scriptsource script definition isfactorybean whether target script defines factorybean
determine whether refresh required calling scriptfactorys requiresscriptedobjectrefresh method scriptfactoryrequiresscriptedobjectrefreshscriptsource
create new staticscriptsource given script script script string classname suggested class name script may null
set fresh script string overriding previous script script script string
unbind rmi service jndi bean factory shutdown
rebind specified service jndi recovering case target registry restarted namingexception service binding failed
initialize service exporter binding specified service jndi namingexception service binding failed remoteexception service export failed
locate create rmi registry registryport registry port use clientsocketfactory rmi client socket factory registry if any serversocketfactory rmi server socket factory registry if any rmi registry remoteexception registry couldnt located created
locate create rmi registry registryport registry port use rmi registry remoteexception registry couldnt located created
unexport rmi registry bean factory shutdown provided bean actually created registry
locate create rmi registry registryhost registry host use if specified implicit creation rmi registry happen registryport registry port use clientsocketfactory rmi client socket factory registry if any serversocketfactory rmi server socket factory registry if any rmi registry javarmiremoteexception registry couldnt located created
exposes exporters service interface any target interface rmibasedexportergetserviceinterface
delegates actual invocation handling rmi exporter rmibasedexporterinvokeorgspringframeworkremotingsupportremoteinvocation object
create new rmiinvocationwrapper given object wrappedobject object wrap rmiinvocationhandler rmiexporter rmi exporter handle actual invocation
wrap given arbitrary exception happened remote access either remoteexception spring remoteaccessexception if method signature support remoteexception only call remote access exceptions exceptions thrown target service itself method invoked method ex exception happened used cause remoteaccessexception remoteexception message message remoteaccessexception respectively remoteexception exception thrown caller
determine whether given rmi exception indicates connect failure treats rmis connectexception connectioexception unknownhostexception nosuchobjectexception stubnotfoundexception connect failure ex rmi exception check whether exception treated connect failure javarmiconnectexception javarmiconnectioexception javarmiunknownhostexception javarminosuchobjectexception javarmistubnotfoundexception
perform raw method invocation given rmi stub letting reflection exceptions asis invocation aop methodinvocation stub rmi stub invocation result invocationtargetexception thrown reflection
convert given remoteexception happened remote access springs remoteaccessexception method signature support remoteexception else return original remoteexception method invoked method ex remoteexception happened isconnectfailure whether given exception considered connect failure servicename name service for debugging purposes exception thrown caller
determine object export either service object rmiinvocationwrapper case nonrmi service object rmi object export setservice setserviceinterface
redefined visible rmiinvocationwrapper simply delegates corresponding superclass method
refresh rmi stub retry given invocation called invoke connect failure invocation aop method invocation invocation result throwable case invocation failure invoke
create rmi stub typically looking up called interceptor initialization cachestub true else called invocation getstub the default implementation retrieves service jndi environment overridden subclasses rmi stub store interceptor remotelookupfailureexception rmi stub creation failed setcachestub lookup
fetches rmi stub delegates doinvoke configured refresh connect failure call refreshandretry corresponding rmi exceptions getstub doinvoke refreshandretry javarmiconnectexception javarmiconnectioexception javarminosuchobjectexception
refresh stub retry remote invocation necessary if configured refresh connect failure method simply rethrows original exception invocation invocation failed ex exception raised remote invocation result value new invocation succeeded throwable exception raised new invocation failed too
set interface service access interface must suitable particular service remoting tool typically required able create suitable service proxy also optional lookup returns typed stub
return rmi stub use called invocation the default implementation returns stub created initialization any else invokes lookupstub get new stub invocation overridden subclasses example order cache stub given amount time recreating it test stub whether still alive rmi stub use invocation namingexception stub creation failed remotelookupfailureexception rmi stub creation failed
perform given invocation given rmi stub invocation aop method invocation stub rmi stub invoke invocation result throwable case invocation failure
fetches rmi stub startup necessary remotelookupfailureexception rmi stub creation failed setlookupstubonstartup lookupstub
apply given aop method invocation given rmiinvocationhandler the default implementation delegates createremoteinvocation methodinvocation current aop method invocation invocationhandler rmiinvocationhandler apply invocation invocation result remoteexception case communication errors nosuchmethodexception method name could resolved illegalaccessexception method could accessed invocationtargetexception method invocation resulted exception orgspringframeworkremotingsupportremoteinvocation
perform actual writing given invocation result object given objectoutputstream the default implementation simply calls javaioobjectoutputstreamwriteobject overridden serialization custom wrapper object rather plain invocation example encryptionaware holder result remoteinvocationresult object oos objectoutputstream write javaioioexception thrown io methods
perform actual reading invocation result object given objectinputstream the default implementation simply calls javaioobjectinputstreamreadobject overridden deserialization custom wrapper object rather plain invocation example encryptionaware holder ois objectinputstream read remoteinvocationresult object javaioioexception case io failure classnotfoundexception case transferred class found local classloader
specify content type use sending remote invocation responses default applicationxjavaserializedobject
return rmi stub use called invocation the default implementation returns stub created initialization any else invokes lookupstub get new stub invocation overridden subclasses example order cache stub given amount time recreating it test stub whether still alive rmi stub use invocation remotelookupfailureexception rmi stub creation failed lookupstub
apply given aop method invocation given rmiinvocationhandler the default implementation delegates createremoteinvocation methodinvocation current aop method invocation invocationhandler rmiinvocationhandler apply invocation invocation result remoteexception case communication errors nosuchmethodexception method name could resolved illegalaccessexception method could accessed invocationtargetexception method invocation resulted exception orgspringframeworkremotingsupportremoteinvocation
refresh stub retry remote invocation necessary if configured refresh connect failure method simply rethrows original exception invocation invocation failed ex exception raised remote invocation result value new invocation succeeded throwable exception raised new invocation failed well setrefreshstubonconnectfailure doinvoke
fetches rmi stub startup necessary remotelookupfailureexception rmi stub creation failed setlookupstubonstartup lookupstub
fetches rmi stub delegates doinvoke configured refresh connect failure call refreshandretry corresponding rmi exceptions getstub doinvokemethodinvocation remote refreshandretry javarmiconnectexception javarmiconnectioexception javarminosuchobjectexception
perform given invocation given rmi stub invocation aop method invocation stub rmi stub invoke invocation result throwable case invocation failure
refresh rmi stub retry given invocation called invoke connect failure invocation aop method invocation invocation result throwable case invocation failure invoke
create rmi stub typically looking up called interceptor initialization cachestub true else called invocation getstub the default implementation looks service url via javarminaming overridden subclasses rmi stub store interceptor remotelookupfailureexception rmi stub creation failed setcachestub javarminaminglookup
unbind rmi service registry bean factory shutdown
initialize service exporter registering service rmi object creates rmi registry specified port none exists remoteexception service registration failed
locate create rmi registry exporter registryport registry port use rmi registry remoteexception registry couldnt located created
unexport registered rmi object logging exception arises
locate create rmi registry exporter registryport registry port use clientsocketfactory rmi client socket factory registry if any serversocketfactory rmi server socket factory registry if any rmi registry remoteexception registry couldnt located created
locate create rmi registry exporter registryhost registry host use if specified implicit creation rmi registry happen registryport registry port use clientsocketfactory rmi client socket factory registry if any serversocketfactory rmi server socket factory registry if any rmi registry remoteexception registry couldnt located created
create new codebaseawareobjectinputstream given inputstream codebase inputstream read classloader classloader use loading local classes may null indicate rmis default classloader acceptproxyclasses whether accept deserialization proxy classes may deactivated security measure javaioobjectinputstreamobjectinputstreamjavaioinputstream
create new codebaseawareobjectinputstream given inputstream codebase inputstream read classloader classloader use loading local classes may null indicate rmis default classloader codebaseurl codebase url load classes found locally can consist multiple urls separated spaces javaioobjectinputstreamobjectinputstreamjavaioinputstream
set remoteinvocationfactory use accessor default defaultremoteinvocationfactory a custom invocation factory add context information invocation example user credentials
create new remoteinvocation given aop method invocation methodinvocation aop invocation convert
retrieve attribute given key any the implementation avoids unnecessarily create attributes map minimize serialization size key attribute key attribute value null defined
perform invocation given target object typically called remoteinvocation received server targetobject target object apply invocation invocation result nosuchmethodexception method name could resolved illegalaccessexception method could accessed invocationtargetexception method invocation resulted exception javalangreflectmethodinvoke
add additional invocation attribute useful add additional invocation context without subclass remoteinvocation attribute keys unique overriding existing attributes allowed the implementation avoids unnecessarily create attributes map minimize serialization size key attribute key value attribute value illegalstateexception key already bound
create new remoteinvocation given parameters methodname name method invoke parametertypes parameter types method arguments arguments invocation
return attributes map mainly debugging purposes preferably use addattribute getattribute attributes map null none created addattribute getattribute
set interface service access interface must suitable particular service remoting strategy typically required able create suitable service proxy also optional lookup returns typed proxy
fill current clientside stack trace given exception the given exception typically thrown server serialized asis client wanting contain clientside portion stack trace well update stacktraceelement array current clientside stack trace provided run jdk 14 ex exception update throwablegetstacktrace throwablesetstacktracestacktraceelement
set interface service export interface must suitable particular service remoting strategy
check whether service reference set whether matches specified service setserviceinterface setservice
get proxy given service object implementing specified service interface used export proxy expose internals specific interface intended remote access furthermore remoteinvocationtraceinterceptor registered by default proxy setserviceinterface setregistertraceinterceptor remoteinvocationtraceinterceptor
recreate invocation result either returning result value case successful invocation target method rethrowing exception thrown target method result value throwable exception
return exception thrown unsuccessful invocation target method any hasexception
return result value returned successful invocation target method any hasexception
apply given remote invocation given target object wrapping invocation result serializable remoteinvocationresult object default implementation creates plain remoteinvocationresult can overridden subclasses custom invocation behavior example return additional context information note covered remoteinvocationexecutor strategy invocation remote invocation targetobject target object apply invocation invocation result invoke
apply given remote invocation given target object default implementation delegates remoteinvocationexecutor can overridden subclasses custom invocation behavior possibly applying additional invocation parameters custom remoteinvocation subclass note preferable use custom remoteinvocationexecutor reusable strategy invocation remote invocation targetobject target object apply invocation invocation result nosuchmethodexception method name could resolved illegalaccessexception method could accessed invocationtargetexception method invocation resulted exception remoteinvocationexecutorinvoke
override thread context classloader environments bean classloader necessary ie bean classloader equivalent thread context classloader already original thread context classloader null overridden
reset original thread context classloader necessary original original thread context classloader null overridden and hence nothing reset
create new applicationevent source object event initially occurred never null
return phase lifecycle object supposed run in the default implementation returns defaultphase order let stop callbacks execute regular lifecycle implementations isautostartup start stoprunnable orgspringframeworkcontextsupportdefaultlifecycleprocessorgetphaselifecycle
indicates lifecycle component must stop currently running the provided callback used lifecycleprocessor support ordered potentially concurrent shutdown components common shutdown order value callback must executed smartlifecycle component indeed stop the lifecycleprocessor call only variant stop method ie lifecyclestop called smartlifecycle implementations unless explicitly delegated within implementation method the default implementation delegates stop immediately triggers given callback calling thread note synchronization two custom implementations may least want put steps within common lifecycle monitor if any stop getphase
return default message used resolve message the default implementation simply returns null note default message may identical primary message code getcodes effectively enforces orgspringframeworkcontextsupportabstractmessagesourcesetusecodeasdefaultmessage particular message default message null default
return array arguments used resolve message the default implementation simply returns null array objects used parameters replace placeholders within message text javatextmessageformat
create new payloadapplicationevent source object event initially occurred never null payload payload object never null
return candidate types associated specified stereotype basepackage package check candidates stereotype stereotype use candidate types associated specified stereotype empty set none found specified basepackage
load instantiate candidatecomponentsindex value componentsresourcelocation using given class loader index available return null classloader classloader use loading can null use default index use null index found illegalargumentexception module index cannot loaded error occurs creating candidatecomponentsindex
create new instance specified spelexpressionparser
return expression specified spel value parse expression hasnt already cache cache use elementkey element expression defined expression expression parse
create new beanfactoryresolver given factory beanfactory beanfactory resolve bean names
create new instance specified annotatedelement optional target class
set prefix expression string starts with default defaultexpressionprefix
set suffix expression string ends with default defaultexpressionsuffix
specify el parser use expression parsing default orgspringframeworkexpressionspelstandardspelexpressionparser compatible standard unified el style expression syntax
read environment thus always returns true true
readonly noop
access given target object resolving given property name given target environment
readonly returns false
load param information needed
determine listeners order set listeners event the default implementation returns lowestprecedence
determine whether given class orgspringframework bean class annotated user test component indicates eventlistener found there 51
set application event class publish the event class must constructor single object argument event source interceptor pass invoked object illegalargumentexception supplied class null applicationevent subclass expose constructor takes single object argument
initialize instance
add additional details bean type method signature given error message message error message append handlermethod details
return target bean instance use
invoke event listener method given argument values
process specified applicationevent checking condition match handling nonnull result any
assert target bean class instance class given method declared cases actual bean instance event processing time may jdk dynamic proxy lazy initialization prototype beans others event listener beans require proxying prefer classbased proxy mechanisms
return condition use matches condition attribute eventlistener annotation matching attribute composed annotation metaannotated eventlistener
resolve method arguments use specified applicationevent these arguments used invoke method handled instance return null indicate suitable arguments could resolved therefore method invoked specified event
return current task executor multicaster
return current error handler multicaster 41
invoke given listener given event listener applicationlistener invoke event current event propagate 41
determine listeners order set listeners event the default implementation returns lowestprecedence
actually process event filtered according desired event source already the default implementation invokes specified delegate any event event process matching specified source
create sourcefilteringlistener given event source source event source listener filters for processing events source delegate delegate listener invoke event specified source
return collection applicationlisteners matching given event type nonmatching listeners get excluded early event event propagated allows excluding nonmatching listeners early based cached matching information eventtype event type collection applicationlisteners orgspringframeworkcontextapplicationlistener
filter listener early checking generically declared event type trying instantiate it if method returns true given listener first pass listener instance get retrieved fully evaluated supportseventapplicationlistenerresolvabletype class call afterwards listenertype listeners type determined beanfactory eventtype event type check whether given listener included candidates given event type
return collection containing applicationlisteners collection applicationlisteners orgspringframeworkcontextapplicationlistener
determine whether given listener supports given event the default implementation detects smartapplicationlistener genericapplicationlistener interfaces case standard applicationlistener genericapplicationlisteneradapter used introspect generically declared type target listener listener target listener check eventtype event type check sourcetype source type check whether given listener included candidates given event type
actually retrieve application listeners given event source type eventtype event type sourcetype event source type retriever listenerretriever supposed populate one for caching purposes prefiltered list application listeners given event source type
specify condition defined specified expression matches
create new genericapplicationlistener given delegate delegate delegate listener invoked
create new simpletimezoneawarelocalecontext exposes specified locale timezone every getlocale call return given locale every gettimezone call return given timezone locale locale expose timezone timezone expose
return locale associated given user context any system default locale otherwise effectively replacement javautillocalegetdefault able optionally respect userlevel locale setting localecontext userlevel locale context check current locale system default locale specific locale associated current thread 50 getlocale localecontextgetlocale setdefaultlocalelocale javautillocalegetdefault
return localecontext associated current thread any current localecontext null none
return timezone associated given user context any system default timezone otherwise effectively replacement javautiltimezonegetdefault able optionally respect userlevel timezone setting localecontext userlevel locale context check current timezone system default timezone specific timezone associated current thread 50 gettimezone timezoneawarelocalecontextgettimezone setdefaulttimezonetimezone javautiltimezonegetdefault
associate given timezone current thread preserving locale may set already will implicitly create localecontext given locale timezone current timezone null reset time zone part threadbound context inheritable whether expose localecontext inheritable child threads using inheritablethreadlocal setlocalelocale boolean simpletimezoneawarelocalecontextsimpletimezoneawarelocalecontextlocale timezone
reset localecontext current thread
associate given localecontext current thread the given localecontext may timezoneawarelocalecontext containing locale associated time zone information localecontext current localecontext null reset threadbound context inheritable whether expose localecontext inheritable child threads using inheritablethreadlocal simplelocalecontext simpletimezoneawarelocalecontext
associate given locale current thread preserving timezone may set already will implicitly create localecontext given locale locale current locale null reset locale part threadbound context inheritable whether expose localecontext inheritable child threads using inheritablethreadlocal settimezonetimezone boolean simplelocalecontextsimplelocalecontextlocale
stop registered beans implement lifecycle are currently running bean implements smartlifecycle stopped within phase phases ordered highest lowest value beans implement smartlifecycle stopped default phase 0 bean declared dependent another bean stopped dependency bean regardless declared phase
start registered beans implement lifecycle not already running bean implements smartlifecycle started within phase phases ordered lowest highest value beans implement smartlifecycle started default phase 0 bean declared dependency another bean started dependent bean regardless declared phase
retrieve applicable lifecycle beans singletons already created well smartlifecycle beans even marked lazyinit map applicable beans bean names keys bean instances values
stop specified bean part given set lifecycle beans making sure beans depends stopped first lifecyclebeans map bean name key lifecycle instance value beanname name bean stop
start specified bean part given set lifecycle beans making sure beans depends started first lifecyclebeans map bean name key lifecycle instance value beanname name bean start
load properties given resource resource resource load filename original bundle filename basename locale populated properties instance ioexception properties loading failed
set propertiespersister use parsing properties files the default defaultpropertiespersister orgspringframeworkutildefaultpropertiespersister
resolves given message code key retrieved bundle files using cached messageformat instance per message code
get propertiesholder given filename either cache freshly loaded filename bundle filename basename locale current propertiesholder bundle
calculate filenames given bundle basename locale calculate filenames given locale system locale if applicable default file basename basename bundle locale locale list filenames check setfallbacktosystemlocale calculatefilenamesforlocale
refresh propertiesholder given bundle filename holder null cached before timedout cache entry potentially getting revalidated current lastmodified timestamp filename bundle filename basename locale propholder current propertiesholder bundle
clear resource bundle cache subsequent resolve calls lead reloading properties files
set resourceloader use loading bundle properties files the default defaultresourceloader get overridden applicationcontext running context implements resourceloaderaware interface manually overridden running outside applicationcontext orgspringframeworkcoreiodefaultresourceloader orgspringframeworkcontextresourceloaderaware
clear resource bundle caches messagesource ancestors clearcache
calculate filenames given bundle basename locale appending language code country code variant code eg basename messages locale deatoo messagesdeatoo messagesdeat messagesde follows rules defined javautillocaletostring basename basename bundle locale locale list filenames check
resolves given message code key retrieved bundle files returning value found bundle asis without messageformat parsing
get propertiesholder contains actually visible properties locale merging specified resource bundles either fetches holder cache freshly loads it only used caching resource bundle contents forever ie cacheseconds 0 therefore merged properties always cached forever
return default code resolvable is last one codes array
create new defaultmessagesourceresolvable codes codes used resolve message arguments array arguments used resolve message defaultmessage default message used resolve message
default implementation exposes attributes messagesourceresolvable to overridden specific subclasses potentially including resolvable content resolvabletostring resolvabletostring
build default string representation messagesourceresolvable including codes arguments default message
return default charset use parsing properties files any 43
set array basenames following basic resourcebundle convention specifying file extension language codes resource location format specific messagesource implementation regular xml properties files supported eg messages find messagesproperties messagesenproperties etc arrangement well messagesxml messagesenxml etc the associated resource bundles checked sequentially resolving message code note message definitions previous resource bundle override ones later bundle due sequential lookup note contrast addbasenames replaces existing entries given names therefore also used reset configuration basenames array basenames setbasename javautilresourcebundle
add specified basenames existing basename configuration note given basename already exists position entry remain original set new entries added end list searched existing basenames 43 setbasenames javautilresourcebundle
retrieve message given code given locale code code message args arguments message null none defaultmessage string return lookup fails locale locale lookup message
retrieve message given code given locale code code message defaultmessage string return lookup fails locale locale lookup message
retrieve message given code default locale code code message args arguments message null none defaultmessage string return lookup fails message
create new messagesourceaccessor using given default locale messagesource messagesource wrap defaultlocale default locale use message access
retrieve message given code default locale code code message defaultmessage string return lookup fails message
create new messagesourceaccessor using localecontextholders locale default locale messagesource messagesource wrap orgspringframeworkcontexti18nlocalecontextholdergetlocale
create new classpathxmlapplicationcontext given parent loading definitions given xml files configlocations array resource locations refresh whether automatically refresh context loading bean definitions creating singletons alternatively call refresh manually configuring context parent parent context beansexception context creation failed refresh
create new classpathxmlapplicationcontext given parent loading definitions given xml files automatically refreshing context paths array relative or absolute paths within class path clazz class load resources basis given paths parent parent context beansexception context creation failed orgspringframeworkcoreioclasspathresourceclasspathresourcestring class orgspringframeworkcontextsupportgenericapplicationcontext orgspringframeworkbeansfactoryxmlxmlbeandefinitionreader
create new classpathxmlapplicationcontext given parent loading definitions given xml files automatically refreshing context configlocations array resource locations parent parent context beansexception context creation failed
format given message string using cached messageformats default invoked passedin default messages resolve argument placeholders found them msg message format args array arguments filled params within message null none locale locale used formatting formatted message with resolved arguments
return messageformat given bundle code fetching already generated messageformats cache bundle resourcebundle work code message code retrieve locale locale use build messageformat resulting messageformat null message defined given code missingresourceexception thrown resourcebundle
resolves given message code key registered resource bundles returning value found bundle asis without messageformat parsing
show configuration messagesource
resolves given message code key registered resource bundles using cached messageformat instance per message code
obtain resource bundle given basename locale basename basename look locale locale look corresponding resourcebundle missingresourceexception matching bundle could found javautilresourcebundlegetbundlestring locale classloader getbundleclassloader
efficiently retrieve string value specified key return null found as 42 default implementation checks containskey attempts call getstring which would require catching missingresourceexception key found can overridden subclasses bundle resourcebundle perform lookup key key look associated value null none 42 resourcebundlegetstringstring resourcebundlecontainskeystring
return classloader load resource bundles with default containing beanfactorys bean classloader setbundleclassloader
return resourcebundle given basename code fetching already generated messageformats cache basename basename resourcebundle locale locale find resourcebundle resulting resourcebundle null none found given basename locale
propertysources given environment searched replacing placeholders setpropertysources postprocessbeanfactory
implemented compatibility orgspringframeworkbeansfactoryconfigplaceholderconfigurersupport favor processpropertiesconfigurablelistablebeanfactory configurablepropertyresolver unsupportedoperationexception implementation
return property sources actually applied postprocessbeanfactoryconfigurablelistablebeanfactory postprocessing property sources applied illegalstateexception property sources yet applied 40
visit bean definition given bean factory attempt replace property placeholders values given properties
processing occurs replacing placeholders bean definitions resolving configurers set propertysources includes all plain orgspringframeworkcoreenvconfigurableenvironmentgetpropertysources environment property sources environment plain setenvironment present plain mergeproperties merged local properties plain setlocation any plain setlocations have plain setproperties been plain setpropertiesarray specified any property sources set calling setpropertysources if setpropertysources called environment local properties ignored method designed give user finegrained control property sources set configurer makes assumptions adding additional sources
associate given message values given keys codes messages messages register messages codes keys message texts values locale locale messages found within
associate given message given code code lookup code locale locale message found within msg message associated lookup code
create new genericgroovyapplicationcontext loading bean definitions given resource locations automatically refreshing context resourcelocations resources load
create new genericgroovyapplicationcontext loading bean definitions given resources automatically refreshing context resources resources load
load bean definitions given groovy scripts xml files note xml files parsed xml content kinds resources parsed groovy scripts relativeclass class whose package used prefix loading specified resource name resourcenames relativelyqualified names resources load
create new genericgroovyapplicationcontext loading bean definitions given resource locations automatically refreshing context relativeclass class whose package used prefix loading specified resource name resourcenames relativelyqualified names resources load
delegates given environment underlying groovybeandefinitionreader called call load
return timestamp ms context first loaded
create new abstractapplicationcontext given parent context parent parent context
initialize lifecycleprocessor uses defaultlifecycleprocessor none defined context orgspringframeworkcontextsupportdefaultlifecycleprocessor
initialize messagesource use parents none defined context
return parent context null parent that is context root context hierarchy
return internal applicationeventmulticaster used context internal applicationeventmulticaster never null illegalstateexception context initialized yet
publish given event listeners note listeners get initialized messagesource able access within listener implementations thus messagesource implementations cannot publish events event event publish may applicationspecific standard framework event
tell subclass refresh internal bean factory fresh beanfactory instance refreshbeanfactory getbeanfactory
set unique id application context default object id context instance name context bean context defined bean id unique id context
set environment application context default value determined createenvironment replacing default method one option configuration getenvironment also considered either case modifications performed before refresh orgspringframeworkcontextsupportabstractapplicationcontextcreateenvironment
instantiate invoke registered beanfactorypostprocessor beans respecting explicit order given must called singleton instantiation
callback destruction instance originally attached disposablebean implementation not anymore 50 the close method native way shut applicationcontext method simply delegates to spring framework 50 favor close
reset springs common reflection metadata caches particular reflectionutils annotationutils resolvabletype cachedintrospectionresults caches 42 reflectionutilsclearcache annotationutilsclearcache resolvabletypeclearcache cachedintrospectionresultsclearclassloaderclassloader
publish given event listeners note listeners get initialized messagesource able access within listener implementations thus messagesource implementations cannot publish events event event publish may applicationevent payload object turned payloadapplicationevent
return internal messagesource used context internal messagesource never null illegalstateexception context initialized yet
return environment application context configurable form allowing customization if none specified default environment initialized via createenvironment
close application context destroying beans bean factory delegates doclose actual closing procedure also removes jvm shutdown hook registered its needed anymore doclose registershutdownhook
return internal lifecycleprocessor used context internal lifecycleprocessor never null illegalstateexception context initialized yet
return internal message source parent context abstractapplicationcontext too else return parent context itself
finish initialization contexts bean factory initializing remaining singleton beans
add beans implement applicationlistener listeners doesnt affect listeners added without beans
configure factorys standard context characteristics contexts classloader postprocessors beanfactory beanfactory configure
return internal bean factory parent context implements configurableapplicationcontext else return parent context itself orgspringframeworkcontextconfigurableapplicationcontextgetbeanfactory
publish given event listeners event event publish may applicationevent payload object turned payloadapplicationevent eventtype resolved event type known 42
register shutdown hook jvm runtime closing context jvm shutdown unless already closed time delegates doclose actual closing procedure runtimeaddshutdownhook close doclose
set friendly name context typically done initialization concrete context implementations default object id context instance
set parent application context the parent plain applicationcontextgetenvironment environment plain configurableenvironmentmergeconfigurableenvironment merged child application context environment parent non null environment instance configurableenvironment configurableenvironmentmergeconfigurableenvironment
finish refresh context invoking lifecycleprocessors onrefresh method publishing orgspringframeworkcontexteventcontextrefreshedevent
initialize applicationeventmulticaster uses simpleapplicationeventmulticaster none defined context orgspringframeworkcontexteventsimpleapplicationeventmulticaster
return contexts internal bean factory autowirecapablebeanfactory already available getbeanfactory
return information context
prepare context refreshing setting startup date active flag well performing initialization property sources
return friendly name context display name context never null
actually performs context closing publishes contextclosedevent destroys singletons bean factory application context called close jvm shutdown hook any orgspringframeworkcontexteventcontextclosedevent destroybeans close registershutdownhook
assert contexts beanfactory currently active throwing illegalstateexception isnt invoked beanfactory delegation methods depend active context ie particular bean accessor methods the default implementation checks isactive active status context overall may overridden specific checks noop getbeanfactory throws exception case
register given beanpostprocessor beans
invoke given beanfactorypostprocessor beans
invoke given beandefinitionregistrypostprocessor beans
register bean given bean class using given supplier obtaining new instance typically declared lambda expression method reference optionally customizing bean definition metadata again typically declared lambda expression method reference this method overridden adapt registration mechanism registerbean methods since delegate one beanname name bean may null beanclass class bean supplier callback creating instance bean in case null resolving public constructor autowired instead customizers one callbacks customizing factorys beandefinition eg setting lazyinit primary flag 50
register bean given bean class using given supplier obtaining new instance typically declared lambda expression method reference optionally customizing bean definition metadata again typically declared lambda expression method reference beanname name bean may null beanclass class bean resolving public constructor autowired possibly simply default constructor customizers one callbacks customizing factorys beandefinition eg setting lazyinit primary flag 50 registerbeanstring class supplier beandefinitioncustomizer
implementation delegates contexts resourceloader implements resourcepatternresolver interface falling back default superclass behavior else setresourceloader
register bean given bean class using given supplier obtaining new instance typically declared lambda expression method reference optionally customizing bean definition metadata again typically declared lambda expression method reference beanclass class bean supplier callback creating instance bean customizers one callbacks customizing factorys beandefinition eg setting lazyinit primary flag 50 registerbeanstring class supplier beandefinitioncustomizer
return single internal beanfactory held context as configurablelistablebeanfactory
implementation delegates contexts resourceloader set falling back default superclass behavior else setresourceloader
much do hold single internal beanfactory never get released
create new genericapplicationcontext given defaultlistablebeanfactory beanfactory defaultlistablebeanfactory instance use context registerbeandefinition refresh
create new genericapplicationcontext given defaultlistablebeanfactory beanfactory defaultlistablebeanfactory instance use context parent parent application context registerbeandefinition refresh
nothing hold single internal beanfactory rely callers register beans public methods or beanfactorys registerbeandefinition
create new genericapplicationcontext given parent parent parent application context registerbeandefinition refresh
set parent application context also setting parent internal beanfactory accordingly orgspringframeworkbeansfactoryconfigconfigurablebeanfactorysetparentbeanfactory
create new applicationcontextawareprocessor given context
return default config locations use case explicit config locations specified the default implementation returns null requiring explicit config locations array default config locations setconfiglocations
sets id context bean name default cases context instance defined bean
triggers refresh refreshed concrete contexts constructor already
set config locations application context if set implementation may use default appropriate
return array resource locations referring xml bean definition files context built with also include location patterns get resolved via resourcepatternresolver the default implementation returns null subclasses override provide set resource locations load bean definitions from array resource locations null none getresources getresourcepatternresolver
create new genericxmlapplicationcontext loading bean definitions given resource locations automatically refreshing context resourcelocations resources load
create new genericxmlapplicationcontext loading bean definitions given resources automatically refreshing context resources resources load
create new genericxmlapplicationcontext loading bean definitions given resource locations automatically refreshing context relativeclass class whose package used prefix loading specified resource name resourcenames relativelyqualified names resources load
load bean definitions given xml resources relativeclass class whose package used prefix loading specified resource name resourcenames relativelyqualified names resources load
delegates given environment underlying xmlbeandefinitionreader called call load
return fallback default message given code any default return code usecodeasdefaultmessage activated return fallback else case fallback caller usually receive nosuchmessageexception getmessage code message code couldnt resolve didnt receive explicit default message default message use null none setusecodeasdefaultmessage
get default message given messagesourceresolvable this implementation fully renders default message available returns plain default message string primary message code used default message resolvable value object resolve default message locale current locale default message null none 436 renderdefaultmessagestring object locale getdefaultmessagestring
subclasses override method resolve message without arguments optimized fashion ie resolve without involving messageformat the default implementation does use messageformat delegating resolvecode method subclasses encouraged replace optimized resolution unfortunately javatextmessageformat implemented efficient fashion particular detect message pattern doesnt contain argument placeholders first place therefore advisable circumvent messageformat messages without arguments code code message resolve locale locale resolve code subclasses encouraged support internationalization message string null found resolvecode javatextmessageformat
try retrieve given message parent messagesource any code code lookup up calculatornorateset args array arguments filled params within message locale locale lookup resolved message null found getparentmessagesource
searches given array objects finds messagesourceresolvable objects resolves them allows messages messagesourceresolvables arguments args array arguments message locale locale resolve array arguments messagesourceresolvables resolved
return properties object defining localeindependent common messages any
resolve given code arguments message given locale returning null found not fall back code default message invoked getmessage methods code code lookup up calculatornorateset args array arguments filled params within message locale locale lookup resolved message null found getmessagestring object string locale getmessagestring object locale getmessagemessagesourceresolvable locale setusecodeasdefaultmessage
loads bean definitions via xmlbeandefinitionreader orgspringframeworkbeansfactoryxmlxmlbeandefinitionreader initbeandefinitionreader loadbeandefinitions
return array resource objects referring xml bean definition files context built with the default implementation returns null subclasses override provide prebuilt resource objects rather location strings array resource objects null none getconfiglocations
load bean definitions given xmlbeandefinitionreader the lifecycle bean factory handled refreshbeanfactory method hence method supposed load andor register bean definitions reader xmlbeandefinitionreader use beansexception case bean registration errors ioexception required xml document isnt found refreshbeanfactory getconfiglocations getresources getresourcepatternresolver
create new filesystemxmlapplicationcontext given parent loading definitions given xml files configlocations array file paths refresh whether automatically refresh context loading bean definitions creating singletons alternatively call refresh manually configuring context parent parent context beansexception context creation failed refresh
resolve resource paths file system paths note even given path starts slash get interpreted relative current vm working directory consistent semantics servlet container path path resource resource handle orgspringframeworkwebcontextsupportxmlwebapplicationcontextgetresourcebypath
obtain applicationcontext actual use applicationcontext never null illegalstateexception case applicationcontext set 50
return messagesourceaccessor application context used object easy message access illegalstateexception running applicationcontext
return applicationcontext object associated with illegalstateexception running applicationcontext
register prototype bean underlying bean factory for advanced needs register underlying beanfactory directly getdefaultlistablebeanfactory
register singleton bean underlying bean factory for advanced needs register underlying beanfactory directly getdefaultlistablebeanfactory
register prototype bean underlying bean factory for advanced needs register underlying beanfactory directly getdefaultlistablebeanfactory
create new staticapplicationcontext given parent registersingleton registerprototype registerbeandefinition refresh
register singleton bean underlying bean factory for advanced needs register underlying beanfactory directly getdefaultlistablebeanfactory
implementation performs actual refresh contexts underlying bean factory shutting previous bean factory if any initializing fresh bean factory next phase contexts lifecycle
customize internal bean factory used context called refresh attempt the default implementation applies contexts plain setallowbeandefinitionoverriding allowbeandefinitionoverriding plain setallowcircularreferences allowcircularreferences settings specified overridden subclasses customize defaultlistablebeanfactorys settings beanfactory newly created bean factory context defaultlistablebeanfactorysetallowbeandefinitionoverriding defaultlistablebeanfactorysetallowcircularreferences defaultlistablebeanfactorysetallowrawinjectiondespitewrapping defaultlistablebeanfactorysetalloweagerclassloading
determine whether context currently holds bean factory ie refreshed least closed yet
implementation checks whether target messagesource resolve message given key translating nosuchmessageexception accordingly contrast resourcebundles default implementation jdk 16 rely capability enumerate message keys
create new messagesourceresourcebundle given messagesource locale source messagesource retrieve messages locale locale retrieve messages
implementation throws unsupportedoperationexception messagesource allow enumerating defined message codes
implementation exposes specified locale introspection standard resourcebundlegetlocale method
create new messagesourceresourcebundle given messagesource locale source messagesource retrieve messages locale locale retrieve messages parent parent resourcebundle delegate local message found
implementation resolves code messagesource returns null message could resolved
resolve given embedded value instances stringvalueresolver value value resolve resolved value always original value resolver available setembeddedvalueresolver
find applicable applicationcontexts current application called specific applicationcontext set livebeansview set applicationcontexts
determine whether specified bean eligible inclusion livebeansview json snapshot beanname name bean bd corresponding bean definition bf containing bean factory true bean included false otherwise
generate json snapshot current beans dependencies finding active applicationcontexts findapplicationcontexts delegating generatejsonjavautilset
actually generate json snapshot beans given applicationcontexts this implementation doesnt use json parsing libraries order avoid thirdparty library dependencies produces array context description objects containing context parent attribute well beans attribute nested bean description objects bean object contains bean scope type resource attribute well dependencies attribute nested array bean names present bean depends on contexts set applicationcontexts json document
determine resource description given bean definition apply basic json escaping backslashes double quotes it bd bean definition build resource description jsonescaped resource description
set proxymode applied scoped instance
set name scope
register member nested classes happen configuration classes themselves
return imports defined group import associated configuration class
factory method obtain sourceclass class
factory method obtain sourceclass sourceclasss class names
factory method obtain sourceclass class name
recursively collect declared import values unlike metaannotations valid several imports declared different values usual process returning values first metaannotation class sufficient for example common configuration class declare direct imports addition metaimports originating enable annotation sourceclass class search imports imports collected far visited used track visited classes prevent infinite recursion ioexception problem reading metadata named class
register default methods interfaces implemented configuration class
retrieve metadata bean methods
handle specified deferredimportselector deferred import selectors collected registers instance list processed deferredimportselector also processed immediately according deferredimportselectorgroup configclass source configuration class importselector selector handle
given stack containing in order comacmefoo comacmebar comacmebaz return foobarbaz
factory method obtain sourceclass configurationclass
create new configurationclassparser instance used populate set configuration classes
apply processing build complete configurationclass reading annotations members methods source class method called multiple times relevant sources discovered configclass configuration class build sourceclass source class superclass null none found previously processed
process given propertysource annotation metadata propertysource metadata propertysource annotation found ioexception loading property source failed
validate configurationclass object configurationclassvalidate
returns import class considering metaannotations
return specific import group null grouping required import group class null
register one annotated classes processed note refresh must called order context fully process new classes annotatedclasses one annotated classes eg configuration configuration classes scanstring refresh
create new annotationconfigapplicationcontext given defaultlistablebeanfactory beanfactory defaultlistablebeanfactory instance use context
create new annotationconfigapplicationcontext scanning bean definitions given packages automatically refreshing context basepackages packages check annotated classes
create new annotationconfigapplicationcontext deriving bean definitions given annotated classes automatically refreshing context annotatedclasses one annotated classes eg configuration configuration classes
set scopemetadataresolver use detected bean classes the default annotationscopemetadataresolver any call method must occur prior calls registerclass andor scanstring
propagates given custom environment underlying annotatedbeandefinitionreader classpathbeandefinitionscanner
provide custom beannamegenerator use annotatedbeandefinitionreader andor classpathbeandefinitionscanner any default orgspringframeworkcontextannotationannotationbeannamegenerator any call method must occur prior calls registerclass andor scanstring annotatedbeandefinitionreadersetbeannamegenerator classpathbeandefinitionscannersetbeannamegenerator
create new annotationconfigapplicationcontext needs populated register calls manually plain refresh refreshed
register bean given bean class deriving metadata classdeclared annotations optionally providing explicit constructor arguments consideration autowiring process beanname name bean may null annotatedclass class bean constructorarguments argument values fed springs constructor resolution algorithm resolving either arguments specific ones rest resolved regular autowiring may null empty 50
perform scan within specified base packages note refresh must called order context fully process new classes basepackages packages check annotated classes registerclass refresh
set type annotation checked annotationscopemetadataresolver scopeannotationtype target annotation type
construct new annotationscopemetadataresolver using supplied default scopedproxymode defaultproxymode default scopedproxy mode
implementation resolves type annotation generic metadata validates a annotation fact present importing configuration class b given annotation plain getadvicemodeattributename advice mode attribute type advicemode the selectimportsadvicemode method invoked allowing concrete implementation choose imports safe convenient fashion illegalargumentexception expected annotation a present importing configuration class selectimportsadvicemode returns null
register relevant annotation post processors given registry registry registry operate source configuration source element already extracted registration triggered from may null set beandefinitionholders containing bean definitions actually registered call
resolve given annotation type named spring scope the default implementation simply checks registered scopes overridden custom mapping rules eg naming conventions annotationtype jsr330 annotation type spring scope name
derive bean definitions configuration classes registry
postprocesses beanfactory search configuration class beandefinitions candidates enhanced configurationclassenhancer candidate status determined beandefinition attribute metadata configurationclassenhancer
set beannamegenerator used triggering component scanning configuration classes registering imported configuration classes default standard annotationbeannamegenerator scanned components compatible default classpathbeandefinitionscanner variant thereof imported configuration classes using unique fullyqualified class names instead standard component overriding note strategy not apply bean methods this setter typically appropriate configuring postprocessor standalone bean definition xml eg using dedicated annotationconfig application contexts element bean name generator specified application context take precedence value set here 311 annotationconfigapplicationcontextsetbeannamegeneratorbeannamegenerator annotationconfigutilsconfigurationbeannamegenerator
prepare configuration classes servicing bean requests runtime replacing cglibenhanced subclasses
set metadatareaderfactory use default cachingmetadatareaderfactory specified plain setbeanclassloader bean class loader
build validate configuration model based registry configuration classes
create new conditionevaluator instance
determine item skipped based conditional annotations metadata meta data phase phase call item skipped
check whether given bean definition candidate configuration class or nested component class declared within configurationcomponent class autoregistered well mark accordingly beandef bean definition check metadatareaderfactory current factory use caller whether candidate qualifies any kind of configuration class
determine order given configuration class metadata metadata metadata annotated class order annotation value configuration class orderedlowestprecedence none declared 50
determine order given configuration class bean definition set checkconfigurationclasscandidate beandef bean definition check order order annotation value configuration class orderedlowestprecedence none declared 42
check given metadata lite configuration class candidate eg class annotated component import declarations bean methods metadata metadata annotated class true given class processed lite configuration class registering scanning bean methods
get environment given registry possible otherwise return new standardenvironment
perform scan within specified base packages returning registered bean definitions this method not register annotation config processor rather leaves caller basepackages packages check annotated classes set beans registered tooling registration purposes never null
create new classpathbeandefinitionscanner given bean factory using given environment evaluating bean definition profile metadata if passedin bean factory implement beandefinitionregistry interface also resourceloader interface used default resourceloader well usually case orgspringframeworkcontextapplicationcontext implementations if given plain beandefinitionregistry default resourceloader orgspringframeworkcoreiosupportpathmatchingresourcepatternresolver registry beanfactory load bean definitions into form beandefinitionregistry usedefaultfilters whether include default filters orgspringframeworkstereotypecomponent component orgspringframeworkstereotyperepository repository orgspringframeworkstereotypeservice service orgspringframeworkstereotypecontroller controller stereotype annotations environment spring environment use evaluating bean definition profile metadata 31 setresourceloader
set scopemetadataresolver use detected bean classes note override custom scopedproxymode setting the default annotationscopemetadataresolver setscopedproxymode
apply settings given bean definition beyond contents retrieved scanning component class beandefinition scanned bean definition beanname generated bean name given bean
set defaults use detected beans beandefinitiondefaults
check given candidates bean name determining whether corresponding bean definition needs registered conflicts existing definition beanname suggested name bean beandefinition corresponding bean definition true bean registered asis false skipped existing compatible bean definition specified name conflictingbeandefinitionexception existing incompatible bean definition found specified name
determine whether given new bean definition compatible given existing bean definition the default implementation considers compatible existing bean definition comes source nonscanning source newdefinition new bean definition originated scanning existingdefinition existing bean definition potentially explicitly defined one previously generated one scanning whether definitions considered compatible new definition skipped favor existing definition
perform scan within specified base packages basepackages packages check annotated classes number beans registered
return beandefinitionregistry scanner operates on
create new classpathbeandefinitionscanner given bean factory using given environment evaluating bean definition profile metadata registry beanfactory load bean definitions into form beandefinitionregistry usedefaultfilters whether include default filters orgspringframeworkstereotypecomponent component orgspringframeworkstereotyperepository repository orgspringframeworkstereotypeservice service orgspringframeworkstereotypecontroller controller stereotype annotations environment spring environment use evaluating bean definition profile metadata resourceloader resourceloader use 436
register escalate configure aspectj auto proxy creator based value enableaspectjautoproxyproxytargetclass attribute importing configuration class
determine index used instance true index available configuration instance supported it false otherwise 50
determine whether given class match exclude filter match least one include filter metadatareader asm classreader class whether class qualifies candidate component
return beandefinitionregistry used scanner any
set resource pattern use scanning classpath value appended base package name findcandidatecomponentsstring defaultresourcepattern
scan class path candidate components basepackage package check annotated classes corresponding set autodetected bean definitions
clear local metadata cache any removing cached class metadata
register default filter component component this implicitly register annotations component component metaannotation including repository repository service service controller controller stereotype annotations also supports java ee 6s javaxannotationmanagedbean jsr330s javaxinjectnamed annotations available
determine whether given class candidate component based conditional annotations metadatareader asm classreader class whether class qualifies candidate component
determine whether given bean definition qualifies candidate the default implementation checks whether class interface dependent enclosing class can overridden subclasses beandefinition bean definition check whether bean definition qualifies candidate component
set resourceloader use resource locations typically resourcepatternresolver implementation default pathmatchingresourcepatternresolver also capable resource pattern resolving resourcepatternresolver interface orgspringframeworkcoreiosupportresourcepatternresolver orgspringframeworkcoreiosupportpathmatchingresourcepatternresolver
create classpathscanningcandidatecomponentprovider given environment usedefaultfilters whether register default filters component component repository repository service service controller controller stereotype annotations environment environment use registerdefaultfilters
return metadatareaderfactory used component provider
reset configured type filters usedefaultfilters whether reregister default filters component component repository repository service service controller controller stereotype annotations registerdefaultfilters
determine specified include typefilter supported index filter filter check whether index supports include filter 50 extractstereotypetypefilter
extract stereotype use specified compatible filter filter filter handle stereotype index matching filter 50 indexsupportsincludefiltertypefilter
set environment use resolving placeholders evaluating conditional conditionalannotated component classes the default standardenvironment environment environment use
check whether given annotation stereotype allowed suggest component name annotation value annotationtype name annotation class check metaannotationtypes names metaannotations given annotation attributes map attributes given annotation whether annotation qualifies stereotype component name
derive bean name one annotations class annotateddef annotationaware bean definition bean name null none found
derive default bean name given bean definition the default implementation simply builds decapitalized version short class name eg mypackagemyjdbcdao myjdbcdao note inner classes thus names form outerclassnameinnerclassname period name may issue autowiring name definition bean definition build bean name default bean name never null
read particular configurationclass registering bean definitions class bean methods
register configuration class bean definition
read configurationmodel registering bean definitions registry based contents
read given beanmethod registering bean definitions beandefinitionregistry based contents
create new configurationclassbeandefinitionreader instance used populate given beandefinitionregistry
create new configurationclass given name metadatareader reader used parse underlying class beanname must null configurationclassconfigurationclassclass configurationclass
create new configurationclass representing class imported using import annotation automatically processed nested configuration class if imported true clazz underlying class represent importedby configuration class importing one or null 311
create new configurationclass given name metadata metadata underlying class represent beanname name configuration class bean configurationclassconfigurationclassclass configurationclass
create new configurationclass given name clazz underlying class represent beanname name configuration class bean configurationclassconfigurationclassclass configurationclass
create new configurationclass representing class imported using import annotation automatically processed nested configuration class if importedby null metadatareader reader used parse underlying class importedby configuration class importing one null 311
create new scannedgenericbeandefinition class given metadatareader describes metadatareader metadatareader scanned target class
register escalate configure standard auto proxy creator apc given registry works finding nearest annotation declared importing configuration class mode proxytargetclass attributes mode set proxy apc registered proxytargetclass set true apc forced use subclass cglib proxying several enable annotations expose mode proxytargetclass attributes important note capabilities end sharing plain aopconfigutilsautoproxycreatorbeanname single apc reason implementation doesnt care exactly annotation finds long exposes right mode proxytargetclass attributes apc registered configured same
create new annotatedbeandefinitionreader given registry using given environment registry beanfactory load bean definitions into form beandefinitionregistry environment environment use evaluating bean definition profiles 31
register bean given bean class deriving metadata classdeclared annotations annotatedclass class bean qualifiers specific qualifier annotations consider addition qualifiers bean class level
register bean given bean class deriving metadata classdeclared annotations annotatedclass class bean instancesupplier callback creating instance bean may null name explicit name bean qualifiers specific qualifier annotations consider any addition qualifiers bean class level definitioncustomizers one callbacks customizing factorys beandefinition eg setting lazyinit primary flag 50
register one annotated classes processed calls register idempotent adding annotated class additional effect annotatedclasses one annotated classes eg configuration configuration classes
set scopemetadataresolver use detected bean classes the default annotationscopemetadataresolver
register bean given bean class deriving metadata classdeclared annotations annotatedclass class bean name explicit name bean qualifiers specific qualifier annotations consider addition qualifiers bean class level
get environment given registry possible otherwise return new standardenvironment
specify factory objects injected resource webserviceref ejb annotated fields setter methods for mappedname attributes point directly jndi factory also used alwaysusejndilookup set true order enforce jndi lookups even name attributes default names the default orgspringframeworkjndisupportsimplejndibeanfactory jndi lookup behavior equivalent standard java ee 5 resource injection setresourcefactory setalwaysusejndilookup
specify factory objects injected resource webserviceref ejb annotated fields setter methods for name attributes default names the default beanfactory postprocessor defined in any looking resource names spring bean names specify resource factory explicitly programmatic usage postprocessor specifying springs orgspringframeworkjndisupportsimplejndibeanfactory leads jndi lookup behavior equivalent standard java ee 5 resource injection even name attributes default names behavior alwaysusejndilookup flag enables setalwaysusejndilookup
build dependencydescriptor underlying fieldmethod
obtain lazily resolving resource proxy given name type delegating getresource demand method call comes in element descriptor annotated fieldmethod requestingbeanname name requesting bean resource object never null 42 getresource lazy
obtain resource object given name type autowiring based given factory factory factory autowire element descriptor annotated fieldmethod requestingbeanname name requesting bean resource object never null nosuchbeandefinitionexception corresponding target resource found
ignore given resource type resolving resource annotations by default javaxxmlwswebservicecontext interface ignored since resolved jaxws runtime resourcetype resource type ignore
obtain resource object given name type element descriptor annotated fieldmethod requestingbeanname name requesting bean resource object never null nosuchbeandefinitionexception corresponding target resource found
create new commonannotationbeanpostprocessor init destroy annotation types set javaxannotationpostconstruct javaxannotationpredestroy respectively
uses enhancer generate subclass superclass ensuring callbacks registered new subclass
check whether given method corresponds containers currently invoked factory method compares method name parameter types order work around potential problem covariant return types currently known happen groovy classes
enhance bean bean method check supplied beanfactory existence bean object throwable catchall exception may thrown invoking super implementation proxied method ie actual bean method
loads specified class generates cglib subclass equipped containeraware callbacks capable respecting scoping bean semantics enhanced subclass
create subclass proxy intercepts calls getobject delegating current beanfactory instead creating new instance proxies created calling factorybean within bean method allowing proper scoping semantics even working factorybean instance directly factorybean instance fetched container via proxied aligned way xml configuration works
creates new cglib enhancer instance
invoke beanclassloaderaware beanfactoryaware environmentaware resourceloaderaware contracts implemented given object
enable aspectj weaving given loadtimeweaver weavertouse loadtimeweaver apply or null default weaver beanclassloader class loader create default weaver if necessary
add supplied attribute supplied name attributename name model attribute never null attributevalue model attribute value can null
copy attributes supplied collection map using attribute name generation element addattributeobject
add supplied attribute map using orgspringframeworkcoreconventionsgetvariablename generated name note empty collection collections added model using method cannot correctly determine true convention name view code check null rather empty collections already done jstl tags attributevalue model attribute value never null
copy attributes supplied map map existing objects name taking precedence ie getting replaced
copy attributes supplied map map addattributestring object
copy attributes supplied map map existing objects name taking precedence ie getting replaced
copy attributes supplied map map addattributestring object
add supplied attribute supplied name attributename name model attribute never null attributevalue model attribute value ignored null removing existing entry any
copy attributes supplied collection map using attribute name generation element addattributeobject
add supplied attribute map using orgspringframeworkcoreconventionsgetvariablename generated name note empty collection collections added model using method cannot correctly determine true convention name view code check null rather empty collections already done jstl tags attributevalue model attribute value never null
initialize messagesource given theme one corresponding parent themesource theme theme reinitialize
create messagesource given basename used messagesource corresponding theme default implementation creates resourcebundlemessagesource given basename subclass could create specifically configured reloadableresourcebundlemessagesource example basename basename create messagesource messagesource orgspringframeworkcontextsupportresourcebundlemessagesource orgspringframeworkcontextsupportreloadableresourcebundlemessagesource
implementation returns simpletheme instance holding resourcebundlebased messagesource whose basename corresponds given theme name prefixed configured basenameprefix simpletheme instances cached per theme name use reloadable messagesource themes reflect changes underlying files setbasenameprefix createmessagesource
create simpletheme name name theme messagesource messagesource resolves theme messages
initialize themesource given application context autodetecting bean name themesource bean found default empty themesource used context current application context initialized theme source will never null themesourcebeanname
convenience method return named logger this variant dispatches straight getlogclass clazz containing class log name derived favor getlogclass
method exists compatibility unusual commons logging api usage like eg logfactorygetfactorygetinstanceclassstring getinstanceclass getinstancestring favor getlogclass getlogstring
convenience method return named logger this variant dispatches straight getlogstring name logical name log instance returned favor getlogstring
create actual log instance selected api name logger name
convenience method get vendor specific error code root cause instance jmsexception string specifying vendorspecific error code root cause instance jmsexception null
return detail message including message linked exception one javaxjmsjmsexceptiongetlinkedexception
create new jmsresourceholder given jms resources connection jms connection session jms session
create new jmsresourceholder given jms session session jms session
create new jmsresourceholder given jms resources connectionfactory jms connectionfactory resource holder associated may null connection jms connection session jms session
delegate call straight target connectionfactory
implementation delegates createtopicconnectionusername password method target topicconnectionfactory passing specified user credentials specified username empty simply delegate standard createtopicconnection method target connectionfactory username username use password password use connection javaxjmstopicconnectionfactorycreatetopicconnectionstring string javaxjmstopicconnectionfactorycreatetopicconnection
implementation delegates createconnectionusername password method target connectionfactory passing specified user credentials specified username empty simply delegate standard createconnection method target connectionfactory username username use password password use connection javaxjmsconnectionfactorycreateconnectionstring string javaxjmsconnectionfactorycreateconnection
implementation delegates createqueueconnectionusername password method target queueconnectionfactory passing specified user credentials specified username empty simply delegate standard createqueueconnection method target connectionfactory username username use password password use connection javaxjmsqueueconnectionfactorycreatequeueconnectionstring string javaxjmsqueueconnectionfactorycreatequeueconnection
delegate call straight target queueconnectionfactory
delegate call straight target topicconnectionfactory
set target connectionfactory connectionfactory delegate to
determine whether currently threadbound credentials using available falling back statically specified username password ie values bean properties otherwise docreateconnection
determine whether currently threadbound credentials using available falling back statically specified username password ie values bean properties else docreatetopicconnection
determine whether currently threadbound credentials using available falling back statically specified username password ie values bean properties else docreatequeueconnection
add exceptionlistener chained delegate list
return target connectionfactory connectionfactory delegates to
prepare given connection exposed the default implementation applies exceptionlistener client id overridden subclasses con connection prepare jmsexception thrown jms api methods setexceptionlistener setreconnectonexception
return jms exceptionlistener implementation registered single connection created factory any
create new singleconnectionfactory always returns given connection targetconnection single connection
close underlying shared connection provider connectionfactory needs care proper shutdown as bean implements disposablebean bean factory automatically invoke destruction cached singletons resetconnection
create jms connection via templates connectionfactory new jms connection javaxjmsjmsexception thrown jms api methods
create default session connectionfactory adapting jms 102 style queuetopic mode necessary con jms connection operate mode session acknowledgement mode sessiontransacted one common modes newly created session jmsexception thrown jms api
return jms client id single connection created exposed connectionfactory any
reset underlying shared connection reinitialized next access closeconnection
wrap given connection proxy delegates every method call suppresses close calls useful allowing application code handle special framework connection like ordinary connection jms connectionfactory target original connection wrap wrapped connection
close given connection con connection close
initialize underlying shared connection closes reinitializes connection underlying connection present already javaxjmsjmsexception thrown jms api methods prepareconnection
obtain initialized shared connection connection never null javaxjmsjmsexception thrown jms api methods initconnection
return target connectionfactory used lazily create single connection any
create new singleconnectionfactory always returns single connection lazily create via given target connectionfactory targetconnectionfactory target connectionfactory
exception listener callback renews underlying single connection resetconnection
template method obtaining potentially cached session the default implementation always returns null subclasses may override exposing specific session handles possibly delegating createsession creation raw session objects get wrapped returned here con jms connection operate mode session acknowledgement mode sessiontransacted one common modes session use null indicate creation raw standard session jmsexception thrown jms api
make sure connection connectionfactory set
release given connection stopping if necessary eventually closing it checks smartconnectionfactoryshouldstop available essentially sophisticated version orgspringframeworkjmssupportjmsutilscloseconnection con connection release if null call ignored cf connectionfactory connection obtained may null started whether connection might started application smartconnectionfactoryshouldstop orgspringframeworkjmssupportjmsutilscloseconnection
obtain jms session synchronized current transaction any connectionfactory jms connectionfactory bind used transactionsynchronizationmanager key resourcefactory resourcefactory use extracting creating jms resources startconnection whether underlying jms connection approach started order allow receiving messages note reused connection may already started before even flag false transactional session null none found jmsexception case jms failure
obtain jms session synchronized current transaction any cf connectionfactory obtain session existingcon existing jms connection obtain session may null synchedlocaltransactionallowed whether allow local jms transaction synchronized springmanaged transaction where main transaction might jdbcbased one specific datasource example jms transaction committing right main transaction allowed given connectionfactory needs handle transaction enlistment underneath covers transactional session null none found jmsexception case jms failure
obtain jms topicsession synchronized current transaction any mainly intended use jms 102 api cf connectionfactory obtain session existingcon existing jms connection obtain session may null synchedlocaltransactionallowed whether allow local jms transaction synchronized springmanaged transaction where main transaction might jdbcbased one specific datasource example jms transaction committing right main transaction allowed given connectionfactory needs handle transaction enlistment underneath covers transactional session null none found jmsexception case jms failure
obtain jms session synchronized current transaction any this dogettransactionalsession variant always starts underlying jms connection assuming session used receiving messages connectionfactory jms connectionfactory bind used transactionsynchronizationmanager key resourcefactory resourcefactory use extracting creating jms resources transactional session null none found jmsexception case jms failure dogettransactionalsessionjavaxjmsconnectionfactory resourcefactory boolean
obtain jms queuesession synchronized current transaction any mainly intended use jms 102 api cf connectionfactory obtain session existingcon existing jms connection obtain session may null synchedlocaltransactionallowed whether allow local jms transaction synchronized springmanaged transaction where main transaction might jdbcbased one specific datasource example jms transaction committing right main transaction allowed given connectionfactory needs handle transaction enlistment underneath covers transactional session null none found jmsexception case jms failure
return innermost target session given session given session proxy unwrapped nonproxy session found otherwise passedin session returned asis session session proxy unwrap innermost target session passedin one proxy sessionproxygettargetsession
determine whether given jms session transactional is bound current thread springs transaction facilities session jms session check cf jms connectionfactory session originated whether session transactional
obtain connectionfactory actual use connectionfactory never null illegalstateexception case connectionfactory set 50
create new jmstransactionmanager given connectionfactory connectionfactory connectionfactory obtain connections
return jms connectionfactory instance manage transactions for
set jms connectionfactory instance manage transactions for
make sure connectionfactory set
set target connectionfactory connectionfactory delegate to
wrap given connection proxy delegates every method call handles session lookup transactionaware fashion target original connection wrap wrapped connection
return target connectionfactory connectionfactory delegate to
specify desired size jms session cache per jms session type this cache size maximum limit number cached sessions per session acknowledgement type auto client dupsok transacted consequence actual number cached sessions may four times high specified value unlikely case mixing matching different acknowledgement types default 1 caching single session recreating ones demand specify number like 10 youd like raise number cached sessions said 1 may sufficient lowconcurrency scenarios setcacheproducers
create new cachingconnectionfactory given target connectionfactory targetconnectionfactory target connectionfactory
resets session cache well
wrap given session proxy delegates every method call adapts close calls useful allowing application code handle special framework session like ordinary session target original session wrap sessionlist list cached sessions given session belongs wrapped session
create new cachingconnectionfactory beanstyle usage settargetconnectionfactory
checks cached session given mode
return default response destination any
set beanfactory use resolve expressions may null
return jmslistenerendpointregistry instance registrar may null
beanfactory needs available conjunction setcontainerfactorybeanname
register new jmslistenerendpoint alongside jmslistenercontainerfactory use create underlying container the factory may null default factory used endpoint
return custom messagehandlermethodfactory use any
return jms message selector expression any
return name durable subscription any
return description endpoint available subclasses inclusion tostring result
return name destination endpoint
return concurrency listener any
return messagelistenercontainer specified id null container exists id id container container null container id exists jmslistenerendpointgetid getlistenercontainerids
create start new container using specified factory
create message listener container given jmslistenerendpoint this create necessary infrastructure honor endpoint regards configuration the startimmediately flag determines container started immediately endpoint endpoint add factory listener factory use startimmediately start container immediately necessary getlistenercontainers getlistenercontainerstring
start specified messagelistenercontainer started startup start called explicitly startup messagelistenercontainerisautostartup
return messagelistener invoke message matching endpoint received
return jmsheaderscorrelationid correlationid jmsheaderscorrelationid
return jmsheadersdeliverymode delivery mode jmsheadersdeliverymode
return jmsheadersmessageid message id jmsheadersmessageid
return jmsheadersreplyto reply to jmsheadersreplyto
return jmsheaderstype type jmsheaderstype
return jmsheadersdestination destination jmsheadersdestination
return message jmsheadersexpiration expiration jmsheadersexpiration
return jmsheaderspriority priority jmsheaderspriority
return jmsheaderstimestamp timestamp jmsheaderstimestamp
return jmsheadersredelivered redelivered flag jmsheadersredelivered
build descriptive exception message given jmsexception incorporating linked exceptions message appropriate ex jmsexception build message descriptive message string javaxjmsjmsexceptiongetlinkedexception
close given jms queuebrowser ignore thrown exception useful typical finally blocks manual jms code browser jms queuebrowser close may null
close given jms queuerequestor ignore thrown exception useful typical finally blocks manual jms code requestor jms queuerequestor close may null
convert specified checked javaxjmsjmsexception jmsexception spring runtime orgspringframeworkjmsjmsexception jmsexception equivalent ex original checked jmsexception convert spring runtime jmsexception wrapping given exception
close given jms session ignore thrown exception useful typical finally blocks manual jms code session jms session close may null
commit session within jta transaction session jms session commit jmsexception committing failed
close given jms messageproducer ignore thrown exception useful typical finally blocks manual jms code producer jms messageproducer close may null
close given jms connection ignore thrown exception useful typical finally blocks manual jms code con jms connection close may null stop whether call stop closing
close given jms messageconsumer ignore thrown exception useful typical finally blocks manual jms code consumer jms messageconsumer close may null
rollback session within jta transaction session jms session rollback jmsexception committing failed
create new instance specified settings
add inbound prefix necessary convert jmscompliant contenttype messageheaderscontenttype contenttypeproperty
add outbound prefix necessary convert messageheaderscontenttype contenttype jms compliance contenttypeproperty
return connectionfactory accessor uses obtaining jms connection connections
obtain connectionfactory actual use connectionfactory never null illegalstateexception case connectionfactory set 50
create instance specified payload converter header mapper
create jms message specified payload conversionhint conversion hint extra object passed messageconverter eg associated methodparameter may null 43 messageconvertertomessageobject session
unmarshal given textmessage object message message unmarshaller unmarshaller use unmarshalled object jmsexception thrown jms methods ioexception case io errors xmlmappingexception case oxm mapping errors unmarshallerunmarshalsource
construct new marshallingmessageconverter given marshaller unmarshaller marshaller marshaller use unmarshaller unmarshaller use
template method allows custom message unmarshalling invoked frommessagemessage invoked message textmessage bytesmessage the default implementation throws illegalargumentexception message message unmarshaller unmarshaller use unmarshalled object jmsexception thrown jms methods ioexception case io errors xmlmappingexception case oxm mapping errors
construct new marshallingmessageconverter given marshaller set if given marshaller also implements unmarshaller interface used marshalling unmarshalling otherwise exception thrown note marshaller implementations spring also implement unmarshaller interface safely use constructor marshaller object used marshaller unmarshaller illegalargumentexception marshaller implement unmarshaller interface well
implementation unmarshals given message object unmarshalfromtextmessage unmarshalfrombytesmessage
implementation marshals given object javaxjmstextmessage javaxjmsbytesmessage desired message type defined setting settargettype marshalto property marshaltotextmessage marshaltobytesmessage
unmarshal given bytesmessage object message message unmarshaller unmarshaller use unmarshalled object jmsexception thrown jms methods ioexception case io errors xmlmappingexception case oxm mapping errors unmarshallerunmarshalsource
marshal given object textmessage object object marshalled session current jms session marshaller marshaller use resulting message jmsexception thrown jms methods ioexception case io errors xmlmappingexception case oxm mapping errors sessioncreatetextmessage marshallermarshalobject result
template method allows custom message marshalling invoked settargettype messagetypetext messagetypebytes the default implementation throws illegalargumentexception object object marshal session jms session marshaller marshaller use targettype target message type other text bytes resulting message jmsexception thrown jms methods ioexception case io errors xmlmappingexception case oxm mapping errors
set unmarshaller used message converter
specify whether tomessageobject session marshal bytesmessage textmessage the default messagetypebytes ie converter marshals bytesmessage note default version converter supports messagetypebytes messagetypetext only messagetypebytes messagetypetext
set marshaller used message converter
marshal given object bytesmessage object object marshalled session current jms session marshaller marshaller use resulting message jmsexception thrown jms methods ioexception case io errors xmlmappingexception case oxm mapping errors sessioncreatebytesmessage marshallermarshalobject result
map given object bytesmessage object object mapped session current jms session objectwriter writer use resulting message jmsexception thrown jms methods ioexception case io errors 43 sessioncreatebytesmessage
determine jackson serialization view based given conversion hint conversionhint conversion hint object passed converter current conversion attempt serialization view class null none
template method allows custom message mapping invoked settargettype messagetypetext messagetypebytes the default implementation throws illegalargumentexception message input message targetjavatype target type message converted object jmsexception thrown jms ioexception case io errors
determine jackson javatype given jms message typically parsing type id message property the default implementation parses configured type id property name consults configured type id mapping overridden different strategy eg heuristics based message origin message jms message set type id jmsexception thrown jms methods settypeidonmessageobject javaxjmsmessage settypeidpropertynamestring settypeidmappingsjavautilmap
convert java object jms message using specified json view supplied session create message object object object convert session session use creating jms message jsonview view use filter content jms message javaxjmsjmsexception thrown jms api methods messageconversionexception case conversion failure 43
specify objectmapper use instead using default
specify whether tomessageobject session marshal bytesmessage textmessage the default messagetypebytes ie converter marshals bytesmessage note default version converter supports messagetypebytes messagetypetext only messagetypebytes messagetypetext
convert textmessage java object specified type message input message targetjavatype target type message converted object jmsexception thrown jms ioexception case io errors
template method allows custom message mapping invoked settargettype messagetypetext messagetypebytes the default implementation throws illegalargumentexception object object marshal session jms session objectwriter writer use targettype target message type other text bytes resulting message jmsexception thrown jms methods ioexception case io errors
convert bytesmessage java object specified type message input message targetjavatype target type message converted object jmsexception thrown jms ioexception case io errors
convenience method dispatch converters individual message types
map given object textmessage object object mapped session current jms session objectwriter writer use resulting message jmsexception thrown jms methods ioexception case io errors 43 sessioncreatebytesmessage
set type id given payload object given jms message the default implementation consults configured type id mapping sets resulting value either mapped id raw java class name configured type id message property object payload object set type id message jms message set type id jmsexception thrown jms methods getjavatypeformessagejavaxjmsmessage settypeidpropertynamestring settypeidmappingsjavautilmap
specify mappings type ids java classes desired allows synthetic ids type id message property instead transferring java class names default custom mappings ie transferring raw java class names typeidmappings map type id values keys java classes values
implementation converts textmessage back string bytemessage back byte array mapmessage back map objectmessage back serializable object returns plain message object case unknown message type extractstringfrommessage extractbytearrayfrommessage extractmapfrommessage extractserializablefrommessage
implementation creates textmessage string bytesmessage byte array mapmessage map objectmessage serializable object createmessageforstring createmessageforbytearray createmessageformap createmessageforserializable
extract map given mapmessage message message convert resulting map jmsexception thrown jms methods
extract byte array given bytesmessage message message convert resulting byte array jmsexception thrown jms methods
create jms mapmessage given map map map convert session current jms session resulting message jmsexception thrown jms methods javaxjmssessioncreatemapmessage
create jms bytesmessage given byte array bytes byte array convert session current jms session resulting message jmsexception thrown jms methods javaxjmssessioncreatebytesmessage
resolve specified destination name dynamic destination session current jms session destinationname name destination pubsubdomain true domain pubsub false p2p jms destination either topic queue javaxjmsjmsexception resolution failed resolvetopicjavaxjmssession string resolvequeuejavaxjmssession string
validate given destination object checking whether matches expected type destination destination object validate destinationname name destination pubsubdomain true topic expected false case queue
create new instance beanfactorydestinationresolver class use constructor redundant object created spring ioc container supplied beanfactory replaced beanfactory creates cf beanfactoryaware contract use constructor using class outside context spring ioc container beanfactory bean factory used lookup javaxjmsdestination destination
set destinationresolver used resolve javaxjmsdestination references accessor the default resolver dynamicdestinationresolver specify jndidestinationresolver resolving destination names jndi locations orgspringframeworkjmssupportdestinationdynamicdestinationresolver orgspringframeworkjmssupportdestinationjndidestinationresolver
actually receive message given consumer consumer jms messageconsumer receive timeout receive timeout a negative value indicates nowait receive 0 indicates indefinite wait attempt jms message received null none jmsexception thrown jms api methods 43 receivetimeoutnowait receivetimeoutindefinitewait
send given remoteinvocationresult jms message originator requestmessage current request message session jms session use result remoteinvocationresult object javaxjmsjmsexception thrown trying send message
create invocation result response message the default implementation creates jms objectmessage given remoteinvocationresult object sets responses correlation id request messages correlation id any otherwise request message id request original request message session jms session use result invocation result message response send javaxjmsjmsexception creating message failed
callback invoked readremoteinvocation encounters invalid request message the default implementation either discards invalid message throws messageformatexception according ignoreinvalidrequests flag set true that is discard invalid messages default requestmessage invalid request message remoteinvocation expose invalid request typically null case invalid message simply ignored javaxjmsjmsexception case invalid request supposed lead exception instead ignoring it readremoteinvocation setignoreinvalidrequests
read remoteinvocation given jms message requestmessage current request message remoteinvocation object or null case invalid message simply ignored javaxjmsjmsexception case message access failure
set destinationresolver used resolve queue references accessor the default resolver dynamicdestinationresolver specify jndidestinationresolver resolving destination names jndi locations orgspringframeworkjmssupportdestinationdynamicdestinationresolver orgspringframeworkjmssupportdestinationjndidestinationresolver
recreate invocation result contained given remoteinvocationresult object the default implementation calls default recreate method can overridden subclasses provide custom recreation potentially processing returned result object result remoteinvocationresult recreate return value invocation result successful return throwable invocation result exception orgspringframeworkremotingsupportremoteinvocationresultrecreate
extract invocation result response message the default implementation expects jms javaxjmsobjectmessage carrying remoteinvocationresult object invalid response message encountered oninvalidresponse callback gets invoked responsemessage response message invocation result jmsexception thrown jms exception occurs oninvalidresponse
execute given remote invocation sending invoker request message accessors target queue waiting corresponding response invocation remoteinvocation execute remoteinvocationresult object jmsexception case jms failure doexecuterequest
actually execute given request sending invoker request message specified target queue waiting corresponding response the default implementation based standard jms sendreceive using javaxjmstemporaryqueue receiving response session jms session use queue resolved target queue send requestmessage jms message send remoteinvocationresult object jmsexception case jms failure
create new jms connection jms invoker
set remoteinvocationfactory use accessor default defaultremoteinvocationfactory a custom invocation factory add context information invocation example user credentials
resolve accessors target queue session current jms session resolved target queue jmsexception resolution failed
return queueconnectionfactory use obtaining jms queueconnections
set interface proxy must implement serviceinterface interface proxy must implement illegalargumentexception supplied serviceinterface interface type
return message converter template
send given jms message session jms session operate destination jms destination send messagecreator callback create jms message jmsexception thrown jms api methods
set qossettings use sending message settings deliverymode priority timetolive settings use 50 setexplicitqosenabledboolean setdeliverymodeint setpriorityint settimetolivelong
variant executesessioncallback boolean explicitly creates nontransactional session given sessioncallback participate existing transaction
return destination name used sendreceive operations destination parameter
execute action specified given action object within jms session generalized version executesessioncallback allowing jms connection started fly use executesessioncallback general case starting jms connection necessary receiving messages preferably achieved receive methods action callback object exposes session startconnection whether start connection result object working session jmsexception problem executesessioncallback receive
fetch appropriate connection given jmsresourceholder this implementation accepts jms 11 connection holder jmsresourceholder appropriate connection fetched holder null none found
return destination used sendreceive operations destination parameter
actually receive jms message session jms session operate consumer jms messageconsumer receive jms message received null none jmsexception thrown jms api methods
create jms messageproducer given session destination configuring disable message ids andor timestamps if necessary delegates docreateproducer creation raw jms messageproducer session jms session create queuebrowser queue jms queue create queuebrowser messageselector message selector consumer can null new jms queuebrowser jmsexception thrown jms api methods setmessageidenabled setmessagetimestampenabled
fetch appropriate session given jmsresourceholder this implementation accepts jms 11 session holder jmsresourceholder appropriate session fetched holder null none found
extract content given jms message message jms message convert can null content message null none
send request message given destination block reply received temporary queue created onthefly return response message null message jmsexception thrown jms api methods
check whether given session locally transacted is whether transaction managed listener containers session handling external transaction coordinator note sessions transacted flag already checked before method finding whether sessions transaction local externally coordinated session session check whether given session locally transacted issessiontransacted orgspringframeworkjmsconnectionconnectionfactoryutilsissessiontransactional
actually send given jms message producer jms messageproducer send message jms message send jmsexception thrown jms api methods
create jms messageproducer given session destination configuring disable message ids andor timestamps if necessary delegates docreateproducer creation raw jms messageproducer session jms session create messageproducer destination jms destination create messageproducer new jms messageproducer jmsexception thrown jms api methods setmessageidenabled setmessagetimestampenabled
create new jmstemplate given connectionfactory connectionfactory connectionfactory obtain connections
create jms messageconsumer given session destination this implementation uses jms 11 api session jms session create messageconsumer destination jms destination create messageconsumer messageselector message selector consumer can null new jms messageconsumer jmsexception thrown jms api methods
receive jms message session jms session operate destination jms destination receive messageselector message selector consumer can null jms message received null none jmsexception thrown jms api methods
set connectionfactory use underlying jmstemplate 412
return configured jmstemplate
return connectionfactory underlying jmstemplate uses 412
set messageconverter use convert message messaging javaxjmsmessage default messagingmessageconverter defined using simplemessageconverter convert payload message consider configuring messagingmessageconverter different messagingmessageconvertersetpayloadconvertermessageconverter payload converter advanced scenarios orgspringframeworkjmssupportconvertermessagingmessageconverter
return configured default destination name
create jmsmessagingtemplate instance jmstemplate use
return jmstemplate gateway
return jms connectionfactory used gateway
actually execute listener message received given consumer fetching requires resources invoking listener session jms session work consumer messageconsumer work status transactionstatus may null whether message received jmsexception thrown jms methods doexecutelistenerjavaxjmssession javaxjmsmessage
fetch appropriate connection given jmsresourceholder this implementation accepts jms 11 connection holder jmsresourceholder appropriate connection fetched holder null none found
fetch appropriate session given jmsresourceholder this implementation accepts jms 11 session holder jmsresourceholder appropriate session fetched holder null none found
implementation checks whether session externally synchronized case session locally transacted despite listener containers sessiontransacted flag set true orgspringframeworkjmsconnectionjmsresourceholder
return spring platformtransactionmanager use transactional wrapping message reception plus listener execution
create messageconsumer given jms session registering messagelistener specified listener session jms session work messageconsumer javaxjmsjmsexception thrown jms methods receiveandexecute
execute listener message received given consumer wrapping entire operation external transaction demanded session jms session work consumer messageconsumer work whether message received jmsexception thrown jms methods doreceiveandexecute
perform rollback handling rollback exceptions properly status object representing transaction ex thrown listener exception error
receive message given consumer consumer messageconsumer use message null none jmsexception thrown jms methods
process message received provider executes listener exposing current jms session threadbound resource if exposelistenersession true message received jms message session jms session operate executelistener setexposelistenersession
always use shared jms connection
reinitializes containers jms message consumers initialized already
specify concurrency limits via lowerupper string eg 510 simple upper limit string eg 10 this listener container always hold maximum number consumers setconcurrentconsumers since unable scale this property primarily supported configuration compatibility defaultmessagelistenercontainer local listener container generally use setconcurrentconsumers instead
registers listener container jms exceptionlistener shared connection
initialize jms sessions messageconsumers container jmsexception case setup failure
destroy registered jms sessions associated messageconsumers
creates specified number concurrent consumers form jms session plus associated messageconsumer createlistenerconsumer
jms exceptionlistener implementation invoked jms provider case connection failures reinitializes listener containers shared connection sessions consumers ex reported connection exception
specify number concurrent consumers create default 1 raising number concurrent consumers recommendable order scale consumption messages coming queue however note ordering guarantees lost multiple consumers registered general stick 1 consumer lowvolume queues do raise number concurrent consumers topic would lead concurrent consumption message hardly ever desirable
create messageconsumer given jms session registering messagelistener specified listener session jms session work messageconsumer jmsexception thrown jms methods executelistener
set message listener implementation register either standard jms messagelistener object spring sessionawaremessagelistener object note message listener may replaced runtime listener container picking new listener object immediately works eg defaultmessagelistenercontainer long cache level less cacheconsumer however considered advanced usage use care illegalargumentexception supplied listener messagelistener sessionawaremessagelistener javaxjmsmessagelistener sessionawaremessagelistener
execute specified listener committing rolling back transaction afterwards if necessary session jms session operate message received jms message jmsexception thrown jms api methods invokelistener commitifnecessary rollbackonexceptionifnecessary convertjmsaccessexception
return name destination receive messages from null configured destination string type cf setdestinationdestination actual destination
invoke specified listener either standard jms messagelistener preferably spring sessionawaremessagelistener session jms session operate message received jms message jmsexception thrown jms api methods setmessagelistener
return jms exceptionlistener notify case jmsexception thrown registered message listener invocation infrastructure any
set whether make subscription shared shared subscription name used specified subscriptionname property default false set true register shared subscription typically combination subscriptionname value unless message listener class name good enough subscription name note shared subscriptions may also durable flag and often will combined subscriptiondurable well only makes sense listening topic pubsub domain therefore method switches pubsubdomain flag well requires jms 20 compatible message broker 41 setsubscriptionname setsubscriptiondurable setpubsubdomain
set destination receive messages from alternatively specify destinationname dynamically resolved via orgspringframeworkjmssupportdestinationdestinationresolver note destination may replaced runtime listener container picking new destination immediately works eg defaultmessagelistenercontainer long cache level less cacheconsumer however considered advanced usage use care setdestinationnamestring
return name durable subscription create any
perform rollback appropriate session jms session rollback javaxjmsjmsexception case rollback error
invoke registered errorhandler any log warn level otherwise ex uncaught error arose jms processing seterrorhandler
handle given exception arose listener execution the default implementation logs exception warn level propagating jms provider assuming handling acknowledgement andor transactions done listener container overridden subclasses ex exception handle
return descriptive string containers jms destination never null
determine default subscription name given message listener messagelistener message listener object check default subscription name subscriptionnameprovider
set name durable subscription create method switches pubsub domain mode activates subscription durability well the durable subscription name needs unique within clients jms client id default class name specified message listener note 1 concurrent consumer which default message listener container allowed durable subscription except shared durable subscription which requires jms 20 setpubsubdomain setsubscriptiondurable setsubscriptionshared setclientid setmessagelistener
return errorhandler invoked case uncaught exceptions thrown processing message 41
return message listener object register
return destination receive messages from null configured destination actual destination type cf setdestinationnamestring destination string
perform commit message acknowledgement appropriate session jms session commit message message acknowledge javaxjmsjmsexception case commit failure
execute specified listener committing rolling back transaction afterwards if necessary session jms session operate message received jms message invokelistener commitifnecessary rollbackonexceptionifnecessary handlelistenerexception
check given message listener throwing exception correspond supported listener type by default standard jms messagelistener object spring sessionawaremessagelistener object accepted messagelistener message listener object check illegalargumentexception supplied listener messagelistener sessionawaremessagelistener javaxjmsmessagelistener sessionawaremessagelistener
return name subscription create any 41
set whether make subscription durable durable subscription name used specified subscriptionname property default false set true register durable subscription typically combination subscriptionname value unless message listener class name good enough subscription name only makes sense listening topic pubsub domain therefore method switches pubsubdomain flag well setsubscriptionname setpubsubdomain
perform rollback handling rollback exceptions properly session jms session rollback ex thrown application exception error javaxjmsjmsexception case rollback error
create jms messageconsumer given session destination this implementation uses jms 11 api session jms session create messageconsumer destination jms destination create messageconsumer new jms messageconsumer javaxjmsjmsexception thrown jms api methods
return jms message selector expression or null none
return whether publishsubscribe domain javaxjmstopic topics used replies otherwise pointtopoint domain javaxjmsqueue queues used 42
invoke registered jms exceptionlistener any ex exception arose jms processing setexceptionlistener
invoke specified listener spring sessionawaremessagelistener exposing new jms session potentially transaction listener demanded listener spring sessionawaremessagelistener invoke session jms session operate message received jms message jmsexception thrown jms api methods sessionawaremessagelistener setexposelistenersession
return whether container currently active is whether set shut yet
start shared connection any notify invoker tasks jmsexception thrown jms api methods startsharedconnection
refresh shared connection container holds called startup also infrastructure exception occurred invoker setup andor execution jmsexception thrown jms api methods
determine number currently paused tasks any
return bean name listener container assigned containing bean factory any
calls shutdown beanfactory destroys container instance shutdown
log task rejected dorescheduletask the default implementation simply logs corresponding message debug level task rejected task object ex exception thrown dorescheduletask
establish shared connection container the default implementation delegates createsharedconnection one immediate attempt throws exception fails overridden recovery process place retrying connection successfully established jmsexception thrown jms api methods
stop container jmsexception stopping failed dostop
prepare given connection registered shared connection container the default implementation sets specified client id any subclasses override apply settings connection connection prepare jmsexception preparation efforts failed getclientid
take given task object reschedule it either immediately container currently running later container restarted if container already shut down task get rescheduled all task task object reschedule whether task rescheduled either immediately restart container dorescheduletask
return jms client id shared connection created used container any
initialize container creates jms connection starts javaxjmsconnection if setautostartupboolean autostartup hasnt turned off calls doinitialize orgspringframeworkjmsjmsexception startup failed
return shared jms connection maintained container available initialization shared connection never null illegalstateexception container maintain shared connection connection hasnt initialized yet sharedconnectionenabled
start container jmsexception starting failed dostart
return phase container started stopped
delegates validateconfiguration initialize
determine whether container currently running is whether started stopped yet start stop runningallowed
reschedule given task object immediately to implemented subclasses ever call rescheduletaskifnecessary implementation throws unsupportedoperationexception task task object reschedule rescheduletaskifnecessary
create shared connection container the default implementation creates standard connection prepares preparesharedconnection prepared connection jmsexception creation failed
notify invoker tasks stop shared connection any jmsexception thrown jms api methods stopsharedconnection
start shared connection jmsexception thrown jms api methods javaxjmsconnectionstart
try resume paused tasks tasks rescheduling failed simply remain paused mode
stop shared connection jmsexception thrown jms api methods javaxjmsconnectionstart
stop shared connection call doshutdown close container jmsexception shutdown failed
destroy registered jms sessions associated messageconsumers
apply backoff time once regular scenario backoff applied failed recover broker additional wait period avoids burst retry scenario broker actually something else failing ie listener specific
implementations proceeds even exception thrown connectionstart relying listeners perform appropriate recovery
return concurrentconsumer setting this returns currently configured concurrentconsumers value number currently scheduledactive consumers might differ getscheduledconsumercount getactiveconsumercount
create default taskexecutor called explicit taskexecutor specified the default implementation builds orgspringframeworkcoretasksimpleasynctaskexecutor specified bean name or class name bean name specified thread name prefix orgspringframeworkcoretasksimpleasynctaskexecutorsimpleasynctaskexecutorstring
determine whether current invoker rescheduled given might received message while idletaskexecutioncount number idle executions invoker task already accumulated in row
apply next backoff time using specified backoffexecution return true backoff period applied new attempt recover made false attempt made 41
specify level caching listener container allowed apply form name corresponding constant eg cacheconnection setcachelevel
creates specified number concurrent consumers form jms session plus associated messageconsumer running separate thread schedulenewinvoker settaskexecutor
overridden reset stop callback any
return maxconcurrentconsumer setting this returns currently configured maxconcurrentconsumers value number currently scheduledactive consumers might differ getscheduledconsumercount getactiveconsumercount
handle given exception arose setup listener called every exception every concurrent listener the default implementation logs exception warn level recovered yet debug level already recovered overridden subclasses ex exception handle alreadyrecovered whether previously executing listener already recovered present listener setup failure this usually indicates followup failure ignored debug log purposes recoverafterlistenersetupfailure
return maximum number messages process one task
return whether least one consumer entered fixed registration target destination particularly interesting pubsub case might important actual consumer registered guaranteed miss messages published this method may polled start call asynchronous registration consumers happened method start returning true provided listener container ever actually establishes fixed registration keep returning true shutdown since container hold least one consumer registration thereafter note listener container bound fixed registration first place may also keep recreating consumers every invoker execution particularly depends setcachelevel cache level setting cacheconsumer lead fixed registration
return limit number idle consumers
schedule new invoker increasing total number scheduled invokers listener container specified maxconcurrentconsumers limit reached yet specified idleconsumerlimit reached either called message received order scale processing message invoker originally received it settaskexecutor getmaxconcurrentconsumers getidleconsumerlimit
refresh jms destination listener container operates on called listener setup failure assuming cached destination object might become invalid a typical case weblogic jms the default implementation removes destination destinationresolvers cache case cachingdestinationresolver setdestinationname orgspringframeworkjmssupportdestinationcachingdestinationresolver
reexecutes given task via listener containers taskexecutor settaskexecutor
determine whether listener container currently one idle instance among scheduled invokers
return limit idle executions consumer task
marks affected invoker idle
use shared jms connection depending cachelevel setting setcachelevel cacheconnection
refresh underlying connection returning attempt successful called case shared connection well without shared connection either needs operate shared connection temporary connection gets established validation purposes the default implementation retries successfully established connection long message listener container running applies specified recovery interval retries setrecoveryinterval start stop
overridden accept failure initial setup leaving asynchronous invokers establish shared connection first access refreshconnectionuntilsuccessful
specify maximum number messages process one task concretely limits number message reception attempts per task includes receive iterations actually pick message hit timeout see setreceivetimeout receivetimeout property default unlimited 1 case standard taskexecutor reusing original invoker threads shutdown at expense limited dynamic scheduling in case schedulingtaskexecutor indicating preference shortlived tasks default 10 instead specify number 10 100 messages balance rather longlived rather shortlived tasks here longlived tasks avoid frequent thread context switches sticking thread way through shortlived tasks allow thread pools control scheduling hence thread pools usually prefer shortlived tasks this setting modified runtime example jmx settaskexecutor setreceivetimeout orgspringframeworkschedulingschedulingtaskexecutorprefersshortlivedtasks
specify concurrency limits via lowerupper string eg 510 simple upper limit string eg 10 the lower limit 1 case this listener container always hold minimum number consumers setconcurrentconsumers slowly scale maximum number consumers setmaxconcurrentconsumers case increasing load
return number currently active consumers this number always concurrentconsumers maxconcurrentconsumers might lower scheduledconsumercount in case consumers scheduled executing moment getconcurrentconsumers getmaxconcurrentconsumers getactiveconsumercount
implementations proceeds even exception thrown connectionstop relying listeners perform appropriate recovery restart
specify limit number consumers allowed idle given time this limit used schedulenewinvokerifappropriate method determine new invoker created increasing limit causes invokers created aggressively useful ramp number invokers faster the default 1 scheduling new invoker which likely idle initially none existing invokers currently idle
recover listener container listener failed set up example reestablishing underlying connection the default implementation delegates defaultmessagelistenercontainers recoverycapable refreshconnectionuntilsuccessful method try reestablish connection jms provider shared nonshared connection case refreshconnectionuntilsuccessful refreshdestination
specify maximum number concurrent consumers create default 1 if setting higher concurrentconsumers listener container dynamically schedule new consumers runtime provided enough incoming messages encountered load goes again number consumers reduced standard level concurrentconsumers again raising number concurrent consumers recommendable order scale consumption messages coming queue however note ordering guarantees lost multiple consumers registered general stick 1 consumer lowvolume queues do raise number concurrent consumers topic unless vendorspecific setup measures clearly allow it regular setup would lead concurrent consumption message hardly ever desirable this setting modified runtime example jmx setconcurrentconsumers
tries scheduling new invoker since know messages coming in schedulenewinvokerifappropriate
specify limit idle executions consumer task received message within execution limit reached task shut leave receiving executing tasks the default 1 closing idle resources early task didnt receive message applies dynamic scheduling only see setmaxconcurrentconsumers maxconcurrentconsumers setting minimum number consumers see setconcurrentconsumers concurrentconsumers kept around shutdown case within task execution number message reception attempts according maxmessagespertask setting wait incoming message according receivetimeout setting receive attempts given task return without message task considered idle respect received messages task may still rescheduled however reached specified idletaskexecutionlimit shut in case dynamic scaling raise limit encounter frequent scaling down limit higher idle consumer kept around longer avoiding restart consumer new load messages comes in alternatively specify higher maxmessagespertask andor receivetimeout value also lead idle consumers kept around longer time while also increasing average execution time scheduled task this setting modified runtime example jmx setmaxmessagespertask setreceivetimeout
specify number concurrent consumers create default 1 specifying higher value setting increase standard level scheduled concurrent consumers runtime effectively minimum number concurrent consumers scheduled given time static setting dynamic scaling consider specifying maxconcurrentconsumers setting instead raising number concurrent consumers recommendable order scale consumption messages coming queue however note ordering guarantees lost multiple consumers registered general stick 1 consumer lowvolume queues do raise number concurrent consumers topic unless vendorspecific setup measures clearly allow it regular setup would lead concurrent consumption message hardly ever desirable this setting modified runtime example jmx setmaxconcurrentconsumers
return number currently scheduled consumers this number always concurrentconsumers maxconcurrentconsumers might higher activeconsumercount in case consumers scheduled executing moment getconcurrentconsumers getmaxconcurrentconsumers getactiveconsumercount
stop listener container invoking specific callback listener processing actually stopped note stoprunnable calls before processing actually stopped override specified callback latest specified callback invoked if subsequent start call restarts listener container fully stopped callback get invoked all callback callback invoke listener processing fully stopped jmsexception stopping failed stop
schedule new invoker increasing total number scheduled invokers listener container
create new jmsresponse instance response content result destination destination
create jmsresponse targeting queue specified name
resolve destination use instance destinationresolver session used resolve destination runtime destinationresolver destination resolver use necessary session session use necessary destination use jmsexception destinationresolver failed resolve destination
create jmsresponse targeting topic specified name
create jmsresponse targeting specified destination
extract message body given jms message message jms message content message passed listener method argument messageconversionexception message could extracted
set jmsheadermapper implementation use map standard jms headers default simplejmsheadermapper used simplejmsheadermapper
return qossettings use sending response null defaults used 50
determine response destination given message the default implementation first checks jms replyto destination supplied request null returned null configured resolvedefaultresponsedestination default response destination returned null javaxjmsinvaliddestinationexception thrown request original incoming jms message response outgoing jms message sent session jms session operate response destination never null jmsexception thrown jms api methods javaxjmsinvaliddestinationexception destination determined setdefaultresponsedestination javaxjmsmessagegetjmsreplyto
handle given result object returned listener method sending response message back result result object handle never null request original request message session jms session operate may null replyfailureexception response message could sent buildmessage postprocessresponse getresponsedestination sendresponse
resolve default response destination jms destination using accessors destinationresolver case destination name located destination javaxjmsjmsexception resolution failed setdefaultresponsedestination setdefaultresponsequeuename setdefaultresponsetopicname setdestinationresolver
standard jms messagelistener entry point delegates message target listener method appropriate conversion message argument case exception handlelistenerexceptionthrowable method invoked note support sending response messages based result objects returned listener methods use sessionawaremessagelistener entry point typically spring message listener container handling result objects well message incoming jms message handlelistenerexception onmessagejavaxjmsmessage javaxjmssession
extract payload current message since deferred resolution payload custom converter may still return full message it case payload returned payload message
set destinationresolver used resolve response destination names adapter the default resolver dynamicdestinationresolver specify jndidestinationresolver resolving destination names jndi locations orgspringframeworkjmssupportdestinationdynamicdestinationresolver orgspringframeworkjmssupportdestinationjndidestinationresolver
postprocess given response message sent the default implementation sets responses correlation id request messages correlation id any otherwise request message id request original incoming jms message response outgoing jms message sent jmsexception thrown jms api methods javaxjmsmessagesetjmscorrelationid
return converter convert incoming jms messages listener method arguments objects returned listener methods back jms messages
build jms message sent response based given result object session jms session operate result content message returned listener method jms message never null jmsexception thrown jms api methods setmessageconverter
send given response message given destination response jms message send destination jms destination send session jms session operate jmsexception thrown jms api methods postprocessproducer javaxjmssessioncreateproducer javaxjmsmessageproducersend
invoke specified listener method methodname name listener method arguments message arguments passed result returned listener method jmsexception thrown jms api methods getlistenermethodname buildlistenerarguments
set target object delegate message listening to specified listener methods present target object if explicit delegate object specified listener methods expected present adapter instance is custom subclass adapter defining listener methods
create new messagelisteneradapter given delegate delegate delegate object
spring sessionawaremessagelistener entry point delegates message target listener method appropriate conversion message argument target method returns nonnull object wrap jms message send back message incoming jms message session jms session operate jmsexception thrown jms api methods
invoke handler wrapping exception listenerexecutionfailedexception dedicated error message
set destinationresolver use resolving destination names jca 15 activationspec destination property if specified destination names simply passed strings specified destination names resolved destination objects first note destinationresolver usually specified jmsactivationspecfactory see standardjmsactivationspecfactorysetdestinationresolver simply shortcut parameterizing default jmsactivationspecfactory replace custom jmsactivationspecfactory might set before standardjmsactivationspecfactorysetdestinationresolver
set jms messagelistener endpoint this shortcut configuring dedicated jmsmessageendpointfactory jmsmessageendpointfactorysetmessagelistener
set name message endpoint populated bean name automatically defined within springs bean factory
set factory concrete jca 15 activationspec objects creating jca activationspecs based setactivationspecconfig jmsactivationspecconfig objects this factory dependent concrete jms provider eg activemq default implementation simply guesses activationspec class name providers class name eg activemqresourceadapter activemqactivationspec package populates activationspec properties suggested jca 15 specification plus couple autodetected vendorspecific properties defaultjmsactivationspecfactory
return jmsactivationspecconfig object endpoint manager use activating listener return null none set
apply specified acknowledge mode activationspec object this implementation applies standard jca 15 acknowledge modes autoacknowledge dupsokacknowledge throws exception case clientacknowledge sessiontransacted requested bw beanwrapper wrapping activationspec object ackmode configured acknowledge mode according constants javaxjmssession javaxjmssessionautoacknowledge javaxjmssessiondupsokacknowledge javaxjmssessionclientacknowledge javaxjmssessionsessiontransacted
return destinationresolver use resolving destinations names
determine activationspec class given resourceadapter possible called activationspecclass set explicitly adapter resourceadapter check corresponding activationspec class null determinable setactivationspecclass
populate given applicationspec object settings defined given configuration object this implementation applies standard jms settings ignores maxconcurrency prefetchsize supported standard jca 15 bw beanwrapper wrapping activationspec object config configured object holding common jms settings
implementation guesses activationspec class name providers class name eg activemqresourceadapter activemqactivationspec package class named activationspecimpl package resourceadapter class
implementation supports springs extended maxconcurrency prefetchsize settings detecting corresponding activationspec properties maxsessionsmaxnumberofworks maxmessagespersessionsmaxmessages respectively following activemqs jorams naming conventions
implementation maps sessiontransacted onto activationspec property named useramanagedtransaction available following activemqs naming conventions
return jms messagelistener endpoint
creates concrete jms message endpoint internal factory
specify concurrency limits via lowerupper string eg 510 simple upper limit string eg 10 jca listener containers always scale zero given upper limit specified lower limit effectively ignored this property primarily supported configuration compatibility orgspringframeworkjmslistenerdefaultmessagelistenercontainer activation config generally use setmaxconcurrency instead
return messageconverter use any
making beanfactory available optional set jmslistenerconfigurer beans wont get autodetected setendpointregistry endpoint registry explicitly configured
process given jmslistener annotation given method registering corresponding endpoint given bean instance jmslistener annotation process mostspecificmethod annotated method bean instance invoke method createmethodjmslistenerendpoint jmslistenerendpointregistrarregisterendpoint
copy constructor allows ignoring certain entries used serialization without nonserializable entries original messageheaders copy keystoignore keys entries ignore
constructor providing control id timestamp header values headers map headers add id id header value timestamp timestamp header value
create primary logger given class wrap composite delegates fallback logger named orgspringframeworkwebsimplogging primary enabled primaryloggerclass class name primary logger resulting composite logger
return user associated current session
constructor creating new message headers constructor protected see factory methods subclasses
constructor accessing modifying existing message headers constructor protected see factory methods subclasses
return id current session
return attributes associated current session
return value attribute given name any name name attribute current attribute value null found
constructor wrapping given session attributes map sessionid id associated session attributes attributes
invoked session completed executed completion callbacks
register callback execute destruction specified attribute callback executed session closed name name attribute register callback callback destruction callback executed
expose object synchronize underlying session session mutex use never null
remove attribute given name exists also removes registered destruction callback specified attribute any however does not execute callback assumed removed object continue used destroyed independently appropriate time name name attribute
extract simp session attributes given message wrap simpattributes instance message message extract session attributes
return simpattributes currently bound thread attributes null bound
bind given simpattributes current thread attributes requestattributes expose
return simpattributes currently bound thread raise javalangillegalstateexception none bound attributes never null javalangillegalstateexception attributes bound
return configured header initializer
create new simpmessagingtemplate instance messagechannel message channel never null
configure prefix use destinations targeting specific user the default value user orgspringframeworkmessagingsimpuseruserdestinationmessagehandler
headers given message already contain orgspringframeworkmessagingsimpsimpmessageheaderaccessordestinationheader simpmessageheaderaccessordestinationheader message sent without changes if destination header already present the message sent configured setdefaultdestinationobject defaultdestination exception illegalstateexception raised isnt configured message message send never null
creates new map puts given headers key nativemessageheaderaccessornativeheaders nativeheaders nativeheaders nativeheaders effectively treats input header map headers sent destination however given headers already contain key nativeheaders nativeheaders headers instance returned without changes also given headers prepared obtained simpmessageheaderaccessorgetmessageheaders headers instance also returned without changes
constructor accepting message type messagetype message type match messages
creates new brokeravailabilityevent brokeravailable true broker available false otherwise source component acting broker relay external broker changed availability must null
whether client must receive messages order publication by default messages sent clientoutboundchannel may processed order channel backed threadpoolexecutor turn guarantee processing order when flag set true messages within session sent clientoutboundchannel one time order preserve order publication enable needed since performance overhead keep messages order preservepublishorder whether publish order 51
constructor destination prefixes matches destinations inboundchannel channel receiving messages clients eg websocket clients outboundchannel channel sending messages clients eg websocket clients brokerchannel channel application send messages broker
constructor destination prefixes match destinations messages inboundchannel channel receiving messages clients eg websocket clients outboundchannel channel sending messages clients eg websocket clients brokerchannel channel application send messages broker destinationprefixes prefixes use filter messages
check whether message handler currently running note even message handler running isbrokeravailable flag may still independently alternate depending concrete subclass implementation
get messagechannel use sending messages clients possibly persession wrapper preservepublishordertrue 51
install remove executorchannelinterceptor invokes completion task message handled channel channel configure preservepublishorder whether preserve order based interceptor either added removed
return configured header initializer 41
configure custom subscriptionregistry use storing subscriptions note custom pathmatcher configured via setpathmatcher custom registry instance defaultsubscriptionregistry provided pathmatcher used must configured directly custom registry
configured given pathmatcher passed underlying subscriptionregistry use matching destination subscriptions default standard orgspringframeworkutilantpathmatcher 41 setsubscriptionregistry defaultsubscriptionregistrysetpathmatcher orgspringframeworkutilantpathmatcher
configure value heartbeat settings first number represents often server write send heartbeat second often client write 0 means heartbeats by default set 0 0 unless settaskscheduler taskscheduler case default becomes 1000010000 in milliseconds 42
configured specified cache limit passed underlying subscriptionregistry overriding default there with standard defaultsubscriptionregistry default cache limit 1024 432 setsubscriptionregistry defaultsubscriptionregistrysetcachelimit defaultsubscriptionregistrydefaultcachelimit
configure name header subscription message purpose filtering messages matched subscription header value expected spring el boolean expression applied headers messages matched subscription for example headersfoo bar by default set selector set different name null turn support selector header selectorheadername name use selector header 4317 setsubscriptionregistry defaultsubscriptionregistrysetselectorheadernamestring
return configured taskscheduler 42
configured value heartbeat settings 42
configure orgspringframeworkschedulingtaskscheduler use providing heartbeat support setting property also sets setheartbeatvalue heartbeatvalue 10000 10000 by default set 42
create simplebrokermessagehandler instance given message channels destination prefixes clientinboundchannel channel receiving messages clients eg websocket clients clientoutboundchannel channel sending messages clients eg websocket clients brokerchannel channel application send messages broker destinationprefixes prefixes use filter messages
return name selector header name 42
constructor creating message headers parsed stomp frame
return stomp command given headers null set
return passcode header value null set
return stomp command null yet set
return passcode header value null set
constructor accessing modifying existing message headers note message headers may created stomp frame may rather originated using generic orgspringframeworkmessagingsimpsimpmessageheaderaccessor
get receipt header
get heartbeat header
get server header applies connected frame
whether heartbeats enabled returns false setheartbeat set 00 true otherwise
get passcode header
get ack header
set contenttype header applies send message error frames
get session header
get host header
get id header
return contenttype header value
set given single header value given name headername header name headervalue header value unsupportedoperationexception adding headers supported putstring list addstring string
get messageid header
return contentlength header 1 unknown
get acceptversion header 507
get login header
get receipt header
return first header value given header name any headername header name first header value null none
add given single header value given name headername header name headervalue header value unsupportedoperationexception adding headers supported putstring list setstring string
get destination header applies send subscribe message frames
get subscription header
set heartbeat header applies connect connected frames
set acceptversion header must one 11 12 both applies connect frame 507
clean state associated connection close it exception arising closing connection propagated
invoked stomp connected frame received point connection ready sending stomp messages broker
return configured header initializer
set login use creating connections stomp broker behalf connected clients by default set guest setsystemloginstring
invoked tcp connectivity issue detected ie failure establish tcp connection failure send message missed heartbeat etc
get configured tcp client never null unless configured invoked method invoked handler started hence default implementation initialized
create stompbrokerrelaymessagehandler instance given message channels destination prefixes inboundchannel channel receiving messages clients eg websocket clients outboundchannel channel sending messages clients eg websocket clients brokerchannel channel application send messages broker destinationprefixes broker supported destination prefixes destinations match given prefix ignored
set login shared system connection used send messages stomp broker within application ie messages associated specific client session eg resthttp request handling method by default set guest
return configured virtual host value
disconnect client frames close connection proactively however disconnect receipt header leave connection open expect server respond receipt close connection hrefhttpstompgithubiostompspecification12htmldisconnect stomp specification 12 disconnect
set client passcode use create connections stomp broker behalf connected clients by default set guest setsystempasscode
configure one destinations subscribe shared system connection along messagehandlers handle received messages this internal use multiapplication server scenario servers forward messages eg unresolved user destinations subscriptions destinations subscribe to
set stomp message broker host
forward given message stomp broker the method checks whether active tcp connection received stomp connected frame client messages false lose tcp connection around time client message forwarded simply log ignored message debug level messages within application sent system connection exception raised components sending message chance handle default broker message channel synchronous note messages arrive concurrently around time tcp connection lost brief period time connection reset one messages may sneak attempt made forward them rather synchronizing guard that method simply lets try fail client sessions may result additional stomp error frames sent downstream code handling downstream idempotent cases message message send never null future wait result
implementation returns string expected payload type stomp error frames
implementation empty
calculate current buffer size
get expected content length currently buffered incomplete stomp frame
create new bufferingstompdecoder wrapping given stompdecoder stompdecoder target decoder wrap buffersizelimit buffer size limit
decodes one stomp frames given bytebuffer list message messages if enough data parse contentlength header value used determine much data needed new attempt decode made if enough data parse contentlength contentlength header every subsequent call decode attempts parse available data therefore presence contentlength header helps optimize decoding large messages newbuffer buffer containing new data decode decoded messages empty list stompconversionexception raised case decoding issues
create instance preconfigured tcp client tcpclient client use
overloaded version connectstompsessionhandler accepts headers use stomp connect frame connectheaders headers add connect frame handler handler stomp session listenablefuture access session ready use
factory method create configure new session connectheaders headers stomp connect frame handler handler stomp session created session
determine whether heartbeats enabled returns false setdefaultheartbeat defaultheartbeat set 00 true otherwise
configure number milliseconds receipt considered expired by default set 15000 15 seconds
configured taskscheduler
configure default value heartbeat header stomp connect frame first number represents often client write send heartbeat second often server write value 0 means heartbeats by default set 1000010000 subclasses may override default example set 00 require taskscheduler configured first heartbeat value connect heartbeat header hrefhttpstompgithubiostompspecification12htmlheartbeating httpstompgithubiostompspecification12htmlheartbeating
initialize stompheaders example setting heartbeat header necessary connectheaders headers modify modified headers
set messageconverter use convert payload incoming outgoing messages byte based object type contenttype header by default simplemessageconverter configured messageconverter message converter use
decode single stomp frame given buffer message
see stomp spec 12 hrefhttpstompgithubiostompspecification12htmlvalueencodingvalue encoding
skip one ore eol characters start given bytebuffer stomp heartbeat frames
return configured messageheaderinitializer any
try read eol incrementing buffer position successful whether eol consumed
decodes one stomp frames given buffer returns list message messages if given bytebuffer contains partial stomp frame content complete stomp frames empty list returned buffer reset was if buffer contains one ore stomp frames returned buffer reset point beginning unused partial content the output partialmessageheaders map used store successfully parsed headers case partial content caller check contentlength header read helps determine much content needed next attempt decode bytebuffer buffer decode stomp frame partialmessageheaders empty output map store last successfully parsed partialmessageheaders case partial message content cases partial buffer ended partial stomp frame decoded messages empty list none stompconversionexception raised case decoding issues
see stomp spec 12 hrefhttpstompgithubiostompspecification12htmlvalueencodingvalue encoding
encodes given payload headers byte headers headers payload payload encoded message
set messageconverter use convert payload incoming outgoing messages byte based object type expected object type contenttype header by default simplemessageconverter configured messageconverter message converter use
create new session sessionhandler application handler session connectheaders headers stomp connect frame
return configured taskscheduler use receipt tracking
configure time milliseconds receipt expires by default set 15000 15 seconds
constructor create dto local user session
constructor create dto local user subscription
default constructor json deserialization
create instance wrapping local user registry
default constructor json deserialization
default constructor json deserialization
constructor create user local user
constructor create dto local user registry
user user destination user name null session id user authenticated cases possible use sessionid place user name thus removing need usertosession lookup via simpuserregistry
configure amount time in milliseconds remote user registry snapshot considered expired by default set 20 seconds value 20000 milliseconds expiration period milliseconds
constructor userregistry registry local remote user registry information brokertemplate template broadcasting local registry information broadcastdestination destination broadcast scheduler task scheduler use
prefix used identify user destinations destinations start given prefix resolved the default prefix user prefix prefix use
method determines translate source user destination actual target destination given active user session sourcedestination source destination input message actualdestination subset destination without user prefix sessionid id active user session never null user target user possibly null eg authenticated target destination null none
provide pathmatcher use working destinations turn helps determine whether leading slash kept actual destinations removing setuserdestinationprefix userdestinationprefix by default actual destinations leading slash eg queuepositionupdates makes sense brokers support destinations slash separator pathmatcher provided supports alternative separator resulting destinations wont leading slash eg jmsqueuepositionupdates pathmatcher pathmatcher used work destinations 43 4314 property longer used replaced setremoveleadingslashboolean indicates explicitly whether keep leading slash may may case regardless pathmatcher configured
create instance access user session id information provided registry userregistry registry never null
set destination broadcast messages remain unresolved user connected multiapplication server scenario gives application servers chance try by default set destination target destination
create instance given client broker channels subscribing handle messages sending resolved messages broker channel clientinboundchannel messages received clients brokerchannel messages sent broker resolver resolver user destinations
return configured destination unresolved messages
return configured header initializer
configure interceptors message channel 4312 favor interceptorschannelinterceptor
configure given interceptors message channel adding channels current list interceptors 4312
configure thread pool backing message channel using custom threadpooltaskexecutor taskexecutor executor use or null default executor
create user registry provides access local users 51 favor createlocaluserregistryinteger
provide access configured patchmatcher access configuration classes
override method provide custom validator 401
protected method plugging custom subclass orgspringframeworkmessagingsimpannotationsupportsimpannotationmethodmessagehandler simpannotationmethodmessagehandler 42
accessor messagebrokerregistry ensures onetime creation initialization configuremessagebrokermessagebrokerregistry
return orgspringframeworkvalidationvalidator orgspringframeworkvalidationvalidators instance validating payload method arguments in order method tries get validator instance delegating getvalidator first if none returned getting existing instance wellknown name mvcvalidator created mvc configuration if none returned checking classpath presence jsr303 implementation creating optionalvalidatorfactorybean returning noop validator instance
configure orgspringframeworkschedulingtaskscheduler use providing heartbeat support setting property also sets setheartbeatvalue heartbeatvalue 10000 10000 by default set 42
configure value heartbeat settings first number represents often server write send heartbeat second often client write 0 means heartbeats by default set 0 0 unless settaskscheduler taskscheduler case default becomes 1000010000 in milliseconds 42
set core pool size threadpoolexecutor note core pool size effectively max pool size unbounded queuecapacityint queuecapacity configured the default essentially unbounded queues strategy explained javautilconcurrentthreadpoolexecutor threadpoolexecutor strategy used maxpoolsizeint maxpoolsize ignored by default set twice value runtimeavailableprocessors application tasks block frequently number closer equal number available cpuscores
set max pool size threadpoolexecutor note unbounded queuecapacityint queuecapacity configured the default max pool size effectively ignored see unbounded queues strategy javautilconcurrentthreadpoolexecutor threadpoolexecutor details by default set integermaxvalue
set time limit threads may remain idle terminated core number threads currently pool waiting amount time without processing task excess threads terminated overrides value set constructor by default set 60
create new taskexecutorregistration given threadpooltaskexecutor taskexecutor executor use
create new taskexecutorregistration default threadpooltaskexecutor
set queue capacity threadpoolexecutor note unbounded queuecapacity configured the default core pool size effectively max pool size essentially unbounded queues strategy explained javautilconcurrentthreadpoolexecutor threadpoolexecutor strategy used maxpoolsizeint maxpoolsize ignored by default set integermaxvalue
whether client must receive messages order publication by default messages sent clientoutboundchannel may processed order channel backed threadpoolexecutor turn guarantee processing order when flag set true messages within session sent clientoutboundchannel one time order preserve order publication enable needed since performance overhead keep messages order 51
enable simple message broker configure one prefixes filter destinations targeting broker eg destinations prefixed topic
enable stomp broker relay configure destination prefixes supported message broker check stomp documentation message broker supported destinations
configure one prefixes filter destinations targeting application annotated methods example destinations prefixed app may processed annotated methods destinations may target message broker eg topic queue when messages processed matching prefix removed destination order form lookup path means annotations contain destination prefix prefixes trailing slash one automatically appended
configure cache limit apply registrations broker this currently applied destination cache subscription registry default cache limit 1024 432 orgspringframeworkmessagingsimpbrokerdefaultsubscriptionregistrysetcachelimit
configure prefix used identify user destinations user destinations provide ability user subscribe queue names unique session well others send messages unique userspecific queues for example user attempts subscribe userqueuepositionupdates destination may translated queuepositionupdatesi9oqdfzo yielding unique queue name collide user attempting same subsequently messages sent userusernamequeuepositionupdates destination translated queuepositionupdatesi9oqdfzo the default prefix used identify destinations user
configure pathmatcher use match destinations incoming messages messagemapping subscribemapping methods by default orgspringframeworkutilantpathmatcher configured however applications may provide antpathmatcher instance customized use commonly used messaging instead path separator provide completely different pathmatcher implementation note configured pathmatcher used matching portion destination configured prefix example given application destination prefix app destination apppricestock message might mapped controller price stock type methodlevel mappings respectively when simple broker enabled pathmatcher configured also used match message destinations brokering messages 41 orgspringframeworkmessagingsimpbrokerdefaultsubscriptionregistrysetpathmatcher
configure whether stompbrokerrelaymessagehandler start automatically spring applicationcontext refreshed the default setting true
set passcode use creating connections stomp broker behalf connected clients by default set guest
set login use creating connections stomp broker behalf connected clients by default set guest
set stomp message broker host
set stomp message broker port
set login shared system connection used send messages stomp broker within application ie messages associated specific client session eg resthttp request handling method by default set guest
set maximum interval milliseconds system relay session expects absence data receive heartbeat stomp broker value zero configure relay session expect receive heartbeats broker the default value 10000
set passcode shared system connection used send messages stomp broker within application ie messages associated specific client session eg resthttp request handling method by default set guest
set interval milliseconds system relay session will absence data sent send heartbeat stomp broker value zero prevent heartbeats sent broker the default value 10000
set destination broadcast content local user registry listen broadcasts servers multiapplication server scenarios allows servers user registry aware users connected servers by default set destination destination broadcasting user registry details eg topicsimpuserregistry
set destination broadcast messages user destinations remain unresolved user appears connected multiapplication server scenario gives application servers chance try by default set destination destination broadcast unresolved messages to eg topicunresolveduserdestination
set value host header use stomp connect frames property configured host header added every stomp frame sent stomp broker may useful example cloud environment actual host tcp connection established different host providing cloudbased stomp service by default property set
return configured header initializer
construct new subscriptionmethodreturnvaluehandler template messaging template send messages to likely clientoutboundchannel must null
resolve placeholder values given array destinations new array updated destinations 42
set pathmatcher implementation use matching destinations configured destination patterns by default antpathmatcher used
configure messageconverter use convert payload message serialized form specific mime type object matching target method parameter converter also used sending message message broker compositemessageconverter
return configured validator instance
return configured header initializer
create instance simpannotationmethodmessagehandler given message channels broker messaging template clientinboundchannel channel receiving messages clients eg websocket clients clientoutboundchannel channel messages clients eg websocket clients brokertemplate messaging template send application messages broker
destination prefixes expected slashseparated strings therefore slash automatically appended missing ensure proper prefixbased match ie matching complete segments note however remaining portion destination prefix may use different separator eg commonly messaging depending configured pathmatcher
return configured header initializer
constructor externally created tcpclient instance whose lifecycle expected managed externally tcpclient tcpclient instance use codec encoding decoding inputoutput byte streams orgspringframeworkmessagingsimpstompstompreactornettycodec
variant reactornettytcpclientstring int reactornettycodec still manages lifecycle tcpclient underlying resources allows direct configuration properties client function tcpclient clientconfigurer configurer function codec encoding decoding inputoutput byte streams 513 orgspringframeworkmessagingsimpstompstompreactornettycodec
simple constructor host port use connect to this constructor manages lifecycle tcpclient underlying resources connectionprovider loopresources channelgroup for full control initialization lifecycle tcpclient use reactornettytcpclienttcpclient reactornettycodec host host connect port port connect codec encoding decoding inputoutput byte streams orgspringframeworkmessagingsimpstompstompreactornettycodec
invoked message actually sent channel allows modification message necessary method returns null actual send invocation occur
invoked immediately message retrieved returned caller message may modified necessary null aborts interceptor invocations applies pollablechannels
message channel uses bean name primarily logging purposes
return values specified native header null none
add specified native header value existing values
protected constructor create new headers nativeheaders native headers create message may null
whether native header map contains give header name
set specified native header value replacing existing values
return first value specified native header null none
protected constructor accepting headers existing message copy
return copy native header values empty map
invoked inside runnable submitted executor calling target messagehandler handle message allows modification message necessary null returned messagehandler invoked message message handled channel channel message sent handler target handler handle message input message new instance null
copy namevalue pairs provided map this operation not overwrite existing values
retrieve value header given name headername name header associated value null none found
removes headers provided via array headerpatterns as name suggests array may contain simple matching patterns header names supported pattern styles are xxx xxx xxx xxxyyy
remove value given header name
return underlying messageheaders instance unless setleavemutableboolean set true call headers immutable accessor longer modify them this method always returns messageheaders instance invoked multiples times obtain copy underlying headers use tomessageheaders tomap instead 41
default getmessageheaders called this messageheaderaccessor instance longer used modify underlying message headers returned messageheaders immutable however set true returned underlying messageheaders instance remains mutable make modifications continue use accessor instance reobtain via messageheaderaccessorgetaccessormessage class messageheaderaccessorgetaccessormessage class when modifications complete use setimmutable prevent changes intended use case mechanism initialization message within single thread by default set false 41
set value given header name if provided value null header removed
return original messageheaderaccessor used create headers given message null thats available type match required type this cases existence accessor strongly expected followed assertion accessor created otherwise message message get accessor requiredtype required accessor type or null any accessor instance specified type null none 41
copy namevalue pairs provided map this operation overwrite existing values use copyheadersifabsentmap avoid overwriting values
set value given header name header name already associated value
variation getaccessororgspringframeworkmessagingmessage class messageheaders instance instead message this cases full message may created yet messageheaders message headers get accessor requiredtype required accessor type or null any accessor instance specified type null none 41
return mutable messageheaderaccessor given message attempting match type accessor used create message headers otherwise wrapping message messageheaderaccessor instance this cases header needs updated generic code preserving accessor type downstream processing accessor required type never null 41
return header value null exist match requested type
generate name use set header defined specified headername protocol specific message setoutboundprefix
generate name use set header defined specified propertyname messageheaders instance setinboundprefixstring
return configured idgenerator any
create new message given payload payload message payload never null
create new message given payload headers content given header map copied payload message payload never null headers message headers use initialization
constructor messageheaders instance use note given messageheaders instance used directly new message ie copied payload message payload never null headers message headers
return original message if available point stack errormessage created 50
create new message payload messageheaders original message note given messageheaders instance used directly new message ie copied payload message payload never null headers message headers originalmessage original message if present point stack errormessage created 50
create new message given payload headers original message content given header map copied payload message payload never null headers message headers use initialization originalmessage original message if present point stack errormessage created 50
create new message given payload original message payload message payload never null originalmessage original message if present point stack errormessage created 50
constructor messageheaders instance use note given messageheaders instance used directly new message ie copied payload message payload never null headers message headers
copy namevalue pairs provided map operation not overwrite existing values
set message headers use providing messageheaderaccessor accessor headers use
set value given header name provided value null header removed
copy namevalue pairs provided map operation overwrite existing values use copyheadersifabsentmap avoid overwriting values note id timestamp header values never overwritten
removes headers provided via array headerpatterns name suggests array may contain simple matching patterns header names supported pattern styles are xxx xxx xxx xxxyyy
set value given header name header name already associated value
shortcut factory method creating message given payload messageheaders note given messageheaders instance used directly new message ie copied payload payload use never null messageheaders headers use never null created message 41
remove value given header name
returns default content type payload called tomessageobject messageheaders invoked without message headers without content type header by default returns first element getsupportedmimetypes supportedmimetypes any overridden subclasses payload payload converted message content type null known
convert message payload serialized form object message input message targetclass target class conversion conversionhint extra object passed messageconverter eg associated methodparameter may null result conversion null converter cannot perform conversion 42
whether converter convert messages content type could resolved configured orgspringframeworkmessagingconvertercontenttyperesolver a converter configured strict setcontenttyperesolver contenttyperesolver configured list getsupportedmimetypes supportedmimetypes empty when flag set true supportsmimetypemessageheaders return false setcontenttyperesolver contenttyperesolver defined contenttype header present
construct abstractmessageconverter supporting single mime type supportedmimetype supported mime type
convert payload object serialized form payload object convert headers optional headers message may null conversionhint extra object passed messageconverter eg associated methodparameter may null resulting payload message null converter cannot perform conversion 42
configure preferred serialization class use byte string converting object payload message the default value byte payloadclass either byte string
return configured contenttyperesolver
construct abstractmessageconverter supporting multiple mime types supportedmimetypes supported mime types
create new instance given conversionservice
create instance given converters
constructor marshaller given marshaller also implements unmarshaller also used unmarshalling note marshaller implementations spring also implement unmarshaller safely use constructor marshaller object used marshaller unmarshaller
return configured unmarshaller
return configured marshaller
construct mappingjackson2messageconverter supporting one custom mime types supportedmimetypes supported mime types 415
set objectmapper converter set default objectmapperobjectmapper objectmapper used setting customconfigured objectmapper one way take control json serialization process example extended comfasterxmljacksondatabindserserializerfactory configured provides custom serializers specific types option refining serialization process use jacksons provided annotations types serialized case customconfigured objectmapper unnecessary
determine json encoding use given content type contenttype mime type messageheaders json encoding use never null
whether use defaultprettyprinter writing json shortcut setting objectmapper follows classcode objectmapper mapper new objectmapper mapperconfigureserializationfeatureindentoutput true convertersetobjectmappermapper
determine jackson serialization view based given conversion hint conversionhint conversion hint object passed converter current conversion attempt serialization view class null none 42
determine whether log given exception coming objectmappercandeserialize objectmappercanserialize check type class jackson tested deserializability cause jacksonthrown exception evaluate typically jsonmappingexception 43
construct mappingjackson2messageconverter supporting applicationjson mime type utf8 character set
return default mime type use messageheaderscontenttype header present
copy constructor use subclasses
create instance bean instance method name parameter types nosuchmethodexception method cannot found
assert target bean class instance class given method declared cases actual endpoint instance request processing time may jdk dynamic proxy lazy initialization prototype beans others endpoint classes require proxying prefer classbased proxy mechanisms
create instance bean instance method
recreate handlermethod resolved handler
return handlermethod handlermethod instance resolved via createwithresolvedbean 43
return short representation handler method log message purposes
return single annotation underlying method traversing super methods annotation found given method itself also supports merged composed annotations attribute overrides spring framework 43 annotationtype type annotation introspect method annotation null none found annotatedelementutilsfindmergedannotation
provided instance contains bean name rather object instance bean name resolved handlermethod created returned
create instance bean name method beanfactory method createwithresolvedbean may used later recreate handlermethod initialized bean
returns new instance url patterns current instance this other instance follows if patterns instances combine patterns this patterns other using orgspringframeworkutilpathmatchercombinestring string if one instance patterns use them if neither instance patterns use empty string ie
compare two conditions based destination patterns contain patterns compared one time top bottom via orgspringframeworkutilpathmatchergetpatterncomparatorstring compared patterns match equally one instance patterns considered closer match it assumed instances obtained via getmatchingconditionmessage ensure contain patterns match request sorted best matches top
check patterns match given message destination return instance guaranteed contain matching patterns sorted via orgspringframeworkutilpathmatchergetpatterncomparatorstring message message match instance condition contains patterns new condition sorted matching patterns null either destination extracted match
configure complete list supported argument types effectively overriding ones configured default advanced option use cases sufficient use setcustomargumentresolvers
set list custom handlermethodreturnvaluehandlers used return value handlers known types
property configured messages destinations matching one configured prefixes eligible handling match prefix removed remaining part destination used methodmapping purposes by default prefixes configured case messages eligible handling
return logger set invocablehandlermethod 51
register handler method unique mapping handler bean name handler handler instance method method register mapping mapping conditions associated handler method illegalstateexception another method already registered mapping
return logger set handlermethodreturnvaluehandlercomposite 51
configure complete list supported return value types effectively overriding ones configured default advanced option use cases sufficient use setcustomreturnvaluehandlers
subclasses invoke method populate messagingadvicebean cache eg support global messageexceptionhandler 42
check whether given destination of incoming message matches one configured destination prefixes return remaining portion destination matched prefix if matching prefixes return null if destination prefixes return destination is
sets list custom handlermethodargumentresolvers used resolvers supported argument type
detect given handler methods handle messages register extracted mapping information handler handler check either instance spring bean name
create handlermethod instance object handler either handler instance stringbased bean name
find messageexceptionhandler method given exception default implementation searches methods class hierarchy handlermethod first found continues searching additional messageexceptionhandler methods among configured plain orgspringframeworkmessaginghandlermessagingadvicebean messagingadvicebean any handlermethod method exception raised exception raised exception method handle exception null 42
add given handlermethodargumentresolver
add given handlermethodargumentresolver handlermethodargumentresolvers 43
iterate registered handlermethodargumentresolver handlermethodargumentresolvers invoke one supports it illegalstateexception suitable handlermethodargumentresolver found
add given handlermethodargumentresolver handlermethodargumentresolvers
find registered handlermethodargumentresolver supports given method parameter
whether given plain methodparameter method parameter supported registered handlermethodargumentresolver
create new instance providing invalid methodparameter
create new instance providing invalid methodparameter prepared description
add given handlermethodreturnvaluehandler handlermethodreturnvaluehandlers
add given handlermethodreturnvaluehandler
invoke method resolving argument values context given message argument values commonly resolved handlermethodargumentresolver handlermethodargumentresolvers providedargs parameter however may supply argument values used directly ie without argument resolution delegates getmethodargumentvalues calls doinvoke resolved arguments message current message processed providedargs given arguments matched type resolved raw value returned invoked method exception raised suitable argument resolver found method raised exception getmethodargumentvalues doinvoke
invoke handler method given argument values
get method argument values current message checking provided argument values falling back configured argument resolvers the resulting array passed doinvoke 512
construct new handler method given bean instance method name parameters bean object bean methodname method name parametertypes method parameter types nosuchmethodexception method cannot found
protected constructor accepting exceptiontomethod mappings
find method handle given exception type useful exception instance available eg tools exceptiontype exception type method handle exception null none found 431
return method mapped given exception type null none
find method handle given exception use exceptiondepthcomparator one match found exception exception method handle exception null none found
extract exceptions method handlesthis implementation looks subclasses throwable method signature method static ensure safe use subclass constructors
check given payload empty payload payload check can null
configure complete list supported argument types effectively overriding ones configured default advanced option use cases sufficient use setcustomargumentresolversjavautillist
beanfactory needs available placeholder resolution handler method arguments its optional otherwise
create new instance invalid methodparameter
create new instance invalid methodparameter orgspringframeworkvalidationbindingresult
return bindingresult failure validationrelated null none
create new payloadargumentresolver given messageconverter validator messageconverter messageconverter use required validator validator use optional usedefaultresolution true the default resolver supports parameters false arguments payload annotation supported
validate payload applicable the default implementation checks javaxvalidationvalid springs orgspringframeworkvalidationannotationvalidated custom annotations whose name starts valid message currently processed message parameter method parameter target target payload object methodargumentnotvalidexception case binding errors
specify given payload empty payload payload check can null
create new namedvalueinfo based given namedvalueinfo sanitized values
obtain named value given method parameter
resolve given annotationspecified value potentially containing placeholders expressions
constructor conversionservice beanfactory cs conversion service converting values match target method parameter type beanfactory bean factory use resolving placeholder spel expressions default values null default values expected contain expressions
null results false value booleans exception primitives
convert given message given target class message message convert targetclass target class convert payload converted payload reply message never null
set name header used determine send timeout if present default value defaultreceivetimeoutheader header removed sending message avoid propagation 50
set name header used determine send timeout if present default value defaultsendtimeoutheader the header removed sending message avoid propagation 50
resolves caches destinations successfully resolved target destinationresolver implementation name destination name resolved currently resolved destination already cached destination destinationresolutionexception target destinationresolver reports error destination resolution
create new cachingdestinationresolverproxy using given target destinationresolver actually resolve destinations targetdestinationresolver target destinationresolver delegate
return configured destination resolver
constructor accepts beanfactory useful instantiating resolver manually rather defined springmanaged bean beanfactory bean factory perform lookups
return configured default destination
set messageconverter use convertandsend methods by default simplemessageconverter used messageconverter message converter use
convert given object serialized form possibly using messageconverter wrap message given headers apply given post processor payload object use payload headers headers message send postprocessor post processor apply message converted message
provides access map input headers send operation subclasses modify headers return different map this default implementation class returns input map headers headers send or null none actual headers send or null none
create new objectretrievalfailureexception given object given explicit message exception persistentclassname name persistent class identifier id object retrieved msg detail message cause source exception
return name persistent class object found work class objects string names
return identifier object found
create new objectretrievalfailureexception given object default not found message persistentclassname name persistent class identifier id object retrieved
create general objectretrievalfailureexception given message without information affected object msg detail message cause source exception
return persistent class object found class specified method returns null
create new objectretrievalfailureexception given object default not found message persistentclass persistent class identifier id object retrieved
create new objectretrievalfailureexception given object given explicit message exception persistentclass persistent class identifier id object retrieved msg detail message cause source exception
create new objectoptimisticlockingfailureexception given object default optimistic locking failed message persistentclassname name persistent class identifier id object locking failed cause source exception
create new objectoptimisticlockingfailureexception given object default optimistic locking failed message persistentclass persistent class identifier id object locking failed cause source exception
create new objectoptimisticlockingfailureexception given object given explicit message persistentclass persistent class identifier id object locking failed msg detail message cause source exception
return persistent class object locking failed class specified method returns null
create new objectoptimisticlockingfailureexception given object given explicit message persistentclassname name persistent class identifier id object locking failed msg detail message cause source exception
create general objectoptimisticlockingfailureexception given message without information affected object msg detail message cause source exception
return name persistent class object locking failed work class objects string names
return identifier object locking failed
retrieve springmanaged session current thread any
create new springsessioncontext given hibernate sessionfactory sessionfactory sessionfactory provide current sessions
return sessionfactory instance manage transactions for
return whether given hibernate session always hold jdbc connection used check whether transaction manager safely prepare clean jdbc connection used transaction the default implementation checks sessions connection release mode onclose session hibernate session check connectionreleasemodeonclose
create new hibernatetransactionmanager instance sessionfactory sessionfactory manage transactions
obtain sessionfactory actual use sessionfactory never null illegalstateexception case sessionfactory set 50
return jdbc datasource instance manages transactions for
return current hibernate entity interceptor null none resolves entity interceptor bean name via bean factory necessary illegalstateexception bean name specified bean factory set beansexception bean name resolution via bean factory failed setentityinterceptor setentityinterceptorbeanname setbeanfactory
determine whether given session still physically connected database is holds active jdbc connection internally session hibernate session check issameconnectionforentiresessionsession
set jdbc datasource instance manage transactions for datasource match one used hibernate sessionfactory example could specify jndi datasource both if sessionfactory configured localdatasourceconnectionprovider ie springs localsessionfactorybean specified datasource datasource autodetected still explicitly specify datasource dont need case a transactional jdbc connection datasource provided application code accessing datasource directly via datasourceutils jdbctemplate connection taken hibernate session the datasource specified target datasource manage transactions for transactionawaredatasourceproxy data access code may work transactionawaredatasourceproxy transaction manager needs work underlying target datasource theres nevertheless transactionawaredatasourceproxy passed in unwrapped extract target datasource note scenarios many transactions read data hibernates cache and actually access database consider using orgspringframeworkjdbcdatasourcelazyconnectiondatasourceproxy actual target datasource alternatively consider switching setprepareconnection prepareconnection false cases transaction manager eagerly acquire jdbc connection hibernate session anymore as spring 51 setautodetectdatasource transactionawaredatasourceproxy orgspringframeworkjdbcdatasourcelazyconnectiondatasourceproxy orgspringframeworkjdbccorejdbctemplate
bean factory needs known resolving entity interceptor bean names need set mode operation setentityinterceptorbeanname
get native hibernate flushmode adapting hibernate 5051 52 session hibernate session get flush mode flushmode never null 43
perform actual closing hibernate session catching logging cleanup exceptions thrown session hibernate session close may null sessionclose
convert given hibernateexception appropriate exception orgspringframeworkdao hierarchy ex hibernateexception occurred corresponding dataaccessexception instance hibernateexceptiontranslatorconverthibernateaccessexception hibernatetransactionmanagerconverthibernateaccessexception
determine datasource given sessionfactory sessionfactory sessionfactory check datasource null none found connectionprovider
trigger flush given hibernate session converting regular hibernateexception instances well hibernate 52s persistenceexception wrappers accordingly session hibernate session flush synch whether flush triggered transaction synchronization dataaccessexception case flush failures 432
create new configurablejtaplatform instance given jta transactionmanager optionally given usertransaction tm jta transactionmanager reference required ut jta usertransaction reference optional tsr jta 11 transactionsynchronizationregistry optional
instantiate new springbeancontainer given bean factory beanfactory spring bean factory delegate
set multitenantconnectionprovider passed sessionfactory 43 availablesettingsmultitenantconnectionprovider
set hibernate regionfactory use sessionfactory allows using springmanaged regionfactory instance note set hibernate settings define cache provider avoid meaningless double configuration 51 availablesettingscacheregionfactory
set spring jtatransactionmanager jta transactionmanager used hibernate any allows using springmanaged transaction manager hibernate 5s session cache synchronization hibernatetransactionjtaplatform automatically set it a passedin spring jtatransactionmanager needs contain jta transactionmanager reference usable here except websphere case well automatically set websphereextendedjtaplatform accordingly note set hibernate settings contain jta platform setting avoid meaningless double configuration
overridden reliably pass currenttenantidentifierresolver sessionfactory 432 availablesettingsmultitenantidentifierresolver
perform springbased scanning entity classes registering annotated classes configuration packagestoscan one java package names hibernateexception scanning fails reason
specify custom type filters springbased scanning entity classes default search specified packages classes annotated javaxpersistenceentity javaxpersistenceembeddable javaxpersistencemappedsuperclass scanpackages
check whether configured entity type filters matches current class descriptor contained metadata reader
create new localsessionfactorybuilder given datasource datasource jdbc datasource resulting hibernate sessionfactory using may null resourceloader resourceloader load application classes metadatasources hibernate metadatasources service use eg reusing existing one 43
add given annotated packages batch addpackage scanpackages
create new localsessionfactorybuilder given datasource datasource jdbc datasource resulting hibernate sessionfactory using may null resourceloader resourceloader load application classes
add given annotated classes batch addannotatedclass scanpackages
build hibernate sessionfactory background bootstrapping using given executor parallel initialization phase eg orgspringframeworkcoretasksimpleasynctaskexecutor sessionfactory initialization switch background bootstrap mode sessionfactory proxy immediately returned injection purposes instead waiting hibernates bootstrapping complete however note first actual call sessionfactory method block hibernates bootstrapping completed ready then maximum benefit make sure avoid early sessionfactory calls init methods related beans even metadata introspection purposes 43 buildsessionfactory
set hibernate orghibernateresourcebeanscontainerspibeancontainer given spring configurablelistablebeanfactory note bean container integration requires hibernate 53 higher enables autowiring hibernate attribute converters entity listeners 51 springbeancontainer availablesettingsbeancontainer
determine spring resourceloader use hibernate metadata resourceloader use never null 43
subclasses override method perform custom initialization sessionfactory instance creating via given configuration object got prepared localsessionfactorybean the default implementation invokes localsessionfactorybuilders buildsessionfactory custom implementation could prepare instance specific way eg applying custom serviceregistry use custom sessionfactoryimpl subclass sfb localsessionfactorybuilder prepared localsessionfactorybean sessionfactory instance localsessionfactorybuilderbuildsessionfactory
determine hibernate metadatasources use can also externally called initialize prepopulate metadatasources instance going used sessionfactory building metadatasources use never null 43 localsessionfactorybuilderlocalsessionfactorybuilderdatasource resourceloader metadatasources
return hibernate configuration object used build sessionfactory allows access configuration metadata stored rarely needed illegalstateexception configuration object initialized yet
specify spring resourceloader use hibernate metadata resourceloader resourceloader use never null
accept containing beanfactory registering corresponding hibernate orghibernateresourcebeanscontainerspibeancontainer integration possible requires spring configurablelistablebeanfactory hibernate 53 higher classpath 51 springbeancontainer localsessionfactorybuildersetbeancontainer
return hibernate properties any mainly available configuration property paths specify individual keys
specify hibernate metadatasources service use eg reusing existing one potentially populated custom hibernate bootstrap orghibernateserviceserviceregistry well 43 metadatasourcesmetadatasourcesserviceregistry bootstrapserviceregistrybuilderbuild
convert given hibernateexception appropriate exception orgspringframeworkdao hierarchy will automatically apply specified sqlexceptiontranslator hibernate jdbcexception otherwise rely hibernates default translation ex hibernateexception occurred corresponding dataaccessexception sessionfactoryutilsconverthibernateaccessexception
enable specified filters given session session current hibernate session setfilternames sessionenablefilterstring
obtain sessionfactory actual use sessionfactory never null illegalstateexception case sessionfactory set 50
return names hibernate filters activated any
execute action specified given action object within native session this execute variant overrides templatewide isexposenativesession exposenativesession setting action callback object specifies hibernate action result object returned action null dataaccessexception case hibernate errors
create closesuppressing proxy given hibernate session proxy also prepares returned query criteria objects session hibernate session create proxy session proxy sessionclose preparequery preparecriteria
check whether write operations allowed given session default implementation throws invaliddataaccessapiusageexception case flushmodemanual overridden subclasses session current hibernate session invaliddataaccessapiusageexception write operations allowed setcheckwriteoperations sessiongetflushmode flushmodemanual
return name cache region queries executed template
prepare given query object applying cache settings andor transaction timeout queryobject query object prepare setcachequeries setquerycacheregion
apply given name parameter given query object queryobject query object paramname name parameter value value parameter hibernateexception thrown query object
prepare given criteria object applying cache settings andor transaction timeout criteria criteria object prepare setcachequeries setquerycacheregion
return hibernate sessionfactory used create hibernate sessions
disable specified filters given session session current hibernate session setfilternames sessiondisablefilterstring
execute action specified given action object within session action callback object specifies hibernate action enforcenativesession whether enforce exposure native hibernate session callback code result object returned action null dataaccessexception case hibernate errors
create new hibernatetemplate instance sessionfactory sessionfactory create sessions
return hibernate sessionfactory used dao
set hibernate sessionfactory used dao automatically create hibernatetemplate given sessionfactory createhibernatetemplate sethibernatetemplate
conveniently obtain current hibernate session hibernate session dataaccessresourcefailureexception session couldnt created sessionfactorygetcurrentsession
return hibernatetemplate dao preinitialized sessionfactory set explicitly note returned hibernatetemplate shared instance may introspect configuration modify configuration other within initdao implementation consider creating custom hibernatetemplate instance via new hibernatetemplategetsessionfactory case youre allowed customize settings resulting instance
open session sessionfactory interceptor uses the default implementation delegates sessionfactoryopensession method sets sessions flush mode manual session use dataaccessresourcefailureexception session could created flushmodemanual
unbind hibernate session thread close it transactionsynchronizationmanager
open new hibernate session according bind thread via transactionsynchronizationmanager
return hibernate sessionfactory used create hibernate sessions
look sessionfactory filter use the default implementation looks bean specified name springs root application context sessionfactory use getsessionfactorybeanname
open session sessionfactory filter uses the default implementation delegates sessionfactoryopensession method sets sessions flush mode manual sessionfactory sessionfactory filter uses session use dataaccessresourcefailureexception session could created flushmodemanual
returns false filter may provide hibernate session error dispatches
returns false filter may rebind opened hibernate session asynchronously dispatched thread postpone closing last asynchronous dispatch
open session given sessionfactory 50 favor opensessionsessionfactory
open session given sessionfactory the default implementation delegates sessionfactoryopensession method sets sessions flush mode manual sessionfactory sessionfactory use session use dataaccessresourcefailureexception session could created 50 flushmodemanual
return hibernate sessionfactory used create hibernate sessions
determine persistenceunitinfo use entitymanagerfactory created bean the default implementation reads persistence unit infos persistencexml defined jpa specification entity manager name specified takes first info array returned reader otherwise checks matching name persistenceunitmanager persistenceunitmanager obtain chosen persistenceunitinfo
specify jdbc datasource jpa persistence provider supposed use accessing database alternative keeping jdbc configuration persistencexml passing springmanaged datasource instead in jpa speak datasource passed used nonjtadatasource persistenceunitinfo passed persistenceprovider well overriding data source configuration persistencexml if any note variant typically works jta transaction management well not consider using explicit setjtadatasource instead note applied external persistenceunitmanager specified javaxpersistencespipersistenceunitinfogetnonjtadatasource setpersistenceunitmanager
specify jdbc datasource jpa persistence provider supposed use accessing database alternative keeping jdbc configuration persistencexml passing springmanaged datasource instead in jpa speak datasource passed used jtadatasource persistenceunitinfo passed persistenceprovider well overriding data source configuration persistencexml if any note applied external persistenceunitmanager specified javaxpersistencespipersistenceunitinfogetjtadatasource setpersistenceunitmanager
specify spring loadtimeweaver use class instrumentation according jpa class transformer contract it required specify loadtimeweaver providers able provide subset functionality without class instrumentation well operate vm agent specified jvm startup in terms springprovided weaving options important ones instrumentationloadtimeweaver requires springspecific but general vm agent specified jvm startup reflectiveloadtimeweaver interacts underlying classloader based specific extended methods available it note spring 25 contexts default loadtimeweaver defined bean name loadtimeweaver picked automatically available removing need loadtimeweaver configuration affected target bean consider using contextloadtimeweaver xml tag creating shared loadtimeweaver autodetecting environment default note applied external persistenceunitmanager specified otherwise external setpersistenceunitmanager persistenceunitmanager responsible weaving configuration orgspringframeworkinstrumentclassloadinginstrumentationloadtimeweaver orgspringframeworkinstrumentclassloadingreflectiveloadtimeweaver
uses specified persistence unit name name default persistence unit applicable note applied external persistenceunitmanager specified defaultpersistenceunitmanagersetdefaultpersistenceunitname
enlist applicationmanaged entitymanager current transaction
create containermanaged extended entitymanager proxy emf entitymanagerfactory create entitymanager with implements entitymanagerfactoryinfo interface corresponding jpadialect persistenceunitinfo detected accordingly properties properties passed createentitymanager call may null synchronizedwithtransaction whether automatically join ongoing transactions according jpa 21 synchronizationtype rules containermanaged entitymanager expects containerdriven lifecycle management may opt automatic transaction synchronization 40 javaxpersistenceentitymanagerfactorycreateentitymanagerjavautilmap
actually create entitymanager proxy rawem raw entitymanager emifc potentially vendorspecific entitymanager interface proxy null default detection interfaces cl classloader use proxy creation maybe null exceptiontranslator persistenceexception translator use jta whether create jtaaware entitymanager or null known advance containermanaged whether follow containermanaged entitymanager applicationmanaged entitymanager semantics synchronizedwithtransaction whether automatically join ongoing transactions according jpa 21 synchronizationtype rules entitymanager proxy
join existing transaction already joined enforce whether enforce transaction ie whether failure join considered fatal
actually create entitymanager proxy rawentitymanager raw entitymanager emfinfo entitymanagerfactoryinfo obtain jpadialect persistenceunitinfo containermanaged whether follow containermanaged entitymanager applicationmanaged entitymanager semantics synchronizedwithtransaction whether automatically join ongoing transactions according jpa 21 synchronizationtype rules entitymanager proxy
create containermanaged extended entitymanager proxy rawentitymanager raw entitymanager decorate emfinfo entitymanagerfactoryinfo obtain jpadialect persistenceunitinfo containermanaged entitymanager automatically participate managed transaction
create applicationmanaged extended entitymanager proxy rawentitymanager raw entitymanager decorate emfinfo entitymanagerfactoryinfo obtain jpadialect persistenceunitinfo applicationmanaged entitymanager join transactions participate automatically
create applicationmanaged extended entitymanager proxy rawentitymanager raw entitymanager decorate emfinfo entitymanagerfactoryinfo obtain jpadialect persistenceunitinfo synchronizedwithtransaction whether automatically join ongoing transactions according jpa 21 synchronizationtype rules applicationmanaged entitymanager join transactions participate automatically 40
obtain jpa entitymanager given factory aware corresponding entitymanager bound current thread eg using jpatransactionmanager note return null threadbound entitymanager found emf entitymanagerfactory create entitymanager entitymanager null none found dataaccessresourcefailureexception entitymanager couldnt obtained jpatransactionmanager
prepare transaction given entitymanager possible em entitymanager prepare emf entitymanagerfactory entitymanager created arbitrary object holds transaction data to passed cleanuptransaction jpadialectpreparetransaction
obtain jpa entitymanager given factory aware corresponding entitymanager bound current thread eg using jpatransactionmanager same getentitymanager throwing original persistenceexception emf entitymanagerfactory create entitymanager properties properties passed createentitymanager call may null synchronizedwithtransaction whether automatically join ongoing transactions according jpa 21 synchronizationtype rules entitymanager null none found javaxpersistencepersistenceexception entitymanager couldnt created gettransactionalentitymanagerjavaxpersistenceentitymanagerfactory jpatransactionmanager
close given jpa entitymanager catching logging cleanup exceptions thrown em jpa entitymanager close may null javaxpersistenceentitymanagerclose
apply current transaction timeout any given jpa query object this method sets jpa 20 query hint javaxpersistencequerytimeout accordingly query jpa query object emf jpa entitymanagerfactory query created
find entitymanagerfactory given name given spring application context represented listablebeanfactory the specified unit name matched configured persistence unit provided discovered entitymanagerfactory implements entitymanagerfactoryinfo interface not persistence unit name matched spring bean name assuming entitymanagerfactory bean names follow convention if unit name given method search default entitymanagerfactory listablebeanfactorygetbeanclass beanfactory listablebeanfactory search unitname name persistence unit may null empty case single bean type entitymanagerfactory searched for entitymanagerfactory nosuchbeandefinitionexception entitymanagerfactory context entitymanagerfactoryinfogetpersistenceunitname
convert given runtime exception appropriate exception orgspringframeworkdao hierarchy return null translation appropriate exception may resulted user code translated the important cases like object found optimistic locking failure covered here finegranular conversion jpatransactionmanager etc support sophisticated translation exceptions via jpadialect ex runtime exception occurred corresponding dataaccessexception instance null exception translated
obtain jpa entitymanager given factory aware corresponding entitymanager bound current thread eg using jpatransactionmanager note return null threadbound entitymanager found emf entitymanagerfactory create entitymanager properties properties passed createentitymanager call may null entitymanager null none found dataaccessresourcefailureexception entitymanager couldnt obtained jpatransactionmanager
obtain jpa entitymanager given factory aware corresponding entitymanager bound current thread eg using jpatransactionmanager same getentitymanager throwing original persistenceexception emf entitymanagerfactory create entitymanager properties properties passed createentitymanager call may null entitymanager null none found javaxpersistencepersistenceexception entitymanager couldnt created gettransactionalentitymanagerjavaxpersistenceentitymanagerfactory jpatransactionmanager
prepare transaction given entitymanager possible transactiondata arbitrary object holds transaction data as returned preparetransaction emf entitymanagerfactory entitymanager created jpadialectcleanuptransaction
obtain entitymanagerfactory actual use entitymanagerfactory never null illegalstateexception case entitymanagerfactory set 50
implementation returns true jpa commit properly handle transactions marked rollbackonly global level
return jdbc datasource instance manages transactions for
close current transactions entitymanager called transaction begin attempt failed txobject current transaction
return name persistence unit manage transactions for any
return entitymanagerfactory instance manage transactions for
set jdbc datasource instance manage transactions for datasource match one used jpa entitymanagerfactory example could specify jndi datasource both if entitymanagerfactory uses known datasource connection factory datasource autodetected still explicitly specify datasource dont need case a transactional jdbc connection datasource provided application code accessing datasource directly via datasourceutils jdbctemplate connection taken jpa entitymanager note need use jpa dialect specific jpa implementation allow exposing jpa transactions jdbc transactions the datasource specified target datasource manage transactions for transactionawaredatasourceproxy data access code may work transactionawaredatasourceproxy transaction manager needs work underlying target datasource theres nevertheless transactionawaredatasourceproxy passed in unwrapped extract target datasource entitymanagerfactoryinfogetdatasource setjpadialect orgspringframeworkjdbcdatasourcetransactionawaredatasourceproxy orgspringframeworkjdbcdatasourcedatasourceutils orgspringframeworkjdbccorejdbctemplate
create jpa entitymanager used transaction the default implementation checks whether entitymanagerfactory spring proxy unwraps first javaxpersistenceentitymanagerfactorycreateentitymanager entitymanagerfactoryinfogetnativeentitymanagerfactory
create new jpatransactionmanager instance emf entitymanagerfactory manage transactions
specify jpa properties map passed entitymanagerfactorycreateentitymanagermap if any can populated map props element xml bean definitions javaxpersistenceentitymanagerfactorycreateentitymanagerjavautilmap
retrieves entitymanagerfactory persistence unit name none set explicitly falls back default entitymanagerfactory bean persistence unit specified setpersistenceunitname
eagerly initialize jpa dialect creating default one specified entitymanagerfactory none set autodetect entitymanagerfactorys datasource any
initialize entitymanagerfactory given configuration javaxpersistencepersistenceexception case jpa initialization errors
delegate incoming invocation proxy dispatching entitymanagerfactoryinfo native entitymanagerfactory accordingly
create proxy given entitymanagerfactory able return transactionaware proxy applicationmanaged entitymanager emf entitymanagerfactory returned persistence provider initialized already entitymanagerfactory proxy
close entitymanagerfactory bean factory shutdown
implementation persistenceexceptiontranslator interface autodetected springs persistenceexceptiontranslationpostprocessor uses dialects conversion possible otherwise falls back standard jpa exception conversion orgspringframeworkdaoannotationpersistenceexceptiontranslationpostprocessor jpadialecttranslateexceptionifpossible entitymanagerfactoryutilsconvertjpaaccessexceptionifpossible
return asynchronous executor background bootstrapping any 43
return jpavendoradapter implementation entitymanagerfactory null known
return singleton entitymanagerfactory
specify jpa properties map passed persistencecreateentitymanagerfactory if any can populated map props element xml bean definitions javaxpersistencepersistencecreateentitymanagerfactorystring javautilmap javaxpersistencespipersistenceprovidercreatecontainerentitymanagerfactoryjavaxpersistencespipersistenceunitinfo javautilmap
implementation nothing assuming connection implicitly closed entitymanager if jpa implementation returns connection handle expects application close use dialect implementation needs invoke connectionclose or method similar effect here javasqlconnectionclose
implementation invokes standard jpa transactionbegin method throws invalidisolationlevelexception nondefault isolation level set this implementation return transaction data object since state kept standard jpa transaction hence subclasses care return value null implementation free return transaction data object javaxpersistenceentitytransactionbegin orgspringframeworktransactioninvalidisolationlevelexception cleanuptransaction
implementation always returns null indicating jdbc connection provided
implementation delegates entitymanagerfactoryutils entitymanagerfactoryutilsconvertjpaaccessexceptionifpossible
return vendorspecific jpadialect implementation provider null none
return name persistence providers root package eg oracletoplinkessentials used excluding provider classes temporary class overriding 252
obtain entitymanagerfactory actual use entitymanagerfactory never null illegalstateexception case entitymanagerfactory set 50
return name persistence unit access entitymanagerfactory for any
obtain new entitymanager accessors entitymanagerfactory can overridden subclasses create specific entitymanager variants new entitymanager illegalstateexception accessor configured entitymanagerfactory javaxpersistenceentitymanagerfactorycreateentitymanager javaxpersistenceentitymanagerfactorycreateentitymanagerjavautilmap
return jpa entitymanagerfactory used create entitymanagers
retrieves entitymanagerfactory persistence unit name none set explicitly falls back default entitymanagerfactory bean persistence unit specified setpersistenceunitname
specify jpa properties map passed entitymanagerfactorycreateentitymanagermap if any can populated map props element xml bean definitions javaxpersistenceentitymanagerfactorycreateentitymanagerjavautilmap
obtain transactional entitymanager accessors entitymanagerfactory any transactional entitymanager null none illegalstateexception accessor configured entitymanagerfactory entitymanagerfactoryutilsgettransactionalentitymanagerjavaxpersistenceentitymanagerfactory entitymanagerfactoryutilsgettransactionalentitymanagerjavaxpersistenceentitymanagerfactory javautilmap
create transactional entitymanager proxy given entitymanagerfactory emf entitymanagerfactory delegate to properties properties passed createentitymanager call may null synchronizedwithtransaction whether automatically join ongoing transactions according jpa 21 synchronizationtype rules shareable transaction entitymanager proxy 40
create transactional entitymanager proxy given entitymanagerfactory emf entitymanagerfactory obtain entitymanagers needed properties properties passed createentitymanager call may null entitymanagerinterfaces interfaces implemented entitymanager allows addition specification proprietary interfaces shareable transactional entitymanager proxy
create transactional entitymanager proxy given entitymanagerfactory emf entitymanagerfactory obtain entitymanagers needed properties properties passed createentitymanager call may null synchronizedwithtransaction whether automatically join ongoing transactions according jpa 21 synchronizationtype rules entitymanagerinterfaces interfaces implemented entitymanager allows addition specification proprietary interfaces shareable transactional entitymanager proxy 40
check whether configured entity type filters matches current class descriptor contained metadata reader
return jdbc datasource jpa persistence provider supposed use accessing database none specified persistencexml
prepare persistenceunitinfos according configuration manager scanning persistencexml files parsing matching files configuring postprocessing them persistenceunitinfos cannot obtained preparation method invoked obtaindefaultpersistenceunitinfo obtainpersistenceunitinfostring
read persistence unit infos persistencexml defined jpa specification
determine jpas default metainformxml resource use springs default persistence unit any checks whether metainformxml file exists classpath uses colocated metainfpersistencexml file
return spring loadtimeweaver use class instrumentation according jpa class transformer contract
return jdbc datasourcelookup provides datasources persistence provider resolving data source names persistencexml springmanaged datasource instances
return persistenceunitpostprocessors applied persistenceunitinfo parsed manager
perform springbased scanning entity classes setpackagestoscan
try determine persistence unit root url based given defaultpersistenceunitrootlocation persistence unit root url pass jpa persistenceprovider setdefaultpersistenceunitrootlocation
return jtaaware datasource jpa persistence provider supposed use accessing database none specified persistencexml
return specified persistenceunitinfo managers cache processed persistence units keeping cache ie obtaining use rather accessing postprocessing this used postprocesspersistenceunitinfo implementations detecting existing persistence units name potentially merging them persistenceunitname name desired persistence unit persistenceunitinfo mutable form null available
specify spring loadtimeweaver use class instrumentation according jpa class transformer contract it required specify loadtimeweaver providers able provide subset functionality without class instrumentation well operate vm agent specified jvm startup furthermore defaultpersistenceunitmanager falls back instrumentationloadtimeweaver springs agentbased instrumentation available runtime in terms springprovided weaving options important ones instrumentationloadtimeweaver requires springspecific but general vm agent specified jvm startup reflectiveloadtimeweaver interacts underlying classloader based specific extended methods available for example interacting springs tomcatinstrumentableclassloader consider using contextloadtimeweaver xml tag creating shared loadtimeweaver autodetecting environment default orgspringframeworkinstrumentclassloadinginstrumentationloadtimeweaver orgspringframeworkinstrumentclassloadingreflectiveloadtimeweaver
hook method allowing subclasses customize persistenceunitinfo the default implementation delegates registered persistenceunitpostprocessors usually preferable register entity classes jar files etc rather subclass manager able reuse postprocessors pui chosen persistenceunitinfo read persistencexml passed mutablepersistenceunitinfo setpersistenceunitpostprocessors
implementation delegates loadtimeweaver specified
initialize persistenceunitinfo loadtimeweaver spi interface used spring add instrumentation current class loader
implementation delegates loadtimeweaver specified
implementation returns loadtimeweavers instrumentable classloader specified
implementation throws unsupportedoperationexception
implementation returns default classloader orgspringframeworkutilclassutilsgetdefaultclassloader
implementation throws unsupportedoperationexception
parse property xml elements
parse class xml elements
create new persistenceunitreader resourcepatternresolver resourcepatternresolver use loading resources datasourcelookup datasourcelookup resolve datasource names persistencexml files
parse jarfile xml elements
validate given stream return valid dom document parsing
determine persistence unit root url based given resource which points persistencexml file were reading resource resource check corresponding persistence unit root url ioexception checking failed
parse mappingfile xml elements
parse build persistence unit infos defined given xml files persistencexmllocations resource locations can patterns resulting persistenceunitinfo instances
parse unit info dom element
parse validated document add entries given unit info list
return specified persistence context given unit name defined persistencecontexts or extendedpersistencecontexts map unitname name persistence unit extended whether obtain extended persistence context corresponding entitymanager null none found setpersistencecontexts setextendedpersistencecontexts
find entitymanagerfactory given name current spring application context falling back single default entitymanagerfactory if any case unit name specified unitname name persistence unit may null empty requestingbeanname name requesting bean entitymanagerfactory nosuchbeandefinitionexception entitymanagerfactory context
find entitymanagerfactory given name current spring application context unitname name persistence unit never empty requestingbeanname name requesting bean entitymanagerfactory nosuchbeandefinitionexception entitymanagerfactory context
find single default entitymanagerfactory spring application context default entitymanagerfactory nosuchbeandefinitionexception single entitymanagerfactory context
return specified persistence unit given unit name defined persistenceunits map unitname name persistence unit corresponding entitymanagerfactory null none found setpersistenceunits
resolve object application context
specify entitymanager interface expose default entitymanager interface defined entitymanagerfactoryinfo available else standard javaxpersistenceentitymanager interface used orgspringframeworkormjpaentitymanagerfactoryinfogetentitymanagerinterface javaxpersistenceentitymanager
look entitymanagerfactory filter use the default implementation looks bean specified name springs root application context entitymanagerfactory use getentitymanagerfactorybeanname
return bean name entitymanagerfactory fetch springs root application context
returns false filter may provide entitymanager error dispatches
look entitymanagerfactory filter use taking current http request argument the default implementation delegates lookupentitymanagerfactory without arguments caching entitymanagerfactory reference obtained entitymanagerfactory use lookupentitymanagerfactory
return name persistence unit access entitymanagerfactory for any
returns false filter may rebind opened entitymanager asynchronously dispatched thread postpone closing last asynchronous dispatch
determine eclipselink target database name given database database specified database eclipselink target database name null none found
determine hibernate database dialect class given target database database target database hibernate database dialect class null none found
return name target database operate on
convert given hibernateexception appropriate exception orgspringframeworkdao hierarchy ex hibernateexception occurred corresponding dataaccessexception instance
create typedvalue particular value particular typedescriptor may contain additional generic declarations value object value typedescriptor type descriptor describing type value
create typedvalue simple object typedescriptor inferred object generic declarations preserved value object value
construct new expression exception position position expression string problem occurred message descriptive message
return detailed description exception including expression string position if available well actual exception message
construct new expression exception expressionstring expression string message descriptive message
construct new expression exception message descriptive message cause underlying cause exception
return expression string
construct new expression exception expressionstring expression string position position expression string problem occurred message descriptive message
construct new expression exception message descriptive message
return exception message spring 40 method returns result todetailedstring getsimplemessage javalangthrowablegetmessage
construct new expression exception position position expression string problem occurred message descriptive message cause underlying cause exception
return descriptor item currently top stack in current scope
insert necessary cast value call convert boxed type primitive value mv method visitor instructions inserted ch primitive type desired output stackdescriptor descriptor type top stack
called main expression evaluation method generated method callback registered fieldadders clinitadders add extra information class representing compiled expression
insert necessary numeric conversion bytecodes based upon stack desired target type mv method visitor instructions placed targetdescriptor primitive descriptor target type stackdescriptor descriptor operand top stack
insert appropriate checkcast instruction supplied descriptor mv target visitor instruction inserted descriptor descriptor type cast
convert type descriptor single character primitive descriptor descriptor descriptor type primitive representation single character descriptor primitive input descriptor
determine appropriate boxing instruction specific type if needs boxing insert instruction supplied visitor mv target visitor new instructions descriptor descriptor type may may need boxing
use mathematical operators handles converting possibly boxed number stack primitive numeric type for example integer double need call numberdoublevalue int double need use bytecode i2d mv method visitor instructions appended stackdescriptor descriptor operand stack targetdescriptor primitive type descriptor
register clinitadder add code static initializer generated class support code produced ast nodes primary generatecode method
return supplied array type core component reference type
determine jvm descriptor specified class unlike descriptors used compilation process one jvm wants one includes necessary trailing semicolon eg ljavalangstring rather ljavalangstring clazz class jvm descriptor class
produce correct bytecode build array opcode use signature pass along opcode vary depending signature array type mv methodvisitor code inserted size size array arraytype type array
create jvm signature descriptor method consists descriptors method parameters surrounded parentheses followed descriptor return type note descriptors jvm descriptors unlike descriptor forms compiler using include trailing semicolon method method string signature descriptor eg iljavalangstringv
codeflow shows last expression evaluated javalangboolean insert necessary instructions unbox boolean primitive mv visitor new instructions inserted
register fieldadder add new field generated class support code produced ast nodes primary generatecode method
numbers use appropriate method number convert primitive type requested mv method visitor instructions inserted targetdescriptor primitive type desired output stackdescriptor descriptor type top stack
determine supplied descriptor supported number type boolean compilation process currently supports certain number types double float long int descriptor descriptor type true descriptor supported numeric type boolean
create array descriptors array classes types input array classes array descriptors
deduce descriptor type descriptors like jvm type names missing trailing object descriptor ljavalangobject int i type type may primitive determine descriptor descriptor
determine supplied descriptor supported number compilation process currently supports certain number types double float long int descriptor descriptor type true descriptor supported numeric type
determine appropriate boxing instruction specific type if needs boxing insert instruction supplied visitor mv target visitor new instructions ch descriptor type might need boxing
determine whether boxingunboxing get one type other assumes least one types boxed form ie single char descriptor true possible get via boxing one descriptor
record descriptor recently evaluated expression element descriptor type descriptor recently evaluated element
produce appropriate bytecode store stack item array instruction use varies depending whether type primitive reference type mv insert bytecode arrayelementtype type array elements
determine descriptor object instance or null value object possibly null type descriptor object descriptor ljavalangobject null value
construct new codeflow given class classname name class classwriter corresponding asm classwriter
create jvm signature descriptor constructor consists descriptors constructor parameters surrounded parentheses followed descriptor return type always v note descriptors jvm descriptors unlike descriptor forms compiler using include trailing semicolon ctor constructor string signature descriptor eg iljavalangstringv
create optimal instruction loading number stack mv insert bytecode value value loaded
determine whether descriptor primitive array eg i descriptor descriptor possible primitive array true descriptor primitive array
determine appropriate tag use newarray bytecode arraytype array primitive component type tag use newarray
produce complete message including prefix inserts applied message inserts inserts put formatted message formatted message 435
active context object unqualified references propertiesetc resolved against
create new spelparserconfiguration instance compilermode compiler mode parsers using configuration object use compilerclassloader classloader use basis expression compilation autogrownullreferences null references automatically grow autogrowcollections collections automatically grow maximumautogrowsize maximum size collection auto grow
return classloader use basis expression compilation
check might two character token
push token two characters length
push token one character length
create parser specified configuration configuration custom configuration options
attempt compilation supplied expression check made see compilable compilation proceeds check involves visiting nodes expression ast ensuring enough state known bytecode generated them expression expression compile instance class implementing compiled expression null compilation possible
load compiled expression class makes sure classloaders arent used much anchor compiled classes memory prevent gc expressions continually recompiling time replacing classloader periodically least older variants garbage collected name name class bytes bytecode class class object compiled expression
generate class encapsulates compiled expression define it generated class subtype compiledexpression expressiontocompile expression compiled expression call null decision opt compilation code generation
request revert interpreter expression evaluation compiled form discarded recreated later recompiling again expression expression
factory method compiler instances returned spelcompiler attach class loader child given class loader child used load compiled expressions classloader classloader use basis compilation corresponding spelcompiler instance
used consuming arguments either method constructor call
eat identifier possibly qualified meaning dotted todo andyc could create complete identifiers abc rather sequence them a b c
constructor use particular data token eg true startpos exact start endpos index last character
cause expression revert interpreted using compiled form also resets compilation attempt failure count an expression normally longer considered compilable cannot compiled 100 attempts
return default evaluation context used none supplied evaluation call default evaluation context
construct expression used parser
compile expression evaluated threshold number times trigger compilation expressionstate expression state used determine compilation mode
perform expression compilation succeed exit descriptors nodes determined compilation fails failed 100 times expression longer considered suitable compilation
compute arguments function children expression node array argument values function call
execute function represented javalangreflectmethod state expression evaluation state method method invoke return value invoked java method evaluationexception problem invoking method
evaluate condition null return it null return value state expression state evaluationexception condition evaluate correctly boolean problem executing chosen alternative
determines set property resolvers used try access property specified target type resolvers considered ordered list however returned list exact matches input target type as opposed general resolvers could work type placed start list addition specific resolvers exactly name class question resolvers name specific class supertype class have put end specific resolvers set tried exactly matching accessors generic accessors contextobject object upon property access attempted list resolvers tried order access property
attempt read named property current context object value property evaluationexception problem accessing property cannot found
create constructor reference first argument type rest parameters constructor call
go list registered constructor resolvers see find constructor takes specified set arguments typename type trying constructed argumenttypes types arguments supplied constructor must take state current state expression reusable constructorexecutor invoked run constructor null spelevaluationexception problem locating constructor
create constructor reference first argument type rest parameters constructor call
create new ordinary object return it state expression state within expression evaluated new object evaluationexception problem creating object
implements getvalue delegating code building array simple type
create array return it state expression state within expression evaluated new array evaluationexception problem creating array
evaluates compound expression involves evaluating piece turn return value piece active context object subsequent piece state state expression evaluated final value last piece compound expression
decode accessexception throwing lightweight evaluation exception or cause runtimeexception throw runtimeexception directly
method reference compilable resolved reflectively accessible method child nodes arguments method also compilable
determines set property resolvers used try access property specified target type resolvers considered ordered list however returned list exact matches input target type as opposed general resolvers could work type placed start list addition specific resolvers exactly name class question resolvers name specific class supertype class have put end specific resolvers set tried exactly matching accessors generic accessors targettype type upon property access attempted list resolvers tried order access property
produce readable representation given method name specified arguments name name method argumenttypes types arguments method nicely formatted representation eg foostringint
perform equality check given operand values this method used reflective comparisons subclasses also compiled expression code needs declared public static here context current evaluation context left lefthand operand value right righthand operand value
return object indicates whether input descriptors compatible a declared descriptor could statically determined eg looking return value property accessor method whilst actual descriptor type actual object returned may differ for generic types unbound type variables declared descriptor discovered may object actual descriptor possible observe objects really numeric values eg ints leftdeclareddescriptor statically determinable left descriptor rightdeclareddescriptor statically determinable right descriptor leftactualdescriptor dynamicruntime left object descriptor rightactualdescriptor dynamicruntime right object descriptor descriptorcomparison object indicating type compatibility
string format operators operand operator operand
numeric comparison operators share similar generated code differing two comparison instructions
process string form number using specified base supplied return appropriate literal hold it suffix indicate long taken account either l l supported numbertoken token holding number payload eg 1234 0xcafe radix base number subtype literal represent
components list constants lists contain constants constant list built represent node speed later getvalue calls reduce amount garbage created
return true next child one specified classes
ask argument generate bytecode follow boxingunboxingcheckcasting ensure matches expected parameter descriptor
generate code handles building argument values specified method method take account whether invoked method varargs method argument values appropriately packaged array mv method visitor code generated cf current codeflow member method constructor arguments setup arguments expression nodes expression supplied argument values
check first operand matches regex specified second operand state expression state true first operand matches regex specified second operand otherwise false evaluationexception problem evaluating expression eg regex invalid
compare left operand see instance type specified right operand right operand must class state expression state true left operand instanceof right operand otherwise false evaluationexception problem evaluating expression
components map constants listsmaps contain constants constant list built represent node speed later getvalue calls reduce amount garbage created
evaluate condition true evaluate first alternative otherwise evaluate second alternative state expression state evaluationexception condition evaluate correctly boolean problem executing chosen alternative
implements multiply operator directly certain types supported operands otherwise delegates registered overloader types supported here supported operand types numbers string int abc 2 abcabc
convert operand value string using registered converter using tostring method value typed value converted state expression state typedvalue instance converted string
walk possible tree nodes combine strings append on stack stringbuilder
returns boolean based whether value range expressed first operand value whilst second list two values two values bounds allowed first operand inclusive state expression state true left operand range specified false otherwise evaluationexception problem evaluating expression
find field certain name specified class
attempt create optimized property accessor tailored property particular name particular class general reflectivepropertyaccessor always work optimal due need lookup reflective member methodfield use time read called method return reflectivepropertyaccessor instance unable build optimal accessor note optimal accessor currently usable read attempts call method need readwrite accessor optimalpropertyaccessor
get last read invoker pair 4315 since used within framework anymore
return class methods ordered nonbridge methods appearing higher
returns null means general purpose accessor
find setter method specified property
return method suffixes given property name default implementation uses javabean conventions additional support properties form xy method getxy used preference javabean convention getxy
return method suffix given property name default implementation uses javabean conventions
find getter method specified property
compare argument arrays return information whether match supplied type converter conversionallowed flag allow matches take account type may transformed different type converter variant comparearguments also allows varargs match expectedargtypes types methodconstructor expecting suppliedargtypes types supplied point invocation typeconverter registered type converter matchinfo object indicating kind match was null match
takes input set argument values converts types specified required parameter types arguments converted inplace input array converter type converter use attempting conversions arguments actual arguments need conversion executable target method constructor varargsposition known position varargs argument null varargs true kind conversion occurred argument evaluationexception problem occurs conversion
package arguments correctly match expected parametertypes example parametertypes int string second parameter declared string arguments 1ab must repackaged 1new stringab order match expected types requiredparametertypes types parameters invocation args arguments setup ready invocation repackaged array arguments varargs setup done
compare argument arrays return information whether match supplied type converter conversionallowed flag allow matches take account type may transformed different type converter expectedargtypes types methodconstructor expecting suppliedargtypes types supplied point invocation typeconverter registered type converter matchinfo object indicating kind match was null match
convert supplied set arguments requested types parametertypes related varargs method final entry parametertypes array going array whose component type used conversion target extraneous arguments for example parametertypes integer string input arguments integer boolean float boolean float must converted strings method not repackage arguments form suitable varargs invocation subsequent call setupargumentsforvarargsinvocation handles that converter converter use type conversions arguments arguments convert requested parameter types method target method true kind conversion occurred argument spelevaluationexception problem conversion
based methodinvokergettypedifferenceweightclass object operates typedescriptors
check supplied value first entry array represented possiblearray value value value check array possiblearray array object may supplied value first element true supplied value first entry array
register filter methods given type type type filter filter corresponding method filter null clear filter given type
locate method type three kinds match might occur an exact match types arguments match types constructor an inexact match types looking subtypes defined constructor a match able convert arguments expected constructor according registered type converter
simpleevaluationcontext support use bean references always null
return empty list always since context support use type references
register custom conversionservice by default standardtypeconverter backed orgspringframeworkcoreconvertsupportdefaultconversionservice used withtypeconverter standardtypeconverterstandardtypeconverterconversionservice
specify typed root object resolve against default none expecting object argument evaluation time orgspringframeworkexpressionexpressiongetvalueevaluationcontext orgspringframeworkexpressionexpressiongetvalueevaluationcontext object
create simpleevaluationcontext specified propertyaccessor delegates typically custom propertyaccessor specific use case eg attribute resolution custom data structure potentially combined databindingpropertyaccessor property dereferences needed well accessors accessor delegates use databindingpropertyaccessorforreadonlyaccess databindingpropertyaccessorforreadwriteaccess
configured typeconverter by default standardtypeconverter builderwithtypeconverter builderwithconversionservice
return specified propertyaccessor delegates any forpropertyaccessors
simpleevaluationcontext support use type references typelocator implementation raises spelevaluationexception spelmessagetypenotfound
return instance standardoperatoroverloader
specify default root object resolve against default none expecting object argument evaluation time orgspringframeworkexpressionexpressiongetvalueevaluationcontext orgspringframeworkexpressionexpressiongetvalueevaluationcontext object
register custom typeconverter by default standardtypeconverter backed orgspringframeworkcoreconvertsupportdefaultconversionservice used withconversionservice standardtypeconverterstandardtypeconverter
return specified root object any
return specified methodresolver delegates any builderwithmethodresolvers
register databindingmethodresolver instance method invocation purposes ie supporting static methods addition specified property accessors typically combination databindingpropertyaccessor withmethodresolvers simpleevaluationcontextforreadonlydatabinding simpleevaluationcontextforreadwritedatabinding
register specified methodresolver delegates combination property access method resolution resolvers resolver delegates use withinstancemethods simpleevaluationcontextforpropertyaccessors
return instance standardtypecomparator
register methodfilter called method resolution specified type the methodfilter may remove methods andor sort methods used spel candidates look match type type filter called filter methodfilter null unregister filter type illegalstateexception reflectivemethodresolver use
create standardtypelocator given classloader classloader classloader delegate
find possibly unqualified type reference first using type name asis trying registered prefixes type name cannot found typename type locate class object type evaluationexception type cannot found
locate constructor type three kinds match might occur an exact match types arguments match types constructor an inexact match types looking subtypes defined constructor a match able convert arguments expected constructor according registered type converter
create standardtypeconverter given conversionservice conversionservice conversionservice delegate
create new executor given method method method invoke
find first public class methods declaring class hierarchy declares method sometimes reflective method discovery logic finds suitable method easily called via reflection cannot called generated code compiling expression visibility restrictions example nonpublic class overrides tostring helper method walk type hierarchy find first public type declares method if one tostring may walk far object
create new templateparsercontext given prefix suffix expressionprefix expression prefix use expressionsuffix expression suffix use
copes nesting example correct end first final suffix suffix expressionstring expression string afterprefixindex recently found prefix location matching end suffix sought position correct matching nextsuffix 1 none found
return true specified suffix found supplied position supplied expression string expressionstring expression string may contain suffix pos start position check suffix suffix suffix string
helper parses given expression string using configured parser expression string contain number expressions contained markers instance fooexpr0barexpr1 static pieces text also returned expressions return static piece text result evaluating returned expressions concatenating results produces complete evaluated string unwrapping done outermost delimiters found string hello fooabc would break pieces hello fooabc means expression languages used part functionality supported without problem parsing aware structure embedded expression assumes parentheses square brackets curly brackets must pairs within expression unless within string literal string literal starts terminates single quote expressionstring expression string parsed expressions parseexception expressions cannot parsed
determines type converter available specified context attempts use convert supplied value specified type throws exception conversion possible context evaluation context may define type converter typedvalue value convert type descriptor describing targettype type attempt conversion converted value evaluationexception problem conversion conversion value specified type supported
create new delegatingtimerlistener runnable runnable implementation delegate
delegates execution underlying runnable
cancels statically registered timers shutdown stops underlying timermanager if shared commonjtimerstimercancel commonjtimerstimermanagerstop
create new scheduledtimerlistener timerlistener timerlistener schedule delay delay starting task first time ms period period repeated task executions ms fixedrate whether schedule fixedrate execution
create new scheduledtimerlistener timertask runnable schedule timerlistener delay delay starting task first time ms period period repeated task executions ms fixedrate whether schedule fixedrate execution
return timerlistener schedule
create new scheduledtimerlistener default onetime execution given delay timerlistener timerlistener schedule delay delay starting task first time ms
create new scheduledtimerlistener default onetime execution given delay timertask runnable schedule timerlistener delay delay starting task first time ms
implementation delegates orgspringframeworkschedulingschedulingawarerunnableislonglived available
create new delegatingwork delegate runnable implementation delegate may schedulingawarerunnable extended support orgspringframeworkschedulingschedulingawarerunnable isdaemon
delegates execution underlying runnable
suspends underlying timermanager if shared commonjtimerstimermanagersuspend
considers underlying timermanager running neither suspending stopping commonjtimerstimermanagerissuspending commonjtimerstimermanagerisstopping
obtain timermanager actual use timermanager never null illegalstateexception case timermanager set 50
return configured timermanager any timermanager null available
resumes underlying timermanager if shared commonjtimerstimermanagerresume
stops underlying timermanager if shared commonjtimerstimermanagerstop
return quartz scheduler instance accessor operates on
constructor jobmethodinvocationfailedexception methodinvoker methodinvoker used reflective invocation cause root cause as thrown target method
create instance specified job class can overridden postprocess job instance bundle triggerfiredbundle jobdetail info relating trigger firing obtained job instance exception job instantiation failed
adapt given job object quartz job interface the default implementation supports straight quartz jobs well runnables get wrapped delegatingjob jobobject original instance specified job class adapted quartz job instance exception given job could adapted delegatingjob
set start delay milliseconds the start delay added current system time when bean starts control start time trigger
create job instance populating property values taken scheduler context job data map trigger data map
set start delay milliseconds the start delay added current system time when bean starts control start time trigger setstarttime
create new delegatingjob delegate runnable implementation delegate
delegates execution underlying runnable
invoke method via methodinvoker
overridden support settargetbeanname targetbeanname feature
overridden support settargetbeanname targetbeanname feature
add given trigger scheduler doesnt already exist overwrites trigger case overwriteexistingjobs set trigger trigger add true trigger actually added false already existed setoverwriteexistingjobs
register specified listeners scheduler
register jobs triggers within transaction possible
add given job scheduler doesnt already exist overwrites job case overwriteexistingjobs set jobdetail job add true job actually added false already existed setoverwriteexistingjobs
register list jobdetail objects scheduler factorybean creates referenced triggers this necessary trigger determines jobdetail itself case jobdetail implicitly registered combination trigger settriggers orgquartzjobdetail
implementation applies passedin job data map bean property values delegates executeinternal afterwards executeinternal
create scheduler instance given factory scheduler name called afterpropertiesset the default implementation invokes schedulerfactorys getscheduler method overridden custom scheduler creation schedulerfactory factory create scheduler schedulername name scheduler create scheduler instance schedulerexception thrown quartz methods afterpropertiesset orgquartzschedulerfactorygetscheduler
start quartz scheduler respecting startupdelay setting scheduler scheduler start startupdelay number seconds wait starting scheduler asynchronously
initialize given schedulerfactory applying locally defined quartz properties it schedulerfactory schedulerfactory initialize
return datasource currently configured quartz scheduler used localdatasourcejobstore this instance set initialization corresponding scheduler reset immediately afterwards thus available configuration 11 setdatasource localdatasourcejobstore
return whether scheduler configured autostartup true scheduler start context refreshed start delay any
set quartz jobfactory use scheduler default springs adaptablejobfactory supports javalangrunnable objects well standard quartz orgquartzjob instances note default applies local scheduler remotescheduler where setting custom jobfactory supported quartz specify instance springs springbeanjobfactory typically inner bean definition automatically populate jobs bean properties specified job data map scheduler context 20 adaptablejobfactory springbeanjobfactory
expose specified context attributes andor current applicationcontext quartz schedulercontext
return nontransactional datasource currently configured quartz scheduler used localdatasourcejobstore this instance set initialization corresponding scheduler reset immediately afterwards thus available configuration 11 setnontransactionaldatasource localdatasourcejobstore
shut quartz scheduler bean factory shutdown stopping scheduled jobs
create schedulerfactory necessary apply locally defined quartz properties it initialized schedulerfactory
return resourceloader currently configured quartz scheduler used resourceloaderclassloadhelper this instance set initialization corresponding scheduler reset immediately afterwards thus available configuration setapplicationcontext resourceloaderclassloadhelper
return phase scheduler started stopped
return executor currently configured quartz scheduler used localtaskexecutorthreadpool this instance set initialization corresponding scheduler reset immediately afterwards thus available configuration 20 settaskexecutor localtaskexecutorthreadpool
create jcachecache instance jcache backing jcache cache instance allownullvalues whether accept convert null values cache
return backing jcache cachemanager javaxcachecachemanager
return cacheresolver instance use resolve cache use matching exceptions thrown operation
return name cache cache exceptions null caching exceptions disabled javaxcacheannotationcacheresultexceptioncachename
resolve cache use context invocation context cache use never null
convert collection caches single expected element throw illegalstateexception collection holds one element single element null collection empty
rewrite call stack specified exception matches current call stack included specified method invocation clone specified exception exception serializable original exception returned common ancestor found returns original exception used make sure cached exception valid invocation context exception exception merge current call stack classname class name common ancestor methodname method name common ancestor clone exception rewritten call stack composed current call stack included common ancestor specified classname methodname arguments followed stack trace elements specified exception common ancestor
check cached exception exception found throw directly
generate default cache name specified method method annotated method default cache name according jsr107
return cacheinvocationparameter parameters used compute key per spec method parameters annotated javaxcacheannotationcachekey parameters part key none annotated parameters except parameter annotated javaxcacheannotationcachevalue part key the method arguments must match signature related method invocation values parameters value particular invocation cacheinvocationparameter instances parameters used compute key
create new instance methoddetails cachemethoddetails related cached method cacheresolver cache resolver resolve regular caches keygenerator key generator compute cache keys
generate key specified invocation context context invocation key use
return target key generator use form either keygenerator cachekeygenerator
create instance given keygenerator javaxcacheannotationcachekey javaxcacheannotationcachevalue handled according spec
create instance used wrap specified javaxcacheannotationcachekeygenerator
return cacheoperationsource cache aspect
set cacheoperationsource cache aspect
return identifying description caching operation available subclasses inclusion tostring result
construct new abstractjcacheoperation methoddetails cachemethoddetails related cached method cacheresolver cache resolver resolve regular caches
return cacheinvocationparameter parameter holding value cache the method arguments must match signature related method invocation values parameters value particular invocation cacheinvocationparameter instance value parameter
create new instance jsr107 cache resolver invoke
return specified cache resolver use any
construct new defaultjcacheoperationsource given cache manager cache resolver key generator suppliers applying corresponding default supplier resolvable 51
return specified cache manager use any
return specified exception cache resolver use any
build ehcache cachemanager given configuration resource name desired name cache manager configlocation location configuration file as spring resource new ehcache cachemanager cacheexception case configuration parsing failure
parse ehcache configuration given resource use custom cachemanager creation configlocation location configuration file as spring resource ehcache configuration handle cacheexception case configuration parsing failure cachemanagercachemanagerconfiguration cachemanagercreateconfiguration
build ehcache cachemanager default configuration the cachemanager configured ehcachexml root class path that is default ehcache initialization defined ehcache docs apply configuration file found failsafe fallback configuration used name desired name cache manager new ehcache cachemanager cacheexception case configuration parsing failure
create ehcachecache instance ehcache backing ehcache instance
decorate given cache necessary cache raw cache object based configuration factorybean potentially decorated cache object registered cachemanager
predict particular ehcache implementation returned getobject based logic createcache decoratecacheehcache orchestrated afterpropertiesset
return backing ehcache netsfehcachecachemanager
create caffeinecache instance specified name given internal comgithubbenmanescaffeinecachecache use name name cache cache backing caffeine cache instance allownullvalues whether accept convert null values cache
set caffeine use building individual caffeinecache instance createnativecaffeinecache comgithubbenmanescaffeinecachecaffeinebuild
create native caffeine cache instance specified cache name name name cache native caffeine cache instance
create known caches current state manager
specify whether accept convert null values caches cache manager default true despite caffeine supporting null values internal holder object used store userlevel nulls
specify set cache names cachemanagers static mode the number caches names fixed call method creation cache regions runtime calling null collection argument resets mode dynamic allowing creation caches again
set caffeine cacheloader use building individual caffeinecache instance turning loadingcache createnativecaffeinecache comgithubbenmanescaffeinecachecaffeinebuildcacheloader comgithubbenmanescaffeinecacheloadingcache
create new transactionawarecache given target cache targetcache target cache decorate
create new transactionawarecachemanagerproxy given target cachemanager targetcachemanager target cachemanager proxy
copy contents message given target message target mailmessage copy
copy constructor creating new simplemailmessage state existing simplemailmessage instance
constructor mailsendexception msg detail message cause root cause mail api use
constructor registration failed messages messages failed keys thrown exceptions values the messages originally passed invoked send method msg detail message cause root cause mail api use failedmessages map failed messages keys thrown exceptions values
obtain connect transport underlying javamail session passing specified host port username password connected transport object messagingexception connect attempt failed 412 gettransport gethost getport getusername getpassword
return default encoding mimemessage mimemessages null none
validate instance connect server configured for throws messagingexception connection attempt failed
implementation creates smartmimemessage holding specified default encoding default filetypemap special defaultscarrying message autodetected mimemessagehelper use carried encoding filetypemap unless explicitly overridden setdefaultencoding setdefaultfiletypemap
set javamail session possibly pulled jndi default new session without defaults completely configured via instances properties if using preconfigured session nondefault properties instance override settings session setjavamailproperties
actually send given array mimemessages via javamail mimemessages mimemessage objects send originalmessages corresponding original message objects mimemessages created with array length indices mimemessages array orgspringframeworkmailmailauthenticationexception case authentication failure orgspringframeworkmailmailsendexception case failure sending message
return default java activation filetypemap mimemessage mimemessages null none
set javamail properties session a new session created properties use either method setsession both nondefault properties instance override given javamail properties
return password account mail host
return mail server host
return javamail session lazily initializing hasnt specified explicitly
create new instance javamailsenderimpl class initializes setdefaultfiletypemap defaultfiletypemap property default configurablemimefiletypemap
obtain transport object given javamail session using configured protocol can overridden subclasses eg return mock transport object javaxmailsessiongettransportstring getsession getprotocol
return username account mail host
return mail protocol
delegates underlying filetypemap getfiletypemap
return delegate filetypemap compiled mappings mapping file entries mappings property setmappinglocation setmappings createfiletypemap
compile filetypemap mappings given mapping file given mapping entries the default implementation creates activation framework mimetypesfiletypemap passing inputstream mapping resource if any registering mapping lines programmatically mappinglocation mimetypes mapping resource can null mappings array mime type mapping lines can null compiled filetypemap ioexception resource access failed javaxactivationmimetypesfiletypemapmimetypesfiletypemapjavaioinputstream javaxactivationmimetypesfiletypemapaddmimetypesstring
creates final merged mapping set
delegates underlying filetypemap getfiletypemap
return default encoding message null none
return default filetypemap message null none
create new smartmimemessage session javamail session create message defaultencoding default encoding null none defaultfiletypemap default filetypemap null none
set given text directly content nonmultipart mode default body part multipart mode html flag determines content type apply note invoke addinline after settext else mail readers might able resolve inline references correctly text text message html whether apply content type texthtml html mail using default content type textplain else messagingexception case errors
determine default java activation filetypemap given mimemessage mimemessage passedin mimemessage default filetypemap associated mimemessage default configurablemimefiletypemap none found message configurablemimefiletypemap
add attachment mimemessage taking content orgspringframeworkcoreioinputstreamresource the content type determined given filename attachment thus content source fine including temporary files arbitrary filenames note inputstream returned inputstreamsource implementation needs fresh one call javamail invoke getinputstream multiple times attachmentfilename name attachment appear mail inputstreamsource resource take content all springs resource implementations passed here messagingexception case errors addattachmentstring javaiofile addattachmentstring javaxactivationdatasource orgspringframeworkcoreioresource
determine default encoding given mimemessage mimemessage passedin mimemessage default encoding associated mimemessage null none found
determine mimemultipart objects use used store attachments one hand texts inline elements hand texts inline elements either stored root element multipartmodemixed multipartmoderelated nested element rather root element directly multipartmodemixedrelated by default root mimemultipart element type mixed multipartmodemixed related multipartmoderelated main multipart element either added nested element type related multipartmodemixedrelated identical root element multipartmodemixed multipartmoderelated mimemessage mimemessage object add root mimemultipart object multipartmode multipart mode passed constructor mixed related mixedrelated no messagingexception multipart creation failed setmimemultiparts multipartmodeno multipartmodemixed multipartmoderelated multipartmodemixedrelated
set given mimemultipart objects use mimemessagehelper root root mimemultipart object attachments added to null indicate multipart main main mimemultipart object texts inline elements added can root multipart object element nested underneath root multipart element
add attachment mimemessage taking content javaxactivationdatasource note inputstream returned datasource implementation needs fresh one call javamail invoke getinputstream multiple times attachmentfilename name attachment appear mail the content type determined this datasource javaxactivationdatasource take content from determining inputstream content type messagingexception case errors addattachmentstring orgspringframeworkcoreioinputstreamsource addattachmentstring javaiofile
add inline element mimemessage taking content javaiofile the content type determined name given content file use temporary files arbitrary filenames possibly ending tmp like note invoke addinline after settext else mail readers might able resolve inline references correctly contentid content id use end contentid header body part surrounded angle brackets eg myid myid referenced html source via srccidmyid expressions file file resource take content messagingexception case errors settext addinlinestring orgspringframeworkcoreioresource addinlinestring javaxactivationdatasource
add attachment mimemessage taking content javaiofile the content type determined name given content file use temporary files arbitrary filenames possibly ending tmp like attachmentfilename name attachment appear mail file file resource take content messagingexception case errors addattachmentstring orgspringframeworkcoreioinputstreamsource addattachmentstring javaxactivationdatasource
validate given mail addresses default implementation simply delegates validateaddress address addresses addresses validate addressexception validation failed validateaddressinternetaddress
add inline element mimemessage taking content javaxactivationdatasource note inputstream returned datasource implementation needs fresh one call javamail invoke getinputstream multiple times note invoke addinline after settext else mail readers might able resolve inline references correctly contentid content id use end contentid header body part surrounded angle brackets eg myid myid referenced html source via srccidmyid expressions datasource javaxactivationdatasource take content from determining inputstream content type messagingexception case errors addinlinestring javaiofile addinlinestring orgspringframeworkcoreioresource
return underlying mime multipartrelated object any used manually add body parts inline elements etc this nested within root mimemultipart case multipart mail illegalstateexception helper multipart mode ismultipart getrootmimemultipart javaxmailinternetmimemultipartaddbodypart
set given plain text html text alternatives offering options email client requires multipart mode note invoke addinline after settext else mail readers might able resolve inline references correctly plaintext plain text message htmltext html text message messagingexception case errors
set subject message using correct encoding subject subject text messagingexception case errors
create new mimemessagehelper given mimemessage multipart mode supporting alternative texts inline elements attachments requested consider using mimemessagehelper constructor takes multipartmode argument choose specific multipart mode multipartmodemixedrelated mimemessage mime message work multipart whether create multipart message supports alternative texts inline elements attachments corresponds multipartmodemixedrelated encoding character encoding use message messagingexception multipart creation failed mimemessagehelperjavaxmailinternetmimemessage int string
add attachment mimemessage taking content orgspringframeworkcoreioinputstreamresource note inputstream returned inputstreamsource implementation needs fresh one call javamail invoke getinputstream multiple times attachmentfilename name attachment appear mail inputstreamsource resource take content all springs resource implementations passed here contenttype content type use element messagingexception case errors addattachmentstring javaiofile addattachmentstring javaxactivationdatasource orgspringframeworkcoreioresource
create new mimemessagehelper given mimemessage multipart mode supporting alternative texts inline elements attachments requested mimemessage mime message work multipartmode kind multipart message create mixed related mixedrelated no encoding character encoding use message messagingexception multipart creation failed multipartmodeno multipartmodemixed multipartmoderelated multipartmodemixedrelated
return specific character encoding used message any
add inline element mimemessage taking content orgspringframeworkcoreinputstreamresource specifying content type explicitly you determine content type given filename via java activation frameworks filetypemap example one held helper note inputstream returned inputstreamsource implementation needs fresh one call javamail invoke getinputstream multiple times note invoke addinline after settext else mail readers might able resolve inline references correctly contentid content id use end contentid header body part surrounded angle brackets eg myid myid referenced html source via srccidmyid expressions inputstreamsource resource take content contenttype content type use element messagingexception case errors settext getfiletypemap addinlinestring orgspringframeworkcoreioresource addinlinestring javaxactivationdatasource
validate given mail address called mimemessagehelpers address setters adders default implementation invokes internetaddressvalidate provided address validation activated helper instance note method work javamail 13 override validation older javamail versions custom validation address address validate addressexception validation failed isvalidateaddresses javaxmailinternetinternetaddressvalidate
create new mimemessagehelper given mimemessage assuming simple text message no multipart content ie alternative texts inline elements attachments mimemessage mime message work encoding character encoding use message mimemessagehelperjavaxmailinternetmimemessage boolean
return root mime multipartmixed object any used manually add attachments this direct content mimemessage case multipart mail illegalstateexception helper multipart mode ismultipart getmimemessage javaxmailinternetmimemultipartaddbodypart
set sentdate message sentdate date set never null messagingexception case errors
add inline element mimemessage taking content orgspringframeworkcoreioresource the content type determined name given content file use temporary files arbitrary filenames possibly ending tmp like note inputstream returned resource implementation needs fresh one call javamail invoke getinputstream multiple times note invoke addinline after settext else mail readers might able resolve inline references correctly contentid content id use end contentid header body part surrounded angle brackets eg myid myid referenced html source via srccidmyid expressions resource resource take content messagingexception case errors settext addinlinestring javaiofile addinlinestring javaxactivationdatasource
create activation framework datasource given inputstreamsource inputstreamsource inputstreamsource typically spring resource contenttype content type name name datasource activation framework datasource
process specified freemarker template given model write result given writer when using method prepare text mail sent springs mail support consider wrapping iotemplateexception mailpreparationexception model model object typically map contains model names keys model objects values result string ioexception template wasnt found couldnt read freemarkertemplatetemplateexception rendering failed orgspringframeworkmailmailpreparationexception
prepare freemarker configuration return it freemarker configuration object ioexception config file wasnt found templateexception freemarker initialization failure
determine freemarker templateloader given path default implementation creates either filetemplateloader springtemplateloader templateloaderpath path load templates appropriate templateloader freemarkercachefiletemplateloader springtemplateloader
return templateloader based given templateloader list one templateloader registered freemarker multitemplateloader needs created templateloaders final list templateloader instances aggregate templateloader
create new springtemplateloader resourceloader spring resourceloader use templateloaderpath template loader path use
callback method notifying endpoint base class concrete endpoint invocation led exception to invoked subclasses case concrete endpoint throwing exception ex exception thrown concrete endpoint
set xa transaction manager use wrapping endpoint invocations enlisting endpoint resource transaction the passedin object may transaction manager implements springs orgspringframeworktransactionjtatransactionfactory interface plain javaxtransactiontransactionmanager if transaction manager specified endpoint invocation simply wrapped xa transaction check resource providers activationspec documentation local transaction options particular provider settransactionname settransactiontimeout
set name message endpoint populated bean name automatically defined within springs bean factory
standard jca 15 version createendpoint this implementation delegates createendpointinternal initializing endpoints xaresource endpoint gets invoked
implementation returns true transaction manager specified false otherwise settransactionmanager settransactionfactory
beforedelivery implementation starts transaction necessary exposes endpoint classloader current thread context classloader note jca 17 specification require resourceadapter call method invoking concrete endpoint method called check hasbeforedeliverybeencalled concrete endpoint method call beforedelivery sibling afterdelivery explicitly part processing
afterdelivery implementation resets thread context classloader completes transaction any note jca 17 specification require resourceadapter call method invoking concrete endpoint see explanation beforedeliverys javadoc
implementation jca 17 getendpointclass method returning null order indicate synthetic endpoint type
alternative jca 16 version createendpoint this implementation delegates createendpointinternal ignoring specified timeout jca 16 compliance
implementation jca 17 getactivationname method returning bean name set messageendpointfactory setbeanname
creates concrete generic message endpoint internal factory
return message listener object endpoint 50
wrap concrete endpoint instance aop proxy exposing message listeners interfaces well endpoint spi aop introduction
return jca resourceadapter manage endpoints for
return phase endpoint manager started stopped
return jca messageendpointfactory activate
deactivates message endpoint preparing shutdown
return whether configured message endpoint currently active
activates configured message endpoint
return value autostartup property true endpoint manager start upon contextrefreshedevent
return jca activationspec use activating endpoint
deactivates configured message endpoint
prepares message endpoint automatically activates autostartup flag set true
execute given work specified taskexecutor taskexecutor taskexecutor use work work execute starttimeout time duration within work supposed start blockuntilstarted whether block work started executioncontext jca executioncontext given work worklistener worklistener clal given work time elapsed work acceptance start execution or 1 applicable known workexception taskexecutor accept work
create new delegatingwork delegate runnable implementation delegate
delegates execution underlying runnable
specify jca bootstrapcontext contains workmanager delegate to
specify jca workmanager instance delegate to
create new simplebootstrapcontext given workmanager xaterminator workmanager jca workmanager use may null xaterminator jca xaterminator use may null
create new simplebootstrapcontext given workmanager xaterminator transactionsynchronizationregistry workmanager jca workmanager use may null xaterminator jca xaterminator use may null transactionsynchronizationregistry transactionsynchronizationregistry use may null 50
builds bootstrapcontext starts resourceadapter it javaxresourcespiresourceadapterstartjavaxresourcespibootstrapcontext
stops resourceadapter javaxresourcespiresourceadapterstop
create new ccilocaltransactionmanager instance connectionfactory cci connectionfactory manage local transactions
return cci connectionfactory instance manages local transactions for
set cci connectionfactory instance manage local transactions for
return target connectionfactory connectionfactory delegate to
obtain target connectionfactory actual use never null 50
reset underlying shared connection reinitialized next access
create cci connection via templates connectionfactory new cci connection javaxresourceresourceexception thrown cci api methods
initialize single underlying connection closes reinitializes connection underlying connection present already javaxresourceresourceexception thrown cci api methods
close underlying connection provider connectionfactory needs care proper shutdown as bean implements disposablebean bean factory automatically invoke destruction cached singletons
wrap given connection proxy delegates every method call suppresses close calls useful allowing application code handle special framework connection like ordinary connection cci connectionfactory target original connection wrap wrapped connection
close given connection con connection close
create new singleconnectionfactory always returns given connection target single connection
create new singleconnectionfactory always returns single connection lazily create via given target connectionfactory targetconnectionfactory target connectionfactory
make sure connection connectionfactory set
determine whether currently threadbound connectionspec using available falling back statically specified connectionspec property else dogetconnection
implementation delegates getconnectionconnectionspec method target connectionfactory passing specified user credentials specified username empty simply delegate standard getconnection method target connectionfactory spec connectionspec apply connection javaxresourcecciconnectionfactorygetconnectionjavaxresourcecciconnectionspec javaxresourcecciconnectionfactorygetconnection
determine whether given jca cci connection transactional is bound current thread springs transaction facilities con connection check cf connectionfactory connection obtained may null whether connection transactional
close given connection obtained given connectionfactory managed externally that is bound thread con connection close necessary if null call ignored cf connectionfactory connection obtained can null getconnection
actually close given connection obtained given connectionfactory releaseconnection throwing original resourceexception directly accessed transactionawareconnectionfactoryproxy con connection close necessary if null call ignored cf connectionfactory connection obtained can null resourceexception thrown jca cci methods dogetconnection
obtain connection given connectionfactory translates resourceexceptions spring hierarchy unchecked generic data access exceptions simplifying calling code making exception thrown meaningful is aware corresponding connection bound current thread example using ccilocaltransactionmanager bind connection thread transaction synchronization active eg jta transaction cf connectionfactory obtain connection spec connectionspec desired connection may null note specified new connection obtained every call without participating shared transactional connection cci connection given connectionfactory orgspringframeworkjcaccicannotgetcciconnectionexception attempt get connection failed releaseconnection
actually obtain cci connection given connectionfactory getconnection throwing original resourceexception is aware corresponding connection bound current thread example using ccilocaltransactionmanager bind connection thread transaction synchronization active eg jta transaction directly accessed transactionawareconnectionfactoryproxy cf connectionfactory obtain connection cci connection given connectionfactory resourceexception thrown cci api methods doreleaseconnection
create new transactionawareconnectionfactoryproxy targetconnectionfactory target connectionfactory
wrap given connection proxy delegates every method call delegates close calls connectionfactoryutils target original connection wrap cf connectionfactory connection came wrapped connection javaxresourcecciconnectionclose connectionfactoryutilsdoreleaseconnection
delegate connectionfactoryutils automatically participating springmanaged transactions throws original resourceexception any transactional connection any new one else orgspringframeworkjcacciconnectionconnectionfactoryutilsdogetconnection
set ccitemplate used operation alternatively specify cci connectionfactory setconnectionfactory
return cci interactionspec operation
execute interaction encapsulated operation object inputobject input data converted record createinputrecord method output data extracted extractoutputdata method dataaccessexception problem createinputrecord extractoutputdata
convenient constructor connectionfactory specifications connection interaction connectionfactory connectionfactory use obtain connections
execute cci interaction encapsulated operation object this method call ccis interactionexecute variant passedin output record inputrecord input record outputrecord output record dataaccessexception problem javaxresourcecciinteractionexecutejavaxresourcecciinteractionspec record record
convenient constructor connectionfactory specifications connection interaction connectionfactory connectionfactory use obtain connections
execute cci interaction encapsulated operation object this method call ccis interactionexecute variant returns output record inputrecord input record output record dataaccessexception problem javaxresourcecciinteractionexecutejavaxresourcecciinteractionspec record
return cci connectionspec used template any
construct new ccitemplate given connectionfactory obtain connections from note trigger eager initialization exception translator connectionfactory jca connectionfactory obtain connections
create mapped record connectionfactorys recordfactory name record name record dataaccessexception creation record failed getrecordfactoryjavaxresourcecciconnectionfactory javaxresourceccirecordfactorycreatemappedrecordstring
return recordfactory given connectionfactory default implementation returns connectors recordfactory available falling back notsupportedrecordfactory placeholder allows invoke recordcreator callback nonnull recordfactory reference case connectionfactory cci connectionfactory cci recordfactory connectionfactory resourceexception thrown cci methods orgspringframeworkjcacciconnectionnotsupportedrecordfactory
construct new ccitemplate given connectionfactory obtain connections from note trigger eager initialization exception translator connectionfactory jca connectionfactory obtain connections connectionspec cci connectionspec obtain connections may null
close given cci resultset ignore thrown exception useful typical finally blocks manual cci code resultset cci resultset close javaxresourcecciresultsetclose
create indexed record connectionfactorys recordfactory name name record record dataaccessexception creation record failed getrecordfactoryjavaxresourcecciconnectionfactory javaxresourceccirecordfactorycreateindexedrecordstring
return recordcreator used creating default output records
execute specified interaction eis cci interaction execution methods go this spec cci interactionspec instance defines interaction connectorspecific inputrecord input record outputrecord output record can null outputextractor object convert output record result object output data extracted recordextractor object dataaccessexception problem
return cci connectionfactory used template
close given cci interaction ignore thrown exception useful typical finally blocks manual cci code interaction cci interaction close javaxresourcecciinteractionclose
invoke given recordcreator converting jca resourceexceptions springs dataaccessexception hierarchy recordcreator recordcreator invoke created record dataaccessexception creation record failed getrecordfactoryjavaxresourcecciconnectionfactory recordcreatorcreaterecordjavaxresourceccirecordfactory
create template derived template instance inheriting connectionfactory settings overriding connectionspec used obtaining connections connectionspec cci connectionspec derived template instance supposed obtain connections derived template instance setconnectionspec
return connectionfactory used dao
set connectionfactory used dao
get cci connection either current transaction new one cci connection orgspringframeworkjcaccicannotgetcciconnectionexception attempt get connection failed orgspringframeworkjcacciconnectionconnectionfactoryutilsgetconnectionjavaxresourcecciconnectionfactory
return ccitemplate dao preinitialized connectionfactory set explicitly
obtain ccitemplate derived main template instance inheriting connectionfactory settings overriding connectionspec used obtaining connections connectionspec cci connectionspec returned template instance supposed obtain connections derived template instance orgspringframeworkjcaccicoreccitemplategetderivedtemplatejavaxresourcecciconnectionspec
create new resourceadapterapplicationcontext given bootstrapcontext bootstrapcontext jca bootstrapcontext resourceadapter started
implementation loads spring applicationcontext createapplicationcontext template method
implementation always returns null
build spring applicationcontext given jca bootstrapcontext the default implementation builds resourceadapterapplicationcontext delegates loadbeandefinitions actually parsing specified configuration files bootstrapcontext resourceadapters bootstrapcontext spring applicationcontext instance
implementation always throws notsupportedexception
implementation closes spring applicationcontext
constructor incorrectresultsizedataaccessexception msg detail message expectedsize expected result size
constructor incorrectresultsizedataaccessexception msg detail message expectedsize expected result size actualsize actual result size or 1 unknown ex wrapped exception
constructor incorrectresultsizedataaccessexception expectedsize expected result size actualsize actual result size or 1 unknown
constructor incorrectresultsizedataaccessexception msg detail message expectedsize expected result size ex wrapped exception
constructor incorrectresultsizedataaccessexception expectedsize expected result size
constructor incorrectresultsizedataaccessexception msg detail message expectedsize expected result size actualsize actual result size or 1 unknown
return unique long result given collection throws exception 0 1 result objects found unique result object convertible long results result collection can null expected contain null elements unique long result incorrectresultsizedataaccessexception one result object found given collection emptyresultdataaccessexception result object found given collection typemismatchdataaccessexception unique object collection convertible long
return translated exception appropriate otherwise return given exception asis rawexception exception may wish translate pet persistenceexceptiontranslator use perform translation translated persistence exception translation possible raw exception
return unique result object given collection returns null 0 result objects found throws exception 1 instance found results result collection can null unique result object null none incorrectresultsizedataaccessexception one result object found given collection orgspringframeworkutilcollectionutilshasuniqueobject
return unique result object given collection throws exception 0 1 instance found results result collection can null expected contain null elements unique result object incorrectresultsizedataaccessexception one result object found given collection emptyresultdataaccessexception result object found given collection orgspringframeworkutilcollectionutilshasuniqueobject
return single result object given collection throws exception 0 1 element found results result collection can null also expected contain null elements single result object incorrectresultsizedataaccessexception one element found given collection emptyresultdataaccessexception element found given collection 502
return unique int result given collection throws exception 0 1 result objects found unique result object convertible int results result collection can null expected contain null elements unique int result incorrectresultsizedataaccessexception one result object found given collection emptyresultdataaccessexception result object found given collection typemismatchdataaccessexception unique object collection convertible int
return single result object given collection returns null 0 result objects found throws exception 1 element found results result collection can null single result object null none incorrectresultsizedataaccessexception one element found given collection
return unique result object given collection throws exception 0 1 result objects found unique result object convertible specified required type results result collection can null expected contain null elements unique result object incorrectresultsizedataaccessexception one result object found given collection emptyresultdataaccessexception result object found given collection typemismatchdataaccessexception unique object match specified required type
return single result object given collection throws exception 0 1 element found results result collection can null expected contain null elements single result object incorrectresultsizedataaccessexception one element found given collection emptyresultdataaccessexception element found given collection
detect persistenceexceptiontranslators given beanfactory beanfactory listablebeanfactory obtaining persistenceexceptiontranslators chained persistenceexceptiontranslator combining persistenceexceptiontranslators found factory chainedpersistenceexceptiontranslator
create new persistenceexceptiontranslationinterceptor given persistenceexceptiontranslator pet persistenceexceptiontranslator use
create new persistenceexceptiontranslationinterceptor autodetecting persistenceexceptiontranslators given beanfactory beanfactory listablebeanfactory obtaining persistenceexceptiontranslators
add persistenceexceptiontranslator chained delegate list
create new persistenceexceptiontranslationadvisor beanfactory listablebeanfactory obtaining persistenceexceptiontranslators repositoryannotationtype annotation type check
create new persistenceexceptiontranslationadvisor persistenceexceptiontranslator persistenceexceptiontranslator use repositoryannotationtype annotation type check
set repository annotation type default repository annotation type repository annotation this setter property exists developers provide nonspringspecific annotation type indicate class repository role repositoryannotationtype desired annotation type
return exception first thrown within failed transaction ie application exception any transactionsystemexceptions cause original exception null none
set application exception thrown transaction exception preserving original exception despite overriding transactionsystemexception ex application exception illegalstateexception transactionsystemexception already holds application exception
return application exception thrown transaction exception any application exception null none set
constructor invalidtimeoutexception msg detail message timeout invalid timeout value
constructor heuristiccompletionexception outcomestate outcome state transaction cause root cause transaction api use
return qualifier value associated transaction attribute 30
default behavior ejb rollback unchecked exception runtimeexception assuming unexpected outcome outside business rules additionally also attempt rollback error clearly unexpected outcome well contrast checked exception considered business exception therefore regular expected outcome transactional business method ie kind alternative return value still allows regular completion resource operations this largely consistent transactiontemplates default behavior except transactiontemplate also rolls back undeclared checked exceptions a corner case declarative transactions expect checked exceptions intentionally declared business exceptions leading commit default orgspringframeworktransactionsupporttransactiontemplateexecute
return descriptor transaction attribute null none 434
return identifying description transaction attribute available subclasses inclusion tostring result
add attribute transactional method method names end start matching multiple methods clazz target interface class mappedname mapped method name attr attribute associated method
add attribute transactional method method method attr attribute associated method
add attribute transactional method method names end start matching multiple methods name class method name separated attr attribute associated method illegalargumentexception case invalid name
initialize specified setmethodmapjavautilmap methodmap any methodmap map method names transactionattribute instances setmethodmap
eagerly initializes specified setmethodmapjavautilmap methodmap any initmethodmapjavautilmap
check required properties set
create transaction necessary based given transactionattribute allows callers perform custom transactionattribute lookups transactionattributesource txattr transactionattribute may null joinpointidentification fully qualified method name used monitoring logging purposes transactioninfo object whether transaction created hastransaction method transactioninfo used tell transaction created gettransactionattributesource
determine specific transaction manager use given transaction
return transaction status current method invocation mainly intended code wants set current transaction rollbackonly throw application exception notransactionexception transaction info cannot found method invoked outside aop invocation context
return default transaction manager null unknown
convenience method return string representation method use logging overridden subclasses provide different identifier given method the default implementation returns null indicating use defaulttransactionattributegetdescriptor instead ending classutilsgetqualifiedmethodnamemethod class method method were interested targetclass class method invoked string representation identifying method orgspringframeworkutilclassutilsgetqualifiedmethodname
general delegate aroundadvicebased subclasses delegating several template methods class able handle callbackpreferringplatformtransactionmanager well regular platformtransactionmanager implementations method method invoked targetclass target class were invoking method invocation callback use proceeding target invocation return value method throwable propagated target invocation
handle throwable completing transaction may commit roll back depending configuration txinfo information current transaction ex throwable encountered
set beanfactory use retrieving platformtransactionmanager beans
clear cache
set properties method names keys transaction attribute descriptors parsed via transactionattributeeditor values eg key mymethod value propagationrequiredreadonly note method names always applied target class matter defined interface class itself internally namematchtransactionattributesource created given properties settransactionattributesource transactionattributeeditor namematchtransactionattributesource
return name default transaction manager bean
reset transactioninfo threadlocal call cases exception normal return txinfo information current transaction may null
return beanfactory use retrieving platformtransactionmanager beans
subclasses use return current transactioninfo subclasses cannot handle operations one method aspectj aspect involving distinct advice need use mechanism get current transactioninfo around advice aop alliance methodinterceptor hold reference transactioninfo throughout aspect method a transactioninfo returned even transaction created transactioninfohastransaction method used query this to find specific transaction characteristics consider using transactionsynchronizationmanagers issynchronizationactive andor isactualtransactionactive methods transactioninfo bound thread null none transactioninfohastransaction orgspringframeworktransactionsupporttransactionsynchronizationmanagerissynchronizationactive orgspringframeworktransactionsupporttransactionsynchronizationmanagerisactualtransactionactive
execute successful completion call exception handled nothing didnt create transaction txinfo information current transaction
prepare transactioninfo given attribute status object txattr transactionattribute may null joinpointidentification fully qualified method name used monitoring logging purposes status transactionstatus current transaction prepared transactioninfo object
return transaction attribute source
create new transactioninterceptor ptm default transaction manager perform actual transaction management attributes transaction attributes properties format settransactionmanager settransactionattributesjavautilproperties
create new transactioninterceptor ptm default transaction manager perform actual transaction management tas attribute source used find transaction attributes settransactionmanager settransactionattributesourcetransactionattributesource
create new instance rollbackruleattribute class given exceptionname this substring wildcard support present value servletexception would match javaxservletservletexception subclasses example nb consider carefully specific pattern is whether include package information which mandatory example exception match nearly anything probably hide rules javalangexception would correct exception meant define rule checked exceptions unusual exception names basebusinessexception theres need use fully packagequalified name exceptionname exception name pattern also fully packagequalified class name illegalargumentexception supplied exceptionname null empty
create new instance rollbackruleattribute class this preferred way construct rollback rule matches supplied exception class and subclasses clazz throwable class must throwable subclass throwable illegalargumentexception supplied clazz throwable type null
parses given properties nameattribute map expects method names keys string attributes definitions values parsable transactionattribute instances via transactionattributeeditor setnamemap transactionattributeeditor
add attribute transactional method method names exact matches pattern xxx xxx xxx matching multiple methods methodname name method attr attribute associated method
create delegatingtransactionattribute given target attribute targetattribute target transactionattribute delegate
create new defaulttransactionattribute given propagation behavior modified bean property setters propagationbehavior one propagation constants transactiondefinition interface rollbackrules list rollbackruleattributes apply setisolationlevel settimeout setreadonly
copy constructor definition modified bean property setters setpropagationbehavior setisolationlevel settimeout setreadonly setname setrollbackrules
return list rollbackruleattribute objects never null
winning rule shallowest rule that is closest inheritance hierarchy exception rule applies 1 return false transactionattributerollbackonjavalangthrowable
format propagationnameisolationnamereadonlytimeoutnnnnexception1exception2 null empty string means method non transactional javabeanspropertyeditorsetastextjavalangstring
creates advisor factorybeans transactioninterceptor
42 method adds transactionalproxy set proxy interfaces order avoid reprocessing transaction metadata
callback optional running beanfactory transaction manager set explicitly single matching bean type platformtransactionmanager fetched beanfactory orgspringframeworkbeansfactorybeanfactorygetbeanclass orgspringframeworktransactionplatformtransactionmanager
determine transaction attribute method invocation defaults classs transaction attribute method attribute found method method current invocation never null targetclass target class invocation may null transactionattribute method null method transactional
signature gettransactionattribute doesnt cache result gettransactionattribute effectively caching decorator method as 418 method overridden 418 gettransactionattribute
create new compositetransactionattributesource given sources transactionattributesources transactionattributesource instances combine
parses tag aopnamespaceutilsregisterautoproxycreatorifnecessary register autoproxycreator container necessary
copy constructor definition modified bean property setters setpropagationbehavior setisolationlevel settimeout setreadonly setname
set isolation level must one isolation constants transactiondefinition interface default isolationdefault exclusively designed use propagationrequired propagationrequiresnew since applies newly started transactions consider switching validateexistingtransactions flag true transaction manager youd like isolation level declarations get rejected participating existing transaction different isolation level note transaction manager support custom isolation levels throw exception given level isolationdefault illegalargumentexception supplied value one isolation constants isolationdefault
set propagation behavior must one propagation constants transactiondefinition interface default propagationrequired exclusively designed use propagationrequired propagationrequiresnew since applies newly started transactions consider switching validateexistingtransactions flag true transaction manager youd like isolation level declarations get rejected participating existing transaction different isolation level note transaction manager support custom isolation levels throw exception given level isolationdefault illegalargumentexception supplied value one propagation constants propagationrequired
set timeout apply number seconds default timeoutdefault 1 exclusively designed use propagationrequired propagationrequiresnew since applies newly started transactions note transaction manager support timeouts throw exception given timeout timeoutdefault timeoutdefault
implementation returns tostrings hash code tostring
set isolation level name corresponding constant transactiondefinition eg isolationdefault constantname name constant illegalargumentexception supplied value resolvable one isolation constants null setisolationlevel isolationdefault
set propagation behavior name corresponding constant transactiondefinition eg propagationrequired constantname name constant illegalargumentexception supplied value resolvable one propagation constants null setpropagationbehavior propagationrequired
implementation compares tostring results tostring
return identifying description transaction definition available subclasses inclusion tostring result
return identifying description transaction definition the format matches one used orgspringframeworktransactioninterceptortransactionattributeeditor able feed tostring results bean properties type orgspringframeworktransactioninterceptortransactionattribute has overridden subclasses correct equals hashcode behavior alternatively equals hashcode overridden themselves getdefinitiondescription orgspringframeworktransactioninterceptortransactionattributeeditor
implementation exposes savepointmanager interface underlying transaction object any nestedtransactionnotsupportedexception savepoints supported istransactionsavepointmanager
create new defaulttransactionstatus instance transaction underlying transaction object hold state internal transaction implementation newtransaction transaction new otherwise participating existing transaction newsynchronization new transaction synchronization opened given transaction readonly whether transaction marked readonly debug debug logging enabled handling transaction caching prevent repeated calls ask logging system whether debug logging enabled suspendedresources holder resources suspended transaction
delegate flushing transaction object provided latter implements smarttransactionobject interface smarttransactionobjectflush
return underlying transaction object illegalstateexception transaction active
return holder resources suspended transaction any
determine rollbackonly flag via checking transaction object provided latter implements smarttransactionobject interface will return true global transaction marked rollbackonly transaction coordinator example case timeout smarttransactionobjectisrollbackonly
return expiration deadline object deadline date object
return time live object milliseconds number milliseconds expiration transactiontimedoutexception deadline already reached
reset resource holder transactional state well reference count
return time live object seconds rounds eagerly eg 900001 still 10 number seconds expiration transactiontimedoutexception deadline already reached
set transaction rollbackonly deadline reached throw transactiontimedoutexception
clear transactional state resource holder
return isolation level current transaction any called resource management code preparing newly created resource for example jdbc connection currently exposed isolation level according jdbc connection constants equivalent corresponding spring transactiondefinition constants null none javasqlconnectiontransactionreaduncommitted javasqlconnectiontransactionreadcommitted javasqlconnectiontransactionrepeatableread javasqlconnectiontransactionserializable orgspringframeworktransactiontransactiondefinitionisolationreaduncommitted orgspringframeworktransactiontransactiondefinitionisolationreadcommitted orgspringframeworktransactiontransactiondefinitionisolationrepeatableread orgspringframeworktransactiontransactiondefinitionisolationserializable orgspringframeworktransactiontransactiondefinitiongetisolationlevel
actually remove value resource bound given key
unbind resource given key current thread key key unbind usually resource factory previously bound value usually active resource object illegalstateexception value bound thread resourcetransactionmanagergetresourcefactory
deactivate transaction synchronization current thread called transaction manager transaction cleanup illegalstateexception synchronization active
return resources bound current thread mainly debugging purposes resource managers always invoke hasresource specific resource key interested in map resource keys usually resource factory resource values usually active resource object empty map currently resources bound hasresource
unbind resource given key current thread key key unbind usually resource factory previously bound value null none bound
actually check value resource bound given key
return name current transaction null none set called resource management code optimizations per use case example optimize fetch strategies specific named transactions orgspringframeworktransactiontransactiondefinitiongetname
bind given resource given key current thread key key bind value usually resource factory value value bind usually active resource object illegalstateexception already value bound thread resourcetransactionmanagergetresourcefactory
activate transaction synchronization current thread called transaction manager transaction begin illegalstateexception synchronization already active
retrieve resource given key bound current thread key key check usually resource factory value bound current thread usually active resource object null none resourcetransactionmanagergetresourcefactory
register new transaction synchronization current thread typically called resource management code note synchronizations implement orgspringframeworkcoreordered interface executed order according order value if any synchronization synchronization object register illegalstateexception transaction synchronization active orgspringframeworkcoreordered
return unmodifiable snapshot list registered synchronizations current thread unmodifiable list transactionsynchronization instances illegalstateexception synchronization active transactionsynchronization
clear entire transaction synchronization state current thread registered synchronizations well various transaction characteristics clearsynchronization setcurrenttransactionname setcurrenttransactionreadonly setcurrenttransactionisolationlevel setactualtransactionactive
check resource given key bound current thread key key check usually resource factory value bound current thread resourcetransactionmanagergetresourcefactory
create new resourceholdersynchronization given holder resourceholder resourceholder manage resourcekey key bind resourceholder transactionsynchronizationmanagerbindresource
trigger flush callbacks currently registered synchronizations runtimeexception thrown flush callback transactionsynchronizationflush
unwrap given resource handle necessary otherwise return given handle asis orgspringframeworkcoreinfrastructureproxygetwrappedobject
actually invoke aftercommit methods given spring transactionsynchronization objects synchronizations list transactionsynchronization objects transactionsynchronizationaftercommit
trigger beforecommit callbacks currently registered synchronizations readonly whether transaction defined readonly transaction runtimeexception thrown beforecommit callback transactionsynchronizationbeforecommitboolean
trigger beforecompletion callbacks currently registered synchronizations transactionsynchronizationbeforecompletion
trigger aftercompletion callbacks currently registered synchronizations completionstatus completion status according constants transactionsynchronization interface transactionsynchronizationmanagergetsynchronizations transactionsynchronizationaftercompletionint transactionsynchronizationstatuscommitted transactionsynchronizationstatusrolledback transactionsynchronizationstatusunknown
actually invoke aftercompletion methods given spring transactionsynchronization objects synchronizations list transactionsynchronization objects completionstatus completion status according constants transactionsynchronization interface transactionsynchronizationaftercompletionint transactionsynchronizationstatuscommitted transactionsynchronizationstatusrolledback transactionsynchronizationstatusunknown
trigger aftercommit callbacks status object representing transaction
implementation rollback handles participating existing transactions delegates dorollback dosetrollbackonly dorollback dosetrollbackonly
trigger beforecommit callbacks status object representing transaction
implementation commit handles participating existing transactions programmatic rollback requests delegates isrollbackonly docommit rollback orgspringframeworktransactiontransactionstatusisrollbackonly docommit rollback
suspend resources current transaction transaction synchronization already suspended the default implementation throws transactionsuspensionnotsupportedexception assuming transaction suspension generally supported transaction transaction object returned dogettransaction object holds suspended resources will kept unexamined passing doresume orgspringframeworktransactiontransactionsuspensionnotsupportedexception suspending supported transaction manager implementation transactionexception case system errors doresume
set given transaction rollbackonly called rollback current transaction participates existing one the default implementation throws illegaltransactionstateexception assuming participating existing transactions generally supported subclasses course encouraged provide support status status representation transaction transactionexception case system errors
suspend current synchronizations deactivate transaction synchronization current thread list suspended transactionsynchronization objects
process actual commit rollbackonly flags already checked applied status object representing transaction transactionexception case commit failure
create transactionstatus instance given arguments
determine actual timeout use given definition fall back managers default timeout transaction definition doesnt specify nondefault value definition transaction definition actual timeout use orgspringframeworktransactiontransactiondefinitiongettimeout setdefaulttimeout
trigger aftercompletion callbacks status object representing transaction completionstatus completion status according transactionsynchronization constants
register given list transaction synchronizations existing transaction invoked control spring transaction manager thus spring transaction synchronizations end without transaction completed yet example case participating existing jta ejb cmt transaction the default implementation simply invokes aftercompletion methods immediately passing statusunknown best theres chance determine actual outcome outer transaction transaction transaction object returned dogettransaction synchronizations list transactionsynchronization objects transactionexception case system errors invokeaftercompletionjavautillist int transactionsynchronizationaftercompletionint transactionsynchronizationstatusunknown
process actual rollback completed flag already checked status object representing transaction transactionexception case rollback failure
trigger beforecompletion callbacks status object representing transaction
resume resources current transaction transaction synchronization resumed afterwards the default implementation throws transactionsuspensionnotsupportedexception assuming transaction suspension generally supported transaction transaction object returned dogettransaction suspendedresources object holds suspended resources returned dosuspend orgspringframeworktransactiontransactionsuspensionnotsupportedexception resuming supported transaction manager implementation transactionexception case system errors dosuspend
create new transactionstatus given arguments also initializing transaction synchronization appropriate newtransactionstatus preparetransactionstatus
initialize transaction synchronization appropriate
create transactionstatus existing transaction
implementation handles propagation behavior delegates dogettransaction isexistingtransaction dobegin dogettransaction isexistingtransaction dobegin
clean completion clearing synchronization necessary invoking docleanupaftercompletion status object representing transaction docleanupaftercompletion
resume given transaction delegates doresume template method first resuming transaction synchronization transaction current transaction object resourcesholder object holds suspended resources returned suspend or null resume synchronizations any doresume suspend
specify default timeout transaction manager apply timeout specified transaction level seconds default underlying transaction infrastructures default timeout eg typically 30 seconds case jta provider indicated transactiondefinitiontimeoutdefault value orgspringframeworktransactiontransactiondefinitiontimeoutdefault
reactivate transaction synchronization current thread resume given synchronizations suspendedsynchronizations list transactionsynchronization objects
suspend given transaction suspends transaction synchronization first delegates dosuspend template method transaction current transaction object or null suspend active synchronizations any object holds suspended resources or null neither transaction synchronization active dosuspend resume
resume outer transaction inner transaction begin failed
invoke dorollback handling rollback exceptions properly status object representing transaction ex thrown application exception error transactionexception case rollback failure dorollback
return transaction management strategy used
perform rollback handling rollback exceptions properly status object representing transaction ex thrown application exception error transactionexception case rollback error
construct new transactiontemplate using given transaction manager taking default settings given transaction definition transactionmanager transaction management strategy used transactiondefinition transaction definition copy default settings from local properties still set change values
create delegatingtransactionattribute given target attribute targetdefinition target transactionattribute delegate
release savepoint held transaction
implementation delegates savepointmanager underlying transaction possible getsavepointmanager savepointmanagercreatesavepoint
implementation delegates savepointmanager underlying transaction possible getsavepointmanager savepointmanagerrollbacktosavepointobject
roll back savepoint held transaction release savepoint right afterwards
get savepoint transaction any
implementation delegates savepointmanager underlying transaction possible getsavepointmanager savepointmanagerreleasesavepointobject
determine rollbackonly flag via checking local rollbackonly flag transactionstatus global rollbackonly flag underlying transaction any islocalrollbackonly isglobalrollbackonly
returns proxytransactionmanagementconfiguration aspectjjtatransactionmanagementconfiguration proxy aspectj values enabletransactionmanagementmode respectively
create custom annotationtransactionattributesource annotationparsers transactionannotationparsers use
create custom annotationtransactionattributesource supporting public methods carry transactional annotation ejb3 javaxejbtransactionattribute annotation publicmethodsonly whether support public methods carry transactional annotation typically use proxybased aop protectedprivate methods well typically used aspectj class weaving
default public methods made transactional
create custom annotationtransactionattributesource annotationparser transactionannotationparser use
determine transaction attribute given method class this implementation delegates configured transactionannotationparser transactionannotationparsers parsing known annotations springs metadata attribute class returns null its transactional can overridden support custom annotations carry transaction metadata element annotated method class configured transaction attribute null none found
create custom annotationtransactionattributesource annotationparsers transactionannotationparsers use
create new simpletransactionfactory given transactionmanager transactionmanager jta transactionmanager wrap
implementation checks usertransactions rollbackonly flag
implementation triggers flush callbacks assuming flush affected orm sessions orgspringframeworktransactionsupporttransactionsynchronizationflush
create new springjtasynchronizationadapter given spring transactionsynchronization jta transactionmanager note adapter never perform rollbackonly call weblogic since weblogic server known automatically mark transaction rollbackonly case beforecompletion exception hence wls constructor equivalent singlearg constructor springsynchronization spring transactionsynchronization delegate jtatransactionmanager jta transactionmanager use rollbackonly setting case exception thrown beforecompletion can omitted jta provider marks transaction rollbackonly scenario required jta specification jta 11
create new springjtasynchronizationadapter given spring transactionsynchronization jta transactionmanager note adapter never perform rollbackonly call weblogic since weblogic server known automatically mark transaction rollbackonly case beforecompletion exception hence wls constructor equivalent singlearg constructor springsynchronization spring transactionsynchronization delegate jtausertransaction jta usertransaction use rollbackonly setting case exception thrown beforecompletion can omitted jta provider marks transaction rollbackonly scenario required jta specification jta 11
set underlying jta transaction rollbackonly
create new springjtasynchronizationadapter given spring transactionsynchronization jta transactionmanager springsynchronization spring transactionsynchronization delegate
jta aftercompletion callback invoked commitrollback needs invoke spring synchronizations beforecompletion late stage case rollback since corresponding callback jta orgspringframeworktransactionsupporttransactionsynchronizationbeforecompletion orgspringframeworktransactionsupporttransactionsynchronizationaftercompletion
jta beforecompletion callback invoked commit in case exception jta transaction marked rollbackonly orgspringframeworktransactionsupporttransactionsynchronizationbeforecommit
create new usertransactionadapter given transactionmanager transactionmanager jta transactionmanager wrap
registers synchronizations interposed jta synchronization uowmanager
look websphere uowmanager jndi via configured name uowmanagername jndi name uowmanager uowmanager object transactionsystemexception jndi lookup failed setjnditemplate setuowmanagername
create new websphereuowtransactionmanager given uowmanager uowmanager websphere uowmanager use direct reference
returns true since websphere resourceadapters as exposed jndi implicitly perform transaction enlistment messageendpointfactorys isdeliverytransacted method returns true case well simply skip createtransaction call javaxresourcespiendpointmessageendpointfactoryisdeliverytransacted orgspringframeworkjcaendpointabstractmessageendpointfactory transactionfactorycreatetransaction
obtain websphere uowmanager default jndi location javacompwebsphereuowmanager uowmanager object transactionsystemexception jndi lookup failed setjnditemplate
apply given transaction timeout default implementation call usertransactionsettransactiontimeout nondefault timeout value txobject jtatransactionobject containing usertransaction timeout timeout value taken transaction definition systemexception thrown jta implementation dojtabegin jtatransactionobjectgetusertransaction javaxtransactionusertransactionsettransactiontimeoutint
initialize jta 11 transactionsynchronizationregistry available to called initusertransactionandtransactionmanager since may check usertransaction transactionmanager handles transactionsystemexception initialization failed
initialize usertransaction well transactionmanager handle initusertransactionandtransactionmanager
find jta transactionmanager autodetection checking whether usertransaction object implements transactionmanager checking fallback jndi locations ut jta usertransaction object jta transactionmanager reference null found fallbacktransactionmanagernames
perform jta begin jta usertransaction transactionmanager this implementation supports standard jta functionality is pertransaction isolation levels transaction names overridden subclasses specific jta implementations calls applyisolationlevel applytimeout invoking usertransactions begin method txobject jtatransactionobject containing usertransaction definition transactiondefinition instance describing propagation behavior isolation level readonly flag timeout transaction name notsupportedexception thrown jta methods systemexception thrown jta methods getusertransaction gettransactionmanager applyisolationlevel applytimeout jtatransactionobjectgetusertransaction javaxtransactionusertransactionsettransactiontimeout javaxtransactionusertransactionbegin
check usertransaction well transactionmanager handle assuming standard jta requirements illegalstateexception sufficient handles available
find jta usertransaction default jndi lookup javacompusertransaction jta usertransaction reference null found defaultusertransactionname
build usertransaction handle based given transactionmanager transactionmanager transactionmanager corresponding usertransaction handle
implementation returns false cause invocation dobegin despite already existing transaction jta implementations might support nested transactions via usertransactionbegin invocations never support savepoints dobegin javaxtransactionusertransactionbegin
look jta transactionmanager jndi via configured name called afterpropertiesset direct transactionmanager reference set overridden subclasses provide different transactionmanager object transactionmanagername jndi name transactionmanager usertransaction object transactionsystemexception jndi lookup failed setjnditemplate settransactionmanagername
return jta 11 transactionsynchronizationregistry transaction manager uses any
return jndi environment use jndi lookups
create new jtatransactionmanager instance transactionmanager jta transactionmanager use direct reference
register jta synchronization jta transactionmanager calling aftercompletion given spring transactionsynchronizations the default implementation registers synchronizations jta 11 transactionsynchronizationregistry available jta transactionmanagers current transaction again available none two available warning logged can overridden subclasses specific jta implementations txobject current transaction object synchronizations list transactionsynchronization objects rollbackexception thrown jta methods systemexception thrown jta methods gettransactionmanager javaxtransactiontransactionregistersynchronization javaxtransactiontransactionsynchronizationregistryregisterinterposedsynchronization
initialize usertransaction well transactionmanager handle transactionsystemexception initialization failed
look jta usertransaction jndi via configured name called afterpropertiesset direct usertransaction reference set overridden subclasses provide different usertransaction object usertransactionname jndi name usertransaction usertransaction object transactionsystemexception jndi lookup failed setjnditemplate setusertransactionname
find jta 11 transactionsynchronizationregistry autodetection checking whether usertransaction object transactionmanager object implements it checking java ee 5s standard jndi location the default implementation simply returns null ut jta usertransaction object tm jta transactionmanager object jta transactionsynchronizationregistry handle use null none found transactionsystemexception case errors
perform jta resume jta transactionmanager can overridden subclasses specific jta implementations txobject jtatransactionobject containing usertransaction suspendedtransaction suspended jta transaction object invalidtransactionexception thrown jta methods systemexception thrown jta methods gettransactionmanager javaxtransactiontransactionmanagerresumejavaxtransactiontransaction
implementation returns true jta commit properly handle transactions marked rollbackonly global level
allows subclasses retrieve jta usertransaction vendorspecific manner called usertransaction usertransactionname specified the default implementation simply returns null jta usertransaction handle use null none found transactionsystemexception case errors setusertransaction setusertransactionname
return jta transactionmanager transaction manager uses any
create new jtatransactionmanager instance usertransaction jta usertransaction use direct reference
apply given transaction isolation level default implementation throw exception level isolationdefault to overridden subclasses specific jta implementations alternative overriding full dojtabegin method txobject jtatransactionobject containing usertransaction isolationlevel isolation level taken transaction definition invalidisolationlevelexception given isolation level cannot applied systemexception thrown jta implementation dojtabegin jtatransactionobjectgetusertransaction gettransactionmanager
return jta usertransaction transaction manager uses
set jnditemplate use jndi lookups default one used set
implementation returns jtatransactionobject instance jta usertransaction the usertransaction object either looked freshly current transaction cached one looked startup used latter default application servers use shared singleton usertransaction cached turn cacheusertransaction flag enforce fresh lookup every transaction setcacheusertransaction
allows subclasses retrieve jta 11 transactionsynchronizationregistry vendorspecific manner the default implementation simply returns null jta transactionsynchronizationregistry handle use null none found transactionsystemexception case errors
allows subclasses retrieve jta transactionmanager vendorspecific manner called transactionmanager transactionmanagername specified the default implementation simply returns null jta transactionmanager handle use null none found transactionsystemexception case errors settransactionmanager settransactionmanagername
look jta 11 transactionsynchronizationregistry jndi via configured name can overridden subclasses provide different transactionmanager object registryname jndi name transactionsynchronizationregistry transactionsynchronizationregistry object transactionsystemexception jndi lookup failed setjnditemplate settransactionsynchronizationregistryname
perform jta suspend jta transactionmanager can overridden subclasses specific jta implementations txobject jtatransactionobject containing usertransaction suspended jta transaction object systemexception thrown jta methods gettransactionmanager javaxtransactiontransactionmanagersuspend
create new jtatransactionmanager instance usertransaction jta usertransaction use direct reference transactionmanager jta transactionmanager use direct reference
create new managedtransactionadapter given transactionmanager transactionmanager jta transactionmanager wrap
build native xstream delegate used marshaller delegating constructxstream configurexstream customizexstream
configure xstream instance marshallers bean properties xstream xstream instance
set one custom xstream mapperwrapper classes classes needs constructor single argument type mapper mapperwrapper 40
set custom xstream converterlookup use also used converterregistry given reference implements well 40 defaultconverterlookup
construct xstream instance either using one standard constructors creating custom subclass xstream instance
set xstream hierarchicalstreamdriver used readers writers as spring 40 stream driver also passed xstream constructor therefore used streamingrelated native api methods themselves
marshals given graph given xstream hierarchicalstreamwriter converts exceptions using convertxstreamexception
convert given xstream exception appropriate exception orgspringframeworkoxm hierarchy a boolean flag used indicate whether exception occurs marshalling unmarshalling since xstream make distinction exception hierarchy ex xstream exception occurred marshalling indicates whether exception occurs marshalling true unmarshalling false corresponding xmlmappingexception
return native xstream delegate used marshaller note method marked final spring 40 used access fully configured xstream marshalling configuration purposes anymore
unmarshals given graph given xstream hierarchicalstreamwriter converts exceptions using convertxstreamexception
scan packages classes marked jaxb2 annotations uncategorizedmappingexception case errors
checks whether given type primitive wrapper type compare section 851 jaxb2 spec
return jaxbcontext used marshaller lazily building necessary
template method overridden concrete jaxb marshallers custom initialization behavior gets called creation jaxb marshaller respective properties set the default implementation sets setunmarshallerpropertiesmap defined properties setvalidationeventhandlervalidationeventhandler validation event handler setschemasresource schemas setunmarshallerlistenerjavaxxmlbindunmarshallerlistener listener setadaptersxmladapter adapters
return packages search jaxb2 annotations
return newly created jaxb marshaller jaxb marshallers necessarily thread safe
checks whether given type standard class compare section 852 jaxb2 spec
return list java classes recognized newly created jaxbcontext
indicates whether external xml entities processed unmarshalling default false meaning external entities resolved note processing external entities enableddisabled source passed unmarshalsource saxsource streamsource effect domsource staxsource instances note setting option true also automatically sets setsupportdtd true
set multiple jaxb context paths given array context paths gets converted colondelimited string supported jaxb
return jaxb context path
template method overridden concrete jaxb marshallers custom initialization behavior gets called creation jaxb marshaller respective properties set the default implementation sets setmarshallerpropertiesmap defined properties setvalidationeventhandlervalidationeventhandler validation event handler setschemasresource schemas setmarshallerlistenerjavaxxmlbindmarshallerlistener listener setadaptersxmladapter adapters
convert given jaxbexception appropriate exception orgspringframeworkoxm hierarchy ex jaxbexception occurred corresponding xmlmappingexception
return newly created jaxb unmarshaller note jaxb unmarshallers necessarily threadsafe
returns true classes ie castor supports arbitrary classes
template method allows customizing given castor marshaller
template method allows customizing given castor unmarshaller
create castor xmlcontext subclasses override create custom context the default implementation loads mapping files defined target class packages defined created resolver mappingexception mapping file cannot loaded ioexception case io errors xmlcontextaddmappingorgexolabcastormappingmapping xmlcontextaddclassclass
convert given xmlexception appropriate exception orgspringframeworkoxm hierarchy a boolean flag used indicate whether exception occurs marshalling unmarshalling since castor make distinction exception hierarchy ex castor xmlexception occurred marshalling indicates whether exception occurs marshalling true unmarshalling false corresponding xmlmappingexception
determine default encoding use marshalling unmarshalling byte stream null none the default implementation returns null
template method handling staxresults this implementation delegates marshalxmlsteamwriter marshalxmleventconsumer depending contained staxresult graph root object graph marshal staxresult jaxp 14 staxsource xmlmappingexception given object cannot marshalled result illegalargumentexception domresult empty marshaldomnodeobject orgw3cdomnode
build new document marshallers documentbuilderfactory placeholder dom node createdocumentbuilderfactory createdocumentbuilderdocumentbuilderfactory
template method handling saxresults this implementation delegates marshalsaxhandlers graph root object graph marshal saxresult saxresult xmlmappingexception given object cannot marshalled result marshalsaxhandlersobject orgxmlsaxcontenthandler orgxmlsaxextlexicalhandler
template method handling domresults this implementation delegates marshaldomnode graph root object graph marshal domresult domresult xmlmappingexception given object cannot marshalled result illegalargumentexception domresult empty marshaldomnodeobject orgw3cdomnode
template method handling streamsources this implementation delegates unmarshalinputstream unmarshalreader streamsource streamsource object graph ioexception io exception occurs xmlmappingexception given source cannot mapped object
create documentbuilder marshaller use creating dom documents passed empty domsource the resulting documentbuilderfactory cached method called once documentbuilderfactory parserconfigurationexception thrown jaxp methods
create xmlreader marshaller passed empty saxsource xmlreader saxexception thrown jaxp methods
unmarshals given provided javaxxmltransformsource object graph this implementation inspects given result calls unmarshaldomsource unmarshalsaxsource unmarshalstreamsource source source marshal object graph ioexception io exception occurs xmlmappingexception given source cannot mapped object illegalargumentexception source neither domsource saxsource streamsource unmarshaldomsourcejavaxxmltransformdomdomsource unmarshalsaxsourcejavaxxmltransformsaxsaxsource unmarshalstreamsourcejavaxxmltransformstreamstreamsource
template method handling saxsources this implementation delegates unmarshalsaxreader saxsource saxsource object graph xmlmappingexception given source cannot mapped object ioexception io exception occurs unmarshalsaxreaderorgxmlsaxxmlreader orgxmlsaxinputsource
template method handling staxsources this implementation delegates unmarshalxmlstreamreader unmarshalxmleventreader staxsource staxsource object graph xmlmappingexception given source cannot mapped object
create documentbuilder marshaller use creating dom documents passed empty domsource can overridden subclasses adding initialization builder factory documentbuilderfactory documentbuilder created documentbuilder parserconfigurationexception thrown jaxp methods
indicates whether external xml entities processed unmarshalling default false meaning external entities resolved note processing external entities enableddisabled source passed unmarshalsource saxsource streamsource effect domsource staxsource instances note setting option true also automatically sets setsupportdtd true
template method handling domsources this implementation delegates unmarshaldomnode given source empty empty source document created placeholder domsource domsource object graph xmlmappingexception given source cannot mapped object illegalargumentexception domsource empty unmarshaldomnodeorgw3cdomnode
marshals object graph given root provided javaxxmltransformresult this implementation inspects given result calls marshaldomresult marshalsaxresult marshalstreamresult graph root object graph marshal result result marshal ioexception io exception occurs xmlmappingexception given object cannot marshalled result illegalargumentexception result neither domresult saxresult streamresult marshaldomresultobject javaxxmltransformdomdomresult marshalsaxresultobject javaxxmltransformsaxsaxresult marshalstreamresultobject javaxxmltransformstreamstreamresult
template method handling streamresults this implementation delegates marshaloutputstream marshalwriter depending contained streamresult graph root object graph marshal streamresult streamresult ioexception io exception occurs xmlmappingexception given object cannot marshalled result illegalargumentexception streamresult neither contain outputstream writer
throws unsupportedoperationexception
throws unsupportedoperationexception
create new marshallingsource given marshaller content marshaller marshaller use content object marshalled
create sax inputsource given resource sets system identifier resources url available resource resource input source created resource ioexception io exception occurs inputsourcesetsystemidstring getsystemidorgspringframeworkcoreioresource
retrieve url given resource system id returns null cannot opened
create new iunmarshallingcontext created unmarshalling context jibxexception case errors
create new imarshallingcontext configured correct indentation created marshalling context jibxexception case errors
convert given jibxexception appropriate exception orgspringframeworkoxm hierarchy a boolean flag used indicate whether exception occurs marshalling unmarshalling since jibx make distinction exception hierarchy ex jibxexception occurred marshalling indicates whether exception occurs marshalling true unmarshalling false corresponding xmlmappingexception
return reason null none
create new closestatus instance code status code reason reason
create new closestatus one specified reason reason reason new closestatus instance
create websocketextension given name parameters name name extension parameters parameters
parse given commaseparated string list websocketextension objects this method used parse secwebsocketextension header extensions string parse list extensions illegalargumentexception string cannot parsed
create new text websocket message given charsequence payload payload nonnull payload
create new text websocket message given byte assumed byte array encoded utf8 string payload nonnull payload
create new text websocket message given payload representing full partial message content islast boolean flag set false message sent partial content partial messages expected boolean flag set true payload nonnull payload islast whether last part series partial messages
returns value secwebsocketextensions header value header
set given single header value given name headername header name headervalue header value unsupportedoperationexception adding headers supported putstring list addstring string
returns value secwebsocketversion header value header
returns value secwebsocketkey header value header
returns value secwebsocketaccept header value header
sets new values secwebsocketextensions header extensions values header
return first header value given header name any headername header name first header value null
returns value secwebsocketkey header value header
add given single header value given name headername header name headervalue header value unsupportedoperationexception adding headers supported putstring list setstring string
create new websocket message given payload representing full partial message content islast boolean flag set false message sent partial content partial messages expected boolean flag set true payload nonnull payload islast message last series partial messages
return jsr356 servercontainer use endpoint registration
actually register endpoints called aftersingletonsinstantiated
create new serverendpointregistration instance javaxwebsocketendpoint class path endpoint path endpointclass endpoint class
create new serverendpointregistration instance javaxwebsocketendpoint instance path endpoint path endpoint endpoint instance
perform subprotocol negotiation based requested supported subprotocols list supported subprotocols method first checks target websockethandler subprotocolcapable also checks subprotocols explicitly configured setsupportedprotocolsstring requestedprotocols requested subprotocols websockethandler websockethandler used selected protocols null determinehandlersupportedprotocolswebsockethandler
use property configure list supported subprotocols first configured subprotocol matches clientrequested subprotocol accepted matches response contain literal secwebsocketprotocol header note websockethandler passed runtime instance subprotocolcapable need explicitly configure property certainly case builtin stomp websocket support therefore property configured explicitly websockethandler implement subprotocolcapable
constructor accepts runtimespecific requestupgradestrategy requestupgradestrategy upgrade strategy use
method used associate user websocket session process established default implementation calls serverhttprequestgetprincipal subclasses provide custom logic associating user session example assigning name anonymous users ie fully authenticated request handshake request wshandler websocket handler handle messages attributes handshake attributes pass websocket session user websocket session null available
determine subprotocols supported given websockethandler checking whether instance subprotocolcapable handler handler check list supported protocols empty list none available
filter list requested websocket extensions as 41 default implementation method filters list leave extensions requested supported request current request requestedextensions list extensions requested client supportedextensions list extensions supported server selected extensions empty list
configure one websocket handshake request interceptors
configure allowed origin header values check mostly designed browsers nothing preventing types client modify origin header value each provided allowed origin must scheme optionally port eg httpexampleorg httpexampleorg9090 allowed origin string may also case origins allowed hrefhttpstoolsietforghtmlrfc6454rfc 6454 web origin concept
constructor copying specific http session attributes http session id attributenames session attributes copy setcopyallattributes setcopyhttpsessionid
default constructor copying http session attributes http session id setcopyallattributes setcopyhttpsessionid
constructor accepting websocketpolicy used creating websocketserverfactory instance policy policy use 435
constructor accepting websocketserverfactory factory preconfigured factory use
create new instance associate given attributes it attributes attributes http handshake associate websocket session provided attributes copied original map used
called initialize encoderdecoder javaxwebsocketencoderinitendpointconfig javaxwebsocketdecoderinitendpointconfig
returns active applicationcontext default method obtains context via contextloadergetcurrentwebapplicationcontext finds applicationcontext loaded via contextloader typically servlet container environment running servlet container using contextloader method overridden applicationcontext null
strategy method used obtain conversionservice default method expects bean named websocketconversionservice getapplicationcontext active applicationcontext conversionservice never null
encode object message javaxwebsocketencodertextencodeobject javaxwebsocketencoderbinaryencodeobject
decode message object javaxwebsocketdecodertextdecodestring javaxwebsocketdecoderbinarydecodebytebuffer
constructor standard websocket session headers headers handshake request attributes attributes http handshake associate websocket session provided attributes copied original map used localaddress address request received remoteaddress address remote client
constructor associates user websocket session headers headers handshake request attributes attributes http handshake associate websocket session localaddress address request received remoteaddress address remote client user user associated session null well fallback user available underlying websocket session
create new jettywebsocketsession instance associated given user attributes attributes http handshake associate websocket session provided attributes copied original map used user user associated session null well fallback user available via orgeclipsejettywebsocketapisessiongetupgraderequest
constructor sockjsexception message exception message sessionid sockjs session id cause root cause
return sockjs session id
return data contained sockjs message close frames otherwise sockjs open close frames contain data return null
create new instance frame given frame content content content must nonempty represent valid sockjs frame
see escapablebyserver variable sockjs protocol test suite
see json unicode encoding section sockjs protocol
return sockjsmessagecodec use
create sockjsclient given transports if list includes xhrtransport or specifically implementation inforeceiver instance used initialize setinforeceiverinforeceiver inforeceiver property otherwise defaulted resttemplatexhrtransport transports nonempty list transports use
configured http header names copied handshake headers also included http requests
set sockjsmessagecodec use by default orgspringframeworkwebsocketsockjsframejackson2sockjsmessagecodec jackson2sockjsmessagecodec used jackson classpath
configure inforeceiver use perform sockjs info request sockjs session starts if list transports provided constructor contained xhrtransport implementation inforeceiver instance would used initialize property otherwise defaults resttemplatexhrtransport inforeceiver transport use sockjs info request
return user associate sockjs session make available via orgspringframeworkwebsocketwebsocketsessiongetprincipal by default method returns null user associate session possibly null
configure taskexecutor use execute xhr receive requests by default orgspringframeworkcoretasksimpleasynctaskexecutor simpleasynctaskexecutor configured creates new thread every time transports connects
return timeout cleanup task invoke sockjs sessions fully established within retransmission timeout period calculated sockjsrequest based duration initial sockjs info request
create new sockjshttprequesthandler sockjsservice sockjs service websockethandler websocket handler
configure allowed origin header values check mostly designed browsers nothing preventing types client modify origin header value when sockjs enabled origins restricted transport types allow check request origin iframe based transports disabled consequence ie 6 9 supported origins restricted each provided allowed origin must scheme optionally port eg httpexampleorg httpexampleorg9090 allowed origin string may also case origins allowed 412 hrefhttpstoolsietforghtmlrfc6454rfc 6454 web origin concept hrefhttpsgithubcomsockjssockjsclientsupportedtransportsbybrowserhtmlservedfromhttporhttpssockjs supported transports browser
method determines sockjs path handles sockjs static urls session urls raw websocket requests delegated abstract methods
ensure path contain file extension either filename eg jsonpbat possibly path parameters jsonpsetupbat could used rfd exploits since last part path expected transport type presence extension would work need check path parameters would removed sockjs path request mapping found reject request
configure one websocket handshake request interceptors
create transporthandlingsockjsservice given transporthandler handler types scheduler task scheduler heartbeat messages removing timedout sessions provided taskscheduler declared spring bean ensure gets initialized startup shuts application stops handlers one transporthandler implementations use
create new instance id session id config sockjs service configuration options handler recipient sockjs messages attributes attributes http handshake associate websocket session provided attributes copied original map used
internal use within transporthandler transporthandlerspecific session class
invoked underlying connection closed
performs cleanup notify websockethandler
performs cleanup notify websockethandler
close due error arising sockjs transport handling
handle first request receiving messages sockjs http transport based session long pollingbased transports eg xhr jsonp complete request writing open frame streamingbased transports xhrstreaming eventsource htmlfile leave response open longer streaming message frames also close eventually amount data sent request current request response current response frameformat transportspecific socksjs frame format use
return selected subprotocol use
handle requests except first one receive messages sockjs http transport based session long pollingbased transports eg xhr jsonp complete request writing buffered message frames or next one streamingbased transports xhrstreaming eventsource htmlfile leave response open longer streaming message frames also close eventually amount data sent request current request response current response frameformat transportspecific socksjs frame format use
set frequency logging information info level milliseconds set 0 less 0 logging task cancelled by default property set 30 minutes 30 60 1000
return handler mapping mapped viewcontrollers
set order resulting orgspringframeworkwebservlethandlermapping relative handler mappings configured spring mvc the default value 1
set urlpathhelper configure handlermapping used map handshake requests
configure maximum size inbound subprotocol message stomp frame may aggregated multiple websocket messages the default value 64k ie 64 1024 note size individual websocket message needs configured websocket server level instead see reference documentation details
set maximum time allowed milliseconds websocket connection established first subprotocol message received this handler websocket connections use subprotocol therefore expect client send least one subprotocol message beginning else assume connection isnt well eg proxy issue slow network closed by default set 60000 1 minute timetofirstmessage maximum time allowed milliseconds 51
protected accessor internal use
configure maximum amount data buffer sending messages websocket session http response sockjs fallback option use in general websocket servers expect messages single websocket session sent single thread time automatically guaranteed using enablewebsocketmessagebroker configuration message sending slow least slower rate messages sending subsequent messages buffered either sendtimelimit sendbuffersizelimit reached point session state cleared attempt made close session note closing session may succeed actually closing physical socket may also hang true especially using blocking io bio connector tomcat configured default tomcat 7 therefore recommended ensure server using nonblocking io tomcats nio connector used default tomcat 8 must use blocking io consider customizing oslevel tcp settings example procsysnetipv4tcpretries2 linux the default value 512k ie 512 1024 sendbuffersizelimit maximum number bytes buffer sending messages value less equal 0 buffering effectively disabled
protected accessor internal use
protected accessor internal use
configure one factories decorate handler used process websocket messages may useful advanced use cases example allow spring security forcibly close websocket session corresponding http session expires 412
configure time limit in milliseconds maximum amount time allowed sending messages websocket session writing http response sockjs fallback option use in general websocket servers expect messages single websocket session sent single thread time automatically guaranteed using enablewebsocketmessagebroker configuration message sending slow least slower rate messages sending subsequent messages buffered either sendtimelimit sendbuffersizelimit reached point session state cleared attempt made close session note session time limit checked attempts send additional messages single message sent hangs session time another message sent underlying physical socket times out replacement websocket server http connection timeout rather intended control extent buffering unsent messages note closing session may succeed actually closing physical socket may also hang true especially using blocking io bio connector tomcat used default tomcat 7 therefore recommended ensure server using nonblocking io tomcats nio connector used default tomcat 8 must use blocking io consider customizing oslevel tcp settings example procsysnetipv4tcpretries2 linux the default value 10 seconds ie 10 10000 timelimit timeout value milliseconds value must greater 0 otherwise ignored
add factory decorate handler used process websocket messages may useful advanced use cases example allow spring security forcibly close websocket session corresponding http session expires 412
protected accessor internal use
expose sockjsserviceregistration sockjs enabled null otherwise configured taskscheduler application provide one done prior calling getmappings
provide taskscheduler use sockjs endpoints task scheduler explicitly registered method must called prior gethandlermapping
whether endpoint sockjs registrations without taskscheduler method invoked gethandlermapping allow registrations made first
default taskscheduler use none registered explicitly via sockjsserviceregistrationsettaskscheduler classcode configuration enablewebsocket public class websocketconfig implements websocketconfigurer public void registerwebsockethandlerswebsockethandlerregistry registry registryaddhandlermyhandler echo withsockjs settaskschedulermyscheduler
option used disable automatic addition cors headers sockjs requests the default value false 412
amount time milliseconds server sent messages server send heartbeat frame client order keep connection breaking the default value 25000 25 seconds
configure allowed origin header values 412
scheduler instance use scheduling sockjs heartbeats
sockjs protocol requires server respond initial info request clients cookieneeded boolean property indicates whether use jsessionid cookie required application function correctly eg load balancing java servlet containers use http session this especially important ie 89 support xdomainrequest modified ajaxxhr requests across domains send cookies cases sockjs client prefers iframehtmlfile transport xdrstreaming order able send cookies the default value true maximize chance applications work correctly ie 89 support cookies and jsessionid cookie particular however application choose set false use cookies and http session required
streaming transports save responses client side dont free memory used delivered messages transports need recycle connection while property sets minimum number bytes send single http streaming request closed client open new request setting value one effectively disables streaming make streaming transports behave like polling transports the default value 128k ie 128 1024
load balancers dont support websocket option used disable websocket transport server side the default value true
transports native crossdomain communication eg eventsource htmlfile must get simple page foreign domain invisible iframe code iframe run domain local sockjs server since iframe needs load sockjs javascript client library property allows specifying load from by default set point httpscdnjsdelivrnetsockjs034sockjsminjs however also set point url served application note its possible specify relative url case url must relative iframe url example assuming sockjs endpoint mapped sockjs resulting iframe url sockjsiframehtml relative url must start traverse location sockjs mapping case prefixbased servlet mapping one traversal may needed
number servertoclient messages session cache waiting next http polling request client http transports use property since even streaming transports recycle http requests periodically the amount time http requests relatively brief exceed allows disconnect delay see setdisconnectdelaylong 5 seconds default the default size 100
codec use encoding decoding sockjs messages by default jackson2sockjsmessagecodec used requiring jackson library present classpath codec codec use 41
return taskscheduler configured
amount time milliseconds client considered disconnected receiving connection ie active connection server send data client the default value 5000
handle incoming websocket messages clients
simple broker produces simpmessagetypeconnectack thats stomp specific needs turned stomp connected frame
invoked seterrorhandlerstompsubprotocolerrorhandler errorhandler configured send error frame client
handle stomp messages going back websocket clients
return configured error handler
configure messageheaderinitializer apply headers messages created decoded stomp frames messages sent client inbound channel by default property set
return configured header initializer
create new sessiondisconnectevent source component published event never null message message never null sessionid disconnect message closestatus status object user current session user
create new sessiondisconnectevent source component published event never null message message never null sessionid disconnect message closestatus status object
also automatically sets setdefaultheartbeat defaultheartbeat property 1000010000 currently set 00
class constructor sets setdefaultheartbeat 00 reset back preferred 1000010000 settaskscheduler configured websocketclient websocket client connect
overloaded version connectstring websockethttpheaders stompsessionhandler object accepts fully prepared javaneturi url url connect handshakeheaders headers websocket handshake connectheaders headers stomp connect frame sessionhandler stomp session handler listenablefuture access session ready use
return value autostartup property true client automatically start stop contained websocketclient
overloaded version connectstring stompsessionhandler object also accepts websockethttpheaders use websocket handshake stompheaders stomp connect frame url url connect handshakeheaders headers websocket handshake connectheaders headers stomp connect frame handler session handler urivariables uri variables expand url listenablefuture access session ready use
return configured phase
overloaded version connectstring stompsessionhandler object also accepts websockethttpheaders use websocket handshake url url connect handshakeheaders headers websocket handshake handler session handler urivariables uri variables expand url listenablefuture access session ready use
create new abstractsubprotocolevent source component published event never null message incoming message never null
return user session associated event
handle inbound message websocket client
register subprotocol handler
find subprotocolhandler given session session websocketsession find handler
configure one handlers use depending subprotocol requested client websocket handshake request protocolhandlers subprotocol handlers use
return default subprotocol handler use
handle outbound spring message websocket client
set subprotocolhandler use client request subprotocol defaultprotocolhandler default handler
session connected higherlevel protocol chance use heartbeat management shut sessions slow send receive messages however websocketsession established higher level protocol fully connected possibility sessions hang method checks closes sessions connected 60 seconds without received single message
create new subprotocolwebsockethandler given inbound outbound channels clientinboundchannel inbound messagechannel clientoutboundchannel outbound messagechannel
return phase endpoint connection factory autoconnected stopped
start websocket connection already connected method impact
return value autostartup property true endpoint connection manager connect remote endpoint upon contextrefreshedevent
return whether connectionmanager started
return configured origin
provide default headers add websocket handshake request
set taskexecutor use open connections default simpleasynctaskexecutor used
standard java websocket api allows passing user properties server via clientendpointconfiggetuserproperties userproperties use property configure one properties passed every handshake
constructor accepting existing websocketcontainer instance for xml configuration see websocketcontainerfactorybean java configuration use containerprovidergetwebsocketcontainer obtain websocketcontainer instance
return configured taskexecutor
set taskexecutor use open connection default simpleasynctaskexecutor used
return configured taskexecutor
return user make available websocketsessiongetprincipal default method returns null
constructor also specifies overflow strategy use delegate websocketsession delegate sendtimelimit sendtime limit milliseconds buffersizelimit buffersize limit number bytes overflowstrategy overflow strategy use default session terminated 51
return time milliseconds since current send started 0 send currently progress
constructor incorrectresultsetcolumncountexception expectedcount expected column count actualcount actual column count
constructor incorrectresultcountdataaccessexception msg detail message expectedcount expected column count actualcount actual column count
constructor invalidresultsetaccessexception ex root cause
return sql caused problem offending sql known
constructor invalidresultsetaccessexception task name current task sql offending sql statement ex root cause
return sql led problem if known
constructor uncategorizedsqlexception task name current task sql offending sql statement ex root cause
constructor badsqlgrammarexception task name current task sql offending sql statement ex root cause
constructor jdbcupdateaffectedincorrectnumberofrowsexception sql sql trying execute expected expected number rows affected actual actual number rows affected
return column names auto generated keys
validate given parameter count given declared parameters suppliedparamcount number actual parameters given declaredinparamcount number input parameters declared
ensures compilation used bean factory
set column names autogenerated keys javasqlconnectionpreparestatementstring string
add one declared parameters used configuring operation used bean factory parameter specify sql type optionally parameters name parameters array containing declared sqlparameter objects declaredparameters
set whether prepared statements capable returning autogenerated keys javasqlconnectionpreparestatementstring int
validate parameters passed execute method based declared parameters subclasses invoke method every executequery update method parameters parameters supplied may null invaliddataaccessapiusageexception parameters invalid
set whether use statements capable returning updatable resultsets javasqlconnectionpreparestatementstring int int
add anonymous parameters specifying sql types defined javasqltypes class parameter ordering significant method alternative declareparameter method normally preferred types array sql types defined javasqltypes class invaliddataaccessapiusageexception operation already compiled
subclasses override supply dynamic sql wish sql normally set calling setsql method subclass constructor
declare parameter operation the order method called significant using positional parameters significant using named parameters named sqlparameter objects here remains significant using named parameters combination unnamed sqlparameter objects here param sqlparameter add specify sql type optionally parameters name note typically use sqlparameter class here subclasses invaliddataaccessapiusageexception operation already compiled hence cannot configured
compile query ignores subsequent attempts compile invaliddataaccessapiusageexception object hasnt correctly initialized example datasource provided
validate named parameters passed execute method based declared parameters subclasses invoke method every executequery update method parameters parameter map supplied may null invaliddataaccessapiusageexception parameters invalid
check whether operation compiled already lazily compile already compiled automatically called validateparameters validateparameters
resolve configured sql actual use sql never null 50
create new sqlfunction object sql parameters ds datasource obtain connections sql sql execute types sql types parameters defined javasqltypes class javasqltypes
create new sqlfunction object sql parameters result type ds datasource obtain connections sql sql execute types sql types parameters defined javasqltypes class resulttype type result object required match setresulttypeclass javasqltypes
implementation method extracts single value single row returned function different number rows returned treated error
convenient method run function without arguments returning value object value function
analogous sqlqueryfindobjectobject method generic method execute query taken number arguments parameters array parameters objects object wrapper types primitives value function object executeobject
analogous sqlqueryexecute method generic method execute query taken number arguments parameters array parameters objects object wrapper types primitives value function
create new sqlfunction object sql without parameters must add parameters settle none ds datasource obtain connections sql sql execute
convenient method run function single int argument parameter single int parameter value function object
execute stored procedure provided parameter values convenience method order passed parameter values must match order parameters declared in inparams variable number input parameters output parameters included map legal values null produce correct behavior using null argument stored procedure map output params keyed name parameter declarations output parameters appear here values stored procedure called
create new object wrapper stored procedure ds datasource use throughout lifetime object obtain connections name name stored procedure database
execute stored procedure subclasses define strongly typed execute method with meaningful name invokes method populating input map extracting typed values output map subclass execute methods often take domain objects arguments return values alternatively return void inparams map input parameters keyed name parameter declarations output parameters need but can included map legal map entries null produce correct behavior using null argument stored procedure map output params keyed name parameter declarations output parameters appear here values stored procedure called
storedprocedure parameter maps default allowed contain additional entries actually used parameters
create new object wrapper stored procedure jdbctemplate jdbctemplate wraps datasource name name stored procedure database
execute stored procedure subclasses define strongly typed execute method with meaningful name invokes method passing parametermapper populate input map allows mapping database specific features since parametermapper access connection object execute method also responsible extracting typed values output map subclass execute methods often take domain objects arguments return values alternatively return void inparammapper map input parameters keyed name parameter declarations output parameters need but can included map legal map entries null produce correct behavior using null argument stored procedure map output params keyed name parameter declarations output parameters appear here values stored procedure called
declare parameter overridden method parameters declared sqlparameter sqlinoutparameter always used provide input values addition parameter declared sqloutparameter nonnull input value provided also used input paraneter note calls declareparameter must made order appear databases stored procedure parameter list names purely used help mapping param parameter object
return preparedstatementcreator perform operation given parameters sqltouse actual sql statement use if different factorys example named parameter expanding params parameter array may null
overridden method configure preparedstatementcreatorfactory based declared parameters
obtain parsed representation operations sql statement typically used named parameter parsing
return preparedstatementcreator perform operation given parameters params parameter array may null
return preparedstatementsetter perform operation given parameters params parameter array may null
generic object finder method used findobject methods object finder methods like ejb entity bean finders considered error return one result result object null found subclasses may choose treat error throw exception orgspringframeworkdaosupportdataaccessutilssingleresult
convenient method find single object given single string parameter context
convenient method execute without context parammap map parameter name parameter object matching named parameters specified sql statement ordering significant
convenient method find single object given two int parameters
generic object finder method named parameters parammap map parameter name parameter object matching named parameters specified sql statement ordering significant context contextual information passed maprow callback method jdbc operation doesnt rely parameter useful creating objects result list list objects one per row resultset normally class although possible use different types
convenient method find single object given single int parameter
convenient constructor datasource sql string ds datasource use get connections sql sql execute sql also supplied runtime overriding getsql method
convenient method find single object given single int parameter context
central execution method named parameter execution goes method parammap parameters associated name specified declaring sqlparameters primitive parameters must represented object wrapper type ordering parameters significant since supplied sqlparametermap implementation map interface context contextual information passed maprow callback method jdbc operation doesnt rely parameter useful creating objects result list list objects one per row resultset normally class although possible use different types
convenient method find single object given single string parameter
convenient method find single object given two int parameters context
convenient method find single object without context
convenient method find single object given single long parameter context
central execution method unnamed parameter execution goes method params parameters similar jdo query parameters primitive parameters must represented object wrapper type ordering parameters significant context contextual information passed maprow callback method jdbc operation doesnt rely parameter useful creating objects result list list objects one per row resultset normally class although possible use different types
convenient method find single object given single long parameter
convenient constructor datasource sql string ds datasource use get connections sql sql run
implementation superclass template method invokes subclasss implementation updaterow method
reset statement parameter queue rows affected cache execution count
trigger queued update operations added final batch array number rows affected statement
construct update object given datasource sql anonymous parameters specifying maximum number rows may affected ds datasource use obtain connections sql sql statement execute types sql types parameters defined javasqltypes class batchsize number statements trigger automatic intermediate flush javasqltypes
overridden version update adds given statement parameters queue rather executing immediately update methods sqlupdate base class go method thus behave similarly you need call flush actually execute batch specified batch size reached implicit flush happen still need finally call flush flush statements params array parameter objects number rows affected update always 1 meaning not applicable statement actually executed method flush
return number affected rows already executed statements accumulates flushs return values reset invoked array number rows affected statement reset
batchsqlupdate support blob clob parameters
use array results efficient know many results expect
implementation protected abstract method invokes subclasss implementation maprow method
method implemented invoke simpler maprow template method ignoring parameters maprowresultset int
method execute update given arguments retrieve generated keys using keyholder parammap map parameter name parameter object matching named parameters specified sql statement generatedkeyholder keyholder hold generated keys number rows affected update
generic method execute update given named parameters update methods invoke method parammap map parameter name parameter object matching named parameters specified sql statement number rows affected update
method execute update given arguments retrieve generated keys using keyholder params array parameter objects generatedkeyholder keyholder hold generated keys number rows affected update
generic method execute update given parameters update methods invoke method params array parameters objects number rows affected update
constructs update object given datasource sql ds datasource use obtain connections sql sql statement execute
construct update object given datasource sql anonymous parameters specifying maximum number rows may affected ds datasource use obtain connections sql sql statement execute types sql types parameters defined javasqltypes class maxrowsaffected maximum number rows may affected update javasqltypes
check given number affected rows specified maximum number required number rowsaffected number affected rows jdbcupdateaffectedincorrectnumberofrowsexception actually affected rows bounds setmaxrowsaffected setrequiredrowsaffected
construct update object given datasource sql anonymous parameters ds datasource use obtain connections sql sql statement execute types sql types parameters defined javasqltypes class javasqltypes
set rowmapper class query creating fresh rowmapper instance per execution
get call string
overridden method configure callablestatementcreatorfactory based declared parameters rdbmsoperationcompileinternal
return callablestatementcreator perform operation parameters returned parametermapper inparammapper parametermapper may null
return callablestatementcreator perform operation parameters inparams parameters may null
create new sqlcall object sql without parameters must add parameters settle none ds datasource obtain connections sql sql execute
set exception class specified error codes
return exception class specified error codes
check whether validation query executed connection specified datasource specified interval checks specified timeout
find custom translator specified database dbname database name custom translator null none found
register new custom translator specified database name dbname database name translator custom translator
return fallback exception translator any
prechecks arguments calls dotranslate invokes getfallbacktranslator fallback translator necessary
clear cache specified datasource registered datasource datasource identifying database corresponding sqlerrorcodes object got removed null registered 435 registerdatabasedatasource string
return sqlerrorcodes instance given database no need database metadata lookup databasename database name must null sqlerrorcodes instance given database illegalargumentexception supplied database name null
create new instance sqlerrorcodesfactory class not public enforce singleton design pattern would private except allow testing via overriding loadresourcestring method do subclass application code loadresourcestring
return sqlerrorcodes given datasource evaluating databaseproductname javasqldatabasemetadata empty error codes instance sqlerrorcodes found datasource datasource identifying database corresponding sqlerrorcodes object javasqldatabasemetadatagetdatabaseproductname
load given resource class path not overridden application developers obtain instances class static getinstance method protected testability path resource path either custom path one either sqlerrorcodedefaultpath sqlerrorcodeoverridepath resource null resource wasnt found getinstance
check customsqlexceptiontranslatorregistry entries
associate specified database name given datasource datasource datasource identifying database databasename corresponding database name stated error codes definition file must null corresponding sqlerrorcodes object never null unregisterdatabasedatasource
obtain datasource actual use datasource never null illegalstateexception case datasource set 50
eagerly initialize exception translator demanded creating default one specified datasource none set
return datasource used template
return exception translator instance creates default sqlerrorcodesqlexceptiontranslator specified datasource none set sqlstatesqlexceptiontranslator case datasource getdatasource
gets sql state code supplied sqlexception exception some jdbc drivers nest actual exception batched update might need dig nested exception ex exception sqlexceptiongetsqlstate sql state extracted sql state code
create custom dataaccessexception based given exception class customsqlerrorcodestranslation definition task readable text describing task attempted sql sql query update caused problem may null sqlex offending sqlexception exceptionclass exception class use defined customsqlerrorcodestranslation definition null custom exception could created otherwise resulting dataaccessexception exception include sqlex parameter nested root cause customsqlerrorcodestranslationsetexceptionclass
return error codes used translator usually determined via datasource setdatasource
create sql error code translator given database product name invoking constructor avoid obtaining connection datasource get metadata dbname database product name identifies error codes entry sqlerrorcodesfactory javasqldatabasemetadatagetdatabaseproductname
create sqlerrorcode translator given error codes require database metadata lookup performed using connection sec error codes
create sql error code translator given datasource invoking constructor cause connection obtained datasource get metadata datasource datasource use find metadata establish error codes usable sqlerrorcodesfactory
subclasses override method attempt custom mapping sqlexception dataaccessexception task readable text describing task attempted sql sql query update caused problem may null sqlex offending sqlexception null custom translation applies otherwise dataaccessexception resulting custom translation exception include sqlex parameter nested root cause implementation always returns null meaning translator always falls back default error codes
return whether given jdbc driver supports jdbc 20 batch updates typically invoked right execution given set statements decide whether set sql statements executed jdbc 20 batch mechanism simply traditional onebyone fashion logs warning supportsbatchupdates methods throws exception simply returns false case con connection check whether jdbc 20 batch updates supported javasqldatabasemetadatasupportsbatchupdates
retrieve jdbc column value resultset using specified value type uses specifically typed resultset accessor methods falling back getresultsetvaluejavasqlresultset int unknown types note returned value may assignable specified required type case unknown type calling code needs deal case appropriately eg throwing corresponding exception rs resultset holding data index column index requiredtype required value type may null value object possibly specified required type conversion steps necessary sqlexception thrown jdbc api getresultsetvalueresultset int
convert column name underscores corresponding property name using camel case name like customernumber would match customernumber property name name column name converted name using camel case
extract database metadata via given databasemetadatacallback this method open connection database retrieve database metadata since method called exception translation feature configured datasource method rely sqlexception translation functionality any exceptions wrapped metadataaccessexception checked exception calling code catch handle exception log error hope best probably serious error reappear try access database again datasource datasource extract metadata action callback actual work object containing extracted information returned databasemetadatacallbacks processmetadata method metadataaccessexception metadata access failed
close given jdbc statement ignore thrown exception useful typical finally blocks manual jdbc code stmt jdbc statement close may null
retrieve jdbc column value resultset using appropriate value type returned value detached value object ties active resultset particular blob clob object rather byte array string representation respectively uses getobjectindex method includes additional hacks get around oracle 10g returning nonstandard object timestamp datatype javasqldate date columns leaving time portion columns explicitly extracted standard javasqltimestamp object rs resultset holding data index column index value object sqlexception thrown jdbc api javasqlblob javasqlclob javasqltimestamp
check whether given sql type numeric sqltype sql type checked whether type numeric
extract common name target database use even various driversplatforms provide varying names runtime source name provided database metadata common name used eg db2 sybase
call specified method databasemetadata given datasource extract invocation result datasource datasource extract metadata metadatamethodname name databasemetadata method call object returned specified databasemetadata method metadataaccessexception couldnt access databasemetadata failed invoke specified method javasqldatabasemetadata
close given jdbc connection ignore thrown exception useful typical finally blocks manual jdbc code con jdbc connection close may null
determine column name use column name determined based lookup using resultsetmetadata this method implementation takes account recent clarifications expressed jdbc 40 specification columnlabel label column specified sql clause sql clause specified label name column resultsetmetadata current metadata use columnindex index column look column name use sqlexception case lookup failure
close given jdbc resultset ignore thrown exception useful typical finally blocks manual jdbc code rs jdbc resultset close may null
javasqlresultsetgetbooleanint
javasqlresultsetfirst
javasqlresultsetnext
javasqlresultsetgetobjectint class
javasqlresultsetisbeforefirst
javasqlresultsetgetbyteint
create new resultsetwrappingsqlrowset given resultset resultset disconnected resultset wrap usually javaxsqlrowsetcachedrowset invalidresultsetaccessexception extracting resultsetmetadata failed javaxsqlrowsetcachedrowset javasqlresultsetgetmetadata resultsetwrappingsqlrowsetmetadata
javasqlresultsetfindcolumnstring
javasqlresultsetgetlongint
javasqlresultsetlast
javasqlresultsetgettimeint
javasqlresultsetgetdoubleint
javasqlresultsetgetdatestring
javasqlresultsetgetbigdecimalstring
javasqlresultsetgetobjectint map
javasqlresultsetislast
javasqlresultsetgetfloatstring
javasqlresultsetgetbooleanstring
javasqlresultsetgettimestampint calendar
javasqlresultsetgettimestring calendar
javasqlresultsetafterlast
javasqlresultsetgetrow
javasqlresultsetgetshortstring
javasqlresultsetisfirst
javasqlresultsetgetobjectint
javasqlresultsetgetdateint calendar
javasqlresultsetprevious
javasqlresultsetgetnstringint
javasqlresultsetgetstringint
javasqlresultsetgetbytestring
javasqlresultsetgetstringstring
javasqlresultsetrelativeint
javasqlresultsetgetlongstring
javasqlresultsetgettimestampint
javasqlresultsetgettimestring
javasqlresultsetgetdoublestring
javasqlresultsetgetobjectstring class
javasqlresultsetwasnull
javasqlresultsetbeforefirst
javasqlresultsetgettimestampstring calendar
javasqlresultsetisafterlast
javasqlresultsetgetobjectstring map
javasqlresultsetgetdateint
javasqlresultsetgetbigdecimalint
javasqlresultsetgetfloatint
javasqlresultsetgetshortint
javasqlresultsetgettimeint calendar
javasqlresultsetgetobjectstring
javasqlresultsetgetintstring
javasqlresultsetgetnstringstring
javasqlresultsetgetdatestring calendar
javasqlresultsetmetadatagetcatalognameint
javasqlresultsetgetintint
javasqlresultsetabsoluteint
javasqlresultsetgettimestampstring
executes sql specified getsequencequery
convenience constructor datasource datasource use incrementername name sequencetable use columnname name column sequence table use dummyname name dummy column used inserts
convenience constructor datasource datasource use incrementername name sequencetable use columnname name column sequence table use
statement use clean sequence values the default implementation either deletes entire range current maximum value specifically generated values starting lowest minus 1 preserving maximum value according isdeletespecificvalues setting values currently generated key values the number values corresponds getcachesize sql statement use
convenience constructor datasource datasource use incrementername name sequencetable use
convenience constructor datasource datasource use incrementername name sequencetable use columnname name column sequence table use
set default isolation level name corresponding constant orgspringframeworktransactiontransactiondefinition eg isolationserializable if specified target datasources default used note transactionspecific isolation value always override isolation setting specified datasource level constantname name constant orgspringframeworktransactiontransactiondefinitionisolationreaduncommitted orgspringframeworktransactiontransactiondefinitionisolationreadcommitted orgspringframeworktransactiontransactiondefinitionisolationrepeatableread orgspringframeworktransactiontransactiondefinitionisolationserializable setisolationlevel
applies current isolation level value readonly flag returned connection getcurrentisolationlevel getcurrentreadonlyflag
determine current readonly flag default transactions readonly hint whether readonly hint current scope orgspringframeworktransactionsupporttransactionsynchronizationmanageriscurrenttransactionreadonly
specify default isolation level use connection retrieval according jdbc javasqlconnection constants equivalent corresponding spring orgspringframeworktransactiontransactiondefinition constants if specified target datasources default used note transactionspecific isolation value always override isolation setting specified datasource level javasqlconnectiontransactionreaduncommitted javasqlconnectiontransactionreadcommitted javasqlconnectiontransactionrepeatableread javasqlconnectiontransactionserializable orgspringframeworktransactiontransactiondefinitionisolationreaduncommitted orgspringframeworktransactiontransactiondefinitionisolationreadcommitted orgspringframeworktransactiontransactiondefinitionisolationrepeatableread orgspringframeworktransactiontransactiondefinitionisolationserializable orgspringframeworktransactiontransactiondefinitiongetisolationlevel orgspringframeworktransactionsupporttransactionsynchronizationmanagergetcurrenttransactionisolationlevel
determine current isolation level either transactions isolation level statically defined isolation level current isolation level null none orgspringframeworktransactionsupporttransactionsynchronizationmanagergetcurrenttransactionisolationlevel setisolationlevel
return statically specified isolation level null none
create new drivermanagerdatasource given standard driver parameters driver jdbc driver object url jdbc url use accessing drivermanager conprops jdbc connection properties javasqldriverconnectstring javautilproperties
return jdbc driver instance use
create new drivermanagerdatasource given standard driver parameters driver jdbc driver object url jdbc url use accessing drivermanager username jdbc username use accessing drivermanager password jdbc password use accessing drivermanager javasqldriverconnectstring javautilproperties
create new drivermanagerdatasource given standard driver parameters driver jdbc driver object url jdbc url use accessing drivermanager javasqldriverconnectstring javautilproperties
create new datasourcetransactionmanager instance datasource jdbc datasource manage transactions
implementation sets isolation level ignores timeout
set jdbc datasource instance manage transactions for this typically locally defined datasource example apache commons dbcp connection pool alternatively also drive transactions nonxa j2ee datasource fetched jndi xa datasource use jtatransactionmanager the datasource specified target datasource manage transactions for transactionawaredatasourceproxy data access code may work transactionawaredatasourceproxy transaction manager needs work underlying target datasource theres nevertheless transactionawaredatasourceproxy passed in unwrapped extract target datasource the datasource passed needs return independent connections connections may come pool the typical case datasource must return threadscoped requestscoped connections like transactionawaredatasourceproxy orgspringframeworktransactionjtajtatransactionmanager
obtain datasource actual use datasource never null illegalstateexception case datasource set 50
return jdbc datasource instance manages transactions for
prepare transactional connection right transaction begin the default implementation executes set transaction read only statement setenforcereadonly enforcereadonly flag set true transaction definition indicates readonly transaction the set transaction read only understood oracle mysql postgres may work databases well youd like adapt treatment override method accordingly con transactional jdbc connection definition current transaction definition sqlexception thrown jdbc api 437 setenforcereadonly
wraps given connection proxy delegates every method call delegates close calls datasourceutils targetdatasource datasource connection came wrapped connection javasqlconnectionclose datasourceutilsdoreleaseconnection
determine whether obtain fixed target connection proxy reobtain target connection operation the default implementation returns true standard cases overridden setreobtaintransactionalconnections reobtaintransactionalconnections flag enforces nonfixed target connection within active transaction note nontransactional access always use fixed connection targetdatasource target datasource
delegates datasourceutils automatically participating springmanaged transactions throws original sqlexception any the returned connection handle implements connectionproxy interface allowing retrieve underlying target connection transactional connection any new one else datasourceutilsdogetconnection connectionproxygettargetconnection
close underlying shared connection
create new singleconnectiondatasource given standard drivermanager parameters url jdbc url use accessing drivermanager username jdbc username use accessing drivermanager password jdbc password use accessing drivermanager suppressclose returned connection closesuppressing proxy physical connection javasqldrivermanagergetconnectionstring string string
close underlying connection provider datasource needs care proper shutdown as bean implements disposablebean bean factory automatically invoke destruction cached singletons
reset underlying shared connection reinitialized next access
prepare given connection exposed the default implementation applies autocommit flag necessary overridden subclasses con connection prepare setautocommit
create new singleconnectiondatasource given standard drivermanager parameters url jdbc url use accessing drivermanager suppressclose returned connection closesuppressing proxy physical connection javasqldrivermanagergetconnectionstring string string
return whether returned connections autocommit setting overridden autocommit value null none applied
create new singleconnectiondatasource given connection target underlying target connection suppressclose connection wrapped connection suppresses close calls to allow normal close usage applications expect pooled connection know smartdatasource interface
single connection close returning pool
specifying custom username password doesnt make sense single connection returns single connection given username password throws sqlexception else
wrap given connection proxy delegates every method call suppresses close calls target original connection wrap wrapped connection
initialize underlying connection via drivermanager
determine whether currently threadbound credentials using available falling back statically specified username password ie values bean properties otherwise delegates dogetconnectionstring string determined credentials parameters dogetconnection
implementation delegates getconnectionusername password method target datasource passing specified user credentials specified username empty simply delegate standard getconnection method target datasource username username use password password use connection javaxsqldatasourcegetconnectionstring string javaxsqldatasourcegetconnection
simply delegates dogetconnectionstring string keeping given user credentials asis
create new simpleconnectionhandle given connection connection jdbc connection
return specified connection asis
returns 0 indicating default system timeout used
logwriter methods supported
logwriter methods supported
setting login timeout supported
return connectionhandle held connectionholder
create new connectionholder given jdbc connection wrapping simpleconnectionhandle connection jdbc connection hold transactionactive whether given connection involved ongoing transaction simpleconnectionhandle
return whether jdbc 30 savepoints supported caches flag lifetime connectionholder sqlexception thrown jdbc driver
return current connection held connectionholder this connection released gets called connectionholder reset held connection fetching new connection demand connectionhandlegetconnection released
override existing connection handle given connection reset handle given null used releasing connection suspend with null argument setting fresh connection resume
create new jdbc 30 savepoint current connection using generated savepoint names unique connection new savepoint sqlexception thrown jdbc driver
releases current connection held connectionholder this necessary connectionhandles expect connection borrowing returned connection temporarily leased needs returned data operation done make connection available operations within transaction
create new connectionholder given connectionhandle connectionhandle connectionhandle hold
implementation releases given jdbc 30 savepoint javasqlconnectionreleasesavepoint
implementation creates jdbc 30 savepoint returns it javasqlconnectionsetsavepoint
implementation rolls back given jdbc 30 savepoint javasqlconnectionrollbackjavasqlsavepoint
prepare given connection given transaction semantics con connection prepare definition transaction definition apply previous isolation level sqlexception thrown jdbc methods resetconnectionaftertransaction
obtain connection given datasource translates sqlexceptions spring hierarchy unchecked generic data access exceptions simplifying calling code making exception thrown meaningful is aware corresponding connection bound current thread example using datasourcetransactionmanager bind connection thread transaction synchronization active eg running within orgspringframeworktransactionjtajtatransactionmanager jta transaction datasource datasource obtain connections jdbc connection given datasource orgspringframeworkjdbccannotgetjdbcconnectionexception attempt get connection failed releaseconnection
reset given connection transaction regarding readonly flag isolation level con connection reset previousisolationlevel isolation level restore prepareconnectionfortransaction
actually obtain jdbc connection given datasource getconnection throwing original sqlexception is aware corresponding connection bound current thread example using datasourcetransactionmanager bind connection thread transaction synchronization active eg jta transaction directly accessed transactionawaredatasourceproxy datasource datasource obtain connections jdbc connection given datasource sqlexception thrown jdbc methods doreleaseconnection
actually close given connection obtained given datasource releaseconnection throwing original sqlexception directly accessed transactionawaredatasourceproxy con connection close necessary if null call ignored datasource datasource connection obtained may null sqlexception thrown jdbc methods dogetconnection
determine whether given two connections equal asking target connection case proxy used detect equality even user passed raw target connection held one proxy conholder connectionholder held connection potentially proxy passedincon connection passedin user potentially target connection without proxy whether given connections equal gettargetconnection
determine whether given jdbc connection transactional is bound current thread springs transaction facilities con connection check datasource datasource connection obtained may null whether connection transactional
close connection unless smartdatasource doesnt want us to con connection close necessary datasource datasource connection obtained sqlexception thrown jdbc methods connectionclose smartdatasourceshouldcloseconnection
determine connection synchronization order use given datasource decreased every level nesting datasource has checked level delegatingdatasource nesting datasource datasource check connection synchronization order use connectionsynchronizationorder
return innermost target connection given connection given connection proxy unwrapped nonproxy connection found otherwise passedin connection returned asis con connection proxy unwrap innermost target connection passedin one proxy connectionproxygettargetconnection
apply specified timeout overridden current transaction timeout given jdbc statement object stmt jdbc statement object datasource datasource connection obtained timeout timeout apply or 0 timeout outside transaction sqlexception thrown jdbc methods javasqlstatementsetquerytimeout
close given connection obtained given datasource managed externally that is bound thread con connection close necessary if null call ignored datasource datasource connection obtained may null getconnection
actually fetch connection given datasource defensively turning unexpected null return value datasourcegetconnection illegalstateexception datasource datasource obtain connections jdbc connection given datasource never null sqlexception thrown jdbc methods illegalstateexception datasource returned null value datasourcegetconnection
return target connection fetching initializing necessary
check default connection properties autocommit transaction isolation keeping able expose correctly without fetching actual jdbc connection target datasource this invoked startup also retrieval target connection check failed startup because database down well lazily retrieve settings con connection use checking sqlexception thrown connection methods
expose default autocommit value
return connection handle lazily fetches actual jdbc connection asked statement or preparedstatement callablestatement the returned connection handle implements connectionproxy interface allowing retrieve underlying target connection lazy connection handle connectionproxygettargetconnection
return connection handle lazily fetches actual jdbc connection asked statement or preparedstatement callablestatement the returned connection handle implements connectionproxy interface allowing retrieve underlying target connection username perconnection username password perconnection password lazy connection handle connectionproxygettargetconnection
expose default transaction isolation value
create new lazyconnectiondatasourceproxy targetdatasource target datasource
return target datasource datasource delegate to
obtain target datasource actual use never null 50
return jdbc username use connecting driver
return database schema applied connection any 432
implementation delegates getconnectionfromdriver using given username password getconnectionfromdriverstring string
return jdbc password use connecting driver
build properties driver including given username password if any obtain corresponding connection username name user password password use obtained connection sqlexception case failure javasqldriverconnectstring javautilproperties
return connection properties passed driver any
implementation delegates getconnectionfromdriver using default username password datasource getconnectionfromdriverstring string setusername setpassword
return jdbc url use connecting driver
return database catalog applied connection any 432
create new drivermanagerdatasource given jdbc url specifying username password jdbc access url jdbc url use accessing drivermanager conprops jdbc connection properties javasqldrivermanagergetconnectionstring
set jdbc driver class name driver get initialized startup registering jdks drivermanager note drivermanagerdatasource primarily intended accessing preregistered jdbc drivers need register new driver consider using simpledriverdatasource instead alternatively consider initializing jdbc driver instantiating datasource driverclassname property mainly preserved backwards compatibility well migrating commons dbcp datasource javasqldrivermanagerregisterdriverjavasqldriver simpledriverdatasource
create new drivermanagerdatasource given standard drivermanager parameters url jdbc url use accessing drivermanager username jdbc username use accessing drivermanager password jdbc password use accessing drivermanager javasqldrivermanagergetconnectionstring string string
builds websphere jdbcconnectionspec object current settings calls wsdatasourcegetconnectionjdbcconnectionspec createconnectionspec comibmwebspherersadapterwsdatasourcegetconnectioncomibmwebspherersadapterjdbcconnectionspec
create websphere jdbcconnectionspec object given characteristics the default implementation uses reflection apply given settings overridden subclasses customize jdbcconnectionspec object hrefhttppublibboulderibmcominfocenterwasinfov6r0topiccomibmwebspherejavadocdocpublichtmlapicomibmwebspherersadapterjdbcconnectionspechtmljdbcconnectionspec javadoc hrefhttpwwwibmcomdeveloperworkswebspherelibrarytecharticles0404tang0404tanghtmlibm developerworks article isolationlevel isolation level apply or null none readonlyflag readonly flag apply or null none username username apply null empty indicates default password password apply may null empty sqlexception thrown jdbcconnectionspec api methods comibmwebspherersadapterjdbcconnectionspec
checks specified targetdatasource actually websphere wsdatasource
constructor retrieves websphere jdbc connection spec api get obtain specific websphere connections using reflection
hook initialize embedded database if generateuniquedatabasename flag set true current value plain setdatabasename database name overridden autogenerated name subclasses may call method force initialization however method invoked once after calling method getdatasource returns datasource providing connectivity database
set name database defaults value defaultdatabasename will overridden generateuniquedatabasename flag set true databasename name embedded database setgenerateuniquedatabasename
set factory use create datasource instance connects embedded database defaults simpledriverdatasourcefactory
hook gets datasource provides connectivity embedded database returns null datasource initialized database shut down subclasses may call method access datasource instance directly
factory method returns plain embeddeddatabase embedded database instance also datasource
hook shutdown embedded database subclasses may call method force shutdown after calling getdatasource returns null does nothing embedded database initialized
specify start delimiter block comments sql scripts defaults blockcommentstartdelimiter start delimiter block comments this facilitate method chaining 403 setblockcommentenddelimiter
add sql script execute initialize populate database script script execute this facilitate method chaining
specify singleline comment prefix used sql scripts defaults commentprefix prefix singleline comments this facilitate method chaining 403
specify statement separator used sql scripts custom one defaults specified falls back n last resort may set scriptutilseofstatementseparator signal script contains single statement without separator separator statement separator this facilitate method chaining 403
specify failures occur executing sql scripts logged cause failure defaults false flag true script execution continue error this facilitate method chaining 403
specify character encoding used sql scripts different platform encoding scriptencoding encoding used scripts this facilitate method chaining 403
set type embedded database defaults hsql called databasetype type embedded database build this facilitate method chaining
set factory use create datasource instance connects embedded database defaults simpledriverdatasourcefactory overridden example introduce connection pooling this facilitate method chaining 403
set name embedded database defaults embeddeddatabasefactorydefaultdatabasename called will overridden generateuniquename flag set true databasename name embedded database build this facilitate method chaining generateuniquename
specify failed sql drop statement within executed script ignored this useful database whose sql dialect support exists clause drop statement the default false build building fail fast script starts drop statement flag true failed drop statements ignored this facilitate method chaining 403
specify whether unique id generated used database name if configuration builder reused across multiple application contexts within single jvm flag enabled ie set true order ensure application context gets embedded database enabling flag overrides explicit name set via setname flag true unique database name generated this facilitate method chaining 42 setname
create new embedded database builder given resourceloader resourceloader resourceloader delegate
add multiple sql scripts execute initialize populate database scripts scripts execute this facilitate method chaining 403
specify end delimiter block comments sql scripts defaults blockcommentenddelimiter end delimiter block comments this facilitate method chaining 403 setblockcommentstartdelimiter
get singleton derbyembeddeddatabaseconfigurer instance configurer instance
get singleton hsqlembeddeddatabaseconfigurer instance configurer instance classnotfoundexception hsql classpath
return configurer instance given embedded database type type embedded database type hsql h2 derby configurer instance illegalstateexception driver specified database type available
returns javaiooutputstream ignores data given it
get singleton h2embeddeddatabaseconfigurer instance configurer instance classnotfoundexception h2 classpath
add supplied datasource map datasource datasources maintained object datasourcename name supplied datasource added datasource datasource added
set map datasource datasources keys string strings values actual datasource instances if supplied map null method call effectively effect datasources said map datasource datasources
create new instance singledatasourcelookup class datasource single datasource wrap
retrieve current target datasource determines determinecurrentlookupkey current lookup key performs lookup settargetdatasources targetdatasources map falls back specified setdefaulttargetdatasource default target datasource necessary determinecurrentlookupkey
resolve specified data source object datasource instance the default implementation handles datasource instances data source names to resolved via setdatasourcelookup datasourcelookup datasource data source value object specified settargetdatasources targetdatasources map resolved datasource never null illegalargumentexception case unsupported value type
create new instance beanfactorydatasourcelookup class use constructor redundant object created spring ioc container supplied beanfactory replaced beanfactory creates cf beanfactoryaware contract use constructor using class outside context spring ioc container beanfactory bean factory used lookup datasource datasources
supports integer values isolation level constants well isolation level names defined orgspringframeworktransactiontransactiondefinition transactiondefinition interface
read script provided resource using supplied comment prefix statement separator build string containing lines lines beginning comment prefix excluded results however line comments anywhere else example within statement included results resource encodedresource containing script processed commentprefix prefix identifies comments sql script typically separator statement separator sql script typically blockcommentenddelimiter end block comment delimiter string containing script lines ioexception case io errors
read script provided linenumberreader using supplied comment prefix statement separator build string containing lines lines beginning comment prefix excluded results however line comments anywhere else example within statement included results linenumberreader linenumberreader containing script processed linecommentprefix prefix identifies comments sql script typically separator statement separator sql script typically blockcommentenddelimiter end block comment delimiter string containing script lines ioexception case io errors
provided sql script contain specified delimiter script sql script delim string delimiting statement typically character
split sql script separate statements delimited provided separator string individual statement added provided list within script value defaultcommentprefix used comment prefix text beginning comment prefix extending end line omitted output similarly value defaultblockcommentstartdelimiter value defaultblockcommentenddelimiter used start end block comment delimiters text enclosed block comment omitted output addition multiple adjacent whitespace characters collapsed single space script sql script separator text separating statement typically newline character statements list contain individual statements scriptexception error occurred splitting sql script splitsqlscriptstring char list splitsqlscriptencodedresource string string string string string list
split sql script separate statements delimited provided separator string individual statement added provided list within script provided commentprefix honored text beginning comment prefix extending end line omitted output similarly provided blockcommentstartdelimiter blockcommentenddelimiter delimiters honored text enclosed block comment omitted output addition multiple adjacent whitespace characters collapsed single space resource resource script read script sql script separator text separating statement typically newline character commentprefix prefix identifies sql line comments typically blockcommentstartdelimiter start block comment delimiter never null empty blockcommentenddelimiter end block comment delimiter never null empty statements list contain individual statements scriptexception error occurred splitting sql script
execute given sql script using default settings statement separators comment delimiters exception handling flags statement separators comments removed executing individual statements within supplied script warning method not release provided connection connection jdbc connection use execute script already configured ready use resource resource potentially associated specific encoding load sql script scriptexception error occurred executing sql script executesqlscriptconnection encodedresource boolean boolean string string string string defaultstatementseparator defaultcommentprefix defaultblockcommentstartdelimiter defaultblockcommentenddelimiter orgspringframeworkjdbcdatasourcedatasourceutilsgetconnection orgspringframeworkjdbcdatasourcedatasourceutilsreleaseconnection
execute given sql script statement separators comments removed executing individual statements within supplied script warning method not release provided connection connection jdbc connection use execute script already configured ready use resource resource potentially associated specific encoding load sql script continueonerror whether continue without throwing exception event error ignorefaileddrops whether continue event specifically error drop statement commentprefix prefix identifies singleline comments sql script typically separator script statement separator defaults value defaultstatementseparator specified falls back value fallbackstatementseparator last resort may set value eofstatementseparator signal script contains single statement without separator blockcommentstartdelimiter start block comment delimiter blockcommentenddelimiter end block comment delimiter scriptexception error occurred executing sql script defaultstatementseparator fallbackstatementseparator eofstatementseparator orgspringframeworkjdbcdatasourcedatasourceutilsgetconnection orgspringframeworkjdbcdatasourcedatasourceutilsreleaseconnection
construct new resourcedatabasepopulator supplied values continueonerror flag indicate failures sql logged cause failure ignorefaileddrops flag indicate failed sql drop statement ignored sqlscriptencoding encoding supplied sql scripts may null empty indicate platform encoding scripts scripts execute initialize clean database never null 403
executedatasource
add multiple scripts execute initialize clean database scripts scripts execute never null
set scripts execute initialize clean database replacing previously added scripts scripts scripts execute never null
add script execute initialize clean database script path sql script never null
set start delimiter identifies block comments within sql scripts defaults blockcommentstartdelimiter start delimiter block comments never null empty 403 setblockcommentenddelimiter
set end delimiter identifies block comments within sql scripts defaults blockcommentenddelimiter end delimiter block comments never null empty 403 setblockcommentstartdelimiter
use plain setdatabasepopulator database populator set database
use plain setdatabasecleaner database cleaner clean database
execute given databasepopulator given datasource populator databasepopulator execute datasource datasource execute dataaccessexception error occurs specifically scriptexception
specify one populators delegate to
implementation always returns false
implementation always returns true
create new factory need add parameters via addparameter method parameters callstring sql call string
create new factory given sql given parameters callstring sql call string declaredparameters list sqlparameter objects
create new sqloutparameter name name parameter used input output maps sqltype parameter sql type according javasqltypes typename type name parameter optional sqlreturntype custom value handler complex type optional
return custom return type any
return resultsetextractor held parameter any
create new resultsetsupportingsqlparameter name name parameter used input output maps sqltype parameter sql type according javasqltypes rse resultsetextractor use parsing resultset
implementation always returns false
create new resultsetsupportingsqlparameter name name parameter used input output maps sqltype parameter sql type according javasqltypes rm rowmapper use parsing resultset
return rowmapper held parameter any
return rowcallbackhandler held parameter any
create new resultsetsupportingsqlparameter name name parameter used input output maps sqltype parameter sql type according javasqltypes rch rowcallbackhandler use parsing resultset
create new rowmapperresultsetextractor rowmapper rowmapper creates object row rowsexpected number expected rows just used optimized collection handling
implementation always returns true
return new preparedstatementcreator given parameters sqltouse actual sql statement use if different factorys example named parameter expanding params parameter array may null
create new factory given sql jdbc types sql sql statement execute types int array jdbc types
create new factory need add parameters via addparameter method parameters sql sql statement execute
create new factory given sql parameters sql sql statement execute declaredparameters list sqlparameter objects
retrieve jdbc object value specified column using appropriate value type called required type specified the default implementation delegates jdbcutilsgetresultsetvalue uses resultsetgetobjectindex method additionally includes hack get around oracle returning nonstandard object timestamp datatype see jdbcutilsgetresultsetvalue javadoc details rs resultset holding data index column index object value sqlexception case extraction failure orgspringframeworkjdbcsupportjdbcutilsgetresultsetvaluejavasqlresultset int
retrieve jdbc object value specified column the default implementation calls jdbcutilsgetresultsetvaluejavasqlresultset int class required type specified method delegates getcolumnvaluers index basically calls resultsetgetobjectindex applies additional default conversion appropriate value types rs resultset holding data index column index requiredtype type result object expected match or null none specified object value sqlexception case extraction failure orgspringframeworkjdbcsupportjdbcutilsgetresultsetvaluejavasqlresultset int class getcolumnvaluejavasqlresultset int
extract value single column current row validates one column selected delegates getcolumnvalue also convertvaluetorequiredtype necessary javasqlresultsetmetadatagetcolumncount getcolumnvaluejavasqlresultset int class convertvaluetorequiredtypeobject class
static factory method create new singlecolumnrowmapper with required type specified once requiredtype type result object expected match conversionservice conversionservice converting fetched value 504
convert given column value specified required type called extracted column value match already if required type string value simply get stringified via tostring case number value converted number either number conversion string parsing depending value type otherwise value converted required type using conversionservice value column value extracted getcolumnvalue never null requiredtype type result object expected match never null converted value getcolumnvaluejavasqlresultset int class
retrieve jdbc object value specified column the default implementation uses getobject method additionally implementation includes hack get around oracle returning non standard object timestamp datatype rs resultset holding data index column index object returned orgspringframeworkjdbcsupportjdbcutilsgetresultsetvalue
return value object parameter value holds
create new sqlparametervalue supplying sql type sqltype sql type parameter according javasqltypes typename type name parameter optional value value object
create new sqlparametervalue based given sqlparameter declaration declaredparam declared sqlparameter define value value value object
create new sqlparametervalue supplying sql type sqltype sql type parameter according javasqltypes value value object
create new sqlparametervalue supplying sql type sqltype sql type parameter according javasqltypes scale number digits decimal point for decimal numeric types value value object
create new anonymous sqlparameter supplying sql type sqltype sql type parameter according javasqltypes typename type name parameter optional
create new sqlparameter supplying name sql type name name parameter used input output maps sqltype sql type parameter according javasqltypes typename type name parameter optional
convert list jdbc types defined javasqltypes list sqlparameter objects used package
copy constructor otherparam sqlparameter object copy
create new sqlparameter supplying name sql type name name parameter used input output maps sqltype sql type parameter according javasqltypes scale number digits decimal point for decimal numeric types
return type name parameter any
return name parameter null anonymous
create new anonymous sqlparameter supplying sql type sqltype sql type parameter according javasqltypes scale number digits decimal point for decimal numeric types
create new sqlparameter supplying name sql type name name parameter used input output maps sqltype sql type parameter according javasqltypes
return scale parameter any
create sqlrowset wraps given resultset representing data disconnected fashion this implementation creates spring resultsetwrappingsqlrowset instance wraps standard jdbc cachedrowset instance overridden use different implementation rs original resultset connected disconnected sqlrowset sqlexception thrown jdbc methods newcachedrowset orgspringframeworkjdbcsupportrowsetresultsetwrappingsqlrowset
implementation always returns true
create new argtypepreparedstatementsetter given arguments args arguments set argtypes corresponding sql types arguments
set value prepared statements specified parameter position using passed value type method overridden subclasses needed ps preparedstatement parameterposition index parameter position argtype argument type argvalue argument value sqlexception thrown preparedstatement methods
clean resources held parameter values passed execute method example important closing lob values paramvalues parameter values supplied may null disposablesqltypevaluecleanup orgspringframeworkjdbccoresupportsqllobvaluecleanup
set value parameter method used based sql type parameter handle complex types like arrays lobs ps prepared statement callable statement paramindex index parameter setting sqltype sql type parameter invalue value set plain value sqltypevalue sqlexception thrown preparedstatement methods sqltypevalue
set value parameter method used based sql type parameter handle complex types like arrays lobs ps prepared statement callable statement paramindex index parameter setting param parameter declared including type invalue value set sqlexception thrown preparedstatement methods
set value parameter method used based sql type parameter handle complex types like arrays lobs ps prepared statement callable statement paramindex index parameter setting sqltype sql type parameter typename type name parameter optional used sql null sqltypevalue scale number digits decimal point for decimal numeric types invalue value set plain value sqltypevalue sqlexception thrown preparedstatement methods sqltypevalue
set specified preparedstatement parameter null respecting databasespecific peculiarities
check whether given value javautildate but one jdbcspecific subclasses
clean resources held parameter values passed execute method example important closing lob values paramvalues parameter values supplied may null disposablesqltypevaluecleanup orgspringframeworkjdbccoresupportsqllobvaluecleanup
check whether given value treated string value
derive default sql type given java type javatype java type translate corresponding sql type sqltypevaluetypeunknown none found
set value parameter method used based sql type parameter handle complex types like arrays lobs ps prepared statement callable statement paramindex index parameter setting sqltype sql type parameter typename type name parameter optional used sql null sqltypevalue invalue value set plain value sqltypevalue sqlexception thrown preparedstatement methods sqltypevalue
return conversionservice binding jdbc values bean properties null none 43
set class row mapped to
convert name camelcase underscored name lower case upper case letters converted lower case preceding underscore name original name converted name 42 lowercasename
get class mapping to
extract values columns current row utilizes public setters result set metadata javasqlresultsetmetadata
initialize mapping metadata given class mappedclass mapped class
create new beanpropertyrowmapper mappedclass class row mapped checkfullypopulated whether were strictly validating bean properties mapped corresponding database fields
retrieve jdbc object value specified column the default implementation calls jdbcutilsgetresultsetvaluejavasqlresultset int class subclasses may override check specific value types upfront postprocess values return getresultsetvalue rs resultset holding data index column index pd bean property result object expected match object value sqlexception case extraction failure orgspringframeworkjdbcsupportjdbcutilsgetresultsetvaluejavasqlresultset int class
initialize given beanwrapper used row mapping called row the default implementation applies configured conversionservice any overridden subclasses bw beanwrapper initialize getconversionservice beanwrappersetconversionservice
set value prepared statements specified parameter index using passed value method overridden subclasses needed ps preparedstatement parameterposition index parameter position argvalue value set sqlexception thrown preparedstatement methods
return types columns javasqltypes constants valid processrow invoked first time types columns javasqltypes constants indexed 0 n1
implementation resultsetcallbackhandler work column size first row otherwise count rows subclasses perform custom extraction processing overriding processrowresultset int method processrowjavasqlresultset int
return names columns valid processrow invoked first time names columns indexed 0 n1
extract output parameters completed stored procedure cs jdbc wrapper stored procedure parameters parameter list stored procedure map contains returned results
throw sqlwarningexception encountering actual warning warning warnings object current statement may null case method nothing sqlwarningexception case actual warning raised
query using prepared statement allowing preparedstatementcreator preparedstatementsetter query methods use method application code always work either creator setter psc callback handler create preparedstatement given connection pss object knows set values prepared statement null sql assumed contain bind parameters rse object extract results arbitrary result object returned resultsetextractor dataaccessexception problem
translate given sqlexception generic dataaccessexception task readable text describing task attempted sql sql query update caused problem may null ex offending sqlexception dataaccessexception wrapping sqlexception never null 50 getexceptiontranslator
construct new jdbctemplate given datasource obtain connections from note trigger initialization exception translator datasource jdbc datasource obtain connections
create map instance used results map if resultsmapcaseinsensitive set true linkedcaseinsensitivemap created otherwise linkedhashmap created results map instance setresultsmapcaseinsensitive isresultsmapcaseinsensitive
process given resultset stored procedure rs resultset process param corresponding stored procedure parameter map contains returned results
create closesuppressing proxy given jdbc connection called execute method the proxy also prepares returned jdbc statements applying statement settings fetch size max rows query timeout con jdbc connection create proxy connection proxy javasqlconnectionclose executeconnectioncallback applystatementsettings
prepare given jdbc statement or preparedstatement callablestatement applying statement settings fetch size max rows query timeout stmt jdbc statement prepare sqlexception thrown jdbc api setfetchsize setmaxrows setquerytimeout orgspringframeworkjdbcdatasourcedatasourceutilsapplytransactiontimeout
determine sql potential provider object sqlprovider object thats potentially sqlprovider sql string null sqlprovider
throw sqlwarningexception were ignoring warnings else log warnings at debug level stmt current jdbc statement sqlwarningexception ignoring warnings orgspringframeworkjdbcsqlwarningexception
construct new jdbctemplate given datasource obtain connections from note depending lazyinit flag initialization exception translator triggered datasource jdbc datasource obtain connections lazyinit whether lazily initialize sqlexceptiontranslator
extract returned resultsets completed stored procedure cs jdbc wrapper stored procedure updatecountparameters parameter list declared update count parameters stored procedure resultsetparameters parameter list declared resultset parameters stored procedure map contains returned results
delegate method perform actual compilation subclasses override template method perform compilation invoked base classs compilation complete
get name table insert
create preparedstatement used insert operation generated keys con connection use preparedstatement
set name schema insert
compile jdbcinsert using provided parameters metadata plus settings finalizes configuration object subsequent attempts compile ignored implicitly called first time uncompiled insert executed invaliddataaccessapiusageexception object hasnt correctly initialized example datasource provided
delegate method execute batch insert
method provides execution insert using passedin sqlparametersource returning generated keys parametersource parameter names values used insert keyholder containing keys generated insert
method provides execution insert using passedin map parameters returning generated keys args map parameter names values used insert keyholder containing keys generated insert
set name table insert
check whether operation compiled already lazily compile already compiled automatically called validateparameters
constructor used initializing using jdbctemplate jdbctemplate jdbctemplate use
set names generated keys
delegate method execute insert
delegate method executes insert using passedin map parameters args map parameter names values used insert number rows affected
get name catalog insert
method provides execution insert using passedin sqlparametersource returning generated key parametersource parameter names values used insert key generated insert
get name schema insert
delegate method executes batch insert using passedin maps parameters batch array maps parameter names values used batch insert array number rows affected
delegate method execute insert generating single key
delegate method execute insert generating number keys
method check whether allowed make configuration changes time class compiled changes configuration allowed
internal implementation setting parameter values preparedstatement preparedstatement values values set
specify name single generated key column
set names columns used
delegate method executes batch insert using passedin sqlparametersource sqlparametersources batch array sqlparametersource parameter names values used insert array number rows affected
method provides execution insert using passedin map parameters returning generated key args map parameter names values used insert key generated insert
delegate method executes insert using passedin sqlparametersource parametersource parameter names values used insert number rows affected
set name catalog insert
delegate method perform actual compilation subclasses override template method perform compilation invoked base classs compilation complete
add orgspringframeworkjdbccorerowmapper specified parameter column parametername name parameter column rowmapper rowmapper implementation use
get name stored procedure
delegate method executes call using passedin sqlparametersource parametersource parameter names values used call map parameters
get call string used based parameters metadata
check whether operation compiled already lazily compile already compiled automatically called doexecute
constructor used initializing using jdbctemplate jdbctemplate jdbctemplate use
delegate method perform actual call processing
get callablestatementcreatorfactory used
delegate method executes call using passedin map parameters args map parameter name values map parameters
get schema name used
add declared parameter list parameters call only parameters declared sqlparameter sqlinoutparameter used provide input values different storedprocedure class backwards compatibility reasons allows input values provided parameters declared sqloutparameter parameter sqlparameter add
delegate method executes call using passedin array parameters args array parameter values order values must match order declared stored procedure map parameters
compile jdbccall using provided parameters metadata plus settings this finalizes configuration object subsequent attempts compile ignored implicitly called first time uncompiled call executed orgspringframeworkdaoinvaliddataaccessapiusageexception object hasnt correctly initialized example datasource provided
get catalog name used
get name single parameter return value used functions procedures one parameter
determine type name specified named parameter paramname name parameter type name specified parameter null known
extract available parameter names possible this optional operation primarily use orgspringframeworkjdbccoresimplesimplejdbcinsert orgspringframeworkjdbccoresimplesimplejdbccall array parameter names null determinable 503 sqlparametersourceutilsextractcaseinsensitiveparameternames
return namedparameterjdbctemplate wrapping configured jdbctemplate
create namedparameterjdbctemplate based configured jdbctemplate
add parameter parameter source paramname name parameter value value parameter reference parameter source its possible chain several calls together
add parameter parameter source paramname name parameter value value parameter sqltype sql type parameter reference parameter source its possible chain several calls together
add map parameters parameter source values map holding existing parameter values can null reference parameter source its possible chain several calls together
add parameter parameter source paramname name parameter value value parameter sqltype sql type parameter typename type name parameter reference parameter source its possible chain several calls together
derives default sql type corresponding property type orgspringframeworkjdbccorestatementcreatorutilsjavatypetosqlparametertype
provide access property names wrapped bean uses support provided propertyaccessor interface array containing known property names
build preparedstatementcreatorfactory based given sql named parameters parsedsql parsed representation given sql statement paramsource container arguments bind corresponding preparedstatementcreatorfactory 513 getpreparedstatementcreatorstring sqlparametersource consumer getparsedsqlstring
create new namedparameterjdbctemplate given classic spring orgspringframeworkjdbccorejdbctemplate classicjdbctemplate classic spring jdbctemplate wrap
expose classic spring jdbctemplate itself available particular passing jdbctemplate consumers if sufficient purposes hand getjdbcoperations recommended variant 503
build preparedstatementcreator based given sql named parameters note used update variant generated key handling also delegated getpreparedstatementcreatorstring sqlparametersource sql sql statement execute paramsource container arguments bind customizer callback setting properties preparedstatementcreatorfactory use applied actual newpreparedstatementcreator call corresponding preparedstatementcreator 505 getparsedsqlstring preparedstatementcreatorfactorypreparedstatementcreatorfactorystring list preparedstatementcreatorfactorynewpreparedstatementcreatorobject
expose classic spring jdbctemplate operations allow invocation less commonly used methods
obtain parsed representation given sql statement the default implementation uses lru cache upper limit 256 entries sql original sql statement representation parsed sql statement
create new namedparameterjdbctemplate given datasource creates classic spring orgspringframeworkjdbccorejdbctemplate wraps it datasource jdbc datasource access
create array sqlparametersource objects populated data values passed either map bean object define included batch operation candidates collection objects containing values used array sqlparametersource 502 mapsqlparametersource beanpropertysqlparametersource namedparameterjdbctemplatebatchupdatestring sqlparametersource
create wrapped value parameter type information plain object not source source parameter values type information parametername name parameter value object
create map case insensitive parameter names together original name parametersource source parameter names map used case insensitive matching parameter names
create array mapsqlparametersource objects populated data values passed in define included batch operation valuemaps array map instances containing values used array sqlparametersource mapsqlparametersource namedparameterjdbctemplatebatchupdatestring map
create array sqlparametersource objects populated data values passed either map bean object define included batch operation candidates object array objects containing values used array sqlparametersource mapsqlparametersource beanpropertysqlparametersource namedparameterjdbctemplatebatchupdatestring sqlparametersource
exposes original sql string
add named parameter parsed sql statement parametername name parameter startindex start index original sql string endindex end index original sql string
return type name given parameter registered paramname name parameter type name parameter null registered
register sql type given parameter paramname name parameter sqltype sql type parameter
register sql type given parameter paramname name parameter typename type name parameter
return sql type given parameter registered paramname name parameter sql type parameter typeunknown registered
convert map named parameter values corresponding array this shortcut version buildvaluearrayparsedsql sqlparametersource javautillist sql sql statement parammap map parameters array values
parse sql statement locate placeholders named parameters named parameters substituted jdbc placeholder sql sql statement parsed statement represented parsedsql instance
skip comments quoted names present sql statement statement character array containing sql statement position current position statement next position process comments quotes skipped
convert parameter declarations sqlparametersource corresponding list sqlparameters necessary order reuse existing methods jdbctemplate sqlparameter named parameter placed correct position resulting list based parsed sql statement info parsedsql parsed sql statement paramsource source named parameters
find matching parameter given list declared parameters declaredparams declared sqlparameter objects paramname name desired parameter paramindex index desired parameter declared sqlparameter null none found
convert map named parameter values corresponding array parsedsql parsed sql statement paramsource source named parameters declaredparams list declared sqlparameter objects may null specified parameter metadata built value array form sqlparametervalue objects array values
parse sql statement locate placeholders named parameters named parameters substituted jdbc placeholder select list expanded required number placeholders select lists may contain array objects case placeholders grouped enclosed parentheses allows use expression lists sql statement like select id name state table name age john 35 ann 50 the parameter values passed used determine number placeholders used select list select lists limited 100 fewer elements larger number elements guaranteed supported database strictly vendordependent parsedsql parsed representation sql statement paramsource source named parameters sql statement substituted parameters parsesqlstatement
parse sql statement locate placeholders named parameters named parameters substituted jdbc placeholder select list expanded required number placeholders this shortcut version substitutenamedparametersparsedsql sqlparametersource sql sql statement paramsource source named parameters sql statement substituted parameters
convert parameter types sqlparametersource corresponding int array necessary order reuse existing methods jdbctemplate named parameter types placed correct position object array based parsed sql statement info parsedsql parsed sql statement paramsource source named parameters
parse sql statement locate placeholders named parameters named parameters substituted jdbc placeholder this shortcut version parsesqlstatementstring combination substitutenamedparametersparsedsql sqlparametersource sql sql statement actual parsed sql statement
delegates handlenorowfound handlemultiplerowsfound streamdata according resultset state converts ioexception thrown streamdata lobretrievalfailureexception handlenorowfound handlemultiplerowsfound streamdata orgspringframeworkjdbclobretrievalfailureexception
handle case resultset contain row dataaccessexception corresponding exception default emptyresultdataaccessexception orgspringframeworkdaoemptyresultdataaccessexception
handle case resultset contains multiple rows dataaccessexception corresponding exception default incorrectresultsizedataaccessexception orgspringframeworkdaoincorrectresultsizedataaccessexception
create new clob value given character stream reader character stream containing clob value length length clob value lobhandler lobhandler used
create new blob value given byte array bytes byte array containing blob value lobhandler lobhandler used
create new clob value given content string content string containing clob value lobhandler lobhandler used
close lobcreator any
create new blobclob value given stream stream stream containing lob value length length lob value lobhandler lobhandler used
set specified content via lobcreator
create new abstractlobcreatingpreparedstatementcallback given lobhandler lobhandler lobhandler create lobcreators
load bean definitions database via given sql string sql sql query use loading bean definitions first three columns must bean name property name value join columns permitted eg select beanname property value config configappid 1 its also possible perform join column names significant ordering first three columns
create new jdbcbeandefinitionreader delegates given propertiesbeandefinitionreader underneath datasource jdbctemplate still need set setdatasource setjdbctemplate
set jdbctemplate used bean factory contains settings datasource sqlexceptiontranslator etc
implementation calls setvaluesifavailable sets instances exhaustion flag accordingly
implementation return instances current exhaustion flag
implementation returns integermaxvalue overridden subclasses lower maximum batch size
return sqlexceptiontranslator daos jdbctemplate translating sqlexceptions custom jdbc access code orgspringframeworkjdbccorejdbctemplategetexceptiontranslator
set jdbctemplate dao explicitly alternative specifying datasource
return jdbc datasource used dao
set jdbc datasource used dao
get jdbc connection either current transaction new one jdbc connection cannotgetjdbcconnectionexception attempt get connection failed orgspringframeworkjdbcdatasourcedatasourceutilsgetconnectionjavaxsqldatasource
return jdbctemplate dao preinitialized datasource set explicitly
provide access version info subclasses
method supporting metadata processing tables columns
method supporting metadata processing table
provide access default schema subclasses
create tablemetadataprovider based database metadata datasource used retrieve metadata context class holds configuration metadata instance tablemetadataprovider implementation used
constructor taking properties
constructor used initialize provided database metadata databasemetadata metadata used includesynonyms whether include synonyms
create callmetadataprovider based database metadata datasource jdbc datasource use retrieving metadata context class holds configuration metadata instance callmetadataprovider implementation used
determine whether declared parameter qualifies return parameter purposes type databasemetadataprocedurecolumnreturn databasemetadataprocedurecolumnresult 4315
get parameter type name
get parameter name
constructor taking properties
get name catalog
build call string based configuration metadata information call string used
get name procedure
create returnresultsetparametersqloutparameter depending support provided jdbc driver used database use parametername name parameter also used name list returned output rowmapper rowmapper implementation used map data returned result set appropriate sqlparameter
match input parameter values parameters declared used call inparameters input values map containing matched parameter names value taken input
get name single parameter call multiple parameters name first one returned
match input parameter values parameters declared used call parametersource input values map containing matched parameter names value taken input
get name schema
reconcile provided parameters available metadata add new ones appropriate
match provided column names values list columns used parametersource parameter names values
database support simple query retrieve generated keys jdbc 30 feature supported javasqldatabasemetadatasupportsgetgeneratedkeys 4315 favor getsimplequeryforgetgeneratedkey
get name catalog context
compare columns created metadata declared columns return reconciled list declaredcolumns declared column names generatedkeynames names generated key columns
build insert string based configuration metadata information insert string used
get name table context
database support simple query retrieve generated keys jdbc 30 feature supported javasqldatabasemetadatasupportsgetgeneratedkeys
build array javasqltypes based configuration metadata information array types used
process current metadata provided configuration options datasource datasource used declaredcolumns columns declared generatedkeynames name generated keys
match provided column names values list columns used inparameters parameter names values
get name schema context
process procedure column metadata
database support use catalog name procedure calls
database support use schema name procedure calls
get result object path expression int path object path int matching object path javalangclasscastexception thrown object cannot casted expected type
get result object path expression map path object path keytype type expected key valuetype type expected value type expected key type expected value map matching object path javalangclasscastexception thrown object cannot casted expected type
get result object path expression boolean path object path object matching object path may primitive type list map javalangclasscastexception thrown object cannot casted expected type
get result object path expression double path object path object matching object path javalangclasscastexception thrown object cannot casted expected type
add parameter expression example string name systemconsolereadline listmap books withobjectparamname namegetstorebookfindall book bookauthor name key name parameter use name expression variable value value parameter new jsonpath instance parameter set
get result object path expression list path object path generictype generic list type type object matching object path javalangclasscastexception thrown object cannot casted expected type
get result object path expression java object eg given following object document store book category reference author nigel rees title sayings century price 895 category fiction author evelyn waugh title sword honour price 1299 category fiction author herman melville title moby dick isbn 0553213113 price 899 category fiction author j r r tolkien title the lord rings isbn 0395193958 price 2299 bicycle color red price 1995 java object like this public class book private string category private string author private string title private string isbn private float price public string getcategory return category public void setcategorystring category thiscategory category public string getauthor return author public void setauthorstring author thisauthor author public string gettitle return title public void settitlestring title thistitle title public string getisbn return isbn public void setisbnstring isbn thisisbn isbn public float getprice return price public void setpricefloat price thisprice price book book fromobjectgetobjectstorebook2 bookclass maps second book book instance path path object map objecttype class type expected object type expected object object
get result object path expression java object generic type eg given following object document store book category reference author nigel rees title sayings century price 895 category fiction author evelyn waugh title sword honour price 1299 category fiction author herman melville title moby dick isbn 0553213113 price 899 category fiction author j r r tolkien title the lord rings isbn 0395193958 price 2299 bicycle color red price 1995 want get book mapstring object mapstring object book fromobjectgetobjectstorebook2 new typerefmapstring object maps second book book instance path path object map typeref class type expected object type expected object object
peeks json jsonpath parse printing console prettified manner continue working jsonpath afterwards mainly debug purposes want return prettified version content see prettify want return prettified version content also print console use prettyprint note content guaranteed looking exactly like source peek content downloaded transformed another data structure used jsonpath json rendered data structure jsonpath instance
peeks json jsonpath parse printing console continue working jsonpath afterwards mainly debug purposes want return prettified version content see prettify want return prettified version content also print console use prettyprint note content guaranteed looking exactly like source peek content downloaded transformed another data structure used jsonpath json rendered data structure jsonpath instance
set root path document dont need write entire path eg final jsonpath jsonpath new jsonpathobjectsetrootstorebook assertthatjsonpathgetintsize equalto4 assertthatjsonpathgetlistauthor stringclass hasitemj r r tolkien rootpath root path use
get result object path expression short path object path object matching object path javalangclasscastexception thrown object cannot casted expected type
get json prettified string note content guaranteed looking exactly like source peek content downloaded transformed another data structure used jsonpath json rendered data structure json prettified string
get result object path expression long path object path object matching object path javalangclasscastexception thrown object cannot casted expected type
get result object path expression float path object path object matching object path javalangclasscastexception thrown object cannot casted expected type
get print json prettified string note content guaranteed looking exactly like source peek content downloaded transformed another data structure used jsonpath json rendered data structure json prettified string
get result object path expression byte path object path object matching object path javalangclasscastexception thrown object cannot casted expected type
specify custom gson object mapper factory gsonobjectmapperfactory object mapper factory
create new jsonpathconfig uses defaultcharset deserializing json data
creates json path configuration uses specified parser type default defaultparsertype parser type use null classpath scanning used
specify custom jackson 10 object mapper factory jackson1objectmapperfactory object mapper factory
create new instance jsonpathconfig based properties supplied config config config copy
returns boolean indicating whether type included deal floats doubles exclusive bigdecimal true value floatanddouble double false otherwise
specify custom jackson 10 object mapper factory jackson2objectmapperfactory object mapper factory
new jsonpathconfig instance assumes supplied charset parsing json documents
creates new jsonpathconfig configured return floats doubles use systems default charset json data
create new jsonpathconfig returns json numbers either doubles floats bigdecimals
creates json path configuration uses specified object deserializer default defaultobjectdeserializer object deserializer use null classpath scanning used
specifies jsonpath use floats doubles bigdecimals represent json numbers numberreturntype choice new instance jsonpathconfig given configuration
creates hamcrest matcher validates json document conforms json schema provided method schema reader points json schema hamcrest matcher
creates hamcrest matcher validates json document conforms json schema provided method file file points json schema hamcrest matcher
creates hamcrest matcher validates json document conforms json schema provided method schema string defining json schema hamcrest matcher
usually entrypoint api need specify parameters body request example given paramx y when getsomething then statuscode200 bodyxy notnullvalue note method with another syntax webtestclientrequestspecification
build webtestclient using given fully initialized ie refreshed applicationcontext assign rest assured context application context use configurersorexchangefilterfunctions webtestclientconfigurers orgspringframeworkwebreactivefunctionclientexchangefilterfunctions apply
reset static configurations default values
enable logging request response rest assured test validation fails specified log detail shortcut for restassuredconfig new restassuredwebtestclientconfiglogconfiglogconfigenableloggingofrequestandresponseifvalidationfailslogdetail logdetail log detail show log
set attribute update strategy given value updatestrategy update strategy use attribute parameters new instance webtestclientparamconfig
set query parameter update strategy given value updatestrategy update strategy use query parameters new instance webtestclientparamconfig
set request parameter update strategy given value request parameter parameter turn form query parameter depending request example givenparamname valuewhengetx updatestrategy update strategy use request parameters new instance webtestclientparamconfig
set form parameter update strategy given value updatestrategy update strategy use form parameters new instance webtestclientparamconfig
set header config headerconfig headerconfig set updated restassuredwebtestclientconfig
set webtestclient config webtestclientconfig webtestclientconfig set updated restassuredwebtestclientconfig
set xml config xmlconfig xmlconfig set updated restassuredwebtestclientconfig
set session config sessionconfig sessionconfig set updated restassuredwebtestclientconfig
set encoder config encoderconfig encoderconfig set updated restassuredwebtestclientconfig
create new restassuredwebtestclientconfig supplied configs
set decoder config decoderconfig decoderconfig set updated restassuredwebtestclientconfig
set object mapper config objectmapperconfig objectmapperconfig set updated restassuredwebtestclientconfig
set log config logconfig logconfig set updated restassuredwebtestclientconfig
create new restassuredwebtestclientconfig default configurations
set multipart config multipartconfig multipartconfig set updated restassuredwebtestclientconfig
set async config asyncconfig asyncconfig set updated restassuredwebtestclientconfig
set json config jsonconfig jsonconfig set updated restassuredwebtestclientconfig
set parameter config paramconfig webtestclientparamconfig set updated restassuredwebtestclientconfig
merge builder settings another specification note supplied specification overwrite data current specification following settings overwritten content type request body interceptors config if defined following settings merged parameters cookies headers specification specification add request specification builder
specify object request content automatically serialized json xml sent request using specific object mapper type works post patch put methods only trying http methods cause exception thrown example use message message new message messagesetmessagemy beautiful message given bodymessage objectmappergson expect contentequaltoresponse beautiful message when postbeautifulmessage note setbodyobject objectmapper except syntactic difference object object serialize send request mappertype object mapper type used request specification
parametersmap map containing parameter names values send request request specification builder
specify string send server using multipart form data use contenttype textplain want please use overloaded method controlname defines control name body part html attribute name input tag contentbody string send request specification
parametersmap map containing parameter names values send request request specification builder
specify string request body such eg json xml sent request works post put patch methods only trying http methods cause exception thrown body body send request specification builder
add header sent request headername header name headervalue header value request specification builder
parametername parameter name parametervalues zero many parameter values parameter name request specification builder addformparamstring object
initialize webtestclientbuilder used create webtestclient instance note override webtestclient instances configured setters builder builder use webtestclientrequestspecbuilder webtestclientrequestspecificationstandalonesetupwebtestclientbuilder
specify file upload server using multipart form data uploading specific control name use contenttype applicationoctetstream want please use overloaded method file file upload controlname defines control name body part html attribute name input tag request specification
define configuration redirection settings http client parameters config configuration use request null config used request specification builder
add cookies sent request map eg cookies map containing cookie names values set request request specification builder
parametervalues zero many parameter values parameter name request specification builder
specify byte array request body sent request works post http method trying http methods cause exception thrown body body send request specification builder
specify string send server using multipart form data specific mimetype controlname defines control name body part html attribute name input tag contentbody string send mimetype mimetype request specification
parametername parameter key parametervalues zero many parameter values parameter name request specification builder
add request attribute attributename attribute name attributevalue attribute value request specification builder
initialize webapplicationcontext used create webtestclient instance note override webtestclient instances configured setters context webapplicationcontext use webtestclientconfigurers orgspringframeworktestwebreactiveserverwebtestclientconfigurers applied creating webtestclient instance webapplicationcontext optional webtestclientrequestspecbuilder webtestclientrequestspecificationwebappcontextsetupwebapplicationcontext webtestclientconfigurer
specify inputstream upload server using multipart form data use contenttype applicationoctetstream want please use overloaded method controlname defines control name body part html attribute name input tag filename name content youre uploading stream stream want send request specification
add detailed cookie cookie cookie add request specification builder
specify file upload server using multipart form data uploading specific control name contenttype file file upload controlname defines control name body part html attribute name input tag mimetype contenttype request specification
parametersmap map containing parameter names values send request request specification builder
set basepath property webtestclientrequestspecbuilder instead using static field restassuredwebtestclientbasepath webtestclientrequestspecbuilder builder new webtestclientrequestspecbuilder buildersetbasepathsomething webtestclientrequestspecification specs builderbuild givenspecspecs basepath webtestclientrequestspecbuilder
add header sent request header header request specification builder
specify object request content automatically serialized json xml sent request object primitive hrefhttpdownloadoraclecomjavase6docsapijavalangnumberhtmlnumber object converted string put request body works post put patch methods only trying http methods cause exception thrown object object serialize send request request specification
specify content type request contenttype content type request request specification builder contenttype
set session id request use configured session id name configuration by default value sessionconfigdefaultsessionidname configure session id name using restassuredwebtestclientconfig newconfigsessionconfignew sessionconfigsessionidnamesessionidname use setsessionidstring string method set request only sessionidvalue session id value request specification
parametername parameter key parametervalues parameter values request specification builder
enabled logging specified log detail set logconfig configure print stream pretty printing options logdetail log detail webtestclientrequestspecbuilder
parametername parameter key parametervalues parameter values request specification builder addformparamstring object
add request attributes attributesmap map containing request attribute names values request specification builder
specify bytearray upload server using multipart form data controlname defines control name body part html attribute name input tag filename name content youre uploading bytes bytes want send mimetype contenttype request specification
specify content type request string contenttype content type request request specification builder
specify object request content automatically serialized json xml sent request using specific object mapper works post patch put methods only trying http methods cause exception thrown note setbodyobject objectmappertype except syntactic difference object object serialize send request mapper object mapper request specification
specify inputstream upload server using multipart form data controlname defines control name body part html attribute name input tag filename name content youre uploading stream stream want send mimetype contenttype request specification
specify bytearray upload server using multipart form data use contenttype applicationoctetstream want please use overloaded method controlname defines control name body part html attribute name input tag filename name content youre uploading bytes bytes want send request specification
add cookie sent request key cookie key value cookie value cookienamevaluepairs additional cookies values actually create two cookies name different values request specification builder
parametername parameter key parametervalues parameter values request specification builder addqueryparamstring object
add headers sent request map headers map containing header names values send request request specification builder
webtestclient instance use note override orgspringframeworktestwebreactiveserverwebtestclient instances configured setters webtestclient webtestclient instance webtestclientrequestspecbuilder
standalone setup used supplying set controllers note override webtestclient instances configured setters controllers controllers use webtestclientrequestspecbuilder webtestclientrequestspecificationstandalonesetupobject
set session id name value request itll override default session id name configuration by default value sessionconfigdefaultsessionidname configure default session id name using restassuredwebtestclientconfig newconfigsessionconfignew sessionconfigsessionidnamesessionidname use webtestclientrequestspecbuildersetsessionidstring method set session id value without specifying name request sessionidname session id name sessionidvalue session id value request specification
specify file upload server using multipart form data uploading assume control name file contenttype applicationoctetstream want please use overloaded method file file upload request specification
attributesmap map containing request attribute names values webtestclientrequestspecification updated attributes note set attributes clientrequest webtestclient given way webtesclient works hood arguments remain client side propagated serverrequest
attributename attribute name attributevalue attribute value webtestclientrequestspecification updated attributes note set attributes clientrequest webtestclient given way webtesclient works hood arguments remain client side propagated serverrequest
authenticate using given principal used as restassuredauthentication principalmyprincipal mockmvcrequestspecbuilder mockmvcrequestspecification req new mockmvcrequestspecbuildersetauthprincipalmyprincipal principal principal use mockmvcauthenticationscheme instance mockmvcauthenticationspecificationprincipaljavasecurityprincipal
authenticate using supplied authentication instance orgspringframeworksecuritycoreauthentication spring security used as restassuredauthentication authenticationmyauth mockmvcrequestspecbuilder mockmvcrequestspecification req new mockmvcrequestspecbuildersetauthauthenticationmyauth authentication authentication instance use mockmvcauthenticationscheme instance mockmvcauthenticationspecificationauthenticationobject
build mockmvc using given fully initialized ie refreshed webapplicationcontext assign rest assured orgspringframeworkwebservletdispatcherservlet use context discover spring mvc infrastructure application controllers it context must configured javaxservletservletcontext context web application context use mockmvcconfigurers mockmvcconfigurers applied creating mockmvc instance webapplicationcontext optional
reset static configurations default values
enable logging request response rest assureds test validation fails specified log detail shortcut for restassuredconfig new restassuredmockmvcconfiglogconfiglogconfigenableloggingofrequestandresponseifvalidationfailslogdetail logdetail log detail show log
authenticate using given principal used as restassuredauthentication principalmyprincipal mockmvcrequestspecbuilder mockmvcrequestspecification req new mockmvcrequestspecbuildersetauthprincipalmyprincipal principal principal use mockmvcauthenticationscheme instance mockmvcauthenticationspecificationprincipalobject
authenticate using given principal credentials used as restassuredauthentication principalwithcredentialsmyprincipal mycredentials mockmvcrequestspecbuilder mockmvcrequestspecification req new mockmvcrequestspecbuildersetauthprincipalwithcredentialsmyprincipal mycredentials principal principal use credentials credentials use authorities optional list authorities mockmvcauthenticationscheme instance mockmvcauthenticationspecificationprincipalwithcredentialsobject object string
assign one orgspringframeworktestwebservletresulthandler thatll executes request made note its recommended use withrequestpostprocessor requestpostprocessor instead method setting authenticationauthorization based requestpostprocessors postprocessor postprocessor add additionalpostprocessors additional postprocessors add mockmvcrequestspecificationpostprocessorsrequestpostprocessor requestpostprocessor
authenticate using requestpostprocessor mainly useful added springsecuritytest artifact classpath allows example restassuredauthentication withuserusernamepasswordpassword user statically imported orgspringframeworksecuritytestwebservletrequestsecuritymockmvcrequestpostprocessors requestpostprocessor first request post processor used authentication additionalrequestpostprocessor additional request post processors used authentication mockmvcauthenticationscheme instance
assign one orgspringframeworktestwebservletresulthandler thatll executes request made resulthandler result handler resulthandlers additional result handlers optional
creates responseawarematcher extracts given path response wraps orghamcrestmatchersequaltoobject matcher useful resource eg returns given json userid myid href httplocalhost8080myid test like this getxthenbodyhref containspathuserid path path check responseawarematcher
creates responseawarematcher extracts given path response wraps orghamcrestmatchersequaltoobject matcher useful resource eg returns given json userid myid playerid myid test like this getxthenbodyuserid equaltopathplayerid path path check responseawarematcher
creates responseawarematcher extracts given path response wraps orghamcrestmatchersequaltoobject matcher useful resource eg returns given json userid myid href httplocalhost8080myid test like this getxthenbodyhref endswithpathuserid path path check responseawarematcher
creates responseawarematcher extracts given path response wraps orghamcrestmatchersequaltoobject matcher useful resource eg returns given json userid myid baseuri httplocalhost8080 href httplocalhost8080myid test like this getxthenbodyhref startswithpathbaseuri path path check responseawarematcher
set multipart config multipartconfig multipartconfig set updated restassuredmockmvcconfig
set header config headerconfig headerconfig set updated restassuredmockmvcconfig
set xml config xmlconfig xmlconfig set updated restassuredmockmvcconfig
set session config sessionconfig sessionconfig set updated restassuredmockmvcconfig
create new restassuredmockmvcconfig supplied configs
set decoder config decoderconfig decoderconfig set updated restassuredmockmvcconfig
set json config jsonconfig jsonconfig set updated restassuredmockmvcconfig
set mockmvc config mockmvcconfig mockmvcconfig set updated restassuredmockmvcconfig
create new restassuredmockmvcconfig default configurations
set parameter config paramconfig mockmvcparamconfig set updated restassuredmockmvcconfig
set log config logconfig logconfig set updated restassuredmockmvcconfig
set async config asyncconfig asyncconfig set updated restassuredmockmvcconfig
set encoder config encoderconfig encoderconfig set updated restassuredmockmvcconfig
set object mapper config objectmapperconfig objectmapperconfig set updated restassuredmockmvcconfig
create new instance specify update strategies parameter types queryparamsupdatestrategy update strategy query parameters formparamsupdatestrategy update strategy form parameters requestparameterupdatestrategy update strategy request parameters sessionupdatestrategy update strategy session parameters
need specify credentials performing request request specification builder
define configuration redirection settings http client parameters config configuration use request null config used request specification builder
add cookies sent request map eg cookies map containing cookie names values set request request specification builder
specify object request content automatically serialized json xml sent request using specific object mapper works post patch put methods only trying http methods cause exception thrown note setbodyobject objectmapper except syntactic difference object object serialize send request mapper object mapper request specification
parametervalues zero many parameter values parameter name request specification builder
parametersmap map containing parameter names values send request request specification builder
initialize webapplicationcontext used create mockmvc instance note override mockmvc instances configured setters context webapplicationcontext use mockmvcconfigurers mockmvcconfigurers applied creating mockmvc instance webapplicationcontext optional mockmvcrequestspecbuilder mockmvcrequestspecificationwebappcontextsetupwebapplicationcontext mockmvcconfigurer
specify string send server using multipart form data specific mimetype controlname defines control name body part html attribute name input tag contentbody string send mimetype mimetype request specification
parametername parameter key parametervalues zero many parameter values parameter name request specification builder
add request attribute attributename attribute name attributevalue attribute value request specification builder
set post processors request postprocessors post processors use request specification builder
specify inputstream upload server using multipart form data use contenttype applicationoctetstream want please use overloaded method controlname defines control name body part html attribute name input tag filename name content youre uploading stream stream want send request specification
add detailed cookie cookie cookie add request specification builder
specify file upload server using multipart form data uploading specific control name contenttype file file upload controlname defines control name body part html attribute name input tag mimetype contenttype request specification
set basepath property mockmvcrequestspecbuilder instead using static field restassuredmockmvcbasepath mockmvcrequestspecbuilder builder new mockmvcrequestspecbuilder buildersetbasepathsomething mockmvcrequestspecification specs builderbuild givenspecspecs basepath mockmvcrequestspecbuilder
specify object request content automatically serialized json xml sent request using specific object mapper type works post patch put methods only trying http methods cause exception thrown example use message message new message messagesetmessagemy beautiful message given bodymessage objectmappergson expect contentequaltoresponse beautiful message when postbeautifulmessage note setbodyobject objectmappertype except syntactic difference object object serialize send request mappertype object mapper type used request specification
specify content type request contenttype content type request request specification builder contenttype
set session id request use configured session id name configuration by default value sessionconfigdefaultsessionidname configure session id name using restassuredmockmvcconfig newconfigsessionconfignew sessionconfigsessionidnamesessionidname use setsessionidstring string method set request only sessionidvalue session id value request specification
parametername parameter key parametervalues parameter values request specification builder
mock mvc instance use interceptor interceptor mockmvcrequestspecbuilder
specify string request body such eg json xml sent request works post put patch methods only trying http methods cause exception thrown body body send request specification builder
parametername parameter key parametervalues parameter values request specification builder addformparamstring object
add request attributes attributesmap map containing request attribute names values request specification builder
mock mvc instance use note override mockmvc instances configured setters mockmvc mock mvc instance mockmvcrequestspecbuilder
specify bytearray upload server using multipart form data use contenttype applicationoctetstream want please use overloaded method controlname defines control name body part html attribute name input tag filename name content youre uploading bytes bytes want send request specification
specify content type request string contenttype content type request request specification builder
add cookie sent request key cookie key value cookie value cookienamevaluepairs additional cookies values actually create two cookies name different values request specification builder
set session attributes sessionattributes session attributes
specify inputstream upload server using multipart form data controlname defines control name body part html attribute name input tag filename name content youre uploading stream stream want send mimetype contenttype request specification
set session id name value request itll override default session id name configuration by default value sessionconfigdefaultsessionidname configure default session id name using restassuredmockmvcconfig newconfigsessionconfignew sessionconfigsessionidnamesessionidname use mockmvcrequestspecbuildersetsessionidstring method set session id value without specifying name request sessionidname session id name sessionidvalue session id value request specification
specify byte array request body sent request works post http method trying http methods cause exception thrown body body send request specification builder
parametername parameter name parametervalues zero many parameter values parameter name request specification builder addformparamstring object
parametername parameter key parametervalues parameter values request specification builder addqueryparamstring object
add result handler resulthandler result handler mockmvcrequestspecbuilder
add headers sent request map headers map containing header names values send request request specification builder
standalone setup used supplying set controllers note override mockmvc instances configured setters controllers controllers use mockmvcrequestspecbuilder mockmvcrequestspecificationstandalonesetupobject
specify file upload server using multipart form data uploading assume control name file contenttype applicationoctetstream want please use overloaded method file file upload request specification
merge builder settings another specification note supplied specification overwrite data current specification following settings overwritten content type request body interceptors config if defined following settings merged parameters cookies headers specification specification add request specification builder
add header sent request header header request specification builder
set session attribute name session attribute name value session attribute value
parametersmap map containing parameter names values send request request specification builder
specify object request content automatically serialized json xml sent request object primitive hrefhttpdownloadoraclecomjavase6docsapijavalangnumberhtmlnumber object converted string put request body works post put patch methods only trying http methods cause exception thrown object object serialize send request request specification
specify string send server using multipart form data use contenttype textplain want please use overloaded method controlname defines control name body part html attribute name input tag contentbody string send request specification
enabled logging specified log detail set logconfig configure print stream pretty printing options logdetail log detail mockmvcrequestspecbuilder
parametersmap map containing parameter names values send request request specification builder
add header sent request headername header name headervalue header value request specification builder
initialize mockmvcbuilder used create mockmvc instance note override mockmvc instances configured setters builder builder use mockmvcrequestspecbuilder mockmvcrequestspecificationstandalonesetupmockmvcbuilder
specify bytearray upload server using multipart form data controlname defines control name body part html attribute name input tag filename name content youre uploading bytes bytes want send mimetype contenttype request specification
specify file upload server using multipart form data uploading specific control name use contenttype applicationoctetstream want please use overloaded method file file upload controlname defines control name body part html attribute name input tag request specification
create new mockmvcfactory supplied controllers mock mvc configureres controllerormockmvcconfigurers array controllers configurerrs new mockmvcfactory
set session attribute name session attribute name value session attribute value
set session attributes sessionattributes session attributes
instantiate new xmlpath instance mode compatibility mode reader reader containing xml document
get print xml prettified string note content guaranteed looking exactly like source peek content downloaded transformed another data structure used xmlpath xml rendered data structure xml prettified string
get result xml path expression string syntax details please refer hrefhttpwwwgroovylangorgprocessingxmlhtmlmanipulatingxmlthis url path xml path object matching xml path javalangclasscastexception thrown object cannot casted expected type
get result xml path expression syntax details please refer hrefhttpwwwgroovylangorgprocessingxmlhtmlmanipulatingxmlthis url path xml path type return value object matching xml path javalangclasscastexception thrown object cannot casted expected type
instantiate new xmlpath instance mode compatibility mode source source containing xml document
peeks xmlhtml xmlpath parse printing console continue working xmlpath afterwards mainly debug purposes want return prettified version content see prettify want return prettified version content also print console use prettyprint note content guaranteed looking exactly like source peek content downloaded transformed another data structure used xmlpath xml rendered data structure xmlpath instance
get result xml path expression float syntax details please refer hrefhttpwwwgroovylangorgprocessingxmlhtmlmanipulatingxmlthis url path xml path object matching xml path javalangclasscastexception thrown object cannot casted expected type
get result xml path expression map syntax details please refer hrefhttpwwwgroovylangorgprocessingxmlhtmlmanipulatingxmlthis url path xml path keytype type expected key valuetype type expected value type expected key type expected value object matching xml path javalangclasscastexception thrown object cannot casted expected type
get result xml path expression short syntax details please refer hrefhttpwwwgroovylangorgprocessingxmlhtmlmanipulatingxmlthis url path xml path object matching xml path javalangclasscastexception thrown object cannot casted expected type
get result xml path expression uuid syntax details please refer hrefhttpwwwgroovylangorgprocessingxmlhtmlmanipulatingxmlthis url path xml path object matching xml path javalangclasscastexception thrown object cannot casted expected type
instantiate new xmlpath instance mode compatibility mode uri uri containing xml document
get result xml path expression char syntax details please refer hrefhttpwwwgroovylangorgprocessingxmlhtmlmanipulatingxmlthis url path xml path object matching xml path javalangclasscastexception thrown object cannot casted expected type
get result xml path expression int syntax details please refer hrefhttpwwwgroovylangorgprocessingxmlhtmlmanipulatingxmlthis url path xml path object matching xml path javalangclasscastexception thrown object cannot casted expected type
get result xml path expression double syntax details please refer hrefhttpwwwgroovylangorgprocessingxmlhtmlmanipulatingxmlthis url path xml path object matching xml path javalangclasscastexception thrown object cannot casted expected type
peeks xmlhtml xmlpath parse printing console prettified manner continue working xmlpath afterwards mainly debug purposes want return prettified version content see prettify want return prettified version content also print console use prettyprint note content guaranteed looking exactly like source peek content downloaded transformed another data structure used xmlpath xml rendered data structure xmlpath instance
instantiate new xmlpath instance mode compatibility mode file file containing xml document
instantiate new xmlpath instance mode compatibility mode text text containing xml document
add parameter expression example string type systemconsolereadline listmap books withobjectparamtype typegetshoppingcategoryfindall ittype type key name parameter use name expression variable value value parameter new xmlpath instance parameter set
get result xml path expression byte syntax details please refer hrefhttpwwwgroovylangorgprocessingxmlhtmlmanipulatingxmlthis url path xml path object matching xml path javalangclasscastexception thrown object cannot casted expected type
get xml document java object objecttype type java object type java object java object representation xml document
get result xml path expression boolean syntax details please refer hrefhttpwwwgroovylangorgprocessingxmlhtmlmanipulatingxmlthis url path xml path object matching xml path javalangclasscastexception thrown object cannot casted expected type
set root path document dont need write entire path eg final xmlpath xmlpath new xmlpathxmlsetrootshoppingcategoryitem assertthatxmlpathgetintsize equalto5 assertthatxmlpathgetlistchildrenlist stringclass hasitempens rootpath root path use
instantiate new xmlpath instance mode compatibility mode stream stream containing xml document
get result xml path expression long syntax details please refer hrefhttpwwwgroovylangorgprocessingxmlhtmlmanipulatingxmlthis url path xml path object matching xml path javalangclasscastexception thrown object cannot casted expected type
declares namespace prefix feature name fullyqualified uri namespaceuri requested value feature true false new xmlpathconfig instance orgxmlsaxxmlreadersetfeaturejavalangstring boolean
specify custom gson object mapper factory jaxbobjectmapperfactory object mapper factory
specify properties used parsing xml properties map containing properties used underlying groovyutilxmlslurper new xmlpathconfig instance orgxmlsaxxmlreadersetfeaturejavalangstring boolean
create new xmlpathconfig uses defaultcharset deserializing xml data
new xmlpathconfig instance assumes supplied charset parsing xml documents
create new instance xmlpathconfig based properties supplied config config config copy
creates json path configuration uses specified object deserializer default defaultobjectdeserializer object deserializer use null classpath scanning used
creates new xmlpathconfig configured use default jaxbobjectmapperfactory
specify declared namespaces used parsing xml namespacestodeclare map containing features used underlying groovyutilxmlslurper new instance xmlpathconfig orgxmlsaxxmlreadersetfeaturejavalangstring boolean
set value feature flag uri feature name fullyqualified uri enabled requested value feature true false new xmlpathconfig instance orgxmlsaxxmlreadersetfeaturejavalangstring boolean
specify features used parsing xml features map containing features used underlying groovyutilxmlslurper orgxmlsaxxmlreadersetfeaturejavalangstring boolean
set value property name property name value value property new xmlpathconfig instance orgxmlsaxxmlreadersetfeaturejavalangstring boolean
disables external dtd loading shortcut doing setfeaturehttpapacheorgxmlfeaturesnonvalidatingloadexternaldtd false new xmlpathconfig instance featurestring boolean
creates xml path configuration uses specified parser type default defaultparsertype default parser type use null classpath scanning used
reason define method and require implementation comparable prevent constructing reference without type information
create list arguments used create parts path bodycontent expression useful situations eg predefined variables constitutes key example string somesubpath else int index 1 expectbodysomethingsd withargssomesubpath index equaltosome value complex root paths dont wish duplicate path small variations getxthenassertthat rootfiltersfilterconfigdfilterconfiggroupsfind itname gold includes bodywithargs0 hasitemfirst bodywithargs1 hasitemsecond key arguments follows standard hrefhttpdownloadoraclecomjavase150docsapijavautilformatterhtmlsyntaxformatting syntax java list arguments used build response specification use withargsobject object instead
instruct rest assured connect proxy using uri uri uri proxy
oauth sign request note currently wait wwwauthenticate challenge sending oauth header requests domains signed instance accesstoken signature authentication scheme
create list arguments used create parts path response specification json xml html validation useful situations eg predefined variables constitutes key example getjsonstorethen rootstores withargsbook bodycategorysize equalto4 appendrootss withargsauthor size bodywithnoarguments equalto4 list arguments used build response specification use withnoargs instead
use trust store located filesystem see truststorestring string details note shortcut for restassuredconfig restassuredconfigsslconfigsslconfigtruststorepathtojks password pathtojks path jks file filesystem password password keystore keystorestring string
excerpt httpbuilder docs oauth sign request note currently wait wwwauthenticate challenge sending oauth header requests domains signed instance assumes youve already generated accesstoken secrettoken site youre targeting information achieve this see hrefhttpsgithubcommttkaysignpostblobmasterdocsgettingstartedmdusingsignpostsignpost documentation consumerkey consumersecret accesstoken secrettoken authentication scheme
sets default filters apply request filters filter list
create list arguments used create parts path bodycontent expression useful situations eg predefined variables constitutes key example string somesubpath else int index 1 whengetthenbodysomethingsd withargssomesubpath index equaltosome value complex root paths dont wish duplicate path small variations getxthenassertthat rootfiltersfilterconfigdfilterconfiggroupsfind itname gold includes bodywithargs0 hasitemfirst bodywithargs1 hasitemsecond key arguments follows standard hrefhttpdownloadoraclecomjavase150docsapijavautilformatterhtmlsyntaxformatting syntax java list arguments
use form authentication supplied configuration username user name password password config form authentication config authentication scheme
sets certificate used ssl authentication see classgetresourcestring get url resource classpath truststorepath url jks trust store certificate stored truststorepassword password trust store keystorepath url jks keystore certificate stored keystorepassword password keystore certificateauthsettings advanced settings certificate authentication
sets default filters apply request filter filter set additionalfilters optional array additional filters set
resets baseuri basepath port authentication rootpath filtersjavautillist requestspecification responsespecification urlencodingenabled config sessionid proxy default values value defaulturi value defaultpath value undefinedport no authentication empty string null null empty list null null none true new restassuredconfig null null
instruct rest assured connect proxy specified host port 8888 host hostname proxy connect for example 127001 also uri represented string proxystring int
add default filters apply request filter filter add additionalfilters optional array additional filters add
apply keystore requests givenkeystoretruststorejavanetjks test1234 note shortcut for restassuredconfig restassuredconfigsslconfigsslconfigkeystorepathtojks password pathtojks path jks rest assured first look classpath found look jks local filesystem password store pass
following documentation taken hrefhttp builderhttpsgithubcomjgritmanhttpbuilderwikissl ssl configuration ssl should part just work situations completely intuitive follow example below see httpclients sslsocketfactory documentation information sslpeerunverifiedexception cant connect ssl website likely certificate chain trusted apache httpclient issue explained convenience correct untrusted certificate need import certificate ssl truststore first export certificate website using browser example go httpsdevjavanet firefox probably get warning browser choose add exception get certificate view details tab choose certificate chain export pem file view details exported certificate like so keytool printcert file equifaxsecureglobalebusinessca1crt owner cnequifax secure global ebusiness ca1 oequifax secure inc cus issuer cnequifax secure global ebusiness ca1 oequifax secure inc cus serial number 1 valid from mon jun 21 000000 edt 1999 until sun jun 21 000000 edt 2020 certificate fingerprints md5 8f5d770627c4983c5b9378e7d77d9bcc sha1 7e784a101c8265cc2de1f16d47b440cad90a1945 signature algorithm name md5withrsa version 3 now import java keystore file keytool importcert alias equifaxca file equifaxsecureglobalebusinessca1crt keystore truststorejavanetjks storepass test1234 owner cnequifax secure global ebusiness ca1 oequifax secure inc cus issuer cnequifax secure global ebusiness ca1 oequifax secure inc cus serial number 1 valid from mon jun 21 000000 edt 1999 until sun jun 21 000000 edt 2020 certificate fingerprints md5 8f5d770627c4983c5b9378e7d77d9bcc sha1 7e784a101c8265cc2de1f16d47b440cad90a1945 signature algorithm name md5withrsa version 3 trust certificate no yes certificate added keystore want use truststore client restassuredtruststuretruststorejavanetjks test1234 giventruststoretruststorejavanetjks test1234 note shortcut for restassuredconfig restassuredconfigsslconfigsslconfigtruststorepathtojks password pathtojks path jks rest assured first look classpath found look jks local filesystem password store pass
set object mapper thatll used serializing deserializing java objects its document representation xml json etc objectmapper object mapper use
excerpt httpbuilder docs oauth sign request note currently wait wwwauthenticate challenge sending oauth header requests domains signed instance assumes youve already generated accesstoken secrettoken site youre targeting information achieve this see hrefhttpsgithubcommttkaysignpostblobmasterdocsgettingstartedmdusingsignpostsignpost documentation consumerkey consumersecret accesstoken secrettoken signature authentication scheme
create http basic authentication scheme username user name password password authentication scheme
oauth sign request note currently wait wwwauthenticate challenge sending oauth header requests domains signed instance accesstoken access token use authentication scheme
sets certificate used ssl authentication see javalangclassgetresourcestring get url resource classpath uses ssl settings defined sslconfig certurl url jks keystore certificate stored password password keystore request iorestassuredspecification
specify trust store thatll used https requests trust store javasecuritykeystore loaded password wish rest assured loads keystore store applies password thus making trust store please see keystore methods keystorejavaiofile string truststore preloaded javasecuritykeystore keystorestring string
add default filters applied request filters filter list
enable logging request response rest assureds test validation fails specified log detail shortcut for restassuredconfig restassuredconfiglogconfiglogconfigenableloggingofrequestandresponseifvalidationfailslogdetail logdetail log detail show log
create ntlm authentication scheme username user name password password workstation ntlm workstation domain ntlm workstation authentication scheme
use keystore located filesystem see keystorestring string details note shortcut for restassuredconfig restassuredconfigsslconfigsslconfigkeystorepathtojks password pathtojks path jks file filesystem password password keystore keystorestring string
creates responseawarematcher extracts given path response wraps orghamcrestmatchersequaltoobject matcher useful resource eg returns given json userid myid playerid myid test like this getxthenbodyuserid equaltopathplayerid path path check responseawarematcher
creates responseawarematcher extracts given path response wraps orghamcrestmatchersequaltoobject matcher useful resource eg returns given json userid myid baseuri httplocalhost8080 href httplocalhost8080myid test like this getxthenbodyhref startswithpathbaseuri path path check responseawarematcher
creates responseawarematcher extracts given path response wraps orghamcrestmatchersequaltoobject matcher useful resource eg returns given json userid myid href httplocalhost8080myid test like this getxthenbodyhref containspathuserid path path check responseawarematcher
creates responseawarematcher extracts given path response wraps orghamcrestmatchersequaltoobject matcher useful resource eg returns given json userid myid href httplocalhost8080myid test like this getxthenbodyhref endswithpathuserid path path check responseawarematcher
compose responseawarematcher another responseawarematcher matcher1 first matcher compose matcher2 second matcher compose additionalmatchers additional matchers compose orcomposed responseawarematcher todo add safevarargs migrating java 7
compose responseawarematcher another responseawarematcher matcher1 first matcher compose matcher2 second matcher compose additionalmatchers additional matchers compose orcomposed responseawarematcher
compose responseawarematcher another responseawarematcher matcher1 first matcher compose matcher2 second matcher compose orcomposed responseawarematcher
compose responseawarematcher another responseawarematcher matcher1 first matcher compose matcher2 second matcher compose andcomposed responseawarematcher
compose responseawarematcher another responseawarematcher matcher1 first matcher compose matcher2 second matcher compose additionalmatchers additional matchers compose andcomposed responseawarematcher
compose responseawarematcher another responseawarematcher matcher1 first matcher compose matcher2 second matcher compose andcomposed responseawarematcher
compose responseawarematcher another responseawarematcher matcher1 first matcher compose matcher2 second matcher compose andcomposed responseawarematcher
compose responseawarematcher another responseawarematcher matcher1 first matcher compose matcher2 second matcher compose additionalmatchers additional matchers compose andcomposed responseawarematcher todo add safevarargs migrating java 7
compose responseawarematcher another responseawarematcher matcher1 first matcher compose matcher2 second matcher compose additionalmatchers additional matchers compose andcomposed responseawarematcher todo add safevarargs migrating java 7
compose responseawarematcher another responseawarematcher matcher1 first matcher compose matcher2 second matcher compose additionalmatchers additional matchers compose orcomposed responseawarematcher todo add safevarargs migrating java 7
builds string used http accept header value ie applicationxml textxml
specify charset contenttype charset charset contenttype given charset
specify charset contenttype charset charset contenttype given charset
get single cookie supplied name several cookies match cookiename first one returned cookiename name cookie find found cookie null cookie found
alternative way create cookies object constructor cookie cookie included additionalcookies additional cookies included optional new cookies object containing specified cookies
get single cookie value supplied name several cookies matching cookiename first one returned cookiename name cookie find found cookie null cookie found
get single header supplied name several headers match headername last one returned headername name header find found header null header found
alternative way create headers object constructor header header included additionalheaders additional headers included optional new headers object containing specified headers
create new header given name value name header name cannot null value value can null
create cookie name value name name cookie value cookie value
indicates cookie readable http server apis javascript default value false httponly true httponly builder
set comment describing purpose cookie comment comment builder
set maximum age cookie specified seconds default 1 indicating cookie persist browser shutdown integer specifying maximum age cookie seconds negative means cookie persists browser shutdown
indicates browser whether cookie sent using secure protocol https ssl default value false secured true secured builder
sets version cookie protocol cookie complies with version 0 complies original netscape cookie specification version 1 complies rfc 2109 since rfc 2109 still somewhat new consider version 1 experimental use yet production sites parameters version 0 cookie comply original netscape specification 1 cookie comply rfc 2109 builder
set domain attribute cookie value domain attribute specifies domain cookie valid domain domain builder
set expiration javautildate cookie date date set builder
set path attribute cookie value path attribute specifies subset urls origin server cookie applies path path builder
specify inputstream upload server using multipart form data use contenttype applicationoctetstream want please use overloaded method controlname defines control name body part html attribute name input tag filename name content youre uploading stream stream want send request specification
method remove parameter added addpathparameterstring object map removes values parameter parametername parameter key request specification builder
add query parameter sent request method addparamstring object http methods except post method used differentiate form query params parametername parameter key parametervalues zero many parameter values parameter name request specification builder addqueryparameterstring object
specify multiple detailed cookies thatll sent request cookies cookies set request request specification builder requestspecificationcookiescookies
specify accept header request shortcut for headeraccept contenttype mediatypes media types used accept header request request specification contenttype addheaderstring string
instruct rest assured connect proxy specified port localhost port port proxy connect for example 8888 requestspecbuilder setproxyint
method remove parameter added addformparameterstring object map removes values parameter parametername parameter key request specification builder
specify byte array request content sent request works post http method trying http methods cause exception thrown note setbodybyte setcontentbyte except syntactic difference content content send request specification builder use setbodybyte instead
enabled logging specified log detail set logconfig configure print stream pretty printing options logdetail log detail requestspecbuilder
set session id name value request itll override default session id name configuration by default value sessionconfigdefaultsessionidname configure default session id name using restassuredconfig newconfigsessionconfignew sessionconfigsessionidnamesessionidname use requestspecbuildersetsessionidstring method set session id value without specifying name request sessionidname session id name sessionidvalue session id value request specification
add multivalue parameter sent request parametername parameter key parametervalues parameter values request specification builder
add headers sent request map headers map containing header names values send request request specification builder
method remove parameter added addqueryparameterstring object map removes values parameter parametername parameter key request specification builder
add filter used request filter filter add requestspecbuilder builder
specify keystore restassuredkeystoretruststorejavanetjks test1234 givenkeystoretruststorejavanetjks test1234 pathtojks path jks password store pass
specify multipart specification use method need specify contenttype etc multipartspecification multipart specification request specification
specify inputstream upload server using multipart form data controlname defines control name body part html attribute name input tag filename name content youre uploading stream stream want send mimetype contenttype request specification
merge builder settings another specification note supplied specification overwrite data current specification following settings overwritten port authentication scheme content type request body following settings merged parameters cookies headers filters specification specification add request specification builder
specify object request content automatically serialized json xml sent request object primitive hrefhttpdownloadoraclecomjavase6docsapijavalangnumberhtmlnumber object converted string put request body works post put patch methods only trying http methods cause exception thrown note setbodyobject setcontentobject except syntactic difference object object serialize send request request specification use setbodyobject instead
method remove parameter added addparameterstring object map removes values parameter parametername parameter key request specification builder
instruct rest assured connect proxy specified port localhost specific scheme host hostname proxy connect for example 127001 port port proxy connect for example 8888 scheme http scheme http https requestspecbuilder
specify path parameter path parameters used improve readability request path eg instead writing expectstatuscode200whengetitemmyitemgetitemnumberbuy2 write given pathparameteritemnumber myitemgetitemnumber pathparameteramount 2 expect statuscode200 when getitemitemnumberbuyamount improves readability allows path reusable many tests another alternative use expectstatuscode200whengetitemitemnumberbuyamount myitemgetitemnumber 2 parametername parameter key parametervalue parameter value request specification use addpathparamstring object instead
specify multiple path parameter namevalue pairs path parameters used improve readability request path eg instead writing expectstatuscode200whengetitemmyitemgetitemnumberbuy2 write given pathparametersitemnumber myitemgetitemnumber amount 2 expect statuscode200 when getitemitemnumberbuyamount improves readability allows path reusable many tests another alternative use expectstatuscode200whengetitemitemnumberbuyamount myitemgetitemnumber 2 firstparametername name first parameter firstparametervalue value first parameter parameternamevaluepairs additional parameters namevalue pairs request specification use addpathparamsstring object object instead
specify file upload server using multipart form data uploading assume control name file contenttype applicationoctetstream want please use overloaded method file file upload request specification
add filters used request filters filters add requestspecbuilder builder
following documentation taken hrefhttp builderhttpsgithubcomjgritmanhttpbuilderwikissl ssl configuration ssl should part just work situations completely intuitive follow example below see httpclients sslsocketfactory documentation information sslpeerunverifiedexception cant connect ssl website likely certificate chain trusted apache httpclient issue explained convenience correct untrusted certificate need import certificate ssl truststore first export certificate website using browser example go httpsdevjavanet firefox probably get warning browser choose add exception get certificate view details tab choose certificate chain export pem file view details exported certificate like so keytool printcert file equifaxsecureglobalebusinessca1crt owner cnequifax secure global ebusiness ca1 oequifax secure inc cus issuer cnequifax secure global ebusiness ca1 oequifax secure inc cus serial number 1 valid from mon jun 21 000000 edt 1999 until sun jun 21 000000 edt 2020 certificate fingerprints md5 8f5d770627c4983c5b9378e7d77d9bcc sha1 7e784a101c8265cc2de1f16d47b440cad90a1945 signature algorithm name md5withrsa version 3 now import java keystore file keytool importcert alias equifaxca file equifaxsecureglobalebusinessca1crt keystore truststorejavanetjks storepass test1234 owner cnequifax secure global ebusiness ca1 oequifax secure inc cus issuer cnequifax secure global ebusiness ca1 oequifax secure inc cus serial number 1 valid from mon jun 21 000000 edt 1999 until sun jun 21 000000 edt 2020 certificate fingerprints md5 8f5d770627c4983c5b9378e7d77d9bcc sha1 7e784a101c8265cc2de1f16d47b440cad90a1945 signature algorithm name md5withrsa version 3 trust certificate no yes certificate added keystore want use truststore client restassuredtruststoretruststorejavanetjks test1234 giventruststoretruststorejavanetjks test1234 pathtojks path jks password store pass
specify string send server using multipart form data use contenttype textplain want please use overloaded method controlname defines control name body part html attribute name input tag contentbody string send request specification
instruct rest assured connect proxy using uri uri uri proxy requestspecbuilder
specify object request content automatically serialized json xml sent request using specific object mapper works post patch put methods only trying http methods cause exception thrown note setbodyobject objectmapper setcontentobject objectmapper except syntactic difference object object serialize send request mapper object mapper request specification use setbodyobject objectmapper instead
add query parameters sent request map method addparametersjavautilmap http methods except post method used differentiate form query params parametersmap map containing parameter names values send request request specification builder use addqueryparamsmap instead
add parameters sent request map parametersmap map containing parameter names values send request request specification builder use addparamsmap instead
add header sent request eg headername header name headervalue header value request specification builder
specify string request body such eg json xml sent request works post put patch methods only trying http methods cause exception thrown note setbodystring setcontentstring except syntactic difference body body send request specification builder
specify file upload server using multipart form data uploading specific control name use contenttype applicationoctetstream want please use overloaded method file file upload controlname defines control name body part html attribute name input tag request specification
following documentation taken hrefhttp builderhttpsgithubcomjgritmanhttpbuilderwikissl ssl configuration ssl should part just work situations completely intuitive follow example below see httpclients sslsocketfactory documentation information sslpeerunverifiedexception cant connect ssl website likely certificate chain trusted apache httpclient issue explained convenience correct untrusted certificate need import certificate ssl truststore first export certificate website using browser example go httpsdevjavanet firefox probably get warning browser choose add exception get certificate view details tab choose certificate chain export pem file view details exported certificate like so keytool printcert file equifaxsecureglobalebusinessca1crt owner cnequifax secure global ebusiness ca1 oequifax secure inc cus issuer cnequifax secure global ebusiness ca1 oequifax secure inc cus serial number 1 valid from mon jun 21 000000 edt 1999 until sun jun 21 000000 edt 2020 certificate fingerprints md5 8f5d770627c4983c5b9378e7d77d9bcc sha1 7e784a101c8265cc2de1f16d47b440cad90a1945 signature algorithm name md5withrsa version 3 now import java keystore file keytool importcert alias equifaxca file equifaxsecureglobalebusinessca1crt keystore truststorejavanetjks storepass test1234 owner cnequifax secure global ebusiness ca1 oequifax secure inc cus issuer cnequifax secure global ebusiness ca1 oequifax secure inc cus serial number 1 valid from mon jun 21 000000 edt 1999 until sun jun 21 000000 edt 2020 certificate fingerprints md5 8f5d770627c4983c5b9378e7d77d9bcc sha1 7e784a101c8265cc2de1f16d47b440cad90a1945 signature algorithm name md5withrsa version 3 trust certificate no yes certificate added keystore want use truststore client restassuredtruststoretruststorejavanetjks test1234 giventruststoretruststorejavanetjks test1234 pathtojks path jks password store pass
add form parameter sent request method addparameterstring object http methods except put method used differentiate form query params parametername parameter key parametervalues zero many parameter values parameter name request specification builder use addformparamstring object instead
use supplied keystore https requests shortcut for givenconfigrestassuredconfigsslconfigsslconfigkeystorekeystore keystore truststore requestspecbuilder setkeystorestring string
need specify credentials performing request request specification builder use setauthauthenticationscheme instead
specify string request content such eg json xml sent request works post put patch methods only trying http methods cause exception thrown note setbodystring setcontentstring except syntactic difference content content send request specification builder use setbodystring instead
specify string send server using multipart form data specific mimetype controlname defines control name body part html attribute name input tag contentbody string send mimetype mimetype request specification
specify object request content automatically serialized json xml sent request using specific object mapper type works post patch put methods only trying http methods cause exception thrown example use message message new message messagesetmessagemy beautiful message given bodymessage objectmappergson expect contentequaltoresponse beautiful message when postbeautifulmessage note setbodyobject objectmappertype setcontentobject objectmappertype except syntactic difference object object serialize send request mappertype object mapper type used request specification use setbodyobject objectmappertype instead
instruct rest assured connect proxy using proxyspecification proxyspecification proxy specification use requestspecbuilder requestspecificationproxyproxyspecification
use supplied truststore https requests shortcut for givenconfigrestassuredconfigsslconfigsslconfigtruststoretruststore truststore truststore requestspecbuilder setkeystorestring string
add query parameter sent request method addparameterstring object http methods except post method used differentiate form query params parametername parameter key parametervalues zero many parameter values parameter name request specification builder use addqueryparamstring object instead
specify byte array request body sent request works post http method trying http methods cause exception thrown note setbodybyte setcontentbyte except syntactic difference body body send request specification builder
define configuration redirection settings http client parameters config configuration use request null config used request specification builder
add parameter sent request parametername parameter name parametervalues zero many parameter values parameter name request specification builder
specify multiple path parameter namevalue pairs path parameters used improve readability request path eg instead writing expectstatuscode200whengetitemmyitemgetitemnumberbuy2 write mapstringobject pathparams new hashmapstringobject pathparamsadditemnumbermyitemgetitemnumber pathparamsaddamount2 given pathparameterspathparams expect statuscode200 when getitemitemnumberbuyamount improves readability allows path reusable many tests another alternative use expectstatuscode200whengetitemitemnumberbuyamount myitemgetitemnumber 2 parameternamevaluepairs map containing path parameters request specification use addpathparamsmap instead
add parameter sent request parametername parameter name parametervalues zero many parameter values parameter name request specification builder use addparamstring object instead
add form parameter sent request method addparameterstring javautilcollection http methods except put method used differentiate form query params parametername parameter key parametervalues parameter values request specification builder use addformparamstring collection instead
add cookies sent request map eg cookies map containing cookie names values set request request specification builder
specify object request content automatically serialized json xml sent request object primitive hrefhttpdownloadoraclecomjavase6docsapijavalangnumberhtmlnumber object converted string put request body works post put patch methods only trying http methods cause exception thrown note setbodyobject setcontentobject except syntactic difference object object serialize send request request specification
add query parameters sent request map method addparametersjavautilmap http methods except post method used differentiate form query params parametersmap map containing parameter names values send request request specification builder use addformparamsmap instead
add query parameter sent request method addparameterstring javautilcollection http methods except post method used differentiate form query params parametername parameter key parametervalues parameter values request specification builder use addqueryparamstring collection instead
specify path parameter path parameters used improve readability request path eg instead writing expectstatuscode200whengetitemmyitemgetitemnumberbuy2 write given pathparamitemnumber myitemgetitemnumber pathparamamount 2 expect statuscode200 when getitemitemnumberbuyamount improves readability allows path reusable many tests another alternative use expectstatuscode200whengetitemitemnumberbuyamount myitemgetitemnumber 2 parametername parameter key parametervalue parameter value request specification
specify bytearray upload server using multipart form data use contenttype applicationoctetstream want please use overloaded method controlname defines control name body part html attribute name input tag filename name content youre uploading bytes bytes want send request specification
add detailed cookie cookie cookie add request specification builder
add multivalue parameter sent request parametername parameter key parametervalues parameter values request specification builder use addparamstring collection instead
specify object request content automatically serialized json xml sent request using specific object mapper works post patch put methods only trying http methods cause exception thrown note setbodyobject objectmapper setcontentobject objectmapper except syntactic difference object object serialize send request mapper object mapper request specification
add form parameter sent request method addparameterstring javautilcollection http methods except put method used differentiate form query params parametername parameter key parametervalues parameter values request specification builder addformparamstring object
use relaxed http validation given sslcontext protocol means youll trust hosts regardless ssl certificate invalid using method dont need specify keystore see setkeystorestring string trust store see settruststorejavasecuritykeystore shortcut for givenconfigrestassuredconfigsslconfigsslconfigrelaxedhttpsvalidation protocol standard name requested protocol see sslcontext section hrefhttpsdocsoraclecomjavase8docstechnotesguidessecuritystandardnameshtmlsslcontextjava cryptography architecture standard algorithm name documentation information standard protocol names requestspecbuilder
specify content type request contenttype content type request request specification builder contenttype
set session id request use configured session id name configuration by default value sessionconfigdefaultsessionidname configure session id name using restassuredconfig newconfigsessionconfignew sessionconfigsessionidnamesessionidname use setsessionidstring string method set request only sessionidvalue session id value request specification
specify port port port uri request specification builder
specify file upload server using multipart form data uploading specific control name contenttype file file upload controlname defines control name body part html attribute name input tag mimetype contenttype request specification
add query parameter sent request method addparamstring javautilcollection http methods except post method used differentiate form query params parametername parameter key parametervalues parameter values request specification builder addqueryparamstring object
specify multiple path parameter namevalue pairs path parameters used improve readability request path eg instead writing expectstatuscode200whengetitemmyitemgetitemnumberbuy2 write given pathparamitemnumber myitemgetitemnumber amount 2 expect statuscode200 when getitemitemnumberbuyamount improves readability allows path reusable many tests another alternative use expectstatuscode200whengetitemitemnumberbuyamount myitemgetitemnumber 2 firstparametername name first parameter firstparametervalue value first parameter parameternamevaluepairs additional parameters namevalue pairs request specification
add parameters sent request map parametersmap map containing parameter names values send request request specification builder
add baseuri property requestspecbuilder instead using static field restassuredbaseuri requestspecbuilder builder new requestspecbuilder buildersetbaseurihttpexamplecom requestspecification specs builderbuild givenspecificationspecs uri uri requestspecbuilder
add query parameters sent request map method addparametersjavautilmap http methods except post method used differentiate form query params parametersmap map containing parameter names values send request parametersmap map containing parameter names values send request request specification builder addformparametersjavautilmap
add cookie sent request key cookie key value cookie value cookienamevaluepairs additional cookies values actually create two cookies name different values request specification builder
specify content type request string contenttype content type request request specification builder
specify bytearray upload server using multipart form data controlname defines control name body part html attribute name input tag filename name content youre uploading bytes bytes want send mimetype contenttype request specification
instruct rest assured connect proxy specified host port host hostname proxy connect for example 127001 port port proxy connect for example 8888 requestspecbuilder
set base path thats prepended path rest assured making requests eg lets say base uri httplocalhost basepath resource whengetsomething make request httplocalhostresource path base path set requestspecbuilder
add query parameters sent request map method addparamsjavautilmap http methods except post method used differentiate form query params parametersmap map containing parameter names values send request request specification builder addqueryparametersjavautilmap
specify multiple path parameter namevalue pairs path parameters used improve readability request path eg instead writing expectstatuscode200whengetitemmyitemgetitemnumberbuy2 write mapstringobject pathparams new hashmapstringobject pathparamsadditemnumbermyitemgetitemnumber pathparamsaddamount2 given pathparameterspathparams expect statuscode200 when getitemitemnumberbuyamount improves readability allows path reusable many tests another alternative use expectstatuscode200whengetitemitemnumberbuyamount myitemgetitemnumber 2 parameternamevaluepairs map containing path parameters request specification
add cookie without value sent request name cookie name request specification builder
specify accept header request shortcut for addheaderaccept contenttype contenttype content type whose accept header contenttypegetacceptheader used accept header request request specification contenttype addheaderstring string
specify object request content automatically serialized json xml sent request using specific object mapper type works post patch put methods only trying http methods cause exception thrown example use message message new message messagesetmessagemy beautiful message given bodymessage objectmappergson expect contentequaltoresponse beautiful message when postbeautifulmessage note setbodyobject objectmappertype setcontentobject objectmappertype except syntactic difference object object serialize send request mappertype object mapper type used request specification
instruct rest assured connect proxy specified host port 8888 host hostname proxy connect for example 127001 also uri represented string requestspecbuilder setproxystring
add form parameter sent request method addparameterstring object http methods except put method used differentiate form query params parametername parameter key parametervalues zero many parameter values parameter name request specification builder addformparamstring object
specifies rest assured url encode url automatically usually recommended cases eg query parameters already encoded provide rest assured its useful disable url encoding isenabled specify whether url encoding enabled disabled request specification builder
register default predefined parser used parser registered predefined matches response contenttype eg lets say reason contenttype defined response content nevertheless json encoded able expect content rest assured need set default parser expectdefaultparserparserjsonwhen also specify every response using restassureddefaultparserparserjson parser parser use verifying response parser found response contenttype
expect response body conforms one hamcrest matchers matcher hamcrest matcher must response content must match builder
append given path root path arguments supplied response body dont need write entire path expectation mainly useful parts path defined variables eg instead writing string namepath name expect rootxy bodyage is bodygender is bodynamepath first is bodynamepath last is when get use append root do string namepath name expect rootxy bodyage is bodygender is appendroots withargsnamepath bodyfirst is bodylast is when get pathtoappend root path use path arguments follows standard hrefhttpdownloadoraclecomjavase150docsapijavautilformatterhtmlsyntaxformatting syntax java
set root path response body dont need write entire path expectation rootpathstring also provides way defined arguments rootpath root path use arguments arguments responsespecificationrootpathstring javautillist
expect response status line matches given string expectedstatusline expected status line builder
validate response time matches supplied matcher time unit matcher matcher timeunit timeout builder
expect response cookies matches specified map eg expect response get request something contains cookies cookiename1cookievalue1 cookiename2cookievalue2 map expectedcookies new hashmap expectedcookiesputcookiename1 cookievalue1 expectedcookiesputcookiename2 cookievalue2 also use hamcrest matchers map expectedcookies new hashmap expectedcookiesputcookiename1 containsstringvalue1 expectedcookiesputcookiename2 cookievalue2 expectedcookies map expected response cookies builder
set response content type contenttype note affect way response decoded eg cant use jsonxml matching see eg expectbodystring orghamcrestmatcher specify contenttype textplain dont specify response content type rest assured automatically try figure content type use contenttype content type response builder
expect detailed response cookie matches supplied cookie name hamcrest matcher see detailedcookiematcher eg expect response get request something contain cookie cookiename1cookievalue1 expectcookiecookiename1 detailedcookievaluecookievalue1securedtrue also expect several cookies expectcookiecookiename1 detailedcookievaluecookievalue1securedtrue expectcookiecookiename2 detailedcookievaluecookievalue2securedfalse cookiename name expected cookie detailedcookiematcher hamcrest matcher must conform cookie builder
expect response status code matches integer expectedstatuscode expected status code builder
expect cookie exist response regardless value it may value all cookiename cookie validate exists builder
expectbodystring orghamcrestmatcher expect pass arguments path useful situations eg predefined variables constitutes path string somesubpath else int index 1 expectbodysomethingsd withargssomesubpath index equaltosome value complex root paths dont wish duplicate path small variations expect rootfiltersfilterconfigdfilterconfiggroupsfind itname gold includes bodywithargs0 hasitemfirst bodywithargs1 hasitemsecond path arguments follows standard hrefhttpdownloadoraclecomjavase150docsapijavautilformatterhtmlsyntaxformatting syntax java note withargs statically imported iorestassuredrestassured class path body path matcher hamcrest matcher must response body must match response specification expectbodystring orghamcrestmatcher
expectcontentstring orghamcrestmatcher expect pass arguments path useful situations eg predefined variables constitutes path string somesubpath else int index 1 expectbodysomethingsd withargssomesubpath index equaltosome value complex root paths dont wish duplicate path small variations expect rootfiltersfilterconfigdfilterconfiggroupsfind itname gold includes bodywithargs0 hasitemfirst bodywithargs1 hasitemsecond path arguments follows standard hrefhttpdownloadoraclecomjavase150docsapijavautilformatterhtmlsyntaxformatting syntax java note withargs statically imported iorestassuredrestassured class path body path matcher hamcrest matcher must response body must match response specification expectbodystring matcher use expectbodystring list matcher instead
reset root path response body dont need write entire path expectation example expect rootxy bodyfirstname is bodylastname is noroot bodyzsomething1 is bodywsomething2 is when get calling rootpath expressive rootpathstring
set response content type contenttype note affect way response decoded eg cant use jsonxml matching see eg expectbodystring orghamcrestmatcher specify contenttype textplain dont specify response content type rest assured automatically try figure content type use contenttype content type response builder
expect json xml response content conforms one hamcrest matchers json example assume get request lotto returns json response containing lotto lottoid5 winningnumbers2453423753 winners winnerid23 numbers245342335 winnerid54 numbers52312111822 verify lottoid equal 5 like this responsespecbuilder builder new responsespecbuilder builderexpectbodylottolottoid equalto5 matcher hamcrest matcher response content must match builder
append given path root path response body dont need write entire path expectation eg instead writing expect rootxy bodyage is bodygender is bodynamefirstname is bodynamelastname is when get use append root do expect rootxy bodyage is bodygender is appendrootname bodyfirstname is bodylastname is when get pathtoappend root path append
set root path response body dont need write entire path expectation eg instead writing expect bodyxyfirstname is bodyxylastname is bodyxyage is bodyxygender is when get use root path do expect rootpathxy bodyfirstname is bodylastname is bodyage is bodygender is when get rootpath root path use
expect json xml response content conforms one hamcrest matchers json example assume get request lotto returns json response containing lotto lottoid5 winningnumbers2453423753 winners winnerid23 numbers245342335 winnerid54 numbers52312111822 verify lottoid equal 5 like this responsespecbuilder builder new responsespecbuilder builderexpectcontentlottolottoid equalto5 matcher hamcrest matcher response content must match builder use expectbodystring matcher instead
validate response time in milliseconds matches supplied matcher matcher matcher builder
expect response headers matches specified map eg expect response get request something contains header headername1headervalue1 headername2headervalue2 map expectedheaders new hashmap expectedheadersputheadername1 headervalue1 expectedheadersputheadername2 headervalue2 also use hamcrest matchers map expectedheaders new hashmap expectedheadersputcontenttype containsstringcharsetutf8 expectedheadersputcontentlength 160 expectedheaders map expected response headers builder
register contenttype parsed using predefined parser eg lets say want parse contenttype applicationvnduomlxml xml parser able verify response using xml notations expectbodydocumentchild equalstosomething since applicationvnduomlxml registered processed xml parser default need explicitly tell rest assured use parser making request expectparserapplicationvnduomlxml parserxmlwhen also specify default using restassuredregisterparserapplicationvnduomlxml parserxml contenttype contenttype register parser parser use verifying response builder
expect response header matches supplied name value headername name expected header expectedvalue value expected header builder
expect response cookie matches supplied cookie name hamcrest matcher eg cookiename1cookievalue1 cookiename name expected cookie expectedvaluematcher hamcrest matcher must conform value builder
expect response status line matches given hamcrest matcher expectedstatusline expected status line matcher builder
merge builder settings another specification note supplied specification overwrite data current specification following settings overwritten content type root path status code status line following settings merged response body expectations cookies headers specification specification add builder
detach given path root path eg instead writing when get then rootxy bodyage is bodygender is rootx bodyfirstname is bodylastname is use append root do when get then rootxy bodyage is bodygender is detachrooty bodyfirstname is bodylastname is pathtodetach root path detach
expect response header matches supplied header name hamcrest matcher headername name expected header expectedvaluematcher hamcrest matcher must conform value builder
expect response status code matches given hamcrest matcher expectedstatuscode expected status code matcher builder
expect response cookie matches supplied name value cookiename name expected cookie expectedvalue value expected cookie builder
expect response content conforms one hamcrest matchers matcher hamcrest matcher must response content must match builder use expectbodymatcher instead
enabled logging specified log detail set logconfig configure print stream pretty printing options logdetail log detail responsespecbuilder
set content type response builder
build actual response response object
set status line response builder
set status code response builder
set content type response builder
set specific header builder
set response body string builder
set response body inputstream builder
clone already existing response builder
set response body array bytes builder
set response headers eg header first new headerheadername1 headervalue1 header second new headerheadername2 headervalue2 headers headers new headerfirst second builder headers
set cookies available response create cookies do cookie cookie1 cookiebuilderusername johnsetcommentcomment 1build cookie cookie2 cookiebuildertoken 1234setcommentcomment 2build cookies cookies new cookiescookie1 cookie2 builder
create new multipart specification control name equal file content content include multipart specification
specify charset charset charset charset use instance multipartspecbuilder
create new multipart specification control name equal file content content include multipart specification
set headers multipart specification replaces previous headers headers headers map instance multipartspecbuilder
specify mimetype multipart mimetype mimetype instance multipartspecbuilder
specify control name multipart controlname control name use default file instance multipartspecbuilder
specify charset charset charset charset use instance multipartspecbuilder
specify file name multipart note applicable input streams byte arrays files not string content filename file name use instance multipartspecbuilder
create new multipart specification control name equal file content content include multipart specification
add header multipart specification name name header value value header instance multipartspecbuilder
enables logging supplied log detail request made authenticate using form authentication using specified logconfig request response logged new formauthconfig instance
enable crosssite request forgery csrf support using form authentication automatically trying find name value csrf input field example login page looks like this html head titlelogintitle head body form actionjspringsecuritycheckwithcsrf methodpost table tr tdusernbsptd tdinput typetext namejusernametd tr tr tdpasswordtd tdinput typepassword namejpasswordtd tr tr td colspan2input namesubmit typesubmittd tr table input typehidden namecsrf value8adf2ea1b24640aa8e13a85fb7914341 form body html csrf field name called csrf rest assured autodetect name since field name hidden field page autodetection fails consider using withcsrffieldnamestring important enabling csrf support rest assured must always make additional request server order able include csrf value slow tests new formauthconfig instance withcsrffieldnamestring
create form auth config predefined form action username input tag password input tag eg lets say login form login page looks like this form actionjspringsecuritycheck label forjusernameusernamelabel input typetext namejusername idjusername br label forjpasswordpasswordlabel input typepassword namejpassword idjpassword br input typecheckbox namespringsecurityrememberme remember computer br input typesubmit valuelogin form means formaction set jspringsecuritycheck usernameinputtagname set jusername passwordinputtagname set jpassword formaction action form usernameinputtagname name username input tag login form passwordinputtagname name password input tag login form
include multiple additional fields using form authentication including input field values specified name withadditionalfieldstring multiple fields important including additional field without specifying value rest assured must always make additional request server order able figure field value slow tests firstfieldname first additional input field include secondfieldname second additional input field include additionalfieldnames additional field name include optional new formauthconfig instance
include additional field using form authentication including input field value specified name example login page looks like this html head titlelogintitle head body form actionjspringsecuritycheckwithcsrf methodpost table tr tdusernbsptd tdinput typetext namejusernametd tr tr tdpasswordtd tdinput typepassword namejpasswordtd tr tr td colspan2input namesubmit typesubmittd tr table input typehidden namesomething value8adf2ea1b24640aa8e13a85fb7914341 form body html youd like include field named something additional form parameter request like this givenauthform new formauthconfigwithadditionalfieldsomething rest assured send form parameter something8adf2ea1b24640aa8e13a85fb7914341 important including additional field without specifying value rest assured must always make additional request server order able figure field value slow tests fieldname first field name include new formauthconfig instance
enable crosssite request forgery csrf support using form authentication including csrf value input field specified name example login page looks like this html head titlelogintitle head body form actionjspringsecuritycheckwithcsrf methodpost table tr tdusernbsptd tdinput typetext namejusernametd tr tr tdpasswordtd tdinput typepassword namejpasswordtd tr tr td colspan2input namesubmit typesubmittd tr table input typehidden namecsrf value8adf2ea1b24640aa8e13a85fb7914341 form body html csrf field name called csrf important enabling csrf support rest assured must always make additional request server order able include csrf value slow tests fieldname name input field new formauthconfig instance withautodetectionofcsrf
keystoretype certificate type default javasecuritykeystoregetdefaulttype truststoretype trust store type default javasecuritykeystoregetdefaulttype port port default 443 truststore trust store default provider used null x509hostnameverifier x509hostnameverifier use sslsocketfactory sslsocketfactory use
use preemptive http basic authentication means authentication details sent request header regardless server challenged authentication not username user name password password request specification
pathtojks path jks rest assured first look classpath found look jks local filesystem password store pass new sslconfig instance
specify orgapachehttpconnsslsslsocketfactory override settings trust store well keystore password sslsocketfactory orgapachehttpconnsslsslsocketfactory use new sslconfig instance
use relaxed http validation means youll trust hosts regardless ssl certificate invalid using method dont need specify keystore see keystorestring string trust store see truststorejavasecuritykeystore protocol standard name requested protocol see sslcontext section hrefhttpsdocsoraclecomjavase8docstechnotesguidessecuritystandardnameshtmlsslcontextjava cryptography architecture standard algorithm name documentation information standard protocol names new sslconfig instance
use truststore located filesystem see truststorestring string details pathtotruststore path trust store file filesystem password password truststore request specification truststorestring string
use keystore located filesystem see keystorestring string details pathtojks path jks file filesystem password password keystore request specification keystorestring string
pathtotruststore path trust store rest assured first look classpath found look jks local filesystem password store pass new sslconfig instance
uses user default keystore stored userhomekeystore password use null password keystore specification
set redirect config redirectconfig redirectconfig set updated restassuredconfiguration
set session config sessionconfig sessionconfig set updated restassuredconfiguration
set ssl config sslconfig sslconfig set updated restassuredconfiguration
create new restassuredconfiguration default configurations
set oauth config oauthconfig oauthconfig set updated restassuredconfiguration
set http client config httpclientconfig httpclientconfig set updated restassuredconfiguration
set object mapper config objectmapperconfig objectmapperconfig set updated restassuredconfiguration
set matcher config matcherconfig matcherconfig set updated restassuredconfiguration
set failure config failureconfig failureconfig set updated restassuredconfiguration
create new restassuredconfiguration supplied redirectconfig httpclientconfig logconfig encoderconfig decoderconfig sessionconfig objectmapperconfig connectionconfig jsonconfig xmlconfig sslconfig matcherconfig headerconfig multipartconfig
set log config logconfig logconfig set updated restassuredconfiguration
set connection config connectionconfig connectionconfig set updated restassuredconfiguration
set header config headerconfig headerconfig set updated restassuredconfiguration
set json config jsonconfig jsonconfig set updated restassuredconfiguration
true instance carrying config user configured
set encoder config encoderconfig encoderconfig set updated restassuredconfiguration
set multipart config multipartconfig multipartconfig set updated restassuredconfiguration
set decoder config decoderconfig decoderconfig set updated restassuredconfiguration
set xml config xmlconfig xmlconfig set updated restassuredconfiguration
set parameter config paramconfig paramconfig set updated restassuredconfiguration
specify default charset content response thats assumed charset explicitly specified response charset expected charset new instance decoderconfig
map contains default charset specific contenttype precedence defaultcontentcharset
specify default charset use specific contenttype its specified contenttype header explicitly charset charset use default unless specified explicitly contenttype contenttype new instance decoderconfig
specify default charset use specific contenttype its specified contenttype header explicitly charset charset use default unless specified explicitly contenttype contenttype new instance decoderconfig
specify default charset use specific contenttype its specified contenttype header explicitly charset charset use default unless specified explicitly contenttype contenttype new instance decoderconfig
specify default charset use specific contenttype its specified contenttype header explicitly charset charset use default unless specified explicitly contenttype contenttype new instance decoderconfig
specify default charset content response thats assumed charset explicitly specified response charset expected charset new instance decoderconfig
default charset specific contenttype precedence defaultcontentcharset
create new instance specify update strategies parameter types queryparamsupdatestrategy update strategy query parameters formparamsupdatestrategy update strategy form parameters requestparameterupdatestrategy update strategy request parameters
configure pretty printing default stream logs written not specified explicitly filter ie stream used cases log specification dsl used eg givenlogall expectlogiferror override explicit streams defined using requestloggingfilter responseloggingfilter defaultprintstream default print stream use logspecifications prettyprintingenabled enable disable pretty printing logging pretty printing possible contenttype xml json html
specify default charset use multiparts default usascii affects encoding multipart body such control name not actual content such json string document note setting only taken account httpclientconfighttpmultipartmodehttpmultipartmode set something httpmultipartmodestrict which default want setting apply also need explicitly change multipart mode example given configrestassuredconfigconfig httpclienthttpclientconfighttpclientconfighttpmultipartmodebrowsercompatible multipartconfigmultipartconfigdefaultcharsetutf8 when postx defaultcharset default charset use updated multipartconfig
set value feature flag uri feature name fullyqualified uri enabled requested value feature true false new xmlconfig instance orgxmlsaxxmlreadersetfeaturejavalangstring boolean
declares namespace also sets namespaceawareboolean true note cannot use add namespaces orghamcrestxmlhasxpath matcher done providing javaxxmlnamespacenamespacecontext matcher instance prefix feature name fullyqualified uri namespaceuri requested value feature true false new xmlconfig instance orgxmlsaxxmlreadersetfeaturejavalangstring boolean
set value property name property name value requested value feature true false new xmlconfig instance orgxmlsaxxmlreadersetfeaturejavalangstring boolean
disables external dtd loading shortcut doing setfeaturehttpapacheorgxmlfeaturesnonvalidatingloadexternaldtd false new xmlconfig instance featurestring boolean
specify declared namespaces used parsing xml also set namespaceawareboolean true namespaces empty note cannot use add namespaces orghamcrestxmlhasxpath matcher done providing javaxxmlnamespacenamespacecontext matcher instance namespacestodeclare map containing features used underlying groovyutilxmlslurper new instance xmlconfig orgxmlsaxxmlreadersetfeaturejavalangstring boolean
create new instance xmlconfig without features namespace unaware
define headers overwritten instead merged adding headers using request specifications note default headers merged except value acceptheadername value contenttypeheadername headers example header name header1 not marked overwritable default following givenheaderheader1 value1headerheader1 value2 header1 sent twice request header1 value1 header1 value2 configure header1 overwritable doing given configrestassuredconfigheaderconfigheaderconfigoverwriteheaderswithnameheader1 headerheader1 value1 headerheader1 value2 header1 sent once header1 value2 headername header name overwrite additionalheadernames additional header names overwrite optional new instance headerconfig
returns whether specified header returned headername header name check true header overwritten false otherwise
define headers merged instead overwritten adding headers using request specifications note default headers merged except value acceptheadername value contenttypeheadername headers method thus mainly used change merge behavior headers default overwritten revert changes request specification merge headername header name merge additionalheadernames additional header names merge optional new instance headerconfig
creates new httpclientconfig instance value orgapachehttpclientparamsclientpnamescookiepolicy parameter set value orgapachehttpclientparamscookiepolicyignorecookies
configured http client create orgapachehttpclienthttpclient instances thats used rest assured making request
add given parameters already configured number parameters httpclientparams parameters updated httpclientconfig
set http client parameter parametername name parameter parametervalue value parameter may null parameter type updated httpclientconfig
specify default charset use specific contenttype its specified contenttype header explicitly charset charset use default unless specified explicitly contenttype contenttype new instance encoderconfig
specify default charset bodycontent request specification charset charset use new instance encoderconfig
map contains default charset specific contenttype precedence defaultcontentcharset
encodes content body request specified given contenttype encoder used supplied encoder useful rest assured picks wrong encoder or cant recognize it given contenttype contenttype contenttype encode specific encoder encoder encoder use given contenttype new encoderconfig instance
specify default charset query parameters charset charset use new instance encoderconfig
specify default charset use specific contenttype its specified contenttype header explicitly charset charset use default unless specified explicitly contenttype contenttype new instance encoderconfig
specify default charset use specific contenttype its specified contenttype header explicitly charset charset use default unless specified explicitly contenttype contenttype new instance encoderconfig
specify default charset use specific contenttype its specified contenttype header explicitly charset charset use default unless specified explicitly contenttype contenttype new instance encoderconfig
default charset specific contenttype precedence defaultcontentcharset
close connections idled amount time specified config idletime idle time connections closed timeunit time unit idletime
creates object mapper configuration uses specified object mapper default defaultobjectmappertype object mapper use null classpath scanning used
specify custom jackson 10 object mapper factory jackson2objectmapperfactory object mapper factory
creates object mapper configuration uses specified object mapper default defaultobjectmappertype object mapper use null classpath scanning used
specify custom gson object mapper factory gsonobjectmapperfactory object mapper factory
specify custom jaxb object mapper factory jaxbobjectmapperfactory object mapper factory
creates object mapper configuration uses specified object mapper default defaultobjectmapper object mapper use null classpath scanning used
default object mapper configuration uses explicit object mapper object mapper found automatically classpath available details see hrefhttpcodegooglecomprestassuredwikiusageobjectmappingdocumentation also default object mapper factories used
specify custom jackson 10 object mapper factory jackson1objectmapperfactory object mapper factory
create new instance redirectconfig supplied settings followredirects configure rest assured follow redirects allowcircularredirects configure rest assured allow circular redirects rejectrelativeredirect configure rest assured reject relative redirects maxredirects configure rest assured maximum number redirect
specify preemptive basic authentication proxy use hostname value defaulthost port value defaultport scheme value defaultscheme username username password username new proxyspecification instance
specify preemptive basic authentication proxy username username password username new proxyspecification instance
decodeunescape portion url use query part ensure plusasblank true content portion decode charset charset use plusasblank true convert space eg wwwurlformencoded content otherwise leave is encoded string
instantiate logger using specific print stream specific log detail option pretty printing logdetail log detail prettyprint enabled pretty printing possible stream stream log errors to matcher matcher logging take place
instantiate logger using specific print stream specific log detail logdetail log detail shouldprettyprint true prettyprinting body occur stream stream log to showurlencodeduri whether show request uri url encoded
checks potentialuri uri potentialuri uri check true uri false otherwise
get single entity supplied name several entities match entityname last one returned entityname name entity find found entity null entity found
get entity values entity supplied name theres one header matching entity name list header value returned entityname name entity find found entity values empty list entity found
get single entity value supplied name several headers match headername last one returned entityname name header find found entity value null header found
get entities supplied name theres one entity matching entityname list entity returned entityname name entity find found entities empty list entity found
find status value matches given status code code http response code success failure status value illegalargumentexception given code valid http status code
default request encoder binary stream acceptable argument types are inputstream byte bytearrayoutputstream closure closure given executed outputstream passed single closure argument data sent stream body closure used request content body data httpentity encapsulating request data unsupportedencodingexception
helper method used encoder methods create httpentity instance encapsulates request data may used nonstreaming encoder needs send textual data ct contenttype data data textual request data encoded instance used httpentityenclosingrequestsetentityhttpentity request content unsupportedencodingexception
set request body urlencoded list parameters typically used simulate http form post multivalued parameters enclose values list eg key1 val1 val2 key2 etc params httpentity encapsulating request data unsupportedencodingexception
retrieve encoder given contenttype called httpbuilder retrieve correct encoder given contenttype encoder used serialize request data request body contenttype encoder interpret given content type null
returns map default encoders override method change encoders registered default course call superbuilddefaultencodermap add remove result well
accepts collection javabean object converted json map collection converted jsonbuilder string gstring interpreted valid json passed directly request body with charset conversion necessary if closure passed model executed json object definition passed jsonbuilder order closure interpreted correctly must root element immediately inside closure example builderpost json body root first one 1 two 2 second some string return following json string rootfirstone1two2secondsome string model data converted json specified above httpentity encapsulating request data unsupportedencodingexception
encode content xml argument may either object whose tostring produces valid markup closure interpreted builder definition xml data defines xml structure httpentity encapsulating request data unsupportedencodingexception
default handler used plain text contenttype acceptable argument types are closure writable reader closure argument printwriter passed single argument closure data sent writer closure sent request content body data httpentity encapsulating request data ioexception
register new encoder given content type encoder previously existed content type replaced closure must return httpentity also usually accept single argument whatever set request configuration closure via httpbuilderrequestconfigdelegatesetbodyobject contenttype
wraps raw entity inflaterentity
1
returns contentencodingtypedeflate encoding string added acceptencoding header base class
returns inflaterinputstream wraps original entitys content stream httpentitygetcontent
get httprequest class represents request type nonabstract class implements httprequest
default constructor taking name value value may null name name value value
utility method convert number type uri instance uri uri url object produces valid uri string tostring result valid uri parsed given object urisyntaxexception
implementation groovys as operator allow type conversion type url url string representation uribuilder instance given type malformedurlexception type url uribuilder instance represent valid url
print builders uri representation
determine uribuilder equal another uribuilder instance obj uribuilder instance whose underlying uri implementation equal ones uriequalsobject
document fragment without preceeding fragment uribuilder instance method chaining urisyntaxexception given value contains illegal characters
create copy uribuilder instance
adds parameters within scanner list parameters encoded encoding example scanner containing string a1b2c3 would add namevaluepair namevaluepairs a1 b2 c3 list parameters note method copied urlencodedutilsparsejavautillist javautilscanner string doesnt url decoding
set path component uri value may absolute relative current path eg def uri new uribuilder httplocalhostp1p2a1 uripath p3p2 assert uritostring httplocalhostp3p2a1 uripath p2a assert uritostring httplocalhostp3p2aa1 uripath p4 assert uritostring path path portion uri relative current uri uribuilder instance method chaining urisyntaxexception given path contains characters cannot converted valid uri
set query portion uri query parameters multiple values put values list like so uriquery p1val1 p2val2 val3 produce query string p1val1p2val2p2val3 params map parameters transformed query string uribuilder instance method chaining urisyntaxexception
uri illegalargumentexception uri null
remove given query parameter uris query string param query name remove uribuilder instance method chaining urisyntaxexception
returns string suitable use applicationxwwwformurlencoded list parameters http put http post copy urlencodedutilsformatjavautillist string also handles basicnamevaluepairwithnovaluesupport parameters parameters include encoding encoding use
set uri scheme aka protocol eg setschemehttps urisyntaxexception given scheme contains illegal characters
get query string map convenience parameter contains multiple values eg p1onep1two values inserted list paramter key p1 onetwo note live map therefore cannot call uriquerya bcd modify query string instead generated map parameters instead need use removequeryparamstring first call setquerymap set entire query string map string namevalue pairs representing uris query string
add parameters uribuilders existing query string parameters may passed either single map argument list named arguments eg uribuilderaddqueryparams one1two2 uribuilderaddqueryparams three 3 parameters already exist uri query values not replace them multiple values query parameter may added putting list see setquerymap params parameters add existing uri query if any uribuilder instance method chaining urisyntaxexception
returns contentencodingtypegzip encoding string added acceptencoding header base class
wraps raw entity gzipdecompressingentity
1
returns gzipinputstream wraps original entitys content stream httpentitygetcontent
implementation adds gzipencoding deflateencoding handler registry override method provide different set defaults map contentencoding strings contentencoding handlers
add request response interceptors httpclient provide transparent decoding given contentencoding types method called httpbuilder probably need modified subclasses client client set request response interceptors encodings encoding name either contentencodingtype contentencoding string
set entire uri used request acceptable parameter types are url uri uribuilder parameter type assumed tostring method produces valid uri note want change portion request uri eg host port path etc call geturi return uribuilder manipulate portions request uri uri uri use request urisyntaxexception argument given valid uri uribuilderconverttouriobject
convenience method perform http form patch response closure called successful response a failed response ie http status code 399 handled registered failure handler defaultfailurehandlerhttpresponsedecorator default failure handler throws httpresponseexception the request body specified body named parameter converted urlencoded form string unless different requestcontenttype named parameter passed method see encoderregistryencodeformmap args see requestconfigdelegatesetpropertiesfrommapmap responseclosure code handle successful http response value returned response closure clientprotocolexception ioexception urisyntaxexception uri argument given represent valid uri
convenience method set request contenttype time request body set variation setbodyobject object allows different contenttype expected response example httprequestposthtml request data interpreted jsonbuilder closure httpbuilders default encoderregistry implementation send textjavascript onetwothree response contenttype specified outer request argument responsesuccess resp html send call equivalent following requestcontenttype textjavascript body onetwothree contenttype either contenttype equivalent contenttype string like textxml requestbody
set default http proxy used requests host host name ip port port 1 default port scheme usually http https null default httphosthttphoststring int string
parse response data based given contenttype given contenttype contenttypeany contenttype header response used determine parse response resp contenttype whatever returned parser retrieved given contenttype null parser could found contenttype parser also return null response contain content eg response head request httpresponseexception error parsing response
valid arguments urieither uri url object whose tostring method produces valid uri string parameter supplied httpbuilders default uri used pathrequest path merged uri querymap url query parameters headersmap http headers contenttyperequest content type accept header supplied httpbuilders default contenttype used requestcontenttypecontent type request different expected response contenttype bodyrequest body encoded based given contenttype args named parameters set properties delegate urisyntaxexception uri argument represent valid uri
this default responsesuccess handler executed response handled statuscodespecific handler ie response200 generic success handler given ie responsesuccess handler simply returns parsed data response body cases probably want define responsesuccess handler request closure replace response handler defined method in practice usersupplied response handler closure designed handle streaming content read directly response stream without buffering much efficient therefore recommended request method variants used explicitly accept response handler closure cases resp http response parseddata parsed data resolved instances httpresponsecontenttypefinder parsed data object whatever parser returns responseparseexception error buffering streaming response
get proper response handler response code called httpbuilder class order find proper handler based response status code statuscode http response status code response handler
give default uri used request methods dont explicitly take uri parameter defaulturi either url uri object whose tostring produces valid uri string see uribuilderconverttouriobject urisyntaxexception given argument represent valid uri
create requestconfigdelegate given arguments execute config closure pass delegate dorequestrequestconfigdelegate actually executes request
make http request using default uri given method contenttype configuration method httprequestfactory http method contenttype either contenttype valid contenttype string configclosure request configuration options whatever value returned executed response handler clientprotocolexception ioexception requestobject httprequestfactory object closure
set request body value may type supported associated encoderregistry request encoder is value body interpreted encoder associated current getrequestcontenttype request contenttype body data closure interpreted request body sendobject object
convenience method perform http post use httpbuilders gethandler registered response handlers handle success failure status codes default success response handler attempt parse data simply return parsed object note using defaultsuccesshandlerhttpresponsedecorator object default success response handler sure read caveat regarding streaming response data args see requestconfigdelegatesetpropertiesfrommapmap whatever returned response closure ioexception urisyntaxexception uri argument given represent valid uri clientprotocolexception gethandler defaultsuccesshandlerhttpresponsedecorator object defaultfailurehandlerhttpresponsedecorator
convenience method perform http get use httpbuilders gethandler registered response handlers handle success failure status codes default success response handler attempt parse data simply return parsed object note using defaultsuccesshandlerhttpresponsedecorator object default success response handler sure read caveat regarding streaming response data args see requestconfigdelegatesetpropertiesfrommapmap whatever returned response closure urisyntaxexception uri argument given represent valid uri ioexception clientprotocolexception gethandler defaultsuccesshandlerhttpresponsedecorator object defaultfailurehandlerhttpresponsedecorator
give default uri used request methods dont explicitly take uri parameter default contenttype used request encoding response parsing defaulturi either url uri object whose tostring produces valid uri string see uribuilderconverttouriobject defaultcontenttype contenttype string see contenttype common types urisyntaxexception uri argument represent valid uri
set contenttype used data request body well accept contenttype used parsing response value either contenttype value string ie textplain default httpbuildergetcontenttype requests explicitly pass contenttype parameter such httpbuilderrequesthttprequestfactory object closure ct value used contenttype accept request headers
creates default response handlers statussuccess success statusfailure failure status codes used populate handler map new httpbuilder instance created default response handler map defaultsuccesshandlerhttpresponsedecorator object defaultfailurehandlerhttpresponsedecorator
convenience method perform http patch use httpbuilders gethandler registered response handlers handle success failure status codes default success response handler attempt parse data simply return parsed object note using defaultsuccesshandlerhttpresponsedecorator object default success response handler sure read caveat regarding streaming response data args see requestconfigdelegatesetpropertiesfrommapmap whatever returned response closure ioexception urisyntaxexception uri argument given represent valid uri clientprotocolexception gethandler defaultsuccesshandlerhttpresponsedecorator object defaultfailurehandlerhttpresponsedecorator
set default headers add requests made builder instance values replace previously set default headers headers map header names values
convenience method perform http form post response closure called successful response a failed response ie http status code 399 handled registered failure handler defaultfailurehandlerhttpresponsedecorator default failure handler throws httpresponseexception the request body specified body named parameter converted urlencoded form string unless different requestcontenttype named parameter passed method see encoderregistryencodeformmap args see requestconfigdelegatesetpropertiesfrommapmap responseclosure code handle successful http response value returned response closure clientprotocolexception ioexception urisyntaxexception uri argument given represent valid uri
convenience method perform http get response closure called successful response a failed response ie http status code 399 handled registered failure handler defaultfailurehandlerhttpresponsedecorator default failure handler throws httpresponseexception args see requestconfigdelegatesetpropertiesfrommapmap responseclosure code handle successful http response value returned response closure clientprotocolexception ioexception urisyntaxexception uri argument given represent valid uri
make request given http method contenttype additional options configured configclosure see requestconfigdelegate options uri either url uri object whose tostring produces valid uri string see uribuilderconverttouriobject method httprequestfactory http method contenttype either contenttype valid contenttype string configclosure closure configure options like requestconfigdelegategeturi uripath uribuildersetquerymap request parameters requestconfigdelegatesetheadersmap headers requestconfigdelegatesetbodyobject object request body requestconfigdelegategetresponse response handlers whatever value returned executed response handler clientprotocolexception ioexception urisyntaxexception uri argument represent valid uri
request contenttype different contenttype
allow propertystyle access header values getatstring except simply returns headers string value instead header object name header name eg contenttype header null exist response
return headersdecorator provides groovy api accessing response headers headers response
used allow groovy iteration methods response headers example responseheaderseach println itname itvalue
helper method get contenttype string response no charset resp
set ntlm authentication credentials used given host port host port user pass workstation domain
set authentication credentials used given host port host port user pass
oauth2 sign requests note currently not wait wwwauthenticate challenge sending oauth header requests domains signed instance this assumes youve already generated accesstoken site youre targeting information achieve this see hrefhttpsgithubcomscribejavascribejavawikigettingstartedscribe documentation accesstoken 051
oauth sign requests note currently not wait wwwauthenticate challenge sending oauth header requests domains signed instance this assumes youve already generated accesstoken secrettoken site youre targeting information achieve this see hrefhttpsgithubcomscribejavascribejavawikigettingstartedscribe documentation consumerkey null want unset oauth handling stop signing requests consumersecret accesstoken secrettoken 051
set authentication credentials used current httpbuildergeturi default host method name bit misnomer since credentials actually work digest authentication well user pass
sets certificate used ssl authentication see classgetresourcestring get url resource classpath keystorepath url jks keystore certificate stored keystorepassword password decrypt keystore keystoretype certificate type keystore key store truststorepath url trust store truststorepassword password decrypt trust store truststoretype certificate type truststore trust store port ssl port hostnameverifier x509hostnameverifier use sslconnectionsocketfactory sslconnectionsocketfactory use
set ntlm authentication credentials used current httpbuildergeturi default host user pass
creates new proxy selector route planner schemeregistry scheme registry proxyselector proxy selector
prints response print stream string representing response
returns true body question probably contains human readable text uses small sample code points detect unicode control characters commonly used binary file signatures
change level interceptor logs
returns input stream containing one certificate pem files implementation embeds pem files java strings applications instead read resource file gets bundled application
returns trust manager trusts certificates none other https services whose certificates signed certificates fail sslhandshakeexception this used replace host platforms builtin trusted certificates custom set useful development certificate authoritytrusted certificates arent available production avoid reliance thirdparty certificate authorities see also certificatepinner limit trusted certificates still using host platforms builtin trust store warning customizing trusted certificates dangerous relying trusted certificates limits server teams ability update tls certificates installing specific set trusted certificates take additional operational complexity limit ability migrate certificate authorities use custom trusted certificates production without blessing servers tls administrator
returns trust manager trusts vms default certificate authorities
returns vms default ssl socket factory using trustmanager trusted root certificates
shows browser url authorize app act user
waits oauth session client set
starts real time messaging session
set oauth session client
browser hits redirect url use provided code ask slack session
see httpsapislackcommethodsrtmstart
see httpsapislackcommethodsoauthaccess
see httpsapislackcomrtm
see httpsapislackcomdocsoauth
sets results hostname
clears results hostname
allocates returns count fake addresses like 25500100 25500101
see finalizationtester discussion best trigger gc tests httpsandroidgooglesourcecomplatformlibcoremastersupportsrctestjavalibcore javalangreffinalizationtesterjava
returns okhttpclient tests use starting point the shared instance allows tests share single connection pool prevents idle connections consuming unnecessary resources connections wait evicted this client also configured slightly deterministic returning single ip address hosts regardless actual number ip addresses reported dns
sets response cache used read write cached responses
creates javanetcacheresponse correct subtype using information gathered supplied response
extracts okhttp headers supplied javanetcacheresponse real headers extracted see extractstatuslinejavanetcacheresponse
extracts status line supplied java api javanethttpurlconnection per spec status line held header null key returns null status line
extracts status line supplied java api javanetcacheresponse per spec status line held header null key throws protocolexception status line
creates okhttp responsebody containing supplied information
returns headers header names values map
creates okhttp responsebody containing supplied information
creates okhttp response using supplied uri urlconnection supply data urlconnection assumed already connected method returns null response uncacheable
extracts okhttp headers supplied javanethttpurlconnection real headers extracted see extractstatuslinejavanethttpurlconnection
creates okhttp response using supplied request cacheresponse supply data
creates okhttp request supplied information this method allows null value requestheaders situations connection already connected access headers lost see javanethttpurlconnectiongetrequestproperties details
creates javanethttpurlconnection correct subclass supplied okhttp response
returns cacheresponse delegate converting okhttp request arguments required responsecache
convert request header okhttps cookies via httpcookie extra step handles multiple cookies single request header cookieparse doesnt support
creates urlstreamhandler javaneturlseturlstreamhandlerfactory this code configures okhttp handle http https connections created javaneturlopenconnection okhttpclient okhttpclient new okhttpclient urlseturlstreamhandlerfactorynew okurlfactoryokhttpclient
returns immutable map containing field list values valuefornullkey request line requests status line responses nonnull value mapped null key
weve buffered entire request body update request headers body itself happens late enable httpurlconnection users complete socket connection sending request body bytes
returns value field corresponding fieldname null field field multiple values last value returned
returns value field position returns null fewer position headers
returns s control characters nonascii characters replaced
throws throwable either ioexception runtimeexception error
returns true either a specific proxy explicitly configured connection the response already retrieved proxy javanetproxyselector selected order get it warning method may return false attempting connect true afterwards
aggressively tries get final http response potentially making many http requests process order cope redirects authentication
returns input stream server case error requested file txt htm html found remote server
consumes field name specified length optional optional trailing space returns number bytes skipped
consumes r rn n source
process next event result single call callbackonevent unless data section empty number calls callbackonretrychange may occur processing event false eof reached
returns true first bytes source key followed newline
either writes request sink measures content length one method doubleduty make sure counting content consistent particularly comes awkward operations like measuring encoded length header strings lengthindigits encoded integer
configure factory provide percall scoped listeners receive analytic events client eventlistener semantics restrictions listener implementations
sets default write timeout new connections value 0 means timeout otherwise values must 1 integermaxvalue converted milliseconds the write timeout applied individual write io operations default value 10 seconds sinktimeout
configure single client scoped listener receive analytic events client eventlistener semantics restrictions listener implementations
sets default timeout complete calls value 0 means timeout otherwise values must 1 integermaxvalue converted milliseconds the call timeout spans entire call resolving dns connecting writing request body server processing reading response body call requires redirects retries must complete within one timeout period the default value 0 imposes timeout
sets default connect timeout new connections value 0 means timeout otherwise values must 1 integermaxvalue converted milliseconds the connect timeout applied connecting tcp socket target host default value 10 seconds
sets dispatcher used set policy execute asynchronous requests must null
sets interval http2 web socket pings initiated client use automatically send ping frames either connection fails closed keeps connection alive may detect connectivity failures if server respond ping pong within interval client assume connectivity lost happens web socket connection canceled listener plain websocketlisteneronfailure notified failure happens http2 connection connection closed calls carrying plain javaioioexception fail ioexception the default value 0 disables clientinitiated pings
sets proxy selection policy used proxy proxy specified explicitly proxy selector may return multiple proxies case tried sequence successful connection established if unset proxyselectorgetdefault systemwide default proxy selector used
sets certificate pinner constrains certificates trusted default https connections rely sslsocketfactory ssl socket factory establish trust pinning certificates avoids need trust certificate authorities
sets connection pool used recycle http https connections if unset new connection pool used
sets default read timeout new connections value 0 means timeout otherwise values must 1 integermaxvalue converted milliseconds the read timeout applied tcp socket individual read io operations including source response default value 10 seconds socketsetsotimeoutint sourcetimeout
configure client follow redirects unset redirects followed
sets socket factory used secure https connections unset system default used sslsocketfactory expose x509trustmanager field okhttp needs build clean certificate chain method instead must use reflection extract trust manager applications prefer call sslsocketfactorysslsocketfactory x509trustmanager avoids reflection
sets socket factory used create connections okhttp uses parameterless socketfactorycreatesocket createsocket method create unconnected sockets overriding method e g allows socket bound specific local address if unset socketfactorygetdefault systemwide default socket factory used
sets socket factory trust manager used secure https connections unset system defaults used most applications call method instead use system defaults classes include special optimizations lost implementations decorated if necessary create configure defaults following code trustmanagerfactory trustmanagerfactory trustmanagerfactorygetinstance trustmanagerfactorygetdefaultalgorithm trustmanagerfactoryinitkeystore null trustmanager trustmanagers trustmanagerfactorygettrustmanagers trustmanagerslength 1 trustmanagers0 instanceof x509trustmanager throw new illegalstateexceptionunexpected default trust managers arraystostringtrustmanagers x509trustmanager trustmanager x509trustmanager trustmanagers0 sslcontext sslcontext sslcontextgetinstancetls sslcontextinitnull new trustmanager trustmanager null sslsocketfactory sslsocketfactory sslcontextgetsocketfactory okhttpclient client new okhttpclientbuilder sslsocketfactorysslsocketfactory trustmanager build
sets handler accept cookies incoming http responses provides cookies outgoing http requests if unset plain cookiejarnocookies cookies accepted provided
sets default write timeout new connections value 0 means timeout otherwise values must 1 integermaxvalue converted milliseconds the write timeout applied individual write io operations default value 10 seconds sinktimeout
uses request connect new web socket
sets verifier used confirm response certificates apply requested hostnames https connections if unset default hostname verifier used
sets response cache used read write cached responses
sets response cache used read write cached responses
sets interval http2 web socket pings initiated client use automatically send ping frames either connection fails closed keeps connection alive may detect connectivity failures if server respond ping pong within interval client assume connectivity lost happens web socket connection canceled listener plain websocketlisteneronfailure notified failure happens http2 connection connection closed calls carrying plain javaioioexception fail ioexception the default value 0 disables clientinitiated pings
sets default connect timeout new connections value 0 means timeout otherwise values must 1 integermaxvalue converted milliseconds the connect timeout applied connecting tcp socket target host default value 10 seconds
sets dns service used lookup ip addresses hostnames if unset dnssystem systemwide default dns used
sets authenticator used respond challenges proxy servers use authenticator set authenticator origin servers if unset plain authenticatornone authentication attempted
configure client retry connectivity problem encountered default client silently recovers following problems unreachable ip addresses urls host multiple ip addresses failure reach individual ip address doesnt fail overall request increase availability multihomed services stale pooled connections connectionpool reuses sockets decrease request latency connections occasionally time out unreachable proxy servers proxyselector used attempt multiple proxy servers sequence eventually falling back direct connection set false avoid retrying requests destructive case calling application recovery connectivity failures
sets http proxy used connections created client takes precedence proxyselector honored proxy null which default disable proxy use completely call proxyproxynoproxy
sets default read timeout new connections value 0 means timeout otherwise values must 1 integermaxvalue converted milliseconds the read timeout applied tcp socket individual read io operations including source response default value 10 seconds socketsetsotimeoutint sourcetimeout
configure protocols used client communicate remote servers default client prefer efficient transport available falling back ubiquitous protocols applications call method avoid specific compatibility problems web servers behave incorrectly http2 enabled the following protocols currently supported hrefhttpwwww3orgprotocolsrfc2616rfc2616htmlhttp11 hrefhttpstoolsietforghtmlrfc7540h2 hrefhttpstoolsietforghtmlrfc7540section34h2 prior knowledge cleartext only this evolving set future releases include support transitional protocols http11 transport never dropped if multiple protocols specified hrefhttptoolsietforghtmldraftietftlsapplayerprotonegalpn used negotiate transport protocol negotiation attempted https urls protocolhttp10 supported set requests initiated http11 server responds http10 exposed responseprotocol protocols protocols use order preference list contains protocolh2priorknowledge must protocol https urls supported otherwise list must contain protocolhttp11 list must contain null protocolhttp10
sets authenticator used respond challenges origin servers use proxyauthenticator set authenticator proxy servers if unset plain authenticatornone authentication attempted
configure client follow redirects https http http https if unset protocol redirects followed different builtin httpurlconnections default
sets default timeout complete calls value 0 means timeout otherwise values must 1 integermaxvalue converted milliseconds the call timeout spans entire call resolving dns connecting writing request body server processing reading response body call requires redirects retries must complete within one timeout period the default value 0 imposes timeout
returns true socket currently configured supports connection spec order socket compatible enabled cipher suites protocols must intersect for cipher suites least one ciphersuites required cipher suites must match sockets enabled cipher suites required cipher suites socket must least one cipher suite enabled for protocols least one tlsversions required protocols must match sockets enabled protocols
since okhttp 313 tlsconnections expected support tls extensions future release setting true unnecessary setting false effect
applies spec sslsocket
returns copy omits cipher suites tls versions enabled sslsocket
returns response byte array this method loads entire response body memory response body large may trigger outofmemoryerror prefer stream response body possibility response
returns new response body transmits content contenttype nonnull lacks charset use utf8
returns new response body transmits content
returns response string if response starts hrefhttpsenwikipediaorgwikibyteordermarkbyte order mark bom consumed used determine charset response bytes otherwise response contenttype header specifies charset used determine charset response bytes otherwise response bytes decoded utf8 this method loads entire response body memory response body large may trigger outofmemoryerror prefer stream response body possibility response
returns new response body transmits content
returns new response body transmits content
returns response character stream if response starts hrefhttpsenwikipediaorgwikibyteordermarkbyte order mark bom consumed used determine charset response bytes otherwise response contenttype header specifies charset used determine charset response bytes otherwise response bytes decoded utf8
returns string describes call doesnt include full url might contain sensitive information
attempt enqueue async call executorservice attempt clean executor shut reporting call failed
returns charset used encode credentials
returns copy charset expects credential encoded charset
returns cache control directives response never null even response contains cachecontrol header
sets requests cachecontrol header replacing cache control headers already present cachecontrol doesnt define directives clears requests cachecontrol headers
removes headers builder adds headers
sets url target request illegalargumentexception url valid http https url avoid exception calling httpurlparse returns null invalid urls
removes headers named name builder
attaches tag request using type key tags read request using requesttag use null remove existing tag assigned type use api attach timing debugging application data request may read interceptors event listeners callbacks
adds header name value prefer method multiplyvalued headers like cookie note headers including contentlength contentencoding okhttp may replace value header derived request body
sets header named name value request already headers name replaced
sets url target request illegalargumentexception scheme url http https
confirms least one certificates pinned hostname peercertificates nothing certificates pinned hostname okhttp calls successful tls handshake connection used sslpeerunverifiedexception peercertificates dont match certificates pinned hostname
pins certificates pattern pattern lowercase host name wildcard pattern examplecom pins sha256 sha1 hashes pin hash certificates subject public key info base64encoded prefixed either sha256 sha1
returns certificate pinner uses certificatechaincleaner
replaced checkstring list
returns sha256 certificates public key in okhttp 312 earlier returned sha1 hash public key types supported sha256 preferred
returns list matching certificates pins hostname returns empty list hostname pinned certificates
promotes eligible calls readyasynccalls runningasynccalls runs executor service must called synchronization executing calls call user code true dispatcher currently running calls
used asynccallrun signal completion
set maximum number requests host execute concurrently limits requests urls host name note concurrent requests single ip address may still exceed limit multiple hostnames may share ip address routed http proxy if maxrequestsperhost requests flight invoked requests remain flight websocket connections hosts do not count limit
set maximum number requests execute concurrently requests queue memory waiting running calls complete if maxrequests requests flight invoked requests remain flight
returns snapshot calls currently awaiting execution
cancel calls currently enqueued executing includes calls executed plain callexecute synchronously plain callenqueue asynchronously
returns snapshot calls currently executed
returns last value corresponding specified field parsed http date null either field absent cannot parsed date
add header specified name value validation header names allowing nonascii values
returns headers alternating header names values must even number arguments must alternate header names values
add header specified name value validation header names values
add header line without validation appropriate headers remote peer cache
adds headers existing collection
add field specified value without validation appropriate headers remote peer cache
set field specified date field found added field found existing values replaced
set field specified instant field found added field found existing values replaced
returns headers header names values map
add header specified name formatted date validation header names value
add header specified name formatted instant validation header names value
set field specified value field found added field found existing values replaced
returns immutable caseinsensitive set header names
returns true other headers object headers casing order note two headers instances may semantically equal equal according method particular none following sets headers equal according method 1 original contenttype texthtml contentlength 50 2 different order contentlength 50 contenttype texthtml 3 different case contenttype texthtml contentlength 50 4 different values contenttype texthtml contentlength 050 applications require semantically equal headers convert canonical form comparing equality
equivalent buildgetname potentially faster
returns last value corresponding specified field parsed http date null either field absent cannot parsed date
add header line containing field name literal colon value
returns number bytes required encode headers using http11 also approximate size http2 headers compressed hpack value intended used metric smaller headers efficient encode transmit
returns immutable list header values name
returns iterator urls cache iterator doesnt throw concurrentmodificationexception new responses added iterating urls returned existing responses evicted iteration absent unless already returned the iterator supports plain iteratorremove removing url iterator evicts corresponding response cache use evict selected responses
reads entry input stream typical entry looks like this httpgooglecomfoo get 2 acceptlanguage frca acceptcharset utf8 http11 200 ok 3 contenttype imagepng contentlength 100 cachecontrol maxage600 a typical https file looks like this httpsgooglecomfoo get 2 acceptlanguage frca acceptcharset utf8 http11 200 ok 3 contenttype imagepng contentlength 100 cachecontrol maxage600 aes256withmd5 2 base64encoded peercertificate0 base64encoded peercertificate1 1 tlsv12 file newline separated first two lines url request method next number http vary request header lines followed lines next response status line followed number http response header lines followed lines https responses also contain ssl session information begins blank line line containing cipher suite next length peer certificate chain certificates base64encoded appear line next line contains length local certificate chain certificates also base64encoded appear line length 1 used encode null array last line optional present contains tls version
adds header name value prefer method multiplyvalued headers like setcookie
sets header named name value request already headers name replaced
peeks bytecount bytes response body returns new response body fewer bytecount bytes response body full response body returned bytecount bytes response body returned value truncated bytecount bytes it error call method body consumed warning method loads requested bytes memory applications set modest limit bytecount 1 mib
returns rfc 7235 authorization challenges appropriate responses code response code 401 unauthorized returns wwwauthenticate challenges response code 407 proxy unauthorized returns proxyauthenticate challenges otherwise returns empty list challenges if challenge uses token68 variant instead auth params exactly one auth param challenge key null invalid headers challenges ignored semantic validation done example basic auth must realm auth param caller interprets challenges
removes headers builder adds headers
returns true response redirects another resource
closes response body equivalent bodyclose it error close response eligible body includes responses returned cacheresponse networkresponse priorresponse
returns cache control directives response never null even response contains cachecontrol header
returns trailers http response may empty error call entire http response body consumed
add part body
either writes request sink measures content length one method doubleduty make sure counting content consistent particularly comes awkward operations like measuring encoded length header strings lengthindigits encoded integer
appends quotedstring stringbuilder rfc 2388 rather vague one escape special characters formdata parameters turns firefox chrome actually rather different things say comments theyre really sure right approach is go chromes behavior which also experimentally seems match ie does actually want good chance things working please avoid doublequotes newlines percent signs like field names
assemble specified parts request body
set mime type expected values type mixed the default alternative digest parallel form
returns list encoded path segments like a b c url httphostabc list never empty though may contain single empty string summary url encodedpathsegments httphost httphostabc a b c httphostab20cd a b20c d
returns url uri javaneturi uri strict class returned uri may semantically different url characters forbidden uri like escaped invalid percentencoded sequences like xx encoded like 25xx whitespace control characters fragment stripped these differences may significant consequence uri interpreted webserver reason plain uri uri class method avoided
returns urls encoded fragment like abc httphostabc returns null url fragment summary url encodedfragment httphostnull httphost httphostabc abc httphostabcdef abcdef
returns url would retrieved following link url null resulting url wellformed
returns first query parameter named name decoded using utf8 null query parameter summary url queryparametera httphostnull httphostnull httphostaapplekkeylime apple httphostaappleaapricot apple httphostaappleb apple
returns number slashes input starting pos
returns query url encoded use http resource resolution returned string may null for urls query empty for urls empty query nonempty all urls summary url encodedquery httphostnull httphost httphostaapplekkeylime aapplekkeylime httphostaappleaapricot aappleaapricot httphostaappleb aappleb
returns index input scheme characters returns 1 input scheme starts pos
adds set encoded path segments separated slash either encodedpathsegments starts slash resulting url empty path segment
returns urls query like abc httphostabc callers prefer queryparametername queryparametervalue methods offer direct access individual query parameters summary url query httphostnull httphost httphostaapplekkeylime lime httphostaappleaapricot aappleaapricot httphostaappleb aappleb
returns 80 schemeequalshttp 443 schemeequalshttps 1 otherwise
removes path segment method returns last segment always means encoded path trailing popping abc yields ab case list path segments goes a b c a b popping abc also yields ab list path segments goes a b c a b
returns domain name urls host one level beneath public suffix consulting hrefhttpspublicsuffixorgpublic suffix list returns null urls host ip address considered public suffix public suffix list in general method should not used test whether domain valid routable instead dns recommended source information summary url topprivatedomain httpgooglecom googlecom httpadwordsgooglecouk googlecouk httpsquarenull httpcouknull httplocalhostnull http127001null
returns builder url would retrieved following link url null resulting url wellformed
returns password empty string none set summary url encodedpassword httphost httpusernamehost httpusernamepasswordhost password httpa20bc20dhost c20d
adds set path segments separated slash either pathsegments starts slash resulting url empty path segment
returns values query parameter name ordered appearance url example returns banana queryparametervalueb summary url queryparametervaluesa queryparametervaluesb httphost httphost httphostaapplekkeylime apple httphostaappleaapricot apple apricot httphostaappleb apple null
returns name query parameter index example returns a queryparametername0 throws index less plain querysize query size summary url queryparametername0 queryparametername1 httphostexceptionexception httphost exception httphostaapplekkeylime a k httphostaappleaapricot a a httphostaappleb a b
adds path segment input equivalent pops path segment
returns url url javaneturl
adds preencoded query parameter urls query string
finds first input skipping characters square braces
returns distinct query parameter names url like a b url query returns empty set summary url queryparameternames httphost httphost httphostaapplekkeylime a k httphostaappleaapricot a httphostaappleb a b
reencodes components url satisfies obsolete rfc 2396 particularly strict certain components
returns string containing url username password query fragment stripped path replaced example redacting httpusernamepasswordexamplecompath returns httpexamplecom
cuts encodedquery alternating parameter names values divides query string like list subject math easy null problem 523 note values may null may contain characters
returns entire path url encoded use http resource resolution returned path start summary url encodedpath httphost httphostabc abc httphostab20cd ab20cd
returns new httpurl representing url wellformed http https url null isnt
encodes query parameter using utf8 adds urls query string
returns substring input range poslimit following transformations tabs newlines form feeds carriage returns skipped in queries encoded encoded 2b characters encodeset percentencoded control characters nonascii characters percentencoded all characters copied without transformation alreadyencoded true leave asis false convert 25 strict true encode prefix valid percent encoding plusisspace true encode 2b already encoded asciionly true encode nonascii codepoints charset charset use null equals utf8
returns username empty string none set summary url encodedusername httphost httpusernamehost username httpusernamepasswordhost username httpa20bc20dhost a20b
returns value query parameter index example returns apple queryparametername0 throws index less plain querysize query size summary url queryparametervalue0 queryparametervalue1 httphostexceptionexception httphostnullexception httphostaapplekkeylime apple key lime httphostaappleaapricot apple apricot httphostaappleb applenull
host either regular hostname international domain name ipv4 address ipv6 address
returns protocol identified protocol ioexception protocol unknown
returns charset media type defaultvalue either media type doesnt specify charset charset unsupported current runtime
returns media type string null string wellformed media type
returns media type string illegalargumentexception string wellformed media type
returns new request body transmits content contenttype nonnull lacks charset use utf8
returns new request body transmits content file
returns new request body transmits content
returns new request body transmits content
javaname name used java apis cipher suite different iana name older cipher suites prefix ssl instead tls
javaname name used java apis cipher suite different iana name older cipher suites prefix ssl instead tls value integer identifier cipher suite documentation only
returns remote peers principle null peer anonymous
returns local principle null peer anonymous
forobsoleterfc2965 true include leading domain pattern necessary examplecom match wwwexamplecom rfc 2965 extra ignored recent specifications
returns index next date character input invert index next nondate character input
returns positive value attributevalue positive longminvalue either 0 negative value positive range returns longmaxvalue numberformatexception s integer precision
returns domain string like examplecom input domain like examplecom examplecom
parse date specified rfc 6265 section 511
returns true cookie included request url addition check callers also confirm cookie expired
returns cookies set http response headers
sets minimum number seconds response continue fresh for response stale minfresh elapsed cached response used network request made minfresh nonnegative integer stored transmitted timeunitseconds precision finer precision lost
dont accept unvalidated cached response
accept response cache response isnt cached 504 unsatisfiable request response returned
accept cached responses exceeded freshness lifetime maxstale unspecified stale cache responses used maxstale nonnegative integer stored transmitted timeunitseconds precision finer precision lost
sets maximum age cached response cache responses age exceeds maxage used network request made maxage nonnegative integer stored transmitted timeunitseconds precision finer precision lost
dont store servers response cache
dont accept transformed response
returns cache directives headers honors cachecontrol pragma headers present
returns immutable list containing elements
decodes ipv6 address like 11112222333344445555666677778888 1
closes socket ignoring checked exceptions nothing socket null
closes closeable ignoring checked exceptions nothing closeable null
returns immutable copy map
equivalent stringsubstringpos limittrim
returns index first character input contains character delimiters returns limit character
returns system property defaultvalue system property null cannot read eg security policy restrictions
reads in exhausted deadline reached careful extend deadline one exists already
host ip address returns ip address canonical form otherwise performs idn toascii encoding canonicalize result lowercase example converts net xnn3hnet wwwgooglecom wwwgooglecom null returned host cannot toascii encoded result contains unsupported ascii characters
returns index first character input delimiter returns limit character
attempts exhaust source returning true successful useful reading complete source helpful completes cache body frees socket connection reuse
returns true http request a b reuse connection
decodes ipv4 address suffix ipv6 address like 11115555666619216801
returns index first character input either control character like u0000 n nonascii character returns 1 input characters
returns true element first also second method terminates intersection found sizes arguments assumed small likelihood intersection great worth cpu cost sorting memory cost hashing
increments pos inputpos ascii whitespace stops limit
decrements limit inputlimit 1 ascii whitespace stops pos
encodes ipv6 address canonical form according rfc 5952
returns array containing elements found first also second returned elements order first
returns true e due firmware bug fixed android 422 httpscodegooglecompandroidissuesdetailid54072
closes serversocket ignoring checked exceptions nothing serversocket null
remove transmitter connections list allocations returns socket caller close
returns new exchange carry new request response
release connection longer needed called exchange completes call signals exchanges expected force true release connection even exchanges expected call
immediately closes socket connection its currently held use interrupt inflight request thread its callers responsibility close request body response body streams otherwise resources may leaked this method safe called concurrently provides limited guarantees transport layer connection established such http2 stream terminated otherwise socket connection established terminated
prepare create stream carry request prefers use existing connection exists
copy bytecount bytes file pos source callers responsibility make sure sufficient bytes read arent method throws eofexception
write bytecount bytes source file pos
creates new relay reads live stream upstream using file share data sources warning callers method must immediately call newsource create source close theyre done otherwise handle file leaked
returns new source returns bytes upstream returns null relay closed sources possible case callers retry building new relay read
creates relay reads recorded stream file warning callers method must immediately call newsource create source close theyre done otherwise handle file leaked
selects find bytes read read them one three sources upstream case current thread assigned upstream reader read bytes upstream copy file buffer finally release upstream reader lock return new bytes the file case copy bytes file sink the buffer case bytes immediately copied sink number bytes copied returned if upstream would selected another thread already reading upstream block read completes possible time waiting that
returns date value returns null value couldnt parsed
returns path request like get http11 never empty even request url is includes query component exists
returns request status line like get http11 exposed application httpurlconnectiongetheaderfields needs set even transport http2
returns cookie http request header cookies like ab cd
figures http request make response receiving userresponse either add authentication headers follow redirects handle client request timeout followup either unnecessary applicable returns null
report attempt recover failure communicate server returns true e recoverable false failure permanent requests body recovered body buffered failure occurred request sent
returns true commas skipped
returns subset headers responses request impact content responses body
returns names request headers need checked equality caching
returns value positive integer 0 negative defaultvalue cannot parsed
returns true response must possibly 0length body see rfc 7231
parse rfc 7235 challenges awkward need look ahead know interpret token for example first line parameter namevalue pair second line single token68 wwwauthenticate digest foobar wwwauthenticate digest foo similarly first line one challenge second line two challenges wwwauthenticate digest foobar wwwauthenticate digest foo
returns true none vary headers changed cachedrequest newrequest
reads doublequoted string unescaping quoted pairs like 2nd character sequence returns unescaped string null buffer isnt prefixed doublequoted string
returns next index input pos contains character characters returns input length none requested characters found
consumes returns nonempty token terminating special characters tokendelimiters returns null buffer empty prefixed delimiter
returns next nonwhitespace character input white space result undefined input contains newline characters
returns subset headers requestheaders impact content responses body
returns request creates tls tunnel via http proxy everything tunnel request sent unencrypted proxy server tunnels include minimum set headers avoids sending potentially sensitive data like http cookies proxy unencrypted in order support preemptive authentication pass fake auth failed response authenticator gives authenticator option customize connect request decline returning null case okhttp use asis
track failure using connection may prevent connection route used future exchanges
prevent exchanges created connection
returns true connection ready host new streams
settings received adjust allocation limit
make https connection http proxy send unencrypted connect request create proxy connection may need retried proxy requires authorization
returns true connection carry stream allocation address nonnull route resolved route connection
returns true connections route address routes
work necessary build full http https connection raw socket
work build https connection proxy tunnel catch proxy server issue auth challenge close connection
notify pool connection become idle returns true connection removed pool closed
track bad route route database routes attempted first
performs maintenance pool evicting connection idle longest either exceeded keep alive limit idle connections limit returns duration nanos sleep next scheduled call method returns 1 cleanups required
prunes leaked transmitters returns number remaining live transmitters connection transmitters leaked connection tracking application code abandoned them leak detection imprecise relies garbage collection
attempts acquire recycled connection address transmitter returns true connection acquired if routes nonnull resolved routes ie ip addresses connection used coalesce related domains http2 connection squarecom squareca
reports failure complete connection determines next connectionspec try any true connection retried using configuresecuresocketsslsocket false
returns true later connectionspec fallback strategy looks possible based supplied sslsocket assumes future socket capabilities supplied socket
configures supplied sslsocket connect specified host using appropriate connectionspec returns chosen connectionspec never null ioexception socket support tls modes available
returns next proxy try may proxynoproxy never null
prepares socket addresses attempt current proxy host
prepares proxy servers try
finds connection returns healthy unhealthy process repeated healthy connection found
return true route used current connection retried even connection unhealthy biggest gotcha shouldnt reuse routes coalesced connections
returns connection host new stream prefers existing connection exists pool finally building new connection
returns true certificate matches ipaddress
returns true iff hostname matches domain name pattern hostname lowercase host name pattern domain name pattern certificate may wildcard pattern androidcom
returns true certificate matches hostname
returns cleaned chain chain this method throws complete chain trusted ca certificate cannot constructed unexpected unless trust root index class different trust manager used establish chain
returns true toverify signed signingcerts public key
parses dn returns significant attribute value attribute type null none found attributetype attribute type look eg ca
returns new source writes bytes cacherequest read source consumer careful discard bytes left stream closed otherwise may never exhaust source stream therefore complete cached response
returns true fieldname content specific therefore always used cached headers
returns true fieldname endtoend http header defined rfc 2616 1351
combines cached headers network headers defined rfc 7234 434
returns iterator caches current entries iterator doesnt throw concurrentmodificationexception new entries added iterating new entries returned iterator existing entries removed iteration absent unless already returned if io problems iteration iterator fails silently example hosting filesystem becomes unreachable iterator omit elements rather throwing exceptions the caller must snapshotclose close snapshot returned iteratornext failing leaks open files the returned iterator supports iteratorremove
returns snapshot entry named key null doesnt exist currently readable value returned moved head lru queue
create cache reside directory cache lazily initialized first access created exist directory writable directory valuecount number values per cache entry must positive maxsize maximum number bytes cache use store
append spaceprefixed lengths writer
returns unbuffered input stream read last committed value null value committed
deletes stored values cache inflight edits complete normally values stored
closes cache stored values remain filesystem
rebuild journal halve size journal eliminate least 2000 ops
aborts edit releases edit lock another edit may started key
commits edit visible readers releases edit lock another edit may started key
creates new journal omits redundant information replaces current journal exists
returns number bytes currently used store values cache may greater max size background deletion pending
computes initial size collects garbage part opening cache dirty entries assumed inconsistent deleted
force buffered operations filesystem
returns new unbuffered output stream write value index underlying output stream encounters errors writing filesystem edit aborted commit called returned output stream throw ioexceptions
returns snapshot entry opens streams eagerly guarantee see single published snapshot opened streams lazily streams could come different edits
prevents editor completing normally necessary either edit causes io error target entry evicted editor active either case delete editors created files prevent new files created note editor detached possible another editor edit entry
closes cache deletes stored values delete files cache directory including files werent created cache
set lengths using decimal numbers like 10123
changes maximum number bytes cache store queues job trim existing store necessary
drops entry key exists removed entry key currently edited edit complete normally value stored true entry removed
returns strategy use assuming request use network
returns current age response milliseconds calculation specified rfc 7234 423 calculating age
returns true response stored later serve another request
returns strategy satisfy request using cached response response
returns number milliseconds response fresh for starting served date
testing force web socket release threads
attempts remove single frame queue send it prefers write urgent pongs less urgent messages close frames example its possible caller enqueue messages followed pongs sends pongs followed messages pongs always written order enqueued if frame cannot sent none enqueued web socket connected nothing returns false otherwise returns true caller immediately invoke method returns false this method may invoked writer thread may thread invoking method time
receive frames more invoked reader thread
testing receive single frame return true frames read invoked reader thread
stream message payload series frames allows control frames interleaved parts message
send close frame optional code reason code status code defined hrefhttptoolsietforghtmlrfc6455section74section 74 rfc 6455 0 reason reason shutting null
process next protocol frame if control frame result single call framecallback if message frame result single call framecallbackonreadmessage message spans multiple frames interleaved control frame result corresponding call framecallback
read headers process control frames reach noncontrol frame
reads message body across one frames control frames occur fragments processed message payload masked unmask its processed
attempt match host runtime capable platform implementation
returns object holds stack trace created moment method executed used specifically javaiocloseable objects conjunction logcloseableleakstring object
returns concatenation 8bit length prefixed protocol names httptoolsietforghtmldraftagltlsnextprotoneg04page4
sets delegate timeout timeoutnone resets underlying timeout default configuration use avoid unexpected sharing timeouts pooled connections
reads headers trailers
returns bytes request header sending http transport
response body connect empty consume proceeding
prepares http headers sends server for streaming requests body headers must prepared before output stream written to otherwise body would need buffered for nonstreaming requests body headers must prepared after output stream written closed ensures contentlength header field receives proper value
closes cache entry makes socket available reuse invoked end body reached
testing sends ping waits pong
sendconnectionpreface true send connection preface frames always true except tests dont check connection preface
callers method thread safe sometimes application threads often method called send buffer worth data peer writes subject write window stream connection window sufficient send bytecount caller block example user httpurlconnection flushes bytes output stream connections write window block zero bytecount writes subject flow control block use case zero bytecount closing flushed output stream
degrades connection new streams neither created locally accepted remote peer existing streams impacted intended permit endpoint gracefully stop accepting new requests without harming previously established streams
testing waits requiredpongcount pings received peer
eagerly reads bytecount bytes source launching background task process data avoids corrupting stream
returns new serverinitiated stream associatedstreamid stream triggered sender create stream true create output stream use send data remote peer corresponds flagfin
merges settings peers settings sends remote peer
returns headers name value block containing http2 response
creates frame reader max header table size 4096
like wait throws interruptedioexception interrupted instead awkward interruptedexception
returns true stream open stream open either a synreset frame abnormally terminates stream both input output streams transmitted data headers note input stream may continue yield data even stream reports open input data buffered
returns true stream created peer
accept headers network store client calls takeheaders framingsourceread them
returns trailers safe call source stream completely exhausted
abnormally terminate stream enqueues rststream frame returns immediately
returns sink used write data peer illegalstateexception stream initiated peer writeheaders yet sent
returns true stream closed
removes returns streams received response headers blocking necessary headers received returned list contains multiple blocks headers blocks delimited null
abnormally terminate stream blocks rststream frame transmitted
emit single data frame connection frames size limited streams write window method block write window nonempty
delta negative settings frame initial window smaller last
sends reply incoming stream outfinished true eagerly finish output stream send data remote peer corresponds flagfin flushheaders true force flush response headers true unless response body exists written immediately
http2 response cannot contain uppercase header characters must treated malformed
returns count entries evicted
reads potentially huffman encoded byte string
read bytecount bytes headers source stream implementation propagate never indexed flag header
returns count entries evicted
index 1 new
returns true value assigned setting id
returns 1 unset
writes other this setting populated other value flags other kept
http2 only send push promise header block a push promise contains headers pertain serverinitiated request promisedstreamid response frames delivered push promise frames sent part response streamid promisedstreamid priority one greater streamid streamid clientinitiated stream id must odd number promisedstreamid serverinitiated stream id must even number requestheaders minimally includes method scheme authority path
send connectionlevel ping peer ack indicates reply data payload1 payload2 opaque binary rules content
inform peer additional windowsizeincrement bytes sent streamid connection streamid zero
sourcelength may longer max length variants data frame implementations must send multiple frames necessary source buffer draw bytes from may null bytecount 0 bytecount must 0 minimum sourcelength maxdatalength
write okhttps settings peer
tell peer stop creating streams last processed lastgoodstreamid zero streams processed lastgoodstreamid last stream id processed zero streams processed errorcode reason closing connection debugdata valid http2 opaque debug data send
applies peersettings sends settings ack
returns humanreadable representation http2 frame headers the format is direction streamid length type flags direction inbound outbound for example following would indicate head request sent client 0x0000000f 12 headers endheadersendstream
construct terminal node symbol symbol node represents bits length huffman code bits
construct internal node
reads public suffix list treating operation uninterruptible always want read list otherwise well left bad state thread interrupted prior operation reinterrupted list read
visible testing
returns effective toplevel domain plus one etld1 referencing public suffix list returns null domain public suffix private address here examples assertequalsgooglecom geteffectivetldplusonegooglecom assertequalsgooglecom geteffectivetldplusonewwwgooglecom assertnullgeteffectivetldplusonecom assertnullgeteffectivetldplusonelocalhost assertnullgeteffectivetldplusonemymacbook domain canonicalized domain international domain name idn punycode encoded
configure certificate generate 2048bit rsa key provides 112 bits security rsa keys interoperable old clients dont support ecdsa
sets certificates serial number unset serial number 1
adds subject alternative name san certificate usually literal hostname literal ip address hostname pattern subject alternative names added extension omitted
sets certificates organizational unit ou unset field omitted
set certificate signing certificate maxintermediatecas intermediate signing certificates beneath it by default certificate cannot sign certificates set 0 certificate sign certificates but certificates cannot sign certificates set 1 certificate sign intermediate certificates sign certificates add one additional layer intermediates permit
returns rsa private key encoded hrefhttpstoolsietforghtmlrfc5208pkcs 8 hrefhttpstoolsietforghtmlrfc7468pem format
set certificates common name cn historically held hostname tls certificate practice deprecated hrefhttpstoolsietforghtmlrfc2818rfc 2818 replaced addsubjectalternativenamestring subject alternative names unset random string used
set certificate issue certificate unset certificate selfsigned
returns rsa private key encoded hrefhttpstoolsietforghtmlrfc8017pkcs 1 hrefhttpstoolsietforghtmlrfc7468pem format
configure certificate generate 256bit ecdsa key provides 128 bits security ecdsa keys noticeably faster rsa keys this default configuration since api introduced okhttp 3110 note default may change future releases
sets publicprivate key pair used certificate unset key pair generated
sets certificate valid immediately specified duration elapsed precision field seconds precision truncated
returns certificate encoded hrefhttpstoolsietforghtmlrfc7468pem format
sets certificate valid notbeforenotafter endpoints specified format systemcurrenttimemillis specify 1l values use default interval 24 hours starting certificate created
add host platforms trusted root certificates set varies platform android vs java platform release android 44 vs android 9 user customizations most tls clients connect hosts public internet call method otherwise necessary manually prepare comprehensive set trusted roots if host platform compromised misconfigured may contain untrustworthy root certificates applications connect known set servers may able mitigate problem plain certificatepinner certificate pinning
add trusted root certificate use authenticating peer peers must provide chain certificates whose root one these
configure certificate chain use authenticated first certificate held certificate certificates included handshake peer build trusted path trusted root certificate the chain include intermediate certificates need root certificate expect known remote peer peer already certificate transmitting unnecessary
returns ssl client hosts localhost address
returns trust manager trusts trustedcertificates
returns key manager held certificate chain returns empty key manager heldcertificate null
sequencenumber index request connection
serve requests https rather otherwise tunnelproxy true expect http connect method negotiating tls
sets dispatcher used match incoming requests mock responses default dispatcher simply serves fixed sequence responses enqueuemockresponse queue custom dispatchers vary response based timing content request
indicates protocols supported alpn incoming https connections list ignored setprotocolnegotiationenabled negotiation disabled protocols protocols use order preference list must contain plain protocolhttp11 must contain null
returns url connecting server path request path
reads request writes response returns true calls attempted socket
starts server binds given socket address inetsocketaddress socket address bind server
transfer bytes source sink either bytecount bytes transferred source exhausted transfer throttled according policy
respond connect requests switchtosslatend response dispatched
adds new header name value may used add multiple headers name
plain mockwebserversetprotocolsjavautillist protocols include plain okhttp3protocolhttp2 http2 pushes settings writing response
replaces trailers specified
adds header http header wellformed http header contain name followed value
throttles request reader response writer sleep given period series bytesperperiod bytes transferred use simulate network behavior
mockwebserversetprotocolsjavautillist protocols include plain okhttp3protocolhttp2 attaches pushed stream response
sets response body body chunked every maxchunksize bytes
removes headers named name adds new header name value
creates new mock response empty body
removes http headers including contentlength transferencoding headers added default
adds new header name value may used add multiple headers name unlike addheaderstring object validate name value
removes headers named name
attempts perform web socket upgrade connection overwrite previously set status body
replaces headers specified
sets hrefhttpstoolsietforghtmlrfc7540section7http2 error code returned resetting stream valid socketpolicyresetstreamatstart
set delayed time response body delay applies response body only response headers affected
returns first header named name null header exists
returns duplex conversation completes successfully
