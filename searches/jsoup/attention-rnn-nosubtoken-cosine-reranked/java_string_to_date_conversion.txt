public void tail ( Node node , int depth ) { String name = node . nodeName ( ) ; if ( StringUtil . in ( name , "br" , "dd" , "dt" , "p" , "h1" , "h2" , "h3" , "h4" , "h5" ) ) append ( "\n" ) ; else if ( name . equals ( "a" ) ) append ( String . format ( " <%s>" , node . absUrl ( "href" ) ) ) ; }
--------------------------------------------------
public String chompToIgnoreCase ( String seq ) { String data = consumeToIgnoreCase ( seq ) ; matchChomp ( seq ) ; return data ; }
--------------------------------------------------
public String toString ( ) { return String . format ( "[%s~=%s]" , key , pattern . toString ( ) ) ; }
--------------------------------------------------
public String toString ( ) { return String . format ( "[%s^=%s]" , key , value ) ; }
--------------------------------------------------
public String toString ( ) { return String . format ( "[%s=%s]" , key , value ) ; }
--------------------------------------------------
public String toString ( ) { return String . format ( "[%s*=%s]" , key , value ) ; }
--------------------------------------------------
public String toString ( ) { return String . format ( "[%s$=%s]" , key , value ) ; }
--------------------------------------------------
public String toString ( ) { return String . format ( "[%s!=%s]" , key , value ) ; }
--------------------------------------------------
void outerHtmlHead ( Appendable accum , int depth , Document . OutputSettings out ) throws IOException { accum . append ( "<" ) . append ( isProcessingInstruction ? "!" : "?" ) . append ( coreValue ( ) ) ; getWholeDeclaration ( accum , out ) ; accum . append ( isProcessingInstruction ? "!" : "?" ) . append ( ">" ) ; }
--------------------------------------------------
public String toString ( ) { return String . format ( ":containsown(%s)" , searchText ) ; }
--------------------------------------------------
