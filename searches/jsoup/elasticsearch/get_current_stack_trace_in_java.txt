private void popStackToClose ( Token . EndTag endTag ) { String elName = settings . normalizeTag ( endTag . tagName ) ; Element firstFound = null ; for ( int pos = stack . size ( ) - 1 ; pos >= 0 ; pos -- ) { Element next = stack . get ( pos ) ; if ( next . nodeName ( ) . equals ( elName ) ) { firstFound = next ; break ; } } if ( firstFound == null ) return ; for ( int pos = stack . size ( ) - 1 ; pos >= 0 ; pos -- ) { Element next = stack . get ( pos ) ; stack . remove ( pos ) ; if ( next == firstFound ) break ; } }
--------------------------------------------------
public java . lang . String getIdentifier ( ) { java . lang . Object ref = identifier_ ; if ( ref instanceof java . lang . String ) { return ( java . lang . String ) ref ; } else { com . google . protobuf . ByteString bs = ( com . google . protobuf . ByteString ) ref ; java . lang . String s = bs . toStringUtf8 ( ) ; identifier_ = s ; return s ; } }
--------------------------------------------------
private void saveInExtensionClass ( Map < String , Class < ? >> extensionClasses , Class < ? > clazz , String name ) { Class < ? > c = extensionClasses . get ( name ) ; if ( c == null ) { extensionClasses . put ( name , clazz ) ; } else if ( c != clazz ) { throw new IllegalStateException ( 'duplicate extension ' + type . getName ( ) + ' name ' + name + ' on ' + c . getName ( ) + ' and ' + clazz . getName ( ) ) ; } }
--------------------------------------------------
public java . lang . String getIdentifier ( ) { java . lang . Object ref = identifier_ ; if ( ! ( ref instanceof java . lang . String ) ) { com . google . protobuf . ByteString bs = ( com . google . protobuf . ByteString ) ref ; java . lang . String s = bs . toStringUtf8 ( ) ; identifier_ = s ; return s ; } else { return ( java . lang . String ) ref ; } }
--------------------------------------------------
public java . lang . String getClassName ( ) { java . lang . Object ref = className_ ; if ( ! ( ref instanceof java . lang . String ) ) { com . google . protobuf . ByteString bs = ( com . google . protobuf . ByteString ) ref ; java . lang . String s = bs . toStringUtf8 ( ) ; className_ = s ; return s ; } else { return ( java . lang . String ) ref ; } }
--------------------------------------------------
public java . lang . String getClassName ( ) { java . lang . Object ref = className_ ; if ( ref instanceof java . lang . String ) { return ( java . lang . String ) ref ; } else { com . google . protobuf . ByteString bs = ( com . google . protobuf . ByteString ) ref ; java . lang . String s = bs . toStringUtf8 ( ) ; className_ = s ; return s ; } }
--------------------------------------------------
static boolean containsGetSecondsCallInNearbyCode ( MethodInvocationTree nanoTree , VisitorState state , Matcher < ExpressionTree > secondsMatcher , boolean checkProtoChains ) { ExpressionTree getNanoReceiver = ASTHelpers . getReceiver ( nanoTree ) ; TreeScanner < Boolean , Void > scanner = new TreeScanner < Boolean , Void > ( ) { @ Override public Boolean reduce ( Boolean r1 , Boolean r2 ) { return ( r1 == null ? false : r1 ) || ( r2 == null ? false : r2 ) ; } @ Override public Boolean visitLambdaExpression ( LambdaExpressionTree node , Void unused ) { return false ; } @ Override public Boolean visitMethodInvocation ( MethodInvocationTree tree , Void unused ) { if ( super . visitMethodInvocation ( tree , unused ) ) { return true ; } if ( tree != null && secondsMatcher . matches ( tree , state ) ) { ExpressionTree getSecondsReceiver = ASTHelpers . getReceiver ( tree ) ; if ( getSecondsReceiver != null ) { if ( ASTHelpers . sameVariable ( getNanoReceiver , getSecondsReceiver ) ) { return true ; } if ( ! checkProtoChains ) { return false ; } ExpressionTree treeRootAssignable = ASTHelpers . getRootAssignable ( tree ) ; ExpressionTree nanoTreeRootAssignable = ASTHelpers . getRootAssignable ( nanoTree ) ; if ( treeRootAssignable != null && nanoTreeRootAssignable != null && ASTHelpers . sameVariable ( treeRootAssignable , nanoTreeRootAssignable ) ) { List < Symbol > secondsChain = new ArrayList < > ( ) ; boolean allProtoGettersForSeconds = buildChain ( tree , state , secondsChain ) ; List < Symbol > nanosChain = new ArrayList < > ( ) ; boolean allProtoGettersForNanos = buildChain ( nanoTree , state , nanosChain ) ; if ( ! allProtoGettersForSeconds || ! allProtoGettersForNanos ) { return false ; } if ( secondsChain . equals ( nanosChain ) ) { return true ; } } } } return false ; } } ; ImmutableList < Tree > treesToScan = getNearbyTreesToScan ( state ) ; return treesToScan . isEmpty ( ) ? false : scanner . scan ( treesToScan , null ) ; }
--------------------------------------------------
public java . lang . String getClassName ( ) { java . lang . Object ref = className_ ; if ( ref instanceof java . lang . String ) { return ( java . lang . String ) ref ; } else { com . google . protobuf . ByteString bs = ( com . google . protobuf . ByteString ) ref ; java . lang . String s = bs . toStringUtf8 ( ) ; className_ = s ; return s ; } }
--------------------------------------------------
public java . lang . String getMemberDescriptor ( ) { java . lang . Object ref = memberDescriptor_ ; if ( ref instanceof java . lang . String ) { return ( java . lang . String ) ref ; } else { com . google . protobuf . ByteString bs = ( com . google . protobuf . ByteString ) ref ; java . lang . String s = bs . toStringUtf8 ( ) ; memberDescriptor_ = s ; return s ; } }
--------------------------------------------------
public java . lang . String getMemberDescriptor ( ) { java . lang . Object ref = memberDescriptor_ ; if ( ! ( ref instanceof java . lang . String ) ) { com . google . protobuf . ByteString bs = ( com . google . protobuf . ByteString ) ref ; java . lang . String s = bs . toStringUtf8 ( ) ; memberDescriptor_ = s ; return s ; } else { return ( java . lang . String ) ref ; } }
--------------------------------------------------
